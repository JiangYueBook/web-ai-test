{
  "version": 3,
  "sources": ["../lib/wasm/binding/ort-wasm.js", "../lib/wasm/wasm-factory.ts", "../lib/wasm/wasm-utils.ts", "../lib/wasm/run-options.ts", "../lib/wasm/session-options.ts", "../lib/wasm/wasm-common.ts", "../lib/wasm/wasm-core-impl.ts", "../lib/wasm/proxy-wrapper.ts", "../lib/wasm/session-handler-inference.ts", "../lib/backend-wasm.ts", "../lib/backend-wasm-inference.ts", "../lib/index.ts", "../lib/version.ts"],
  "sourcesContent": ["\nvar ortWasm = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(moduleArg = {}) {\n\nvar h=moduleArg,aa,ba;h.ready=new Promise((a,b)=>{aa=a;ba=b});var ca=Object.assign({},h),da=\"./this.program\",ea=\"object\"==typeof window,m=\"function\"==typeof importScripts,fa=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,p=\"\",ha,t,w;\nif(fa){var fs=require(\"fs\"),ia=require(\"path\");p=m?ia.dirname(p)+\"/\":__dirname+\"/\";ha=(a,b)=>{a=a.startsWith(\"file://\")?new URL(a):ia.normalize(a);return fs.readFileSync(a,b?void 0:\"utf8\")};w=a=>{a=ha(a,!0);a.buffer||(a=new Uint8Array(a));return a};t=(a,b,c,d=!0)=>{a=a.startsWith(\"file://\")?new URL(a):ia.normalize(a);fs.readFile(a,d?void 0:\"utf8\",(e,g)=>{e?c(e):b(d?g.buffer:g)})};!h.thisProgram&&1<process.argv.length&&(da=process.argv[1].replace(/\\\\/g,\"/\"));process.argv.slice(2);h.inspect=()=>\"[Emscripten Module object]\"}else if(ea||\nm)m?p=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(p=document.currentScript.src),_scriptDir&&(p=_scriptDir),0!==p.indexOf(\"blob:\")?p=p.substr(0,p.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):p=\"\",ha=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},m&&(w=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),t=(a,b,c)=>{var d=new XMLHttpRequest;d.open(\"GET\",a,!0);d.responseType=\n\"arraybuffer\";d.onload=()=>{200==d.status||0==d.status&&d.response?b(d.response):c()};d.onerror=c;d.send(null)};var ja=console.log.bind(console),x=console.error.bind(console);Object.assign(h,ca);ca=null;\"object\"!=typeof WebAssembly&&ka(\"no native wasm support detected\");var z,la=!1,A,B,C,D,E,G,ma,na,oa,pa;\nfunction qa(){var a=z.buffer;h.HEAP8=A=new Int8Array(a);h.HEAP16=C=new Int16Array(a);h.HEAPU8=B=new Uint8Array(a);h.HEAPU16=D=new Uint16Array(a);h.HEAP32=E=new Int32Array(a);h.HEAPU32=G=new Uint32Array(a);h.HEAPF32=ma=new Float32Array(a);h.HEAPF64=pa=new Float64Array(a);h.HEAP64=na=new BigInt64Array(a);h.HEAPU64=oa=new BigUint64Array(a)}var ra=[],sa=[],ta=[],I=0,ua=null,J=null;\nfunction ka(a){a=\"Aborted(\"+a+\")\";x(a);la=!0;a=new WebAssembly.RuntimeError(a+\". Build with -sASSERTIONS for more info.\");ba(a);throw a;}function va(a){return a.startsWith(\"data:application/octet-stream;base64,\")}var K;K=\"ort-wasm.wasm\";if(!va(K)){var wa=K;K=h.locateFile?h.locateFile(wa,p):p+wa}function xa(a){if(w)return w(a);throw\"both async and sync fetching of the wasm failed\";}\nfunction ya(a){if(ea||m){if(\"function\"==typeof fetch&&!a.startsWith(\"file://\"))return fetch(a,{credentials:\"same-origin\"}).then(b=>{if(!b.ok)throw\"failed to load wasm binary file at '\"+a+\"'\";return b.arrayBuffer()}).catch(()=>xa(a));if(t)return new Promise((b,c)=>{t(a,d=>b(new Uint8Array(d)),c)})}return Promise.resolve().then(()=>xa(a))}function za(a,b,c){return ya(a).then(d=>WebAssembly.instantiate(d,b)).then(d=>d).then(c,d=>{x(`failed to asynchronously prepare wasm: ${d}`);ka(d)})}\nfunction Aa(a,b){var c=K;return\"function\"!=typeof WebAssembly.instantiateStreaming||va(c)||c.startsWith(\"file://\")||fa||\"function\"!=typeof fetch?za(c,a,b):fetch(c,{credentials:\"same-origin\"}).then(d=>WebAssembly.instantiateStreaming(d,a).then(b,function(e){x(`wasm streaming compile failed: ${e}`);x(\"falling back to ArrayBuffer instantiation\");return za(c,a,b)}))}\nfunction Ba(a){this.Va=a-24;this.fb=function(b){G[this.Va+4>>>2>>>0]=b};this.eb=function(b){G[this.Va+8>>>2>>>0]=b};this.Za=function(b,c){this.$a();this.fb(b);this.eb(c)};this.$a=function(){G[this.Va+16>>>2>>>0]=0}}\nvar Ca=0,Da=0,Ea=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0,Fa=(a,b,c)=>{b>>>=0;var d=b+c;for(c=b;a[c]&&!(c>=d);)++c;if(16<c-b&&a.buffer&&Ea)return Ea.decode(a.subarray(b,c));for(d=\"\";b<c;){var e=a[b++];if(e&128){var g=a[b++]&63;if(192==(e&224))d+=String.fromCharCode((e&31)<<6|g);else{var l=a[b++]&63;e=224==(e&240)?(e&15)<<12|g<<6|l:(e&7)<<18|g<<12|l<<6|a[b++]&63;65536>e?d+=String.fromCharCode(e):(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023))}}else d+=String.fromCharCode(e)}return d},\nL=(a,b)=>(a>>>=0)?Fa(B,a,b):\"\",M=a=>{for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);127>=d?b++:2047>=d?b+=2:55296<=d&&57343>=d?(b+=4,++c):b+=3}return b},N=(a,b,c,d)=>{c>>>=0;if(!(0<d))return 0;var e=c;d=c+d-1;for(var g=0;g<a.length;++g){var l=a.charCodeAt(g);if(55296<=l&&57343>=l){var k=a.charCodeAt(++g);l=65536+((l&1023)<<10)|k&1023}if(127>=l){if(c>=d)break;b[c++>>>0]=l}else{if(2047>=l){if(c+1>=d)break;b[c++>>>0]=192|l>>6}else{if(65535>=l){if(c+2>=d)break;b[c++>>>0]=224|l>>12}else{if(c+3>=\nd)break;b[c++>>>0]=240|l>>18;b[c++>>>0]=128|l>>12&63}b[c++>>>0]=128|l>>6&63}b[c++>>>0]=128|l&63}}b[c>>>0]=0;return c-e},Ga=a=>{if(null===a)return\"null\";var b=typeof a;return\"object\"===b||\"array\"===b||\"function\"===b?a.toString():\"\"+a},Ha,O=a=>{for(var b=\"\";B[a>>>0];)b+=Ha[B[a++>>>0]];return b},Ia={},Ja={},Ka={},P;\nfunction La(a,b,c={}){var d=b.name;if(!a)throw new P(`type \"${d}\" must have a positive integer typeid pointer`);if(Ja.hasOwnProperty(a)){if(c.gb)return;throw new P(`Cannot register type '${d}' twice`);}Ja[a]=b;delete Ka[a];Ia.hasOwnProperty(a)&&(b=Ia[a],delete Ia[a],b.forEach(e=>e()))}function Q(a,b,c={}){if(!(\"argPackAdvance\"in b))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");La(a,b,c)}\nvar Ma=(a,b,c)=>{switch(b){case 1:return c?d=>A[d>>>0>>>0]:d=>B[d>>>0>>>0];case 2:return c?d=>C[d>>>1>>>0]:d=>D[d>>>1>>>0];case 4:return c?d=>E[d>>>2>>>0]:d=>G[d>>>2>>>0];case 8:return c?d=>na[d>>>3]:d=>oa[d>>>3];default:throw new TypeError(`invalid integer width (${b}): ${a}`);}};function Na(){this.Sa=[void 0];this.bb=[]}var R=new Na;function Oa(a){a>>>=0;a>=R.Va&&0===--R.get(a).cb&&R.$a(a)}\nvar S=a=>{if(!a)throw new P(\"Cannot use deleted val. handle = \"+a);return R.get(a).value},T=a=>{switch(a){case void 0:return 1;case null:return 2;case !0:return 3;case !1:return 4;default:return R.Za({cb:1,value:a})}};function Pa(a){return this.fromWireType(E[a>>>2>>>0])}var Qa=(a,b)=>{switch(b){case 4:return function(c){return this.fromWireType(ma[c>>>2>>>0])};case 8:return function(c){return this.fromWireType(pa[c>>>3>>>0])};default:throw new TypeError(`invalid float width (${b}): ${a}`);}};\nfunction Ra(a){return this.fromWireType(G[a>>>2>>>0])}\nvar Sa=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf-16le\"):void 0,Ta=(a,b)=>{var c=a>>1;for(var d=c+b/2;!(c>=d)&&D[c>>>0];)++c;c<<=1;if(32<c-a&&Sa)return Sa.decode(B.subarray(a>>>0,c>>>0));c=\"\";for(d=0;!(d>=b/2);++d){var e=C[a+2*d>>>1>>>0];if(0==e)break;c+=String.fromCharCode(e)}return c},Ua=(a,b,c)=>{void 0===c&&(c=2147483647);if(2>c)return 0;c-=2;var d=b;c=c<2*a.length?c/2:a.length;for(var e=0;e<c;++e)C[b>>>1>>>0]=a.charCodeAt(e),b+=2;C[b>>>1>>>0]=0;return b-d},Va=a=>2*a.length,Wa=(a,b)=>\n{for(var c=0,d=\"\";!(c>=b/4);){var e=E[a+4*c>>>2>>>0];if(0==e)break;++c;65536<=e?(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023)):d+=String.fromCharCode(e)}return d},Xa=(a,b,c)=>{b>>>=0;void 0===c&&(c=2147483647);if(4>c)return 0;var d=b;c=d+c-4;for(var e=0;e<a.length;++e){var g=a.charCodeAt(e);if(55296<=g&&57343>=g){var l=a.charCodeAt(++e);g=65536+((g&1023)<<10)|l&1023}E[b>>>2>>>0]=g;b+=4;if(b+4>c)break}E[b>>>2>>>0]=0;return b-d},Ya=a=>{for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);\n55296<=d&&57343>=d&&++c;b+=4}return b},V=(a,b)=>{var c=Ja[a];if(void 0===c)throw a=Za(a),c=O(a),U(a),new P(b+\" has unknown type \"+c);return c},$a={},W=a=>{var b=$a[a];return void 0===b?O(a):b},X=[],bb=()=>\"object\"==typeof globalThis?globalThis:Function(\"return this\")(),cb=a=>{var b=X.length;X.push(a);return b},db=(a,b)=>{for(var c=Array(a),d=0;d<a;++d)c[d]=V(G[b+4*d>>>2>>>0],\"parameter \"+d);return c},eb=a=>{if(void 0===a)return\"_unknown\";a=a.replace(/[^a-zA-Z0-9_]/g,\"$\");var b=a.charCodeAt(0);return 48<=\nb&&57>=b?`_${a}`:a},fb={};function gb(a,b){a=eb(a);return{[a]:function(){return b.apply(this,arguments)}}[a]}function hb(a){var b=Function;if(!(b instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof b} which is not a function`);var c=gb(b.name||\"unknownFunctionName\",function(){});c.prototype=b.prototype;c=new c;a=b.apply(c,a);return a instanceof Object?a:c}\nvar ib=a=>{for(var b=\"\",c=0;c<a;++c)b+=(0!==c?\", \":\"\")+\"arg\"+c;var d=\"return function emval_allocator_\"+a+\"(constructor, argTypes, args) {\\n  var HEAPU32 = getMemory();\\n\";for(c=0;c<a;++c)d+=\"var argType\"+c+\" = requireRegisteredType(HEAPU32[((argTypes)>>>2)], 'parameter \"+c+\"');\\nvar arg\"+c+\" = argType\"+c+\".readValueFromPointer(args);\\nargs += argType\"+c+\"['argPackAdvance'];\\nargTypes += 4;\\n\";return(new Function(\"requireRegisteredType\",\"Module\",\"valueToHandle\",\"getMemory\",d+(\"var obj = new constructor(\"+\nb+\");\\nreturn valueToHandle(obj);\\n}\\n\")))(V,h,T,()=>G)},jb={},Y=a=>0===a%4&&(0!==a%100||0===a%400),kb=[0,31,60,91,121,152,182,213,244,274,305,335],lb=[0,31,59,90,120,151,181,212,243,273,304,334],nb=a=>{var b=M(a)+1,c=mb(b);c&&N(a,B,c,b);return c},ob={},qb=()=>{if(!pb){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:da||\"./this.program\"},b;for(b in ob)void 0===\nob[b]?delete a[b]:a[b]=ob[b];var c=[];for(b in a)c.push(`${b}=${a[b]}`);pb=c}return pb},pb,rb=[null,[],[]],sb=[31,29,31,30,31,30,31,31,30,31,30,31],tb=[31,28,31,30,31,30,31,31,30,31,30,31];function ub(a){var b=Array(M(a)+1);N(a,b,0,b.length);return b}\nfunction vb(a,b,c,d){function e(f,r,u){for(f=\"number\"==typeof f?f.toString():f||\"\";f.length<r;)f=u[0]+f;return f}function g(f,r){return e(f,r,\"0\")}function l(f,r){function u(ab){return 0>ab?-1:0<ab?1:0}var H;0===(H=u(f.getFullYear()-r.getFullYear()))&&0===(H=u(f.getMonth()-r.getMonth()))&&(H=u(f.getDate()-r.getDate()));return H}function k(f){switch(f.getDay()){case 0:return new Date(f.getFullYear()-1,11,29);case 1:return f;case 2:return new Date(f.getFullYear(),0,3);case 3:return new Date(f.getFullYear(),\n0,2);case 4:return new Date(f.getFullYear(),0,1);case 5:return new Date(f.getFullYear()-1,11,31);case 6:return new Date(f.getFullYear()-1,11,30)}}function n(f){var r=f.Ta;for(f=new Date((new Date(f.Ua+1900,0,1)).getTime());0<r;){var u=f.getMonth(),H=(Y(f.getFullYear())?sb:tb)[u];if(r>H-f.getDate())r-=H-f.getDate()+1,f.setDate(1),11>u?f.setMonth(u+1):(f.setMonth(0),f.setFullYear(f.getFullYear()+1));else{f.setDate(f.getDate()+r);break}}u=new Date(f.getFullYear()+1,0,4);r=k(new Date(f.getFullYear(),\n0,4));u=k(u);return 0>=l(r,f)?0>=l(u,f)?f.getFullYear()+1:f.getFullYear():f.getFullYear()-1}a>>>=0;b>>>=0;c>>>=0;d>>>=0;var q=G[d+40>>>2>>>0];d={kb:E[d>>>2>>>0],jb:E[d+4>>>2>>>0],Xa:E[d+8>>>2>>>0],ab:E[d+12>>>2>>>0],Ya:E[d+16>>>2>>>0],Ua:E[d+20>>>2>>>0],Oa:E[d+24>>>2>>>0],Ta:E[d+28>>>2>>>0],mb:E[d+32>>>2>>>0],ib:E[d+36>>>2>>>0],lb:q?L(q):\"\"};c=L(c);q={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\n\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var v in q)c=c.replace(new RegExp(v,\"g\"),q[v]);var y=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),F=\"January February March April May June July August September October November December\".split(\" \");q={\"%a\":f=>y[f.Oa].substring(0,3),\"%A\":f=>y[f.Oa],\"%b\":f=>\nF[f.Ya].substring(0,3),\"%B\":f=>F[f.Ya],\"%C\":f=>g((f.Ua+1900)/100|0,2),\"%d\":f=>g(f.ab,2),\"%e\":f=>e(f.ab,2,\" \"),\"%g\":f=>n(f).toString().substring(2),\"%G\":f=>n(f),\"%H\":f=>g(f.Xa,2),\"%I\":f=>{f=f.Xa;0==f?f=12:12<f&&(f-=12);return g(f,2)},\"%j\":f=>{for(var r=0,u=0;u<=f.Ya-1;r+=(Y(f.Ua+1900)?sb:tb)[u++]);return g(f.ab+r,3)},\"%m\":f=>g(f.Ya+1,2),\"%M\":f=>g(f.jb,2),\"%n\":()=>\"\\n\",\"%p\":f=>0<=f.Xa&&12>f.Xa?\"AM\":\"PM\",\"%S\":f=>g(f.kb,2),\"%t\":()=>\"\\t\",\"%u\":f=>f.Oa||7,\"%U\":f=>g(Math.floor((f.Ta+7-f.Oa)/7),2),\"%V\":f=>\n{var r=Math.floor((f.Ta+7-(f.Oa+6)%7)/7);2>=(f.Oa+371-f.Ta-2)%7&&r++;if(r)53==r&&(u=(f.Oa+371-f.Ta)%7,4==u||3==u&&Y(f.Ua)||(r=1));else{r=52;var u=(f.Oa+7-f.Ta-1)%7;(4==u||5==u&&Y(f.Ua%400-1))&&r++}return g(r,2)},\"%w\":f=>f.Oa,\"%W\":f=>g(Math.floor((f.Ta+7-(f.Oa+6)%7)/7),2),\"%y\":f=>(f.Ua+1900).toString().substring(2),\"%Y\":f=>f.Ua+1900,\"%z\":f=>{f=f.ib;var r=0<=f;f=Math.abs(f)/60;return(r?\"+\":\"-\")+String(\"0000\"+(f/60*100+f%60)).slice(-4)},\"%Z\":f=>f.lb,\"%%\":()=>\"%\"};c=c.replace(/%%/g,\"\\x00\\x00\");for(v in q)c.includes(v)&&\n(c=c.replace(new RegExp(v,\"g\"),q[v](d)));c=c.replace(/\\0\\0/g,\"%\");v=ub(c);if(v.length>b)return 0;A.set(v,a>>>0);return v.length-1}for(var wb=Array(256),xb=0;256>xb;++xb)wb[xb]=String.fromCharCode(xb);Ha=wb;P=h.BindingError=class extends Error{constructor(a){super(a);this.name=\"BindingError\"}};h.InternalError=class extends Error{constructor(a){super(a);this.name=\"InternalError\"}};\nObject.assign(Na.prototype,{get(a){return this.Sa[a]},has(a){return void 0!==this.Sa[a]},Za(a){var b=this.bb.pop()||this.Sa.length;this.Sa[b]=a;return b},$a(a){this.Sa[a]=void 0;this.bb.push(a)}});R.Sa.push({value:void 0},{value:null},{value:!0},{value:!1});R.Va=R.Sa.length;h.count_emval_handles=()=>{for(var a=0,b=R.Va;b<R.Sa.length;++b)void 0!==R.Sa[b]&&++a;return a};\nvar yb={a:function(a,b,c){a>>>=0;(new Ba(a)).Za(b>>>0,c>>>0);Ca=a;Da++;throw Ca;},v:function(){return 0},ba:function(){},N:function(){},P:function(){},H:function(){return 0},$:function(){},V:function(){},_:function(){},B:function(){},O:function(){},L:function(){},aa:function(){},M:function(){},E:function(a,b,c,d,e){b>>>=0;b=O(b);var g=-1!=b.indexOf(\"u\");g&&(e=(1n<<64n)-1n);Q(a>>>0,{name:b,fromWireType:l=>l,toWireType:function(l,k){if(\"bigint\"!=typeof k&&\"number\"!=typeof k)throw new TypeError(`Cannot convert \"${Ga(k)}\" to ${this.name}`);\nif(k<d||k>e)throw new TypeError(`Passing a number \"${Ga(k)}\" from JS side to C/C++ side to an argument of type \"${b}\", which is outside the valid range [${d}, ${e}]!`);return k},argPackAdvance:8,readValueFromPointer:Ma(b,c>>>0,!g),Wa:null})},ea:function(a,b,c,d){b=O(b>>>0);Q(a>>>0,{name:b,fromWireType:function(e){return!!e},toWireType:function(e,g){return g?c:d},argPackAdvance:8,readValueFromPointer:function(e){return this.fromWireType(B[e>>>0])},Wa:null})},da:function(a,b){b=O(b>>>0);Q(a>>>0,{name:b,\nfromWireType:c=>{var d=S(c);Oa(c);return d},toWireType:(c,d)=>T(d),argPackAdvance:8,readValueFromPointer:Pa,Wa:null})},D:function(a,b,c){b=O(b>>>0);Q(a>>>0,{name:b,fromWireType:d=>d,toWireType:(d,e)=>e,argPackAdvance:8,readValueFromPointer:Qa(b,c>>>0),Wa:null})},p:function(a,b,c,d,e){a>>>=0;c>>>=0;b=O(b>>>0);-1===e&&(e=4294967295);e=k=>k;if(0===d){var g=32-8*c;e=k=>k<<g>>>g}var l=b.includes(\"unsigned\")?function(k,n){return n>>>0}:function(k,n){return n};Q(a,{name:b,fromWireType:e,toWireType:l,argPackAdvance:8,\nreadValueFromPointer:Ma(b,c,0!==d),Wa:null})},l:function(a,b,c){function d(g){return new e(A.buffer,G[g+4>>>2>>>0],G[g>>>2>>>0])}var e=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][b];c=O(c>>>0);Q(a>>>0,{name:c,fromWireType:d,argPackAdvance:8,readValueFromPointer:d},{gb:!0})},F:function(a,b){b=O(b>>>0);var c=\"std::string\"===b;Q(a>>>0,{name:b,fromWireType:function(d){var e=G[d>>>2>>>0],g=d+4;if(c)for(var l=g,k=0;k<=e;++k){var n=\ng+k;if(k==e||0==B[n>>>0]){l=L(l,n-l);if(void 0===q)var q=l;else q+=String.fromCharCode(0),q+=l;l=n+1}}else{q=Array(e);for(k=0;k<e;++k)q[k]=String.fromCharCode(B[g+k>>>0]);q=q.join(\"\")}U(d);return q},toWireType:function(d,e){e instanceof ArrayBuffer&&(e=new Uint8Array(e));var g=\"string\"==typeof e;if(!(g||e instanceof Uint8Array||e instanceof Uint8ClampedArray||e instanceof Int8Array))throw new P(\"Cannot pass non-string to std::string\");var l=c&&g?M(e):e.length;var k=mb(4+l+1),n=k+4;G[k>>>2>>>0]=l;\nif(c&&g)N(e,B,n,l+1);else if(g)for(g=0;g<l;++g){var q=e.charCodeAt(g);if(255<q)throw U(n),new P(\"String has UTF-16 code units that do not fit in 8 bits\");B[n+g>>>0]=q}else for(g=0;g<l;++g)B[n+g>>>0]=e[g];null!==d&&d.push(U,k);return k},argPackAdvance:8,readValueFromPointer:Ra,Wa(d){U(d)}})},x:function(a,b,c){b>>>=0;c>>>=0;c=O(c);if(2===b){var d=Ta;var e=Ua;var g=Va;var l=()=>D;var k=1}else 4===b&&(d=Wa,e=Xa,g=Ya,l=()=>G,k=2);Q(a>>>0,{name:c,fromWireType:n=>{for(var q=G[n>>>2>>>0],v=l(),y,F=n+4,f=\n0;f<=q;++f){var r=n+4+f*b;if(f==q||0==v[r>>>k])F=d(F,r-F),void 0===y?y=F:(y+=String.fromCharCode(0),y+=F),F=r+b}U(n);return y},toWireType:(n,q)=>{if(\"string\"!=typeof q)throw new P(`Cannot pass non-string to C++ string type ${c}`);var v=g(q),y=mb(4+v+b);G[y>>>2]=v>>k;e(q,y+4,v+b);null!==n&&n.push(U,y);return y},argPackAdvance:8,readValueFromPointer:Pa,Wa(n){U(n)}})},fa:function(a,b){b=O(b>>>0);Q(a>>>0,{hb:!0,name:b,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},ca:()=>!0,o:function(a,b,\nc){b>>>=0;c>>>=0;a=S(a>>>0);b=V(b,\"emval::as\");var d=[],e=T(d);G[c>>>2>>>0]=e;return b.toWireType(d,a)},h:function(a,b,c,d,e){c>>>=0;d>>>=0;e>>>=0;a=X[a>>>0];b=S(b>>>0);c=W(c);var g=[];G[d>>>2>>>0]=T(g);return a(b,c,g,e)},r:function(a,b,c,d){c>>>=0;d>>>=0;a=X[a>>>0];b=S(b>>>0);c=W(c);a(b,c,null,d)},b:Oa,y:function(a,b){b>>>=0;a=S(a>>>0);b=S(b);return a==b},u:function(a){a>>>=0;if(0===a)return T(bb());a=W(a);return T(bb()[a])},g:function(a,b){var c=db(a,b>>>0),d=c[0];b=d.name+\"_$\"+c.slice(1).map(function(v){return v.name}).join(\"_\")+\n\"$\";var e=fb[b];if(void 0!==e)return e;e=[\"retType\"];for(var g=[d],l=\"\",k=0;k<a-1;++k)l+=(0!==k?\", \":\"\")+\"arg\"+k,e.push(\"argType\"+k),g.push(c[1+k]);var n=\"return function \"+eb(\"methodCaller_\"+b)+\"(handle, name, destructors, args) {\\n\",q=0;for(k=0;k<a-1;++k)n+=\"    var arg\"+k+\" = argType\"+k+\".readValueFromPointer(args\"+(q?\"+\"+q:\"\")+\");\\n\",q+=c[k+1].argPackAdvance;n+=\"    var rv = handle[name](\"+l+\");\\n\";for(k=0;k<a-1;++k)c[k+1].deleteObject&&(n+=\"    argType\"+k+\".deleteObject(arg\"+k+\");\\n\");d.hb||\n(n+=\"    return retType.toWireType(destructors, rv);\\n\");e.push(n+\"};\\n\");a=hb(e).apply(null,g);e=cb(a);return fb[b]=e},q:function(a,b){b>>>=0;a=S(a>>>0);b=S(b);return T(a[b])},c:function(a){a>>>=0;4<a&&(R.get(a).cb+=1)},G:function(a,b,c,d){c>>>=0;d>>>=0;a=S(a>>>0);var e=jb[b];e||(e=ib(b),jb[b]=e);return e(a,c,d)},s:function(){return T([])},k:function(a){a=S(a>>>0);for(var b=Array(a.length),c=0;c<a.length;c++)b[c]=a[c];return T(b)},d:function(a){return T(W(a>>>0))},j:function(){return T({})},e:function(a){a>>>=\n0;for(var b=S(a);b.length;){var c=b.pop();b.pop()(c)}Oa(a)},i:function(a,b,c){b>>>=0;c>>>=0;a=S(a>>>0);b=S(b);c=S(c);a[b]=c},f:function(a,b){b>>>=0;a=V(a>>>0,\"_emval_take_value\");a=a.readValueFromPointer(b);return T(a)},S:function(a,b){a=-9007199254740992>a||9007199254740992<a?NaN:Number(a);b>>>=0;a=new Date(1E3*a);E[b>>>2>>>0]=a.getUTCSeconds();E[b+4>>>2>>>0]=a.getUTCMinutes();E[b+8>>>2>>>0]=a.getUTCHours();E[b+12>>>2>>>0]=a.getUTCDate();E[b+16>>>2>>>0]=a.getUTCMonth();E[b+20>>>2>>>0]=a.getUTCFullYear()-\n1900;E[b+24>>>2>>>0]=a.getUTCDay();E[b+28>>>2>>>0]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0},T:function(a,b){a=-9007199254740992>a||9007199254740992<a?NaN:Number(a);b>>>=0;a=new Date(1E3*a);E[b>>>2>>>0]=a.getSeconds();E[b+4>>>2>>>0]=a.getMinutes();E[b+8>>>2>>>0]=a.getHours();E[b+12>>>2>>>0]=a.getDate();E[b+16>>>2>>>0]=a.getMonth();E[b+20>>>2>>>0]=a.getFullYear()-1900;E[b+24>>>2>>>0]=a.getDay();E[b+28>>>2>>>0]=(Y(a.getFullYear())?kb:lb)[a.getMonth()]+a.getDate()-1|0;E[b+36>>>\n2>>>0]=-(60*a.getTimezoneOffset());var c=(new Date(a.getFullYear(),6,1)).getTimezoneOffset(),d=(new Date(a.getFullYear(),0,1)).getTimezoneOffset();E[b+32>>>2>>>0]=(c!=d&&a.getTimezoneOffset()==Math.min(d,c))|0},U:function(a){a>>>=0;var b=new Date(E[a+20>>>2>>>0]+1900,E[a+16>>>2>>>0],E[a+12>>>2>>>0],E[a+8>>>2>>>0],E[a+4>>>2>>>0],E[a>>>2>>>0],0),c=E[a+32>>>2>>>0],d=b.getTimezoneOffset(),e=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),g=(new Date(b.getFullYear(),0,1)).getTimezoneOffset(),l=Math.min(g,\ne);0>c?E[a+32>>>2>>>0]=Number(e!=g&&l==d):0<c!=(l==d)&&(e=Math.max(g,e),b.setTime(b.getTime()+6E4*((0<c?l:e)-d)));E[a+24>>>2>>>0]=b.getDay();E[a+28>>>2>>>0]=(Y(b.getFullYear())?kb:lb)[b.getMonth()]+b.getDate()-1|0;E[a>>>2>>>0]=b.getSeconds();E[a+4>>>2>>>0]=b.getMinutes();E[a+8>>>2>>>0]=b.getHours();E[a+12>>>2>>>0]=b.getDate();E[a+16>>>2>>>0]=b.getMonth();E[a+20>>>2>>>0]=b.getYear();return BigInt(b.getTime()/1E3)},Q:function(){return-52},R:function(){},J:function(a,b,c){function d(n){return(n=n.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?\nn[1]:\"GMT\"}c>>>=0;var e=(new Date).getFullYear(),g=new Date(e,0,1),l=new Date(e,6,1);e=g.getTimezoneOffset();var k=l.getTimezoneOffset();G[a>>>0>>>2>>>0]=60*Math.max(e,k);E[b>>>0>>>2>>>0]=Number(e!=k);a=d(g);b=d(l);a=nb(a);b=nb(b);k<e?(G[c>>>2>>>0]=a,G[c+4>>>2>>>0]=b):(G[c>>>2>>>0]=b,G[c+4>>>2>>>0]=a)},t:()=>{ka(\"\")},C:()=>Date.now(),K:function(){return 4294901760},n:()=>performance.now(),Z:function(a,b,c){b>>>=0;return B.copyWithin(a>>>0>>>0,b>>>0,b+(c>>>0)>>>0)},I:function(a){a>>>=0;var b=B.length;\nif(4294901760<a)return!1;for(var c=1;4>=c;c*=2){var d=b*(1+.2/c);d=Math.min(d,a+100663296);var e=Math;d=Math.max(a,d);a:{e=(e.min.call(e,4294901760,d+(65536-d%65536)%65536)-z.buffer.byteLength+65535)/65536;try{z.grow(e);qa();var g=1;break a}catch(l){}g=void 0}if(g)return!0}return!1},X:function(a,b){a>>>=0;b>>>=0;var c=0;qb().forEach((d,e)=>{var g=b+c;e=G[a+4*e>>>2>>>0]=g;for(g=0;g<d.length;++g)A[e++>>>0>>>0]=d.charCodeAt(g);A[e>>>0>>>0]=0;c+=d.length+1});return 0},Y:function(a,b){a>>>=0;b>>>=0;var c=\nqb();G[a>>>2>>>0]=c.length;var d=0;c.forEach(e=>d+=e.length+1);G[b>>>2>>>0]=d;return 0},w:()=>52,A:function(){return 52},W:function(){return 70},z:function(a,b,c,d){b>>>=0;c>>>=0;d>>>=0;for(var e=0,g=0;g<c;g++){var l=G[b>>>2>>>0],k=G[b+4>>>2>>>0];b+=8;for(var n=0;n<k;n++){var q=B[l+n>>>0],v=rb[a];0===q||10===q?((1===a?ja:x)(Fa(v,0)),v.length=0):v.push(q)}e+=k}G[d>>>2>>>0]=e;return 0},ga:vb,m:function(a,b,c,d){return vb(a>>>0,b>>>0,c>>>0,d>>>0)}},Z=function(){var a={a:yb};I++;Aa(a,function(b){Z=b.instance.exports;\nZ=zb();z=Z.ha;qa();sa.unshift(Z.ia);I--;0==I&&(null!==ua&&(clearInterval(ua),ua=null),J&&(b=J,J=null,b()))}).catch(ba);return{}}();h._OrtInit=(a,b)=>(h._OrtInit=Z.ja)(a,b);h._OrtGetLastError=(a,b)=>(h._OrtGetLastError=Z.ka)(a,b);h._OrtCreateSessionOptions=(a,b,c,d,e,g,l,k,n,q)=>(h._OrtCreateSessionOptions=Z.la)(a,b,c,d,e,g,l,k,n,q);h._OrtAppendExecutionProvider=(a,b)=>(h._OrtAppendExecutionProvider=Z.ma)(a,b);h._OrtAddFreeDimensionOverride=(a,b,c)=>(h._OrtAddFreeDimensionOverride=Z.na)(a,b,c);\nh._OrtAddSessionConfigEntry=(a,b,c)=>(h._OrtAddSessionConfigEntry=Z.oa)(a,b,c);h._OrtReleaseSessionOptions=a=>(h._OrtReleaseSessionOptions=Z.pa)(a);h._OrtCreateSession=(a,b,c)=>(h._OrtCreateSession=Z.qa)(a,b,c);h._OrtReleaseSession=a=>(h._OrtReleaseSession=Z.ra)(a);h._OrtGetInputOutputCount=(a,b,c)=>(h._OrtGetInputOutputCount=Z.sa)(a,b,c);h._OrtGetInputName=(a,b)=>(h._OrtGetInputName=Z.ta)(a,b);h._OrtGetOutputName=(a,b)=>(h._OrtGetOutputName=Z.ua)(a,b);h._OrtFree=a=>(h._OrtFree=Z.va)(a);\nh._OrtCreateTensor=(a,b,c,d,e,g)=>(h._OrtCreateTensor=Z.wa)(a,b,c,d,e,g);h._OrtGetTensorData=(a,b,c,d,e)=>(h._OrtGetTensorData=Z.xa)(a,b,c,d,e);h._OrtReleaseTensor=a=>(h._OrtReleaseTensor=Z.ya)(a);h._OrtCreateRunOptions=(a,b,c,d)=>(h._OrtCreateRunOptions=Z.za)(a,b,c,d);h._OrtAddRunConfigEntry=(a,b,c)=>(h._OrtAddRunConfigEntry=Z.Aa)(a,b,c);h._OrtReleaseRunOptions=a=>(h._OrtReleaseRunOptions=Z.Ba)(a);h._OrtCreateBinding=a=>(h._OrtCreateBinding=Z.Ca)(a);\nh._OrtBindInput=(a,b,c)=>(h._OrtBindInput=Z.Da)(a,b,c);h._OrtBindOutput=(a,b,c,d)=>(h._OrtBindOutput=Z.Ea)(a,b,c,d);h._OrtClearBoundOutputs=a=>(h._OrtClearBoundOutputs=Z.Fa)(a);h._OrtReleaseBinding=a=>(h._OrtReleaseBinding=Z.Ga)(a);h._OrtRunWithBinding=(a,b,c,d,e)=>(h._OrtRunWithBinding=Z.Ha)(a,b,c,d,e);h._OrtRun=(a,b,c,d,e,g,l,k)=>(h._OrtRun=Z.Ia)(a,b,c,d,e,g,l,k);h._OrtEndProfiling=a=>(h._OrtEndProfiling=Z.Ja)(a);\nvar mb=h._malloc=a=>(mb=h._malloc=Z.Ka)(a),U=h._free=a=>(U=h._free=Z.La)(a),Za=a=>(Za=Z.Ma)(a);h.__embind_initialize_bindings=()=>(h.__embind_initialize_bindings=Z.Na)();var Ab=()=>(Ab=Z.Pa)(),Bb=a=>(Bb=Z.Qa)(a),Cb=a=>(Cb=Z.Ra)(a);function zb(){var a=Z;a=Object.assign({},a);var b=d=>()=>d()>>>0,c=d=>e=>d(e)>>>0;a.__errno_location=b(a.__errno_location);a.Ka=c(a.Ka);a.Ma=c(a.Ma);a.Pa=b(a.Pa);a.Ra=c(a.Ra);return a}h.stackAlloc=Cb;h.stackSave=Ab;h.stackRestore=Bb;h.UTF8ToString=L;\nh.stringToUTF8=(a,b,c)=>N(a,B,b,c);h.lengthBytesUTF8=M;var Db;J=function Eb(){Db||Fb();Db||(J=Eb)};function Fb(){if(!(0<I)){for(;0<ra.length;)ra.shift()(h);if(!(0<I||Db||(Db=!0,h.calledRun=!0,la))){for(;0<sa.length;)sa.shift()(h);for(aa(h);0<ta.length;)ta.shift()(h)}}}Fb();\n\n\n  return moduleArg.ready\n}\n\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasm;\nelse if (typeof define === 'function' && define['amd'])\n  define([], () => ortWasm);\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as path from 'node:path';\nimport {Env} from 'onnxruntime-common';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\n\n/* eslint-disable @typescript-eslint/no-require-imports */\nlet ortWasmFactory: EmscriptenModuleFactory<OrtWasmModule>;\n\nif (!BUILD_DEFS.DISABLE_TRAINING) {\n  ortWasmFactory = require('./binding/ort-training-wasm-simd.js');\n} else {\n  ortWasmFactory =\n      BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm.js') : require('./binding/ort-wasm-simd.jsep.js');\n}\n\nconst ortWasmFactoryThreaded: EmscriptenModuleFactory<OrtWasmModule> = !BUILD_DEFS.DISABLE_WASM_THREAD ?\n    (BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm-threaded.js') :\n                                 require('./binding/ort-wasm-simd-threaded.jsep.js')) :\n    ortWasmFactory;\n/* eslint-enable @typescript-eslint/no-require-imports */\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n\n    // The binary data is generated from the following code by wat2wasm:\n    //\n    // (module\n    //   (type $t0 (func))\n    //   (func $f0 (type $t0)\n    //     (drop\n    //       (i32x4.dot_i16x8_s\n    //         (i8x16.splat\n    //           (i32.const 0))\n    //         (v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)))))\n\n    return WebAssembly.validate(new Uint8Array([\n      0,   97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 30, 1,   28,  0, 65, 0,\n      253, 15, 253, 12,  0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0,  0,  253, 186, 1, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useSimd) {\n    if (!BUILD_DEFS.DISABLE_TRAINING) {\n      return 'ort-training-wasm-simd.wasm';\n    }\n    return useThreads ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-simd.wasm';\n  } else {\n    return useThreads ? 'ort-wasm-threaded.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPaths = flags.wasmPaths;\n  const wasmPrefixOverride = typeof wasmPaths === 'string' ? wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof wasmPaths === 'object' ? wasmPaths[wasmFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads && fileName.endsWith('.worker.js') &&\n            typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by esbuild plugin to load file content as string.\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName.endsWith('.wasm')) {\n          if (wasmPathOverride) {\n            return wasmPathOverride;\n          }\n\n          const prefix = wasmPrefixOverride ?? scriptDirectory;\n\n          if (!BUILD_DEFS.DISABLE_WEBGPU) {\n            if (wasmFileName === 'ort-wasm-simd.wasm') {\n              return prefix + 'ort-wasm-simd.jsep.wasm';\n            } else if (wasmFileName === 'ort-wasm-simd-threaded.wasm') {\n              return prefix + 'ort-wasm-simd-threaded.jsep.wasm';\n            }\n          }\n\n          return prefix + wasmFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads) {\n      config.numThreads = numThreads;\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode = `var ortWasmThreaded=${factory.toString()};`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n\n/**\n * check web assembly API's last error and throw error if any error occurred.\n * @param message a message used when an error occurred.\n */\nexport const checkLastError = (message: string): void => {\n  const wasm = getInstance();\n\n  const stack = wasm.stackSave();\n  try {\n    const paramsOffset = wasm.stackAlloc(8);\n    wasm._OrtGetLastError(paramsOffset, paramsOffset + 4);\n    const errorCode = wasm.HEAP32[paramsOffset / 4];\n    const errorMessagePointer = wasm.HEAPU32[paramsOffset / 4 + 1];\n    const errorMessage = errorMessagePointer ? wasm.UTF8ToString(errorMessagePointer) : '';\n    throw new Error(`${message} ERROR_CODE: ${errorCode}, ERROR_MESSAGE: ${errorMessage}`);\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError, iterateExtraOptions} from './wasm-utils';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      checkLastError('Can\\'t create run options.');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          checkLastError(`Can't set a run config entry: ${key} - ${value}.`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(alloc => wasm._free(alloc));\n    throw e;\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError, iterateExtraOptions} from './wasm-utils';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n\n  // if using JSEP with WebGPU, always disable memory pattern\n  if (options.executionProviders &&\n      options.executionProviders.some(ep => (typeof ep === 'string' ? ep : ep.name) === 'webgpu')) {\n    options.enableMemPattern = false;\n  }\n};\n\nconst setExecutionProviders =\n    (sessionOptionsHandle: number, executionProviders: readonly InferenceSession.ExecutionProviderConfig[],\n     allocs: number[]): void => {\n      for (const ep of executionProviders) {\n        let epName = typeof ep === 'string' ? ep : ep.name;\n\n        // check EP name\n        switch (epName) {\n          case 'xnnpack':\n            epName = 'XNNPACK';\n            break;\n          case 'webnn':\n            epName = 'WEBNN';\n            if (typeof ep !== 'string') {\n              const webnnOptions = ep as InferenceSession.WebNNExecutionProviderOption;\n              if (webnnOptions?.deviceType) {\n                const keyDataOffset = allocWasmString('deviceType', allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.deviceType, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(`Can't set a session config entry: 'deviceType' - ${webnnOptions.deviceType}.`);\n                }\n              }\n              if (webnnOptions?.numThreads) {\n                let numThreads = webnnOptions.numThreads;\n                // Just ignore invalid webnnOptions.numThreads.\n                if (typeof numThreads != 'number' || !Number.isInteger(numThreads) || numThreads < 0) {\n                  numThreads = 0;\n                }\n                const keyDataOffset = allocWasmString('numThreads', allocs);\n                const valueDataOffset = allocWasmString(numThreads.toString(), allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(`Can't set a session config entry: 'numThreads' - ${webnnOptions.numThreads}.`);\n                }\n              }\n              if (webnnOptions?.powerPreference) {\n                const keyDataOffset = allocWasmString('powerPreference', allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.powerPreference, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(\n                      `Can't set a session config entry: 'powerPreference' - ${webnnOptions.powerPreference}.`);\n                }\n              }\n            }\n            break;\n          case 'webgpu':\n            epName = 'JS';\n            if (typeof ep !== 'string') {\n              const webgpuOptions = ep as InferenceSession.WebGpuExecutionProviderOption;\n              if (webgpuOptions?.preferredLayout) {\n                if (webgpuOptions.preferredLayout !== 'NCHW' && webgpuOptions.preferredLayout !== 'NHWC') {\n                  throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${webgpuOptions.preferredLayout}`);\n                }\n                const keyDataOffset = allocWasmString('preferredLayout', allocs);\n                const valueDataOffset = allocWasmString(webgpuOptions.preferredLayout, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(\n                      `Can't set a session config entry: 'preferredLayout' - ${webgpuOptions.preferredLayout}.`);\n                }\n              }\n            }\n            break;\n          case 'wasm':\n          case 'cpu':\n            continue;\n          default:\n            throw new Error(`not supported execution provider: ${epName}`);\n        }\n\n        const epNameDataOffset = allocWasmString(epName, allocs);\n        if (getInstance()._OrtAppendExecutionProvider(sessionOptionsHandle, epNameDataOffset) !== 0) {\n          checkLastError(`Can't append execution provider: ${epName}.`);\n        }\n      }\n    };\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel ?? 'all');\n    const executionMode = getExecutionMode(sessionOptions.executionMode ?? 'sequential');\n    const logIdDataOffset =\n        typeof sessionOptions.logId === 'string' ? allocWasmString(sessionOptions.logId, allocs) : 0;\n\n    const logSeverityLevel = sessionOptions.logSeverityLevel ?? 2;  // Default to 2 - warning\n    if (!Number.isInteger(logSeverityLevel) || logSeverityLevel < 0 || logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${logSeverityLevel}`);\n    }\n\n    const logVerbosityLevel = sessionOptions.logVerbosityLevel ?? 0;  // Default to 0 - verbose\n    if (!Number.isInteger(logVerbosityLevel) || logVerbosityLevel < 0 || logVerbosityLevel > 4) {\n      throw new Error(`log verbosity level is not valid: ${logVerbosityLevel}`);\n    }\n\n    const optimizedModelFilePathOffset = typeof sessionOptions.optimizedModelFilePath === 'string' ?\n        allocWasmString(sessionOptions.optimizedModelFilePath, allocs) :\n        0;\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena, !!sessionOptions.enableMemPattern, executionMode,\n        !!sessionOptions.enableProfiling, 0, logIdDataOffset, logSeverityLevel, logVerbosityLevel,\n        optimizedModelFilePathOffset);\n    if (sessionOptionsHandle === 0) {\n      checkLastError('Can\\'t create session options.');\n    }\n\n    if (sessionOptions.executionProviders) {\n      setExecutionProviders(sessionOptionsHandle, sessionOptions.executionProviders, allocs);\n    }\n\n    if (sessionOptions.freeDimensionOverrides) {\n      for (const [name, value] of Object.entries(sessionOptions.freeDimensionOverrides)) {\n        if (typeof name !== 'string') {\n          throw new Error(`free dimension override name must be a string: ${name}`);\n        }\n        if (typeof value !== 'number' || !Number.isInteger(value) || value < 0) {\n          throw new Error(`free dimension override value must be a non-negative integer: ${value}`);\n        }\n        const nameOffset = allocWasmString(name, allocs);\n        if (wasm._OrtAddFreeDimensionOverride(sessionOptionsHandle, nameOffset, value) !== 0) {\n          checkLastError(`Can't set a free dimension override: ${name} - ${value}.`);\n        }\n      }\n    }\n\n    if (sessionOptions.extra !== undefined) {\n      iterateExtraOptions(sessionOptions.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          checkLastError(`Can't set a session config entry: ${key} - ${value}.`);\n        }\n      });\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(alloc => wasm._free(alloc));\n    throw e;\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from 'onnxruntime-common';\n\n// This file includes common definitions. They do NOT have dependency on the WebAssembly instance.\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nexport const enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n/**\n * Map string tensor data to enum value\n */\nexport const tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float16':\n      return DataType.float16;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\n/**\n * Map enum value to string tensor data\n */\nexport const tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float16:\n      return 'float16';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int64';\n    case DataType.uint64:\n      return 'uint64';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\n/**\n * get tensor element size in bytes by the given data type\n * @returns size in integer or undefined if the data type is not supported\n */\nexport const getTensorElementSize = (dateType: number): number|\n    undefined => [undefined, 4, 1, 1, 2, 2, 4, 8, undefined, 1, 2, 8, 4, 8, undefined, undefined, undefined][dateType];\n\n/**\n * get typed array constructor by the given tensor type\n */\nexport const tensorTypeToTypedArrayConstructor = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float16':\n          return Uint16Array;\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * Map string log level to integer value\n */\nexport const logLevelStringToEnum = (logLevel?: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n\n/**\n * Check whether the given tensor type is supported by GPU buffer\n */\nexport const isGpuBufferSupportedType = (type: Tensor.Type): type is Tensor.GpuBufferDataTypes => type === 'float32' ||\n    type === 'int32' || type === 'int64' || type === 'bool' || type === 'float16' || type === 'uint32';\n\n/**\n * Map string data location to integer value\n */\nexport const dataLocationStringToEnum = (location: Tensor.DataLocation): number => {\n  switch (location) {\n    case 'none':\n      return 0;\n    case 'cpu':\n      return 1;\n    case 'cpu-pinned':\n      return 2;\n    case 'texture':\n      return 3;\n    case 'gpu-buffer':\n      return 4;\n    default:\n      throw new Error(`unsupported data location: ${location}`);\n  }\n};\n\n/**\n * Map integer data location to string value\n */\nexport const dataLocationEnumToString = (location: number): Tensor.DataLocation|undefined =>\n    (['none', 'cpu', 'cpu-pinned', 'texture', 'gpu-buffer'] as const)[location];\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env, InferenceSession, Tensor} from 'onnxruntime-common';\n\nimport {SerializableInternalBuffer, SerializableSessionMetadata, SerializableTensorMetadata, TensorMetadata} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {dataLocationStringToEnum, getTensorElementSize, isGpuBufferSupportedType, logLevelStringToEnum, tensorDataTypeEnumToString, tensorDataTypeStringToEnum, tensorTypeToTypedArrayConstructor} from './wasm-common';\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError} from './wasm-utils';\n\n// #region Initializations\n\n/**\n * There are 4 different \"initialization\" steps for ORT. They happen in different places and different time.\n *\n * 1. JavaScript initialization for onnxruntime-common and onnxruntime-web.\n *    This is the first initialization step. In this step, onnxruntime-web calls onnxruntime-common's registerBackend()\n * function multiple times to register all the available backends. The backend registration is very fast. It only\n * registers the backend name with the uninitialized backend object. No heavy initialization is done in this step.\n *    Refer to web/lib/index.ts for the backend registration.\n *\n * 2. WebAssembly artifact initialization.\n *    This happens when any registered wasm backend is used for the first time (ie. `ort.InferenceSession.create()` or\n * `ort.TrainingSession.create()` is called). In this step, onnxruntime-web does the followings:\n *     - create a proxy worker and make sure the proxy worker is ready to receive messages, if proxy is enabled.\n *     - perform feature detection, locate correct WebAssembly artifact path and call the Emscripten generated\n * JavaScript code to initialize the WebAssembly runtime.\n *         - if proxy is enabled, this step happens in the proxy worker using message 'init-wasm'.\n *         - downloading the 'ort-wasm{...}.wasm' file is done in this step.\n *         - if multi-thread is enabled, one or more webworker will be created to initialize the PThread threadpool.\n *\n * 3. ORT environment initialization.\n *    This happens after step 2. In this step, onnxruntime-web performs ONNX Runtime environment initialization.\n * Function `_OrtInit()` is called in this step.\n *     - if proxy is enabled, this step happens in the proxy worker using message 'init-ort'.\n *     - logging level (ort.env.logLevel) and thread number (ort.env.wasm.numThreads) are set in this step.\n *\n * 4. Session initialization.\n *    This happens when `ort.InferenceSession.create()` or `ort.TrainingSession.create()` is called. Unlike the first 3\n * steps (they only called once), this step will be done for each session. In this step, onnxruntime-web does the\n * followings:\n *    If the parameter is a URL:\n *    - download the model data from the URL.\n *    - copy the model data to the WASM heap. (proxy: 'copy-from')\n *    - dereference the model buffer. This step allows the original ArrayBuffer to be garbage collected.\n *    - call `_OrtCreateSession()` to create the session. (proxy: 'create')\n *\n *    If the parameter is a Uint8Array object:\n *    - copy the model data to the WASM heap. (proxy: 'copy-from')\n *    - call `_OrtCreateSession()` to create the session. (proxy: 'create')\n *\n *\n */\n\n/**\n * initialize ORT environment.\n *\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nconst initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    checkLastError('Can\\'t initialize onnxruntime.');\n  }\n};\n\n/**\n * intialize runtime environment.\n * @param env passed in the environment config object.\n */\nexport const initRuntime = async(env: Env): Promise<void> => {\n  // init ORT\n  initOrt(env.wasm.numThreads!, logLevelStringToEnum(env.logLevel));\n};\n\n/**\n * perform EP specific initialization.\n *\n * @param env\n * @param epName\n */\nexport const initEp = async(env: Env, epName: string): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WEBGPU && epName === 'webgpu') {\n    // perform WebGPU availability check\n    if (typeof navigator === 'undefined' || !navigator.gpu) {\n      throw new Error('WebGPU is not supported in current environment');\n    }\n    const adapter = await navigator.gpu.requestAdapter();\n    if (!adapter) {\n      throw new Error(\n          'Failed to get GPU adapter. You may need to enable flag \"--enable-unsafe-webgpu\" if you are using Chrome.');\n    }\n\n    if (!env.wasm.simd) {\n      throw new Error(\n          'Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP');\n    }\n\n    // init JSEP if available\n\n    // eslint-disable-next-line @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires\n    const initJsep = require('./jsep/init').init;\n    await initJsep(getInstance(), env, adapter);\n  }\n};\n\n// #endregion Initializations\n\n/**\n * valid data locations for input/output tensors.\n */\ntype SupportedTensorDataLocationForInputOutput = 'cpu'|'cpu-pinned'|'gpu-buffer';\n\ntype IOBindingState = {\n  /**\n   * the handle of IO binding.\n   */\n  readonly handle: number;\n\n  /**\n   * the preferred location for each output tensor.\n   *\n   * value is one of 'cpu', 'cpu-pinned', 'gpu-buffer'.\n   */\n  readonly outputPreferredLocations: readonly SupportedTensorDataLocationForInputOutput[];\n\n  /**\n   * enum value of the preferred location for each output tensor.\n   */\n  readonly outputPreferredLocationsEncoded: readonly number[];\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded; bindingState\n */\ntype SessionMetadata = [\n  inferenceSessionId: number, inputNamesUTF8Encoded: number[], outputNamesUTF8Encoded: number[],\n  bindingState: IOBindingState|null\n];\n\nconst activeSessions = new Map<number, SessionMetadata>();\n\n/**\n * get the input/output count of the session.\n * @param sessionHandle the handle representing the session. should be non-zero.\n * @returns a tuple including 2 numbers, representing the input count and output count.\n */\nconst getSessionInputOutputCount = (sessionHandle: number): [number, number] => {\n  const wasm = getInstance();\n  const stack = wasm.stackSave();\n  try {\n    const dataOffset = wasm.stackAlloc(8);\n    const errorCode = wasm._OrtGetInputOutputCount(sessionHandle, dataOffset, dataOffset + 4);\n    if (errorCode !== 0) {\n      checkLastError('Can\\'t get session input/output count.');\n    }\n    return [wasm.HEAP32[dataOffset / 4], wasm.HEAP32[dataOffset / 4 + 1]];\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n\n/**\n * allocate the memory and memcpy the external buffer.\n *\n * @param model - the external buffer containing the model data. Must not be the same buffer as the WASM heap.\n * @returns a 2-elements tuple - the pointer and size of the allocated buffer\n */\nexport const copyFromExternalBuffer = (model: Uint8Array): [number, number] => {\n  const wasm = getInstance();\n  const modelDataOffset = wasm._malloc(model.byteLength);\n  if (modelDataOffset === 0) {\n    throw new Error(`Can't create a session. failed to allocate a buffer of size ${model.byteLength}.`);\n  }\n  wasm.HEAPU8.set(model, modelDataOffset);\n  return [modelDataOffset, model.byteLength];\n};\n\n/**\n * create an inference session from a model data buffer.\n *\n * @param modelData - either a Uint8Array object representing the model data, or a 2-elements tuple containing the\n *     pointer and size of the model data buffer.\n * @param options an optional session options object.\n * @returns a 3-elements tuple containing [session handle, input names, output names]\n */\nexport const createSession =\n    (modelData: Uint8Array|SerializableInternalBuffer,\n     options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      let modelDataOffset: number, modelDataLength: number;\n      const wasm = getInstance();\n\n      if (Array.isArray(modelData)) {\n        // if model data is an array, it must be a 2-elements tuple containing the pointer and size of the model data\n        [modelDataOffset, modelDataLength] = modelData;\n      } else if (modelData.buffer === wasm.HEAPU8.buffer) {\n        // if model data uses the same buffer as the WASM heap, we don't need to copy it.\n        [modelDataOffset, modelDataLength] = [modelData.byteOffset, modelData.byteLength];\n      } else {\n        // otherwise, copy the model data to the WASM heap.\n        [modelDataOffset, modelDataLength] = copyFromExternalBuffer(modelData);\n      }\n\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let ioBindingHandle = 0;\n      let allocs: number[] = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNamesUTF8Encoded = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        sessionHandle = wasm._OrtCreateSession(modelDataOffset, modelDataLength, sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          checkLastError('Can\\'t create a session.');\n        }\n\n        const [inputCount, outputCount] = getSessionInputOutputCount(sessionHandle);\n\n        const inputNames = [];\n        const outputNames = [];\n        const outputPreferredLocations: SupportedTensorDataLocationForInputOutput[] = [];\n        for (let i = 0; i < inputCount; i++) {\n          const name = wasm._OrtGetInputName(sessionHandle, i);\n          if (name === 0) {\n            checkLastError('Can\\'t get an input name.');\n          }\n          inputNamesUTF8Encoded.push(name);\n          inputNames.push(wasm.UTF8ToString(name));\n        }\n        for (let i = 0; i < outputCount; i++) {\n          const name = wasm._OrtGetOutputName(sessionHandle, i);\n          if (name === 0) {\n            checkLastError('Can\\'t get an output name.');\n          }\n          outputNamesUTF8Encoded.push(name);\n          const nameString = wasm.UTF8ToString(name);\n          outputNames.push(nameString);\n\n          if (!BUILD_DEFS.DISABLE_WEBGPU) {\n            const location = typeof options?.preferredOutputLocation === 'string' ?\n                options.preferredOutputLocation :\n                options?.preferredOutputLocation?.[nameString] ?? 'cpu';\n            if (location !== 'cpu' && location !== 'cpu-pinned' && location !== 'gpu-buffer') {\n              throw new Error(`Not supported preferred output location: ${location}.`);\n            }\n            outputPreferredLocations.push(location);\n          }\n        }\n\n        // use IO binding only when at least one output is preffered to be on GPU.\n        let bindingState: IOBindingState|null = null;\n        if (!BUILD_DEFS.DISABLE_WEBGPU && outputPreferredLocations.some(l => l === 'gpu-buffer')) {\n          ioBindingHandle = wasm._OrtCreateBinding(sessionHandle);\n          if (ioBindingHandle === 0) {\n            checkLastError('Can\\'t create IO binding.');\n          }\n\n          bindingState = {\n            handle: ioBindingHandle,\n            outputPreferredLocations,\n            outputPreferredLocationsEncoded: outputPreferredLocations.map(l => dataLocationStringToEnum(l)),\n          };\n        }\n\n        activeSessions.set(sessionHandle, [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded, bindingState]);\n        return [sessionHandle, inputNames, outputNames];\n      } catch (e) {\n        inputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n        outputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n\n        if (ioBindingHandle !== 0) {\n          wasm._OrtReleaseBinding(ioBindingHandle);\n        }\n\n        if (sessionHandle !== 0) {\n          wasm._OrtReleaseSession(sessionHandle);\n        }\n        throw e;\n      } finally {\n        wasm._free(modelDataOffset);\n        if (sessionOptionsHandle !== 0) {\n          wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        }\n        allocs.forEach(alloc => wasm._free(alloc));\n      }\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error(`cannot release session. invalid session id: ${sessionId}`);\n  }\n  const [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded, ioBindingState] = session;\n\n  if (ioBindingState) {\n    wasm._OrtReleaseBinding(ioBindingState.handle);\n  }\n\n  wasm.jsepUnregisterBuffers?.(sessionId);\n\n  inputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n  outputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions.delete(sessionId);\n};\n\nexport const prepareInputOutputTensor =\n    (tensor: TensorMetadata|null, tensorHandles: number[], allocs: number[], sessionId: number, index: number):\n        void => {\n          if (!tensor) {\n            tensorHandles.push(0);\n            return;\n          }\n\n          const wasm = getInstance();\n\n          const dataType = tensor[0];\n          const dims = tensor[1];\n          const location = tensor[3];\n\n          let rawData: number;\n          let dataByteLength: number;\n\n          if (dataType === 'string' && location === 'gpu-buffer') {\n            throw new Error('String tensor is not supported on GPU.');\n          }\n\n          if (location === 'gpu-buffer') {\n            const gpuBuffer = tensor[2].gpuBuffer as GPUBuffer;\n            const elementSizeInBytes = getTensorElementSize(tensorDataTypeStringToEnum(dataType))!;\n            dataByteLength = dims.reduce((a, b) => a * b, 1) * elementSizeInBytes;\n            rawData = wasm.jsepRegisterBuffer(sessionId, index, gpuBuffer, dataByteLength);\n          } else {\n            const data = tensor[2];\n\n            if (Array.isArray(data)) {\n              // string tensor\n              dataByteLength = 4 * data.length;\n              rawData = wasm._malloc(dataByteLength);\n              allocs.push(rawData);\n              let dataIndex = rawData / 4;\n              for (let i = 0; i < data.length; i++) {\n                if (typeof data[i] !== 'string') {\n                  throw new TypeError(`tensor data at index ${i} is not a string`);\n                }\n                wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], allocs);\n              }\n            } else {\n              dataByteLength = data.byteLength;\n              rawData = wasm._malloc(dataByteLength);\n              allocs.push(rawData);\n              wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), rawData);\n            }\n          }\n\n          const stack = wasm.stackSave();\n          const dimsOffset = wasm.stackAlloc(4 * dims.length);\n          try {\n            let dimIndex = dimsOffset / 4;\n            dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n            const tensor = wasm._OrtCreateTensor(\n                tensorDataTypeStringToEnum(dataType), rawData, dataByteLength, dimsOffset, dims.length,\n                dataLocationStringToEnum(location));\n            if (tensor === 0) {\n              checkLastError(`Can't create tensor for input/output. session=${sessionId}, index=${index}.`);\n            }\n            tensorHandles.push(tensor);\n          } finally {\n            wasm.stackRestore(stack);\n          }\n        };\n\n/**\n * perform inference run\n */\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputTensors: TensorMetadata[], outputIndices: number[],\n    outputTensors: Array<TensorMetadata|null>, options: InferenceSession.RunOptions): Promise<TensorMetadata[]> => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error(`cannot run inference. invalid session id: ${sessionId}`);\n  }\n  const [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded, ioBindingState] = session;\n\n  const inputCount = inputIndices.length;\n  const outputCount = outputIndices.length;\n\n  let runOptionsHandle = 0;\n  let runOptionsAllocs: number[] = [];\n\n  const inputTensorHandles: number[] = [];\n  const outputTensorHandles: number[] = [];\n  const inputOutputAllocs: number[] = [];\n\n  const beforeRunStack = wasm.stackSave();\n  const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n  const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n  const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n  const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n  try {\n    [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n    // create input tensors\n    for (let i = 0; i < inputCount; i++) {\n      prepareInputOutputTensor(inputTensors[i], inputTensorHandles, inputOutputAllocs, sessionId, inputIndices[i]);\n    }\n\n    // create output tensors\n    for (let i = 0; i < outputCount; i++) {\n      prepareInputOutputTensor(\n          outputTensors[i], outputTensorHandles, inputOutputAllocs, sessionId, inputCount + outputIndices[i]);\n    }\n\n    let inputValuesIndex = inputValuesOffset / 4;\n    let inputNamesIndex = inputNamesOffset / 4;\n    let outputValuesIndex = outputValuesOffset / 4;\n    let outputNamesIndex = outputNamesOffset / 4;\n    for (let i = 0; i < inputCount; i++) {\n      wasm.HEAPU32[inputValuesIndex++] = inputTensorHandles[i];\n      wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n    }\n    for (let i = 0; i < outputCount; i++) {\n      wasm.HEAPU32[outputValuesIndex++] = outputTensorHandles[i];\n      wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n    }\n\n    if (!BUILD_DEFS.DISABLE_WEBGPU && ioBindingState) {\n      const {handle, outputPreferredLocations, outputPreferredLocationsEncoded} = ioBindingState;\n\n      if (inputNamesUTF8Encoded.length !== inputCount) {\n        throw new Error(`input count from feeds (${\n            inputCount}) is expected to be always equal to model's input count (${inputNamesUTF8Encoded.length}).`);\n      }\n\n      // process inputs\n      for (let i = 0; i < inputCount; i++) {\n        const index = inputIndices[i];\n        const errorCode = await wasm._OrtBindInput(handle, inputNamesUTF8Encoded[index], inputTensorHandles[i]);\n        if (errorCode !== 0) {\n          checkLastError(`Can't bind input[${i}] for session=${sessionId}.`);\n        }\n      }\n\n      // process pre-allocated outputs\n      for (let i = 0; i < outputCount; i++) {\n        const index = outputIndices[i];\n        const location = outputTensors[i]?.[3];  // undefined means output is not pre-allocated.\n\n        if (location) {\n          // output is pre-allocated. bind the tensor.\n          const errorCode = wasm._OrtBindOutput(handle, outputNamesUTF8Encoded[index], outputTensorHandles[i], 0);\n          if (errorCode !== 0) {\n            checkLastError(`Can't bind pre-allocated output[${i}] for session=${sessionId}.`);\n          }\n        } else {\n          // output is not pre-allocated. reset preferred location.\n          const errorCode =\n              wasm._OrtBindOutput(handle, outputNamesUTF8Encoded[index], 0, outputPreferredLocationsEncoded[index]);\n          if (errorCode !== 0) {\n            checkLastError(`Can't bind output[${i}] to ${outputPreferredLocations[i]} for session=${sessionId}.`);\n          }\n        }\n      }\n    }\n\n    let errorCode: number;\n\n    if (!BUILD_DEFS.DISABLE_WEBGPU && ioBindingState) {\n      errorCode = await wasm._OrtRunWithBinding(\n          sessionHandle, ioBindingState.handle, outputCount, outputValuesOffset, runOptionsHandle);\n    } else {\n      errorCode = await wasm._OrtRun(\n          sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n          outputValuesOffset, runOptionsHandle);\n    }\n\n    if (errorCode !== 0) {\n      checkLastError('failed to call OrtRun().');\n    }\n\n    const output: TensorMetadata[] = [];\n\n    for (let i = 0; i < outputCount; i++) {\n      const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n      if (tensor === outputTensorHandles[i]) {\n        // output tensor is pre-allocated. no need to copy data.\n        output.push(outputTensors[i]!);\n        continue;\n      }\n\n      const beforeGetTensorDataStack = wasm.stackSave();\n      // stack allocate 4 pointer value\n      const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n      let keepOutputTensor = false;\n      let type: Tensor.Type|undefined, dataOffset = 0;\n      try {\n        const errorCode = wasm._OrtGetTensorData(\n            tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n        if (errorCode !== 0) {\n          checkLastError(`Can't access output tensor data on index ${i}.`);\n        }\n        let tensorDataIndex = tensorDataOffset / 4;\n        const dataType = wasm.HEAPU32[tensorDataIndex++];\n        dataOffset = wasm.HEAPU32[tensorDataIndex++];\n        const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n        const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n        const dims = [];\n        for (let i = 0; i < dimsLength; i++) {\n          dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n        }\n        wasm._OrtFree(dimsOffset);\n\n        const size = dims.reduce((a, b) => a * b, 1);\n        type = tensorDataTypeEnumToString(dataType);\n\n        const preferredLocation = ioBindingState?.outputPreferredLocations[outputIndices[i]];\n\n        if (type === 'string') {\n          if (preferredLocation === 'gpu-buffer') {\n            throw new Error('String tensor is not supported on GPU.');\n          }\n          const stringData: string[] = [];\n          let dataIndex = dataOffset / 4;\n          for (let i = 0; i < size; i++) {\n            const offset = wasm.HEAPU32[dataIndex++];\n            const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n            stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n          }\n          output.push([type, dims, stringData, 'cpu']);\n        } else {\n          // If a certain output's preferred location is GPU but the tensor is empty, we still need to create a CPU\n          // tensor for it. There is no mapping GPU buffer for an empty tensor.\n          if (preferredLocation === 'gpu-buffer' && size > 0) {\n            const gpuBuffer = wasm.jsepGetBuffer(dataOffset);\n            const elementSize = getTensorElementSize(dataType);\n            if (elementSize === undefined || !isGpuBufferSupportedType(type)) {\n              throw new Error(`Unsupported data type: ${type}`);\n            }\n\n            // do not release the tensor right now. it will be released when user calls tensor.dispose().\n            keepOutputTensor = true;\n\n            output.push([\n              type, dims, {\n                gpuBuffer,\n                download: wasm.jsepCreateDownloader(gpuBuffer, size * elementSize, type),\n                dispose: () => {\n                  wasm._OrtReleaseTensor(tensor);\n                }\n              },\n              'gpu-buffer'\n            ]);\n          } else {\n            const typedArrayConstructor = tensorTypeToTypedArrayConstructor(type);\n            const data = new typedArrayConstructor(size);\n            new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n            output.push([type, dims, data, 'cpu']);\n          }\n        }\n      } finally {\n        wasm.stackRestore(beforeGetTensorDataStack);\n        if (type === 'string' && dataOffset) {\n          wasm._free(dataOffset);\n        }\n        if (!keepOutputTensor) {\n          wasm._OrtReleaseTensor(tensor);\n        }\n      }\n    }\n\n    if (ioBindingState) {\n      wasm._OrtClearBoundOutputs(ioBindingState.handle);\n    }\n\n    return output;\n  } finally {\n    wasm.stackRestore(beforeRunStack);\n\n    inputTensorHandles.forEach(v => wasm._OrtReleaseTensor(v));\n    outputTensorHandles.forEach(v => wasm._OrtReleaseTensor(v));\n    inputOutputAllocs.forEach(p => wasm._free(p));\n\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    runOptionsAllocs.forEach(p => wasm._free(p));\n  }\n};\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    checkLastError('Can\\'t get an profile file name.');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensorMetadata[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && 'buffer' in data) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession} from 'onnxruntime-common';\n\nimport {OrtWasmMessage, SerializableInternalBuffer, SerializableSessionMetadata, SerializableTensorMetadata, TensorMetadata} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\ntype PromiseCallbacks<T = void> = [resolve: (result: T) => void, reject: (reason: unknown) => void];\nlet initWasmCallbacks: PromiseCallbacks;\nconst queuedCallbacks: Map<OrtWasmMessage['type'], Array<PromiseCallbacks<unknown>>> = new Map();\n\nconst enqueueCallbacks = (type: OrtWasmMessage['type'], callbacks: PromiseCallbacks<unknown>): void => {\n  const queue = queuedCallbacks.get(type);\n  if (queue) {\n    queue.push(callbacks);\n  } else {\n    queuedCallbacks.set(type, [callbacks]);\n  }\n};\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ep':\n    case 'copy-from':\n    case 'create':\n    case 'release':\n    case 'run':\n    case 'end-profiling': {\n      const callbacks = queuedCallbacks.get(ev.data.type)!;\n      if (ev.data.err) {\n        callbacks.shift()![1](ev.data.err);\n      } else {\n        callbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    }\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initializeWebAssemblyAndOrtRuntime = async(): Promise<void> => {\n  if (initialized) {\n    return;\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initWasm()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initWasm()\\' failed.');\n  }\n\n  initializing = true;\n\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, +(scriptSrc).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n\n      const workerUrl = URL.createObjectURL(new Blob(\n          [\n            // This require() function is handled by esbuild plugin to load file content as string.\n            // eslint-disable-next-line @typescript-eslint/no-require-imports\n            require('./proxy-worker/main')\n          ],\n          {type: 'text/javascript'}));\n      proxyWorker = new Worker(workerUrl, {name: 'ort-wasm-proxy-worker'});\n      proxyWorker.onerror = (ev: ErrorEvent) => reject(ev);\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      URL.revokeObjectURL(workerUrl);\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    try {\n      await initializeWebAssembly(env.wasm);\n      await core.initRuntime(env);\n      initialized = true;\n    } catch (e) {\n      aborted = true;\n      throw e;\n    } finally {\n      initializing = false;\n    }\n  }\n};\n\nexport const initializeOrtEp = async(epName: string): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      enqueueCallbacks('init-ep', [resolve, reject]);\n      const message: OrtWasmMessage = {type: 'init-ep', in : {epName, env}};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    await core.initEp(env, epName);\n  }\n};\n\nexport const copyFromExternalBuffer = async(buffer: Uint8Array): Promise<SerializableInternalBuffer> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableInternalBuffer>((resolve, reject) => {\n      enqueueCallbacks('copy-from', [resolve, reject]);\n      const message: OrtWasmMessage = {type: 'copy-from', in : {buffer}};\n      proxyWorker!.postMessage(message, [buffer.buffer]);\n    });\n  } else {\n    return core.copyFromExternalBuffer(buffer);\n  }\n};\n\nexport const createSession =\n    async(model: SerializableInternalBuffer|Uint8Array, options?: InferenceSession.SessionOptions):\n        Promise<SerializableSessionMetadata> => {\n          if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n            // check unsupported options\n            if (options?.preferredOutputLocation) {\n              throw new Error('session option \"preferredOutputLocation\" is not supported for proxy.');\n            }\n            ensureWorker();\n            return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n              enqueueCallbacks('create', [resolve, reject]);\n              const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n              const transferable: Transferable[] = [];\n              if (model instanceof Uint8Array) {\n                transferable.push(model.buffer);\n              }\n              proxyWorker!.postMessage(message, transferable);\n            });\n          } else {\n            return core.createSession(model, options);\n          }\n        };\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      enqueueCallbacks('release', [resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: TensorMetadata[], outputIndices: number[],\n    outputs: Array<TensorMetadata|null>, options: InferenceSession.RunOptions): Promise<TensorMetadata[]> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    // check inputs location\n    if (inputs.some(t => t[3] !== 'cpu')) {\n      throw new Error('input tensor on GPU is not supported for proxy.');\n    }\n    // check outputs location\n    if (outputs.some(t => t)) {\n      throw new Error('pre-allocated output tensor is not supported for proxy.');\n    }\n    ensureWorker();\n    return new Promise<SerializableTensorMetadata[]>((resolve, reject) => {\n      enqueueCallbacks('run', [resolve, reject]);\n      const serializableInputs = inputs as SerializableTensorMetadata[];  // every input is on CPU.\n      const message: OrtWasmMessage =\n          {type: 'run', in : {sessionId, inputIndices, inputs: serializableInputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(serializableInputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, outputs, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      enqueueCallbacks('end-profiling', [resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'node:fs/promises';\nimport {InferenceSession, InferenceSessionHandler, SessionHandler, Tensor, TRACE_FUNC_BEGIN, TRACE_FUNC_END} from 'onnxruntime-common';\n\nimport {SerializableInternalBuffer, TensorMetadata} from './proxy-messages';\nimport {copyFromExternalBuffer, createSession, endProfiling, releaseSession, run} from './proxy-wrapper';\nimport {isGpuBufferSupportedType} from './wasm-common';\n\nexport const encodeTensorMetadata = (tensor: Tensor, getName: () => string): TensorMetadata => {\n  switch (tensor.location) {\n    case 'cpu':\n      return [tensor.type, tensor.dims, tensor.data, 'cpu'];\n    case 'gpu-buffer':\n      return [tensor.type, tensor.dims, {gpuBuffer: tensor.gpuBuffer}, 'gpu-buffer'];\n    default:\n      throw new Error(`invalid data location: ${tensor.location} for ${getName()}`);\n  }\n};\n\nexport const decodeTensorMetadata = (tensor: TensorMetadata): Tensor => {\n  switch (tensor[3]) {\n    case 'cpu':\n      return new Tensor(tensor[0], tensor[2], tensor[1]);\n    case 'gpu-buffer': {\n      const dataType = tensor[0];\n      if (!isGpuBufferSupportedType(dataType)) {\n        throw new Error(`not supported data type: ${dataType} for deserializing GPU tensor`);\n      }\n      const {gpuBuffer, download, dispose} = tensor[2];\n      return Tensor.fromGpuBuffer(gpuBuffer, {dataType, dims: tensor[1], download, dispose});\n    }\n    default:\n      throw new Error(`invalid data location: ${tensor[3]}`);\n  }\n};\n\nexport class OnnxruntimeWebAssemblySessionHandler implements InferenceSessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async fetchModelAndCopyToWasmMemory(path: string): Promise<SerializableInternalBuffer> {\n    // fetch model from url and move to wasm heap. The arraybufffer that held the http\n    // response is freed once we return\n    const response = await fetch(path);\n    if (response.status !== 200) {\n      throw new Error(`failed to load model: ${path}`);\n    }\n    const arrayBuffer = await response.arrayBuffer();\n    return copyFromExternalBuffer(new Uint8Array(arrayBuffer));\n  }\n\n  async loadModel(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    TRACE_FUNC_BEGIN();\n    let model: Parameters<typeof createSession>[0];\n\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof process !== 'undefined' && process.versions && process.versions.node) {\n        // node\n        model = await readFile(pathOrBuffer);\n      } else {\n        // browser\n        // fetch model and copy to wasm heap.\n        model = await this.fetchModelAndCopyToWasmMemory(pathOrBuffer);\n      }\n    } else {\n      model = pathOrBuffer;\n    }\n\n    [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n    TRACE_FUNC_END();\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    TRACE_FUNC_BEGIN();\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputArray: Array<Tensor|null> = [];\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputArray.push(tensor);\n      outputIndices.push(index);\n    });\n\n    const inputs =\n        inputArray.map((t, i) => encodeTensorMetadata(t, () => `input \"${this.inputNames[inputIndices[i]]}\"`));\n    const outputs = outputArray.map(\n        (t, i) => t ? encodeTensorMetadata(t, () => `output \"${this.outputNames[outputIndices[i]]}\"`) : null);\n\n    const results = await run(this.sessionId, inputIndices, inputs, outputIndices, outputs, options);\n\n    const resultMap: SessionHandler.ReturnType = {};\n    for (let i = 0; i < results.length; i++) {\n      resultMap[this.outputNames[outputIndices[i]]] = outputArray[i] ?? decodeTensorMetadata(results[i]);\n    }\n    TRACE_FUNC_END();\n    return resultMap;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {cpus} from 'node:os';\nimport {Backend, env, InferenceSession, InferenceSessionHandler} from 'onnxruntime-common';\n\nimport {initializeOrtEp, initializeWebAssemblyAndOrtRuntime} from './wasm/proxy-wrapper';\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler-inference';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.trace !== 'boolean') {\n    env.wasm.trace = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nexport class OnnxruntimeWebAssemblyBackend implements Backend {\n  /**\n   * This function initializes the WebAssembly backend.\n   *\n   * This function will be called only once for each backend name. It will be called the first time when\n   * `ort.InferenceSession.create()` is called with a registered backend name.\n   *\n   * @param backendName - the registered backend name.\n   */\n  async init(backendName: string): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initializeWebAssemblyAndOrtRuntime();\n\n    // performe EP specific initialization\n    await initializeOrtEp(backendName);\n  }\n  createInferenceSessionHandler(path: string, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSessionHandler>;\n  createInferenceSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSessionHandler>;\n  async createInferenceSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSessionHandler> {\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(pathOrBuffer, options);\n    return Promise.resolve(handler);\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OnnxruntimeWebAssemblyBackend} from './backend-wasm';\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports */\n// We use \"require\" instead of \"import\" here because import statement must be put in top level. Our current code does\n// not allow bundler to tree-shaking code as expected because some codes are treated as having side effects.\n// So we import code inside the if-clause to allow bundler remove the code safely.\n\nexport * from 'onnxruntime-common';\nimport * as ort from 'onnxruntime-common';\nexport default ort;\n\nimport {registerBackend, env} from 'onnxruntime-common';\nimport {version} from './version';\n\nif (!BUILD_DEFS.DISABLE_WEBGL) {\n  const onnxjsBackend = require('./backend-onnxjs').onnxjsBackend;\n  registerBackend('webgl', onnxjsBackend, -10);\n}\n\nif (!BUILD_DEFS.DISABLE_WASM) {\n  const wasmBackend = BUILD_DEFS.DISABLE_TRAINING ? require('./backend-wasm-inference').wasmBackend :\n                                                    require('./backend-wasm-training').wasmBackend;\n  if (!BUILD_DEFS.DISABLE_WEBGPU) {\n    registerBackend('webgpu', wasmBackend, 5);\n  }\n  registerBackend('cpu', wasmBackend, 10);\n  registerBackend('wasm', wasmBackend, 10);\n  if (BUILD_DEFS.DISABLE_TRAINING) {\n    registerBackend('xnnpack', wasmBackend, 9);\n    if (!BUILD_DEFS.DISABLE_WEBNN) {\n      registerBackend('webnn', wasmBackend, 9);\n    }\n  }\n}\n\nObject.defineProperty(env.versions, 'web', {value: version, enumerable: true});\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// This file is generated by /js/scripts/update-version.ts\n// Do not modify file content manually.\n\nexport const version = '1.17.0';\n"],
  "mappings": "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",
  "names": ["require_ort_wasm", "__commonJSMin", "exports", "module", "ortWasm", "_scriptDir", "moduleArg", "h", "aa", "ba", "a", "b", "ca", "da", "ea", "m", "fa", "p", "ha", "t", "fs", "ia", "c", "d", "e", "g", "ja", "x", "ka", "z", "la", "A", "B", "C", "D", "E", "G", "ma", "na", "oa", "pa", "qa", "ra", "sa", "ta", "I", "ua", "J", "va", "K", "wa", "xa", "ya", "za", "Aa", "Ba", "Ca", "Da", "Ea", "Fa", "l", "L", "M", "N", "k", "Ga", "Ha", "O", "Ia", "Ja", "Ka", "P", "La", "Q", "Ma", "Na", "R", "Oa", "S", "T", "Pa", "Qa", "Ra", "Sa", "Ta", "Ua", "Va", "Wa", "Xa", "Ya", "V", "Za", "U", "$a", "W", "X", "bb", "cb", "db", "eb", "fb", "gb", "hb", "ib", "jb", "Y", "kb", "lb", "nb", "mb", "ob", "qb", "pb", "rb", "sb", "tb", "ub", "vb", "f", "r", "u", "ab", "H", "n", "q", "v", "y", "F", "wb", "xb", "yb", "Z", "zb", "Ab", "Bb", "Cb", "Db", "Eb", "Fb", "ortWasmFactory", "ortWasmFactoryThreaded", "wasm", "initialized", "initializing", "aborted", "isMultiThreadSupported", "isSimdSupported", "getWasmFileName", "initializeWebAssembly", "getInstance", "init_wasm_factory", "__esmMin", "useSimd", "useThreads", "flags", "timeout", "numThreads", "simd", "wasmPaths", "wasmPrefixOverride", "wasmFileName", "wasmPathOverride", "isTimeout", "tasks", "resolve", "reject", "fileName", "scriptDirectory", "module", "what", "allocWasmString", "iterateExtraOptions", "checkLastError", "init_wasm_utils", "__esmMin", "init_wasm_factory", "data", "allocs", "wasm", "getInstance", "dataLength", "dataOffset", "options", "prefix", "seen", "handler", "key", "value", "name", "message", "stack", "paramsOffset", "errorCode", "errorMessagePointer", "errorMessage", "setRunOptions", "init_run_options", "__esmMin", "init_wasm_factory", "init_wasm_utils", "options", "wasm", "getInstance", "runOptionsHandle", "allocs", "runOptions", "tagDataOffset", "allocWasmString", "checkLastError", "iterateExtraOptions", "key", "value", "keyDataOffset", "valueDataOffset", "e", "alloc", "getGraphOptimzationLevel", "getExecutionMode", "appendDefaultOptions", "setExecutionProviders", "setSessionOptions", "init_session_options", "__esmMin", "init_wasm_factory", "init_wasm_utils", "graphOptimizationLevel", "executionMode", "options", "session", "ep", "sessionOptionsHandle", "executionProviders", "allocs", "epName", "webnnOptions", "keyDataOffset", "allocWasmString", "valueDataOffset", "getInstance", "checkLastError", "numThreads", "webgpuOptions", "epNameDataOffset", "wasm", "sessionOptions", "logIdDataOffset", "logSeverityLevel", "logVerbosityLevel", "optimizedModelFilePathOffset", "name", "value", "nameOffset", "iterateExtraOptions", "key", "e", "alloc", "tensorDataTypeStringToEnum", "tensorDataTypeEnumToString", "getTensorElementSize", "tensorTypeToTypedArrayConstructor", "logLevelStringToEnum", "isGpuBufferSupportedType", "dataLocationStringToEnum", "init_wasm_common", "__esmMin", "type", "typeProto", "dateType", "logLevel", "location", "initOrt", "initRuntime", "initEp", "activeSessions", "getSessionInputOutputCount", "copyFromExternalBuffer", "createSession", "releaseSession", "prepareInputOutputTensor", "run", "endProfiling", "init_wasm_core_impl", "__esmMin", "init_run_options", "init_session_options", "init_wasm_common", "init_wasm_factory", "init_wasm_utils", "numThreads", "loggingLevel", "getInstance", "checkLastError", "env", "logLevelStringToEnum", "epName", "sessionHandle", "wasm", "stack", "dataOffset", "model", "modelDataOffset", "modelData", "options", "modelDataLength", "sessionOptionsHandle", "ioBindingHandle", "allocs", "inputNamesUTF8Encoded", "outputNamesUTF8Encoded", "setSessionOptions", "inputCount", "outputCount", "inputNames", "outputNames", "outputPreferredLocations", "i", "name", "nameString", "bindingState", "e", "buf", "alloc", "sessionId", "session", "ioBindingState", "tensor", "tensorHandles", "index", "dataType", "dims", "location", "rawData", "dataByteLength", "gpuBuffer", "elementSizeInBytes", "getTensorElementSize", "tensorDataTypeStringToEnum", "a", "b", "data", "dataIndex", "allocWasmString", "dimsOffset", "dimIndex", "d", "dataLocationStringToEnum", "inputIndices", "inputTensors", "outputIndices", "outputTensors", "runOptionsHandle", "runOptionsAllocs", "inputTensorHandles", "outputTensorHandles", "inputOutputAllocs", "beforeRunStack", "inputValuesOffset", "inputNamesOffset", "outputValuesOffset", "outputNamesOffset", "setRunOptions", "inputValuesIndex", "inputNamesIndex", "outputValuesIndex", "outputNamesIndex", "errorCode", "output", "beforeGetTensorDataStack", "tensorDataOffset", "keepOutputTensor", "type", "tensorDataIndex", "dimsLength", "size", "tensorDataTypeEnumToString", "preferredLocation", "stringData", "offset", "maxBytesToRead", "elementSize", "isGpuBufferSupportedType", "typedArrayConstructor", "tensorTypeToTypedArrayConstructor", "v", "p", "profileFileName", "import_onnxruntime_common", "initializing", "initialized", "aborted", "scriptSrc", "initializeWebAssemblyAndOrtRuntime", "initializeOrtEp", "copyFromExternalBuffer", "createSession", "releaseSession", "run", "endProfiling", "init_proxy_wrapper", "__esmMin", "init_wasm_core_impl", "init_wasm_factory", "initializeWebAssembly", "initRuntime", "e", "epName", "initEp", "buffer", "model", "options", "sessionId", "inputIndices", "inputs", "outputIndices", "outputs", "import_promises", "import_onnxruntime_common", "encodeTensorMetadata", "decodeTensorMetadata", "OnnxruntimeWebAssemblySessionHandler", "init_session_handler_inference", "__esmMin", "init_proxy_wrapper", "init_wasm_common", "tensor", "getName", "dataType", "isGpuBufferSupportedType", "gpuBuffer", "download", "dispose", "path", "response", "arrayBuffer", "copyFromExternalBuffer", "pathOrBuffer", "options", "model", "createSession", "releaseSession", "feeds", "fetches", "inputArray", "inputIndices", "kvp", "name", "index", "outputArray", "outputIndices", "inputs", "t", "i", "outputs", "results", "run", "resultMap", "endProfiling", "import_node_os", "import_onnxruntime_common", "initializeFlags", "OnnxruntimeWebAssemblyBackend", "init_backend_wasm", "__esmMin", "init_proxy_wrapper", "init_session_handler_inference", "numCpuLogicalCores", "backendName", "initializeWebAssemblyAndOrtRuntime", "initializeOrtEp", "pathOrBuffer", "options", "handler", "OnnxruntimeWebAssemblySessionHandler", "backend_wasm_inference_exports", "__export", "wasmBackend", "init_backend_wasm_inference", "__esmMin", "init_backend_wasm", "OnnxruntimeWebAssemblyBackend", "lib_exports", "__export", "lib_default", "__toCommonJS", "__reExport", "ort", "import_onnxruntime_common", "version", "lib_default", "ort", "wasmBackend", "version"]
}
