{
  "version": 3,
  "sources": ["../../../common/lib/backend-impl.ts", "../../../common/lib/backend.ts", "../../../common/lib/version.ts", "../../../common/lib/env-impl.ts", "../../../common/lib/env.ts", "../../../common/lib/tensor-conversion-impl.ts", "../../../common/lib/tensor-factory-impl.ts", "../../../common/lib/tensor-impl-type-mapping.ts", "../../../common/lib/tensor-utils-impl.ts", "../../../common/lib/tensor-impl.ts", "../../../common/lib/tensor.ts", "../../../common/lib/inference-session-impl.ts", "../../../common/lib/inference-session.ts", "../../../common/lib/onnx-value.ts", "../../../common/lib/training-session-impl.ts", "../../../common/lib/training-session.ts", "../../../common/lib/index.ts", "nodejs-ignore:fs", "nodejs-ignore:path", "../../lib/wasm/binding/ort-wasm-simd.jsep.js", "nodejs-ignore:worker_threads", "nodejs-ignore:perf_hooks", "nodejs-ignore:os", "../../lib/wasm/binding/ort-wasm-simd-threaded.jsep.js", "../../lib/wasm/binding/ort-wasm-threaded.worker.js", "../../lib/wasm/wasm-factory.ts", "../../lib/wasm/wasm-utils.ts", "../../lib/wasm/run-options.ts", "../../lib/wasm/session-options.ts", "../../lib/wasm/wasm-common.ts", "../../lib/wasm/jsep/log.ts", "../../lib/wasm/jsep/tensor-view.ts", "../../lib/wasm/jsep/webgpu/types.ts", "../../lib/wasm/jsep/webgpu/gpu-data-manager.ts", "../../lib/wasm/jsep/webgpu/attribute-with-cache-key.ts", "../../lib/wasm/jsep/util.ts", "../../lib/wasm/jsep/webgpu/ops/common.ts", "../../lib/wasm/jsep/webgpu/ops/reduce.ts", "../../lib/wasm/jsep/webgpu/ops/argminmax.ts", "../../lib/wasm/jsep/webgpu/ops/bias-add.ts", "../../lib/wasm/jsep/webgpu/ops/unary-op.ts", "../../lib/wasm/jsep/webgpu/ops/bias-split-gelu.ts", "../../lib/wasm/jsep/webgpu/ops/binary-op.ts", "../../lib/wasm/jsep/webgpu/ops/concat.ts", "../../lib/wasm/jsep/webgpu/ops/3rd-party/activation_util.ts", "../../lib/wasm/jsep/webgpu/ops/3rd-party/conv_util.ts", "../../lib/wasm/jsep/webgpu/ops/fuse-utils.ts", "../../lib/wasm/jsep/webgpu/ops/3rd-party/matmul_packed_webgpu.ts", "../../lib/wasm/jsep/webgpu/ops/3rd-party/conv2d_mm_webgpu.ts", "../../lib/wasm/jsep/webgpu/ops/conv-grouped.ts", "../../lib/wasm/jsep/webgpu/ops/transpose.ts", "../../lib/wasm/jsep/webgpu/ops/conv.ts", "../../lib/wasm/jsep/webgpu/ops/3rd-party/conv_backprop_mm_webgpu.ts", "../../lib/wasm/jsep/webgpu/ops/3rd-party/conv_backprop_webgpu.ts", "../../lib/wasm/jsep/webgpu/ops/conv-transpose.ts", "../../lib/wasm/jsep/webgpu/ops/einsum.ts", "../../lib/wasm/jsep/webgpu/ops/expand.ts", "../../lib/wasm/jsep/webgpu/ops/gather.ts", "../../lib/wasm/jsep/webgpu/ops/gather-elements.ts", "../../lib/wasm/jsep/webgpu/ops/gemm.ts", "../../lib/wasm/jsep/webgpu/ops/instance-norm.ts", "../../lib/wasm/jsep/webgpu/ops/layer-norm.ts", "../../lib/wasm/jsep/webgpu/ops/matmul.ts", "../../lib/wasm/jsep/webgpu/ops/pad.ts", "../../lib/wasm/jsep/webgpu/ops/pool.ts", "../../lib/wasm/jsep/webgpu/ops/range.ts", "../../lib/wasm/jsep/webgpu/ops/resize.ts", "../../lib/wasm/jsep/webgpu/ops/skip-layer-norm.ts", "../../lib/wasm/jsep/webgpu/ops/slice.ts", "../../lib/wasm/jsep/webgpu/ops/softmax.ts", "../../lib/wasm/jsep/webgpu/ops/split.ts", "../../lib/wasm/jsep/webgpu/ops/tile.ts", "../../lib/wasm/jsep/webgpu/ops/where.ts", "../../lib/wasm/jsep/webgpu/op-resolve-rules.ts", "../../lib/wasm/jsep/webgpu/program-manager.ts", "../../lib/wasm/jsep/backend-webgpu.ts", "../../lib/wasm/jsep/init.ts", "../../lib/wasm/wasm-core-impl.ts", "proxy-worker:./proxy-worker/main", "../../lib/wasm/proxy-wrapper.ts", "../../lib/wasm/session-handler.ts", "../../lib/backend-wasm.ts", "../../lib/backend-wasm-inference.ts", "../../lib/index.ts", "../../lib/version.ts"],
  "sourcesContent": ["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Backend} from './backend.js';\n\ninterface BackendInfo {\n  backend: Backend;\n  priority: number;\n\n  initPromise?: Promise<void>;\n  initialized?: boolean;\n  aborted?: boolean;\n}\n\nconst backends: Map<string, BackendInfo> = new Map();\nconst backendsSortedByPriority: string[] = [];\n\n/**\n * Register a backend.\n *\n * @param name - the name as a key to lookup as an execution provider.\n * @param backend - the backend object.\n * @param priority - an integer indicating the priority of the backend. Higher number means higher priority. if priority\n * < 0, it will be considered as a 'beta' version and will not be used as a fallback backend by default.\n *\n * @ignore\n */\nexport const registerBackend = (name: string, backend: Backend, priority: number): void => {\n  if (backend && typeof backend.init === 'function' && typeof backend.createInferenceSessionHandler === 'function') {\n    const currentBackend = backends.get(name);\n    if (currentBackend === undefined) {\n      backends.set(name, {backend, priority});\n    } else if (currentBackend.priority > priority) {\n      // same name is already registered with a higher priority. skip registeration.\n      return;\n    } else if (currentBackend.priority === priority) {\n      if (currentBackend.backend !== backend) {\n        throw new Error(`cannot register backend \"${name}\" using priority ${priority}`);\n      }\n    }\n\n    if (priority >= 0) {\n      const i = backendsSortedByPriority.indexOf(name);\n      if (i !== -1) {\n        backendsSortedByPriority.splice(i, 1);\n      }\n\n      for (let i = 0; i < backendsSortedByPriority.length; i++) {\n        if (backends.get(backendsSortedByPriority[i])!.priority <= priority) {\n          backendsSortedByPriority.splice(i, 0, name);\n          return;\n        }\n      }\n      backendsSortedByPriority.push(name);\n    }\n    return;\n  }\n\n  throw new TypeError('not a valid backend');\n};\n\n/**\n * Resolve backend by specified hints.\n *\n * @param backendHints - a list of execution provider names to lookup. If omitted use registered backends as list.\n * @returns a promise that resolves to the backend.\n *\n * @ignore\n */\nexport const resolveBackend = async(backendHints: readonly string[]): Promise<Backend> => {\n  const backendNames = backendHints.length === 0 ? backendsSortedByPriority : backendHints;\n  const errors = [];\n  for (const backendName of backendNames) {\n    const backendInfo = backends.get(backendName);\n    if (backendInfo) {\n      if (backendInfo.initialized) {\n        return backendInfo.backend;\n      } else if (backendInfo.aborted) {\n        continue;  // current backend is unavailable; try next\n      }\n\n      const isInitializing = !!backendInfo.initPromise;\n      try {\n        if (!isInitializing) {\n          backendInfo.initPromise = backendInfo.backend.init();\n        }\n        await backendInfo.initPromise;\n        backendInfo.initialized = true;\n        return backendInfo.backend;\n      } catch (e) {\n        if (!isInitializing) {\n          errors.push({name: backendName, err: e});\n        }\n        backendInfo.aborted = true;\n      } finally {\n        delete backendInfo.initPromise;\n      }\n    }\n  }\n\n  throw new Error(`no available backend found. ERR: ${errors.map(e => `[${e.name}] ${e.err}`).join(', ')}`);\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from './inference-session.js';\nimport {OnnxValue} from './onnx-value.js';\nimport {TrainingSession} from './training-session.js';\n\n/**\n * @ignore\n */\nexport declare namespace SessionHandler {\n  type FeedsType = {[name: string]: OnnxValue};\n  type FetchesType = {[name: string]: OnnxValue | null};\n  type ReturnType = {[name: string]: OnnxValue};\n}\n\n/**\n * Represents shared SessionHandler functionality\n *\n * @ignore\n */\ninterface SessionHandler {\n  dispose(): Promise<void>;\n\n  readonly inputNames: readonly string[];\n  readonly outputNames: readonly string[];\n}\n\n/**\n * Represent a handler instance of an inference session.\n *\n * @ignore\n */\nexport interface InferenceSessionHandler extends SessionHandler {\n  startProfiling(): void;\n  endProfiling(): void;\n\n  run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType,\n      options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType>;\n}\n\n/**\n * Represent a handler instance of a training inference session.\n *\n * @ignore\n */\nexport interface TrainingSessionHandler extends SessionHandler {\n  runTrainStep(\n      feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType,\n      options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType>;\n\n  loadParametersBuffer(array: Uint8Array, trainableOnly: boolean): Promise<void>;\n  getContiguousParameters(trainableOnly: boolean): Promise<Uint8Array>;\n}\n\n/**\n * Represent a backend that provides implementation of model inferencing.\n *\n * @ignore\n */\nexport interface Backend {\n  /**\n   * Initialize the backend asynchronously. Should throw when failed.\n   */\n  init(): Promise<void>;\n\n  createInferenceSessionHandler(uriOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSessionHandler>;\n\n  createTrainingSessionHandler?\n      (checkpointStateUriOrBuffer: TrainingSession.URIorBuffer, trainModelUriOrBuffer: TrainingSession.URIorBuffer,\n       evalModelUriOrBuffer: TrainingSession.URIorBuffer, optimizerModelUriOrBuffer: TrainingSession.URIorBuffer,\n       options: InferenceSession.SessionOptions): Promise<TrainingSessionHandler>;\n}\n\nexport {registerBackend} from './backend-impl.js';\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// This file is generated by /js/scripts/update-version.ts\n// Do not modify file content manually.\n\nexport const version = '1.17.0';\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from './env.js';\nimport {version} from './version.js';\n\ntype LogLevelType = Env['logLevel'];\n\nlet logLevelValue: Required<LogLevelType> = 'warning';\n\nexport const env: Env = {\n  wasm: {} as Env.WebAssemblyFlags,\n  webgl: {} as Env.WebGLFlags,\n  webgpu: {} as Env.WebGpuFlags,\n  versions: {common: version},\n\n  set logLevel(value: LogLevelType) {\n    if (value === undefined) {\n      return;\n    }\n    if (typeof value !== 'string' || ['verbose', 'info', 'warning', 'error', 'fatal'].indexOf(value) === -1) {\n      throw new Error(`Unsupported logging level: ${value}`);\n    }\n    logLevelValue = value;\n  },\n  get logLevel(): Required<LogLevelType> {\n    return logLevelValue;\n  },\n};\n\n// set property 'logLevel' so that they can be correctly transferred to worker by `postMessage()`.\nObject.defineProperty(env, 'logLevel', {enumerable: true});\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env as envImpl} from './env-impl.js';\n\nexport declare namespace Env {\n  export type WasmPrefixOrFilePaths = string|{\n    /* eslint-disable @typescript-eslint/naming-convention */\n    'ort-wasm.wasm'?: string;\n    'ort-wasm-threaded.wasm'?: string;\n    'ort-wasm-simd.wasm'?: string;\n    'ort-training-wasm-simd.wasm'?: string;\n    'ort-wasm-simd-threaded.wasm'?: string;\n    /* eslint-enable @typescript-eslint/naming-convention */\n  };\n  export interface WebAssemblyFlags {\n    /**\n     * set or get number of thread(s). If omitted or set to 0, number of thread(s) will be determined by system. If set\n     * to 1, no worker thread will be spawned.\n     *\n     * This setting is available only when WebAssembly multithread feature is available in current context.\n     *\n     * @defaultValue `0`\n     */\n    numThreads?: number;\n\n    /**\n     * set or get a boolean value indicating whether to enable SIMD. If set to false, SIMD will be forcely disabled.\n     *\n     * This setting is available only when WebAssembly SIMD feature is available in current context.\n     *\n     * @defaultValue `true`\n     */\n    simd?: boolean;\n\n    /**\n     * Set or get a number specifying the timeout for initialization of WebAssembly backend, in milliseconds. A zero\n     * value indicates no timeout is set.\n     *\n     * @defaultValue `0`\n     */\n    initTimeout?: number;\n\n    /**\n     * Set a custom URL prefix to the .wasm files or a set of overrides for each .wasm file. The override path should be\n     * an absolute path.\n     */\n    wasmPaths?: WasmPrefixOrFilePaths;\n\n    /**\n     * Set or get a boolean value indicating whether to proxy the execution of main thread to a worker thread.\n     *\n     * @defaultValue `false`\n     */\n    proxy?: boolean;\n  }\n\n  export interface WebGLFlags {\n    /**\n     * Set or get the WebGL Context ID (webgl or webgl2).\n     *\n     * @defaultValue `'webgl2'`\n     */\n    contextId?: 'webgl'|'webgl2';\n    /**\n     * Get the WebGL rendering context.\n     */\n    readonly context: WebGLRenderingContext;\n    /**\n     * Set or get the maximum batch size for matmul. 0 means to disable batching.\n     *\n     * @deprecated\n     */\n    matmulMaxBatchSize?: number;\n    /**\n     * Set or get the texture cache mode.\n     *\n     * @defaultValue `'full'`\n     */\n    textureCacheMode?: 'initializerOnly'|'full';\n    /**\n     * Set or get the packed texture mode\n     *\n     * @defaultValue `false`\n     */\n    pack?: boolean;\n    /**\n     * Set or get whether enable async download.\n     *\n     * @defaultValue `false`\n     */\n    async?: boolean;\n  }\n\n  export interface WebGpuFlags {\n    /**\n     * Set or get the profiling mode.\n     */\n    profilingMode?: 'off'|'default';\n    /**\n     * Get the device for WebGPU.\n     *\n     * When use with TypeScript, the type of this property is `GPUDevice` defined in \"@webgpu/types\".\n     * Use `const device = env.webgpu.device as GPUDevice;` in TypeScript to access this property with correct type.\n     *\n     * see comments on {@link GpuBufferType} for more details about why not use types defined in \"@webgpu/types\".\n     */\n    readonly device: unknown;\n    /**\n     * Set or get whether validate input content.\n     *\n     * @defaultValue `false`\n     */\n    validateInputContent?: boolean;\n  }\n}\n\nexport interface Env {\n  /**\n   * set the severity level for logging.\n   *\n   * @defaultValue `'warning'`\n   */\n  logLevel?: 'verbose'|'info'|'warning'|'error'|'fatal';\n  /**\n   * Indicate whether run in debug mode.\n   *\n   * @defaultValue `false`\n   */\n  debug?: boolean;\n\n  /**\n   * Get version of the current package.\n   */\n  readonly versions: {\n    readonly common: string;\n    readonly web?: string;\n    readonly node?: string;\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    readonly 'react-native'?: string;\n  };\n\n  /**\n   * Represent a set of flags for WebAssembly\n   */\n  readonly wasm: Env.WebAssemblyFlags;\n\n  /**\n   * Represent a set of flags for WebGL\n   */\n  readonly webgl: Env.WebGLFlags;\n\n  /**\n   * Represent a set of flags for WebGPU\n   */\n  readonly webgpu: Env.WebGpuFlags;\n\n  [name: string]: unknown;\n}\n\n/**\n * Represent a set of flags as a global singleton.\n */\nexport const env: Env = envImpl;\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorToDataUrlOptions, TensorToImageDataOptions} from './tensor-conversion.js';\nimport {Tensor} from './tensor.js';\n\n/**\n * implementation of Tensor.toDataURL()\n */\nexport const tensorToDataURL = (tensor: Tensor, options?: TensorToDataUrlOptions): string => {\n  const canvas = document.createElement('canvas');\n  canvas.width = tensor.dims[3];\n  canvas.height = tensor.dims[2];\n  const pixels2DContext = canvas.getContext('2d');\n\n  if (pixels2DContext != null) {\n    // Default values for height and width & format\n    let width: number;\n    let height: number;\n    if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n      width = tensor.dims[2];\n      height = tensor.dims[3];\n    } else {  // Default layout is NCWH\n      width = tensor.dims[3];\n      height = tensor.dims[2];\n    }\n\n    const inputformat = options?.format !== undefined ? options.format : 'RGB';\n\n    const norm = options?.norm;\n    let normMean: [number, number, number, number];\n    let normBias: [number, number, number, number];\n    if (norm === undefined || norm.mean === undefined) {\n      normMean = [255, 255, 255, 255];\n    } else {\n      if (typeof (norm.mean) === 'number') {\n        normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n      } else {\n        normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 0];\n        if (norm.mean[3] !== undefined) {\n          normMean[3] = norm.mean[3];\n        }\n      }\n    }\n    if (norm === undefined || norm.bias === undefined) {\n      normBias = [0, 0, 0, 0];\n    } else {\n      if (typeof (norm.bias) === 'number') {\n        normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n      } else {\n        normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n        if (norm.bias[3] !== undefined) {\n          normBias[3] = norm.bias[3];\n        }\n      }\n    }\n\n    const stride = height * width;\n    // Default pointer assignments\n    let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n\n    // Updating the pointer assignments based on the input image format\n    if (inputformat === 'RGBA') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n      aTensorPointer = stride * 3;\n    } else if (inputformat === 'RGB') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n    } else if (inputformat === 'RBG') {\n      rTensorPointer = 0;\n      bTensorPointer = stride;\n      gTensorPointer = stride * 2;\n    }\n\n    for (let i = 0; i < height; i++) {\n      for (let j = 0; j < width; j++) {\n        const R = ((tensor.data[rTensorPointer++] as number) - normBias[0]) * normMean[0];  // R value\n        const G = ((tensor.data[gTensorPointer++] as number) - normBias[1]) * normMean[1];  // G value\n        const B = ((tensor.data[bTensorPointer++] as number) - normBias[2]) * normMean[2];  // B value\n        const A = aTensorPointer === -1 ?\n            255 :\n            ((tensor.data[aTensorPointer++] as number) - normBias[3]) * normMean[3];  // A value\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n        pixels2DContext.fillStyle = 'rgba(' + R + ',' + G + ',' + B + ',' + A + ')';\n        pixels2DContext.fillRect(j, i, 1, 1);\n      }\n    }\n    return canvas.toDataURL();\n  } else {\n    throw new Error('Can not access image data');\n  }\n};\n\n/**\n * implementation of Tensor.toImageData()\n */\nexport const tensorToImageData = (tensor: Tensor, options?: TensorToImageDataOptions): ImageData => {\n  const pixels2DContext = document.createElement('canvas').getContext('2d');\n  let image: ImageData;\n  if (pixels2DContext != null) {\n    // Default values for height and width & format\n    let width: number;\n    let height: number;\n    let channels: number;\n    if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n      width = tensor.dims[2];\n      height = tensor.dims[1];\n      channels = tensor.dims[3];\n    } else {  // Default layout is NCWH\n      width = tensor.dims[3];\n      height = tensor.dims[2];\n      channels = tensor.dims[1];\n    }\n    const inputformat = options !== undefined ? (options.format !== undefined ? options.format : 'RGB') : 'RGB';\n\n    const norm = options?.norm;\n    let normMean: [number, number, number, number];\n    let normBias: [number, number, number, number];\n    if (norm === undefined || norm.mean === undefined) {\n      normMean = [255, 255, 255, 255];\n    } else {\n      if (typeof (norm.mean) === 'number') {\n        normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n      } else {\n        normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 255];\n        if (norm.mean[3] !== undefined) {\n          normMean[3] = norm.mean[3];\n        }\n      }\n    }\n    if (norm === undefined || norm.bias === undefined) {\n      normBias = [0, 0, 0, 0];\n    } else {\n      if (typeof (norm.bias) === 'number') {\n        normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n      } else {\n        normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n        if (norm.bias[3] !== undefined) {\n          normBias[3] = norm.bias[3];\n        }\n      }\n    }\n\n    const stride = height * width;\n    if (options !== undefined) {\n      if (options.format !== undefined && (channels === 4 && options.format !== 'RGBA') ||\n          (channels === 3 && (options.format !== 'RGB' && options.format !== 'BGR'))) {\n        throw new Error('Tensor format doesn\\'t match input tensor dims');\n      }\n    }\n\n    // Default pointer assignments\n    const step = 4;\n    let rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n    let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n\n    // Updating the pointer assignments based on the input image format\n    if (inputformat === 'RGBA') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n      aTensorPointer = stride * 3;\n    } else if (inputformat === 'RGB') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n    } else if (inputformat === 'RBG') {\n      rTensorPointer = 0;\n      bTensorPointer = stride;\n      gTensorPointer = stride * 2;\n    }\n\n    image = pixels2DContext.createImageData(width, height);\n\n    for (let i = 0; i < height * width;\n         rImagePointer += step, gImagePointer += step, bImagePointer += step, aImagePointer += step, i++) {\n      image.data[rImagePointer] = ((tensor.data[rTensorPointer++] as number) - normBias[0]) * normMean[0];  // R value\n      image.data[gImagePointer] = ((tensor.data[gTensorPointer++] as number) - normBias[1]) * normMean[1];  // G value\n      image.data[bImagePointer] = ((tensor.data[bTensorPointer++] as number) - normBias[2]) * normMean[2];  // B value\n      image.data[aImagePointer] = aTensorPointer === -1 ?\n          255 :\n          ((tensor.data[aTensorPointer++] as number) - normBias[3]) * normMean[3];  // A value\n    }\n\n  } else {\n    throw new Error('Can not access image data');\n  }\n  return image;\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OptionsDimensions, OptionsFormat, OptionsNormalizationParameters, OptionsTensorFormat, OptionsTensorLayout, TensorFromGpuBufferOptions, TensorFromImageBitmapOptions, TensorFromImageDataOptions, TensorFromImageElementOptions, TensorFromTextureOptions, TensorFromUrlOptions} from './tensor-factory.js';\nimport {Tensor} from './tensor-impl.js';\nimport {Tensor as TensorInterface} from './tensor.js';\n\ninterface BufferToTensorOptions extends OptionsDimensions, OptionsTensorLayout, OptionsNormalizationParameters,\n                                        OptionsFormat, OptionsTensorFormat {}\n\n/**\n * Create a new tensor object from image object\n *\n * @param buffer - Extracted image buffer data - assuming RGBA format\n * @param imageFormat - input image configuration - required configurations height, width, format\n * @param tensorFormat - output tensor configuration - Default is RGB format\n */\nexport const bufferToTensor = (buffer: Uint8ClampedArray|undefined, options: BufferToTensorOptions): Tensor => {\n  if (buffer === undefined) {\n    throw new Error('Image buffer must be defined');\n  }\n  if (options.height === undefined || options.width === undefined) {\n    throw new Error('Image height and width must be defined');\n  }\n  if (options.tensorLayout === 'NHWC') {\n    throw new Error('NHWC Tensor layout is not supported yet');\n  }\n\n  const {height, width} = options;\n\n  const norm = options.norm ?? {mean: 255, bias: 0};\n  let normMean: [number, number, number, number];\n  let normBias: [number, number, number, number];\n\n  if (typeof (norm.mean) === 'number') {\n    normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n  } else {\n    normMean = [norm.mean![0], norm.mean![1], norm.mean![2], norm.mean![3] ?? 255];\n  }\n\n  if (typeof (norm.bias) === 'number') {\n    normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n  } else {\n    normBias = [norm.bias![0], norm.bias![1], norm.bias![2], norm.bias![3] ?? 0];\n  }\n\n  const inputformat = options.format !== undefined ? options.format : 'RGBA';\n  // default value is RGBA since imagedata and HTMLImageElement uses it\n\n  const outputformat =\n      options.tensorFormat !== undefined ? (options.tensorFormat !== undefined ? options.tensorFormat : 'RGB') : 'RGB';\n  const stride = height * width;\n  const float32Data = outputformat === 'RGBA' ? new Float32Array(stride * 4) : new Float32Array(stride * 3);\n\n  // Default pointer assignments\n  let step = 4, rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n  let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n\n  // Updating the pointer assignments based on the input image format\n  if (inputformat === 'RGB') {\n    step = 3;\n    rImagePointer = 0;\n    gImagePointer = 1;\n    bImagePointer = 2;\n    aImagePointer = -1;\n  }\n\n  // Updating the pointer assignments based on the output tensor format\n  if (outputformat === 'RGBA') {\n    aTensorPointer = stride * 3;\n  } else if (outputformat === 'RBG') {\n    rTensorPointer = 0;\n    bTensorPointer = stride;\n    gTensorPointer = stride * 2;\n  } else if (outputformat === 'BGR') {\n    bTensorPointer = 0;\n    gTensorPointer = stride;\n    rTensorPointer = stride * 2;\n  }\n\n  for (let i = 0; i < stride;\n       i++, rImagePointer += step, bImagePointer += step, gImagePointer += step, aImagePointer += step) {\n    float32Data[rTensorPointer++] = (buffer[rImagePointer] + normBias[0]) / normMean[0];\n    float32Data[gTensorPointer++] = (buffer[gImagePointer] + normBias[1]) / normMean[1];\n    float32Data[bTensorPointer++] = (buffer[bImagePointer] + normBias[2]) / normMean[2];\n    if (aTensorPointer !== -1 && aImagePointer !== -1) {\n      float32Data[aTensorPointer++] = (buffer[aImagePointer] + normBias[3]) / normMean[3];\n    }\n  }\n\n  // Float32Array -> ort.Tensor\n  const outputTensor = outputformat === 'RGBA' ? new Tensor('float32', float32Data, [1, 4, height, width]) :\n                                                 new Tensor('float32', float32Data, [1, 3, height, width]);\n  return outputTensor;\n};\n\n/**\n * implementation of Tensor.fromImage().\n */\nexport const tensorFromImage = async(\n    image: ImageData|HTMLImageElement|ImageBitmap|string,\n    options?: TensorFromImageDataOptions|TensorFromImageElementOptions|TensorFromImageBitmapOptions|\n    TensorFromUrlOptions): Promise<Tensor> => {\n  // checking the type of image object\n  const isHTMLImageEle = typeof (HTMLImageElement) !== 'undefined' && image instanceof HTMLImageElement;\n  const isImageDataEle = typeof (ImageData) !== 'undefined' && image instanceof ImageData;\n  const isImageBitmap = typeof (ImageBitmap) !== 'undefined' && image instanceof ImageBitmap;\n  const isString = typeof image === 'string';\n\n  let data: Uint8ClampedArray|undefined;\n  let bufferToTensorOptions: BufferToTensorOptions = options ?? {};\n\n  // filling and checking image configuration options\n  if (isHTMLImageEle) {\n    // HTMLImageElement - image object - format is RGBA by default\n    const canvas = document.createElement('canvas');\n    canvas.width = image.width;\n    canvas.height = image.height;\n    const pixels2DContext = canvas.getContext('2d');\n\n    if (pixels2DContext != null) {\n      let height = image.height;\n      let width = image.width;\n      if (options !== undefined && options.resizedHeight !== undefined && options.resizedWidth !== undefined) {\n        height = options.resizedHeight;\n        width = options.resizedWidth;\n      }\n\n      if (options !== undefined) {\n        bufferToTensorOptions = options;\n        if (options.tensorFormat !== undefined) {\n          throw new Error('Image input config format must be RGBA for HTMLImageElement');\n        } else {\n          bufferToTensorOptions.tensorFormat = 'RGBA';\n        }\n        bufferToTensorOptions.height = height;\n        bufferToTensorOptions.width = width;\n      } else {\n        bufferToTensorOptions.tensorFormat = 'RGBA';\n        bufferToTensorOptions.height = height;\n        bufferToTensorOptions.width = width;\n      }\n\n      pixels2DContext.drawImage(image, 0, 0);\n      data = pixels2DContext.getImageData(0, 0, width, height).data;\n    } else {\n      throw new Error('Can not access image data');\n    }\n  } else if (isImageDataEle) {\n    let height: number;\n    let width: number;\n\n    if (options !== undefined && options.resizedWidth !== undefined && options.resizedHeight !== undefined) {\n      height = options.resizedHeight;\n      width = options.resizedWidth;\n    } else {\n      height = image.height;\n      width = image.width;\n    }\n\n    if (options !== undefined) {\n      bufferToTensorOptions = options;\n    }\n    bufferToTensorOptions.format = 'RGBA';\n    bufferToTensorOptions.height = height;\n    bufferToTensorOptions.width = width;\n\n    if (options !== undefined) {\n      const tempCanvas = document.createElement('canvas');\n\n      tempCanvas.width = width;\n      tempCanvas.height = height;\n\n      const pixels2DContext = tempCanvas.getContext('2d');\n\n      if (pixels2DContext != null) {\n        pixels2DContext.putImageData(image, 0, 0);\n        data = pixels2DContext.getImageData(0, 0, width, height).data;\n      } else {\n        throw new Error('Can not access image data');\n      }\n    } else {\n      data = image.data;\n    }\n  } else if (isImageBitmap) {\n    // ImageBitmap - image object - format must be provided by user\n    if (options === undefined) {\n      throw new Error('Please provide image config with format for Imagebitmap');\n    }\n\n    const canvas = document.createElement('canvas');\n    canvas.width = image.width;\n    canvas.height = image.height;\n    const pixels2DContext = canvas.getContext('2d');\n\n    if (pixels2DContext != null) {\n      const height = image.height;\n      const width = image.width;\n      pixels2DContext.drawImage(image, 0, 0, width, height);\n      data = pixels2DContext.getImageData(0, 0, width, height).data;\n      bufferToTensorOptions.height = height;\n      bufferToTensorOptions.width = width;\n      return bufferToTensor(data, bufferToTensorOptions);\n    } else {\n      throw new Error('Can not access image data');\n    }\n  } else if (isString) {\n    return new Promise((resolve, reject) => {\n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n      if (!image || !context) {\n        return reject();\n      }\n      const newImage = new Image();\n      newImage.crossOrigin = 'Anonymous';\n      newImage.src = image;\n      newImage.onload = () => {\n        canvas.width = newImage.width;\n        canvas.height = newImage.height;\n        context.drawImage(newImage, 0, 0, canvas.width, canvas.height);\n        const img = context.getImageData(0, 0, canvas.width, canvas.height);\n\n        bufferToTensorOptions.height = canvas.height;\n        bufferToTensorOptions.width = canvas.width;\n        resolve(bufferToTensor(img.data, bufferToTensorOptions));\n      };\n    });\n  } else {\n    throw new Error('Input data provided is not supported - aborted tensor creation');\n  }\n\n  if (data !== undefined) {\n    return bufferToTensor(data, bufferToTensorOptions);\n  } else {\n    throw new Error('Input data provided is not supported - aborted tensor creation');\n  }\n};\n\n/**\n * implementation of Tensor.fromTexture().\n */\nexport const tensorFromTexture = <T extends TensorInterface.TextureDataTypes>(\n    texture: TensorInterface.TextureType, options: TensorFromTextureOptions<T>): Tensor => {\n  const {width, height, download, dispose} = options;\n  // Always assume RGBAF32. TODO: support different texture format\n  const dims = [1, height, width, 4];\n  return new Tensor({location: 'texture', type: 'float32', texture, dims, download, dispose});\n};\n\n/**\n * implementation of Tensor.fromGpuBuffer().\n */\nexport const tensorFromGpuBuffer = <T extends TensorInterface.GpuBufferDataTypes>(\n    gpuBuffer: TensorInterface.GpuBufferType, options: TensorFromGpuBufferOptions<T>): Tensor => {\n  const {dataType, dims, download, dispose} = options;\n  return new Tensor({location: 'gpu-buffer', type: dataType ?? 'float32', gpuBuffer, dims, download, dispose});\n};\n\n/**\n * implementation of Tensor.fromPinnedBuffer().\n */\nexport const tensorFromPinnedBuffer = <T extends TensorInterface.CpuPinnedDataTypes>(\n    type: T, buffer: TensorInterface.DataTypeMap[T], dims?: readonly number[]): Tensor =>\n    new Tensor({location: 'cpu-pinned', type, data: buffer, dims: dims ?? [buffer.length]});\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from './tensor.js';\n\nexport type SupportedTypedArrayConstructors = Float32ArrayConstructor|Uint8ArrayConstructor|Int8ArrayConstructor|\n    Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|Uint8ArrayConstructor|\n    Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor;\nexport type SupportedTypedArray = InstanceType<SupportedTypedArrayConstructors>;\n\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nexport const NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP = new Map<string, SupportedTypedArrayConstructors>([\n  ['float32', Float32Array],\n  ['uint8', Uint8Array],\n  ['int8', Int8Array],\n  ['uint16', Uint16Array],\n  ['float16', Uint16Array],\n  ['int16', Int16Array],\n  ['int32', Int32Array],\n  ['bool', Uint8Array],\n  ['float64', Float64Array],\n  ['uint32', Uint32Array],\n]);\n\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nexport const NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP = new Map<SupportedTypedArrayConstructors, Tensor.Type>([\n  [Float32Array, 'float32'],\n  [Uint8Array, 'uint8'],\n  [Int8Array, 'int8'],\n  [Uint16Array, 'uint16'],\n  [Int16Array, 'int16'],\n  [Int32Array, 'int32'],\n  [Float64Array, 'float64'],\n  [Uint32Array, 'uint32'],\n]);\n\n// the following code allows delaying execution of BigInt checking. This allows lazy initialization for\n// NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP and NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP, which allows BigInt polyfill\n// if available.\nlet isBigIntChecked = false;\nexport const checkBigInt = () => {\n  if (!isBigIntChecked) {\n    isBigIntChecked = true;\n    const isBigInt64ArrayAvailable = typeof BigInt64Array !== 'undefined' && typeof BigInt64Array.from === 'function';\n    const isBigUint64ArrayAvailable =\n        typeof BigUint64Array !== 'undefined' && typeof BigUint64Array.from === 'function';\n\n    if (isBigInt64ArrayAvailable) {\n      NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('int64', BigInt64Array);\n      NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array, 'int64');\n    }\n    if (isBigUint64ArrayAvailable) {\n      NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('uint64', BigUint64Array);\n      NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array, 'uint64');\n    }\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {CpuPinnedConstructorParameters, GpuBufferConstructorParameters, TextureConstructorParameters} from './tensor-factory.js';\nimport {Tensor} from './tensor-impl.js';\n\n/**\n * calculate size from dims.\n *\n * @param dims the dims array. May be an illegal input.\n */\nexport const calculateSize = (dims: readonly unknown[]): number => {\n  let size = 1;\n  for (let i = 0; i < dims.length; i++) {\n    const dim = dims[i];\n    if (typeof dim !== 'number' || !Number.isSafeInteger(dim)) {\n      throw new TypeError(`dims[${i}] must be an integer, got: ${dim}`);\n    }\n    if (dim < 0) {\n      throw new RangeError(`dims[${i}] must be a non-negative integer, got: ${dim}`);\n    }\n    size *= dim;\n  }\n  return size;\n};\n\n/**\n * implementation of Tensor.reshape()\n */\nexport const tensorReshape = (tensor: Tensor, dims: readonly number[]): Tensor => {\n  switch (tensor.location) {\n    case 'cpu':\n      return new Tensor(tensor.type, tensor.data, dims);\n    case 'cpu-pinned':\n      return new Tensor({\n        location: 'cpu-pinned',\n        data: tensor.data as CpuPinnedConstructorParameters['data'],\n        type: tensor.type as CpuPinnedConstructorParameters['type'],\n        dims,\n      });\n    case 'texture':\n      return new Tensor({\n        location: 'texture',\n        texture: tensor.texture,\n        type: tensor.type as TextureConstructorParameters['type'],\n        dims,\n      });\n    case 'gpu-buffer':\n      return new Tensor({\n        location: 'gpu-buffer',\n        gpuBuffer: tensor.gpuBuffer,\n        type: tensor.type as GpuBufferConstructorParameters['type'],\n        dims,\n      });\n    default:\n      throw new Error(`tensorReshape: tensor location ${tensor.location} is not supported`);\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {tensorToDataURL, tensorToImageData} from './tensor-conversion-impl.js';\nimport {TensorToDataUrlOptions, TensorToImageDataOptions} from './tensor-conversion.js';\nimport {tensorFromGpuBuffer, tensorFromImage, tensorFromPinnedBuffer, tensorFromTexture} from './tensor-factory-impl.js';\nimport {CpuPinnedConstructorParameters, GpuBufferConstructorParameters, TensorFromGpuBufferOptions, TensorFromImageBitmapOptions, TensorFromImageDataOptions, TensorFromImageElementOptions, TensorFromTextureOptions, TensorFromUrlOptions, TextureConstructorParameters} from './tensor-factory.js';\nimport {checkBigInt, NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP, NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP, SupportedTypedArray, SupportedTypedArrayConstructors} from './tensor-impl-type-mapping.js';\nimport {calculateSize, tensorReshape} from './tensor-utils-impl.js';\nimport {Tensor as TensorInterface} from './tensor.js';\n\n// type aliases for those exported from Tensor interface\n\ntype TensorType = TensorInterface.Type;\ntype TensorDataType = TensorInterface.DataType;\ntype TensorDataLocation = TensorInterface.DataLocation;\ntype TensorTextureType = TensorInterface.TextureType;\ntype TensorGpuBufferType = TensorInterface.GpuBufferType;\n\n/**\n * the implementation of Tensor interface.\n *\n * @ignore\n */\nexport class Tensor implements TensorInterface {\n  // #region constructors\n\n  /**\n   * Construct a new CPU tensor object from the given type, data and dims.\n   */\n  constructor(\n      type: TensorType, data: TensorDataType|readonly string[]|readonly number[]|readonly boolean[],\n      dims?: readonly number[]);\n  /**\n   * Construct a new CPU tensor object from the given data and dims. Type is inferred from data.\n   */\n  constructor(data: TensorDataType|readonly string[]|readonly boolean[], dims?: readonly number[]);\n  /**\n   * Construct a new tensor object from the pinned CPU data with the given type and dims.\n   *\n   * Tensor's location will be set to 'cpu-pinned'.\n   *\n   * @param params - Specify the parameters to construct the tensor.\n   */\n  constructor(params: CpuPinnedConstructorParameters);\n  /**\n   * Construct a new tensor object from the WebGL texture with the given type and dims.\n   *\n   * Tensor's location will be set to 'texture'.\n   *\n   * @param params - Specify the parameters to construct the tensor.\n   */\n  constructor(params: TextureConstructorParameters);\n  /**\n   * Construct a new tensor object from the WebGPU buffer with the given type and dims.\n   *\n   * Tensor's location will be set to 'gpu-buffer'.\n   *\n   * @param params - Specify the parameters to construct the tensor.\n   */\n  constructor(params: GpuBufferConstructorParameters);\n\n  /**\n   * implementation.\n   */\n  constructor(\n      arg0: TensorType|TensorDataType|readonly string[]|readonly boolean[]|CpuPinnedConstructorParameters|\n      TextureConstructorParameters|GpuBufferConstructorParameters,\n      arg1?: TensorDataType|readonly number[]|readonly string[]|readonly boolean[], arg2?: readonly number[]) {\n    // perform one-time check for BigInt support\n    checkBigInt();\n\n    let type: TensorType;\n    let dims: readonly number[];\n\n    if (typeof arg0 === 'object' && 'location' in arg0) {\n      //\n      // constructing tensor from specific location\n      //\n      this.dataLocation = arg0.location;\n      type = arg0.type;\n      dims = arg0.dims;\n      switch (arg0.location) {\n        case 'cpu-pinned': {\n          const expectedTypedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(type);\n          if (!expectedTypedArrayConstructor) {\n            throw new TypeError(`unsupported type \"${type}\" to create tensor from pinned buffer`);\n          }\n          if (!(arg0.data instanceof expectedTypedArrayConstructor)) {\n            throw new TypeError(`buffer should be of type ${expectedTypedArrayConstructor.name}`);\n          }\n          this.cpuData = arg0.data;\n          break;\n        }\n        case 'texture': {\n          if (type !== 'float32') {\n            throw new TypeError(`unsupported type \"${type}\" to create tensor from texture`);\n          }\n          this.gpuTextureData = arg0.texture;\n          this.downloader = arg0.download;\n          this.disposer = arg0.dispose;\n          break;\n        }\n        case 'gpu-buffer': {\n          if ((type !== 'float32' && type !== 'float16' && type !== 'int32' && type !== 'int64' && type !== 'uint32' &&\n               type !== 'bool')) {\n            throw new TypeError(`unsupported type \"${type}\" to create tensor from gpu buffer`);\n          }\n          this.gpuBufferData = arg0.gpuBuffer;\n          this.downloader = arg0.download;\n          this.disposer = arg0.dispose;\n          break;\n        }\n        default:\n          throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`);\n      }\n    } else {\n      //\n      // constructing tensor of location 'cpu'\n      //\n      let data: TensorDataType;\n      let maybeDims: typeof arg1|typeof arg2;\n      // check whether arg0 is type or data\n      if (typeof arg0 === 'string') {\n        //\n        // Override: constructor(type, data, ...)\n        //\n        type = arg0;\n        maybeDims = arg2;\n        if (arg0 === 'string') {\n          // string tensor\n          if (!Array.isArray(arg1)) {\n            throw new TypeError('A string tensor\\'s data must be a string array.');\n          }\n          // we don't check whether every element in the array is string; this is too slow. we assume it's correct and\n          // error will be populated at inference\n          data = arg1;\n        } else {\n          // numeric tensor\n          const typedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(arg0);\n          if (typedArrayConstructor === undefined) {\n            throw new TypeError(`Unsupported tensor type: ${arg0}.`);\n          }\n          if (Array.isArray(arg1)) {\n            if (arg0 === 'float16') {\n              // Throw error here because when user try to use number array as data,\n              // e.g. new Tensor('float16', [1, 2, 3, 4], dims)), it will actually call\n              // Uint16Array.from(arg1) which generates wrong data.\n              throw new TypeError(\n                  'Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.');\n            } else if (arg0 === 'uint64' || arg0 === 'int64') {\n              // use 'as any' here because:\n              // 1. TypeScript's check on type of 'Array.isArray()' does not work with readonly arrays.\n              // see https://github.com/microsoft/TypeScript/issues/17002\n              // 2. TypeScript's check on union type of '(BigInt64ArrayConstructor|BigUint64ArrayConstructor).from()'\n              // does not accept parameter mapFn.\n              // 3. parameters of 'SupportedTypedArrayConstructors.from()' does not match the requirement of the union\n              // type.\n\n              // assume 'arg1' is of type \"readonly number[]|readonly bigint[]\" here.\n\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              data = (typedArrayConstructor as any).from(arg1, BigInt);\n            } else {\n              // assume 'arg1' is of type \"readonly number[]\" here.\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              data = (typedArrayConstructor as any).from(arg1);\n            }\n          } else if (arg1 instanceof typedArrayConstructor) {\n            data = arg1;\n          } else {\n            throw new TypeError(`A ${type} tensor's data must be type of ${typedArrayConstructor}`);\n          }\n        }\n      } else {\n        //\n        // Override: constructor(data, ...)\n        //\n        maybeDims = arg1;\n        if (Array.isArray(arg0)) {\n          // only boolean[] and string[] is supported\n          if (arg0.length === 0) {\n            throw new TypeError('Tensor type cannot be inferred from an empty array.');\n          }\n          const firstElementType = typeof arg0[0];\n          if (firstElementType === 'string') {\n            type = 'string';\n            data = arg0;\n          } else if (firstElementType === 'boolean') {\n            type = 'bool';\n            // 'arg0' is of type 'boolean[]'. Uint8Array.from(boolean[]) actually works, but typescript thinks this is\n            // wrong type. We use 'as any' to make it happy.\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            data = Uint8Array.from(arg0 as any[]);\n          } else {\n            throw new TypeError(`Invalid element type of data array: ${firstElementType}.`);\n          }\n        } else {\n          // get tensor type from TypedArray\n          const mappedType =\n              NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(arg0.constructor as SupportedTypedArrayConstructors);\n          if (mappedType === undefined) {\n            throw new TypeError(`Unsupported type for tensor data: ${arg0.constructor}.`);\n          }\n          type = mappedType;\n          data = arg0 as SupportedTypedArray;\n        }\n      }\n\n      // type and data is processed, now processing dims\n      if (maybeDims === undefined) {\n        // assume 1-D tensor if dims omitted\n        maybeDims = [data.length];\n      } else if (!Array.isArray(maybeDims)) {\n        throw new TypeError('A tensor\\'s dims must be a number array');\n      }\n      dims = maybeDims as readonly number[];\n\n      this.cpuData = data;\n      this.dataLocation = 'cpu';\n    }\n\n    // perform check on dims\n    const size = calculateSize(dims);\n    // if data is on CPU, check whether data length matches tensor size\n    if (this.cpuData && size !== this.cpuData.length) {\n      throw new Error(`Tensor's size(${size}) does not match data length(${this.cpuData.length}).`);\n    }\n\n    this.type = type;\n    this.dims = dims;\n    this.size = size;\n  }\n  // #endregion\n\n  // #region factory\n  static async fromImage(\n      image: ImageData|HTMLImageElement|ImageBitmap|string,\n      options?: TensorFromImageDataOptions|TensorFromImageElementOptions|TensorFromImageBitmapOptions|\n      TensorFromUrlOptions): Promise<TensorInterface> {\n    return tensorFromImage(image, options);\n  }\n\n  static fromTexture<T extends TensorInterface.TextureDataTypes>(\n      texture: TensorTextureType, options: TensorFromTextureOptions<T>): TensorInterface {\n    return tensorFromTexture(texture, options);\n  }\n\n  static fromGpuBuffer<T extends TensorInterface.GpuBufferDataTypes>(\n      gpuBuffer: TensorGpuBufferType, options: TensorFromGpuBufferOptions<T>): TensorInterface {\n    return tensorFromGpuBuffer(gpuBuffer, options);\n  }\n\n  static fromPinnedBuffer<T extends TensorInterface.CpuPinnedDataTypes>(\n      type: T, buffer: TensorInterface.DataTypeMap[T], dims?: readonly number[]): Tensor {\n    return tensorFromPinnedBuffer(type, buffer, dims);\n  }\n\n  // #endregion\n\n  // #region conversions\n  toDataURL(options?: TensorToDataUrlOptions): string {\n    return tensorToDataURL(this, options);\n  }\n\n  toImageData(options?: TensorToImageDataOptions): ImageData {\n    return tensorToImageData(this, options);\n  }\n  // #endregion\n\n  // #region public fields\n  readonly dims: readonly number[];\n  readonly type: TensorType;\n  readonly size: number;\n  // #endregion\n\n  // #region private fields\n\n  /**\n   * stores the location of the data.\n   */\n  private dataLocation: TensorDataLocation;\n\n  /**\n   * stores the data on CPU, if location is 'cpu' or 'cpu-pinned'. otherwise empty.\n   */\n  private cpuData?: TensorDataType;\n\n  /**\n   * stores the underlying texture when location is 'texture'. otherwise empty.\n   */\n  private gpuTextureData?: TensorTextureType;\n\n  /**\n   * stores the underlying GPU buffer when location is 'gpu-buffer'. otherwise empty.\n   */\n  private gpuBufferData?: TensorGpuBufferType;\n\n  /**\n   * stores an optional downloader function to download data from GPU to CPU.\n   */\n  private downloader?(): Promise<TensorDataType>;\n\n  /**\n   * a flag indicating whether the data is being downloaded from GPU to CPU.\n   */\n  private isDownloading?: boolean;\n\n  /**\n   * stores an optional disposer function to dispose the underlying data.\n   */\n  private disposer?(): void;\n  // #endregion\n\n  // #region properties\n  get data(): TensorDataType {\n    this.ensureValid();\n    if (!this.cpuData) {\n      throw new Error(\n          'The data is not on CPU. Use `getData()` to download GPU data to CPU, ' +\n          'or use `texture` or `gpuBuffer` property to access the GPU data directly.');\n    }\n    return this.cpuData;\n  }\n\n  get location(): TensorDataLocation {\n    return this.dataLocation;\n  }\n\n  get texture(): TensorTextureType {\n    this.ensureValid();\n    if (!this.gpuTextureData) {\n      throw new Error('The data is not stored as a WebGL texture.');\n    }\n    return this.gpuTextureData;\n  }\n\n  get gpuBuffer(): TensorGpuBufferType {\n    this.ensureValid();\n    if (!this.gpuBufferData) {\n      throw new Error('The data is not stored as a WebGPU buffer.');\n    }\n    return this.gpuBufferData;\n  }\n  // #endregion\n\n  // #region methods\n\n  async getData(releaseData?: boolean): Promise<TensorDataType> {\n    this.ensureValid();\n    switch (this.dataLocation) {\n      case 'cpu':\n      case 'cpu-pinned':\n        return this.data;\n      case 'texture':\n      case 'gpu-buffer': {\n        if (!this.downloader) {\n          throw new Error('The current tensor is not created with a specified data downloader.');\n        }\n        if (this.isDownloading) {\n          throw new Error('The current tensor is being downloaded.');\n        }\n        try {\n          this.isDownloading = true;\n          const data = await this.downloader();\n          this.downloader = undefined;\n          this.dataLocation = 'cpu';\n          this.cpuData = data;\n\n          if (releaseData && this.disposer) {\n            this.disposer();\n            this.disposer = undefined;\n          }\n\n          return data;\n\n        } finally {\n          this.isDownloading = false;\n        }\n      }\n      default:\n        throw new Error(`cannot get data from location: ${this.dataLocation}`);\n    }\n  }\n\n  dispose(): void {\n    if (this.isDownloading) {\n      throw new Error('The current tensor is being downloaded.');\n    }\n\n    if (this.disposer) {\n      this.disposer();\n      this.disposer = undefined;\n    }\n    this.cpuData = undefined;\n    this.gpuTextureData = undefined;\n    this.gpuBufferData = undefined;\n    this.downloader = undefined;\n    this.isDownloading = undefined;\n\n    this.dataLocation = 'none';\n  }\n\n  // #endregion\n\n  // #region tensor utilities\n  private ensureValid(): void {\n    if (this.dataLocation === 'none') {\n      throw new Error('The tensor is disposed.');\n    }\n  }\n\n  reshape(dims: readonly number[]): TensorInterface {\n    this.ensureValid();\n    if (this.downloader || this.disposer) {\n      throw new Error('Cannot reshape a tensor that owns GPU resource.');\n    }\n    return tensorReshape(this, dims);\n  }\n  // #endregion\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorFactory} from './tensor-factory.js';\nimport {Tensor as TensorImpl} from './tensor-impl.js';\nimport {TypedTensorUtils} from './tensor-utils.js';\n\n/* eslint-disable @typescript-eslint/no-redeclare */\n\n/**\n * represent a basic tensor with specified dimensions and data type.\n */\ninterface TypedTensorBase<T extends Tensor.Type> {\n  /**\n   * Get the dimensions of the tensor.\n   */\n  readonly dims: readonly number[];\n  /**\n   * Get the data type of the tensor.\n   */\n  readonly type: T;\n  /**\n   * Get the buffer data of the tensor.\n   *\n   * If the data is not on CPU (eg. it's in the form of WebGL texture or WebGPU buffer), throw error.\n   */\n  readonly data: Tensor.DataTypeMap[T];\n  /**\n   * Get the location of the data.\n   */\n  readonly location: Tensor.DataLocation;\n  /**\n   * Get the WebGL texture that holds the tensor data.\n   *\n   * If the data is not on GPU as WebGL texture, throw error.\n   */\n  readonly texture: Tensor.TextureType;\n  /**\n   * Get the WebGPU buffer that holds the tensor data.\n   *\n   * If the data is not on GPU as WebGPU buffer, throw error.\n   */\n  readonly gpuBuffer: Tensor.GpuBufferType;\n\n  /**\n   * Get the buffer data of the tensor.\n   *\n   * If the data is on CPU, returns the data immediately.\n   * If the data is on GPU, downloads the data and returns the promise.\n   *\n   * @param releaseData - whether release the data on GPU. Ignore if data is already on CPU.\n   */\n  getData(releaseData?: boolean): Promise<Tensor.DataTypeMap[T]>;\n\n  /**\n   * Dispose the tensor data.\n   *\n   * If the data is on CPU, remove its internal reference to the underlying data.\n   * If the data is on GPU, release the data on GPU.\n   *\n   * After calling this function, the tensor is considered no longer valid. Its location will be set to 'none'.\n   */\n  dispose(): void;\n}\n\nexport declare namespace Tensor {\n  interface DataTypeMap {\n    float32: Float32Array;\n    uint8: Uint8Array;\n    int8: Int8Array;\n    uint16: Uint16Array;\n    int16: Int16Array;\n    int32: Int32Array;\n    int64: BigInt64Array;\n    string: string[];\n    bool: Uint8Array;\n    float16: Uint16Array;  // Keep using Uint16Array until we have a concrete solution for float 16.\n    float64: Float64Array;\n    uint32: Uint32Array;\n    uint64: BigUint64Array;\n    // complex64: never;\n    // complex128: never;\n    // bfloat16: never;\n  }\n\n  interface ElementTypeMap {\n    float32: number;\n    uint8: number;\n    int8: number;\n    uint16: number;\n    int16: number;\n    int32: number;\n    int64: bigint;\n    string: string;\n    bool: boolean;\n    float16: number;  // Keep using Uint16Array until we have a concrete solution for float 16.\n    float64: number;\n    uint32: number;\n    uint64: bigint;\n    // complex64: never;\n    // complex128: never;\n    // bfloat16: never;\n  }\n\n  type DataType = DataTypeMap[Type];\n  type ElementType = ElementTypeMap[Type];\n\n  /**\n   * supported data types for constructing a tensor from a pinned CPU buffer\n   */\n  export type CpuPinnedDataTypes = Exclude<Tensor.Type, 'string'>;\n\n  /**\n   * type alias for WebGL texture\n   */\n  export type TextureType = WebGLTexture;\n\n  /**\n   * supported data types for constructing a tensor from a WebGL texture\n   */\n  export type TextureDataTypes = 'float32';\n\n  /**\n   * type alias for WebGPU buffer\n   *\n   * The reason why we don't use type \"GPUBuffer\" defined in webgpu.d.ts from @webgpu/types is because \"@webgpu/types\"\n   * requires \"@types/dom-webcodecs\" as peer dependency when using TypeScript < v5.1 and its version need to be chosen\n   * carefully according to the TypeScript version being used. This means so far there is not a way to keep every\n   * TypeScript version happy. It turns out that we will easily broke users on some TypeScript version.\n   *\n   * for more info see https://github.com/gpuweb/types/issues/127\n   */\n  export type GpuBufferType = {size: number; mapState: 'unmapped' | 'pending' | 'mapped'};\n\n  /**\n   * supported data types for constructing a tensor from a WebGPU buffer\n   */\n  export type GpuBufferDataTypes = 'float32'|'float16'|'int32'|'int64'|'uint32'|'bool';\n\n  /**\n   * represent where the tensor data is stored\n   */\n  export type DataLocation = 'none'|'cpu'|'cpu-pinned'|'texture'|'gpu-buffer';\n\n  /**\n   * represent the data type of a tensor\n   */\n  export type Type = keyof DataTypeMap;\n}\n\n/**\n * Represent multi-dimensional arrays to feed to or fetch from model inferencing.\n */\nexport interface TypedTensor<T extends Tensor.Type> extends TypedTensorBase<T>, TypedTensorUtils<T> {}\n/**\n * Represent multi-dimensional arrays to feed to or fetch from model inferencing.\n */\nexport interface Tensor extends TypedTensorBase<Tensor.Type>, TypedTensorUtils<Tensor.Type> {}\n\n/**\n * type TensorConstructor defines the constructors of 'Tensor' to create CPU tensor instances.\n */\nexport interface TensorConstructor {\n  // #region CPU tensor - specify element type\n  /**\n   * Construct a new string tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(type: 'string', data: Tensor.DataTypeMap['string']|readonly string[],\n      dims?: readonly number[]): TypedTensor<'string'>;\n\n  /**\n   * Construct a new bool tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(type: 'bool', data: Tensor.DataTypeMap['bool']|readonly boolean[], dims?: readonly number[]): TypedTensor<'bool'>;\n\n  /**\n   * Construct a new 64-bit integer typed tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new<T extends 'uint64'|'int64'>(\n      type: T, data: Tensor.DataTypeMap[T]|readonly bigint[]|readonly number[],\n      dims?: readonly number[]): TypedTensor<T>;\n\n  /**\n   * Construct a new numeric tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new<T extends Exclude<Tensor.Type, 'string'|'bool'|'uint64'|'int64'>>(\n      type: T, data: Tensor.DataTypeMap[T]|readonly number[], dims?: readonly number[]): TypedTensor<T>;\n  // #endregion\n\n  // #region CPU tensor - infer element types\n\n  /**\n   * Construct a new float32 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Float32Array, dims?: readonly number[]): TypedTensor<'float32'>;\n\n  /**\n   * Construct a new int8 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Int8Array, dims?: readonly number[]): TypedTensor<'int8'>;\n\n  /**\n   * Construct a new uint8 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Uint8Array, dims?: readonly number[]): TypedTensor<'uint8'>;\n\n  /**\n   * Construct a new uint16 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Uint16Array, dims?: readonly number[]): TypedTensor<'uint16'>;\n\n  /**\n   * Construct a new int16 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Int16Array, dims?: readonly number[]): TypedTensor<'int16'>;\n\n  /**\n   * Construct a new int32 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Int32Array, dims?: readonly number[]): TypedTensor<'int32'>;\n\n  /**\n   * Construct a new int64 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: BigInt64Array, dims?: readonly number[]): TypedTensor<'int64'>;\n\n  /**\n   * Construct a new string tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: readonly string[], dims?: readonly number[]): TypedTensor<'string'>;\n\n  /**\n   * Construct a new bool tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: readonly boolean[], dims?: readonly number[]): TypedTensor<'bool'>;\n\n  /**\n   * Construct a new float64 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Float64Array, dims?: readonly number[]): TypedTensor<'float64'>;\n\n  /**\n   * Construct a new uint32 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Uint32Array, dims?: readonly number[]): TypedTensor<'uint32'>;\n\n  /**\n   * Construct a new uint64 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: BigUint64Array, dims?: readonly number[]): TypedTensor<'uint64'>;\n\n  // #endregion\n\n  // #region CPU tensor - fall back to non-generic tensor type declaration\n\n  /**\n   * Construct a new tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(type: Tensor.Type, data: Tensor.DataType|readonly number[]|readonly string[]|readonly bigint[]|readonly boolean[],\n      dims?: readonly number[]): Tensor;\n\n  /**\n   * Construct a new tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Tensor.DataType, dims?: readonly number[]): Tensor;\n  // #endregion\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Tensor = TensorImpl as (TensorConstructor & TensorFactory);\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {resolveBackend} from './backend-impl.js';\nimport {InferenceSessionHandler} from './backend.js';\nimport {InferenceSession as InferenceSessionInterface} from './inference-session.js';\nimport {OnnxValue} from './onnx-value.js';\nimport {Tensor} from './tensor.js';\n\ntype SessionOptions = InferenceSessionInterface.SessionOptions;\ntype RunOptions = InferenceSessionInterface.RunOptions;\ntype FeedsType = InferenceSessionInterface.FeedsType;\ntype FetchesType = InferenceSessionInterface.FetchesType;\ntype ReturnType = InferenceSessionInterface.ReturnType;\n\nexport class InferenceSession implements InferenceSessionInterface {\n  private constructor(handler: InferenceSessionHandler) {\n    this.handler = handler;\n  }\n  run(feeds: FeedsType, options?: RunOptions): Promise<ReturnType>;\n  run(feeds: FeedsType, fetches: FetchesType, options?: RunOptions): Promise<ReturnType>;\n  async run(feeds: FeedsType, arg1?: FetchesType|RunOptions, arg2?: RunOptions): Promise<ReturnType> {\n    const fetches: {[name: string]: OnnxValue|null} = {};\n    let options: RunOptions = {};\n    // check inputs\n    if (typeof feeds !== 'object' || feeds === null || feeds instanceof Tensor || Array.isArray(feeds)) {\n      throw new TypeError(\n          '\\'feeds\\' must be an object that use input names as keys and OnnxValue as corresponding values.');\n    }\n\n    let isFetchesEmpty = true;\n    // determine which override is being used\n    if (typeof arg1 === 'object') {\n      if (arg1 === null) {\n        throw new TypeError('Unexpected argument[1]: cannot be null.');\n      }\n      if (arg1 instanceof Tensor) {\n        throw new TypeError('\\'fetches\\' cannot be a Tensor');\n      }\n\n      if (Array.isArray(arg1)) {\n        if (arg1.length === 0) {\n          throw new TypeError('\\'fetches\\' cannot be an empty array.');\n        }\n        isFetchesEmpty = false;\n        // output names\n        for (const name of arg1) {\n          if (typeof name !== 'string') {\n            throw new TypeError('\\'fetches\\' must be a string array or an object.');\n          }\n          if (this.outputNames.indexOf(name) === -1) {\n            throw new RangeError(`'fetches' contains invalid output name: ${name}.`);\n          }\n          fetches[name] = null;\n        }\n\n        if (typeof arg2 === 'object' && arg2 !== null) {\n          options = arg2;\n        } else if (typeof arg2 !== 'undefined') {\n          throw new TypeError('\\'options\\' must be an object.');\n        }\n      } else {\n        // decide whether arg1 is fetches or options\n        // if any output name is present and its value is valid OnnxValue, we consider it fetches\n        let isFetches = false;\n        const arg1Keys = Object.getOwnPropertyNames(arg1);\n        for (const name of this.outputNames) {\n          if (arg1Keys.indexOf(name) !== -1) {\n            const v = (arg1 as InferenceSessionInterface.NullableOnnxValueMapType)[name];\n            if (v === null || v instanceof Tensor) {\n              isFetches = true;\n              isFetchesEmpty = false;\n              fetches[name] = v;\n            }\n          }\n        }\n\n        if (isFetches) {\n          if (typeof arg2 === 'object' && arg2 !== null) {\n            options = arg2;\n          } else if (typeof arg2 !== 'undefined') {\n            throw new TypeError('\\'options\\' must be an object.');\n          }\n        } else {\n          options = arg1 as RunOptions;\n        }\n      }\n    } else if (typeof arg1 !== 'undefined') {\n      throw new TypeError('Unexpected argument[1]: must be \\'fetches\\' or \\'options\\'.');\n    }\n\n    // check if all inputs are in feed\n    for (const name of this.inputNames) {\n      if (typeof feeds[name] === 'undefined') {\n        throw new Error(`input '${name}' is missing in 'feeds'.`);\n      }\n    }\n\n    // if no fetches is specified, we use the full output names list\n    if (isFetchesEmpty) {\n      for (const name of this.outputNames) {\n        fetches[name] = null;\n      }\n    }\n\n    // feeds, fetches and options are prepared\n\n    const results = await this.handler.run(feeds, fetches, options);\n    const returnValue: {[name: string]: OnnxValue} = {};\n    for (const key in results) {\n      if (Object.hasOwnProperty.call(results, key)) {\n        const result = results[key];\n        if (result instanceof Tensor) {\n          returnValue[key] = result;\n        } else {\n          returnValue[key] = new Tensor(result.type, result.data, result.dims);\n        }\n      }\n    }\n    return returnValue;\n  }\n\n  async release(): Promise<void> {\n    return this.handler.dispose();\n  }\n\n  static create(path: string, options?: SessionOptions): Promise<InferenceSessionInterface>;\n  static create(buffer: ArrayBufferLike, options?: SessionOptions): Promise<InferenceSessionInterface>;\n  static create(buffer: ArrayBufferLike, byteOffset: number, byteLength?: number, options?: SessionOptions):\n      Promise<InferenceSessionInterface>;\n  static create(buffer: Uint8Array, options?: SessionOptions): Promise<InferenceSessionInterface>;\n  static async create(\n      arg0: string|ArrayBufferLike|Uint8Array, arg1?: SessionOptions|number, arg2?: number,\n      arg3?: SessionOptions): Promise<InferenceSessionInterface> {\n    // either load from a file or buffer\n    let filePathOrUint8Array: string|Uint8Array;\n    let options: SessionOptions = {};\n\n    if (typeof arg0 === 'string') {\n      filePathOrUint8Array = arg0;\n      if (typeof arg1 === 'object' && arg1 !== null) {\n        options = arg1;\n      } else if (typeof arg1 !== 'undefined') {\n        throw new TypeError('\\'options\\' must be an object.');\n      }\n    } else if (arg0 instanceof Uint8Array) {\n      filePathOrUint8Array = arg0;\n      if (typeof arg1 === 'object' && arg1 !== null) {\n        options = arg1;\n      } else if (typeof arg1 !== 'undefined') {\n        throw new TypeError('\\'options\\' must be an object.');\n      }\n    } else if (\n        arg0 instanceof ArrayBuffer ||\n        (typeof SharedArrayBuffer !== 'undefined' && arg0 instanceof SharedArrayBuffer)) {\n      const buffer = arg0;\n      let byteOffset = 0;\n      let byteLength = arg0.byteLength;\n      if (typeof arg1 === 'object' && arg1 !== null) {\n        options = arg1;\n      } else if (typeof arg1 === 'number') {\n        byteOffset = arg1;\n        if (!Number.isSafeInteger(byteOffset)) {\n          throw new RangeError('\\'byteOffset\\' must be an integer.');\n        }\n        if (byteOffset < 0 || byteOffset >= buffer.byteLength) {\n          throw new RangeError(`'byteOffset' is out of range [0, ${buffer.byteLength}).`);\n        }\n        byteLength = arg0.byteLength - byteOffset;\n        if (typeof arg2 === 'number') {\n          byteLength = arg2;\n          if (!Number.isSafeInteger(byteLength)) {\n            throw new RangeError('\\'byteLength\\' must be an integer.');\n          }\n          if (byteLength <= 0 || byteOffset + byteLength > buffer.byteLength) {\n            throw new RangeError(`'byteLength' is out of range (0, ${buffer.byteLength - byteOffset}].`);\n          }\n          if (typeof arg3 === 'object' && arg3 !== null) {\n            options = arg3;\n          } else if (typeof arg3 !== 'undefined') {\n            throw new TypeError('\\'options\\' must be an object.');\n          }\n        } else if (typeof arg2 !== 'undefined') {\n          throw new TypeError('\\'byteLength\\' must be a number.');\n        }\n      } else if (typeof arg1 !== 'undefined') {\n        throw new TypeError('\\'options\\' must be an object.');\n      }\n      filePathOrUint8Array = new Uint8Array(buffer, byteOffset, byteLength);\n    } else {\n      throw new TypeError('Unexpected argument[0]: must be \\'path\\' or \\'buffer\\'.');\n    }\n\n    // get backend hints\n    const eps = options.executionProviders || [];\n    const backendHints = eps.map(i => typeof i === 'string' ? i : i.name);\n    const backend = await resolveBackend(backendHints);\n    const handler = await backend.createInferenceSessionHandler(filePathOrUint8Array, options);\n    return new InferenceSession(handler);\n  }\n\n  startProfiling(): void {\n    this.handler.startProfiling();\n  }\n  endProfiling(): void {\n    this.handler.endProfiling();\n  }\n\n  get inputNames(): readonly string[] {\n    return this.handler.inputNames;\n  }\n  get outputNames(): readonly string[] {\n    return this.handler.outputNames;\n  }\n\n  private handler: InferenceSessionHandler;\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession as InferenceSessionImpl} from './inference-session-impl.js';\nimport {OnnxValue, OnnxValueDataLocation} from './onnx-value.js';\n\n/* eslint-disable @typescript-eslint/no-redeclare */\n\nexport declare namespace InferenceSession {\n  // #region input/output types\n\n  type OnnxValueMapType = {readonly [name: string]: OnnxValue};\n  type NullableOnnxValueMapType = {readonly [name: string]: OnnxValue | null};\n\n  /**\n   * A feeds (model inputs) is an object that uses input names as keys and OnnxValue as corresponding values.\n   */\n  type FeedsType = OnnxValueMapType;\n\n  /**\n   * A fetches (model outputs) could be one of the following:\n   *\n   * - Omitted. Use model's output names definition.\n   * - An array of string indicating the output names.\n   * - An object that use output names as keys and OnnxValue or null as corresponding values.\n   *\n   * @remark\n   * different from input argument, in output, OnnxValue is optional. If an OnnxValue is present it will be\n   * used as a pre-allocated value by the inference engine; if omitted, inference engine will allocate buffer\n   * internally.\n   */\n  type FetchesType = readonly string[]|NullableOnnxValueMapType;\n\n  /**\n   * A inferencing return type is an object that uses output names as keys and OnnxValue as corresponding values.\n   */\n  type ReturnType = OnnxValueMapType;\n\n  // #endregion\n\n  // #region session options\n\n  /**\n   * A set of configurations for session behavior.\n   */\n  export interface SessionOptions {\n    /**\n     * An array of execution provider options.\n     *\n     * An execution provider option can be a string indicating the name of the execution provider,\n     * or an object of corresponding type.\n     */\n    executionProviders?: readonly ExecutionProviderConfig[];\n\n    /**\n     * The intra OP threads number.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native).\n     */\n    intraOpNumThreads?: number;\n\n    /**\n     * The inter OP threads number.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native).\n     */\n    interOpNumThreads?: number;\n\n    /**\n     * The free dimension override.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    freeDimensionOverrides?: {readonly [dimensionName: string]: number};\n\n    /**\n     * The optimization level.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    graphOptimizationLevel?: 'disabled'|'basic'|'extended'|'all';\n\n    /**\n     * Whether enable CPU memory arena.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    enableCpuMemArena?: boolean;\n\n    /**\n     * Whether enable memory pattern.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    enableMemPattern?: boolean;\n\n    /**\n     * Execution mode.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    executionMode?: 'sequential'|'parallel';\n\n    /**\n     * Optimized model file path.\n     *\n     * If this setting is specified, the optimized model will be dumped. In browser, a blob will be created\n     * with a pop-up window.\n     */\n    optimizedModelFilePath?: string;\n\n    /**\n     * Wether enable profiling.\n     *\n     * This setting is a placeholder for a future use.\n     */\n    enableProfiling?: boolean;\n\n    /**\n     * File prefix for profiling.\n     *\n     * This setting is a placeholder for a future use.\n     */\n    profileFilePrefix?: string;\n\n    /**\n     * Log ID.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    logId?: string;\n\n    /**\n     * Log severity level. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/common/logging/severity.h\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    logSeverityLevel?: 0|1|2|3|4;\n\n    /**\n     * Log verbosity level.\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     */\n    logVerbosityLevel?: number;\n\n    /**\n     * Specify string as a preferred data location for all outputs, or an object that use output names as keys and a\n     * preferred data location as corresponding values.\n     *\n     * This setting is available only in ONNXRuntime Web for WebGL and WebGPU EP.\n     */\n    preferredOutputLocation?: OnnxValueDataLocation|{readonly [outputName: string]: OnnxValueDataLocation};\n\n    /**\n     * Store configurations for a session. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/session/\n     * onnxruntime_session_options_config_keys.h\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     *\n     * @example\n     * ```js\n     * extra: {\n     *   session: {\n     *     set_denormal_as_zero: \"1\",\n     *     disable_prepacking: \"1\"\n     *   },\n     *   optimization: {\n     *     enable_gelu_approximation: \"1\"\n     *   }\n     * }\n     * ```\n     */\n    extra?: Record<string, unknown>;\n  }\n\n  // #region execution providers\n\n  // Currently, we have the following backends to support execution providers:\n  // Backend Node.js binding: supports 'cpu' and 'cuda'.\n  // Backend WebAssembly: supports 'cpu', 'wasm', 'xnnpack' and 'webnn'.\n  // Backend ONNX.js: supports 'webgl'.\n  // Backend React Native: supports 'cpu', 'xnnpack', 'coreml' (iOS), 'nnapi' (Android).\n  interface ExecutionProviderOptionMap {\n    cpu: CpuExecutionProviderOption;\n    coreml: CoreMlExecutionProviderOption;\n    cuda: CudaExecutionProviderOption;\n    dml: DmlExecutionProviderOption;\n    tensorrt: TensorRtExecutionProviderOption;\n    wasm: WebAssemblyExecutionProviderOption;\n    webgl: WebGLExecutionProviderOption;\n    xnnpack: XnnpackExecutionProviderOption;\n    webgpu: WebGpuExecutionProviderOption;\n    webnn: WebNNExecutionProviderOption;\n    nnapi: NnapiExecutionProviderOption;\n  }\n\n  type ExecutionProviderName = keyof ExecutionProviderOptionMap;\n  type ExecutionProviderConfig =\n      ExecutionProviderOptionMap[ExecutionProviderName]|ExecutionProviderOption|ExecutionProviderName|string;\n\n  export interface ExecutionProviderOption {\n    readonly name: string;\n  }\n  export interface CpuExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'cpu';\n    useArena?: boolean;\n  }\n  export interface CudaExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'cuda';\n    deviceId?: number;\n  }\n  export interface CoreMlExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'coreml';\n    coreMlFlags?: number;\n  }\n  export interface DmlExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'dml';\n    deviceId?: number;\n  }\n  export interface TensorRtExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'tensorrt';\n    deviceId?: number;\n  }\n  export interface WebAssemblyExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'wasm';\n  }\n  export interface WebGLExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'webgl';\n    // TODO: add flags\n  }\n  export interface XnnpackExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'xnnpack';\n  }\n  export interface WebGpuExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'webgpu';\n    preferredLayout?: 'NCHW'|'NHWC';\n  }\n  export interface WebNNExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'webnn';\n    deviceType?: 'cpu'|'gpu';\n    powerPreference?: 'default'|'low-power'|'high-performance';\n  }\n  export interface CoreMLExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'coreml';\n    useCPUOnly?: boolean;\n    enableOnSubgraph?: boolean;\n    onlyEnableDeviceWithANE?: boolean;\n  }\n  export interface NnapiExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'nnapi';\n    useFP16?: boolean;\n    useNCHW?: boolean;\n    cpuDisabled?: boolean;\n    cpuOnly?: boolean;\n  }\n  // #endregion\n\n  // #endregion\n\n  // #region run options\n\n  /**\n   * A set of configurations for inference run behavior\n   */\n  export interface RunOptions {\n    /**\n     * Log severity level. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/common/logging/severity.h\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    logSeverityLevel?: 0|1|2|3|4;\n\n    /**\n     * Log verbosity level.\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     */\n    logVerbosityLevel?: number;\n\n    /**\n     * Terminate all incomplete OrtRun calls as soon as possible if true\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     */\n    terminate?: boolean;\n\n    /**\n     * A tag for the Run() calls using this\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    tag?: string;\n\n    /**\n     * Set a single run configuration entry. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/session/\n     * onnxruntime_run_options_config_keys.h\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     *\n     * @example\n     *\n     * ```js\n     * extra: {\n     *   memory: {\n     *     enable_memory_arena_shrinkage: \"1\",\n     *   }\n     * }\n     * ```\n     */\n    extra?: Record<string, unknown>;\n  }\n\n  // #endregion\n\n  // #region value metadata\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-interface\n  interface ValueMetadata {\n    // TBD\n  }\n\n  // #endregion\n}\n\n/**\n * Represent a runtime instance of an ONNX model.\n */\nexport interface InferenceSession {\n  // #region run()\n\n  /**\n   * Execute the model asynchronously with the given feeds and options.\n   *\n   * @param feeds - Representation of the model input. See type description of `InferenceSession.InputType` for detail.\n   * @param options - Optional. A set of options that controls the behavior of model inference.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding values.\n   */\n  run(feeds: InferenceSession.FeedsType, options?: InferenceSession.RunOptions): Promise<InferenceSession.ReturnType>;\n\n  /**\n   * Execute the model asynchronously with the given feeds, fetches and options.\n   *\n   * @param feeds - Representation of the model input. See type description of `InferenceSession.InputType` for detail.\n   * @param fetches - Representation of the model output. See type description of `InferenceSession.OutputType` for\n   * detail.\n   * @param options - Optional. A set of options that controls the behavior of model inference.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding values.\n   */\n  run(feeds: InferenceSession.FeedsType, fetches: InferenceSession.FetchesType,\n      options?: InferenceSession.RunOptions): Promise<InferenceSession.ReturnType>;\n\n  // #endregion\n\n  // #region release()\n\n  /**\n   * Release the inference session and the underlying resources.\n   */\n  release(): Promise<void>;\n\n  // #endregion\n\n  // #region profiling\n\n  /**\n   * Start profiling.\n   */\n  startProfiling(): void;\n\n  /**\n   * End profiling.\n   */\n  endProfiling(): void;\n\n  // #endregion\n\n  // #region metadata\n\n  /**\n   * Get input names of the loaded model.\n   */\n  readonly inputNames: readonly string[];\n\n  /**\n   * Get output names of the loaded model.\n   */\n  readonly outputNames: readonly string[];\n\n  // /**\n  //  * Get input metadata of the loaded model.\n  //  */\n  // readonly inputMetadata: ReadonlyArray<Readonly<InferenceSession.ValueMetadata>>;\n\n  // /**\n  //  * Get output metadata of the loaded model.\n  //  */\n  // readonly outputMetadata: ReadonlyArray<Readonly<InferenceSession.ValueMetadata>>;\n\n  // #endregion\n}\n\nexport interface InferenceSessionFactory {\n  // #region create()\n\n  /**\n   * Create a new inference session and load model asynchronously from an ONNX model file.\n   *\n   * @param uri - The URI or file path of the model to load.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(uri: string, options?: InferenceSession.SessionOptions): Promise<InferenceSession>;\n\n  /**\n   * Create a new inference session and load model asynchronously from an array bufer.\n   *\n   * @param buffer - An ArrayBuffer representation of an ONNX model.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(buffer: ArrayBufferLike, options?: InferenceSession.SessionOptions): Promise<InferenceSession>;\n\n  /**\n   * Create a new inference session and load model asynchronously from segment of an array bufer.\n   *\n   * @param buffer - An ArrayBuffer representation of an ONNX model.\n   * @param byteOffset - The beginning of the specified portion of the array buffer.\n   * @param byteLength - The length in bytes of the array buffer.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(buffer: ArrayBufferLike, byteOffset: number, byteLength?: number, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSession>;\n\n  /**\n   * Create a new inference session and load model asynchronously from a Uint8Array.\n   *\n   * @param buffer - A Uint8Array representation of an ONNX model.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<InferenceSession>;\n\n  // #endregion\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const InferenceSession: InferenceSessionFactory = InferenceSessionImpl;\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from './tensor.js';\n\ntype NonTensorType = never;\n\n/**\n * Type OnnxValue Represents both tensors and non-tensors value for model's inputs/outputs.\n *\n * NOTE: currently not support non-tensor\n */\nexport type OnnxValue = Tensor|NonTensorType;\n\n/**\n * Type OnnxValueDataLocation represents the location of the data of an OnnxValue.\n */\nexport type OnnxValueDataLocation = Tensor.DataLocation;\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TrainingSessionHandler} from './backend.js';\nimport {InferenceSession as InferenceSession} from './inference-session.js';\nimport {TrainingSession as TrainingSessionInterface, TrainingSessionCreateOptions} from './training-session.js';\n\ntype SessionOptions = InferenceSession.SessionOptions;\n\nexport class TrainingSession implements TrainingSessionInterface {\n  private constructor(handler: TrainingSessionHandler) {\n    this.handler = handler;\n  }\n  private handler: TrainingSessionHandler;\n\n  get inputNames(): readonly string[] {\n    return this.handler.inputNames;\n  }\n  get outputNames(): readonly string[] {\n    return this.handler.outputNames;\n  }\n\n  static async create(_trainingOptions: TrainingSessionCreateOptions, _sessionOptions?: SessionOptions):\n      Promise<TrainingSession> {\n    throw new Error('Method not implemented');\n  }\n\n  async loadParametersBuffer(_array: Uint8Array, _trainableOnly: boolean): Promise<void> {\n    throw new Error('Method not implemented.');\n  }\n\n  async getContiguousParameters(_trainableOnly: boolean): Promise<Uint8Array> {\n    throw new Error('Method not implemented.');\n  }\n\n  runTrainStep(feeds: InferenceSession.OnnxValueMapType, options?: InferenceSession.RunOptions|undefined):\n      Promise<InferenceSession.OnnxValueMapType>;\n  runTrainStep(\n      feeds: InferenceSession.OnnxValueMapType, fetches: InferenceSession.FetchesType,\n      options?: InferenceSession.RunOptions|undefined): Promise<InferenceSession.OnnxValueMapType>;\n  async runTrainStep(_feeds: unknown, _fetches?: unknown, _options?: unknown):\n      Promise<InferenceSession.OnnxValueMapType> {\n    throw new Error('Method not implemented.');\n  }\n\n  async release(): Promise<void> {\n    return this.handler.dispose();\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from './inference-session.js';\nimport {TrainingSession as TrainingSessionImpl} from './training-session-impl.js';\n\n/* eslint-disable @typescript-eslint/no-redeclare */\n\nexport declare namespace TrainingSession {\n  /**\n   * Either URI file path (string) or Uint8Array containing model or checkpoint information.\n   */\n  type URIorBuffer = string|Uint8Array;\n}\n\n/**\n * Represent a runtime instance of an ONNX training session,\n * which contains a model that can be trained, and, optionally,\n * an eval and optimizer model.\n */\nexport interface TrainingSession {\n  // #region run()\n\n  /**\n   * Run TrainStep asynchronously with the given feeds and options.\n   *\n   * @param feeds - Representation of the model input. See type description of `InferenceSession.InputType` for\n   detail.\n   * @param options - Optional. A set of options that controls the behavior of model training.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding values.\n   */\n  runTrainStep(feeds: InferenceSession.FeedsType, options?: InferenceSession.RunOptions):\n      Promise<InferenceSession.ReturnType>;\n\n  /**\n   * Run a single train step with the given inputs and options.\n   *\n   * @param feeds - Representation of the model input.\n   * @param fetches - Representation of the model output.\n   * detail.\n   * @param options - Optional. A set of options that controls the behavior of model inference.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding\n   values.\n   */\n  runTrainStep(\n      feeds: InferenceSession.FeedsType, fetches: InferenceSession.FetchesType,\n      options?: InferenceSession.RunOptions): Promise<InferenceSession.ReturnType>;\n\n  // #endregion\n\n  // #region copy parameters\n  /**\n   * Copies from a buffer containing parameters to the TrainingSession parameters.\n   *\n   * @param buffer - buffer containing parameters\n   * @param trainableOnly - True if trainable parameters only to be modified, false otherwise.\n   */\n  loadParametersBuffer(array: Uint8Array, trainableOnly: boolean): Promise<void>;\n\n  /**\n   * Copies from the TrainingSession parameters to a buffer.\n   *\n   * @param trainableOnly - True if trainable parameters only to be copied, false othrwise.\n   * @returns A promise that resolves to a buffer of the requested parameters.\n   */\n  getContiguousParameters(trainableOnly: boolean): Promise<Uint8Array>;\n  // #endregion\n\n  // #region release()\n\n  /**\n   * Release the inference session and the underlying resources.\n   */\n  release(): Promise<void>;\n  // #endregion\n\n  // #region metadata\n\n  /**\n   * Get input names of the loaded model.\n   */\n  readonly inputNames: readonly string[];\n\n  /**\n   * Get output names of the loaded model.\n   */\n  readonly outputNames: readonly string[];\n  // #endregion\n}\n\n/**\n * Represents the optional parameters that can be passed into the TrainingSessionFactory.\n */\nexport interface TrainingSessionCreateOptions {\n  /**\n   * URI or buffer for a .ckpt file that contains the checkpoint for the training model.\n   */\n  checkpointState: TrainingSession.URIorBuffer;\n  /**\n   * URI or buffer for the .onnx training file.\n   */\n  trainModel: TrainingSession.URIorBuffer;\n  /**\n   * Optional. URI or buffer for the .onnx optimizer model file.\n   */\n  optimizerModel?: TrainingSession.URIorBuffer;\n  /**\n   * Optional. URI or buffer for the .onnx eval model file.\n   */\n  evalModel?: TrainingSession.URIorBuffer;\n}\n\n/**\n * Defines method overload possibilities for creating a TrainingSession.\n */\nexport interface TrainingSessionFactory {\n  // #region create()\n\n  /**\n   * Creates a new TrainingSession and asynchronously loads any models passed in through trainingOptions\n   *\n   * @param trainingOptions specify models and checkpoints to load into the Training Session\n   * @param sessionOptions specify configuration for training session behavior\n   *\n   * @returns Promise that resolves to a TrainingSession object\n   */\n  create(trainingOptions: TrainingSessionCreateOptions, sessionOptions?: InferenceSession.SessionOptions):\n      Promise<TrainingSession>;\n\n  // #endregion\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const TrainingSession: TrainingSessionFactory = TrainingSessionImpl;\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * # ONNX Runtime JavaScript API\n *\n * ONNX Runtime JavaScript API is a unified API for all JavaScript usages, including the following NPM packages:\n *\n * - [onnxruntime-node](https://www.npmjs.com/package/onnxruntime-node)\n * - [onnxruntime-web](https://www.npmjs.com/package/onnxruntime-web)\n * - [onnxruntime-react-native](https://www.npmjs.com/package/onnxruntime-react-native)\n *\n * See also:\n * - [Get Started](https://onnxruntime.ai/docs/get-started/with-javascript.html)\n * - [Inference examples](https://github.com/microsoft/onnxruntime-inference-examples/tree/main/js)\n *\n * @packageDocumentation\n */\n\nexport * from './backend.js';\nexport * from './env.js';\nexport * from './inference-session.js';\nexport * from './tensor.js';\nexport * from './onnx-value.js';\nexport * from './training-session.js';\n", "export const readFile = undefined;", "export const join = undefined;", "\r\nvar ortWasm = (() => {\r\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\r\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\r\n  return (\r\nfunction(moduleArg = {}) {\r\n\r\nvar h=moduleArg,aa,ba;h.ready=new Promise((a,b)=>{aa=a;ba=b});\"use strict\";\r\nh.jsepInit=(a,b,c,d,e,f,g,k)=>{h.zh=a;h.ph=b;h.rh=c;h.eh=d;h.qh=e;h.Cd=f;h.sh=g;h.th=k;b=(l,m,n)=>(...q)=>{const r=u,p=m?.();q=l(...q);const t=m?.();p!==t&&(l=t,n(p),m=n=null);return u!=r?ca():q};c=l=>async(...m)=>{try{if(h.Xg)throw Error(\"Session already started\");const n=h.Xg={uh:m[0],errors:[]},q=await l(...m);if(h.Xg!==n)throw Error(\"Session mismatch\");a.flush();const r=n.errors;if(0<r.length){let p=await Promise.all(r);p=p.filter(t=>t);if(0<p.length)throw Error(p.join(\"\\n\"));}return q}finally{h.Xg=\r\nnull}};h._OrtRun=c(b(h._OrtRun,()=>h._OrtRun,l=>h._OrtRun=l));h._OrtRunWithBinding=c(b(h._OrtRunWithBinding,()=>h._OrtRunWithBinding,l=>h._OrtRunWithBinding=l));h._OrtBindInput=b(h._OrtBindInput,()=>h._OrtBindInput,l=>h._OrtBindInput=l);h.jsepRegisterBuffer=(l,m,n,q)=>a.registerBuffer(l,m,n,q);h.jsepUnregisterBuffers=l=>{a.unregisterBuffers(l)};h.jsepGetBuffer=l=>a.getBuffer(l);h.jsepCreateDownloader=(l,m,n)=>a.createDownloader(l,m,n)};\r\nvar da=Object.assign({},h),ea=\"./this.program\",fa=(a,b)=>{throw b;},ha=\"object\"==typeof window,ia=\"function\"==typeof importScripts,ja=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,w=\"\",ka,la,ma;\r\nif(ja){var fs=require(\"fs\"),na=require(\"path\");w=ia?na.dirname(w)+\"/\":__dirname+\"/\";ka=(a,b)=>{a=a.startsWith(\"file://\")?new URL(a):na.normalize(a);return fs.readFileSync(a,b?void 0:\"utf8\")};ma=a=>{a=ka(a,!0);a.buffer||(a=new Uint8Array(a));return a};la=(a,b,c,d=!0)=>{a=a.startsWith(\"file://\")?new URL(a):na.normalize(a);fs.readFile(a,d?void 0:\"utf8\",(e,f)=>{e?c(e):b(d?f.buffer:f)})};!h.thisProgram&&1<process.argv.length&&(ea=process.argv[1].replace(/\\\\/g,\"/\"));process.argv.slice(2);fa=(a,b)=>{process.exitCode=\r\na;throw b;};h.inspect=()=>\"[Emscripten Module object]\"}else if(ha||ia)ia?w=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(w=document.currentScript.src),_scriptDir&&(w=_scriptDir),0!==w.indexOf(\"blob:\")?w=w.substr(0,w.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):w=\"\",ka=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},ia&&(ma=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),\r\nla=(a,b,c)=>{var d=new XMLHttpRequest;d.open(\"GET\",a,!0);d.responseType=\"arraybuffer\";d.onload=()=>{200==d.status||0==d.status&&d.response?b(d.response):c()};d.onerror=c;d.send(null)};var oa=h.print||console.log.bind(console),pa=h.printErr||console.error.bind(console);Object.assign(h,da);da=null;h.thisProgram&&(ea=h.thisProgram);h.quit&&(fa=h.quit);var qa;h.wasmBinary&&(qa=h.wasmBinary);var noExitRuntime=h.noExitRuntime||!0;\"object\"!=typeof WebAssembly&&x(\"no native wasm support detected\");\r\nvar ra,y,B=!1,sa,K,M,P,Q,ta;function ua(){var a=ra.buffer;h.HEAP8=K=new Int8Array(a);h.HEAP16=new Int16Array(a);h.HEAP32=P=new Int32Array(a);h.HEAPU8=M=new Uint8Array(a);h.HEAPU16=new Uint16Array(a);h.HEAPU32=Q=new Uint32Array(a);h.HEAPF32=new Float32Array(a);h.HEAPF64=ta=new Float64Array(a)}var va=[],wa=[],xa=[];function ya(){var a=h.preRun.shift();va.unshift(a)}var R=0,za=null,Aa=null;\r\nfunction x(a){if(h.onAbort)h.onAbort(a);a=\"Aborted(\"+a+\")\";pa(a);B=!0;sa=1;a=new WebAssembly.RuntimeError(a+\". Build with -sASSERTIONS for more info.\");ba(a);throw a;}function Ba(a){return a.startsWith(\"data:application/octet-stream;base64,\")}var Ca;Ca=\"ort-wasm-simd.wasm\";if(!Ba(Ca)){var Da=Ca;Ca=h.locateFile?h.locateFile(Da,w):w+Da}function Ea(a){if(a==Ca&&qa)return new Uint8Array(qa);if(ma)return ma(a);throw\"both async and sync fetching of the wasm failed\";}\r\nfunction Fa(a){if(!qa&&(ha||ia)){if(\"function\"==typeof fetch&&!a.startsWith(\"file://\"))return fetch(a,{credentials:\"same-origin\"}).then(b=>{if(!b.ok)throw\"failed to load wasm binary file at '\"+a+\"'\";return b.arrayBuffer()}).catch(()=>Ea(a));if(la)return new Promise((b,c)=>{la(a,d=>b(new Uint8Array(d)),c)})}return Promise.resolve().then(()=>Ea(a))}function Ga(a,b,c){return Fa(a).then(d=>WebAssembly.instantiate(d,b)).then(d=>d).then(c,d=>{pa(\"failed to asynchronously prepare wasm: \"+d);x(d)})}\r\nfunction Ha(a,b){var c=Ca;return qa||\"function\"!=typeof WebAssembly.instantiateStreaming||Ba(c)||c.startsWith(\"file://\")||ja||\"function\"!=typeof fetch?Ga(c,a,b):fetch(c,{credentials:\"same-origin\"}).then(d=>WebAssembly.instantiateStreaming(d,a).then(b,function(e){pa(\"wasm streaming compile failed: \"+e);pa(\"falling back to ArrayBuffer instantiation\");return Ga(c,a,b)}))}\r\nvar Ia,Ja={1312944:a=>{h.Cd(\"Abs\",a,void 0)},1312995:a=>{h.Cd(\"Neg\",a,void 0)},1313046:a=>{h.Cd(\"Floor\",a,void 0)},1313099:a=>{h.Cd(\"Ceil\",a,void 0)},1313151:a=>{h.Cd(\"Reciprocal\",a,void 0)},1313209:a=>{h.Cd(\"Sqrt\",a,void 0)},1313261:a=>{h.Cd(\"Exp\",a,void 0)},1313312:a=>{h.Cd(\"Erf\",a,void 0)},1313363:a=>{h.Cd(\"Sigmoid\",a,void 0)},1313418:a=>{h.Cd(\"Log\",a,void 0)},1313469:a=>{h.Cd(\"Sin\",a,void 0)},1313520:a=>{h.Cd(\"Cos\",a,void 0)},1313571:a=>{h.Cd(\"Tan\",a,void 0)},1313622:a=>{h.Cd(\"Asin\",a,void 0)},\r\n1313674:a=>{h.Cd(\"Acos\",a,void 0)},1313726:a=>{h.Cd(\"Atan\",a,void 0)},1313778:a=>{h.Cd(\"Sinh\",a,void 0)},1313830:a=>{h.Cd(\"Cosh\",a,void 0)},1313882:a=>{h.Cd(\"Asinh\",a,void 0)},1313935:a=>{h.Cd(\"Acosh\",a,void 0)},1313988:a=>{h.Cd(\"Atanh\",a,void 0)},1314041:a=>{h.Cd(\"Tanh\",a,void 0)},1314093:a=>{h.Cd(\"Not\",a,void 0)},1314144:(a,b,c)=>{h.Cd(\"ClipV10\",a,{min:b,max:c})},1314216:a=>{h.Cd(\"Clip\",a,void 0)},1314268:(a,b)=>{h.Cd(\"Elu\",a,{alpha:b})},1314326:a=>{h.Cd(\"Relu\",a,void 0)},1314378:(a,b)=>{h.Cd(\"LeakyRelu\",\r\na,{alpha:b})},1314442:(a,b)=>{h.Cd(\"ThresholdedRelu\",a,{alpha:b})},1314512:(a,b)=>{h.Cd(\"Cast\",a,{to:b})},1314570:a=>{h.Cd(\"Add\",a,void 0)},1314621:a=>{h.Cd(\"Sub\",a,void 0)},1314672:a=>{h.Cd(\"Mul\",a,void 0)},1314723:a=>{h.Cd(\"Div\",a,void 0)},1314774:a=>{h.Cd(\"Pow\",a,void 0)},1314825:a=>{h.Cd(\"Equal\",a,void 0)},1314878:a=>{h.Cd(\"Greater\",a,void 0)},1314933:a=>{h.Cd(\"GreaterOrEqual\",a,void 0)},1314995:a=>{h.Cd(\"Less\",a,void 0)},1315047:a=>{h.Cd(\"LessOrEqual\",a,void 0)},1315106:(a,b,c,d,e)=>{h.Cd(\"ReduceMean\",\r\na,{keepDims:!!b,noopWithEmptyAxes:!!c,axes:d?Array.from(P.subarray(e>>>0,e+d>>>0)):[]})},1315270:(a,b,c,d,e)=>{h.Cd(\"ReduceMax\",a,{keepDims:!!b,noopWithEmptyAxes:!!c,axes:d?Array.from(P.subarray(e>>>0,e+d>>>0)):[]})},1315433:(a,b,c,d,e)=>{h.Cd(\"ReduceMin\",a,{keepDims:!!b,noopWithEmptyAxes:!!c,axes:d?Array.from(P.subarray(e>>>0,e+d>>>0)):[]})},1315596:(a,b,c,d,e)=>{h.Cd(\"ReduceProd\",a,{keepDims:!!b,noopWithEmptyAxes:!!c,axes:d?Array.from(P.subarray(e>>>0,e+d>>>0)):[]})},1315760:(a,b,c,d,e)=>{h.Cd(\"ReduceSum\",\r\na,{keepDims:!!b,noopWithEmptyAxes:!!c,axes:d?Array.from(P.subarray(e>>>0,e+d>>>0)):[]})},1315923:(a,b,c,d,e)=>{h.Cd(\"ReduceL1\",a,{keepDims:!!b,noopWithEmptyAxes:!!c,axes:d?Array.from(P.subarray(e>>>0,e+d>>>0)):[]})},1316085:(a,b,c,d,e)=>{h.Cd(\"ReduceL2\",a,{keepDims:!!b,noopWithEmptyAxes:!!c,axes:d?Array.from(P.subarray(e>>>0,e+d>>>0)):[]})},1316247:(a,b,c,d,e)=>{h.Cd(\"ReduceLogSum\",a,{keepDims:!!b,noopWithEmptyAxes:!!c,axes:d?Array.from(P.subarray(e>>>0,e+d>>>0)):[]})},1316413:(a,b,c,d,e)=>{h.Cd(\"ReduceSumSquare\",\r\na,{keepDims:!!b,noopWithEmptyAxes:!!c,axes:d?Array.from(P.subarray(e>>>0,e+d>>>0)):[]})},1316582:(a,b,c,d,e)=>{h.Cd(\"ReduceLogSumExp\",a,{keepDims:!!b,noopWithEmptyAxes:!!c,axes:d?Array.from(P.subarray(e>>>0,e+d>>>0)):[]})},1316751:a=>{h.Cd(\"Where\",a,void 0)},1316804:(a,b,c)=>{h.Cd(\"Transpose\",a,{perm:b?Array.from(P.subarray(c>>>0,c+b>>>0)):[]})},1316917:(a,b,c,d,e,f,g,k,l,m)=>{h.Cd(\"Conv\",a,{format:l?\"NHWC\":\"NCHW\",auto_pad:b,dilations:[c],group:d,kernel_shape:[e],pads:[f,g],strides:[k],w_is_const:()=>\r\n!!K[m>>>0]})},1317145:(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t)=>{h.Cd(\"Conv\",a,{format:p?\"NHWC\":\"NCHW\",auto_pad:b,dilations:[c,d],group:e,kernel_shape:[f,g],pads:[k,l,m,n],strides:[q,r],w_is_const:()=>!!K[t>>>0]})},1317404:(a,b,c,d,e,f,g,k,l,m)=>{h.Cd(\"Conv\",a,{format:l?\"NHWC\":\"NCHW\",auto_pad:b,dilations:[c],group:d,kernel_shape:[e],pads:[f,g],strides:[k],w_is_const:()=>!!K[m>>>0]})},1317632:(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t)=>{h.Cd(\"Conv\",a,{format:p?\"NHWC\":\"NCHW\",auto_pad:b,dilations:[c,d],group:e,kernel_shape:[f,\r\ng],pads:[k,l,m,n],strides:[q,r],w_is_const:()=>!!K[t>>>0]})},1317891:(a,b,c,d,e,f,g,k,l,m,n,q,r,p)=>{h.Cd(\"ConvTranspose\",a,{format:l?\"NHWC\":\"NCHW\",autoPad:b,dilations:[c],group:d,kernel_shape:[e],pads:[f,g],strides:[k],wIsConst:()=>!!K[m>>>0],outputPadding:n?Array.from(P.subarray(q>>>0,q+n>>>0)):[],outputShape:r?Array.from(P.subarray(p>>>0,p+r>>>0)):[]})},1318271:(a,b,c,d,e,f,g,k,l,m,n,q,r)=>{h.Cd(\"ConvTranspose\",a,{format:k?\"NHWC\":\"NCHW\",autoPad:b,dilations:Array.from(P.subarray(c>>>0,c+2>>>0)),\r\ngroup:d,kernelShape:Array.from(P.subarray(e>>>0,e+2>>>0)),pads:Array.from(P.subarray(f>>>0,f+4>>>0)),strides:Array.from(P.subarray(g>>>0,g+2>>>0)),wIsConst:()=>!!K[l>>>0],outputPadding:0<m?Array.from(P.subarray(n>>>0,n+m>>>0)):[],outputShape:0<q?Array.from(P.subarray(r>>>0,r+q>>>0)):[]})},1318794:(a,b,c,d,e,f,g,k,l,m,n,q,r,p)=>{h.Cd(\"ConvTranspose\",a,{format:l?\"NHWC\":\"NCHW\",autoPad:b,dilations:[c],group:d,kernel_shape:[e],pads:[f,g],strides:[k],wIsConst:()=>!!K[m>>>0],outputPadding:n?Array.from(P.subarray(q>>>\r\n0,q+n>>>0)):[],outputShape:r?Array.from(P.subarray(p>>>0,p+r>>>0)):[]})},1319174:(a,b,c,d,e,f,g,k,l,m,n,q,r)=>{h.Cd(\"ConvTranspose\",a,{format:k?\"NHWC\":\"NCHW\",autoPad:b,dilations:Array.from(P.subarray(c>>>0,c+2>>>0)),group:d,kernelShape:Array.from(P.subarray(e>>>0,e+2>>>0)),pads:Array.from(P.subarray(f>>>0,f+4>>>0)),strides:Array.from(P.subarray(g>>>0,g+2>>>0)),wIsConst:()=>!!K[l>>>0],outputPadding:0<m?Array.from(P.subarray(n>>>0,n+m>>>0)):[],outputShape:0<q?Array.from(P.subarray(r>>>0,r+q>>>0)):[]})},\r\n1319697:(a,b)=>{h.Cd(\"GlobalAveragePool\",a,{format:b?\"NHWC\":\"NCHW\"})},1319788:(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v)=>{h.Cd(\"AveragePool\",a,{format:v?\"NHWC\":\"NCHW\",auto_pad:b,ceil_mode:c,count_include_pad:d,storage_order:e,dilations:[f,g],kernel_shape:[k,l],pads:[m,n,q,r],strides:[p,t]})},1320072:(a,b)=>{h.Cd(\"GlobalAveragePool\",a,{format:b?\"NHWC\":\"NCHW\"})},1320163:(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v)=>{h.Cd(\"AveragePool\",a,{format:v?\"NHWC\":\"NCHW\",auto_pad:b,ceil_mode:c,count_include_pad:d,storage_order:e,\r\ndilations:[f,g],kernel_shape:[k,l],pads:[m,n,q,r],strides:[p,t]})},1320447:(a,b)=>{h.Cd(\"GlobalMaxPool\",a,{format:b?\"NHWC\":\"NCHW\"})},1320534:(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v)=>{h.Cd(\"MaxPool\",a,{format:v?\"NHWC\":\"NCHW\",auto_pad:b,ceil_mode:c,count_include_pad:d,storage_order:e,dilations:[f,g],kernel_shape:[k,l],pads:[m,n,q,r],strides:[p,t]})},1320814:(a,b)=>{h.Cd(\"GlobalMaxPool\",a,{format:b?\"NHWC\":\"NCHW\"})},1320901:(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v)=>{h.Cd(\"MaxPool\",a,{format:v?\"NHWC\":\"NCHW\",auto_pad:b,\r\nceil_mode:c,count_include_pad:d,storage_order:e,dilations:[f,g],kernel_shape:[k,l],pads:[m,n,q,r],strides:[p,t]})},1321181:(a,b,c,d,e)=>{h.Cd(\"Gemm\",a,{alpha:b,beta:c,transA:d,transB:e})},1321285:a=>{h.Cd(\"MatMul\",a,void 0)},1321339:(a,b,c,d)=>{h.Cd(\"ArgMax\",a,{keepDims:!!b,selectLastIndex:!!c,axis:d})},1321447:(a,b,c,d)=>{h.Cd(\"ArgMin\",a,{keepDims:!!b,selectLastIndex:!!c,axis:d})},1321555:(a,b)=>{h.Cd(\"Softmax\",a,{axis:b})},1321618:(a,b)=>{h.Cd(\"Concat\",a,{axis:b})},1321678:(a,b,c,d,e)=>{h.Cd(\"Split\",\r\na,{axis:b,numOutputs:c,splitSizes:d?Array.from(P.subarray(e>>>0,e+d>>>0)):[]})},1321823:a=>{h.Cd(\"Expand\",a,void 0)},1321877:(a,b)=>{h.Cd(\"Gather\",a,{axis:Number(b)})},1321948:(a,b)=>{h.Cd(\"GatherElements\",a,{axis:Number(b)})},1322027:(a,b,c,d,e,f,g,k,l,m,n)=>{h.Cd(\"Resize\",a,{antialias:b,axes:c?Array.from(P.subarray(d>>>0,d+c>>>0)):[],coordinateTransformMode:S(e),cubicCoeffA:f,excludeOutside:g,extrapolationValue:k,keepAspectRatioPolicy:S(l),mode:S(m),nearestMode:S(n)})},1322378:(a,b,c,d,e,f,g)=>\r\n{h.Cd(\"Slice\",a,{starts:b?Array.from(P.subarray(c>>>0,c+b>>>0)):[],ends:d?Array.from(P.subarray(e>>>0,e+d>>>0)):[],axes:f?Array.from(P.subarray(g>>>0,g+f>>>0)):[]})},1322609:a=>{h.Cd(\"Tile\",a,void 0)},1322661:(a,b,c)=>{h.Cd(\"LayerNormalization\",a,{axis:Number(b),epsilon:Number(c)})},1322768:(a,b,c)=>{h.Cd(\"InstanceNormalization\",a,{epsilon:b,format:c?\"NHWC\":\"NCHW\"})},1322882:(a,b,c)=>{h.Cd(\"InstanceNormalization\",a,{epsilon:b,format:c?\"NHWC\":\"NCHW\"})},1322996:a=>{h.Cd(\"Range\",a,void 0)},1323049:(a,\r\nb)=>{h.Cd(\"Einsum\",a,{equation:S(b)})},1323130:(a,b,c,d,e)=>{h.Cd(\"Pad\",a,{mode:b,value:c,pads:d?Array.from(P.subarray(e>>>0,e+d>>>0)):[]})},1323262:a=>{h.Cd(\"Gelu\",a,void 0)},1323314:a=>{h.Cd(\"BiasAdd\",a,void 0)},1323369:a=>{h.Cd(\"BiasSplitGelu\",a,void 0)},1323430:(a,b)=>{h.Cd(\"SkipLayerNormalization\",a,{epsilon:b})},1323511:a=>{h.sh(a)},1323545:(a,b)=>h.th(a,b,h.Xg.uh,h.Xg.errors),1323657:a=>h.ph(a),1323690:a=>h.rh(a),1323722:(a,b,c)=>{h.eh(a,b,c,!0)},1323761:(a,b,c)=>{h.eh(a,b,c)}};\r\nfunction Ka(a){this.name=\"ExitStatus\";this.message=`Program terminated with exit(${a})`;this.status=a}var La=a=>{for(;0<a.length;)a.shift()(h)},Ma=[],Na=0,T=0;\r\nfunction Oa(a){this.Wg=a;this.Sg=a-24;this.mh=function(b){Q[this.Sg+4>>2>>>0]=b};this.bh=function(){return Q[this.Sg+4>>2>>>0]};this.lh=function(b){Q[this.Sg+8>>2>>>0]=b};this.fh=function(b){K[this.Sg+12>>0>>>0]=b?1:0};this.ih=function(){return 0!=K[this.Sg+12>>0>>>0]};this.gh=function(b){K[this.Sg+13>>0>>>0]=b?1:0};this.oh=function(){return 0!=K[this.Sg+13>>0>>>0]};this.kh=function(b,c){this.dh(0);this.mh(b);this.lh(c)};this.dh=function(b){Q[this.Sg+16>>2>>>0]=b};this.hh=function(){return Q[this.Sg+\r\n16>>2>>>0]};this.jh=function(){if(Pa(this.bh()))return Q[this.Wg>>2>>>0];var b=this.hh();return 0!==b?b:this.Wg}}\r\nvar Sa=a=>{var b=T;if(!b)return Qa(0),0;var c=new Oa(b);c.dh(b);var d=c.bh();if(!d)return Qa(0),b;for(var e in a){var f=a[e];if(0===f||f===d)break;if(Ra(f,d,c.Sg+16))return Qa(f),b}Qa(d);return b},Ta=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0,Ua=(a,b,c)=>{b>>>=0;var d=b+c;for(c=b;a[c]&&!(c>=d);)++c;if(16<c-b&&a.buffer&&Ta)return Ta.decode(a.subarray(b,c));for(d=\"\";b<c;){var e=a[b++];if(e&128){var f=a[b++]&63;if(192==(e&224))d+=String.fromCharCode((e&31)<<6|f);else{var g=a[b++]&\r\n63;e=224==(e&240)?(e&15)<<12|f<<6|g:(e&7)<<18|f<<12|g<<6|a[b++]&63;65536>e?d+=String.fromCharCode(e):(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023))}}else d+=String.fromCharCode(e)}return d},S=(a,b)=>(a>>>=0)?Ua(M,a,b):\"\",Va=a=>{for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);127>=d?b++:2047>=d?b+=2:55296<=d&&57343>=d?(b+=4,++c):b+=3}return b},Wa=(a,b,c,d)=>{c>>>=0;if(!(0<d))return 0;var e=c;d=c+d-1;for(var f=0;f<a.length;++f){var g=a.charCodeAt(f);if(55296<=g&&57343>=g){var k=a.charCodeAt(++f);\r\ng=65536+((g&1023)<<10)|k&1023}if(127>=g){if(c>=d)break;b[c++>>>0]=g}else{if(2047>=g){if(c+1>=d)break;b[c++>>>0]=192|g>>6}else{if(65535>=g){if(c+2>=d)break;b[c++>>>0]=224|g>>12}else{if(c+3>=d)break;b[c++>>>0]=240|g>>18;b[c++>>>0]=128|g>>12&63}b[c++>>>0]=128|g>>6&63}b[c++>>>0]=128|g&63}}b[c>>>0]=0;return c-e},Xa=a=>0===a%4&&(0!==a%100||0===a%400),Ya=[0,31,60,91,121,152,182,213,244,274,305,335],Za=[0,31,59,90,120,151,181,212,243,273,304,334],ab=a=>{var b=Va(a)+1,c=$a(b);c&&Wa(a,M,c,b);return c},bb=[],\r\ncb=(a,b)=>{bb.length=0;var c;for(b>>=2;c=M[a++>>>0];)b+=105!=c&b,bb.push(105==c?P[b>>>0]:ta[b++>>>1]),++b;return bb},db={},fb=()=>{if(!eb){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:ea||\"./this.program\"},b;for(b in db)void 0===db[b]?delete a[b]:a[b]=db[b];var c=[];for(b in a)c.push(`${b}=${a[b]}`);eb=c}return eb},eb,gb=[null,[],[]],hb=[31,29,31,30,31,\r\n30,31,31,30,31,30,31],ib=[31,28,31,30,31,30,31,31,30,31,30,31];function jb(a){var b=Array(Va(a)+1);Wa(a,b,0,b.length);return b}\r\nfunction kb(a,b,c,d){function e(p,t,v){for(p=\"number\"==typeof p?p.toString():p||\"\";p.length<t;)p=v[0]+p;return p}function f(p,t){return e(p,t,\"0\")}function g(p,t){function v(A){return 0>A?-1:0<A?1:0}var z;0===(z=v(p.getFullYear()-t.getFullYear()))&&0===(z=v(p.getMonth()-t.getMonth()))&&(z=v(p.getDate()-t.getDate()));return z}function k(p){switch(p.getDay()){case 0:return new Date(p.getFullYear()-1,11,29);case 1:return p;case 2:return new Date(p.getFullYear(),0,3);case 3:return new Date(p.getFullYear(),\r\n0,2);case 4:return new Date(p.getFullYear(),0,1);case 5:return new Date(p.getFullYear()-1,11,31);case 6:return new Date(p.getFullYear()-1,11,30)}}function l(p){var t=p.Ug;for(p=new Date((new Date(p.Vg+1900,0,1)).getTime());0<t;){var v=p.getMonth(),z=(Xa(p.getFullYear())?hb:ib)[v];if(t>z-p.getDate())t-=z-p.getDate()+1,p.setDate(1),11>v?p.setMonth(v+1):(p.setMonth(0),p.setFullYear(p.getFullYear()+1));else{p.setDate(p.getDate()+t);break}}v=new Date(p.getFullYear()+1,0,4);t=k(new Date(p.getFullYear(),\r\n0,4));v=k(v);return 0>=g(t,p)?0>=g(v,p)?p.getFullYear()+1:p.getFullYear():p.getFullYear()-1}a>>>=0;b>>>=0;c>>>=0;d>>>=0;var m=P[d+40>>2>>>0];d={xh:P[d>>2>>>0],wh:P[d+4>>2>>>0],Yg:P[d+8>>2>>>0],ah:P[d+12>>2>>>0],Zg:P[d+16>>2>>>0],Vg:P[d+20>>2>>>0],Tg:P[d+24>>2>>>0],Ug:P[d+28>>2>>>0],Ah:P[d+32>>2>>>0],vh:P[d+36>>2>>>0],yh:m?S(m):\"\"};c=S(c);m={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\r\n\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var n in m)c=c.replace(new RegExp(n,\"g\"),m[n]);var q=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),r=\"January February March April May June July August September October November December\".split(\" \");m={\"%a\":p=>q[p.Tg].substring(0,3),\"%A\":p=>q[p.Tg],\"%b\":p=>r[p.Zg].substring(0,\r\n3),\"%B\":p=>r[p.Zg],\"%C\":p=>f((p.Vg+1900)/100|0,2),\"%d\":p=>f(p.ah,2),\"%e\":p=>e(p.ah,2,\" \"),\"%g\":p=>l(p).toString().substring(2),\"%G\":p=>l(p),\"%H\":p=>f(p.Yg,2),\"%I\":p=>{p=p.Yg;0==p?p=12:12<p&&(p-=12);return f(p,2)},\"%j\":p=>{for(var t=0,v=0;v<=p.Zg-1;t+=(Xa(p.Vg+1900)?hb:ib)[v++]);return f(p.ah+t,3)},\"%m\":p=>f(p.Zg+1,2),\"%M\":p=>f(p.wh,2),\"%n\":()=>\"\\n\",\"%p\":p=>0<=p.Yg&&12>p.Yg?\"AM\":\"PM\",\"%S\":p=>f(p.xh,2),\"%t\":()=>\"\\t\",\"%u\":p=>p.Tg||7,\"%U\":p=>f(Math.floor((p.Ug+7-p.Tg)/7),2),\"%V\":p=>{var t=Math.floor((p.Ug+\r\n7-(p.Tg+6)%7)/7);2>=(p.Tg+371-p.Ug-2)%7&&t++;if(t)53==t&&(v=(p.Tg+371-p.Ug)%7,4==v||3==v&&Xa(p.Vg)||(t=1));else{t=52;var v=(p.Tg+7-p.Ug-1)%7;(4==v||5==v&&Xa(p.Vg%400-1))&&t++}return f(t,2)},\"%w\":p=>p.Tg,\"%W\":p=>f(Math.floor((p.Ug+7-(p.Tg+6)%7)/7),2),\"%y\":p=>(p.Vg+1900).toString().substring(2),\"%Y\":p=>p.Vg+1900,\"%z\":p=>{p=p.vh;var t=0<=p;p=Math.abs(p)/60;return(t?\"+\":\"-\")+String(\"0000\"+(p/60*100+p%60)).slice(-4)},\"%Z\":p=>p.yh,\"%%\":()=>\"%\"};c=c.replace(/%%/g,\"\\x00\\x00\");for(n in m)c.includes(n)&&(c=\r\nc.replace(new RegExp(n,\"g\"),m[n](d)));c=c.replace(/\\0\\0/g,\"%\");n=jb(c);if(n.length>b)return 0;K.set(n,a>>>0);return n.length-1}function lb(a){try{a()}catch(b){x(b)}}function mb(a){var b={},c;for(c in a)(function(d){var e=a[d];b[d]=\"function\"==typeof e?function(){nb.push(d);try{return e.apply(null,arguments)}finally{B||(nb.pop()===d||x(),u&&1===U&&0===nb.length&&(U=0,lb(ob),\"undefined\"!=typeof Fibers&&Fibers.Bh()))}}:e})(c);return b}var U=0,u=null,pb=0,nb=[],qb={},rb={},sb=0,tb=null,ub=[];\r\nfunction ca(){return new Promise((a,b)=>{tb={resolve:a,reject:b}})}function vb(){var a=$a(65548),b=a+12;Q[a>>2>>>0]=b;Q[a+4>>2>>>0]=b+65536;b=nb[0];var c=qb[b];void 0===c&&(c=sb++,qb[b]=c,rb[c]=b);P[a+8>>2>>>0]=c;return a}\r\nfunction wb(a){if(!B){if(0===U){var b=!1,c=!1;a((d=0)=>{if(!B&&(pb=d,b=!0,c)){U=2;lb(()=>xb(u));\"undefined\"!=typeof Browser&&Browser.$g.nh&&Browser.$g.resume();d=!1;try{var e=(0,y[rb[P[u+8>>2>>>0]]])()}catch(k){e=k,d=!0}var f=!1;if(!u){var g=tb;g&&(tb=null,(d?g.reject:g.resolve)(e),f=!0)}if(d&&!f)throw e;}});c=!0;b||(U=1,u=vb(),\"undefined\"!=typeof Browser&&Browser.$g.nh&&Browser.$g.pause(),lb(()=>yb(u)))}else 2===U?(U=0,lb(zb),Ab(u),u=null,ub.forEach(d=>{if(!B)try{if(d(),!noExitRuntime)try{sa=sa=\r\nd=sa;if(!noExitRuntime){if(h.onExit)h.onExit(d);B=!0}fa(d,new Ka(d))}catch(e){e instanceof Ka||\"unwind\"==e||fa(1,e)}}catch(e){e instanceof Ka||\"unwind\"==e||fa(1,e)}})):x(`invalid state: ${U}`);return pb}}function Bb(a){return wb(b=>{a().then(b)})}\r\nvar Je={Ha:function(a,b,c){return Bb(async()=>{await h.qh(a,b,c)})},u:function(a){a=new Oa(a>>>0);a.ih()||(a.fh(!0),Na--);a.gh(!1);Ma.push(a);Cb(a.Wg);return a.jh()},B:function(){V(0,0);var a=Ma.pop();Db(a.Wg);T=0},a:function(){return Sa([])},k:function(a){return Sa([a>>>0])},w:function(a,b){return Sa([a>>>0,b>>>0])},q:function(a,b,c){return Sa([a>>>0,b>>>0,c>>>0])},pa:function(){var a=Ma.pop();a||x(\"no exception to throw\");var b=a.Wg;a.oh()||(Ma.push(a),a.gh(!0),a.fh(!1),Na++);T=b;throw T;},s:function(a,\r\nb,c){a>>>=0;(new Oa(a)).kh(b>>>0,c>>>0);T=a;Na++;throw T;},$:function(){return Na},g:function(a){T||(T=a>>>0);throw T;},qa:function(){return 0},oc:function(){},Pa:function(){},Ra:function(){},Ja:function(){return 0},Ub:function(){},Ta:function(){},Jb:function(){},Ca:function(){},Qa:function(){},Na:function(){},dc:function(){},Oa:function(){},Tc:()=>!0,Oc:function(a,b,c){a=b+2097152>>>0<4194305-!!a?(a>>>0)+4294967296*b:NaN;c>>>=0;a=new Date(1E3*a);P[c>>2>>>0]=a.getUTCSeconds();P[c+4>>2>>>0]=a.getUTCMinutes();\r\nP[c+8>>2>>>0]=a.getUTCHours();P[c+12>>2>>>0]=a.getUTCDate();P[c+16>>2>>>0]=a.getUTCMonth();P[c+20>>2>>>0]=a.getUTCFullYear()-1900;P[c+24>>2>>>0]=a.getUTCDay();P[c+28>>2>>>0]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0},Pc:function(a,b,c){a=b+2097152>>>0<4194305-!!a?(a>>>0)+4294967296*b:NaN;c>>>=0;a=new Date(1E3*a);P[c>>2>>>0]=a.getSeconds();P[c+4>>2>>>0]=a.getMinutes();P[c+8>>2>>>0]=a.getHours();P[c+12>>2>>>0]=a.getDate();P[c+16>>2>>>0]=a.getMonth();P[c+20>>2>>>0]=a.getFullYear()-\r\n1900;P[c+24>>2>>>0]=a.getDay();P[c+28>>2>>>0]=(Xa(a.getFullYear())?Ya:Za)[a.getMonth()]+a.getDate()-1|0;P[c+36>>2>>>0]=-(60*a.getTimezoneOffset());b=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();var d=(new Date(a.getFullYear(),0,1)).getTimezoneOffset();P[c+32>>2>>>0]=(b!=d&&a.getTimezoneOffset()==Math.min(d,b))|0},Qc:function(a){a>>>=0;var b=new Date(P[a+20>>2>>>0]+1900,P[a+16>>2>>>0],P[a+12>>2>>>0],P[a+8>>2>>>0],P[a+4>>2>>>0],P[a>>2>>>0],0),c=P[a+32>>2>>>0],d=b.getTimezoneOffset(),e=(new Date(b.getFullYear(),\r\n6,1)).getTimezoneOffset(),f=(new Date(b.getFullYear(),0,1)).getTimezoneOffset(),g=Math.min(f,e);0>c?P[a+32>>2>>>0]=Number(e!=f&&g==d):0<c!=(g==d)&&(e=Math.max(f,e),b.setTime(b.getTime()+6E4*((0<c?g:e)-d)));P[a+24>>2>>>0]=b.getDay();P[a+28>>2>>>0]=(Xa(b.getFullYear())?Ya:Za)[b.getMonth()]+b.getDate()-1|0;P[a>>2>>>0]=b.getSeconds();P[a+4>>2>>>0]=b.getMinutes();P[a+8>>2>>>0]=b.getHours();P[a+12>>2>>>0]=b.getDate();P[a+16>>2>>>0]=b.getMonth();P[a+20>>2>>>0]=b.getYear();a=b.getTime()/1E3;return Qa((Ia=\r\na,1<=+Math.abs(Ia)?0<Ia?+Math.floor(Ia/4294967296)>>>0:~~+Math.ceil((Ia-+(~~Ia>>>0))/4294967296)>>>0:0)),a>>>0},Mc:function(){return-52},Nc:function(){},La:function(a,b,c){function d(l){return(l=l.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?l[1]:\"GMT\"}c>>>=0;var e=(new Date).getFullYear(),f=new Date(e,0,1),g=new Date(e,6,1);e=f.getTimezoneOffset();var k=g.getTimezoneOffset();Q[a>>>0>>2>>>0]=60*Math.max(e,k);P[b>>>0>>2>>>0]=Number(e!=k);a=d(f);b=d(g);a=ab(a);b=ab(b);k<e?(Q[c>>2>>>0]=a,Q[c+4>>2>>>0]=\r\nb):(Q[c>>2>>>0]=b,Q[c+4>>2>>>0]=a)},ja:()=>{x(\"\")},x:function(a,b,c){a>>>=0;b=cb(b>>>0,c>>>0);return Ja[a].apply(null,b)},wa:function(a,b,c){a>>>=0;b=cb(b>>>0,c>>>0);return Ja[a].apply(null,b)},Ea:function(){return Date.now()},Ma:function(){return 4294901760},I:()=>performance.now(),yb:function(a,b,c){b>>>=0;return M.copyWithin(a>>>0>>>0,b>>>0,b+(c>>>0)>>>0)},Ka:function(a){a>>>=0;var b=M.length;if(4294901760<a)return!1;for(var c=1;4>=c;c*=2){var d=b*(1+.2/c);d=Math.min(d,a+100663296);var e=Math;\r\nd=Math.max(a,d);a:{e=e.min.call(e,4294901760,d+(65536-d%65536)%65536)-ra.buffer.byteLength+65535>>>16;try{ra.grow(e);ua();var f=1;break a}catch(g){}f=void 0}if(f)return!0}return!1},cb:function(a,b){a>>>=0;b>>>=0;var c=0;fb().forEach(function(d,e){var f=b+c;e=Q[a+4*e>>2>>>0]=f;for(f=0;f<d.length;++f)K[e++>>0>>>0]=d.charCodeAt(f);K[e>>0>>>0]=0;c+=d.length+1});return 0},nb:function(a,b){a>>>=0;b>>>=0;var c=fb();Q[a>>2>>>0]=c.length;var d=0;c.forEach(function(e){d+=e.length+1});Q[b>>2>>>0]=d;return 0},\r\nma:()=>52,Ba:function(){return 52},Rc:function(){return 70},Aa:function(a,b,c,d){b>>>=0;c>>>=0;d>>>=0;for(var e=0,f=0;f<c;f++){var g=Q[b>>2>>>0],k=Q[b+4>>2>>>0];b+=8;for(var l=0;l<k;l++){var m=M[g+l>>>0],n=gb[a];0===m||10===m?((1===a?oa:pa)(Ua(n,0)),n.length=0):n.push(m)}e+=k}Q[d>>2>>>0]=e;return 0},ia:Eb,Sc:Fb,M:Gb,K:Hb,Uc:Ib,Wc:Jb,C:Kb,z:Lb,b:Mb,Da:Nb,ca:Ob,f:Pb,ra:Qb,h:Rb,F:Sb,i:Tb,Vc:Ub,j:Vb,t:Wb,r:Xb,n:Yb,W:Zb,Y:$b,J:ac,oa:bc,aa:cc,la:dc,vb:ec,gb:fc,zc:gc,bb:hc,eb:ic,Sa:jc,Sb:kc,Dc:lc,jb:mc,\r\nVa:nc,Ob:oc,fb:pc,gc:qc,Lc:rc,pc:sc,hb:tc,db:uc,Bb:vc,kc:wc,nc:xc,fc:yc,Kc:zc,_a:Ac,ab:Bc,qb:Cc,mb:Dc,$a:Ec,ic:Fc,Kb:Gc,lb:Hc,Ua:Ic,Tb:Jc,Ic:Kc,Ac:Lc,tc:Mc,pb:Nc,lc:Oc,Ib:Pc,Hb:Qc,c:Rc,_:Sc,p:Tc,P:Uc,Z:Vc,ha:Wc,e:Xc,za:Yc,G:Zc,da:$c,O:ad,ub:bd,fa:cd,d:dd,xa:ed,Fa:fd,l:gd,va:hd,m:jd,ya:kd,ua:ld,Ga:md,o:nd,V:od,ga:pd,U:qd,na:rd,y:sd,A:td,E:ud,X:vd,ta:wd,ea:xd,N:yd,L:zd,D:Ad,ba:Bd,T:Cd,ka:Dd,R:Ed,sa:Fd,Q:Gd,S:Hd,jc:Id,zb:Jd,rb:Kd,Eb:Ld,Ab:Md,Bc:Nd,Nb:Od,xb:Pd,Fb:Qd,Pb:Rd,ec:Sd,ob:Td,Mb:Ud,sb:Vd,Ya:Wd,\r\nrc:Xd,Fc:Yd,Za:Zd,Qb:$d,xc:ae,Cb:be,kb:ce,vc:de,Hc:ee,wc:fe,Cc:ge,Xa:he,Ec:ie,wb:je,Lb:ke,yc:le,Jc:me,ib:ne,Db:oe,Yb:pe,tb:qe,Gc:re,Zb:se,Rb:te,hc:ue,qc:ve,Gb:we,Xb:xe,sc:ye,mc:ze,Wa:Ae,uc:Be,Vb:Ce,Wb:De,$b:Ee,ac:Fe,cc:Ge,_b:He,bc:Ie,v:function(a){return a>>>0},Ia:kb,H:function(a,b,c,d){return kb(a>>>0,b>>>0,c>>>0,d>>>0)}};\r\n(function(){function a(c){c=c.exports;c=mb(c);y=c=Ke(c);ra=y.Xc;ua();wa.unshift(y.Yc);R--;h.monitorRunDependencies&&h.monitorRunDependencies(R);if(0==R&&(null!==za&&(clearInterval(za),za=null),Aa)){var d=Aa;Aa=null;d()}return c}var b={a:Je};R++;h.monitorRunDependencies&&h.monitorRunDependencies(R);if(h.instantiateWasm)try{return h.instantiateWasm(b,a)}catch(c){pa(\"Module.instantiateWasm callback failed with error: \"+c),ba(c)}Ha(b,function(c){a(c.instance)}).catch(ba);return{}})();\r\nh._OrtInit=(a,b)=>(h._OrtInit=y.Zc)(a,b);h._OrtGetLastError=(a,b)=>(h._OrtGetLastError=y._c)(a,b);h._OrtCreateSessionOptions=(a,b,c,d,e,f,g,k,l,m)=>(h._OrtCreateSessionOptions=y.$c)(a,b,c,d,e,f,g,k,l,m);h._OrtAppendExecutionProvider=(a,b)=>(h._OrtAppendExecutionProvider=y.ad)(a,b);h._OrtAddFreeDimensionOverride=(a,b,c)=>(h._OrtAddFreeDimensionOverride=y.bd)(a,b,c);h._OrtAddSessionConfigEntry=(a,b,c)=>(h._OrtAddSessionConfigEntry=y.cd)(a,b,c);\r\nh._OrtReleaseSessionOptions=a=>(h._OrtReleaseSessionOptions=y.dd)(a);h._OrtCreateSession=(a,b,c)=>(h._OrtCreateSession=y.ed)(a,b,c);h._OrtReleaseSession=a=>(h._OrtReleaseSession=y.fd)(a);h._OrtGetInputOutputCount=(a,b,c)=>(h._OrtGetInputOutputCount=y.gd)(a,b,c);h._OrtGetInputName=(a,b)=>(h._OrtGetInputName=y.hd)(a,b);h._OrtGetOutputName=(a,b)=>(h._OrtGetOutputName=y.id)(a,b);h._OrtFree=a=>(h._OrtFree=y.jd)(a);h._OrtCreateTensor=(a,b,c,d,e,f)=>(h._OrtCreateTensor=y.kd)(a,b,c,d,e,f);\r\nh._OrtGetTensorData=(a,b,c,d,e)=>(h._OrtGetTensorData=y.ld)(a,b,c,d,e);h._OrtReleaseTensor=a=>(h._OrtReleaseTensor=y.md)(a);h._OrtCreateRunOptions=(a,b,c,d)=>(h._OrtCreateRunOptions=y.nd)(a,b,c,d);h._OrtAddRunConfigEntry=(a,b,c)=>(h._OrtAddRunConfigEntry=y.od)(a,b,c);h._OrtReleaseRunOptions=a=>(h._OrtReleaseRunOptions=y.pd)(a);h._OrtCreateBinding=a=>(h._OrtCreateBinding=y.qd)(a);h._OrtBindInput=(a,b,c)=>(h._OrtBindInput=y.rd)(a,b,c);h._OrtBindOutput=(a,b,c,d)=>(h._OrtBindOutput=y.sd)(a,b,c,d);\r\nh._OrtClearBoundOutputs=a=>(h._OrtClearBoundOutputs=y.td)(a);h._OrtReleaseBinding=a=>(h._OrtReleaseBinding=y.ud)(a);h._OrtRunWithBinding=(a,b,c,d,e)=>(h._OrtRunWithBinding=y.vd)(a,b,c,d,e);h._OrtRun=(a,b,c,d,e,f,g,k)=>(h._OrtRun=y.wd)(a,b,c,d,e,f,g,k);h._OrtEndProfiling=a=>(h._OrtEndProfiling=y.xd)(a);h._JsepOutput=(a,b,c)=>(h._JsepOutput=y.yd)(a,b,c);h._JsepGetNodeName=a=>(h._JsepGetNodeName=y.zd)(a);\r\nvar $a=h._malloc=a=>($a=h._malloc=y.Ad)(a),Ab=h._free=a=>(Ab=h._free=y.Bd)(a),V=(a,b)=>(V=y.Dd)(a,b),Qa=a=>(Qa=y.Ed)(a),W=()=>(W=y.Fd)(),X=a=>(X=y.Gd)(a),Le=a=>(Le=y.Hd)(a),Db=a=>(Db=y.Id)(a),Cb=a=>(Cb=y.Jd)(a),Ra=(a,b,c)=>(Ra=y.Kd)(a,b,c),Pa=a=>(Pa=y.Ld)(a),dynCall_vi=h.dynCall_vi=(a,b)=>(dynCall_vi=h.dynCall_vi=y.Md)(a,b),dynCall_vii=h.dynCall_vii=(a,b,c)=>(dynCall_vii=h.dynCall_vii=y.Nd)(a,b,c),Me=h.dynCall_iiii=(a,b,c,d)=>(Me=h.dynCall_iiii=y.Od)(a,b,c,d),dynCall_iii=h.dynCall_iii=(a,b,c)=>(dynCall_iii=\r\nh.dynCall_iii=y.Pd)(a,b,c),Ne=h.dynCall_ii=(a,b)=>(Ne=h.dynCall_ii=y.Qd)(a,b),Oe=h.dynCall_iiiiiii=(a,b,c,d,e,f,g)=>(Oe=h.dynCall_iiiiiii=y.Rd)(a,b,c,d,e,f,g),dynCall_v=h.dynCall_v=a=>(dynCall_v=h.dynCall_v=y.Sd)(a),Pe=h.dynCall_iiiiii=(a,b,c,d,e,f)=>(Pe=h.dynCall_iiiiii=y.Td)(a,b,c,d,e,f),Qe=h.dynCall_iiij=(a,b,c,d,e)=>(Qe=h.dynCall_iiij=y.Ud)(a,b,c,d,e),Re=h.dynCall_iiiii=(a,b,c,d,e)=>(Re=h.dynCall_iiiii=y.Vd)(a,b,c,d,e),Se=h.dynCall_viii=(a,b,c,d)=>(Se=h.dynCall_viii=y.Wd)(a,b,c,d),Te=h.dynCall_j=\r\na=>(Te=h.dynCall_j=y.Xd)(a),Ue=h.dynCall_i=a=>(Ue=h.dynCall_i=y.Yd)(a),Ve=h.dynCall_iij=(a,b,c,d)=>(Ve=h.dynCall_iij=y.Zd)(a,b,c,d),We=h.dynCall_iiiiij=(a,b,c,d,e,f,g)=>(We=h.dynCall_iiiiij=y._d)(a,b,c,d,e,f,g),Xe=h.dynCall_vij=(a,b,c,d)=>(Xe=h.dynCall_vij=y.$d)(a,b,c,d),Ye=h.dynCall_viiiii=(a,b,c,d,e,f)=>(Ye=h.dynCall_viiiii=y.ae)(a,b,c,d,e,f),Ze=h.dynCall_viiii=(a,b,c,d,e)=>(Ze=h.dynCall_viiii=y.be)(a,b,c,d,e),$e=h.dynCall_iiiiiiii=(a,b,c,d,e,f,g,k)=>($e=h.dynCall_iiiiiiii=y.ce)(a,b,c,d,e,f,g,k),\r\naf=h.dynCall_fi=(a,b)=>(af=h.dynCall_fi=y.de)(a,b),bf=h.dynCall_fii=(a,b,c)=>(bf=h.dynCall_fii=y.ee)(a,b,c),cf=h.dynCall_ji=(a,b)=>(cf=h.dynCall_ji=y.fe)(a,b),df=h.dynCall_di=(a,b)=>(df=h.dynCall_di=y.ge)(a,b),ef=h.dynCall_jii=(a,b,c)=>(ef=h.dynCall_jii=y.he)(a,b,c),ff=h.dynCall_dii=(a,b,c)=>(ff=h.dynCall_dii=y.ie)(a,b,c),gf=h.dynCall_iiiiiiiii=(a,b,c,d,e,f,g,k,l)=>(gf=h.dynCall_iiiiiiiii=y.je)(a,b,c,d,e,f,g,k,l),hf=h.dynCall_viij=(a,b,c,d,e)=>(hf=h.dynCall_viij=y.ke)(a,b,c,d,e),jf=h.dynCall_viiiiii=\r\n(a,b,c,d,e,f,g)=>(jf=h.dynCall_viiiiii=y.le)(a,b,c,d,e,f,g),kf=h.dynCall_vijj=(a,b,c,d,e,f)=>(kf=h.dynCall_vijj=y.me)(a,b,c,d,e,f),lf=h.dynCall_viiiiiii=(a,b,c,d,e,f,g,k)=>(lf=h.dynCall_viiiiiii=y.ne)(a,b,c,d,e,f,g,k),mf=h.dynCall_iiiiiiiiii=(a,b,c,d,e,f,g,k,l,m)=>(mf=h.dynCall_iiiiiiiiii=y.oe)(a,b,c,d,e,f,g,k,l,m),nf=h.dynCall_viiiiiiii=(a,b,c,d,e,f,g,k,l)=>(nf=h.dynCall_viiiiiiii=y.pe)(a,b,c,d,e,f,g,k,l),of=h.dynCall_iiiiijiiiii=(a,b,c,d,e,f,g,k,l,m,n,q)=>(of=h.dynCall_iiiiijiiiii=y.qe)(a,b,c,d,\r\ne,f,g,k,l,m,n,q),pf=h.dynCall_viiji=(a,b,c,d,e,f)=>(pf=h.dynCall_viiji=y.re)(a,b,c,d,e,f),qf=h.dynCall_viijiii=(a,b,c,d,e,f,g,k)=>(qf=h.dynCall_viijiii=y.se)(a,b,c,d,e,f,g,k),rf=h.dynCall_viiiiij=(a,b,c,d,e,f,g,k)=>(rf=h.dynCall_viiiiij=y.te)(a,b,c,d,e,f,g,k),sf=h.dynCall_viiiiiiiii=(a,b,c,d,e,f,g,k,l,m)=>(sf=h.dynCall_viiiiiiiii=y.ue)(a,b,c,d,e,f,g,k,l,m),tf=h.dynCall_viid=(a,b,c,d)=>(tf=h.dynCall_viid=y.ve)(a,b,c,d),uf=h.dynCall_iiiiiiiij=(a,b,c,d,e,f,g,k,l,m)=>(uf=h.dynCall_iiiiiiiij=y.we)(a,b,\r\nc,d,e,f,g,k,l,m),vf=h.dynCall_iiiiiiiiiiii=(a,b,c,d,e,f,g,k,l,m,n,q)=>(vf=h.dynCall_iiiiiiiiiiii=y.xe)(a,b,c,d,e,f,g,k,l,m,n,q),wf=h.dynCall_viiiiiiiiiiiii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p)=>(wf=h.dynCall_viiiiiiiiiiiii=y.ye)(a,b,c,d,e,f,g,k,l,m,n,q,r,p),xf=h.dynCall_viijjjiiiiii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t)=>(xf=h.dynCall_viijjjiiiiii=y.ze)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t),yf=h.dynCall_viiijiiiiiii=(a,b,c,d,e,f,g,k,l,m,n,q,r)=>(yf=h.dynCall_viiijiiiiiii=y.Ae)(a,b,c,d,e,f,g,k,l,m,n,q,r),zf=h.dynCall_viffiii=\r\n(a,b,c,d,e,f,g)=>(zf=h.dynCall_viffiii=y.Be)(a,b,c,d,e,f,g),Af=h.dynCall_viiijjjii=(a,b,c,d,e,f,g,k,l,m,n,q)=>(Af=h.dynCall_viiijjjii=y.Ce)(a,b,c,d,e,f,g,k,l,m,n,q),Bf=h.dynCall_viifiii=(a,b,c,d,e,f,g)=>(Bf=h.dynCall_viifiii=y.De)(a,b,c,d,e,f,g),Cf=h.dynCall_viiiiidiidi=(a,b,c,d,e,f,g,k,l,m,n)=>(Cf=h.dynCall_viiiiidiidi=y.Ee)(a,b,c,d,e,f,g,k,l,m,n),Df=h.dynCall_viiiiiiiiidi=(a,b,c,d,e,f,g,k,l,m,n,q)=>(Df=h.dynCall_viiiiiiiiidi=y.Fe)(a,b,c,d,e,f,g,k,l,m,n,q),Ef=h.dynCall_vjiiiiii=(a,b,c,d,e,f,g,k,\r\nl)=>(Ef=h.dynCall_vjiiiiii=y.Ge)(a,b,c,d,e,f,g,k,l),Ff=h.dynCall_jiii=(a,b,c,d)=>(Ff=h.dynCall_jiii=y.He)(a,b,c,d),Gf=h.dynCall_viiid=(a,b,c,d,e)=>(Gf=h.dynCall_viiid=y.Ie)(a,b,c,d,e),Hf=h.dynCall_viiiiiiiiiii=(a,b,c,d,e,f,g,k,l,m,n,q)=>(Hf=h.dynCall_viiiiiiiiiii=y.Je)(a,b,c,d,e,f,g,k,l,m,n,q),If=h.dynCall_vijjjjjjjjjjjjji=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G,H,I,J,L,N,O)=>(If=h.dynCall_vijjjjjjjjjjjjji=y.Ke)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G,H,I,J,L,N,O),Jf=h.dynCall_viiiji=\r\n(a,b,c,d,e,f,g)=>(Jf=h.dynCall_viiiji=y.Le)(a,b,c,d,e,f,g),Kf=h.dynCall_vijjjiiji=(a,b,c,d,e,f,g,k,l,m,n,q,r)=>(Kf=h.dynCall_vijjjiiji=y.Me)(a,b,c,d,e,f,g,k,l,m,n,q,r),Lf=h.dynCall_iiiji=(a,b,c,d,e,f)=>(Lf=h.dynCall_iiiji=y.Ne)(a,b,c,d,e,f),Mf=h.dynCall_iiijiiiiiiiiii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t)=>(Mf=h.dynCall_iiijiiiiiiiiii=y.Oe)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t),Nf=h.dynCall_vj=(a,b,c)=>(Nf=h.dynCall_vj=y.Pe)(a,b,c),Of=h.dynCall_jjj=(a,b,c,d,e)=>(Of=h.dynCall_jjj=y.Qe)(a,b,c,d,e),Pf=h.dynCall_iiijiiiiii=\r\n(a,b,c,d,e,f,g,k,l,m,n)=>(Pf=h.dynCall_iiijiiiiii=y.Re)(a,b,c,d,e,f,g,k,l,m,n),Qf=h.dynCall_viiff=(a,b,c,d,e)=>(Qf=h.dynCall_viiff=y.Se)(a,b,c,d,e),Rf=h.dynCall_viiiiiff=(a,b,c,d,e,f,g,k)=>(Rf=h.dynCall_viiiiiff=y.Te)(a,b,c,d,e,f,g,k),Sf=h.dynCall_vfiii=(a,b,c,d,e)=>(Sf=h.dynCall_vfiii=y.Ue)(a,b,c,d,e),Tf=h.dynCall_viiiiff=(a,b,c,d,e,f,g)=>(Tf=h.dynCall_viiiiff=y.Ve)(a,b,c,d,e,f,g),Uf=h.dynCall_viiiiiiiiifiii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p)=>(Uf=h.dynCall_viiiiiiiiifiii=y.We)(a,b,c,d,e,f,g,k,l,m,n,\r\nq,r,p),Vf=h.dynCall_viiiiiiiijj=(a,b,c,d,e,f,g,k,l,m,n,q,r)=>(Vf=h.dynCall_viiiiiiiijj=y.Xe)(a,b,c,d,e,f,g,k,l,m,n,q,r),Wf=h.dynCall_iiiiiiiiiiiiiifii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z)=>(Wf=h.dynCall_iiiiiiiiiiiiiifii=y.Ye)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z),Xf=h.dynCall_viiiiiiiiiiii=(a,b,c,d,e,f,g,k,l,m,n,q,r)=>(Xf=h.dynCall_viiiiiiiiiiii=y.Ze)(a,b,c,d,e,f,g,k,l,m,n,q,r),Yf=h.dynCall_ij=(a,b,c)=>(Yf=h.dynCall_ij=y._e)(a,b,c),Zf=h.dynCall_iiiiiiiiiiiiiiiiifii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,\r\nA,C,D)=>(Zf=h.dynCall_iiiiiiiiiiiiiiiiifii=y.$e)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D),$f=h.dynCall_vijjiiiiii=(a,b,c,d,e,f,g,k,l,m,n,q)=>($f=h.dynCall_vijjiiiiii=y.af)(a,b,c,d,e,f,g,k,l,m,n,q),ag=h.dynCall_iiiijjj=(a,b,c,d,e,f,g,k,l,m)=>(ag=h.dynCall_iiiijjj=y.bf)(a,b,c,d,e,f,g,k,l,m),bg=h.dynCall_viiiiiiiiii=(a,b,c,d,e,f,g,k,l,m,n)=>(bg=h.dynCall_viiiiiiiiii=y.cf)(a,b,c,d,e,f,g,k,l,m,n),cg=h.dynCall_iiijjj=(a,b,c,d,e,f,g,k,l)=>(cg=h.dynCall_iiijjj=y.df)(a,b,c,d,e,f,g,k,l),dg=h.dynCall_fffffff=\r\n(a,b,c,d,e,f,g)=>(dg=h.dynCall_fffffff=y.ef)(a,b,c,d,e,f,g),eg=h.dynCall_viiiij=(a,b,c,d,e,f,g)=>(eg=h.dynCall_viiiij=y.ff)(a,b,c,d,e,f,g),fg=h.dynCall_viijj=(a,b,c,d,e,f,g)=>(fg=h.dynCall_viijj=y.gf)(a,b,c,d,e,f,g),gg=h.dynCall_vjjjjjjffiifiiiiii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G,H)=>(gg=h.dynCall_vjjjjjjffiifiiiiii=y.hf)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G,H),hg=h.dynCall_viiiiiiffiifiiiii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z)=>(hg=h.dynCall_viiiiiiffiifiiiii=y.jf)(a,b,c,d,\r\ne,f,g,k,l,m,n,q,r,p,t,v,z),ig=h.dynCall_viiiiiiffifiiiii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v)=>(ig=h.dynCall_viiiiiiffifiiiii=y.kf)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v),jg=h.dynCall_viiiiiiffiiiiii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t)=>(jg=h.dynCall_viiiiiiffiiiiii=y.lf)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t),kg=h.dynCall_vjjjjjjjjfffiifiiiiii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G,H,I,J,L,N,O)=>(kg=h.dynCall_vjjjjjjjjfffiifiiiiii=y.mf)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G,H,I,J,L,N,O),lg=h.dynCall_vjjjjjjfffifiiiiiii=\r\n(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G,H,I)=>(lg=h.dynCall_vjjjjjjfffifiiiiiii=y.nf)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G,H,I),mg=h.dynCall_vjjjjjjfffifiiiii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G)=>(mg=h.dynCall_vjjjjjjfffifiiiii=y.of)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G),ng=h.dynCall_vjjjjjjjjfffiifiiiii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G,H,I,J,L,N)=>(ng=h.dynCall_vjjjjjjjjfffiifiiiii=y.pf)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G,H,I,J,L,N),og=\r\nh.dynCall_vijjfffiii=(a,b,c,d,e,f,g,k,l,m,n,q)=>(og=h.dynCall_vijjfffiii=y.qf)(a,b,c,d,e,f,g,k,l,m,n,q),pg=h.dynCall_vijiiiiiiii=(a,b,c,d,e,f,g,k,l,m,n,q)=>(pg=h.dynCall_vijiiiiiiii=y.rf)(a,b,c,d,e,f,g,k,l,m,n,q),qg=h.dynCall_vijjjjjjifiiiii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E)=>(qg=h.dynCall_vijjjjjjifiiiii=y.sf)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E),rg=h.dynCall_vjjjjjiiii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t)=>(rg=h.dynCall_vjjjjjiiii=y.tf)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t),sg=h.dynCall_vjjjjfiii=\r\n(a,b,c,d,e,f,g,k,l,m,n,q,r)=>(sg=h.dynCall_vjjjjfiii=y.uf)(a,b,c,d,e,f,g,k,l,m,n,q,r),tg=h.dynCall_viifi=(a,b,c,d,e)=>(tg=h.dynCall_viifi=y.vf)(a,b,c,d,e),ug=h.dynCall_iiiiiji=(a,b,c,d,e,f,g,k)=>(ug=h.dynCall_iiiiiji=y.wf)(a,b,c,d,e,f,g,k),vg=h.dynCall_vijjii=(a,b,c,d,e,f,g,k)=>(vg=h.dynCall_vijjii=y.xf)(a,b,c,d,e,f,g,k),wg=h.dynCall_viiijiiiiii=(a,b,c,d,e,f,g,k,l,m,n,q)=>(wg=h.dynCall_viiijiiiiii=y.yf)(a,b,c,d,e,f,g,k,l,m,n,q),xg=h.dynCall_viiiiijjiiiii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t)=>(xg=h.dynCall_viiiiijjiiiii=\r\ny.zf)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t),yg=h.dynCall_iiiiji=(a,b,c,d,e,f,g)=>(yg=h.dynCall_iiiiji=y.Af)(a,b,c,d,e,f,g),zg=h.dynCall_viiiiijiiiiii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p)=>(zg=h.dynCall_viiiiijiiiiii=y.Bf)(a,b,c,d,e,f,g,k,l,m,n,q,r,p),Ag=h.dynCall_viiiijii=(a,b,c,d,e,f,g,k,l)=>(Ag=h.dynCall_viiiijii=y.Cf)(a,b,c,d,e,f,g,k,l),Bg=h.dynCall_viijjiii=(a,b,c,d,e,f,g,k,l,m)=>(Bg=h.dynCall_viijjiii=y.Df)(a,b,c,d,e,f,g,k,l,m),Cg=h.dynCall_ijii=(a,b,c,d,e)=>(Cg=h.dynCall_ijii=y.Ef)(a,b,c,d,e),Dg=h.dynCall_jjjjjjj=\r\n(a,b,c,d,e,f,g,k,l,m,n,q,r)=>(Dg=h.dynCall_jjjjjjj=y.Ff)(a,b,c,d,e,f,g,k,l,m,n,q,r),Eg=h.dynCall_jjjjjj=(a,b,c,d,e,f,g,k,l,m,n)=>(Eg=h.dynCall_jjjjjj=y.Gf)(a,b,c,d,e,f,g,k,l,m,n),Fg=h.dynCall_vijjjjiij=(a,b,c,d,e,f,g,k,l,m,n,q,r,p)=>(Fg=h.dynCall_vijjjjiij=y.Hf)(a,b,c,d,e,f,g,k,l,m,n,q,r,p),Gg=h.dynCall_viiiiijij=(a,b,c,d,e,f,g,k,l,m,n)=>(Gg=h.dynCall_viiiiijij=y.If)(a,b,c,d,e,f,g,k,l,m,n),Hg=h.dynCall_viiiiiijij=(a,b,c,d,e,f,g,k,l,m,n,q)=>(Hg=h.dynCall_viiiiiijij=y.Jf)(a,b,c,d,e,f,g,k,l,m,n,q),Ig=\r\nh.dynCall_vijiii=(a,b,c,d,e,f,g)=>(Ig=h.dynCall_vijiii=y.Kf)(a,b,c,d,e,f,g),Jg=h.dynCall_viiiiiiiiifi=(a,b,c,d,e,f,g,k,l,m,n,q)=>(Jg=h.dynCall_viiiiiiiiifi=y.Lf)(a,b,c,d,e,f,g,k,l,m,n,q),Kg=h.dynCall_viiijiiiiiiiii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t)=>(Kg=h.dynCall_viiijiiiiiiiii=y.Mf)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t),Lg=h.dynCall_iiijiiii=(a,b,c,d,e,f,g,k,l)=>(Lg=h.dynCall_iiijiiii=y.Nf)(a,b,c,d,e,f,g,k,l),Mg=h.dynCall_viiiiiijjiiiii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v)=>(Mg=h.dynCall_viiiiiijjiiiii=y.Of)(a,\r\nb,c,d,e,f,g,k,l,m,n,q,r,p,t,v),Ng=h.dynCall_viiiiiiijiiiiii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v)=>(Ng=h.dynCall_viiiiiiijiiiiii=y.Pf)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v),Og=h.dynCall_vif=(a,b,c)=>(Og=h.dynCall_vif=y.Qf)(a,b,c),Pg=h.dynCall_viif=(a,b,c,d)=>(Pg=h.dynCall_viif=y.Rf)(a,b,c,d),Qg=h.dynCall_viiiiiifii=(a,b,c,d,e,f,g,k,l,m)=>(Qg=h.dynCall_viiiiiifii=y.Sf)(a,b,c,d,e,f,g,k,l,m),Rg=h.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G,H,I,J,L)=>(Rg=h.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=\r\ny.Tf)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G,H,I,J,L),Sg=h.dynCall_viijji=(a,b,c,d,e,f,g,k)=>(Sg=h.dynCall_viijji=y.Uf)(a,b,c,d,e,f,g,k),Tg=h.dynCall_iiiiiiiiiiiji=(a,b,c,d,e,f,g,k,l,m,n,q,r,p)=>(Tg=h.dynCall_iiiiiiiiiiiji=y.Vf)(a,b,c,d,e,f,g,k,l,m,n,q,r,p),Ug=h.dynCall_viifiifijjjii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v)=>(Ug=h.dynCall_viifiifijjjii=y.Wf)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v),Vg=h.dynCall_viiiiiiiiiiiiiiiiiiii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E)=>(Vg=h.dynCall_viiiiiiiiiiiiiiiiiiii=\r\ny.Xf)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E),Wg=h.dynCall_iif=(a,b,c)=>(Wg=h.dynCall_iif=y.Yf)(a,b,c),Xg=h.dynCall_viiiiifiiiiii=(a,b,c,d,e,f,g,k,l,m,n,q,r)=>(Xg=h.dynCall_viiiiifiiiiii=y.Zf)(a,b,c,d,e,f,g,k,l,m,n,q,r),Yg=h.dynCall_vijiiiiiiijjii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z)=>(Yg=h.dynCall_vijiiiiiiijjii=y._f)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z),Zg=h.dynCall_iiiiid=(a,b,c,d,e,f)=>(Zg=h.dynCall_iiiiid=y.$f)(a,b,c,d,e,f),$g=h.dynCall_viiiijjj=(a,b,c,d,e,f,g,k,l,m,n)=>($g=h.dynCall_viiiijjj=\r\ny.ag)(a,b,c,d,e,f,g,k,l,m,n),ah=h.dynCall_viiiiiiiiiiiiiiiiii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C)=>(ah=h.dynCall_viiiiiiiiiiiiiiiiii=y.bg)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C),bh=h.dynCall_viiiiiiiiiiiiiiii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z)=>(bh=h.dynCall_viiiiiiiiiiiiiiii=y.cg)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z),ch=h.dynCall_viiiiiiiiiiiiiiiiiii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D)=>(ch=h.dynCall_viiiiiiiiiiiiiiiiiii=y.dg)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D),dh=h.dynCall_viiiiiiiiiiiiiii=\r\n(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v)=>(dh=h.dynCall_viiiiiiiiiiiiiii=y.eg)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v),eh=h.dynCall_viiiiiiijjj=(a,b,c,d,e,f,g,k,l,m,n,q,r,p)=>(eh=h.dynCall_viiiiiiijjj=y.fg)(a,b,c,d,e,f,g,k,l,m,n,q,r,p),fh=h.dynCall_iiiiiiiiiii=(a,b,c,d,e,f,g,k,l,m,n)=>(fh=h.dynCall_iiiiiiiiiii=y.gg)(a,b,c,d,e,f,g,k,l,m,n),gh=h.dynCall_iiiiiiiiiiiiiiiiiifi=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D)=>(gh=h.dynCall_iiiiiiiiiiiiiiiiiifi=y.hg)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D),hh=h.dynCall_viiif=\r\n(a,b,c,d,e)=>(hh=h.dynCall_viiif=y.ig)(a,b,c,d,e),ih=h.dynCall_iijjj=(a,b,c,d,e,f,g,k)=>(ih=h.dynCall_iijjj=y.jg)(a,b,c,d,e,f,g,k),jh=h.dynCall_viiiiji=(a,b,c,d,e,f,g,k)=>(jh=h.dynCall_viiiiji=y.kg)(a,b,c,d,e,f,g,k),kh=h.dynCall_iijjji=(a,b,c,d,e,f,g,k,l)=>(kh=h.dynCall_iijjji=y.lg)(a,b,c,d,e,f,g,k,l),lh=h.dynCall_ijijji=(a,b,c,d,e,f,g,k,l)=>(lh=h.dynCall_ijijji=y.mg)(a,b,c,d,e,f,g,k,l),mh=h.dynCall_viiijjiii=(a,b,c,d,e,f,g,k,l,m,n)=>(mh=h.dynCall_viiijjiii=y.ng)(a,b,c,d,e,f,g,k,l,m,n),nh=h.dynCall_iiiiijji=\r\n(a,b,c,d,e,f,g,k,l,m)=>(nh=h.dynCall_iiiiijji=y.og)(a,b,c,d,e,f,g,k,l,m),oh=h.dynCall_viji=(a,b,c,d,e)=>(oh=h.dynCall_viji=y.pg)(a,b,c,d,e),ph=h.dynCall_iiiifi=(a,b,c,d,e,f)=>(ph=h.dynCall_iiiifi=y.qg)(a,b,c,d,e,f),qh=h.dynCall_iiijii=(a,b,c,d,e,f,g)=>(qh=h.dynCall_iiijii=y.rg)(a,b,c,d,e,f,g),rh=h.dynCall_iiiiiiiiijii=(a,b,c,d,e,f,g,k,l,m,n,q,r)=>(rh=h.dynCall_iiiiiiiiijii=y.sg)(a,b,c,d,e,f,g,k,l,m,n,q,r),sh=h.dynCall_iiiijjii=(a,b,c,d,e,f,g,k,l,m)=>(sh=h.dynCall_iiiijjii=y.tg)(a,b,c,d,e,f,g,k,l,\r\nm),th=h.dynCall_iiiiiijjjii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p)=>(th=h.dynCall_iiiiiijjjii=y.ug)(a,b,c,d,e,f,g,k,l,m,n,q,r,p),uh=h.dynCall_iiijiii=(a,b,c,d,e,f,g,k)=>(uh=h.dynCall_iiijiii=y.vg)(a,b,c,d,e,f,g,k),vh=h.dynCall_iiiiiiiijjjfi=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v)=>(vh=h.dynCall_iiiiiiiijjjfi=y.wg)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v),wh=h.dynCall_iijiiii=(a,b,c,d,e,f,g,k)=>(wh=h.dynCall_iijiiii=y.xg)(a,b,c,d,e,f,g,k),xh=h.dynCall_iijjjii=(a,b,c,d,e,f,g,k,l,m)=>(xh=h.dynCall_iijjjii=y.yg)(a,b,c,d,e,\r\nf,g,k,l,m),yh=h.dynCall_iiji=(a,b,c,d,e)=>(yh=h.dynCall_iiji=y.zg)(a,b,c,d,e),zh=h.dynCall_viiijiiiii=(a,b,c,d,e,f,g,k,l,m,n)=>(zh=h.dynCall_viiijiiiii=y.Ag)(a,b,c,d,e,f,g,k,l,m,n),Ah=h.dynCall_iid=(a,b,c)=>(Ah=h.dynCall_iid=y.Bg)(a,b,c),Bh=h.dynCall_iiif=(a,b,c,d)=>(Bh=h.dynCall_iiif=y.Cg)(a,b,c,d),Ch=h.dynCall_vidi=(a,b,c,d)=>(Ch=h.dynCall_vidi=y.Dg)(a,b,c,d),Dh=h.dynCall_vjiii=(a,b,c,d,e,f)=>(Dh=h.dynCall_vjiii=y.Eg)(a,b,c,d,e,f),Eh=h.dynCall_iiiij=(a,b,c,d,e,f)=>(Eh=h.dynCall_iiiij=y.Fg)(a,b,\r\nc,d,e,f),Fh=h.dynCall_viiijii=(a,b,c,d,e,f,g,k)=>(Fh=h.dynCall_viiijii=y.Gg)(a,b,c,d,e,f,g,k),Gh=h.dynCall_viijiiiiiiiii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p)=>(Gh=h.dynCall_viijiiiiiiiii=y.Hg)(a,b,c,d,e,f,g,k,l,m,n,q,r,p),Hh=h.dynCall_viiij=(a,b,c,d,e,f)=>(Hh=h.dynCall_viiij=y.Ig)(a,b,c,d,e,f),Ih=h.dynCall_fiiii=(a,b,c,d,e)=>(Ih=h.dynCall_fiiii=y.Jg)(a,b,c,d,e),Jh=h.dynCall_jfi=(a,b,c)=>(Jh=h.dynCall_jfi=y.Kg)(a,b,c),Kh=h.dynCall_viiiiiiiiiiiiii=(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t)=>(Kh=h.dynCall_viiiiiiiiiiiiii=\r\ny.Lg)(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t),Lh=h.dynCall_jiij=(a,b,c,d,e)=>(Lh=h.dynCall_jiij=y.Mg)(a,b,c,d,e),Mh=h.dynCall_fiii=(a,b,c,d)=>(Mh=h.dynCall_fiii=y.Ng)(a,b,c,d),yb=a=>(yb=y.Og)(a),ob=()=>(ob=y.Pg)(),xb=a=>(xb=y.Qg)(a),zb=()=>(zb=y.Rg)();h.___start_em_js=1323794;h.___stop_em_js=1323955;function Rb(a,b,c,d){var e=W();try{return Me(a,b,c,d)}catch(f){X(e);if(f!==f+0)throw f;V(1,0)}}function Pb(a,b,c){var d=W();try{return dynCall_iii(a,b,c)}catch(e){X(d);if(e!==e+0)throw e;V(1,0)}}\r\nfunction Xc(a,b,c){var d=W();try{dynCall_vii(a,b,c)}catch(e){X(d);if(e!==e+0)throw e;V(1,0)}}function Mb(a,b){var c=W();try{return Ne(a,b)}catch(d){X(c);if(d!==d+0)throw d;V(1,0)}}function Tc(a,b){var c=W();try{dynCall_vi(a,b)}catch(d){X(c);if(d!==d+0)throw d;V(1,0)}}function Rc(a){var b=W();try{dynCall_v(a)}catch(c){X(b);if(c!==c+0)throw c;V(1,0)}}function Wb(a,b,c,d,e,f,g){var k=W();try{return Oe(a,b,c,d,e,f,g)}catch(l){X(k);if(l!==l+0)throw l;V(1,0)}}\r\nfunction Vb(a,b,c,d,e,f){var g=W();try{return Pe(a,b,c,d,e,f)}catch(k){X(g);if(k!==k+0)throw k;V(1,0)}}function Tb(a,b,c,d,e){var f=W();try{return Re(a,b,c,d,e)}catch(g){X(f);if(g!==g+0)throw g;V(1,0)}}function dd(a,b,c,d){var e=W();try{Se(a,b,c,d)}catch(f){X(e);if(f!==f+0)throw f;V(1,0)}}function gd(a,b,c,d,e){var f=W();try{Ze(a,b,c,d,e)}catch(g){X(f);if(g!==g+0)throw g;V(1,0)}}function Lb(a){var b=W();try{return Ue(a)}catch(c){X(b);if(c!==c+0)throw c;V(1,0)}}\r\nfunction jd(a,b,c,d,e,f){var g=W();try{Ye(a,b,c,d,e,f)}catch(k){X(g);if(k!==k+0)throw k;V(1,0)}}function Xb(a,b,c,d,e,f,g,k){var l=W();try{return $e(a,b,c,d,e,f,g,k)}catch(m){X(l);if(m!==m+0)throw m;V(1,0)}}function Hb(a,b){var c=W();try{return af(a,b)}catch(d){X(c);if(d!==d+0)throw d;V(1,0)}}function Eb(a,b){var c=W();try{return df(a,b)}catch(d){X(c);if(d!==d+0)throw d;V(1,0)}}function Yb(a,b,c,d,e,f,g,k,l){var m=W();try{return gf(a,b,c,d,e,f,g,k,l)}catch(n){X(m);if(n!==n+0)throw n;V(1,0)}}\r\nfunction nd(a,b,c,d,e,f,g){var k=W();try{jf(a,b,c,d,e,f,g)}catch(l){X(k);if(l!==l+0)throw l;V(1,0)}}function sd(a,b,c,d,e,f,g,k){var l=W();try{lf(a,b,c,d,e,f,g,k)}catch(m){X(l);if(m!==m+0)throw m;V(1,0)}}function Zb(a,b,c,d,e,f,g,k,l,m){var n=W();try{return mf(a,b,c,d,e,f,g,k,l,m)}catch(q){X(n);if(q!==q+0)throw q;V(1,0)}}function td(a,b,c,d,e,f,g,k,l){var m=W();try{nf(a,b,c,d,e,f,g,k,l)}catch(n){X(m);if(n!==n+0)throw n;V(1,0)}}\r\nfunction ud(a,b,c,d,e,f,g,k,l,m){var n=W();try{sf(a,b,c,d,e,f,g,k,l,m)}catch(q){X(n);if(q!==q+0)throw q;V(1,0)}}function Yc(a,b,c,d){var e=W();try{tf(a,b,c,d)}catch(f){X(e);if(f!==f+0)throw f;V(1,0)}}function ac(a,b,c,d,e,f,g,k,l,m,n,q){var r=W();try{return vf(a,b,c,d,e,f,g,k,l,m,n,q)}catch(p){X(r);if(p!==p+0)throw p;V(1,0)}}function Bd(a,b,c,d,e,f,g,k,l,m,n,q,r,p){var t=W();try{wf(a,b,c,d,e,f,g,k,l,m,n,q,r,p)}catch(v){X(t);if(v!==v+0)throw v;V(1,0)}}\r\nfunction Wc(a,b,c,d,e,f,g){var k=W();try{zf(a,b,c,d,e,f,g)}catch(l){X(k);if(l!==l+0)throw l;V(1,0)}}function cd(a,b,c,d,e,f,g){var k=W();try{Bf(a,b,c,d,e,f,g)}catch(l){X(k);if(l!==l+0)throw l;V(1,0)}}function kd(a,b,c,d,e,f,g,k,l,m,n){var q=W();try{Cf(a,b,c,d,e,f,g,k,l,m,n)}catch(r){X(q);if(r!==r+0)throw r;V(1,0)}}function ed(a,b,c,d,e){var f=W();try{Gf(a,b,c,d,e)}catch(g){X(f);if(g!==g+0)throw g;V(1,0)}}\r\nfunction Kb(a,b,c,d,e){var f=W();try{return Ih(a,b,c,d,e)}catch(g){X(f);if(g!==g+0)throw g;V(1,0)}}function xd(a,b,c,d,e,f,g,k,l,m,n,q,r,p){var t=W();try{Uf(a,b,c,d,e,f,g,k,l,m,n,q,r,p)}catch(v){X(t);if(v!==v+0)throw v;V(1,0)}}function Sc(a,b,c,d,e){var f=W();try{Sf(a,b,c,d,e)}catch(g){X(f);if(g!==g+0)throw g;V(1,0)}}function hd(a,b,c,d,e,f,g){var k=W();try{Tf(a,b,c,d,e,f,g)}catch(l){X(k);if(l!==l+0)throw l;V(1,0)}}\r\nfunction $c(a,b,c,d,e){var f=W();try{Qf(a,b,c,d,e)}catch(g){X(f);if(g!==g+0)throw g;V(1,0)}}function ld(a,b,c,d,e,f,g,k){var l=W();try{Rf(a,b,c,d,e,f,g,k)}catch(m){X(l);if(m!==m+0)throw m;V(1,0)}}function bc(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z){var A=W();try{return Wf(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z)}catch(C){X(A);if(C!==C+0)throw C;V(1,0)}}function Ad(a,b,c,d,e,f,g,k,l,m,n,q,r){var p=W();try{Xf(a,b,c,d,e,f,g,k,l,m,n,q,r)}catch(t){X(p);if(t!==t+0)throw t;V(1,0)}}\r\nfunction cc(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D){var E=W();try{return Zf(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D)}catch(F){X(E);if(F!==F+0)throw F;V(1,0)}}function yd(a,b,c,d,e,f,g,k,l,m,n){var q=W();try{bg(a,b,c,d,e,f,g,k,l,m,n)}catch(r){X(q);if(r!==r+0)throw r;V(1,0)}}function pd(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z){var A=W();try{hg(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z)}catch(C){X(A);if(C!==C+0)throw C;V(1,0)}}\r\nfunction od(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v){var z=W();try{ig(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v)}catch(A){X(z);if(A!==A+0)throw A;V(1,0)}}function qd(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t){var v=W();try{jg(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t)}catch(z){X(v);if(z!==z+0)throw z;V(1,0)}}function Gb(a,b,c,d,e,f,g){var k=W();try{return dg(a,b,c,d,e,f,g)}catch(l){X(k);if(l!==l+0)throw l;V(1,0)}}function ad(a,b,c,d,e){var f=W();try{tg(a,b,c,d,e)}catch(g){X(f);if(g!==g+0)throw g;V(1,0)}}\r\nfunction wd(a,b,c,d,e,f,g,k,l,m,n,q){var r=W();try{Jg(a,b,c,d,e,f,g,k,l,m,n,q)}catch(p){X(r);if(p!==p+0)throw p;V(1,0)}}function Cd(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t){var v=W();try{Kh(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t)}catch(z){X(v);if(z!==z+0)throw z;V(1,0)}}function Vc(a,b,c){var d=W();try{Og(a,b,c)}catch(e){X(d);if(e!==e+0)throw e;V(1,0)}}function rd(a,b,c,d,e,f,g,k,l,m){var n=W();try{Qg(a,b,c,d,e,f,g,k,l,m)}catch(q){X(n);if(q!==q+0)throw q;V(1,0)}}\r\nfunction zd(a,b,c,d,e,f,g,k,l,m,n,q){var r=W();try{Hf(a,b,c,d,e,f,g,k,l,m,n,q)}catch(p){X(r);if(p!==p+0)throw p;V(1,0)}}function Hd(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E){var F=W();try{Vg(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E)}catch(G){X(F);if(G!==G+0)throw G;V(1,0)}}function Ob(a,b,c){var d=W();try{return Wg(a,b,c)}catch(e){X(d);if(e!==e+0)throw e;V(1,0)}}function md(a,b,c,d,e,f,g,k,l,m,n,q,r){var p=W();try{Xg(a,b,c,d,e,f,g,k,l,m,n,q,r)}catch(t){X(p);if(t!==t+0)throw t;V(1,0)}}\r\nfunction Ed(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z){var A=W();try{bh(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z)}catch(C){X(A);if(C!==C+0)throw C;V(1,0)}}function Gd(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D){var E=W();try{ch(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D)}catch(F){X(E);if(F!==F+0)throw F;V(1,0)}}function Fd(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C){var D=W();try{ah(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C)}catch(E){X(D);if(E!==E+0)throw E;V(1,0)}}\r\nfunction $b(a,b,c,d,e,f,g,k,l,m,n){var q=W();try{return fh(a,b,c,d,e,f,g,k,l,m,n)}catch(r){X(q);if(r!==r+0)throw r;V(1,0)}}function dc(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D){var E=W();try{return gh(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D)}catch(F){X(E);if(F!==F+0)throw F;V(1,0)}}function fd(a,b,c,d,e){var f=W();try{hh(a,b,c,d,e)}catch(g){X(f);if(g!==g+0)throw g;V(1,0)}}function vd(a,b,c,d,e,f,g,k,l,m,n,q){var r=W();try{Df(a,b,c,d,e,f,g,k,l,m,n,q)}catch(p){X(r);if(p!==p+0)throw p;V(1,0)}}\r\nfunction Zc(a,b,c,d){var e=W();try{Pg(a,b,c,d)}catch(f){X(e);if(f!==f+0)throw f;V(1,0)}}function Sb(a,b,c,d,e,f){var g=W();try{return ph(a,b,c,d,e,f)}catch(k){X(g);if(k!==k+0)throw k;V(1,0)}}function Nb(a,b,c){var d=W();try{return Ah(a,b,c)}catch(e){X(d);if(e!==e+0)throw e;V(1,0)}}function Qb(a,b,c,d){var e=W();try{return Bh(a,b,c,d)}catch(f){X(e);if(f!==f+0)throw f;V(1,0)}}function Uc(a,b,c,d){var e=W();try{Ch(a,b,c,d)}catch(f){X(e);if(f!==f+0)throw f;V(1,0)}}\r\nfunction Jb(a,b,c,d){var e=W();try{return Mh(a,b,c,d)}catch(f){X(e);if(f!==f+0)throw f;V(1,0)}}function Ub(a,b,c,d,e,f){var g=W();try{return Zg(a,b,c,d,e,f)}catch(k){X(g);if(k!==k+0)throw k;V(1,0)}}function Dd(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v){var z=W();try{dh(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v)}catch(A){X(z);if(A!==A+0)throw A;V(1,0)}}function Ib(a,b,c){var d=W();try{return bf(a,b,c)}catch(e){X(d);if(e!==e+0)throw e;V(1,0)}}\r\nfunction Fb(a,b,c){var d=W();try{return ff(a,b,c)}catch(e){X(d);if(e!==e+0)throw e;V(1,0)}}function rc(a,b,c,d,e){var f=W();try{return Qe(a,b,c,d,e)}catch(g){X(f);if(g!==g+0)throw g;V(1,0)}}function zc(a,b,c,d){var e=W();try{return Ve(a,b,c,d)}catch(f){X(e);if(f!==f+0)throw f;V(1,0)}}function me(a,b,c,d){var e=W();try{Xe(a,b,c,d)}catch(f){X(e);if(f!==f+0)throw f;V(1,0)}}function Kc(a,b){var c=W();try{return cf(a,b)}catch(d){X(c);if(d!==d+0)throw d;V(1,0)}}\r\nfunction ee(a,b,c,d,e){var f=W();try{hf(a,b,c,d,e)}catch(g){X(f);if(g!==g+0)throw g;V(1,0)}}function re(a,b,c,d,e,f){var g=W();try{kf(a,b,c,d,e,f)}catch(k){X(g);if(k!==k+0)throw k;V(1,0)}}function Yd(a,b,c,d,e,f,g,k){var l=W();try{Fh(a,b,c,d,e,f,g,k)}catch(m){X(l);if(m!==m+0)throw m;V(1,0)}}function ie(a,b,c,d,e,f,g){var k=W();try{fg(a,b,c,d,e,f,g)}catch(l){X(k);if(l!==l+0)throw l;V(1,0)}}\r\nfunction lc(a,b,c,d,e,f,g,k,l,m,n,q){var r=W();try{return of(a,b,c,d,e,f,g,k,l,m,n,q)}catch(p){X(r);if(p!==p+0)throw p;V(1,0)}}function ge(a,b,c,d,e,f,g,k){var l=W();try{qf(a,b,c,d,e,f,g,k)}catch(m){X(l);if(m!==m+0)throw m;V(1,0)}}function Nd(a,b,c,d,e,f,g,k){var l=W();try{rf(a,b,c,d,e,f,g,k)}catch(m){X(l);if(m!==m+0)throw m;V(1,0)}}function Lc(a,b,c){var d=W();try{return ef(a,b,c)}catch(e){X(d);if(e!==e+0)throw e;V(1,0)}}\r\nfunction gc(a,b,c,d,e,f,g,k,l,m){var n=W();try{return uf(a,b,c,d,e,f,g,k,l,m)}catch(q){X(n);if(q!==q+0)throw q;V(1,0)}}function le(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t){var v=W();try{xf(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t)}catch(z){X(v);if(z!==z+0)throw z;V(1,0)}}function ae(a,b,c,d,e,f,g,k,l,m,n,q,r){var p=W();try{yf(a,b,c,d,e,f,g,k,l,m,n,q,r)}catch(t){X(p);if(t!==t+0)throw t;V(1,0)}}function fe(a,b,c,d,e,f){var g=W();try{pf(a,b,c,d,e,f)}catch(k){X(g);if(k!==k+0)throw k;V(1,0)}}\r\nfunction de(a,b,c,d,e,f,g,k,l,m,n,q){var r=W();try{Af(a,b,c,d,e,f,g,k,l,m,n,q)}catch(p){X(r);if(p!==p+0)throw p;V(1,0)}}function Be(a,b,c,d,e,f,g,k,l){var m=W();try{Ef(a,b,c,d,e,f,g,k,l)}catch(n){X(m);if(n!==n+0)throw n;V(1,0)}}function Mc(a,b,c,d){var e=W();try{return Ff(a,b,c,d)}catch(f){X(e);if(f!==f+0)throw f;V(1,0)}}\r\nfunction ye(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G,H,I,J,L,N,O){var Y=W();try{If(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G,H,I,J,L,N,O)}catch(Z){X(Y);if(Z!==Z+0)throw Z;V(1,0)}}function Xd(a,b,c,d,e,f,g){var k=W();try{Jf(a,b,c,d,e,f,g)}catch(l){X(k);if(l!==l+0)throw l;V(1,0)}}function ve(a,b,c,d,e,f,g,k,l,m,n,q,r){var p=W();try{Kf(a,b,c,d,e,f,g,k,l,m,n,q,r)}catch(t){X(p);if(t!==t+0)throw t;V(1,0)}}\r\nfunction sc(a,b,c,d,e,f){var g=W();try{return Lf(a,b,c,d,e,f)}catch(k){X(g);if(k!==k+0)throw k;V(1,0)}}function xc(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t){var v=W();try{return Mf(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t)}catch(z){X(v);if(z!==z+0)throw z;V(1,0)}}function ze(a,b,c){var d=W();try{Nf(a,b,c)}catch(e){X(d);if(e!==e+0)throw e;V(1,0)}}function Oc(a,b,c,d,e){var f=W();try{return Of(a,b,c,d,e)}catch(g){X(f);if(g!==g+0)throw g;V(1,0)}}\r\nfunction wc(a,b,c,d,e,f,g,k,l,m,n){var q=W();try{return Pf(a,b,c,d,e,f,g,k,l,m,n)}catch(r){X(q);if(r!==r+0)throw r;V(1,0)}}function Id(a,b,c,d,e,f,g,k,l,m,n,q,r){var p=W();try{Vf(a,b,c,d,e,f,g,k,l,m,n,q,r)}catch(t){X(p);if(t!==t+0)throw t;V(1,0)}}function Fc(a,b,c){var d=W();try{return Yf(a,b,c)}catch(e){X(d);if(e!==e+0)throw e;V(1,0)}}function ue(a,b,c,d,e,f,g,k,l,m,n,q){var r=W();try{$f(a,b,c,d,e,f,g,k,l,m,n,q)}catch(p){X(r);if(p!==p+0)throw p;V(1,0)}}\r\nfunction qc(a,b,c,d,e,f,g,k,l,m){var n=W();try{return ag(a,b,c,d,e,f,g,k,l,m)}catch(q){X(n);if(q!==q+0)throw q;V(1,0)}}function yc(a,b,c,d,e,f,g,k,l){var m=W();try{return cg(a,b,c,d,e,f,g,k,l)}catch(n){X(m);if(n!==n+0)throw n;V(1,0)}}function Sd(a,b,c,d,e,f,g){var k=W();try{eg(a,b,c,d,e,f,g)}catch(l){X(k);if(l!==l+0)throw l;V(1,0)}}\r\nfunction Ge(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G,H){var I=W();try{gg(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G,H)}catch(J){X(I);if(J!==J+0)throw J;V(1,0)}}function Ie(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G,H,I,J,L,N,O){var Y=W();try{kg(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G,H,I,J,L,N,O)}catch(Z){X(Y);if(Z!==Z+0)throw Z;V(1,0)}}\r\nfunction Fe(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G,H,I){var J=W();try{lg(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G,H,I)}catch(L){X(J);if(L!==L+0)throw L;V(1,0)}}function Ee(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G){var H=W();try{mg(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G)}catch(I){X(H);if(I!==I+0)throw I;V(1,0)}}\r\nfunction He(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G,H,I,J,L,N){var O=W();try{ng(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G,H,I,J,L,N)}catch(Y){X(O);if(Y!==Y+0)throw Y;V(1,0)}}function se(a,b,c,d,e,f,g,k,l,m,n,q){var r=W();try{og(a,b,c,d,e,f,g,k,l,m,n,q)}catch(p){X(r);if(p!==p+0)throw p;V(1,0)}}function pe(a,b,c,d,e,f,g,k,l,m,n,q){var r=W();try{pg(a,b,c,d,e,f,g,k,l,m,n,q)}catch(p){X(r);if(p!==p+0)throw p;V(1,0)}}\r\nfunction xe(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E){var F=W();try{qg(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E)}catch(G){X(F);if(G!==G+0)throw G;V(1,0)}}function De(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t){var v=W();try{rg(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t)}catch(z){X(v);if(z!==z+0)throw z;V(1,0)}}function Ce(a,b,c,d,e,f,g,k,l,m,n,q,r){var p=W();try{sg(a,b,c,d,e,f,g,k,l,m,n,q,r)}catch(t){X(p);if(t!==t+0)throw t;V(1,0)}}\r\nfunction Jc(a,b,c){var d=W();try{return Jh(a,b,c)}catch(e){X(d);if(e!==e+0)throw e;V(1,0)}}function kc(a,b,c,d,e,f,g,k){var l=W();try{return ug(a,b,c,d,e,f,g,k)}catch(m){X(l);if(m!==m+0)throw m;V(1,0)}}function te(a,b,c,d,e,f,g,k){var l=W();try{vg(a,b,c,d,e,f,g,k)}catch(m){X(l);if(m!==m+0)throw m;V(1,0)}}function $d(a,b,c,d,e,f,g,k,l,m,n,q){var r=W();try{wg(a,b,c,d,e,f,g,k,l,m,n,q)}catch(p){X(r);if(p!==p+0)throw p;V(1,0)}}\r\nfunction Rd(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t){var v=W();try{xg(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t)}catch(z){X(v);if(z!==z+0)throw z;V(1,0)}}function oc(a,b,c,d,e,f,g){var k=W();try{return yg(a,b,c,d,e,f,g)}catch(l){X(k);if(l!==l+0)throw l;V(1,0)}}function Od(a,b,c,d,e,f,g,k,l,m,n,q,r,p){var t=W();try{zg(a,b,c,d,e,f,g,k,l,m,n,q,r,p)}catch(v){X(t);if(v!==v+0)throw v;V(1,0)}}function Ud(a,b,c,d,e,f,g,k,l){var m=W();try{Ag(a,b,c,d,e,f,g,k,l)}catch(n){X(m);if(n!==n+0)throw n;V(1,0)}}\r\nfunction ke(a,b,c,d,e,f,g,k,l,m){var n=W();try{Bg(a,b,c,d,e,f,g,k,l,m)}catch(q){X(n);if(q!==q+0)throw q;V(1,0)}}function Gc(a,b,c,d,e){var f=W();try{return Cg(a,b,c,d,e)}catch(g){X(f);if(g!==g+0)throw g;V(1,0)}}function Pc(a,b,c,d,e,f,g,k,l,m,n){var q=W();try{return Eg(a,b,c,d,e,f,g,k,l,m,n)}catch(r){X(q);if(r!==r+0)throw r;V(1,0)}}function Qc(a,b,c,d,e,f,g,k,l,m,n,q,r){var p=W();try{return Dg(a,b,c,d,e,f,g,k,l,m,n,q,r)}catch(t){X(p);if(t!==t+0)throw t;V(1,0)}}\r\nfunction we(a,b,c,d,e,f,g,k,l,m,n,q,r,p){var t=W();try{Fg(a,b,c,d,e,f,g,k,l,m,n,q,r,p)}catch(v){X(t);if(v!==v+0)throw v;V(1,0)}}function Qd(a,b,c,d,e,f,g,k,l,m,n){var q=W();try{Gg(a,b,c,d,e,f,g,k,l,m,n)}catch(r){X(q);if(r!==r+0)throw r;V(1,0)}}function Ld(a,b,c,d,e,f,g,k,l,m,n,q){var r=W();try{Hg(a,b,c,d,e,f,g,k,l,m,n,q)}catch(p){X(r);if(p!==p+0)throw p;V(1,0)}}function oe(a,b,c,d,e,f,g){var k=W();try{Ig(a,b,c,d,e,f,g)}catch(l){X(k);if(l!==l+0)throw l;V(1,0)}}\r\nfunction be(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t){var v=W();try{Kg(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t)}catch(z){X(v);if(z!==z+0)throw z;V(1,0)}}function vc(a,b,c,d,e,f,g,k,l){var m=W();try{return Lg(a,b,c,d,e,f,g,k,l)}catch(n){X(m);if(n!==n+0)throw n;V(1,0)}}function Md(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v){var z=W();try{Mg(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v)}catch(A){X(z);if(A!==A+0)throw A;V(1,0)}}\r\nfunction Jd(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v){var z=W();try{Ng(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v)}catch(A){X(z);if(A!==A+0)throw A;V(1,0)}}function Pd(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G,H,I,J,L){var N=W();try{Rg(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z,A,C,D,E,F,G,H,I,J,L)}catch(O){X(N);if(O!==O+0)throw O;V(1,0)}}function je(a,b,c,d,e,f,g,k){var l=W();try{Sg(a,b,c,d,e,f,g,k)}catch(m){X(l);if(m!==m+0)throw m;V(1,0)}}\r\nfunction ec(a,b,c,d,e,f,g,k,l,m,n,q,r,p){var t=W();try{return Tg(a,b,c,d,e,f,g,k,l,m,n,q,r,p)}catch(v){X(t);if(v!==v+0)throw v;V(1,0)}}function bd(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v){var z=W();try{Ug(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v)}catch(A){X(z);if(A!==A+0)throw A;V(1,0)}}function qe(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z){var A=W();try{Yg(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v,z)}catch(C){X(A);if(C!==C+0)throw C;V(1,0)}}\r\nfunction Vd(a,b,c,d,e,f,g,k,l,m,n){var q=W();try{$g(a,b,c,d,e,f,g,k,l,m,n)}catch(r){X(q);if(r!==r+0)throw r;V(1,0)}}function Kd(a,b,c,d,e,f,g,k,l,m,n,q,r,p){var t=W();try{eh(a,b,c,d,e,f,g,k,l,m,n,q,r,p)}catch(v){X(t);if(v!==v+0)throw v;V(1,0)}}function Cc(a,b,c,d,e,f,g,k){var l=W();try{return ih(a,b,c,d,e,f,g,k)}catch(m){X(l);if(m!==m+0)throw m;V(1,0)}}function Nc(a,b,c,d,e){var f=W();try{return Lh(a,b,c,d,e)}catch(g){X(f);if(g!==g+0)throw g;V(1,0)}}\r\nfunction Td(a,b,c,d,e,f,g,k){var l=W();try{jh(a,b,c,d,e,f,g,k)}catch(m){X(l);if(m!==m+0)throw m;V(1,0)}}function Dc(a,b,c,d,e,f,g,k,l){var m=W();try{return kh(a,b,c,d,e,f,g,k,l)}catch(n){X(m);if(n!==n+0)throw n;V(1,0)}}function Hc(a,b,c,d,e,f,g,k,l){var m=W();try{return lh(a,b,c,d,e,f,g,k,l)}catch(n){X(m);if(n!==n+0)throw n;V(1,0)}}function ce(a,b,c,d,e,f,g,k,l,m,n){var q=W();try{mh(a,b,c,d,e,f,g,k,l,m,n)}catch(r){X(q);if(r!==r+0)throw r;V(1,0)}}\r\nfunction mc(a,b,c,d,e,f,g,k,l,m){var n=W();try{return nh(a,b,c,d,e,f,g,k,l,m)}catch(q){X(n);if(q!==q+0)throw q;V(1,0)}}function ne(a,b,c,d,e){var f=W();try{oh(a,b,c,d,e)}catch(g){X(f);if(g!==g+0)throw g;V(1,0)}}function tc(a,b,c,d,e,f,g){var k=W();try{return qh(a,b,c,d,e,f,g)}catch(l){X(k);if(l!==l+0)throw l;V(1,0)}}function fc(a,b,c,d,e,f,g,k,l,m,n,q,r){var p=W();try{return rh(a,b,c,d,e,f,g,k,l,m,n,q,r)}catch(t){X(p);if(t!==t+0)throw t;V(1,0)}}\r\nfunction pc(a,b,c,d,e,f,g,k,l,m){var n=W();try{return sh(a,b,c,d,e,f,g,k,l,m)}catch(q){X(n);if(q!==q+0)throw q;V(1,0)}}function ic(a,b,c,d,e,f,g,k,l,m,n,q,r,p){var t=W();try{return th(a,b,c,d,e,f,g,k,l,m,n,q,r,p)}catch(v){X(t);if(v!==v+0)throw v;V(1,0)}}function uc(a,b,c,d,e,f,g,k){var l=W();try{return uh(a,b,c,d,e,f,g,k)}catch(m){X(l);if(m!==m+0)throw m;V(1,0)}}\r\nfunction hc(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v){var z=W();try{return vh(a,b,c,d,e,f,g,k,l,m,n,q,r,p,t,v)}catch(A){X(z);if(A!==A+0)throw A;V(1,0)}}function Bc(a,b,c,d,e,f,g,k){var l=W();try{return wh(a,b,c,d,e,f,g,k)}catch(m){X(l);if(m!==m+0)throw m;V(1,0)}}function Ec(a,b,c,d,e,f,g,k,l,m){var n=W();try{return xh(a,b,c,d,e,f,g,k,l,m)}catch(q){X(n);if(q!==q+0)throw q;V(1,0)}}function Ac(a,b,c,d,e){var f=W();try{return yh(a,b,c,d,e)}catch(g){X(f);if(g!==g+0)throw g;V(1,0)}}\r\nfunction Zd(a,b,c,d,e,f,g,k,l,m,n){var q=W();try{zh(a,b,c,d,e,f,g,k,l,m,n)}catch(r){X(q);if(r!==r+0)throw r;V(1,0)}}function Wd(a,b,c,d,e,f){var g=W();try{Hh(a,b,c,d,e,f)}catch(k){X(g);if(k!==k+0)throw k;V(1,0)}}function he(a,b,c,d,e,f,g,k,l,m,n,q,r,p){var t=W();try{Gh(a,b,c,d,e,f,g,k,l,m,n,q,r,p)}catch(v){X(t);if(v!==v+0)throw v;V(1,0)}}function Ae(a,b,c,d,e,f){var g=W();try{Dh(a,b,c,d,e,f)}catch(k){X(g);if(k!==k+0)throw k;V(1,0)}}\r\nfunction nc(a,b,c,d,e,f){var g=W();try{return Eh(a,b,c,d,e,f)}catch(k){X(g);if(k!==k+0)throw k;V(1,0)}}function Ic(a){var b=W();try{return Te(a)}catch(c){X(b);if(c!==c+0)throw c;V(1,0)}}function jc(a,b,c,d,e,f,g){var k=W();try{return We(a,b,c,d,e,f,g)}catch(l){X(k);if(l!==l+0)throw l;V(1,0)}}function Ke(a){a=Object.assign({},a);var b=d=>()=>d()>>>0,c=d=>e=>d(e)>>>0;a.__errno_location=b(a.__errno_location);a.malloc=c(a.malloc);a.stackSave=b(a.stackSave);a.stackAlloc=c(a.stackAlloc);return a}\r\nh.stackAlloc=Le;h.stackSave=W;h.stackRestore=X;h.UTF8ToString=S;h.stringToUTF8=(a,b,c)=>Wa(a,M,b,c);h.lengthBytesUTF8=Va;var Nh;Aa=function Oh(){Nh||Ph();Nh||(Aa=Oh)};\r\nfunction Ph(){function a(){if(!Nh&&(Nh=!0,h.calledRun=!0,!B)){La(wa);aa(h);if(h.onRuntimeInitialized)h.onRuntimeInitialized();if(h.postRun)for(\"function\"==typeof h.postRun&&(h.postRun=[h.postRun]);h.postRun.length;){var b=h.postRun.shift();xa.unshift(b)}La(xa)}}if(!(0<R)){if(h.preRun)for(\"function\"==typeof h.preRun&&(h.preRun=[h.preRun]);h.preRun.length;)ya();La(va);0<R||(h.setStatus?(h.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){h.setStatus(\"\")},1);a()},1)):a())}}\r\nif(h.preInit)for(\"function\"==typeof h.preInit&&(h.preInit=[h.preInit]);0<h.preInit.length;)h.preInit.pop()();Ph();\r\n\r\n\r\n  return moduleArg.ready\r\n}\r\n\r\n);\r\n})();\r\nif (typeof exports === 'object' && typeof module === 'object')\r\n  module.exports = ortWasm;\r\nelse if (typeof define === 'function' && define['amd'])\r\n  define([], () => ortWasm);\r\n", "", "", "export const cpus = undefined;", "\nvar ortWasmThreaded = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(moduleArg = {}) {\n\nfunction d(){l.buffer!=p.buffer&&t();return p}function v(){l.buffer!=p.buffer&&t();return aa}function z(){l.buffer!=p.buffer&&t();return ba}function A(){l.buffer!=p.buffer&&t();return ca}function da(){l.buffer!=p.buffer&&t();return ea}var B=moduleArg,fa,C;B.ready=new Promise((a,b)=>{fa=a;C=b});\"use strict\";\nB.jsepInit=(a,b,c,e,f,h,k,q)=>{B.Qb=a;B.wb=b;B.yb=c;B.jb=e;B.xb=f;B.Ea=h;B.zb=k;B.Ab=q;b=(n,m,r)=>(...w)=>{const x=D,g=m?.();w=n(...w);const u=m?.();g!==u&&(n=u,r(g),m=r=null);return D!=x?ha():w};c=n=>async(...m)=>{try{if(B.bb)throw Error(\"Session already started\");const r=B.bb={Fb:m[0],errors:[]},w=await n(...m);if(B.bb!==r)throw Error(\"Session mismatch\");a.flush();const x=r.errors;if(0<x.length){let g=await Promise.all(x);g=g.filter(u=>u);if(0<g.length)throw Error(g.join(\"\\n\"));}return w}finally{B.bb=\nnull}};B._OrtRun=c(b(B._OrtRun,()=>B._OrtRun,n=>B._OrtRun=n));B._OrtRunWithBinding=c(b(B._OrtRunWithBinding,()=>B._OrtRunWithBinding,n=>B._OrtRunWithBinding=n));B._OrtBindInput=b(B._OrtBindInput,()=>B._OrtBindInput,n=>B._OrtBindInput=n);B.jsepRegisterBuffer=(n,m,r,w)=>a.registerBuffer(n,m,r,w);B.jsepUnregisterBuffers=n=>{a.unregisterBuffers(n)};B.jsepGetBuffer=n=>a.getBuffer(n);B.jsepCreateDownloader=(n,m,r)=>a.createDownloader(n,m,r)};\nvar ia=Object.assign({},B),ja=\"./this.program\",E=(a,b)=>{throw b;},ka=\"object\"==typeof window,F=\"function\"==typeof importScripts,G=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,H=B.ENVIRONMENT_IS_PTHREAD||!1,I=\"\";function la(a){return B.locateFile?B.locateFile(a,I):I+a}var ma,J,na;\nif(G){var fs=require(\"fs\"),oa=require(\"path\");I=F?oa.dirname(I)+\"/\":__dirname+\"/\";ma=(b,c)=>{b=b.startsWith(\"file://\")?new URL(b):oa.normalize(b);return fs.readFileSync(b,c?void 0:\"utf8\")};na=b=>{b=ma(b,!0);b.buffer||(b=new Uint8Array(b));return b};J=(b,c,e,f=!0)=>{b=b.startsWith(\"file://\")?new URL(b):oa.normalize(b);fs.readFile(b,f?void 0:\"utf8\",(h,k)=>{h?e(h):c(f?k.buffer:k)})};!B.thisProgram&&1<process.argv.length&&(ja=process.argv[1].replace(/\\\\/g,\"/\"));process.argv.slice(2);E=(b,c)=>{process.exitCode=\nb;throw c;};B.inspect=()=>\"[Emscripten Module object]\";let a;try{a=require(\"worker_threads\")}catch(b){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),b;}global.Worker=a.Worker}else if(ka||F)F?I=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(I=document.currentScript.src),(typeof _scriptDir !== \"undefined\" && _scriptDir)&&(I=_scriptDir),0!==I.indexOf(\"blob:\")?I=I.substr(0,I.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):I=\"\",G||(ma=a=>{var b=\nnew XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},F&&(na=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),J=(a,b,c)=>{var e=new XMLHttpRequest;e.open(\"GET\",a,!0);e.responseType=\"arraybuffer\";e.onload=()=>{200==e.status||0==e.status&&e.response?b(e.response):c()};e.onerror=c;e.send(null)});G&&\"undefined\"==typeof performance&&(global.performance=require(\"perf_hooks\").performance);\nvar pa=console.log.bind(console),qa=console.error.bind(console);G&&(pa=(...a)=>fs.writeSync(1,a.join(\" \")+\"\\n\"),qa=(...a)=>fs.writeSync(2,a.join(\" \")+\"\\n\"));var ra=B.print||pa,K=B.printErr||qa;Object.assign(B,ia);ia=null;B.thisProgram&&(ja=B.thisProgram);B.quit&&(E=B.quit);var L;B.wasmBinary&&(L=B.wasmBinary);var noExitRuntime=B.noExitRuntime||!0;\"object\"!=typeof WebAssembly&&M(\"no native wasm support detected\");var l,N,sa,P=!1,Q,p,aa,ba,ca,ea;\nfunction t(){var a=l.buffer;B.HEAP8=p=new Int8Array(a);B.HEAP16=new Int16Array(a);B.HEAP32=ba=new Int32Array(a);B.HEAPU8=aa=new Uint8Array(a);B.HEAPU16=new Uint16Array(a);B.HEAPU32=ca=new Uint32Array(a);B.HEAPF32=new Float32Array(a);B.HEAPF64=ea=new Float64Array(a)}var ta=B.INITIAL_MEMORY||16777216;5242880<=ta||M(\"INITIAL_MEMORY should be larger than STACK_SIZE, was \"+ta+\"! (STACK_SIZE=5242880)\");\nif(H)l=B.wasmMemory;else if(B.wasmMemory)l=B.wasmMemory;else if(l=new WebAssembly.Memory({initial:ta/65536,maximum:65536,shared:!0}),!(l.buffer instanceof SharedArrayBuffer))throw K(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),G&&K(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)\"),\nError(\"bad memory\");t();ta=l.buffer.byteLength;var ua=[],va=[],wa=[],xa=0;function ya(){return noExitRuntime||0<xa}var R=0,za=null,S=null;function Aa(){R++;B.monitorRunDependencies&&B.monitorRunDependencies(R)}function Ba(){R--;B.monitorRunDependencies&&B.monitorRunDependencies(R);if(0==R&&(null!==za&&(clearInterval(za),za=null),S)){var a=S;S=null;a()}}\nfunction M(a){if(B.onAbort)B.onAbort(a);a=\"Aborted(\"+a+\")\";K(a);P=!0;Q=1;a=new WebAssembly.RuntimeError(a+\". Build with -sASSERTIONS for more info.\");C(a);throw a;}function Ca(a){return a.startsWith(\"data:application/octet-stream;base64,\")}var T;T=\"ort-wasm-simd-threaded.wasm\";Ca(T)||(T=la(T));function Da(a){if(a==T&&L)return new Uint8Array(L);if(na)return na(a);throw\"both async and sync fetching of the wasm failed\";}\nfunction Ea(a){if(!L&&(ka||F)){if(\"function\"==typeof fetch&&!a.startsWith(\"file://\"))return fetch(a,{credentials:\"same-origin\"}).then(b=>{if(!b.ok)throw\"failed to load wasm binary file at '\"+a+\"'\";return b.arrayBuffer()}).catch(()=>Da(a));if(J)return new Promise((b,c)=>{J(a,e=>b(new Uint8Array(e)),c)})}return Promise.resolve().then(()=>Da(a))}function Fa(a,b,c){return Ea(a).then(e=>WebAssembly.instantiate(e,b)).then(e=>e).then(c,e=>{K(\"failed to asynchronously prepare wasm: \"+e);M(e)})}\nfunction Ga(a,b){var c=T;return L||\"function\"!=typeof WebAssembly.instantiateStreaming||Ca(c)||c.startsWith(\"file://\")||G||\"function\"!=typeof fetch?Fa(c,a,b):fetch(c,{credentials:\"same-origin\"}).then(e=>WebAssembly.instantiateStreaming(e,a).then(b,function(f){K(\"wasm streaming compile failed: \"+f);K(\"falling back to ArrayBuffer instantiation\");return Fa(c,a,b)}))}\nvar U,Ha={911532:a=>{B.Ea(\"Abs\",a,void 0)},911583:a=>{B.Ea(\"Neg\",a,void 0)},911634:a=>{B.Ea(\"Floor\",a,void 0)},911687:a=>{B.Ea(\"Ceil\",a,void 0)},911739:a=>{B.Ea(\"Reciprocal\",a,void 0)},911797:a=>{B.Ea(\"Sqrt\",a,void 0)},911849:a=>{B.Ea(\"Exp\",a,void 0)},911900:a=>{B.Ea(\"Erf\",a,void 0)},911951:a=>{B.Ea(\"Sigmoid\",a,void 0)},912006:a=>{B.Ea(\"Log\",a,void 0)},912057:a=>{B.Ea(\"Sin\",a,void 0)},912108:a=>{B.Ea(\"Cos\",a,void 0)},912159:a=>{B.Ea(\"Tan\",a,void 0)},912210:a=>{B.Ea(\"Asin\",a,void 0)},912262:a=>{B.Ea(\"Acos\",\na,void 0)},912314:a=>{B.Ea(\"Atan\",a,void 0)},912366:a=>{B.Ea(\"Sinh\",a,void 0)},912418:a=>{B.Ea(\"Cosh\",a,void 0)},912470:a=>{B.Ea(\"Asinh\",a,void 0)},912523:a=>{B.Ea(\"Acosh\",a,void 0)},912576:a=>{B.Ea(\"Atanh\",a,void 0)},912629:a=>{B.Ea(\"Tanh\",a,void 0)},912681:a=>{B.Ea(\"Not\",a,void 0)},912732:(a,b,c)=>{B.Ea(\"ClipV10\",a,{min:b,max:c})},912804:a=>{B.Ea(\"Clip\",a,void 0)},912856:(a,b)=>{B.Ea(\"Elu\",a,{alpha:b})},912914:a=>{B.Ea(\"Relu\",a,void 0)},912966:(a,b)=>{B.Ea(\"LeakyRelu\",a,{alpha:b})},913030:(a,b)=>\n{B.Ea(\"ThresholdedRelu\",a,{alpha:b})},913100:(a,b)=>{B.Ea(\"Cast\",a,{to:b})},913158:a=>{B.Ea(\"Add\",a,void 0)},913209:a=>{B.Ea(\"Sub\",a,void 0)},913260:a=>{B.Ea(\"Mul\",a,void 0)},913311:a=>{B.Ea(\"Div\",a,void 0)},913362:a=>{B.Ea(\"Pow\",a,void 0)},913413:a=>{B.Ea(\"Equal\",a,void 0)},913466:a=>{B.Ea(\"Greater\",a,void 0)},913521:a=>{B.Ea(\"GreaterOrEqual\",a,void 0)},913583:a=>{B.Ea(\"Less\",a,void 0)},913635:a=>{B.Ea(\"LessOrEqual\",a,void 0)},913694:(a,b,c,e,f)=>{B.Ea(\"ReduceMean\",a,{keepDims:!!b,noopWithEmptyAxes:!!c,\naxes:e?Array.from(z().subarray(f>>>0,f+e>>>0)):[]})},913858:(a,b,c,e,f)=>{B.Ea(\"ReduceMax\",a,{keepDims:!!b,noopWithEmptyAxes:!!c,axes:e?Array.from(z().subarray(f>>>0,f+e>>>0)):[]})},914021:(a,b,c,e,f)=>{B.Ea(\"ReduceMin\",a,{keepDims:!!b,noopWithEmptyAxes:!!c,axes:e?Array.from(z().subarray(f>>>0,f+e>>>0)):[]})},914184:(a,b,c,e,f)=>{B.Ea(\"ReduceProd\",a,{keepDims:!!b,noopWithEmptyAxes:!!c,axes:e?Array.from(z().subarray(f>>>0,f+e>>>0)):[]})},914348:(a,b,c,e,f)=>{B.Ea(\"ReduceSum\",a,{keepDims:!!b,noopWithEmptyAxes:!!c,\naxes:e?Array.from(z().subarray(f>>>0,f+e>>>0)):[]})},914511:(a,b,c,e,f)=>{B.Ea(\"ReduceL1\",a,{keepDims:!!b,noopWithEmptyAxes:!!c,axes:e?Array.from(z().subarray(f>>>0,f+e>>>0)):[]})},914673:(a,b,c,e,f)=>{B.Ea(\"ReduceL2\",a,{keepDims:!!b,noopWithEmptyAxes:!!c,axes:e?Array.from(z().subarray(f>>>0,f+e>>>0)):[]})},914835:(a,b,c,e,f)=>{B.Ea(\"ReduceLogSum\",a,{keepDims:!!b,noopWithEmptyAxes:!!c,axes:e?Array.from(z().subarray(f>>>0,f+e>>>0)):[]})},915001:(a,b,c,e,f)=>{B.Ea(\"ReduceSumSquare\",a,{keepDims:!!b,\nnoopWithEmptyAxes:!!c,axes:e?Array.from(z().subarray(f>>>0,f+e>>>0)):[]})},915170:(a,b,c,e,f)=>{B.Ea(\"ReduceLogSumExp\",a,{keepDims:!!b,noopWithEmptyAxes:!!c,axes:e?Array.from(z().subarray(f>>>0,f+e>>>0)):[]})},915339:a=>{B.Ea(\"Where\",a,void 0)},915392:(a,b,c)=>{B.Ea(\"Transpose\",a,{perm:b?Array.from(z().subarray(c>>>0,c+b>>>0)):[]})},915505:(a,b,c,e,f,h,k,q,n,m)=>{B.Ea(\"Conv\",a,{format:n?\"NHWC\":\"NCHW\",auto_pad:b,dilations:[c],group:e,kernel_shape:[f],pads:[h,k],strides:[q],w_is_const:()=>!!d()[m>>>\n0]})},915733:(a,b,c,e,f,h,k,q,n,m,r,w,x,g,u)=>{B.Ea(\"Conv\",a,{format:g?\"NHWC\":\"NCHW\",auto_pad:b,dilations:[c,e],group:f,kernel_shape:[h,k],pads:[q,n,m,r],strides:[w,x],w_is_const:()=>!!d()[u>>>0]})},915992:(a,b,c,e,f,h,k,q,n,m)=>{B.Ea(\"Conv\",a,{format:n?\"NHWC\":\"NCHW\",auto_pad:b,dilations:[c],group:e,kernel_shape:[f],pads:[h,k],strides:[q],w_is_const:()=>!!d()[m>>>0]})},916220:(a,b,c,e,f,h,k,q,n,m,r,w,x,g,u)=>{B.Ea(\"Conv\",a,{format:g?\"NHWC\":\"NCHW\",auto_pad:b,dilations:[c,e],group:f,kernel_shape:[h,\nk],pads:[q,n,m,r],strides:[w,x],w_is_const:()=>!!d()[u>>>0]})},916479:(a,b,c,e,f,h,k,q,n,m,r,w,x,g)=>{B.Ea(\"ConvTranspose\",a,{format:n?\"NHWC\":\"NCHW\",autoPad:b,dilations:[c],group:e,kernel_shape:[f],pads:[h,k],strides:[q],wIsConst:()=>!!d()[m>>>0],outputPadding:r?Array.from(z().subarray(w>>>0,w+r>>>0)):[],outputShape:x?Array.from(z().subarray(g>>>0,g+x>>>0)):[]})},916859:(a,b,c,e,f,h,k,q,n,m,r,w,x)=>{B.Ea(\"ConvTranspose\",a,{format:q?\"NHWC\":\"NCHW\",autoPad:b,dilations:Array.from(z().subarray(c>>>0,c+\n2>>>0)),group:e,kernelShape:Array.from(z().subarray(f>>>0,f+2>>>0)),pads:Array.from(z().subarray(h>>>0,h+4>>>0)),strides:Array.from(z().subarray(k>>>0,k+2>>>0)),wIsConst:()=>!!d()[n>>>0],outputPadding:0<m?Array.from(z().subarray(r>>>0,r+m>>>0)):[],outputShape:0<w?Array.from(z().subarray(x>>>0,x+w>>>0)):[]})},917382:(a,b,c,e,f,h,k,q,n,m,r,w,x,g)=>{B.Ea(\"ConvTranspose\",a,{format:n?\"NHWC\":\"NCHW\",autoPad:b,dilations:[c],group:e,kernel_shape:[f],pads:[h,k],strides:[q],wIsConst:()=>!!d()[m>>>0],outputPadding:r?\nArray.from(z().subarray(w>>>0,w+r>>>0)):[],outputShape:x?Array.from(z().subarray(g>>>0,g+x>>>0)):[]})},917762:(a,b,c,e,f,h,k,q,n,m,r,w,x)=>{B.Ea(\"ConvTranspose\",a,{format:q?\"NHWC\":\"NCHW\",autoPad:b,dilations:Array.from(z().subarray(c>>>0,c+2>>>0)),group:e,kernelShape:Array.from(z().subarray(f>>>0,f+2>>>0)),pads:Array.from(z().subarray(h>>>0,h+4>>>0)),strides:Array.from(z().subarray(k>>>0,k+2>>>0)),wIsConst:()=>!!d()[n>>>0],outputPadding:0<m?Array.from(z().subarray(r>>>0,r+m>>>0)):[],outputShape:0<\nw?Array.from(z().subarray(x>>>0,x+w>>>0)):[]})},918285:(a,b)=>{B.Ea(\"GlobalAveragePool\",a,{format:b?\"NHWC\":\"NCHW\"})},918376:(a,b,c,e,f,h,k,q,n,m,r,w,x,g,u,y)=>{B.Ea(\"AveragePool\",a,{format:y?\"NHWC\":\"NCHW\",auto_pad:b,ceil_mode:c,count_include_pad:e,storage_order:f,dilations:[h,k],kernel_shape:[q,n],pads:[m,r,w,x],strides:[g,u]})},918660:(a,b)=>{B.Ea(\"GlobalAveragePool\",a,{format:b?\"NHWC\":\"NCHW\"})},918751:(a,b,c,e,f,h,k,q,n,m,r,w,x,g,u,y)=>{B.Ea(\"AveragePool\",a,{format:y?\"NHWC\":\"NCHW\",auto_pad:b,ceil_mode:c,\ncount_include_pad:e,storage_order:f,dilations:[h,k],kernel_shape:[q,n],pads:[m,r,w,x],strides:[g,u]})},919035:(a,b)=>{B.Ea(\"GlobalMaxPool\",a,{format:b?\"NHWC\":\"NCHW\"})},919122:(a,b,c,e,f,h,k,q,n,m,r,w,x,g,u,y)=>{B.Ea(\"MaxPool\",a,{format:y?\"NHWC\":\"NCHW\",auto_pad:b,ceil_mode:c,count_include_pad:e,storage_order:f,dilations:[h,k],kernel_shape:[q,n],pads:[m,r,w,x],strides:[g,u]})},919402:(a,b)=>{B.Ea(\"GlobalMaxPool\",a,{format:b?\"NHWC\":\"NCHW\"})},919489:(a,b,c,e,f,h,k,q,n,m,r,w,x,g,u,y)=>{B.Ea(\"MaxPool\",\na,{format:y?\"NHWC\":\"NCHW\",auto_pad:b,ceil_mode:c,count_include_pad:e,storage_order:f,dilations:[h,k],kernel_shape:[q,n],pads:[m,r,w,x],strides:[g,u]})},919769:(a,b,c,e,f)=>{B.Ea(\"Gemm\",a,{alpha:b,beta:c,transA:e,transB:f})},919873:a=>{B.Ea(\"MatMul\",a,void 0)},919927:(a,b,c,e)=>{B.Ea(\"ArgMax\",a,{keepDims:!!b,selectLastIndex:!!c,axis:e})},920035:(a,b,c,e)=>{B.Ea(\"ArgMin\",a,{keepDims:!!b,selectLastIndex:!!c,axis:e})},920143:(a,b)=>{B.Ea(\"Softmax\",a,{axis:b})},920206:(a,b)=>{B.Ea(\"Concat\",a,{axis:b})},\n920266:(a,b,c,e,f)=>{B.Ea(\"Split\",a,{axis:b,numOutputs:c,splitSizes:e?Array.from(z().subarray(f>>>0,f+e>>>0)):[]})},920411:a=>{B.Ea(\"Expand\",a,void 0)},920465:(a,b)=>{B.Ea(\"Gather\",a,{axis:Number(b)})},920536:(a,b)=>{B.Ea(\"GatherElements\",a,{axis:Number(b)})},920615:(a,b,c,e,f,h,k,q,n,m,r)=>{B.Ea(\"Resize\",a,{antialias:b,axes:c?Array.from(z().subarray(e>>>0,e+c>>>0)):[],coordinateTransformMode:V(f),cubicCoeffA:h,excludeOutside:k,extrapolationValue:q,keepAspectRatioPolicy:V(n),mode:V(m),nearestMode:V(r)})},\n920966:(a,b,c,e,f,h,k)=>{B.Ea(\"Slice\",a,{starts:b?Array.from(z().subarray(c>>>0,c+b>>>0)):[],ends:e?Array.from(z().subarray(f>>>0,f+e>>>0)):[],axes:h?Array.from(z().subarray(k>>>0,k+h>>>0)):[]})},921197:a=>{B.Ea(\"Tile\",a,void 0)},921249:(a,b,c)=>{B.Ea(\"LayerNormalization\",a,{axis:Number(b),epsilon:Number(c)})},921356:(a,b,c)=>{B.Ea(\"InstanceNormalization\",a,{epsilon:b,format:c?\"NHWC\":\"NCHW\"})},921470:(a,b,c)=>{B.Ea(\"InstanceNormalization\",a,{epsilon:b,format:c?\"NHWC\":\"NCHW\"})},921584:a=>{B.Ea(\"Range\",\na,void 0)},921637:(a,b)=>{B.Ea(\"Einsum\",a,{equation:V(b)})},921718:(a,b,c,e,f)=>{B.Ea(\"Pad\",a,{mode:b,value:c,pads:e?Array.from(z().subarray(f>>>0,f+e>>>0)):[]})},921850:a=>{B.Ea(\"Gelu\",a,void 0)},921902:a=>{B.Ea(\"BiasAdd\",a,void 0)},921957:a=>{B.Ea(\"BiasSplitGelu\",a,void 0)},922018:(a,b)=>{B.Ea(\"SkipLayerNormalization\",a,{epsilon:b})},922099:a=>{B.zb(a)},922133:(a,b)=>B.Ab(a,b,B.bb.Fb,B.bb.errors),922245:a=>B.wb(a),922278:a=>B.yb(a),922310:(a,b,c)=>{B.jb(a,b,c,!0)},922349:(a,b,c)=>{B.jb(a,b,c)}};\nfunction Ia(a){this.name=\"ExitStatus\";this.message=`Program terminated with exit(${a})`;this.status=a}function Ja(a){a.terminate();a.onmessage=()=>{}}function Ka(a){(a=W.Qa[a])||M();W.Eb(a)}function La(a){var b=W.tb();if(!b)return 6;W.Ya.push(b);W.Qa[a.Xa]=b;b.Xa=a.Xa;var c={cmd:\"run\",start_routine:a.Gb,arg:a.rb,pthread_ptr:a.Xa};G&&b.unref();b.postMessage(c,a.Mb);return 0}\nvar Ma=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0,Na=(a,b,c)=>{b>>>=0;var e=b+c;for(c=b;a[c]&&!(c>=e);)++c;if(16<c-b&&a.buffer&&Ma)return Ma.decode(a.buffer instanceof SharedArrayBuffer?a.slice(b,c):a.subarray(b,c));for(e=\"\";b<c;){var f=a[b++];if(f&128){var h=a[b++]&63;if(192==(f&224))e+=String.fromCharCode((f&31)<<6|h);else{var k=a[b++]&63;f=224==(f&240)?(f&15)<<12|h<<6|k:(f&7)<<18|h<<12|k<<6|a[b++]&63;65536>f?e+=String.fromCharCode(f):(f-=65536,e+=String.fromCharCode(55296|f>>\n10,56320|f&1023))}}else e+=String.fromCharCode(f)}return e},V=(a,b)=>(a>>>=0)?Na(v(),a,b):\"\";function Oa(a){if(H)return X(1,1,a);Q=a;if(!ya()){W.Hb();if(B.onExit)B.onExit(a);P=!0}E(a,new Ia(a))}\nvar Qa=a=>{Q=a;if(H)throw Pa(a),\"unwind\";Oa(a)},W={ab:[],Ya:[],mb:[],Qa:{},gb:function(){H?W.vb():W.ub()},ub:function(){ua.unshift(()=>{Aa();W.Bb(()=>Ba())})},vb:function(){W.receiveObjectTransfer=W.Db;W.threadInitTLS=W.lb;W.setExitStatus=W.kb;noExitRuntime=!1},kb:function(a){Q=a},Sb:[\"$terminateWorker\"],Hb:function(){for(var a of W.Ya)Ja(a);for(a of W.ab)Ja(a);W.ab=[];W.Ya=[];W.Qa=[]},Eb:function(a){var b=a.Xa;delete W.Qa[b];W.ab.push(a);W.Ya.splice(W.Ya.indexOf(a),1);a.Xa=0;Ra(b)},Db:function(){},\nlb:function(){W.mb.forEach(a=>a())},Cb:a=>new Promise(b=>{a.onmessage=h=>{h=h.data;var k=h.cmd;if(h.targetThread&&h.targetThread!=Sa()){var q=W.Qa[h.Rb];q?q.postMessage(h,h.transferList):K('Internal error! Worker sent a message \"'+k+'\" to target pthread '+h.targetThread+\", but that thread no longer exists!\")}else if(\"checkMailbox\"===k)Ta();else if(\"spawnThread\"===k)La(h);else if(\"cleanupThread\"===k)Ka(h.thread);else if(\"killThread\"===k)h=h.thread,k=W.Qa[h],delete W.Qa[h],Ja(k),Ra(h),W.Ya.splice(W.Ya.indexOf(k),\n1),k.Xa=0;else if(\"cancelThread\"===k)W.Qa[h.thread].postMessage({cmd:\"cancel\"});else if(\"loaded\"===k)a.loaded=!0,b(a);else if(\"alert\"===k)alert(\"Thread \"+h.threadId+\": \"+h.text);else if(\"setimmediate\"===h.target)a.postMessage(h);else if(\"callHandler\"===k)B[h.handler](...h.args);else k&&K(\"worker sent an unknown command \"+k)};a.onerror=h=>{K(\"worker sent an error! \"+h.filename+\":\"+h.lineno+\": \"+h.message);throw h;};G&&(a.on(\"message\",function(h){a.onmessage({data:h})}),a.on(\"error\",function(h){a.onerror(h)}));\nvar c=[],e=[\"onExit\",\"onAbort\",\"print\",\"printErr\"],f;for(f of e)B.hasOwnProperty(f)&&c.push(f);a.postMessage({cmd:\"load\",handlers:c,urlOrBlob:B.mainScriptUrlOrBlob||_scriptDir,wasmMemory:l,wasmModule:sa})}),Bb:function(a){a()},qb:function(){var a=la(\"ort-wasm-simd-threaded.worker.js\");a=new Worker(a);W.ab.push(a)},tb:function(){0==W.ab.length&&(W.qb(),W.Cb(W.ab[0]));return W.ab.pop()}};B.PThread=W;var Ua=a=>{for(;0<a.length;)a.shift()(B)};\nB.establishStackSpace=function(){var a=Sa(),b=z()[a+52>>2>>>0];a=z()[a+56>>2>>>0];Va(b,b-a);Wa(b)};function Pa(a){if(H)return X(2,0,a);Qa(a)}B.invokeEntryPoint=function(a,b){a=Xa.apply(null,[a,b]);ya()?W.kb(a):Ya(a)};function Za(a){this.fb=a-24;this.pb=function(b){A()[this.fb+4>>2>>>0]=b};this.ob=function(b){A()[this.fb+8>>2>>>0]=b};this.gb=function(b,c){this.nb();this.pb(b);this.ob(c)};this.nb=function(){A()[this.fb+16>>2>>>0]=0}}var $a=0,ab=0;\nfunction bb(a,b,c,e){return H?X(3,1,a,b,c,e):cb(a,b,c,e)}function cb(a,b,c,e){a>>>=0;b>>>=0;c>>>=0;e>>>=0;if(\"undefined\"==typeof SharedArrayBuffer)return K(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;var f=[];if(H&&0===f.length)return bb(a,b,c,e);a={Gb:c,Xa:a,rb:e,Mb:f};return H?(a.Ob=\"spawnThread\",postMessage(a,f),0):La(a)}function db(a,b,c){return H?X(4,1,a,b,c):0}function eb(a,b){if(H)return X(5,1,a,b)}\nvar fb=a=>{for(var b=0,c=0;c<a.length;++c){var e=a.charCodeAt(c);127>=e?b++:2047>=e?b+=2:55296<=e&&57343>=e?(b+=4,++c):b+=3}return b},gb=(a,b,c,e)=>{c>>>=0;if(!(0<e))return 0;var f=c;e=c+e-1;for(var h=0;h<a.length;++h){var k=a.charCodeAt(h);if(55296<=k&&57343>=k){var q=a.charCodeAt(++h);k=65536+((k&1023)<<10)|q&1023}if(127>=k){if(c>=e)break;b[c++>>>0]=k}else{if(2047>=k){if(c+1>=e)break;b[c++>>>0]=192|k>>6}else{if(65535>=k){if(c+2>=e)break;b[c++>>>0]=224|k>>12}else{if(c+3>=e)break;b[c++>>>0]=240|k>>\n18;b[c++>>>0]=128|k>>12&63}b[c++>>>0]=128|k>>6&63}b[c++>>>0]=128|k&63}}b[c>>>0]=0;return c-f},hb=(a,b,c)=>gb(a,v(),b,c);function ib(a,b){if(H)return X(6,1,a,b)}function jb(a,b,c){if(H)return X(7,1,a,b,c)}function kb(a,b,c){return H?X(8,1,a,b,c):0}function lb(a,b){if(H)return X(9,1,a,b)}function mb(a,b,c){if(H)return X(10,1,a,b,c)}function nb(a,b,c,e){if(H)return X(11,1,a,b,c,e)}function ob(a,b,c,e){if(H)return X(12,1,a,b,c,e)}function pb(a,b,c,e){if(H)return X(13,1,a,b,c,e)}\nfunction qb(a){if(H)return X(14,1,a)}function rb(a,b){if(H)return X(15,1,a,b)}function sb(a,b,c){if(H)return X(16,1,a,b,c)}var tb=a=>{if(!P)try{if(a(),!ya())try{H?Ya(Q):Qa(Q)}catch(b){b instanceof Ia||\"unwind\"==b||E(1,b)}}catch(b){b instanceof Ia||\"unwind\"==b||E(1,b)}};function ub(a){a>>>=0;\"function\"===typeof Atomics.Nb&&(Atomics.Nb(z(),a>>2,a).value.then(Ta),a+=128,Atomics.store(z(),a>>2,1))}B.__emscripten_thread_mailbox_await=ub;function Ta(){var a=Sa();a&&(ub(a),tb(()=>vb()))}B.checkMailbox=Ta;\nvar Y=a=>0===a%4&&(0!==a%100||0===a%400),wb=[0,31,60,91,121,152,182,213,244,274,305,335],xb=[0,31,59,90,120,151,181,212,243,273,304,334];function yb(a,b,c,e,f,h,k,q){return H?X(17,1,a,b,c,e,f,h,k,q):-52}function zb(a,b,c,e,f,h,k){if(H)return X(18,1,a,b,c,e,f,h,k)}var Bb=a=>{var b=fb(a)+1,c=Ab(b);c&&hb(a,c,b);return c},Cb=[],Db=(a,b)=>{Cb.length=0;var c;for(b>>=2;c=v()[a++>>>0];)b+=105!=c&b,Cb.push(105==c?z()[b>>>0]:da()[b++>>>1]),++b;return Cb},Fb=a=>{var b=Eb();a=a();Wa(b);return a};\nfunction X(a,b){var c=arguments.length-2,e=arguments;return Fb(()=>{for(var f=Gb(8*c),h=f>>3,k=0;k<c;k++){var q=e[2+k];da()[h+k>>>0]=q}return Hb(a,c,f,b)})}\nvar Ib=[],Jb={},Lb=()=>{if(!Kb){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:ja||\"./this.program\"},b;for(b in Jb)void 0===Jb[b]?delete a[b]:a[b]=Jb[b];var c=[];for(b in a)c.push(`${b}=${a[b]}`);Kb=c}return Kb},Kb;\nfunction Mb(a,b){if(H)return X(19,1,a,b);a>>>=0;b>>>=0;var c=0;Lb().forEach(function(e,f){var h=b+c;f=A()[a+4*f>>2>>>0]=h;for(h=0;h<e.length;++h)d()[f++>>0>>>0]=e.charCodeAt(h);d()[f>>0>>>0]=0;c+=e.length+1});return 0}function Nb(a,b){if(H)return X(20,1,a,b);a>>>=0;b>>>=0;var c=Lb();A()[a>>2>>>0]=c.length;var e=0;c.forEach(function(f){e+=f.length+1});A()[b>>2>>>0]=e;return 0}function Ob(a){return H?X(21,1,a):52}function Pb(a,b,c,e){return H?X(22,1,a,b,c,e):52}\nfunction Qb(a,b,c,e,f){return H?X(23,1,a,b,c,e,f):70}var Rb=[null,[],[]];function Tb(a,b,c,e){if(H)return X(24,1,a,b,c,e);b>>>=0;c>>>=0;e>>>=0;for(var f=0,h=0;h<c;h++){var k=A()[b>>2>>>0],q=A()[b+4>>2>>>0];b+=8;for(var n=0;n<q;n++){var m=v()[k+n>>>0],r=Rb[a];0===m||10===m?((1===a?ra:K)(Na(r,0)),r.length=0):r.push(m)}f+=q}A()[e>>2>>>0]=f;return 0}var Ub=[31,29,31,30,31,30,31,31,30,31,30,31],Vb=[31,28,31,30,31,30,31,31,30,31,30,31];function Wb(a){var b=Array(fb(a)+1);gb(a,b,0,b.length);return b}\nvar Xb=(a,b)=>{d().set(a,b>>>0)};\nfunction Yb(a,b,c,e){function f(g,u,y){for(g=\"number\"==typeof g?g.toString():g||\"\";g.length<u;)g=y[0]+g;return g}function h(g,u){return f(g,u,\"0\")}function k(g,u){function y(Sb){return 0>Sb?-1:0<Sb?1:0}var O;0===(O=y(g.getFullYear()-u.getFullYear()))&&0===(O=y(g.getMonth()-u.getMonth()))&&(O=y(g.getDate()-u.getDate()));return O}function q(g){switch(g.getDay()){case 0:return new Date(g.getFullYear()-1,11,29);case 1:return g;case 2:return new Date(g.getFullYear(),0,3);case 3:return new Date(g.getFullYear(),\n0,2);case 4:return new Date(g.getFullYear(),0,1);case 5:return new Date(g.getFullYear()-1,11,31);case 6:return new Date(g.getFullYear()-1,11,30)}}function n(g){var u=g.Za;for(g=new Date((new Date(g.$a+1900,0,1)).getTime());0<u;){var y=g.getMonth(),O=(Y(g.getFullYear())?Ub:Vb)[y];if(u>O-g.getDate())u-=O-g.getDate()+1,g.setDate(1),11>y?g.setMonth(y+1):(g.setMonth(0),g.setFullYear(g.getFullYear()+1));else{g.setDate(g.getDate()+u);break}}y=new Date(g.getFullYear()+1,0,4);u=q(new Date(g.getFullYear(),\n0,4));y=q(y);return 0>=k(u,g)?0>=k(y,g)?g.getFullYear()+1:g.getFullYear():g.getFullYear()-1}a>>>=0;b>>>=0;c>>>=0;e>>>=0;var m=z()[e+40>>2>>>0];e={Kb:z()[e>>2>>>0],Jb:z()[e+4>>2>>>0],cb:z()[e+8>>2>>>0],ib:z()[e+12>>2>>>0],eb:z()[e+16>>2>>>0],$a:z()[e+20>>2>>>0],Wa:z()[e+24>>2>>>0],Za:z()[e+28>>2>>>0],Tb:z()[e+32>>2>>>0],Ib:z()[e+36>>2>>>0],Lb:m?V(m):\"\"};c=V(c);m={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\n\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var r in m)c=c.replace(new RegExp(r,\"g\"),m[r]);var w=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),x=\"January February March April May June July August September October November December\".split(\" \");m={\"%a\":g=>w[g.Wa].substring(0,3),\"%A\":g=>w[g.Wa],\"%b\":g=>\nx[g.eb].substring(0,3),\"%B\":g=>x[g.eb],\"%C\":g=>h((g.$a+1900)/100|0,2),\"%d\":g=>h(g.ib,2),\"%e\":g=>f(g.ib,2,\" \"),\"%g\":g=>n(g).toString().substring(2),\"%G\":g=>n(g),\"%H\":g=>h(g.cb,2),\"%I\":g=>{g=g.cb;0==g?g=12:12<g&&(g-=12);return h(g,2)},\"%j\":g=>{for(var u=0,y=0;y<=g.eb-1;u+=(Y(g.$a+1900)?Ub:Vb)[y++]);return h(g.ib+u,3)},\"%m\":g=>h(g.eb+1,2),\"%M\":g=>h(g.Jb,2),\"%n\":()=>\"\\n\",\"%p\":g=>0<=g.cb&&12>g.cb?\"AM\":\"PM\",\"%S\":g=>h(g.Kb,2),\"%t\":()=>\"\\t\",\"%u\":g=>g.Wa||7,\"%U\":g=>h(Math.floor((g.Za+7-g.Wa)/7),2),\"%V\":g=>\n{var u=Math.floor((g.Za+7-(g.Wa+6)%7)/7);2>=(g.Wa+371-g.Za-2)%7&&u++;if(u)53==u&&(y=(g.Wa+371-g.Za)%7,4==y||3==y&&Y(g.$a)||(u=1));else{u=52;var y=(g.Wa+7-g.Za-1)%7;(4==y||5==y&&Y(g.$a%400-1))&&u++}return h(u,2)},\"%w\":g=>g.Wa,\"%W\":g=>h(Math.floor((g.Za+7-(g.Wa+6)%7)/7),2),\"%y\":g=>(g.$a+1900).toString().substring(2),\"%Y\":g=>g.$a+1900,\"%z\":g=>{g=g.Ib;var u=0<=g;g=Math.abs(g)/60;return(u?\"+\":\"-\")+String(\"0000\"+(g/60*100+g%60)).slice(-4)},\"%Z\":g=>g.Lb,\"%%\":()=>\"%\"};c=c.replace(/%%/g,\"\\x00\\x00\");for(r in m)c.includes(r)&&\n(c=c.replace(new RegExp(r,\"g\"),m[r](e)));c=c.replace(/\\0\\0/g,\"%\");r=Wb(c);if(r.length>b)return 0;Xb(r,a);return r.length-1}function Zb(a){try{a()}catch(b){M(b)}}function $b(a){var b={},c;for(c in a)(function(e){var f=a[e];b[e]=\"function\"==typeof f?function(){ac.push(e);try{return f.apply(null,arguments)}finally{P||(ac.pop()===e||M(),D&&1===Z&&0===ac.length&&(Z=0,xa+=1,Zb(bc),\"undefined\"!=typeof Fibers&&Fibers.Ub()))}}:f})(c);return b}var Z=0,D=null,cc=0,ac=[],dc={},ec={},fc=0,gc=null,hc=[];\nfunction ha(){return new Promise((a,b)=>{gc={resolve:a,reject:b}})}function ic(){var a=Ab(65548),b=a+12;A()[a>>2>>>0]=b;A()[a+4>>2>>>0]=b+65536;b=ac[0];var c=dc[b];void 0===c&&(c=fc++,dc[b]=c,ec[c]=b);b=c;z()[a+8>>2>>>0]=b;return a}function jc(){var a=z()[D+8>>2>>>0];a=N[ec[a]];--xa;return a()}\nfunction kc(a){if(!P){if(0===Z){var b=!1,c=!1;a((e=0)=>{if(!P&&(cc=e,b=!0,c)){Z=2;Zb(()=>lc(D));\"undefined\"!=typeof Browser&&Browser.hb.sb&&Browser.hb.resume();e=!1;try{var f=jc()}catch(q){f=q,e=!0}var h=!1;if(!D){var k=gc;k&&(gc=null,(e?k.reject:k.resolve)(f),h=!0)}if(e&&!h)throw f;}});c=!0;b||(Z=1,D=ic(),\"undefined\"!=typeof Browser&&Browser.hb.sb&&Browser.hb.pause(),Zb(()=>mc(D)))}else 2===Z?(Z=0,Zb(nc),oc(D),D=null,hc.forEach(e=>tb(e))):M(`invalid state: ${Z}`);return cc}}\nfunction pc(a){return kc(b=>{a().then(b)})}W.gb();\nvar qc=[null,Oa,Pa,bb,db,eb,ib,jb,kb,lb,mb,nb,ob,pb,qb,rb,sb,yb,zb,Mb,Nb,Ob,Pb,Qb,Tb],tc={r:function(a,b,c){return pc(async()=>{await B.xb(a,b,c)})},b:function(a,b,c){a>>>=0;(new Za(a)).gb(b>>>0,c>>>0);$a=a;ab++;throw $a;},O:function(a){rc(a>>>0,!F,1,!ka,131072,!1);W.lb()},l:function(a){a>>>=0;H?postMessage({cmd:\"cleanupThread\",thread:a}):Ka(a)},I:cb,i:db,U:eb,E:ib,G:jb,V:kb,S:lb,K:mb,R:nb,p:ob,F:pb,C:qb,T:rb,D:sb,q:()=>!0,A:function(a,b){a>>>=0;a==b>>>0?setTimeout(()=>Ta()):H?postMessage({targetThread:a,\ncmd:\"checkMailbox\"}):(a=W.Qa[a])&&a.postMessage({cmd:\"checkMailbox\"})},M:function(){return-1},N:ub,X:function(a){G&&W.Qa[a>>>0].ref()},u:function(a,b,c){a=b+2097152>>>0<4194305-!!a?(a>>>0)+4294967296*b:NaN;c>>>=0;a=new Date(1E3*a);z()[c>>2>>>0]=a.getUTCSeconds();z()[c+4>>2>>>0]=a.getUTCMinutes();z()[c+8>>2>>>0]=a.getUTCHours();z()[c+12>>2>>>0]=a.getUTCDate();z()[c+16>>2>>>0]=a.getUTCMonth();z()[c+20>>2>>>0]=a.getUTCFullYear()-1900;z()[c+24>>2>>>0]=a.getUTCDay();a=(a.getTime()-Date.UTC(a.getUTCFullYear(),\n0,1,0,0,0,0))/864E5|0;z()[c+28>>2>>>0]=a},v:function(a,b,c){a=b+2097152>>>0<4194305-!!a?(a>>>0)+4294967296*b:NaN;c>>>=0;a=new Date(1E3*a);z()[c>>2>>>0]=a.getSeconds();z()[c+4>>2>>>0]=a.getMinutes();z()[c+8>>2>>>0]=a.getHours();z()[c+12>>2>>>0]=a.getDate();z()[c+16>>2>>>0]=a.getMonth();z()[c+20>>2>>>0]=a.getFullYear()-1900;z()[c+24>>2>>>0]=a.getDay();b=(Y(a.getFullYear())?wb:xb)[a.getMonth()]+a.getDate()-1|0;z()[c+28>>2>>>0]=b;z()[c+36>>2>>>0]=-(60*a.getTimezoneOffset());b=(new Date(a.getFullYear(),\n6,1)).getTimezoneOffset();var e=(new Date(a.getFullYear(),0,1)).getTimezoneOffset();a=(b!=e&&a.getTimezoneOffset()==Math.min(e,b))|0;z()[c+32>>2>>>0]=a},w:function(a){a>>>=0;var b=new Date(z()[a+20>>2>>>0]+1900,z()[a+16>>2>>>0],z()[a+12>>2>>>0],z()[a+8>>2>>>0],z()[a+4>>2>>>0],z()[a>>2>>>0],0),c=z()[a+32>>2>>>0],e=b.getTimezoneOffset(),f=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),h=(new Date(b.getFullYear(),0,1)).getTimezoneOffset(),k=Math.min(h,f);0>c?z()[a+32>>2>>>0]=Number(f!=h&&k==e):\n0<c!=(k==e)&&(f=Math.max(h,f),b.setTime(b.getTime()+6E4*((0<c?k:f)-e)));z()[a+24>>2>>>0]=b.getDay();c=(Y(b.getFullYear())?wb:xb)[b.getMonth()]+b.getDate()-1|0;z()[a+28>>2>>>0]=c;z()[a>>2>>>0]=b.getSeconds();z()[a+4>>2>>>0]=b.getMinutes();z()[a+8>>2>>>0]=b.getHours();z()[a+12>>2>>>0]=b.getDate();z()[a+16>>2>>>0]=b.getMonth();z()[a+20>>2>>>0]=b.getYear();a=b.getTime()/1E3;return sc((U=a,1<=+Math.abs(U)?0<U?+Math.floor(U/4294967296)>>>0:~~+Math.ceil((U-+(~~U>>>0))/4294967296)>>>0:0)),a>>>0},s:yb,t:zb,\nz:function(a,b,c){function e(m){return(m=m.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?m[1]:\"GMT\"}a>>>=0;b>>>=0;c>>>=0;var f=(new Date).getFullYear(),h=new Date(f,0,1),k=new Date(f,6,1);f=h.getTimezoneOffset();var q=k.getTimezoneOffset(),n=Math.max(f,q);A()[a>>2>>>0]=60*n;z()[b>>2>>>0]=Number(f!=q);a=e(h);b=e(k);a=Bb(a);b=Bb(b);q<f?(A()[c>>2>>>0]=a,A()[c+4>>2>>>0]=b):(A()[c>>2>>>0]=b,A()[c+4>>2>>>0]=a)},d:()=>{M(\"\")},c:function(a,b,c){a>>>=0;b=Db(b>>>0,c>>>0);return Ha[a].apply(null,b)},k:function(a,\nb,c){a>>>=0;b=Db(b>>>0,c>>>0);return Ha[a].apply(null,b)},m:function(){},j:function(){return Date.now()},W:()=>{xa+=1;throw\"unwind\";},B:function(){return 4294901760},f:()=>performance.timeOrigin+performance.now(),g:function(){return G?require(\"os\").cpus().length:navigator.hardwareConcurrency},L:function(a,b,c,e){W.Pb=b>>>0;Ib.length=c;b=e>>>0>>3;for(e=0;e<c;e++)Ib[e]=da()[b+e>>>0];return(0>a?Ha[-a-1]:qc[a]).apply(null,Ib)},y:function(a){a>>>=0;var b=v().length;if(a<=b||4294901760<a)return!1;for(var c=\n1;4>=c;c*=2){var e=b*(1+.2/c);e=Math.min(e,a+100663296);var f=Math;e=Math.max(a,e);a:{f=f.min.call(f,4294901760,e+(65536-e%65536)%65536)-l.buffer.byteLength+65535>>>16;try{l.grow(f);t();var h=1;break a}catch(k){}h=void 0}if(h)return!0}return!1},P:Mb,Q:Nb,H:Qa,h:Ob,o:Pb,x:Qb,n:Tb,a:l||B.wasmMemory,J:Yb,e:function(a,b,c,e){return Yb(a>>>0,b>>>0,c>>>0,e>>>0)}};\n(function(){function a(c,e){c=c.exports;c=$b(c);N=c=uc(c);W.mb.push(N.Da);va.unshift(N.Y);sa=e;Ba();return c}var b={a:tc};Aa();if(B.instantiateWasm)try{return B.instantiateWasm(b,a)}catch(c){K(\"Module.instantiateWasm callback failed with error: \"+c),C(c)}Ga(b,function(c){a(c.instance,c.module)}).catch(C);return{}})();B._OrtInit=(a,b)=>(B._OrtInit=N.Z)(a,b);B._OrtGetLastError=(a,b)=>(B._OrtGetLastError=N._)(a,b);\nB._OrtCreateSessionOptions=(a,b,c,e,f,h,k,q,n,m)=>(B._OrtCreateSessionOptions=N.$)(a,b,c,e,f,h,k,q,n,m);B._OrtAppendExecutionProvider=(a,b)=>(B._OrtAppendExecutionProvider=N.aa)(a,b);B._OrtAddFreeDimensionOverride=(a,b,c)=>(B._OrtAddFreeDimensionOverride=N.ba)(a,b,c);B._OrtAddSessionConfigEntry=(a,b,c)=>(B._OrtAddSessionConfigEntry=N.ca)(a,b,c);B._OrtReleaseSessionOptions=a=>(B._OrtReleaseSessionOptions=N.da)(a);B._OrtCreateSession=(a,b,c)=>(B._OrtCreateSession=N.ea)(a,b,c);\nB._OrtReleaseSession=a=>(B._OrtReleaseSession=N.fa)(a);B._OrtGetInputOutputCount=(a,b,c)=>(B._OrtGetInputOutputCount=N.ga)(a,b,c);B._OrtGetInputName=(a,b)=>(B._OrtGetInputName=N.ha)(a,b);B._OrtGetOutputName=(a,b)=>(B._OrtGetOutputName=N.ia)(a,b);B._OrtFree=a=>(B._OrtFree=N.ja)(a);B._OrtCreateTensor=(a,b,c,e,f,h)=>(B._OrtCreateTensor=N.ka)(a,b,c,e,f,h);B._OrtGetTensorData=(a,b,c,e,f)=>(B._OrtGetTensorData=N.la)(a,b,c,e,f);B._OrtReleaseTensor=a=>(B._OrtReleaseTensor=N.ma)(a);\nB._OrtCreateRunOptions=(a,b,c,e)=>(B._OrtCreateRunOptions=N.na)(a,b,c,e);B._OrtAddRunConfigEntry=(a,b,c)=>(B._OrtAddRunConfigEntry=N.oa)(a,b,c);B._OrtReleaseRunOptions=a=>(B._OrtReleaseRunOptions=N.pa)(a);B._OrtCreateBinding=a=>(B._OrtCreateBinding=N.qa)(a);B._OrtBindInput=(a,b,c)=>(B._OrtBindInput=N.ra)(a,b,c);B._OrtBindOutput=(a,b,c,e)=>(B._OrtBindOutput=N.sa)(a,b,c,e);B._OrtClearBoundOutputs=a=>(B._OrtClearBoundOutputs=N.ta)(a);B._OrtReleaseBinding=a=>(B._OrtReleaseBinding=N.ua)(a);\nB._OrtRunWithBinding=(a,b,c,e,f)=>(B._OrtRunWithBinding=N.va)(a,b,c,e,f);B._OrtRun=(a,b,c,e,f,h,k,q)=>(B._OrtRun=N.wa)(a,b,c,e,f,h,k,q);B._OrtEndProfiling=a=>(B._OrtEndProfiling=N.xa)(a);B._JsepOutput=(a,b,c)=>(B._JsepOutput=N.ya)(a,b,c);B._JsepGetNodeName=a=>(B._JsepGetNodeName=N.za)(a);var Sa=B._pthread_self=()=>(Sa=B._pthread_self=N.Aa)(),Ab=B._malloc=a=>(Ab=B._malloc=N.Ba)(a),oc=B._free=a=>(oc=B._free=N.Ca)(a);B.__emscripten_tls_init=()=>(B.__emscripten_tls_init=N.Da)();\nvar rc=B.__emscripten_thread_init=(a,b,c,e,f,h)=>(rc=B.__emscripten_thread_init=N.Fa)(a,b,c,e,f,h);B.__emscripten_thread_crashed=()=>(B.__emscripten_thread_crashed=N.Ga)();\nvar Hb=(a,b,c,e)=>(Hb=N.Ha)(a,b,c,e),Ra=a=>(Ra=N.Ia)(a),Ya=B.__emscripten_thread_exit=a=>(Ya=B.__emscripten_thread_exit=N.Ja)(a),vb=B.__emscripten_check_mailbox=()=>(vb=B.__emscripten_check_mailbox=N.Ka)(),sc=a=>(sc=N.La)(a),Va=(a,b)=>(Va=N.Ma)(a,b),Eb=()=>(Eb=N.Na)(),Wa=a=>(Wa=N.Oa)(a),Gb=a=>(Gb=N.Pa)(a),Xa=B.dynCall_ii=(a,b)=>(Xa=B.dynCall_ii=N.Ra)(a,b),mc=a=>(mc=N.Sa)(a),bc=()=>(bc=N.Ta)(),lc=a=>(lc=N.Ua)(a),nc=()=>(nc=N.Va)();B.___start_em_js=922382;B.___stop_em_js=922543;\nfunction uc(a){a=Object.assign({},a);var b=e=>()=>e()>>>0,c=e=>f=>e(f)>>>0;a.__errno_location=b(a.__errno_location);a.pthread_self=b(a.pthread_self);a.malloc=c(a.malloc);a.stackSave=b(a.stackSave);a.stackAlloc=c(a.stackAlloc);return a}B.keepRuntimeAlive=ya;B.wasmMemory=l;B.stackAlloc=Gb;B.stackSave=Eb;B.stackRestore=Wa;B.UTF8ToString=V;B.stringToUTF8=hb;B.lengthBytesUTF8=fb;B.ExitStatus=Ia;B.PThread=W;var vc;S=function wc(){vc||xc();vc||(S=wc)};\nfunction xc(){function a(){if(!vc&&(vc=!0,B.calledRun=!0,!P)){H||Ua(va);fa(B);if(B.onRuntimeInitialized)B.onRuntimeInitialized();if(!H){if(B.postRun)for(\"function\"==typeof B.postRun&&(B.postRun=[B.postRun]);B.postRun.length;){var b=B.postRun.shift();wa.unshift(b)}Ua(wa)}}}if(!(0<R))if(H)fa(B),H||Ua(va),startWorker(B);else{if(B.preRun)for(\"function\"==typeof B.preRun&&(B.preRun=[B.preRun]);B.preRun.length;)ua.unshift(B.preRun.shift());Ua(ua);0<R||(B.setStatus?(B.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){B.setStatus(\"\")},\n1);a()},1)):a())}}if(B.preInit)for(\"function\"==typeof B.preInit&&(B.preInit=[B.preInit]);0<B.preInit.length;)B.preInit.pop()();xc();\n\n\n  return moduleArg.ready\n}\n\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasmThreaded;\nelse if (typeof define === 'function' && define['amd'])\n  define([], () => ortWasmThreaded);\n", "\"use strict\";var Module={},ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require(\"worker_threads\"),parentPort=nodeWorkerThreads.parentPort;parentPort.on(\"message\",e=>onmessage({data:e}));var fs=require(\"fs\");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>(0,eval)(fs.readFileSync(e,\"utf8\")+\"//# sourceURL=\"+e),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(\" \");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(\" \");postMessage({cmd:\"alert\",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason??e};function handleMessage(e){try{if(e.data.cmd===\"load\"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:\"loaded\"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:\"callHandler\",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob==\"string\")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd===\"run\"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!=\"unwind\")throw a}}else e.data.cmd===\"cancel\"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target===\"setimmediate\"||(e.data.cmd===\"checkMailbox\"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(\"worker.js received unknown command \"+e.data.cmd),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed&&Module.__emscripten_thread_crashed(),a}}self.onmessage=handleMessage;\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as path from 'node:path';\nimport {Env} from 'onnxruntime-common';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\n\n/* eslint-disable @typescript-eslint/no-require-imports */\nlet ortWasmFactory: EmscriptenModuleFactory<OrtWasmModule>;\n\nif (!BUILD_DEFS.DISABLE_TRAINING) {\n  ortWasmFactory = require('./binding/ort-training-wasm-simd.js');\n} else {\n  ortWasmFactory =\n      BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm.js') : require('./binding/ort-wasm-simd.jsep.js');\n}\n\nconst ortWasmFactoryThreaded: EmscriptenModuleFactory<OrtWasmModule> = !BUILD_DEFS.DISABLE_WASM_THREAD ?\n    (BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm-threaded.js') :\n                                 require('./binding/ort-wasm-simd-threaded.jsep.js')) :\n    ortWasmFactory;\n/* eslint-enable @typescript-eslint/no-require-imports */\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n\n    // The binary data is generated from the following code by wat2wasm:\n    //\n    // (module\n    //   (type $t0 (func))\n    //   (func $f0 (type $t0)\n    //     (drop\n    //       (i32x4.dot_i16x8_s\n    //         (i8x16.splat\n    //           (i32.const 0))\n    //         (v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)))))\n\n    return WebAssembly.validate(new Uint8Array([\n      0,   97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 30, 1,   28,  0, 65, 0,\n      253, 15, 253, 12,  0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0,  0,  253, 186, 1, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useSimd) {\n    if (!BUILD_DEFS.DISABLE_TRAINING) {\n      return 'ort-training-wasm-simd.wasm';\n    }\n    return useThreads ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-simd.wasm';\n  } else {\n    return useThreads ? 'ort-wasm-threaded.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPaths = flags.wasmPaths;\n  const wasmPrefixOverride = typeof wasmPaths === 'string' ? wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof wasmPaths === 'object' ? wasmPaths[wasmFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads && fileName.endsWith('.worker.js') &&\n            typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by esbuild plugin to load file content as string.\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName.endsWith('.wasm')) {\n          if (wasmPathOverride) {\n            return wasmPathOverride;\n          }\n\n          const prefix = wasmPrefixOverride ?? scriptDirectory;\n\n          if (!BUILD_DEFS.DISABLE_WEBGPU) {\n            if (wasmFileName === 'ort-wasm-simd.wasm') {\n              return prefix + 'ort-wasm-simd.jsep.wasm';\n            } else if (wasmFileName === 'ort-wasm-simd-threaded.wasm') {\n              return prefix + 'ort-wasm-simd-threaded.jsep.wasm';\n            }\n          }\n\n          return prefix + wasmFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode = `var ortWasmThreaded=${factory.toString()};`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n\n/**\n * check web assembly API's last error and throw error if any error occurred.\n * @param message a message used when an error occurred.\n */\nexport const checkLastError = (message: string): void => {\n  const wasm = getInstance();\n\n  const stack = wasm.stackSave();\n  try {\n    const paramsOffset = wasm.stackAlloc(8);\n    wasm._OrtGetLastError(paramsOffset, paramsOffset + 4);\n    const errorCode = wasm.HEAP32[paramsOffset / 4];\n    const errorMessagePointer = wasm.HEAPU32[paramsOffset / 4 + 1];\n    const errorMessage = errorMessagePointer ? wasm.UTF8ToString(errorMessagePointer) : '';\n    throw new Error(`${message} ERROR_CODE: ${errorCode}, ERROR_MESSAGE: ${errorMessage}`);\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError, iterateExtraOptions} from './wasm-utils';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      checkLastError('Can\\'t create run options.');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          checkLastError(`Can't set a run config entry: ${key} - ${value}.`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(alloc => wasm._free(alloc));\n    throw e;\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError, iterateExtraOptions} from './wasm-utils';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n\n  // if using JSEP with WebGPU, always disable memory pattern\n  if (options.executionProviders &&\n      options.executionProviders.some(ep => (typeof ep === 'string' ? ep : ep.name) === 'webgpu')) {\n    options.enableMemPattern = false;\n  }\n};\n\nconst setExecutionProviders =\n    (sessionOptionsHandle: number, executionProviders: readonly InferenceSession.ExecutionProviderConfig[],\n     allocs: number[]): void => {\n      for (const ep of executionProviders) {\n        let epName = typeof ep === 'string' ? ep : ep.name;\n\n        // check EP name\n        switch (epName) {\n          case 'xnnpack':\n            epName = 'XNNPACK';\n            break;\n          case 'webnn':\n            epName = 'WEBNN';\n            if (typeof ep !== 'string') {\n              const webnnOptions = ep as InferenceSession.WebNNExecutionProviderOption;\n              if (webnnOptions?.deviceType) {\n                const keyDataOffset = allocWasmString('deviceType', allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.deviceType, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(`Can't set a session config entry: 'deviceType' - ${webnnOptions.deviceType}.`);\n                }\n              }\n              if (webnnOptions?.powerPreference) {\n                const keyDataOffset = allocWasmString('powerPreference', allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.powerPreference, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(\n                      `Can't set a session config entry: 'powerPreference' - ${webnnOptions.powerPreference}.`);\n                }\n              }\n            }\n            break;\n          case 'webgpu':\n            epName = 'JS';\n            if (typeof ep !== 'string') {\n              const webgpuOptions = ep as InferenceSession.WebGpuExecutionProviderOption;\n              if (webgpuOptions?.preferredLayout) {\n                if (webgpuOptions.preferredLayout !== 'NCHW' && webgpuOptions.preferredLayout !== 'NHWC') {\n                  throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${webgpuOptions.preferredLayout}`);\n                }\n                const keyDataOffset = allocWasmString('preferredLayout', allocs);\n                const valueDataOffset = allocWasmString(webgpuOptions.preferredLayout, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(\n                      `Can't set a session config entry: 'preferredLayout' - ${webgpuOptions.preferredLayout}.`);\n                }\n              }\n            }\n            break;\n          case 'wasm':\n          case 'cpu':\n            continue;\n          default:\n            throw new Error(`not supported execution provider: ${epName}`);\n        }\n\n        const epNameDataOffset = allocWasmString(epName, allocs);\n        if (getInstance()._OrtAppendExecutionProvider(sessionOptionsHandle, epNameDataOffset) !== 0) {\n          checkLastError(`Can't append execution provider: ${epName}.`);\n        }\n      }\n    };\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel ?? 'all');\n    const executionMode = getExecutionMode(sessionOptions.executionMode ?? 'sequential');\n    const logIdDataOffset =\n        typeof sessionOptions.logId === 'string' ? allocWasmString(sessionOptions.logId, allocs) : 0;\n\n    const logSeverityLevel = sessionOptions.logSeverityLevel ?? 2;  // Default to 2 - warning\n    if (!Number.isInteger(logSeverityLevel) || logSeverityLevel < 0 || logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${logSeverityLevel}`);\n    }\n\n    const logVerbosityLevel = sessionOptions.logVerbosityLevel ?? 0;  // Default to 0 - verbose\n    if (!Number.isInteger(logVerbosityLevel) || logVerbosityLevel < 0 || logVerbosityLevel > 4) {\n      throw new Error(`log verbosity level is not valid: ${logVerbosityLevel}`);\n    }\n\n    const optimizedModelFilePathOffset = typeof sessionOptions.optimizedModelFilePath === 'string' ?\n        allocWasmString(sessionOptions.optimizedModelFilePath, allocs) :\n        0;\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena, !!sessionOptions.enableMemPattern, executionMode,\n        !!sessionOptions.enableProfiling, 0, logIdDataOffset, logSeverityLevel, logVerbosityLevel,\n        optimizedModelFilePathOffset);\n    if (sessionOptionsHandle === 0) {\n      checkLastError('Can\\'t create session options.');\n    }\n\n    if (sessionOptions.executionProviders) {\n      setExecutionProviders(sessionOptionsHandle, sessionOptions.executionProviders, allocs);\n    }\n\n    if (sessionOptions.freeDimensionOverrides) {\n      for (const [name, value] of Object.entries(sessionOptions.freeDimensionOverrides)) {\n        if (typeof name !== 'string') {\n          throw new Error(`free dimension override name must be a string: ${name}`);\n        }\n        if (typeof value !== 'number' || !Number.isInteger(value) || value < 0) {\n          throw new Error(`free dimension override value must be a non-negative integer: ${value}`);\n        }\n        const nameOffset = allocWasmString(name, allocs);\n        if (wasm._OrtAddFreeDimensionOverride(sessionOptionsHandle, nameOffset, value) !== 0) {\n          checkLastError(`Can't set a free dimension override: ${name} - ${value}.`);\n        }\n      }\n    }\n\n    if (sessionOptions.extra !== undefined) {\n      iterateExtraOptions(sessionOptions.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          checkLastError(`Can't set a session config entry: ${key} - ${value}.`);\n        }\n      });\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(alloc => wasm._free(alloc));\n    throw e;\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from 'onnxruntime-common';\n\n// This file includes common definitions. They do NOT have dependency on the WebAssembly instance.\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nexport const enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n/**\n * Map string tensor data to enum value\n */\nexport const tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float16':\n      return DataType.float16;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\n/**\n * Map enum value to string tensor data\n */\nexport const tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float16:\n      return 'float16';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int64';\n    case DataType.uint64:\n      return 'uint64';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\n/**\n * get tensor element size in bytes by the given data type\n * @returns size in integer or undefined if the data type is not supported\n */\nexport const getTensorElementSize = (dateType: number): number|\n    undefined => [undefined, 4, 1, 1, 2, 2, 4, 8, undefined, 1, 2, 8, 4, 8, undefined, undefined, undefined][dateType];\n\n/**\n * get typed array constructor by the given tensor type\n */\nexport const tensorTypeToTypedArrayConstructor = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float16':\n          return Uint16Array;\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * Map string log level to integer value\n */\nexport const logLevelStringToEnum = (logLevel?: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n\n/**\n * Check whether the given tensor type is supported by GPU buffer\n */\nexport const isGpuBufferSupportedType = (type: Tensor.Type): type is Tensor.GpuBufferDataTypes => type === 'float32' ||\n    type === 'int32' || type === 'int64' || type === 'bool' || type === 'float16' || type === 'uint32';\n\n/**\n * Map string data location to integer value\n */\nexport const dataLocationStringToEnum = (location: Tensor.DataLocation): number => {\n  switch (location) {\n    case 'none':\n      return 0;\n    case 'cpu':\n      return 1;\n    case 'cpu-pinned':\n      return 2;\n    case 'texture':\n      return 3;\n    case 'gpu-buffer':\n      return 4;\n    default:\n      throw new Error(`unsupported data location: ${location}`);\n  }\n};\n\n/**\n * Map integer data location to string value\n */\nexport const dataLocationEnumToString = (location: number): Tensor.DataLocation|undefined =>\n    (['none', 'cpu', 'cpu-pinned', 'texture', 'gpu-buffer'] as const)[location];\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {logLevelStringToEnum} from '../wasm-common';\n\ntype LogLevel = NonNullable<Env['logLevel']>;\ntype MessageString = string;\ntype MessageFunction = () => string;\ntype Message = MessageString|MessageFunction;\n\nconst logLevelPrefix = ['V', 'I', 'W', 'E', 'F'];\n\nconst doLog = (level: number, message: string): void => {\n  // eslint-disable-next-line no-console\n  console.log(`[${logLevelPrefix[level]},${new Date().toISOString()}]${message}`);\n};\n\nlet configLogLevel: LogLevel|undefined;\nlet debug: boolean|undefined;\n\nexport const configureLogger = ($configLogLevel: LogLevel, $debug: boolean): void => {\n  configLogLevel = $configLogLevel;\n  debug = $debug;\n};\n\n/**\n * A simple logging utility to log messages to the console.\n */\nexport const LOG = (logLevel: LogLevel, msg: Message): void => {\n  const messageLevel = logLevelStringToEnum(logLevel);\n  const configLevel = logLevelStringToEnum(configLogLevel);\n  if (messageLevel >= configLevel) {\n    doLog(messageLevel, typeof msg === 'function' ? msg() : msg);\n  }\n};\n\n/**\n * A simple logging utility to log messages to the console. Only logs when debug is enabled.\n */\nexport const LOG_DEBUG: typeof LOG = (...args: Parameters<typeof LOG>) => {\n  if (debug) {\n    LOG(...args);\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from 'onnxruntime-common';\n\nimport {tensorTypeToTypedArrayConstructor} from '../wasm-common';\n\nexport const createView = (dataBuffer: ArrayBuffer, type: Tensor.Type): Int32Array|Uint32Array|BigInt64Array|\n    BigUint64Array|Uint8Array|Float32Array|Float64Array|Int8Array|Int16Array|Uint16Array =>\n        new (tensorTypeToTypedArrayConstructor(type))(dataBuffer);\n\n/**\n * a TensorView does not own the data.\n */\nexport interface TensorView {\n  readonly data: number;\n  readonly dataType: number;\n  readonly dims: readonly number[];\n\n  /**\n   * get a Float32Array data view of the tensor data. tensor data must be on CPU.\n   */\n  getFloat32Array(): Float32Array;\n\n  /**\n   * get a BigInt64Array data view of the tensor data. tensor data must be on CPU.\n   */\n  getBigInt64Array(): BigInt64Array;\n\n  /**\n   * get a Int32Array data view of the tensor data. tensor data must be on CPU.\n   */\n  getInt32Array(): Int32Array;\n\n  /**\n   * create a new tensor view with the same data but different dimensions.\n   */\n  reshape(newDims: readonly number[]): TensorView;\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../tensor-view';\n\nimport {ShaderHelper} from './ops/common';\n\nexport enum GpuDataType {\n  default = 0,\n  upload = 1,\n  profile = 2\n}\nexport type GpuDataId = number;\n\nexport interface GpuData {\n  type: GpuDataType;\n  id: GpuDataId;\n  buffer: GPUBuffer;\n}\n\nexport interface TensorInfo {\n  dims: readonly number[];\n  dataType: number;\n}\n\n\nexport interface ProgramUniform {\n  type: 'int32'|'float32'|'uint32';\n  data: number|readonly number[];\n}\n\n/**\n * Represent the dependency of a program on a specific input tensor.\n *\n * - 'none': the shader/uniform does not depend on this input's info\n * - 'type': the shader/uniform depends on data type of this input\n * - 'rank': the shader/uniform depends on data type and the rank of this input\n * - 'dims': the shader/uniform depends on data type and the dims of this input\n * - 'data': the shader/uniform depends on data type, the dims and the data of this input\n */\nexport type ProgramInputTensorInfoDependency = 'none'|'type'|'rank'|'dims'|'data';\n\n/**\n * Represent information about a program's cache for shader.\n */\nexport interface ProgramShaderCacheInfo {\n  /**\n   * an optional string as a cache hint in the artifact cache. If this is not specified, the cache hint will be empty.\n   *\n   * This hint string should only contains initializing-time information, such as the attributes or any information of\n   * initializers. It should NOT contain any runtime information, such as the shape of inputs.\n   */\n  hint?: string;\n\n  /**\n   * an optional list of dependencies of the program on the input tensors. If this is not specified, the program depends\n   * on 'dims' of all inputs.\n   */\n  inputDependencies?: ProgramInputTensorInfoDependency[];\n}\n\n/**\n * Represent information about a program's cache for uniform.\n */\nexport interface ProgramUniformCacheInfo {\n  /**\n   * an optional string as a cache hint in the uniform cache. If this is not specified, the cache hint will be empty.\n   *\n   * This hint string should only contains runtime information, such as the shape of inputs.\n   */\n  hint?: string;\n\n  /**\n   * an optional list of dependencies of the program on the input tensors. If this is not specified, the program depends\n   * on 'none' of all inputs.\n   */\n  inputDependencies?: ProgramInputTensorInfoDependency[];\n}\n\n\n/**\n * A set of data that represent a shader program\n */\nexport interface ProgramInfo {\n  /**\n   * the name of the program. used for debugging and profiling\n   */\n  name: string;\n\n  /**\n   * an optional object describing the cache information of the program shader.\n   *\n   * If this is not specified, assume hint is empty and inputDependencies are ['dims'] for all inputs.\n   */\n  shaderCache?: ProgramShaderCacheInfo;\n\n  /**\n   * the shader's processing source code.\n   *\n   * This function will be called when shader cache missed.\n   */\n  getShaderSource: (shaderHelper: ShaderHelper) => string;\n\n  /**\n   * A function to get run data required to run the program.\n   *\n   * This function will be called every time the program is executed. Should keep this function as simple as possible.\n   */\n  getRunData: (inputs: readonly TensorView[]) => {\n    outputs: readonly TensorInfo[];\n    dispatchGroup: {x: number; y?: number; z?: number};\n    programUniforms?: readonly ProgramUniform[];\n  };\n}\n\nexport interface Artifact {\n  programInfo: ProgramInfo;\n  computePipeline: GPUComputePipeline;\n}\n\nexport interface ComputeContextInputsOutputsMapping {\n  /**\n   * specify the mapping to the program's inputs. the value can be a number or a tensor view.\n   * - if it's a number, it's the index of the kernel's input\n   * - if it's a tensor view, it's an existing tensor view that will be used as the input\n   *\n   * if inputs is not specified, the mapping will be the kernel's inputs in order.\n   */\n  readonly inputs?: ReadonlyArray<TensorView|number>;\n  /**\n   * specify the mapping to the program's outputs. the value must be a number.\n   * - if it's a non-negative number, it's the index of the kernel's output\n   * - if it's -1, it's an output that will be created as a temporary value. this value will be released after\n   * the kernel is executed.\n   * - if it's -2, it's an output that will be created as a persistent value. this value will be released when the\n   * kernel is released.\n   *\n   * if outputs is not specified, the mapping will be the kernel's outputs in order.\n   */\n  readonly outputs?: readonly number[];\n}\n\n/**\n * A ComputeContext instance carries the states that representing the current running of a kernel.\n */\nexport interface ComputeContext {\n  /**\n   * stores the pointer to OpKernelContext\n   */\n  readonly opKernelContext: number;\n\n  /**\n   * a list of inputs, each input is an instance of TensorView\n   */\n  readonly inputs: readonly TensorView[];\n\n  /**\n   * a custom data object that can be used to store any data that is needed by the kernel\n   */\n  readonly kernelCustomData: {[key: string]: unknown};\n\n  /**\n   * a buffer that can be used to access custom data created each time the kernel is executed\n   */\n  readonly customDataBuffer: Uint8Array;\n\n  /**\n   * a number of outputs for the node\n   */\n  readonly outputCount: number;\n\n  compute(program: ProgramInfo, inputsOutputsMapping?: ComputeContextInputsOutputsMapping): TensorView[];\n  output(index: number, dims: readonly number[]): number;\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGpuBackend} from '../backend-webgpu';\nimport {LOG_DEBUG} from '../log';\n\nimport {GpuData, GpuDataId, GpuDataType} from './types';\n\n/**\n * manages GpuDataId -> GpuBuffer\n */\nexport interface GpuDataManager {\n  /**\n   * copy data from CPU to GPU.\n   */\n  upload(id: GpuDataId, data: Uint8Array): void;\n  /**\n   * copy data from GPU to GPU.\n   */\n  memcpy(sourceId: GpuDataId, destinationId: GpuDataId): void;\n  /**\n   * create new data on GPU.\n   */\n  create(size: number, usage?: number): GpuData;\n  /**\n   * get GPU data by ID.\n   */\n  get(id: GpuDataId): GpuData|undefined;\n  /**\n   * release the data on GPU by ID.\n   *\n   * @return size of the data released\n   */\n  release(id: GpuDataId): number;\n  /**\n   * copy data from GPU to CPU.\n   */\n  download(id: GpuDataId, getTargetBuffer: () => Uint8Array): Promise<void>;\n\n  /**\n   * refresh the buffers that marked for release.\n   *\n   * when release() is called, the buffer is not released immediately. this is because we need to wait for the commands\n   * to be submitted to the GPU. this function is called after the commands are submitted so that the buffers can be\n   * actually released.\n   */\n  refreshPendingBuffers(): void;\n\n  /**\n   * register an external buffer for IO Binding. If the buffer is already registered, return the existing GPU data ID.\n   *\n   * GPU data manager only manages a mapping between the buffer and the GPU data ID. It will not manage the lifecycle of\n   * the external buffer.\n   */\n  registerExternalBuffer(buffer: GPUBuffer, originalSize: number, previousBuffer?: GPUBuffer): number;\n\n  /**\n   * unregister an external buffer for IO Binding.\n   */\n  unregisterExternalBuffer(buffer: GPUBuffer): void;\n\n  /**\n   * destroy all gpu buffers. Call this when the session.release is called.\n   */\n  dispose(): void;\n}\n\ninterface StorageCacheValue {\n  gpuData: GpuData;\n  originalSize: number;\n}\n\n/**\n * normalize the buffer size so that it fits the 128-bits (16 bytes) alignment.\n */\nconst calcNormalizedBufferSize = (size: number) => Math.ceil(size / 16) * 16;\n\nlet guid = 1;\nconst createNewGpuDataId = () => guid++;\n\n/**\n * exported standard download function. This function is used by the session to download the data from GPU, and also by\n * factory to create GPU tensors with the capacity of downloading data from GPU.\n *\n * @param backend - the WebGPU backend\n * @param gpuBuffer - the GPU buffer to download\n * @param originalSize - the original size of the data\n * @param getTargetBuffer - optional. If provided, the data will be copied to the target buffer. Otherwise, a new buffer\n * will be created and returned.\n */\nexport const downloadGpuData =\n    async(backend: WebGpuBackend, gpuBuffer: GPUBuffer, originalSize: number, getTargetBuffer?: () => Uint8Array):\n        Promise<Uint8Array> => {\n          const bufferSize = calcNormalizedBufferSize(originalSize);\n          const gpuReadBuffer = backend.device.createBuffer(\n              // eslint-disable-next-line no-bitwise\n              {size: bufferSize, usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ});\n          try {\n            const commandEncoder = backend.getCommandEncoder();\n            backend.endComputePass();\n            commandEncoder.copyBufferToBuffer(\n                gpuBuffer /* source buffer */, 0 /* source offset */, gpuReadBuffer /* destination buffer */,\n                0 /* destination offset */, bufferSize /* size */\n            );\n            backend.flush();\n\n            await gpuReadBuffer.mapAsync(GPUMapMode.READ);\n\n            const arrayBuffer = gpuReadBuffer.getMappedRange();\n            if (getTargetBuffer) {\n              // if we already have a CPU buffer to accept the data, no need to clone the ArrayBuffer.\n              const targetBuffer = getTargetBuffer();\n              targetBuffer.set(new Uint8Array(arrayBuffer, 0, originalSize));\n              return targetBuffer;\n            } else {\n              // the mapped ArrayBuffer will be released when the GPU buffer is destroyed. Need to clone the\n              // ArrayBuffer.\n              return new Uint8Array(arrayBuffer.slice(0, originalSize));\n            }\n          } finally {\n            gpuReadBuffer.destroy();\n          }\n        };\n\nclass GpuDataManagerImpl implements GpuDataManager {\n  // GPU Data ID => GPU Data ( storage buffer )\n  private storageCache: Map<GpuDataId, StorageCacheValue>;\n\n  // pending buffers for uploading ( data is unmapped )\n  private buffersForUploadingPending: GPUBuffer[];\n  // pending buffers for computing\n  private buffersPending: GPUBuffer[];\n\n  // The reusable storage buffers for computing.\n  private freeBuffers: Map<number, GPUBuffer[]>;\n  // The reusable uniform buffers\n  private freeUniformBuffers: Map<number, GPUBuffer[]>;\n\n  // The external buffers registered users for IO Binding.\n  private externalBuffers: Map<GPUBuffer, GpuDataId>;\n\n  constructor(private backend: WebGpuBackend) {\n    this.storageCache = new Map();\n    this.freeBuffers = new Map();\n    this.freeUniformBuffers = new Map();\n    this.buffersForUploadingPending = [];\n    this.buffersPending = [];\n    this.externalBuffers = new Map();\n  }\n\n  upload(id: GpuDataId, data: Uint8Array): void {\n    const srcArrayBuffer = data.buffer;\n    const srcOffset = data.byteOffset;\n    const srcLength = data.byteLength;\n    const size = calcNormalizedBufferSize(srcLength);\n\n    // get destination gpu buffer\n    const gpuDataCache = this.storageCache.get(id);\n    if (!gpuDataCache) {\n      throw new Error('gpu data for uploading does not exist');\n    }\n    if (gpuDataCache.originalSize !== srcLength) {\n      throw new Error(`inconsistent data size. gpu data size=${gpuDataCache.originalSize}, data size=${srcLength}`);\n    }\n\n    // create gpu buffer\n    const gpuBufferForUploading = this.backend.device.createBuffer(\n        // eslint-disable-next-line no-bitwise\n        {mappedAtCreation: true, size, usage: GPUBufferUsage.MAP_WRITE | GPUBufferUsage.COPY_SRC});\n\n    // copy (upload) data\n    const arrayBuffer = gpuBufferForUploading.getMappedRange();\n    new Uint8Array(arrayBuffer).set(new Uint8Array(srcArrayBuffer, srcOffset, srcLength));\n    gpuBufferForUploading.unmap();\n\n\n    // GPU copy\n    const commandEncoder = this.backend.getCommandEncoder();\n    this.backend.endComputePass();\n    commandEncoder.copyBufferToBuffer(gpuBufferForUploading, 0, gpuDataCache.gpuData.buffer, 0, size);\n\n    LOG_DEBUG('verbose', () => `[WebGPU] GpuDataManager.upload(id=${id})`);\n\n    this.buffersForUploadingPending.push(gpuBufferForUploading);\n  }\n\n  memcpy(sourceId: GpuDataId, destinationId: GpuDataId): void {\n    // get source gpu buffer\n    const sourceGpuDataCache = this.storageCache.get(sourceId);\n    if (!sourceGpuDataCache) {\n      throw new Error('source gpu data for memcpy does not exist');\n    }\n    // get destination gpu buffer\n    const destinationGpuDataCache = this.storageCache.get(destinationId);\n    if (!destinationGpuDataCache) {\n      throw new Error('destination gpu data for memcpy does not exist');\n    }\n    if (sourceGpuDataCache.originalSize !== destinationGpuDataCache.originalSize) {\n      throw new Error('inconsistent source and destination gpu data size');\n    }\n    const size = calcNormalizedBufferSize(sourceGpuDataCache.originalSize);\n\n    // GPU copy\n    const commandEncoder = this.backend.getCommandEncoder();\n    this.backend.endComputePass();\n    commandEncoder.copyBufferToBuffer(\n        sourceGpuDataCache.gpuData.buffer, 0, destinationGpuDataCache.gpuData.buffer, 0, size);\n  }\n\n  registerExternalBuffer(buffer: GPUBuffer, originalSize: number, previousBuffer?: GPUBuffer): number {\n    let id: number|undefined;\n    if (previousBuffer) {\n      id = this.externalBuffers.get(previousBuffer);\n      if (id === undefined) {\n        throw new Error('previous buffer is not registered');\n      }\n      if (buffer === previousBuffer) {\n        LOG_DEBUG(\n            'verbose',\n            () => `[WebGPU] GpuDataManager.registerExternalBuffer(size=${originalSize}) => id=${\n                id}, buffer is the same, skip.`);\n        return id;\n      }\n      this.externalBuffers.delete(previousBuffer);\n    } else {\n      id = createNewGpuDataId();\n    }\n\n    this.storageCache.set(id, {gpuData: {id, type: GpuDataType.default, buffer}, originalSize});\n    this.externalBuffers.set(buffer, id);\n    LOG_DEBUG(\n        'verbose',\n        () => `[WebGPU] GpuDataManager.registerExternalBuffer(size=${originalSize}) => id=${id}, registered.`);\n    return id;\n  }\n\n  unregisterExternalBuffer(buffer: GPUBuffer): void {\n    const id = this.externalBuffers.get(buffer);\n    if (id !== undefined) {\n      this.storageCache.delete(id);\n      this.externalBuffers.delete(buffer);\n      LOG_DEBUG('verbose', () => `[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${id}`);\n    }\n  }\n\n  // eslint-disable-next-line no-bitwise\n  create(size: number, usage = GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST): GpuData {\n    const bufferSize = calcNormalizedBufferSize(size);\n\n    let gpuBuffer;\n    // Currently, only storage buffers are reused.\n    // eslint-disable-next-line no-bitwise\n    const isStorage = (usage & GPUBufferUsage.STORAGE) === GPUBufferUsage.STORAGE;\n    // eslint-disable-next-line no-bitwise\n    const isUniform = (usage & GPUBufferUsage.UNIFORM) === GPUBufferUsage.UNIFORM;\n    if (isStorage || isUniform) {\n      const freeBuffers = isStorage ? this.freeBuffers : this.freeUniformBuffers;\n      let buffers = freeBuffers.get(bufferSize);\n      if (!buffers) {\n        buffers = [];\n        freeBuffers.set(bufferSize, buffers);\n      }\n      if (buffers.length > 0) {\n        gpuBuffer = buffers.pop() as GPUBuffer;\n      } else {\n        // create gpu buffer\n        gpuBuffer = this.backend.device.createBuffer({size: bufferSize, usage});\n      }\n    } else {\n      // create gpu buffer\n      gpuBuffer = this.backend.device.createBuffer({size: bufferSize, usage});\n    }\n\n    const gpuData = {id: createNewGpuDataId(), type: GpuDataType.default, buffer: gpuBuffer};\n    this.storageCache.set(gpuData.id, {gpuData, originalSize: size});\n\n    LOG_DEBUG('verbose', () => `[WebGPU] GpuDataManager.create(size=${size}) => id=${gpuData.id}`);\n    return gpuData;\n  }\n\n  get(id: GpuDataId): GpuData|undefined {\n    return this.storageCache.get(id)?.gpuData;\n  }\n\n  release(id: GpuDataId): number {\n    const cachedData = this.storageCache.get(id);\n    if (!cachedData) {\n      throw new Error('releasing data does not exist');\n    }\n\n    LOG_DEBUG('verbose', () => `[WebGPU] GpuDataManager.release(id=${id}), gpuDataId=${cachedData.gpuData.id}`);\n\n    this.storageCache.delete(id);\n    this.buffersPending.push(cachedData.gpuData.buffer);\n    // cachedData.gpuData.buffer.destroy();\n\n    return cachedData.originalSize;\n  }\n\n  async download(id: GpuDataId, getTargetBuffer: () => Uint8Array): Promise<void> {\n    const cachedData = this.storageCache.get(id);\n    if (!cachedData) {\n      throw new Error('data does not exist');\n    }\n\n    await downloadGpuData(this.backend, cachedData.gpuData.buffer, cachedData.originalSize, getTargetBuffer);\n  }\n\n  refreshPendingBuffers(): void {\n    for (const buffer of this.buffersForUploadingPending) {\n      // upload buffer is only useful in the session creation time. So we don't need to reuse them in session running.\n      buffer.destroy();\n    }\n    this.buffersForUploadingPending = [];\n    for (const buffer of this.buffersPending) {\n      // eslint-disable-next-line no-bitwise\n      if ((buffer.usage & GPUBufferUsage.STORAGE) === GPUBufferUsage.STORAGE) {\n        // Put the pending buffer to freeBuffers list instead of really destroying it for buffer reusing.\n        this.freeBuffers.get(buffer.size)!.push(buffer);\n        // eslint-disable-next-line no-bitwise\n      } else if ((buffer.usage & GPUBufferUsage.UNIFORM) === GPUBufferUsage.UNIFORM) {\n        // Put the pending buffer to freeUniformBuffers list instead of really destroying it for buffer reusing.\n        this.freeUniformBuffers.get(buffer.size)!.push(buffer);\n      } else {\n        buffer.destroy();\n      }\n    }\n    this.buffersPending = [];\n  }\n\n  dispose() {\n    this.freeBuffers.forEach((buffers) => {\n      buffers.forEach(buffer => {\n        buffer.destroy();\n      });\n    });\n    this.freeUniformBuffers.forEach((buffers) => {\n      buffers.forEach(buffer => {\n        buffer.destroy();\n      });\n    });\n\n    this.storageCache.forEach((storage) => {\n      storage.gpuData.buffer.destroy();\n    });\n\n    this.storageCache = new Map();\n    this.freeBuffers = new Map();\n    this.freeUniformBuffers = new Map();\n  }\n}\n\nexport const createGpuDataManager = (...args: ConstructorParameters<typeof GpuDataManagerImpl>): GpuDataManager =>\n    new GpuDataManagerImpl(...args);\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nclass AttributeWithCacheKeyImpl {\n  constructor(attribute: Record<string, unknown>) {\n    Object.assign(this, attribute);\n  }\n\n  private _cacheKey: string;\n  public get cacheKey(): string {\n    if (!this._cacheKey) {\n      this._cacheKey =\n          Object.getOwnPropertyNames(this).sort().map(name => `${(this as Record<string, unknown>)[name]}`).join(';');\n    }\n    return this._cacheKey;\n  }\n}\n\nexport interface AttributeWithCacheKey {\n  readonly cacheKey: string;\n}\n\n/**\n * create a new object from the given attribute, and add a cacheKey property to it\n */\nexport const createAttributeWithCacheKey = <T extends Record<string, unknown>>(attribute: T): T&AttributeWithCacheKey =>\n    new AttributeWithCacheKeyImpl(attribute) as unknown as T & AttributeWithCacheKey;\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable no-param-reassign */\n\nexport class MatMulUtil {\n  /**\n   * Calculate the expected shape when matrix multiplication\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\n  }\n}\n\n\nexport class BroadcastUtil {\n  /**\n   * Calculate the expected shape when broadcasting 2 tensors\n   * @param a The shape of tensor A. Should be an array of positive integers\n   * @param b The shape of tensor B. Should be an array of positive integers\n   * @param isMatMul Whether the operation is MatMul\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcShape(adims: readonly number[], bdims: readonly number[], isMatMul = false): readonly number[]|undefined {\n    const arank = adims.length;\n    const brank = bdims.length;\n    if (arank === 0) {\n      return bdims;\n    }\n    if (brank === 0) {\n      return adims;\n    }\n    const crank = Math.max(adims.length, bdims.length);\n    const cdims = new Array<number>(crank);\n\n    // calculate the last 2 dimension if it is MatMul\n    if (isMatMul) {\n      if (arank < 2 || brank < 2) {\n        return undefined;\n      }\n      const cShapeMatMul =\n          MatMulUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\n      if (cShapeMatMul === undefined) {\n        return undefined;\n      }\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\n    }\n\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\n\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\n        return undefined;\n      }\n      cdims[crank - i] = Math.max(aLen, bLen);\n    }\n\n    return cdims;\n  }\n\n  /**\n   * Determine if a shape is unidirectional broadcastable to another shape\n   * @param shape The input shape\n   * @param finalShape The desired shape after broadcasting\n   */\n  static isValidBroadcast(shape: readonly number[], finalShape: readonly number[]): boolean {\n    // align shape to the right\n    const inputRank = shape.length;\n    const finalRank = finalShape.length;\n    if (inputRank > finalRank) {\n      return false;\n    }\n    for (let i = 1; i <= inputRank; i++) {\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n\nexport class ShapeUtil {\n  /**\n   * calculate the size (number of elements)\n   */\n  static size(dims: readonly number[]): number {\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\n  }\n\n  /**\n   * calculate the size (number of elements) from the given axis (inclusive)\n   */\n  static sizeFromDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\n  }\n\n  /**\n   * calculate the size (number of elements) to the given axis (exclusive)\n   */\n  static sizeToDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\n  }\n\n  /**\n   * calculate the size (number of elements) from and to the given axis [start, end)\n   */\n  static getSizeFromDimensionRange(dims: readonly number[], start: number, end: number): number {\n    let size = 1;\n    for (let i = start; i < end; i++) {\n      // safety check as this method is called by multiple other methods requiring size.\n      // size cannot be negative.\n      if (dims[i] < 0) {\n        throw new Error(\n            // eslint-disable-next-line max-len\n            'cannot get valid size from specified dimension range. Most likely the range contains negative values in them.');\n      }\n      size *= dims[i];\n    }\n    return size;\n  }\n\n  static computeStrides(dims: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [1];\n    }\n    const strides = new Array(rank);\n    strides[rank - 1] = 1;\n    strides[rank - 2] = dims[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * dims[i + 1];\n    }\n    return strides;\n  }\n\n  /**\n   * normailze axis of range [-r, r) into [0, r).\n   */\n  static normalizeAxis(axis: number, tensorRank: number): number {\n    if (axis < -tensorRank && axis >= tensorRank) {\n      throw new Error('unsupported axis for this operation.');\n    }\n    return axis < 0 ? axis + tensorRank : axis;\n  }\n\n  static normalizeAxes(axes: readonly number[], tensorRank?: number): number[] {\n    return axes.map(x => this.normalizeAxis(x, tensorRank ?? axes.length));\n  }\n\n  /**\n   * Sorts a given array based on the indices in the Perm array\n   * Used in Transpose\n   * @param a Array to be sorted such as dims or strides\n   * @param perm Perm given; if null a will be reversed\n   */\n  static sortBasedOnPerm(a: readonly number[], perm?: readonly number[]): readonly number[] {\n    if (perm) {\n      return perm.map((v) => a[v]);\n    } else {\n      return a.slice().reverse();\n    }\n  }\n\n  /**\n   * Pads a given shape according to the padding values\n   * @param dims shape of the Tensor to be padded\n   * @param pad pad values\n   */\n  static padShape(dims: readonly number[], pad: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\n  }\n\n  /**\n   * Determines if the two shapes are identical\n   * @param shape1\n   * @param shape2\n   */\n  static areEqual(shape1: readonly number[], shape2: readonly number[]): boolean {\n    if (shape1.length !== shape2.length) {\n      return false;\n    }\n    return shape1.every((v, i) => v === shape2[i]);\n  }\n}\n\nexport class PoolConvUtil {\n  /**\n   * Adjust the kernel, strides, pads to correct rank. Set to default value if not present\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   */\n  static adjustPoolAttributes(\n      isGlobalOperator: boolean, inputDims: readonly number[], kernelShape: number[], strides: number[],\n      dilations: number[], pads: number[]): void {\n    if (!isGlobalOperator && kernelShape.length !== inputDims.length - 2) {\n      throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');\n    }\n\n    if (isGlobalOperator) {\n      // adjust kernel shape to cover the input dims\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        if (dim >= kernelShape.length) {\n          kernelShape.push(inputDims[dim + 2]);\n        } else {\n          kernelShape[dim] = inputDims[dim + 2];\n        }\n      }\n    }\n\n    // adjust strides length to match kernel shape length\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < strides.length) {\n        if (strides[dim] < 0) {\n          throw new Error('strides should be greater than or equal to 1');\n        }\n      } else {\n        strides.push(1);\n      }\n    }\n\n    // adjust dilation value\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < dilations.length) {\n        if (dilations[dim] < 0) {\n          throw new Error('dilations should be greater than or equal to 1');\n        }\n      } else {\n        dilations.push(1);\n      }\n    }\n\n    // adjust pads length to match 2 * kernel shape length\n    for (let dim = 0; dim < kernelShape.length * 2; dim++) {\n      if (dim < pads.length) {\n        if (pads[dim] < 0) {\n          throw new Error('pad should be greater than or equal to 1');\n        }\n      } else {\n        pads.push(0);\n      }\n    }\n\n    // sanity checks for values in kernel shapes and pads\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (kernelShape[dim] <= 0) {\n        throw new Error('kernel shapes need to be greater than 0');\n      }\n\n      if (pads[dim] >= kernelShape[dim] || pads[dim + kernelShape.length] >= kernelShape[dim]) {\n        throw new Error('pads should be smaller than kernel');\n      }\n    }\n  }\n\n  // adjust pad values based on 'autoPad' attribute\n  static adjustPadsBasedOnAutoPad(\n      inputDims: readonly number[], strides: readonly number[], dilations: readonly number[],\n      kernelShape: readonly number[], pads: number[], isChannelLast: boolean, autoPad?: string): void {\n    if (!autoPad) {\n      return;\n    }\n\n    if (pads.length !== 2 * (inputDims.length - 2)) {\n      throw new Error('length of pads should be twice the length of data dimensions');\n    }\n\n    if (strides.length !== (inputDims.length - 2)) {\n      throw new Error('length of strides should be the length of data dimensions');\n    }\n\n    if (kernelShape.length !== (inputDims.length - 2)) {\n      throw new Error('length of kernel shapes should be the length of data dimensions');\n    }\n\n    for (let dim = 0; dim < inputDims.length - 2; dim++) {\n      PoolConvUtil.adjustPadAndReturnShape(\n          inputDims[dim + (isChannelLast ? 1 : 2)], strides[dim], dilations[dim], kernelShape[dim], pads, dim,\n          dim + inputDims.length - 2, autoPad);\n    }\n  }\n\n  /**\n   * Calculate the output shape for Pool ops based on input attributes. (Should be used only for Pool ops)\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computePoolOutputShape(\n      isGlobalOperator: boolean, inputDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0) {\n      throw new Error('input shape must be of size greater than 0');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], inputDims[1]];\n\n    PoolConvUtil.computeShapeHelper(\n        isGlobalOperator, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  /**\n   * Calculate the output shape for Conv op based on input attributes. (Should be used only for Conv op)\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param filterDims The filter tensor dimension. (inputs[1].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computeConvOutputShape(\n      inputDims: readonly number[], filterDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0 || filterDims.length <= 0) {\n      throw new Error('invalid input tensor dims or invalid filter tensor dims');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], filterDims[0]];\n\n    PoolConvUtil.computeShapeHelper(false, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  // will compute output shapes for data dimensions ONLY (i.e.) no batch size and channels\n  // called by computePoolOutputShape() and computeConvOutputShape()\n  // adjust pads based on 'autoPad' attribute prior to shape computation\n  private static computeShapeHelper(\n      isGlobalOperator: boolean, inputDims: readonly number[], outputDims: number[], strides: readonly number[],\n      dilations: readonly number[], kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (isGlobalOperator) {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(1);\n      }\n    } else {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(PoolConvUtil.adjustPadAndReturnShape(\n            inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n            autoPad));\n      }\n    }\n  }\n\n  // helper for computeShapeHelper() and adjustPadsBasedOnAutoPad()\n  // adjusts pad value for given 'autoPad' string and computes output shape along a particular dimension\n  private static adjustPadAndReturnShape(\n      inSize: number, stride: number, dilation: number, kernel: number, pads: number[], padHeadIndex: number,\n      padTailIndex: number, autoPad?: string): number {\n    const dkernel = dilation * (kernel - 1) + 1;\n    if (autoPad && autoPad !== 'NOTSET') {\n      switch (autoPad) {\n        case 'VALID':\n          pads[padHeadIndex] = 0;\n          pads[padTailIndex] = 0;\n          return Math.floor(((inSize - dkernel) / stride) + 1);\n        case 'SAME_LOWER':\n        case 'SAME_UPPER':\n          if (dilation !== 1) {\n            throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');\n          } else {\n            const legacyTargetSize = (inSize + stride - 1) / stride;\n            const padNeeded = (legacyTargetSize - 1) * stride + kernel - inSize;\n            pads[padHeadIndex] =\n                (autoPad === 'SAME_LOWER') ? Math.floor((padNeeded + 1) / 2) : Math.floor(padNeeded / 2);\n            pads[padTailIndex] = padNeeded - pads[padHeadIndex];\n            return Math.floor(((inSize + padNeeded - kernel) / stride) + 1);\n          }\n        default:\n          throw new Error('Unsupported AutoPad type');\n      }\n    } else {\n      return Math.floor(((inSize + pads[padHeadIndex] + pads[padTailIndex] - dkernel) / stride) + 1);\n    }\n  }\n}\n\nexport class GemmUtil {\n  // will make sure input shapes are compatible for this op\n  // and return back the shape of the output in the form of a tuple\n  // will throw exception if the input shapes are not compatible\n  static getShapeOfGemmResult(\n      leftShape: readonly number[], transLeft: boolean, rightShape: readonly number[], transRight: boolean,\n      biasShape?: readonly number[]): readonly number[] {\n    if (leftShape.length !== 2 || rightShape.length !== 2) {\n      throw new Error('shape need to be of size 2');\n    }\n\n    let M: number;\n    let K: number;\n    let N: number;\n\n    if (transLeft) {\n      M = leftShape[1];\n      K = leftShape[0];\n    } else {\n      M = leftShape[0];\n      K = leftShape[1];\n    }\n\n    let kDim = -1;\n\n    if (transRight) {\n      N = rightShape[0];\n      kDim = 1;\n    } else {\n      N = rightShape[1];\n      kDim = 0;\n    }\n\n    if (rightShape[kDim] !== K) {\n      throw new Error('dimension mismatch');\n    }\n\n    if (M <= 0 || N <= 0 || K <= 0) {\n      throw new Error('invalid shape specified');\n    }\n\n    if (biasShape && !BroadcastUtil.isValidBroadcast(biasShape, [M, N])) {\n      throw new Error('gemm: invalid bias shape for broadcast');\n    }\n\n    return [M, N, K];\n  }\n}\n\n\nexport const MIN_CLIP = -3.4028234663852886e+38;\nexport const MAX_CLIP = 3.4028234663852886e+38;\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {ShapeUtil} from '../../util';\nimport {ProgramUniform} from '../types';\n\n/**\n * constant value for a workgroup size.\n *\n * We definitely can do further optimization in future, but for now we use 64.\n *\n * rule of thumb: Use [a workgroup size of] 64 unless you know what GPU you are targeting or that your workload\n *                needs something different.\n *\n * from: https://surma.dev/things/webgpu/\n **/\nexport const WORKGROUP_SIZE = 64;\n\ninterface IndicesHelperTypes {\n  /**\n   * WGSL type of indices expression\n   */\n  readonly indices: string;\n\n  /**\n   * WGSL type of a value\n   */\n  readonly value: string;\n\n  /**\n   * WGSL type of storage type representing a value\n   *\n   * This is usually the same to `value`, but for some type (eg. bool), we need to use `u32` as storage type for\n   * value type `vec4<bool>`\n   */\n  readonly storage: string;\n\n  /**\n   * tensor type as represented in TensorView\n   */\n  readonly tensor: number;\n}\n\n/**\n * A helper class for generating WGSL code for manipulating indices and data for a shader's input or output.\n *\n * This class is designed to offer a unified way to generate WGSL code for manipulating indices and data for a shader's\n * input or output.\n *\n * The following is a list of terminologies used in this class:\n * - `offset`: a uint32 value representing the offset of an element in the data buffer.\n * - `indices`: an abstraction of a multi-dimensional array's indices representing the data's index on each dimension.\n * - `value`: a value of a data element.\n *\n * Users are expected to create an instance of this class for each shader's input or output, and use the instance to\n * generate WGSL code for manipulating indices and data. The following 2 exported functions are for users to call to\n * create an instance of an indices helper:\n * - `inputVariable()`: create an indices helper instance for an input.\n * - `outputVariable()`: create an indices helper instance for an output.\n *\n * An indices helper instance contains helper functions for the following operations:\n * - access readonly basic information, including: `name`(the name of the input or output), `usage`(whether it's an\n * input or an output) and `shape`(the passed in shape).\n * - `type`: access readonly type information, including: `indices`(the type of indices), `value`(the type of value at\n * runtime), `storage`(the type of value at storage) and `tensor`(the tensor type as represented in TensorView).\n * - generate WGSL code for getting indices from offset. Use `offsetToIndices()` for WGSL code snippet to calculate\n * indices from offset, and use `indicesToOffset()` for WGSL code snippet to calculate offset from indices.\n * - to manipulate an instance of indices, use `setIndices()` and `getIndices()` to set and get the indices on an\n * indices variable.\n * - to manipulate data, use `set()`/`get()` to access data at the given indices from parameter list, use\n * `setByIndices()`/`getByIndices()` to access data at the given indices from an indices variable, and use\n * `setByOffset()`/`getByOffset()` to access data at the given offset.\n * - `impl`: get WGSL code of function implementation for the util functions mentioned above.\n */\nexport interface IndicesHelper {\n  /**\n   * get WGSL code of function implementation for the util functions.\n   *\n   */\n  readonly impl: () => string;\n\n  /**\n   * get type info\n   */\n  readonly type: IndicesHelperTypes;\n\n  /**\n   * WGSL code of a expression for getting indices from offset.\n   *\n   * @param varOffset - a u32 expression representing the offset.\n   *\n   * @returns an `type.indices` expression\n   */\n  readonly offsetToIndices: (varOffset: string) => string;\n\n  /**\n   * WGSL code of an `u32` expression for getting offset from indices.\n   *\n   * @param varIndices - a `type.indices` expression representing the indices.\n   *\n   * @returns an `u32` expression\n   */\n  readonly indicesToOffset: (varIndices: string) => string;\n\n  /**\n   * WGSL code of an `u32` expression for getting original offset from broadcasted indices.\n   *\n   * @param varIndices - a `type.indices` expression representing the output indices.\n   * @param output - output IndicesHelper.\n   *\n   * @returns an `u32` expression\n   */\n  readonly broadcastedIndicesToOffset: (varIndices: string, output: IndicesHelper) => string;\n\n  /**\n   * WGSL code of generating an indices literal\n   *\n   * @param init - initial value.\n   */\n  readonly indices: (...init: ReadonlyArray<number|string>) => string;\n\n  /**\n   * WGSL code of a statement for setting indices.\n   *\n   * @param varIndices - a variable name for the indices.\n   * @param idx - the index of the indices to set. can be a number or a string (WGSL `u32` expression).\n   * @param value - the value to set. can be a number or a string (WGSL `u32` expression).\n   *\n   * @returns a WGSL statement\n   */\n  readonly indicesSet: (varIndices: string, idx: number|string, value: number|string) => void;\n\n  /**\n   * WGSL code of an `u32` expression for getting indices.\n   *\n   * @param varIndices - a variable name for the indices.\n   * @param idx - the index of the indices to get. can be a number or a string (WGSL `u32` expression).\n   *\n   * @returns an `u32` expression\n   */\n  readonly indicesGet: (varIndices: string, idx: number|string) => string;\n\n  /**\n   * WGSL code for a statement for setting data at the given indices.\n   *\n   * @param indicesAndValue - an array of numbers or strings (WGSL `u32` expression) representing the indices, followed\n   *     by the value to set. This array should have exactly `shape.length + 1` elements.\n   */\n  readonly set: (...indicesAndValue: ReadonlyArray<number|string>) => string;\n\n  /**\n   * WGSL code for a statement for setting data at the given indices variable.\n   *\n   * @param varIndices - a variable name for the indices.\n   * @param value - the value to set. should be a WGSL expression.\n   */\n  readonly setByIndices: (varIndices: string, value: string) => string;\n\n  /**\n   * WGSL code for a statement for setting data at the given offset.\n   *\n   * @param offset - a number or a string (WGSL `u32` expression) representing the offset.\n   * @param value - the value to set. should be a WGSL expression.\n   */\n  readonly setByOffset: (offset: number|string, value: string) => string;\n\n  /**\n   * WGSL code for an expression for getting data at the given indices.\n   *\n   * @param indices - an array of numbers or strings (WGSL `u32` expression) representing the indices.\n   */\n  readonly get: (...indices: ReadonlyArray<number|string>) => string;\n\n  /**\n   * WGSL code for an expression for getting data at the given indices variable.\n   *\n   * @param varIndices - a variable name for the indices.\n   */\n  readonly getByIndices: (varIndices: string) => string;\n\n  /**\n   * WGSL code for an expression for getting data at the given offset.\n   *\n   * @param offset - a number or a string (WGSL `u32` expression) representing the offset.\n   */\n  readonly getByOffset: (offset: number|string) => string;\n\n  /**\n   * name of the data variable\n   */\n  readonly name: string;\n\n  /**\n   * whether the helper is for an input or an output.\n   */\n  readonly usage: 'input'|'output';\n\n  /**\n   * the rank of the input or output.\n   */\n  readonly rank: number;\n\n  /**\n   * a string representing the variable name for the shape of the input or output.\n   */\n  readonly shape: string;\n\n  /**\n   * a string representing the variable name for the strides of the input or output.\n   */\n  readonly strides: string;\n}\n\nconst getWgslMappedType = (type: number, components: 1|2|3|4): string|[string, string] => {\n  if (components === 3) {\n    throw new Error('vec3 has same alignment as vec4, use vec4 instead');\n  }\n\n  // return type is [ storage type, runtime type ] or a single string for both\n  switch (type) {\n    case DataType.float16:\n      return components > 1 ? `vec${components}<f16>` : 'f16';\n    case DataType.float:\n      return components > 1 ? `vec${components}<f32>` : 'f32';\n    case DataType.int32:\n      return components > 1 ? `vec${components}<i32>` : 'i32';\n    case DataType.uint32:\n      return components > 1 ? `vec${components}<u32>` : 'u32';\n    case DataType.int64:\n      if (components > 1) {\n        throw new Error('currently not supported vecX of uint64 yet');\n      }\n      return ['vec2<u32>', 'i32'];\n    case DataType.uint64:\n      if (components > 1) {\n        throw new Error('currently not supported vecX of uint64 yet');\n      }\n      return ['vec2<u32>', 'u32'];\n    case DataType.bool:\n      if (components !== 4) {\n        throw new Error('bool must be vec4');\n      }\n      return ['u32', 'vec4<bool>'];\n\n    default:\n      throw new Error(`Unknown data type: ${type}`);\n  }\n};\n\nexport const tensorTypeToWsglStorageType = (type: DataType, components: 1|2|3|4 = 1) => {\n  const mappedType = getWgslMappedType(type, components);\n  return typeof mappedType === 'string' ? mappedType : mappedType[0];\n};\n\nexport const tensorTypeToWsglValueType = (type: DataType, components: 1|2|3|4 = 1) => {\n  const mappedType = getWgslMappedType(type, components);\n  return typeof mappedType === 'string' ? mappedType : mappedType[1];\n};\n\nexport const createTensorShapeVariables = (dims: readonly number[]):\n    ProgramUniform[] => [{type: 'uint32', data: dims}, {type: 'uint32', data: ShapeUtil.computeStrides(dims)}];\n\n/**\n * A helper function to get maximum vector size for specified data length\n * @param size\n */\nexport const getMaxComponents = (size: number) => {\n  // we cannot use vec3 type since it has alignment of 16 bytes\n  if (size % 4 === 0) {\n    return 4;\n  } else if (size % 2 === 0) {\n    return 2;\n  }\n\n  return 1;\n};\n\n/**\n * A helper function that initializes variable as a scalar or vector. e.g. f32(0) or vec4f(0,0,0,0)\n * @param dataType\n * @param components\n * @param value\n */\nexport const fillVector = (dataType = 'f32', components?: number, value = '0') => {\n  if (!components || components === 1) {\n    return `${dataType}(${value})`;\n  }\n\n  return `vec${components}<${dataType}>(${value})`;\n};\n\n/**\n * A helper function that casts value or vector to f32\n * @param dataType\n * @param components\n * @param value\n */\nexport const castToF32 = (dataType: string, components: number, value: string) => {\n  if (dataType === 'f32') {\n    return value;\n  }\n  if (components === 1) {\n    return `f32(${value})`;\n  }\n\n  return `vec${components}f(${value})`;\n};\n\n/**\n * A helper function that returns scalar or sums all components of a vector\n * @param name\n * @param components\n */\nexport const sumVector = (name: string, components: number) => {\n  if (components === 4) {\n    return `(${name}.x + ${name}.y + ${name}.z + ${name}.w)`;\n  } else if (components === 2) {\n    return `(${name}.x + ${name}.y)`;\n  } else if (components === 3) {\n    return `(${name}.x + ${name}.y + ${name}.z)`;\n  }\n\n  return name;\n};\n\n/**\n * A helper function to get a IndicesHelper for a given input or output.\n *\n * @param name - the name of the input or output.\n * @param tensorType - the tensor type of the input or output.\n * @param shapeOrRank - the tensor shape or the rank of the input or output.\n * @param isInput - whether the helper is for an input or an output.\n * @param components - indicates the number of components of each element. 1 for scalar, 2 for vec2, 3 for vec3, 4 for\n *    vec4.\n */\nconst createIndicesHelper =\n    (name: string, tensorType: number, shapeOrRank: number|readonly number[], isInput: boolean,\n     components: 1|2|3|4): IndicesHelper => {\n      const useUniform = typeof shapeOrRank === 'number';\n      const rank = useUniform ? shapeOrRank : shapeOrRank.length;\n      const rankIdentity = [...new Array(rank).keys()];\n      const indicesType = rank < 2 ? 'u32' : rank <= 4 ? `vec${rank}<u32>` : `array<u32, ${rank}>`;\n      const mappedType = getWgslMappedType(tensorType, components);\n      const valueType = typeof mappedType === 'string' ? mappedType : mappedType[1];\n      const storageType = typeof mappedType === 'string' ? mappedType : mappedType[0];\n      const type = {indices: indicesType, value: valueType, storage: storageType, tensor: tensorType};\n\n      const normalizeDim = (dim: number|string): string => typeof dim === 'string' ? dim : `${dim}u`;\n\n      const implementationUsed = {\n        offsetToIndices: false,\n        indicesToOffset: false,\n        broadcastedIndicesToOffset: false,\n        set: false,\n        setByIndices: false,\n        get: false,\n        getByIndices: false,\n      };\n\n      const uniformPrefix = useUniform ? 'uniforms.' : '';\n      const shape = `${uniformPrefix}${name}_shape`;\n      const strides = `${uniformPrefix}${name}_strides`;\n      let o2iSnippet = '';\n      for (let i = 0; i < rank - 1; i++) {\n        o2iSnippet += `\n    let dim${i} = current / ${strides}[${i}];\n    let rest${i} = current % ${strides}[${i}];\n    indices[${i}] = dim${i};\n    current = rest${i};\n    `;\n      }\n      o2iSnippet += `indices[${rank - 1}] = current;`;\n\n      const offsetToIndicesImplementation = rank < 2 ? '' : `\n  fn o2i_${name}(offset: u32) -> ${type.indices} {\n    var indices: ${type.indices};\n    var current = offset;\n    ${o2iSnippet}\n    return indices;\n  }`;\n\n      const offsetToIndices = (varOffset: string) => {\n        implementationUsed.offsetToIndices = true;\n        return rank < 2 ? varOffset : `o2i_${name}(${varOffset})`;\n      };\n\n      const offsets: string[] = [];\n      if (rank >= 2) {\n        for (let i = rank - 1; i >= 0; i--) {\n          offsets.push(`${strides}[${i}] * (indices[${i}])`);\n        }\n      }\n\n      const indicesToOffsetImplementation = rank < 2 ? '' : `\n  fn i2o_${name}(indices: ${type.indices}) -> u32 {\n    return ${offsets.join('+')};\n  }`;\n\n      const indicesToOffset = (varIndices: string) => {\n        implementationUsed.indicesToOffset = true;\n        return rank < 2 ? varIndices : `i2o_${name}(${varIndices})`;\n      };\n\n      const indices = (...init: ReadonlyArray<number|string>) =>\n          rank === 0 ? '0u' : `${type.indices}(${init.map(normalizeDim).join(',')})`;\n\n      const indicesGet = (varIndices: string, idx: number|string) => {\n        if (rank < 2) {\n          return `${varIndices}`;\n        } else {\n          return `${varIndices}[${idx}]`;\n        }\n      };\n\n      const indicesSet = (varIndices: string, idx: number|string, value: string) => {\n        if (rank < 2) {\n          return `${varIndices}=${value};`;\n        } else {\n          return `${varIndices}[${idx}]=${value};`;\n        }\n      };\n\n      const broadcastedIndicesToOffsetImplementation: {[key: string]: string} = {};\n      const broadcastedIndicesToOffset = (varIndices: string, output: IndicesHelper) => {\n        implementationUsed.broadcastedIndicesToOffset = true;\n        const implKey = `${output.name}broadcastedIndicesTo${name}Offset`;\n        if (implKey in broadcastedIndicesToOffsetImplementation) {\n          return `${implKey}(${varIndices})`;\n        }\n        const offsets = [];\n        for (let i = rank - 1; i >= 0; i--) {\n          const idx = output.indicesGet('outputIndices', i + output.rank - rank);\n          offsets.push(`${indicesGet(strides, i)} * (${idx} % ${indicesGet(shape, i)})`);\n        }\n        broadcastedIndicesToOffsetImplementation[implKey] =\n            `fn ${implKey}(outputIndices: ${output.type.indices}) -> u32 {\n             return ${offsets.length > 0 ? offsets.join('+') : '0u'};\n           }`;\n\n        return `${implKey}(${varIndices})`;\n      };\n\n      const setByOffset = (offset: number|string, value: string) => (() => {\n        if (type.storage === type.value) {\n          return `${name}[${offset}]=${value};`;\n        } else if (type.storage === 'vec2<u32>' && type.value === 'i32') {\n          // int64, components === 1\n          return `${name}[${offset}]=vec2<u32>(u32(${value}), select(0u, 0xFFFFFFFFu, ${value} < 0));`;\n        } else if (type.storage === 'vec2<u32>' && type.value === 'u32') {\n          // uint64, components === 1\n          return `${name}[${offset}]=vec2<u32>(u32(${value}), 0u);`;\n        } else if (type.storage === 'u32' && type.value === 'vec4<bool>') {\n          // bool, components === 4\n          return `${name}[${offset}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${value}));`;\n        } else {\n          throw new Error(`not supported combination of storage type ${type.storage} and value type ${type.value} yet`);\n        }\n      })();\n\n      const getByOffset = (offset: number|string) => (() => {\n        if (type.storage === type.value) {\n          return `${name}[${offset}]`;\n        } else if (type.storage === 'vec2<u32>' && type.value === 'i32') {\n          // int64, components === 1\n          return `i32(${name}[${offset}].x)`;\n        } else if (type.storage === 'vec2<u32>' && type.value === 'u32') {\n          // uint64, components === 1\n          return `u32(${name}[${offset}].x)`;\n        } else if (type.storage === 'u32' && type.value === 'vec4<bool>') {\n          // bool, components === 4\n          return `vec4<bool>(bool(${name}[${offset}] & 0xFFu), bool(${name}[${offset}] & 0xFF00u), bool(${name}[${\n              offset}] & 0xFF0000u), bool(${name}[${offset}] & 0xFF000000u))`;\n        } else {\n          throw new Error(`not supported combination of storage type ${type.storage} and value type ${type.value} yet`);\n        }\n      })();\n\n      const getByIndicesImplementation = rank < 2 ? '' : `\n  fn get_${name}ByIndices(indices: ${type.indices}) -> ${valueType} {\n    return ${getByOffset(`i2o_${name}(indices)`)};\n  }`;\n\n      const getImplementation = rank < 2 ? '' : (() => {\n        const functionParams = rankIdentity.map(i => `d${i}: u32`).join(', ');\n        const dimsParams = rankIdentity.map(i => `d${i}`).join(', ');\n        return `\n  fn get_${name}(${functionParams}) -> ${valueType} {\n    return get_${name}ByIndices(${indices(dimsParams)});\n  }`;\n      })();\n\n      const get = (...indices: ReadonlyArray<number|string>) => {\n        if (indices.length !== rank) {\n          throw new Error(`indices length must be ${rank}`);\n        }\n\n        const normalizedIndices = indices.map(normalizeDim).join(',');\n\n        if (rank === 0) {\n          return getByOffset('0u');\n        } else if (rank === 1) {\n          return getByOffset(normalizedIndices[0]);\n        } else {\n          implementationUsed.get = true;\n          implementationUsed.getByIndices = true;\n          implementationUsed.indicesToOffset = true;\n          return `get_${name}(${normalizedIndices})`;\n        }\n      };\n\n      const getByIndices = (varIndices: string) => {\n        if (rank < 2) {\n          return getByOffset(varIndices);\n        } else {\n          implementationUsed.getByIndices = true;\n          implementationUsed.indicesToOffset = true;\n          return `get_${name}ByIndices(${varIndices})`;\n        }\n      };\n\n      const setByIndicesImplementation = rank < 2 ? '' : `\n  fn set_${name}ByIndices(indices: ${type.indices}, value: ${valueType}) {\n    ${setByOffset(`i2o_${name}(indices)`, 'value')}\n  }`;\n\n      const setImplementation = rank < 2 ? '' : (() => {\n        const functionParams = rankIdentity.map(i => `d${i}: u32`).join(', ');\n        const dimsParams = rankIdentity.map(i => `d${i}`).join(', ');\n        return `\n  fn set_${name}(${functionParams}, value: ${valueType}) {\n    set_${name}ByIndices(${indices(dimsParams)}, value);\n  }`;\n      })();\n\n      const set = (...indicesAndValue: ReadonlyArray<number|string>) => {\n        if (indicesAndValue.length !== rank + 1) {\n          throw new Error(`indices length must be ${rank}`);\n        }\n        const value = indicesAndValue[rank];\n        if (typeof value !== 'string') {\n          throw new Error('value must be string');\n        }\n\n        const normalizedIndices = indicesAndValue.slice(0, rank).map(normalizeDim).join(',');\n\n        if (rank === 0) {\n          return setByOffset('0u', value);\n        } else if (rank === 1) {\n          return setByOffset(normalizedIndices[0], value);\n        } else {\n          implementationUsed.set = true;\n          implementationUsed.setByIndices = true;\n          implementationUsed.indicesToOffset = true;\n          return `set_${name}(${normalizedIndices}, ${value})`;\n        }\n      };\n\n      const setByIndices = (varIndices: string, value: string) => {\n        if (rank < 2) {\n          return setByOffset(varIndices, value);\n        } else {\n          implementationUsed.setByIndices = true;\n          implementationUsed.indicesToOffset = true;\n          return `set_${name}ByIndices(${varIndices}, ${value});`;\n        }\n      };\n\n      const impl = () => {\n        const impls = [];\n        if (!useUniform) {\n          impls.push(`const ${shape} = ${type.indices}(${shapeOrRank.join(',')});`);\n          impls.push(`const ${strides} = ${type.indices}(${ShapeUtil.computeStrides(shapeOrRank).join(',')});`);\n        }\n        if (implementationUsed.offsetToIndices) {\n          impls.push(offsetToIndicesImplementation);\n        }\n        if (implementationUsed.indicesToOffset) {\n          impls.push(indicesToOffsetImplementation);\n        }\n        if (implementationUsed.broadcastedIndicesToOffset) {\n          Object.values(broadcastedIndicesToOffsetImplementation).forEach(impl => impls.push(impl));\n        }\n        if (implementationUsed.set) {\n          impls.push(setImplementation);\n        }\n        if (implementationUsed.setByIndices) {\n          impls.push(setByIndicesImplementation);\n        }\n        if (implementationUsed.get) {\n          impls.push(getImplementation);\n        }\n        if (implementationUsed.getByIndices) {\n          impls.push(getByIndicesImplementation);\n        }\n        return impls.join('\\n');\n      };\n\n      return {\n        impl,\n        type,\n        offsetToIndices,\n        indicesToOffset,\n        broadcastedIndicesToOffset,\n        indices,\n        indicesGet,\n        indicesSet,\n        set,\n        setByOffset,\n        setByIndices,\n        get,\n        getByOffset,\n        getByIndices,\n        // isVec4,\n        usage: isInput ? 'input' : 'output',\n        name,\n        strides,\n        shape,\n        rank\n      };\n    };\n\n/**\n * Create a IndicesHelper for an input.\n *\n * @param name - the name of the input.\n * @param type - the tensor type of the input.\n * @param shapeOrRank - the tensor shape or the rank of the input.\n * @param components - the number of components of the input. available values are 1, 2, 3, 4. default is 1.\n * @returns an IndicesHelper for the input.\n */\nexport const inputVariable =\n    (name: string, type: number, shapeOrRank: number|readonly number[], components: 1|2|3|4 = 1): IndicesHelper =>\n        createIndicesHelper(name, type, shapeOrRank, true, components);\n\n/**\n * Create a IndicesHelper for an output.\n *\n * @param name - the name of the output.\n * @param type - the tensor type of the output.\n * @param shapeOrRank - the tensor shape or the rank of the output.\n * @param components - the number of components of the output. available values are 1, 2, 3, 4. default is 1.\n * @returns an IndicesHelper for the output.\n */\nexport const outputVariable =\n    (name: string, type: number, shapeOrRank: number|readonly number[], components: 1|2|3|4 = 1): IndicesHelper =>\n        createIndicesHelper(name, type, shapeOrRank, false, components);\n\n/**\n * A ShaderHelper is a helper class for generating WGSL code.\n */\nexport interface ShaderHelper {\n  /**\n   * A helper function to generate the start of main function in WGSL source code.\n   *\n   * @example\n   * const getShaderSource = (shaderHelper: ShaderHelper) => `\n   *  ...\n   *\n   *  ${shaderHelper.mainStart()}\n   *    // your code here inside main() function\n   *    ...\n   *  }\n   * `;\n   *\n   * @param workgroupSize - an optional workgroup size. default is WORKGROUP_SIZE.\n   */\n  mainStart(workgroupSize?: number|[number, number, number]): string;\n\n  /**\n   * A helper function to generate the code snippet for guarding against out-of-bounds size.\n   *\n   * @example\n   * const getShaderSource = (shaderHelper: ShaderHelper) => `\n   *  ...\n   *\n   *  ${shaderHelper.mainStart()}\n   *    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n   *\n   *    // your code here inside main() function\n   *    ...\n   *  }\n   * `;\n   *\n   * @param size - the size of the data to guard against. can be a number or a string (WGSL `u32` expression).\n   */\n  guardAgainstOutOfBoundsWorkgroupSizes(size: unknown): string;\n\n  /**\n   * A helper function to generate the code snippet for declaring multiple inputs or outputs.\n   *\n   * @param variables - an array of IndicesHelper for the variables.\n   */\n  declareVariables(...variables: IndicesHelper[]): string;\n\n  /**\n   * A helper function to register one uniform. Can be called multiple times to register multiple uniforms.\n   */\n  registerUniform(name: string, type: string): ShaderHelper;\n}\n\nclass ShaderHelperImpl implements ShaderHelper {\n  constructor(private normalizedDispatchGroup: [number, number, number]) {}\n\n  guardAgainstOutOfBoundsWorkgroupSizes(size: number|string): string {\n    // Guard against out-of-bounds work group sizes\n    const sizeInCode = typeof size === 'number' ? `${size}u` : size;\n    return `if (global_idx >= ${sizeInCode}) { return; }`;\n  }\n\n  mainStart(workgroupSize: number|[number, number, number] = WORKGROUP_SIZE) {\n    const workgroupSizeX = typeof workgroupSize === 'number' ? workgroupSize : workgroupSize[0];\n    const workgroupSizeY = typeof workgroupSize === 'number' ? 1 : workgroupSize[1];\n    const workgroupSizeZ = typeof workgroupSize === 'number' ? 1 : workgroupSize[2];\n\n    const is1DimensionDispatch = this.normalizedDispatchGroup[1] === 1 && this.normalizedDispatchGroup[2] === 1;\n    const paramList = is1DimensionDispatch ? `@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>` :\n                                             `@builtin(local_invocation_index) local_index : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>`;\n    const globalIdxDefinition = is1DimensionDispatch ?\n        'let global_idx = global_id.x;' :\n        `let global_idx = (workgroup_id.z * ${this.normalizedDispatchGroup[0] * this.normalizedDispatchGroup[1]}u +\n          workgroup_id.y * ${this.normalizedDispatchGroup[0]}u + workgroup_id.x) * ${\n            workgroupSizeX * workgroupSizeY * workgroupSizeZ}u + local_index;`;\n\n    return `@compute @workgroup_size(${workgroupSizeX}, ${workgroupSizeY}, ${workgroupSizeZ})\n  fn main(${paramList}) {\n    ${globalIdxDefinition}\n  `;\n  }\n\n  private declareVariable(variable: IndicesHelper, bindingIndex: number): string {\n    this.indicesHelpers.push(variable);\n    if (variable.shape.startsWith('uniforms.')) {\n      this.uniforms.push({name: variable.shape.replace('uniforms.', ''), type: variable.type.indices});\n    }\n    if (variable.strides.startsWith('uniforms.')) {\n      this.uniforms.push({name: variable.strides.replace('uniforms.', ''), type: variable.type.indices});\n    }\n    const access = variable.usage === 'input' ? 'read' : 'read_write';\n    const storageType = variable.type.storage;\n    return `@group(0) @binding(${bindingIndex}) var<storage, ${access}> ${variable.name}: array<${storageType}>;`;\n  }\n\n  declareVariables(...variables: IndicesHelper[]): string {\n    return variables.map(v => this.declareVariable(v, this.variableIndex++)).join('\\n');\n  }\n\n  registerUniform(name: string, type: string): ShaderHelper {\n    this.uniforms.push({name, type});\n    return this;\n  }\n\n  private indicesHelpers: IndicesHelper[] = [];\n  private uniforms: Array<{name: string; type: string}> = [];\n  private uniformDeclaration(): string {\n    if (this.uniforms.length === 0) {\n      return '';\n    }\n\n    const uniformSnippets: string[] = [];\n    for (const {name, type} of this.uniforms) {\n      uniformSnippets.push(`${name}:${type}`);\n    }\n\n    return `\n      struct Uniforms { ${uniformSnippets.join(', ')} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`;\n  }\n  private variableIndex = 0;\n\n  /**\n   * Get additional implementation that needs to be added to the shader source.\n   */\n  get additionalImplementations(): string {\n    return this.uniformDeclaration() + this.indicesHelpers.map(i => i.impl()).join('\\n');\n  }\n}\n\nexport const createShaderHelper = (dispatchGroup: [number, number, number]) => new ShaderHelperImpl(dispatchGroup);\n\n/**\n * This function comes from https://github.com/tensorflow/tfjs/blob/master/tfjs-core/src/ops/broadcast_util.ts#L18-L40\n * Returns the dimensions in the input shape that are broadcasted to\n * produce the provided output shape.\n *\n * The returned dimensions are 0-indexed and sorted. An example:\n * inShape = [4, 1, 3]\n * outShape = [5, 4, 3, 3]\n * result = [1]. Dimension 1 (2nd dimension of input) gets broadcasted 1 => 3.\n */\nexport const getBroadcastDims = (inShape: readonly number[], outShape: readonly number[]): number[] => {\n  const inRank = inShape.length;\n  const dims: number[] = [];\n  for (let i = 0; i < inRank; i++) {\n    const dim = inRank - 1 - i;\n    const a = inShape[dim] || 1;\n    const b = outShape[outShape.length - 1 - i] || 1;\n    if (b > 1 && a === 1) {\n      dims.unshift(dim);\n    }\n  }\n  return dims;\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor-view';\nimport {ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, ProgramInfo, ProgramShaderCacheInfo} from '../types';\n\nimport {IndicesHelper, inputVariable, outputVariable, ShaderHelper} from './common';\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length === 0 || inputs.length > 2) {\n    throw new Error('Reduce op requires 1 or 2 inputs.');\n  }\n\n  if (inputs.length === 2 && inputs[1].dims.length !== 1) {\n    throw new Error('Invalid axes input dims.');\n  }\n};\n\nexport interface ReduceAttributes extends AttributeWithCacheKey {\n  keepDims: boolean;\n  noopWithEmptyAxes: boolean;\n  axes: number[];\n}\n\nexport type ReduceOp =\n    (input: IndicesHelper, output: IndicesHelper,\n     axes: readonly number[]) => [string, string, string, string, ...string[]];\n\nconst noOp: ReduceOp = (input) => ['', '', `var value = ${input.getByOffset('inputOffset')};`, ''];\nexport const createReduceProgramInfo =\n    (name: string, shaderCache: ProgramShaderCacheInfo, inputs: readonly TensorView[], reduceOp: ReduceOp,\n     axesInput: number[], outputDataType: DataType, keepDims = false, noopWithEmptyAxes = false): ProgramInfo => {\n      const outputShape: number[] = [];\n      const inputShape = inputs[0].dims;\n\n      const axes = ShapeUtil.normalizeAxes(axesInput, inputs[0].dims.length);\n      const reduceOnAllAxes = !noopWithEmptyAxes && axes.length === 0;\n      inputShape.forEach((d, i) => {\n        if (reduceOnAllAxes || axes.indexOf(i) >= 0) {\n          if (keepDims) {\n            outputShape.push(1);\n          }  // else { // skip this axis}\n        } else {\n          outputShape.push(d);\n        }\n      });\n\n      const idxCopy: string[] = [];  // copy output indexes to input indexes\n\n      const input = inputVariable('_A', inputs[0].dataType, inputShape);\n      const output = outputVariable('output', outputDataType, outputShape);\n      const ops = reduceOp(input, output, axes);\n      const inputOffsetAssignment = `inputOffset = ${input.indicesToOffset('inputIndices')};`;\n      const initinputOffsetLet = `let ${inputOffsetAssignment};`;\n      const initinputOffsetVar = `var ${inputOffsetAssignment};`;\n      const initinputOffset = (ops[1] === '') ? '' : initinputOffsetVar;\n      let reduceOps = ((ops[1] === '') ? initinputOffsetLet : inputOffsetAssignment) + '\\n' + ops[2];\n\n      for (let k = 0, l = 0; k < inputs[0].dims.length; k++) {\n        // if this axis is reduced\n        if (reduceOnAllAxes || axes.indexOf(k) >= 0) {\n          if (keepDims) {\n            l++;\n          }\n          // loop over the d-th axis\n          reduceOps = `for(var j${k}: u32 = 0; j${k} < ${inputs[0].dims[k]}; j${k}++) {\n                ${ops[2].includes('lastIndex') ? `let lastIndex = j${k};` : ''}\n                ${input.indicesSet('inputIndices', k, `j${k}`)}\n                ${reduceOps}\n              }`;\n        } else {\n          idxCopy.push(`${input.indicesSet('inputIndices', k, output.indicesGet('outputIndices', l))};`);\n          l++;\n        }\n      }\n\n      const outputSize = ShapeUtil.size(outputShape);\n      const getShaderSource = (shaderHelper: ShaderHelper) => `\n        ${shaderHelper.declareVariables(input, output)}\n\n        ${shaderHelper.mainStart()}\n          ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n          var inputIndices: ${input.type.indices};\n          let outputIndices = ${output.offsetToIndices('global_idx')};\n\n          ${idxCopy.join('\\n')}\n          ${ops[0]}       // init ops for reduce max/min\n          ${initinputOffset}\n          ${ops[1]}\n          ${reduceOps}\n          ${ops[3]}\n          ${ops.length === 4 ? output.setByOffset('global_idx', 'value') : ops.slice(4).join('\\n')}\n        }`;\n\n      return {\n        name,\n        shaderCache,\n        getShaderSource,\n        getRunData: () => ({\n          outputs: [{dims: outputShape, dataType: outputDataType}],\n          dispatchGroup: {x: Math.ceil(outputSize / 64 /* workgroup size */)}\n        }),\n      };\n    };\n\nconst createReduceAttributesFromInputs =\n    (inputs: readonly TensorView[], attributes: ReduceAttributes): ReduceAttributes => {\n      const axes: number[] = [];\n      if (inputs[1].dims[0] > 0) {\n        inputs[1].getBigInt64Array().forEach(v => axes.push(Number(v)));\n      }\n      return createAttributeWithCacheKey(\n          {axes, keepDims: attributes.keepDims, noopWithEmptyAxes: attributes.noopWithEmptyAxes});\n    };\n\nconst runReduceProgram =\n    (context: ComputeContext, name: string, attributes: ReduceAttributes, reduceOp: ReduceOp): void => {\n      const inputs = context.inputs;\n      const updatedAttributes: ReduceAttributes =\n          inputs.length === 1 ? attributes : createReduceAttributesFromInputs(inputs, attributes);\n\n      context.compute(\n          createReduceProgramInfo(\n              name, {hint: updatedAttributes.cacheKey}, [inputs[0]],\n              updatedAttributes.noopWithEmptyAxes && updatedAttributes.axes.length === 0 ? noOp : reduceOp,\n              updatedAttributes.axes, inputs[0].dataType, updatedAttributes.keepDims,\n              updatedAttributes.noopWithEmptyAxes),\n          {inputs: [0]});\n    };\n\nexport const reduceLogSum = (context: ComputeContext, attributes: ReduceAttributes): void => {\n  validateInputs(context.inputs);\n  const reduceOp: ReduceOp = (input, output) =>\n      [`var value = ${output.type.storage}(0);`,\n       '',\n       `value += ${input.getByOffset('inputOffset')};`,\n       'value = log(value);',\n  ];\n  runReduceProgram(context, 'ReduceLogSum', attributes, reduceOp);\n};\n\nexport const reduceL1 = (context: ComputeContext, attributes: ReduceAttributes): void => {\n  validateInputs(context.inputs);\n  const reduceOp: ReduceOp = (input, output) =>\n      [`var value = ${output.type.storage}(0);`,\n       '',\n       `value += abs(${input.getByOffset('inputOffset')});`,\n       '',\n  ];\n  runReduceProgram(context, 'ReduceL1', attributes, reduceOp);\n};\n\nexport const reduceL2 = (context: ComputeContext, attributes: ReduceAttributes): void => {\n  validateInputs(context.inputs);\n  const reduceOp: ReduceOp = (input, output) =>\n      [`var t = ${output.type.value}(0); var value = ${output.type.value}(0);`,\n       '',\n       `t = ${input.getByOffset('inputOffset')}; value += (t * t);`,\n       'value = sqrt(value);',\n  ];\n  runReduceProgram(context, 'ReduceL2', attributes, reduceOp);\n};\n\nexport const reduceLogSumExp = (context: ComputeContext, attributes: ReduceAttributes): void => {\n  validateInputs(context.inputs);\n  const reduceOp: ReduceOp = (input, output) =>\n      [`var value = ${output.type.storage}(0);`,\n       '',\n       `value += exp(${input.getByOffset('inputOffset')});`,\n       'value = log(value);',\n  ];\n  runReduceProgram(context, 'ReduceLogSumExp', attributes, reduceOp);\n};\n\nexport const reduceMax = (context: ComputeContext, attributes: ReduceAttributes): void => {\n  validateInputs(context.inputs);\n  const reduceOp: ReduceOp = (input, _output, axes) => {\n    const idxZero = [];\n    for (let k = 0; k < input.rank; k++) {\n      if (axes.indexOf(k) >= 0 || axes.length === 0) {\n        idxZero.push(input.indicesSet('inputIndices', k, 0));\n      }\n    }\n\n    return [\n      `${idxZero.join('\\n')}`,\n      `var value = ${input.getByOffset('inputOffset')};`,\n      `value = max(value, ${input.getByOffset('inputOffset')});`,\n      '',\n    ];\n  };\n  runReduceProgram(context, 'ReduceMax', attributes, reduceOp);\n};\n\nexport const reduceMean = (context: ComputeContext, attributes: ReduceAttributes): void => {\n  validateInputs(context.inputs);\n  const reduceOp: ReduceOp = (input, output, axes) => {\n    let size = 1.0;\n    for (let k = 0; k < input.rank; k++) {\n      if (axes.indexOf(k) >= 0 || axes.length === 0) {\n        // TODO: this depends on the input dims. If we want to use uniform, this need to be updated.\n        size *= context.inputs[0].dims[k];\n      }\n    }\n\n    return [\n      'var sum = f32(0);',\n      '',\n      `sum += f32(${input.getByOffset('inputOffset')});`,\n      `let value = ${output.type.value}(sum / ${size});`,\n    ];\n  };\n  runReduceProgram(context, 'ReduceMean', attributes, reduceOp);\n};\n\nexport const reduceMin = (context: ComputeContext, attributes: ReduceAttributes): void => {\n  validateInputs(context.inputs);\n  const reduceOp: ReduceOp = (input, _output, axes) => {\n    const idxZero = [];\n    for (let k = 0; k < input.rank; k++) {\n      if (axes.indexOf(k) >= 0 || axes.length === 0) {\n        idxZero.push(`inputIndices[${k}] = 0;`);  // first element\n      }\n    }\n\n    return [\n      `${idxZero.join('\\n')}`,\n      `var value = ${input.getByOffset('inputOffset')};`,\n      `value = min(value, ${input.getByOffset('inputOffset')});`,\n      '',\n    ];\n  };\n  runReduceProgram(context, 'ReduceMin', attributes, reduceOp);\n};\n\nexport const reduceProd = (context: ComputeContext, attributes: ReduceAttributes): void => {\n  validateInputs(context.inputs);\n  const reduceOp: ReduceOp = (input, output) =>\n      [`var value = ${output.type.storage}(1);`,\n       '',\n       `value *= ${input.getByOffset('inputOffset')};`,\n       '',\n  ];\n  runReduceProgram(context, 'ReduceProd', attributes, reduceOp);\n};\n\nexport const reduceSum = (context: ComputeContext, attributes: ReduceAttributes): void => {\n  validateInputs(context.inputs);\n  const reduceOp: ReduceOp = (input, output) =>\n      [`var value = ${output.type.storage}(0);`,\n       '',\n       `value += ${input.getByOffset('inputOffset')};`,\n       '',\n  ];\n  runReduceProgram(context, 'ReduceSum', attributes, reduceOp);\n};\n\nexport const reduceSumSquare = (context: ComputeContext, attributes: ReduceAttributes): void => {\n  validateInputs(context.inputs);\n  const reduceOp: ReduceOp = (input, output) =>\n      [`var t = ${output.type.value}(0); var value = ${output.type.value}(0);`,\n       '',\n       `t = ${input.getByOffset('inputOffset')}; value += t * t;`,\n       '',\n  ];\n  runReduceProgram(context, 'ReduceSumSquare', attributes, reduceOp);\n};\n\nexport const parseReduceAttributes = (attributes: Record<string, unknown>): ReduceAttributes =>\n    createAttributeWithCacheKey(attributes as Omit<ReduceAttributes, keyof AttributeWithCacheKey>);\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// TODO: this is the same naive implementation we use for reduce that has\n// performance limitations when the reduced axis is long. Need to add\n// a optimized codepath for this.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor-view';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext} from '../types';\n\nimport {createReduceProgramInfo, ReduceOp} from './reduce';\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length === 0 || inputs.length > 2) {\n    throw new Error('ArgMinMaxOp op requires 1 or 2 inputs.');\n  }\n  if (inputs[0].dataType !== DataType.float) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport interface ArgMinMaxAttributes extends AttributeWithCacheKey {\n  keepDims: boolean;\n  axis: number;\n  selectLastIndex: number;\n}\n\nconst createArgMinMaxAttributesFromInputs =\n    (inputs: readonly TensorView[], attributes: ArgMinMaxAttributes): ArgMinMaxAttributes =>\n        createAttributeWithCacheKey(\n            {axis: attributes.axis, keepDims: attributes.keepDims, selectLastIndex: attributes.selectLastIndex});\n\nexport const argMin = (context: ComputeContext, attributes: ArgMinMaxAttributes): void => {\n  validateInputs(context.inputs);\n  const argMinMaxOp: ReduceOp = (input, output, axes) => {\n    const idxZero = [];\n    for (let k = 0; k < input.rank; k++) {\n      if (axes.indexOf(k) >= 0 || axes.length === 0) {\n        idxZero.push(`inputIndices[${k}] = 0;`);  // first element\n      }\n    }\n    return [\n      `${idxZero.join('\\n')}`, `var value = ${input.getByOffset('inputOffset')};\\nvar bestIndex : i32 = 0;`,\n      `if (${input.getByOffset('inputOffset')} ${attributes.selectLastIndex > 0 ? '<=' : '<'} value) {\n         value = ${input.getByOffset('inputOffset')};\n         bestIndex = i32(lastIndex);\n       }`,\n      '', output.setByOffset('global_idx', 'bestIndex')\n    ];\n  };\n\n  const updatedAttributes: ArgMinMaxAttributes =\n      context.inputs.length === 1 ? attributes : createArgMinMaxAttributesFromInputs(context.inputs, attributes);\n  context.compute(\n      createReduceProgramInfo(\n          'ArgMin', {hint: updatedAttributes.cacheKey}, [context.inputs[0]], argMinMaxOp, [updatedAttributes.axis],\n          DataType.int64, updatedAttributes.keepDims),\n      {inputs: [0]});\n};\n\nexport const argMax = (context: ComputeContext, attributes: ArgMinMaxAttributes): void => {\n  validateInputs(context.inputs);\n  const argMinMaxOp: ReduceOp = (input, output, axes) => {\n    const idxZero = [];\n    for (let k = 0; k < input.rank; k++) {\n      if (axes.indexOf(k) >= 0 || axes.length === 0) {\n        idxZero.push(`inputIndices[${k}] = 0;`);  // first element\n      }\n    }\n    return [\n      `${idxZero.join('\\n')}`, `var value = ${input.getByOffset('inputOffset')};\\nvar bestIndex : i32 = 0;`,\n      `if (${input.getByOffset('inputOffset')} ${attributes.selectLastIndex > 0 ? '>=' : '>'} value) {\n         value = ${input.getByOffset('inputOffset')};\n         bestIndex = i32(lastIndex);\n       }`,\n      '', output.setByOffset('global_idx', 'bestIndex')\n    ];\n  };\n\n  const updatedAttributes: ArgMinMaxAttributes =\n      context.inputs.length === 1 ? attributes : createArgMinMaxAttributesFromInputs(context.inputs, attributes);\n  context.compute(\n      createReduceProgramInfo(\n          'argMax', {hint: updatedAttributes.cacheKey}, [context.inputs[0]], argMinMaxOp, [updatedAttributes.axis],\n          DataType.int64, updatedAttributes.keepDims),\n      {inputs: [0]});\n};\n\nexport const parseArgMinMaxAttributes = (attributes: Record<string, unknown>): ArgMinMaxAttributes =>\n    createAttributeWithCacheKey(attributes as Omit<ArgMinMaxAttributes, keyof AttributeWithCacheKey>);\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor-view';\nimport {ShapeUtil} from '../../util';\nimport {ComputeContext, ProgramInfo} from '../types';\n\nimport {inputVariable, outputVariable, ShaderHelper} from './common';\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (inputs[0].dims.length !== 3) {\n    throw new Error('input should have 3 dimensions');\n  }\n\n  if (![320, 640, 1280].includes(inputs[0].dims[2])) {\n    throw new Error('number of channels should be 320, 640 or 1280');\n  }\n\n  if (inputs[1].dims.length !== 1) {\n    throw new Error('bias is expected to have 1 dimensions');\n  }\n\n  if (inputs[0].dims[2] !== inputs[1].dims[0]) {\n    throw new Error('last dimension of input and bias are not the same');\n  }\n};\n\nconst createBiasAddProgramInfo = (inputs: readonly TensorView[]): ProgramInfo => {\n  const outputShape = inputs[0].dims;\n\n  const channels = inputs[0].dims[2];\n  // since channel number can be only 320/640/1280, it's always divisable by 4\n  const outputSize = ShapeUtil.size(outputShape) / 4;\n\n  const dataType = inputs[0].dataType;\n  const input = inputVariable('input', dataType, outputShape, 4);\n  const bias = inputVariable('bias', dataType, [channels], 4);\n  const residual = inputVariable('residual', dataType, outputShape, 4);\n  const output = outputVariable('output', dataType, outputShape, 4);\n\n  const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const channels = ${channels}u / 4;\n  ${shaderHelper.declareVariables(input, bias, residual, output)}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n    let value = ${input.getByOffset('global_idx')}\n      + ${bias.getByOffset('global_idx % channels')} + ${residual.getByOffset('global_idx')};\n    ${output.setByOffset('global_idx', 'value')}\n  }`;\n\n  return {\n    name: 'BiasAdd',\n    getRunData: () => ({\n      outputs: [{dims: outputShape, dataType: inputs[0].dataType}],\n      dispatchGroup: {x: Math.ceil(outputSize / 64 /* workgroup size */)}\n    }),\n    getShaderSource,\n  };\n};\n\nexport const biasAdd = (context: ComputeContext): void => {\n  validateInputs(context.inputs);\n  context.compute(createBiasAddProgramInfo(context.inputs));\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor-view';\nimport {MAX_CLIP, MIN_CLIP, ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, ProgramInfo} from '../types';\n\nimport {inputVariable, outputVariable, ShaderHelper, tensorTypeToWsglStorageType} from './common';\n\ntype BuiltinFunctionName = string;\ntype ElementwiseCustomExpression = (expression: string) => string;\ntype ElementwiseFunctionCall = BuiltinFunctionName|ElementwiseCustomExpression;\n\nconst createElementwiseProgramShader =\n    (shaderHelper: ShaderHelper, datasize: number, inputDataType: number, outputDataType: number,\n     funcCall: ElementwiseFunctionCall, additionalImplementation?: string): string => {\n      const vecSize = Math.ceil(datasize / 4);\n\n      let expression = '';\n      if (typeof funcCall === 'string') {\n        expression = `${funcCall}(a)`;\n      } else {\n        expression = funcCall('a');\n      }\n\n      const input = inputVariable('inputData', inputDataType, [vecSize], 4);\n      const output = outputVariable('outputData', outputDataType, [vecSize], 4);\n\n      return `\n  ${shaderHelper.declareVariables(input, output)}\n\n  ${additionalImplementation ?? ''}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(vecSize)}\n\n    let a = ${input.getByOffset('global_idx')};\n    ${output.setByOffset('global_idx', expression)}\n  }`;\n    };\n\nconst createElementwiseProgramInfo =\n    (input: TensorView, name: string, funcCall: ElementwiseFunctionCall, additionalImplementation?: string,\n     cacheKey?: string, outputDataType: number = input.dataType): ProgramInfo => ({\n      name,\n      shaderCache: {hint: cacheKey},\n      getShaderSource: shaderHelper => createElementwiseProgramShader(\n          shaderHelper, ShapeUtil.size(input.dims), input.dataType, outputDataType, funcCall, additionalImplementation),\n      getRunData: (inputTensors) => ({\n        outputs: [{dims: input.dims, dataType: outputDataType}],\n        dispatchGroup:\n            {x: Math.ceil(ShapeUtil.size(inputTensors[0].dims) / 64 /* workgroup size */ / 4 /* vec size */)}\n      })\n    });\n\nexport const abs = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfo(context.inputs[0], 'Abs', 'abs'));\n};\n\nexport const acos = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfo(context.inputs[0], 'Acos', 'acos'));\n};\n\nexport const acosh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfo(context.inputs[0], 'Acosh', 'acosh'));\n};\n\nexport const asin = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfo(context.inputs[0], 'Asin', 'asin'));\n};\n\nexport const asinh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfo(context.inputs[0], 'Asinh', 'asinh'));\n};\n\nexport const atan = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfo(context.inputs[0], 'Atan', 'atan'));\n};\nexport const atanh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfo(context.inputs[0], 'Atanh', 'atanh'));\n};\n\nexport interface CastAttributes extends AttributeWithCacheKey {\n  readonly to: number;\n  readonly saturate?: boolean;\n}\n\nexport const parseCastAttributes = (attributes: Record<string, unknown>): CastAttributes =>\n    createAttributeWithCacheKey(attributes as {to: number});\n\n\nexport const cast = (context: ComputeContext, attributes: CastAttributes): void => {\n  let func: ElementwiseFunctionCall;\n  switch (attributes.to) {\n    case DataType.float16:\n      func = 'vec4<f16>';\n      break;\n    case DataType.float:\n      func = 'vec4<f32>';\n      break;\n    case DataType.uint32:\n      func = 'vec4<u32>';\n      break;\n    case DataType.int32:\n      func = 'vec4<i32>';\n      break;\n    case DataType.bool:\n      func = 'vec4<bool>';\n      break;\n    default:\n      throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${attributes.to}`);\n  }\n  context.compute(\n      createElementwiseProgramInfo(context.inputs[0], 'Cast', func, undefined, attributes.cacheKey, attributes.to));\n};\n\nexport interface ClipAttributes extends AttributeWithCacheKey {\n  readonly min: number;\n  readonly max: number;\n}\n\nexport const clipV10 = (context: ComputeContext, attributes: ClipAttributes): void => {\n  const dataType = tensorTypeToWsglStorageType(context.inputs[0].dataType);\n  context.compute(\n      createElementwiseProgramInfo(\n          context.inputs[0], 'Clip', a => `clamp(${a}, clip_min_, clip_max_)`, `\n    const clip_min_: vec4<${dataType}> = vec4(${dataType}(${attributes.min}));\n    const clip_max_: vec4<${dataType}> = vec4(${dataType}(${attributes.max}));\n`,\n          attributes.cacheKey),\n      {inputs: [0]});\n};\nconst generateClipAttributesFromInputs = (inputs: readonly TensorView[]): ClipAttributes => {\n  const min = (inputs.length >= 2) ? inputs[1].getFloat32Array()[0] : MIN_CLIP;\n  const max = (inputs.length >= 3) ? inputs[2].getFloat32Array()[0] : MAX_CLIP;\n  return createAttributeWithCacheKey({min, max});\n};\n\nexport const clip = (context: ComputeContext): void => {\n  const attributes = generateClipAttributesFromInputs(context.inputs);\n  clipV10(context, attributes);\n};\n\nexport const ceil = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfo(context.inputs[0], 'Ceil', 'ceil'));\n};\n\nexport const cos = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfo(context.inputs[0], 'Cos', 'cos'));\n};\n\nexport const cosh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfo(context.inputs[0], 'Cosh', 'cosh'));\n};\n\nexport interface AlphaAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const parseAlphaAttributes = (attributes: Record<string, unknown>): AlphaAttributes =>\n    createAttributeWithCacheKey(attributes as {alpha: number});\n\nexport const elu = (context: ComputeContext, attributes: AlphaAttributes): void => {\n  context.compute(createElementwiseProgramInfo(\n      context.inputs[0], 'Elu', a => `elu_vf32(${a})`, `\n  const elu_alpha_: f32 = f32(${attributes.alpha});\n\n  fn elu_f32(a: f32) -> f32 {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<f32>) -> vec4<f32> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,\n      attributes.cacheKey));\n};\n\nexport const erfImpl = (dataType: string, varType = 'f32') => `\nconst r0: ${varType} = 0.3275911;\nconst r1: ${varType} = 0.254829592;\nconst r2: ${varType} = -0.284496736;\nconst r3: ${varType} = 1.421413741;\nconst r4: ${varType} = -1.453152027;\nconst r5: ${varType} = 1.061405429;\n\nfn erf_vf32(v: ${dataType}) -> ${dataType} {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`;\n\nexport const erf = (context: ComputeContext): void => {\n  const dataType = tensorTypeToWsglStorageType(context.inputs[0].dataType);\n  context.compute(createElementwiseProgramInfo(\n      context.inputs[0], 'Erf', a => `erf_vf32(${a})`, erfImpl(`vec4<${dataType}>`, dataType)));\n};\n\nexport const exp = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfo(context.inputs[0], 'Exp', 'exp'));\n};\n\nexport const floor = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfo(context.inputs[0], 'Floor', 'floor'));\n};\n\nexport const gelu = (context: ComputeContext): void => {\n  const dataType = tensorTypeToWsglStorageType(context.inputs[0].dataType);\n  context.compute(createElementwiseProgramInfo(\n      context.inputs[0], 'Gelu', a => `0.5 * ${a} * (1.0 + erf_vf32(${a} * 0.7071067811865475))`,\n      erfImpl(`vec4<${dataType}>`, dataType)));\n};\n\nexport const leakyRelu = (context: ComputeContext, attributes: AlphaAttributes): void => {\n  context.compute(createElementwiseProgramInfo(\n      context.inputs[0], 'LeakyRelu', a => `select(leaky_relu_alpha_ * ${a}, ${a}, ${a} >= vec4<f32>(0.0))`,\n      `const leaky_relu_alpha_: f32 = f32(${attributes.alpha});`, attributes.cacheKey));\n};\n\nexport const not = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfo(context.inputs[0], 'Not', a => `!${a}`));\n};\n\nexport const neg = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfo(context.inputs[0], 'Neg', a => `-${a}`));\n};\n\nexport const reciprocal = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfo(context.inputs[0], 'Reciprocal', a => `1.0/${a}`));\n};\n\nexport const relu = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfo(\n      context.inputs[0], 'Relu', a => `select(vec4<f32>(0.0), ${a}, ${a} > vec4<f32>(0.0))`));\n};\n\nexport const sigmoid = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfo(context.inputs[0], 'Sigmoid', a => `(1.0 / (1.0 + exp(-${a})))`));\n};\n\nexport const sin = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfo(context.inputs[0], 'Sin', 'sin'));\n};\n\nexport const sinh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfo(context.inputs[0], 'Sinh', 'sinh'));\n};\n\nexport const sqrt = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfo(context.inputs[0], 'Sqrt', 'sqrt'));\n};\n\nexport const tan = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfo(context.inputs[0], 'Tan', 'tan'));\n};\n\nexport const tanh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfo(context.inputs[0], 'Tanh', 'tanh'));\n};\n\nexport const thresholdedRelu = (context: ComputeContext, attributes: AlphaAttributes): number => {\n  context.compute(createElementwiseProgramInfo(\n      context.inputs[0], 'ThresholdedRelu', a => `select(vec4<f32>(0.0), ${a}, ${a} > thresholded_relu_alpha_)`,\n      `const thresholded_relu_alpha_: vec4<f32> = vec4<f32>(${attributes.alpha});`, attributes.cacheKey));\n  return 0;\n};\n\nexport const log = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfo(context.inputs[0], 'Log', 'log'));\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor-view';\nimport {ShapeUtil} from '../../util';\nimport {ComputeContext, ProgramInfo} from '../types';\n\nimport {inputVariable, outputVariable, ShaderHelper} from './common';\nimport {erfImpl} from './unary-op';\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (inputs[0].dims.length !== 3) {\n    throw new Error('input should have 3 dimensions');\n  }\n\n  if (![2560, 5120, 10240].includes(inputs[0].dims[2])) {\n    throw new Error('hidden state should be 2560, 5120 or 10240');\n  }\n\n  if (inputs[1].dims.length !== 1) {\n    throw new Error('bias is expected to have 1 dimensions');\n  }\n\n  if (inputs[0].dims[2] !== inputs[1].dims[0]) {\n    throw new Error('last dimension of input and bias are not the same');\n  }\n};\n\nconst createBiasSplitGeluProgramInfo = (inputs: readonly TensorView[]): ProgramInfo => {\n  const outputShape = inputs[0].dims.slice();\n  outputShape[2] = outputShape[2] / 2;\n\n  const input = inputVariable('input', inputs[0].dataType, inputs[0].dims, 4);\n  const bias = inputVariable('bias', inputs[0].dataType, [inputs[0].dims[2]], 4);\n  const output = outputVariable('output', inputs[0].dataType, outputShape, 4);\n\n  const outputSize = ShapeUtil.size(outputShape) / 4;\n\n  const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${inputs[0].dims[2] / 4 / 2}u;\n\n  ${shaderHelper.declareVariables(input, bias, output)}\n\n  ${erfImpl('vec4f')}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${output.setByOffset('global_idx', 'valueLeft * geluRight')}\n  }`;\n\n  return {\n    name: 'BiasSplitGelu',\n    getRunData: () => ({\n      outputs: [{dims: outputShape, dataType: inputs[0].dataType}],\n      dispatchGroup: {x: Math.ceil(outputSize / 64 /* workgroup size */)}\n    }),\n    getShaderSource,\n  };\n};\n\nexport const biasSplitGelu = (context: ComputeContext): void => {\n  validateInputs(context.inputs);\n  context.compute(createBiasSplitGeluProgramInfo(context.inputs));\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor-view';\nimport {BroadcastUtil, ShapeUtil} from '../../util';\nimport {ComputeContext, ProgramInfo} from '../types';\n\nimport {inputVariable, outputVariable, ShaderHelper} from './common';\n\ntype BuiltinFunctionName = string;\ntype BinaryCustomExpression = (expressionA: string, expressionB: string) => string;\ntype BinaryFunctionCall = BuiltinFunctionName|BinaryCustomExpression|{\n  scalar: BinaryCustomExpression;\n  vector: BinaryCustomExpression;\n};\n\nconst createBinaryOpProgramShader =\n    (shaderHelper: ShaderHelper, dimsA: readonly number[], dimsB: readonly number[], dimsOutput: readonly number[],\n     vectorize: boolean, doBroadcast: boolean, funcCall: BinaryFunctionCall, typeA: number, typeB: number,\n     typeOutput: number, additionalImplementation?: string) => {\n      const outputSize = ShapeUtil.size(dimsOutput);\n      const vecSize = Math.ceil(outputSize / 4);\n\n      let expressionScalar: BinaryCustomExpression;\n      let expressionVector: BinaryCustomExpression;\n      if (typeof funcCall === 'string') {\n        expressionScalar = expressionVector = (a, b) => `${funcCall}((${a}),(${b}))`;\n      } else if (typeof funcCall === 'function') {\n        expressionScalar = expressionVector = funcCall;\n      } else {\n        expressionScalar = funcCall.scalar;\n        expressionVector = funcCall.vector;\n      }\n\n      let broadcastImpl = '';\n      const output = outputVariable('outputData', typeOutput, dimsOutput, 4);\n      const a = inputVariable('aData', typeA, dimsA, 4);\n      const b = inputVariable('bData', typeB, dimsB, 4);\n      if (doBroadcast) {\n        const calcOffsetImpl = (dims: readonly number[]) => {\n          const strides = ShapeUtil.computeStrides(dims);\n          const offsets: string[] = [];\n          for (let i = dims.length - 1; i >= 0; i--) {\n            const idx = output.indicesGet('outputIndices', i + dimsOutput.length - dims.length);\n            offsets.push(`${strides[i]}u * (${idx} % ${dims[i]}u)`);\n          }\n          return offsets.length > 0 ? offsets.join('+') : '0u';\n        };\n\n        broadcastImpl = `\n          fn calcOffsetA(outputIndices: ${output.type.indices}) -> u32 {\n            return ${calcOffsetImpl(dimsA)};\n          }\n\n          fn calcOffsetB(outputIndices: ${output.type.indices}) -> u32 {\n            return ${calcOffsetImpl(dimsB)};\n          }\n        `;\n      }\n\n      let assignment: string;\n      if (vectorize) {\n        if (doBroadcast) {\n          const isAOneElement = ShapeUtil.size(dimsA) === 1;\n          const isBOneElement = ShapeUtil.size(dimsB) === 1;\n          if (isAOneElement || isBOneElement) {\n            assignment = output.setByOffset(\n                'global_idx',\n                expressionVector(\n                    isAOneElement ? `${a.type.value}(${a.getByOffset('0')}.x)` : a.getByOffset('global_idx'),\n                    isBOneElement ? `${b.type.value}(${b.getByOffset('0')}.x)` : b.getByOffset('global_idx')));\n          } else {\n            assignment = `\n            let outputIndices = ${output.offsetToIndices('global_idx * 4u')};\n            let offsetA = calcOffsetA(outputIndices);\n            let offsetB = calcOffsetB(outputIndices);\n            ${\n                output.setByOffset(\n                    'global_idx', expressionVector(a.getByOffset('offsetA / 4u'), b.getByOffset('offsetB / 4u')))}\n          `;\n          }\n        } else {\n          assignment = output.setByOffset(\n              'global_idx', expressionVector(a.getByOffset('global_idx'), b.getByOffset('global_idx')));\n        }\n      } else {\n        if (!doBroadcast) {\n          throw new Error('no necessary to use scalar implementation for element-wise binary op implementation.');\n        }\n\n        const singleAssignment = (resStr: string, x: number, typeCast = '') => {\n          const expressionA = `aData[indexA${x}][componentA${x}]`;\n          const expressionB = `bData[indexB${x}][componentB${x}]`;\n          return `\n            let outputIndices${x} = ${output.offsetToIndices(`global_idx * 4u + ${x}u`)};\n            let offsetA${x} = calcOffsetA(outputIndices${x});\n            let offsetB${x} = calcOffsetB(outputIndices${x});\n            let indexA${x} = offsetA${x} / 4u;\n            let indexB${x} = offsetB${x} / 4u;\n            let componentA${x} = offsetA${x} % 4u;\n            let componentB${x} = offsetB${x} % 4u;\n            ${resStr}[${x}] = ${typeCast}(${expressionScalar(expressionA, expressionB)});\n          `;\n        };\n        if (typeOutput === DataType.bool) {\n          assignment = `\n            var data = vec4<u32>(0);\n            ${singleAssignment('data', 0, 'u32')}\n            ${singleAssignment('data', 1, 'u32')}\n            ${singleAssignment('data', 2, 'u32')}\n            ${singleAssignment('data', 3, 'u32')}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`;\n        } else {\n          assignment = `\n            ${singleAssignment('outputData[global_idx]', 0)}\n            ${singleAssignment('outputData[global_idx]', 1)}\n            ${singleAssignment('outputData[global_idx]', 2)}\n            ${singleAssignment('outputData[global_idx]', 3)}\n          `;\n        }\n      }\n\n      return `\n        ${shaderHelper.declareVariables(a, b, output)}\n\n        ${additionalImplementation ?? ''}\n        ${broadcastImpl}\n\n        ${shaderHelper.mainStart()}\n        ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(vecSize)}\n        ${assignment}\n      }`;\n    };\n\nconst createBinaryOpProgramInfo =\n    (name: string, cacheKey: string, a: TensorView, b: TensorView, funcCall: BinaryFunctionCall,\n     additionalImplementation?: string, outputDataType: number = a.dataType): ProgramInfo => {\n      const isBroadcast = !ShapeUtil.areEqual(a.dims, b.dims);\n      let outputShape = a.dims;\n      let outputSize = ShapeUtil.size(a.dims);\n\n      let vectorize = false;\n\n      // TODO: deal with zero-sized tensors (eg. dims=[1,0])\n\n      if (isBroadcast) {\n        const calculatedShape = BroadcastUtil.calcShape(a.dims, b.dims, false);\n        if (!calculatedShape) {\n          throw new Error('Can\\'t perform binary op on the given tensors');\n        }\n        outputShape = calculatedShape;\n        outputSize = ShapeUtil.size(outputShape);\n        const isAOneElement = ShapeUtil.size(a.dims) === 1;\n        const isBOneElement = ShapeUtil.size(b.dims) === 1;\n\n        // check whether vectorize can be enabled\n        let sharedDimension = 1;\n        for (let i = 1; i < outputShape.length; i++) {\n          const dimA = a.dims[a.dims.length - i] ?? 1;\n          const dimB = b.dims[b.dims.length - i] ?? 1;\n          if (dimA === dimB) {\n            sharedDimension *= dimA;\n          } else {\n            break;\n          }\n        }\n        if (sharedDimension % 4 === 0 || isAOneElement || isBOneElement) {\n          vectorize = true;\n        }\n      } else {\n        // element-wise\n        vectorize = true;\n      }\n\n      return {\n        name,\n        shaderCache: {hint: cacheKey},\n        getShaderSource: (shaderHelper) => createBinaryOpProgramShader(\n            shaderHelper, a.dims, b.dims, outputShape, vectorize, isBroadcast, funcCall, a.dataType, b.dataType,\n            outputDataType, additionalImplementation),\n        getRunData: () => ({\n          outputs: [{dims: outputShape, dataType: outputDataType}],\n          dispatchGroup: {x: Math.ceil(outputSize / 64 /* workgroup size */ / 4 /* component size */)}\n        }),\n      };\n    };\n\nconst runBinaryOp =\n    (context: ComputeContext, name: string, funcCall: BinaryFunctionCall, additionalImplementation?: string,\n     cacheKey?: string, outputDataType?: number): void => {\n      context.compute(createBinaryOpProgramInfo(\n          name, cacheKey ?? '', context.inputs[0], context.inputs[1], funcCall, additionalImplementation,\n          outputDataType));\n    };\n\nexport const add = (context: ComputeContext): void => {\n  runBinaryOp(context, 'Add', (a, b) => `${a}+${b}`);\n};\n\nexport const div = (context: ComputeContext): void => {\n  runBinaryOp(context, 'Div', (a, b) => `${a}/${b}`);\n};\n\nexport const equal = (context: ComputeContext): void => {\n  runBinaryOp(\n      context, 'Equal', ({scalar: (a, b) => `u32(${a}==${b})`, vector: (a, b) => `vec4<u32>(${a}==${b})`}), undefined,\n      undefined, DataType.bool);\n};\n\nexport const mul = (context: ComputeContext): void => {\n  runBinaryOp(context, 'Mul', (a, b) => `${a}*${b}`);\n};\n\nexport const pow = (context: ComputeContext): void => {\n  const type = inputVariable('input', context.inputs[0].dataType, context.inputs[0].dims).type.value;\n  const roundStr = type === 'i32' ? 'round' : '';\n  runBinaryOp(\n      context, 'Pow', ({scalar: (a, b) => `pow_custom(${a},${b})`, vector: (a, b) => `pow_vector_custom(${a},${b})`}),\n      `\n    fn pow_custom(a : ${type}, b : ${type}) -> ${type} {\n      if (b == ${type}(0.0)) {\n        return ${type}(1.0);\n      } else if (a < ${type}(0.0) && f32(b) != floor(f32(b))) {\n        return ${type}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${type}(1.0), round(f32(abs(b) % ${type}(2.0))) != 1.0) * ${type}(${\n          roundStr}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${type}>, b : vec4<${type}>) -> vec4<${type}> {\n      // TODO: implement vectorized pow\n      return vec4<${type}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `);\n};\n\nexport const sub = (context: ComputeContext): void => {\n  runBinaryOp(context, 'Sub', (a, b) => `${a}-${b}`);\n};\n\nexport const greater = (context: ComputeContext): void => {\n  runBinaryOp(\n      context, 'Greater', ({scalar: (a, b) => `u32(${a}>${b})`, vector: (a, b) => `vec4<u32>(${a}>${b})`}), undefined,\n      undefined, DataType.bool);\n};\n\nexport const less = (context: ComputeContext): void => {\n  runBinaryOp(\n      context, 'Less', ({scalar: (a, b) => `u32(${a}<${b})`, vector: (a, b) => `vec4<u32>(${a}<${b})`}), undefined,\n      undefined, DataType.bool);\n};\n\nexport const greaterOrEqual = (context: ComputeContext): void => {\n  runBinaryOp(\n      context, 'GreaterOrEqual', ({scalar: (a, b) => `u32(${a}>=${b})`, vector: (a, b) => `vec4<u32>(${a}>=${b})`}),\n      undefined, undefined, DataType.bool);\n};\n\nexport const lessOrEqual = (context: ComputeContext): void => {\n  runBinaryOp(\n      context, 'LessOrEqual', ({scalar: (a, b) => `u32(${a}<=${b})`, vector: (a, b) => `vec4<u32>(${a}<=${b})`}),\n      undefined, undefined, DataType.bool);\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor-view';\nimport {ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, ProgramInfo} from '../types';\n\nimport {IndicesHelper, inputVariable, outputVariable, ShaderHelper} from './common';\n\nexport interface ConcatAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length < 1) {\n    throw new Error('too few inputs');\n  }\n\n  const inputType = inputs[0].dataType;\n  const inputDimensionality = inputs[0].dims.length;\n\n  for (const input of inputs) {\n    // make sure types of all inputs match\n    if (input.dataType !== inputType) {\n      throw new Error('input tensors should be one type');\n    }\n\n    // make sure the dimensionality of all inputs are the same\n    if (input.dims.length !== inputDimensionality) {\n      throw new Error('input tensors should have the same shape');\n    }\n  }\n};\n\nconst calculateInputIndexImpl = (numberOfTensors: number): string => `\n  fn calculateInputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${numberOfTensors}u; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${numberOfTensors}u;\n  }`;\n\nconst assignOutputData = (inputs: readonly IndicesHelper[], output: IndicesHelper) => {\n  const numberOfTensors = inputs.length;\n\n  const codeLines: string[] = [];\n  for (let i = 0; i < numberOfTensors; ++i) {\n    const returnSnippet = output.setByOffset('global_idx', inputs[i].getByIndices('indices'));\n    if (numberOfTensors === 1) {\n      codeLines.push(returnSnippet);\n    } else if (i === 0) {\n      codeLines.push(`if (inputIndex == ${i}u) { ${returnSnippet} }`);\n    } else if (i === numberOfTensors - 1) {\n      codeLines.push(`else { ${returnSnippet} }`);\n    } else {\n      codeLines.push(`else if (inputIndex == ${i}) { ${returnSnippet} }`);\n    }\n  }\n  return codeLines.join('\\n');\n};\n\nconst createConcatProgramInfo = (inputs: readonly TensorView[], axis: number): ProgramInfo => {\n  const inputShape = inputs[0].dims.slice();\n  if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n    throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n  }\n  const adjustedAxis = (axis < 0) ? inputShape.length + axis : axis;\n  // ensure all of the non-concatenated axes match each other\n  // calculate the shape of the output tensor while we do that\n  const outputShape = inputShape.slice(0);\n  for (let i = 1; i < inputs.length; i++) {\n    const dataNShape = inputs[i].dims.slice();\n    for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n      // add to the placeholder for computing output shape\n      if (axisIndex === adjustedAxis) {\n        outputShape[adjustedAxis] += dataNShape[axisIndex];\n      }\n      // ensure all non-cancatenated axes match each other\n      else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n        throw new Error('non concat dimensions must match');\n      }\n    }\n  }\n\n  const outputSize = ShapeUtil.size(outputShape);\n\n  const sizeInConcatAxis = new Array<number>(inputs.length);\n  const inputVars = new Array<IndicesHelper>(inputs.length);\n  const dataType = inputs[0].dataType;\n\n  let previousSum = 0;\n  for (let i = 0; i < inputs.length; ++i) {\n    previousSum += inputs[i].dims[adjustedAxis];\n    sizeInConcatAxis[i] = previousSum;\n\n    inputVars[i] = inputVariable(`input${i}`, dataType, inputs[i].dims);\n  }\n\n  const output = outputVariable('output', dataType, outputShape);\n\n  const indicesAxis = output.indicesGet('indices', adjustedAxis);\n  const getShaderSource = (shaderHelper: ShaderHelper) => `\n  ${shaderHelper.declareVariables(...inputVars, output)}\n\n  const sizeInConcatAxis = array<u32, ${sizeInConcatAxis.length}>(${sizeInConcatAxis.map(i => `${i}u`).join(',')});\n  ${calculateInputIndexImpl(sizeInConcatAxis.length)}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    var indices = ${output.offsetToIndices('global_idx')};\n\n    let inputIndex = calculateInputIndex(${indicesAxis});\n    if (inputIndex != 0u) {\n      ${indicesAxis} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${assignOutputData(inputVars, output)}\n  }`;\n  return {\n    name: 'Concat',\n    shaderCache: {hint: `${axis}`},\n    getRunData: () => ({\n      outputs: [{dims: outputShape, dataType: inputs[0].dataType}],\n      dispatchGroup: {x: Math.ceil(outputSize / 64 /* workgroup size */)}\n    }),\n    getShaderSource,\n  };\n};\n\nexport const concat = (context: ComputeContext, attributes: ConcatAttributes): void => {\n  validateInputs(context.inputs);\n  context.compute(createConcatProgramInfo(context.inputs, attributes.axis));\n};\n\nexport const parseConcatAttributes = (attributes: Record<string, unknown>): ConcatAttributes =>\n    createAttributeWithCacheKey({axis: attributes.axis as number});\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-backend-webgpu/src/activation_util.ts\n//\n// modified to fit the needs of the project\n\nexport declare type Activation = 'linear' | 'relu' | 'prelu' | 'elu' | 'relu6' | 'leakyrelu' | 'sigmoid' | 'gelu';\n\nexport const typeSnippet = (component: number, dataType: string) => {\n  switch (component) {\n    case 1:\n      return dataType;\n    case 2:\n      return `vec2<${dataType}>`;\n    case 3:\n      return `vec3<${dataType}>`;\n    case 4:\n      return `vec4<${dataType}>`;\n    default:\n      throw new Error(`${component}-component is not supported.`);\n  }\n};\n\nexport const activationFnSnippet =\n    (activation?: Activation, _hasPreluActivationWeights = false, _packed = false, _coordsLength = 3): string => {\n      if (!activation) {\n        return '';\n      }\n\n      // TODO: add implementations\n      return '';\n    };\n\nexport const biasActivationSnippet = (hasBias: boolean, activation?: Activation): string => `\n      ${hasBias ? 'value = value + getBiasByOutputCoords(coords);' : ''}\n      ${activation ? 'value = activation(value, coords);' : ''}\n      `;\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-core/src/ops/conv_util.ts\n//\n// modified to fit the needs of the project\n\nexport const utilFunctions = `\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    outShapeStrides.x, outShapeStrides.y, outShapeStrides.z, 1));\n}\n`;\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {MAX_CLIP, MIN_CLIP} from '../../util';\n\nexport interface InternalActivationAttributes {\n  readonly activation: string;\n  readonly clipMin?: number;\n  readonly clipMax?: number;\n  readonly activationCacheKey: string;\n}\n\nexport const getActicationSnippet =\n    (attributes: InternalActivationAttributes): {activationFunction: string; applyActivation: string} => {\n      switch (attributes.activation) {\n        case 'Relu':\n          return {activationFunction: '', applyActivation: 'value = max(value, 0.0);'};\n        case 'Sigmoid':\n          return {activationFunction: '', applyActivation: 'value = (1.0 / (1.0 + exp(-value)));'};\n        case 'Clip':\n          return {\n            activationFunction:\n                `const clip_min_=f32(${attributes.clipMin!});const clip_max_=f32(${attributes.clipMax!});`,\n            applyActivation: 'value = clamp(value, clip_min_, clip_max_);'\n          };\n          // TODO: adding other activations that can be fused.\n        default:\n          return {activationFunction: '', applyActivation: ''};\n      }\n    };\n\nexport const parseInternalActivationAttributes =\n    (attributes: Record<string, unknown>|undefined): InternalActivationAttributes => {\n      const activation = attributes?.activation as string || '';\n\n      if (activation === 'Clip') {\n        const [clipMin, clipMax] = attributes?.activation_params as [number, number] || [MIN_CLIP, MAX_CLIP];\n        return {activation, clipMax, clipMin, activationCacheKey: `${activation}:${clipMin},${clipMax}`};\n      }\n      return {activation, activationCacheKey: activation};\n    };\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-backend-webgpu/src/matmul_packed_webgpu.ts\n//\n// modified to fit the needs of the project\n\nimport {TensorView} from '../../../tensor-view';\nimport {ShapeUtil} from '../../../util';\nimport {ProgramInfo} from '../../types';\nimport {getBroadcastDims, IndicesHelper, inputVariable, outputVariable, ShaderHelper, tensorTypeToWsglStorageType} from '../common';\nimport {getActicationSnippet, InternalActivationAttributes} from '../fuse-utils';\n\nimport {typeSnippet} from './activation_util';\n\nconst writeDataToSubAVec4Snippet = (transpose: boolean, batchDims?: IndicesHelper) => {\n  if (transpose) {\n    return `\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${batchDims ? ', batchIndices' : ''});\n        `;\n\n  } else {\n    return `\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${batchDims ? ', batchIndices' : ''});\n        `;\n  }\n};\n\nconst calculateResultSnippet = (transposeA: boolean, innerElementSize: number) => {\n  if (transposeA) {\n    return `\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${innerElementSize === 3 ? '' : 'let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];'}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${innerElementSize === 3 ? '' : 'acc[i] = BCached3 * ACached3[i] + acc[i];'}\n        }`;\n  } else {\n    return `\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${innerElementSize === 3 ? '' : 'acc[i] = BCached3 * ACached.w + acc[i];'}\n        }`;\n  }\n};\n\nexport const makeMatMulPackedVec4Source =\n    (workPerThread: number[], workgroupSize: [number, number, number], type = 'f32', batchDims?: IndicesHelper,\n     transposeA = false, tileInner = 32, splitK = false, splitedDimInner = 32): string => {\n      const tileAOuter = workgroupSize[1] * workPerThread[1];\n      const tileBOuter = workgroupSize[0] * workPerThread[0];\n      const tileAWidth = transposeA ? tileAOuter : tileInner;\n      const tileAHight = transposeA ? tileInner : tileAOuter;\n      const innerElementSize = tileAWidth / workgroupSize[0];\n      const rowPerThreadB = tileInner / workgroupSize[1];\n\n      if (!(((transposeA && innerElementSize === 4 && workPerThread[1] === 4) ||\n             (!transposeA && (innerElementSize === 3 || innerElementSize === 4))) &&\n            tileAWidth % workgroupSize[0] === 0 && tileInner % workgroupSize[1] === 0 && workPerThread[0] === 4)) {\n        throw new Error(`If transposeA ${transposeA} is true, innerElementSize ${\n            innerElementSize} and workPerThread[1] ${workPerThread[1]} must be 4.\n      Otherwise, innerElementSize ${innerElementSize} must be 3 or 4.\n  tileAWidth ${tileAWidth} must be divisible by workgroupSize[0]${workgroupSize[0]}. tileInner ${\n            tileInner} must be divisible by workgroupSize[1] ${workgroupSize[1]}. colPerThread ${\n            workPerThread[0]} must be 4.`);\n      }\n      return `\nvar<workgroup> mm_Asub: array<array<vec${innerElementSize}<${type}>, ${tileAWidth / innerElementSize}>, ${tileAHight}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${type}>, ${tileBOuter / workPerThread[0]}>, ${tileInner}>;\n\nconst rowPerThread = ${workPerThread[1]};\nconst colPerThread = ${workPerThread[0]};\nconst innerElementSize = ${innerElementSize};\nconst tileInner = ${tileInner};\n\n@compute @workgroup_size(${workgroupSize[0]}, ${workgroupSize[1]}, ${workgroupSize[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${splitK ? '0' : 'i32(globalId.z)'};\n  ${batchDims ? `let batchIndices = ${batchDims.offsetToIndices('u32(batch)')};` : ''}\n  let globalRowStart = i32(workgroupId.y) * ${tileAOuter};\n\n  let numTiles = ${splitK ? `${Math.ceil(splitedDimInner / tileInner)}` : '(dimInner - 1) / tileInner + 1'};\n  var kStart = ${splitK ? `i32(globalId.z) * ${splitedDimInner}` : '0'};\n\n  var acc: array<vec4<${type}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${rowPerThreadB};\n  for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${writeDataToSubAVec4Snippet(transposeA, batchDims)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${rowPerThreadB}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${\n          batchDims ? ', batchIndices' : ''});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${innerElementSize === 3 ? '' : 'let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];'}\n\n          ${calculateResultSnippet(transposeA, innerElementSize)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`;\n    };\n\nconst writeDataToSubASnippet = (transpose: boolean, batchDims?: IndicesHelper) => {\n  if (transpose) {\n    return `\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${batchDims ? ', batchIndices' : ''});\n            `;\n\n  } else {\n    return `\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${batchDims ? ', batchIndices' : ''});\n            `;\n  }\n};\n\nconst readDataFromSubASnippet = (transposeA: boolean) =>\n    transposeA ? 'let ACached = mm_Asub[k][tileRow + innerRow];' : 'let ACached = mm_Asub[tileRow + innerRow][k];';\n\n// sequentialAccessByThreads means sequential data in memory is accessed by\n// threads, instead of a single thread (default behavior).\nexport const makeMatMulPackedSource =\n    (workPerThread: number[], workgroupSize: [number, number, number], type = 'f32', batchDims?: IndicesHelper,\n     transposeA = false, tileInner = 32, splitK = false, splitedDimInner = 32,\n     sequentialAccessByThreads = false): string => {\n      const tileAOuter = workPerThread[1] * workgroupSize[1];\n      const tileBOuter = workPerThread[0] * workgroupSize[0];\n      const tileAWidth = transposeA ? tileAOuter : tileInner;\n      const tileAHight = transposeA ? tileInner : tileAOuter;\n\n      if (!(tileAHight % workgroupSize[1] === 0 && tileAWidth % workgroupSize[0] === 0 &&\n            tileInner % workgroupSize[1] === 0)) {\n        throw new Error(`tileAHight ${tileAHight} must be divisible by workgroupSize[1]${\n            workgroupSize[1]}, tileAWidth ${tileAWidth} must be divisible by workgroupSize[0]${\n            workgroupSize[0]}, tileInner ${tileInner} must be divisible by workgroupSize[1]${workgroupSize[1]}`);\n      }\n      const rowPerThreadA = tileAHight / workgroupSize[1];\n      const colPerThreadA = tileAWidth / workgroupSize[0];\n      const rowPerThreadB = tileInner / workgroupSize[1];\n      const matmulSnippet = sequentialAccessByThreads ?\n          `\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${tileAOuter};\n    let globalColStart = i32(workgroupId.x) * ${tileBOuter};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${tileAHight}; inputRow = inputRow + ${workgroupSize[1]}) {\n        for (var inputCol = localCol; inputCol < ${tileAWidth}; inputCol = inputCol + ${workgroupSize[0]}) {\n          ${writeDataToSubASnippet(transposeA, batchDims)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${tileInner}; inputRow = inputRow + ${workgroupSize[1]}) {\n            for (var inputCol = localCol; inputCol < ${tileBOuter}; inputCol = inputCol + ${workgroupSize[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${batchDims ? ', batchIndices' : ''});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${type}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${workgroupSize[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${\n              transposeA ? `mm_Asub[k][localRow + innerRow * ${workgroupSize[1]}];` :\n                           `mm_Asub[localRow + innerRow * ${workgroupSize[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${workgroupSize[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${workgroupSize[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    ` :\n          `\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${tileAOuter};\n\nlet tileRowA = i32(localId.y) * ${rowPerThreadA};\nlet tileColA = i32(localId.x) * ${colPerThreadA};\nlet tileRowB = i32(localId.y) * ${rowPerThreadB};\n// Loop over shared dimension.\nfor (var t = 0; t < numTiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${rowPerThreadA}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${colPerThreadA}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${writeDataToSubASnippet(transposeA, batchDims)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${rowPerThreadB}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${batchDims ? ', batchIndices' : ''});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${type}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${readDataFromSubASnippet(transposeA)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;\n\n      return `\n  var<workgroup> mm_Asub : array<array<${type}, ${tileAWidth}>, ${tileAHight}>;\n  var<workgroup> mm_Bsub : array<array<${type}, ${tileBOuter}>, ${tileInner}>;\n  const rowPerThread = ${workPerThread[1]};\n  const colPerThread = ${workPerThread[0]};\n  const tileInner = ${tileInner};\n\n@compute @workgroup_size(${workgroupSize[0]}, ${workgroupSize[1]}, ${workgroupSize[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${splitK ? '0' : 'i32(globalId.z)'};\n    ${batchDims ? `let batchIndices = ${batchDims.offsetToIndices('u32(batch)')};` : ''}\n    let numTiles = ${splitK ? `${Math.ceil(splitedDimInner / tileInner)}` : '(dimInner - 1) / tileInner + 1'};\n    var kStart = ${splitK ? `i32(globalId.z) * ${splitedDimInner}` : '0'};\n\n    var acc : array<array<${type}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${matmulSnippet}\n  }\n`;\n    };\n\nconst matMulReadWriteFnSource =\n    (component: number, hasBias: boolean, applyActivation: string, variables: IndicesHelper[],\n     batchShapes: Array<readonly number[]>, isChannelsLast = false): string => {\n      const batchAShape = batchShapes[0];\n      const batchBShape = batchShapes[1];\n      const batchShape = batchShapes[2];\n      const batchVariable = variables[0];\n      const aVariable = variables[1];\n      const bVariable = variables[2];\n      const outputVariable = variables[3];\n      const broadCastADims = getBroadcastDims(batchAShape, batchShape);\n      const broadCastBDims = getBroadcastDims(batchBShape, batchShape);\n      const dataType = tensorTypeToWsglStorageType(variables[0].type.tensor);\n      const getAIndices = () => {\n        const aRank = aVariable.rank;\n        const batchRank = batchVariable.rank;\n        let resStr = `var aIndices: ${aVariable.type.indices};`;\n        for (let i = aRank - 2 - 1, j = batchRank - 1; i >= 0; i--, j--) {\n          resStr += `\\naIndices[${i}] = ${batchRank > 1 ? `batchIndices[${j}]` : 'batchIndices'};`;\n        }\n        broadCastADims.forEach(i => {\n          resStr += `\\naIndices[${i}] = 0;`;\n        });\n        resStr += `\\naIndices[${aRank - 2}] = u32(row);\n                   aIndices[${aRank - 1}] = u32(colIn);`;\n        return resStr;\n      };\n      const getBIndices = () => {\n        const bRank = bVariable.rank;\n        const batchRank = batchVariable.rank;\n        let resStr = `var bIndices: ${bVariable.type.indices};`;\n        for (let i = bRank - 2 - 1, j = batchRank - 1; i >= 0; i--, j--) {\n          resStr += `\\nbIndices[${i}] = ${batchRank > 1 ? `batchIndices[${j}]` : 'batchIndices'};`;\n        }\n        broadCastBDims.forEach(i => {\n          resStr += `\\nbIndices[${i}] = 0;`;\n        });\n        resStr += `\\nbIndices[${bRank - 2}] = u32(row);\n                   bIndices[${bRank - 1}] = u32(colIn);`;\n        return resStr;\n      };\n      const source = `\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${batchVariable.type.indices}) -> ${\n          typeSnippet(component, dataType)} {\n      var value = ${typeSnippet(component, dataType)}(0.0);\n      let col = colIn * ${component};\n      if(row < dimAOuter && col < dimInner)\n      {\n        ${getAIndices()}\n        value = ${aVariable.getByIndices('aIndices')};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${batchVariable.type.indices}) -> ${\n          typeSnippet(component, dataType)} {\n      var value = ${typeSnippet(component, dataType)}(0.0);\n      let col = colIn * ${component};\n      if(row < dimInner && col < dimBOuter)\n      {\n        ${getBIndices()}\n        value = ${bVariable.getByIndices('bIndices')};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${typeSnippet(component, dataType)}) {\n      let col = colIn * ${component};\n      if (row < dimAOuter && col < dimBOuter) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${\n          hasBias ?\n              `value = value + ${isChannelsLast ? 'bias[colIn]' : `${typeSnippet(component, dataType)}(bias[row])`};` :\n                                                  ''                                    }\n        ${applyActivation}\n        ${outputVariable.setByIndices('vec3<u32>(coords)', 'value')}\n      }\n    }\n    `;\n      return source;\n    };\n\nexport const createMatmulProgramInfo =\n    (inputs: readonly TensorView[], activationAttributes: InternalActivationAttributes, outputShape: readonly number[],\n     reshapedOutputShape?: readonly number[],\n     isChannelsLast = false /* only used for conv2dByMatMul*/): ProgramInfo => {\n      const aShape = inputs[0].dims;\n      const bShape = inputs[1].dims;\n\n      const outerDimsA = aShape.slice(0, -2);\n      const outerDimsB = bShape.slice(0, -2);\n      const outerDims = reshapedOutputShape ? reshapedOutputShape.slice(0, -2) : outputShape.slice(0, -2);\n      const batchDims = inputVariable('batchDims', inputs[0].dataType, outerDims);\n      const variables = [batchDims];\n      const batchShapes = [outerDimsA, outerDimsB, outerDims];\n      const batchSize = ShapeUtil.size(outerDims);\n\n      const dimAOuter = aShape[aShape.length - 2];\n      const dimInner = aShape[aShape.length - 1];\n      const dimBOuter = bShape[bShape.length - 1];\n      const isVec4 = dimInner % 4 === 0 && dimBOuter % 4 === 0;\n      const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\n\n      // TODO: fine tune size\n      const elementsPerThread = dimAOuter <= 8 ? [4, 1, 1] : [4, 4, 1];\n      const workgroupSize: [number, number, number] = [8, 8, 1];\n      const dispatch = [\n        Math.ceil(dimBOuter / workgroupSize[0] / elementsPerThread[0]),\n        Math.ceil(dimAOuter / workgroupSize[1] / elementsPerThread[1]),\n        Math.ceil(batchSize / workgroupSize[2] / elementsPerThread[2])\n      ];\n\n      const dataType = tensorTypeToWsglStorageType(inputs[0].dataType);\n      const components = isVec4 ? 4 : 1;\n      const A = inputVariable('a', inputs[0].dataType, [...outerDimsA, dimAOuter, dimInner / components], components);\n      const B = inputVariable('b', inputs[1].dataType, [...outerDimsB, dimInner, dimBOuter / components], components);\n      const output =\n          outputVariable('result', inputs[0].dataType, [batchSize, dimAOuter, dimBOuter / components], components);\n      variables.push(A);\n      variables.push(B);\n      variables.push(output);\n      const inputVariables = [A, B];\n      const hasBias = inputs.length > 2;\n      const declareFunctions =\n          matMulReadWriteFnSource(components, hasBias, applyActivation, variables, batchShapes, isChannelsLast);\n      if (hasBias) {\n        const biasComponents = isChannelsLast ? components : 1;\n        inputVariables.push(inputVariable('bias', inputs[2].dataType, inputs[2].dims, biasComponents));\n      }\n      const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const dimAOuter: i32 = ${dimAOuter};\n  const dimBOuter: i32 = ${dimBOuter};\n  const dimInner: i32 = ${dimInner};\n  ${shaderHelper.declareVariables(...inputVariables, output)}\n  ${declareFunctions}\n  ${activationFunction}\n  ${\n          isVec4 ? makeMatMulPackedVec4Source(elementsPerThread, workgroupSize, dataType, batchDims) :\n                   makeMatMulPackedSource(elementsPerThread, workgroupSize, dataType, batchDims)}\n                   ${batchDims.impl()}`;\n      return {\n        name: 'MatMul',\n        shaderCache: {hint: activationAttributes.activationCacheKey},\n        getRunData: () => ({\n          outputs: [{dims: outputShape, dataType: inputs[0].dataType}],\n          dispatchGroup: {x: dispatch[0], y: dispatch[1], z: dispatch[2]}\n        }),\n        getShaderSource,\n      };\n    };\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-backend-webgpu/src/conv2d_mm_webgpu.ts\n//\n// modified to fit the needs of the project\n\nimport {LOG_DEBUG} from '../../../log';\nimport {TensorView} from '../../../tensor-view';\nimport {ShapeUtil} from '../../../util';\nimport {ProgramInfo} from '../../types';\nimport {tensorTypeToWsglStorageType} from '../common';\nimport {ConvAttributes} from '../conv';\n\nimport {Activation, activationFnSnippet, biasActivationSnippet, typeSnippet} from './activation_util';\nimport {utilFunctions} from './conv_util';\nimport {makeMatMulPackedSource, makeMatMulPackedVec4Source} from './matmul_packed_webgpu';\n\nconst conv2dCommonSnippet =\n    (isChannelsLast: boolean, fitAOuter: boolean, fitBOuter: boolean, fitInner: boolean, addBias = false,\n     activation?: Activation, hasPreluActivationWeights = false, innerElementSizeX = 4, innerElementSizeW = 4,\n     innerElementSize = 4, dataType = 'f32'): string => {\n      const getXSnippet = (innerElementSize: number) => {\n        switch (innerElementSize) {\n          case 1:\n            return 'resData = x[xIndex];';\n          case 3:\n            return `resData = vec3<${dataType}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;\n          case 4:\n            return 'resData = x[xIndex / 4];';\n          default:\n            throw new Error(`innerElementSize ${innerElementSize} is not supported.`);\n        }\n      };\n      const getWSnippet = (innerElementSize: number) => {\n        switch (innerElementSize) {\n          case 1:\n            return 'return w[row * wShape[3] + colIn];';\n          case 4:\n            return 'return w[row * wShape[3] / 4 + colIn];';\n          default:\n            throw new Error(`innerElementSize ${innerElementSize} is not supported.`);\n        }\n      };\n      const coordASnippet = isChannelsLast ? `\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    ` :\n                                             `\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `;\n\n      const coordResSnippet = isChannelsLast ? `\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    ` :\n                                               `\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `;\n\n      const xHeight = isChannelsLast ? 'xShape[1]' : 'xShape[2]';\n      const xWidth = isChannelsLast ? 'xShape[2]' : 'xShape[3]';\n      const row = isChannelsLast ? 'row' : 'col';\n      const col = isChannelsLast ? 'col' : 'row';\n      const readXSnippet = `\n    let inChannels = wShape[2];\n    let outWidth = ${isChannelsLast ? 'outShape[2]' : 'outShape[3]'};\n    let outRow = ${row} / outWidth;\n    let outCol = ${row} % outWidth;\n\n    let WRow = ${col} / (filterDims[1] * inChannels);\n    let WCol = ${col} / inChannels % filterDims[1];\n    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];\n    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];\n    let xCh = ${col} % inChannels;\n    var resData = ${typeSnippet(innerElementSizeX, dataType)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the 'same' padding type.\n    if (xRow >= 0 && xRow < ${xHeight} && xCol >= 0 && xCol < ${xWidth}) {\n      ${coordASnippet}\n      let xIndex = getIndexFromCoords4D(coord, xShape);\n      ${getXSnippet(innerElementSizeX)}\n    }\n    return resData;`;\n\n      const sampleX = isChannelsLast ? (fitAOuter && fitInner ? `\n    let col = colIn * ${innerElementSizeX};\n    ${readXSnippet}` :\n                                                                `\n    let col = colIn * ${innerElementSizeX};\n    if (row < dimAOuter && col < dimInner) {\n      ${readXSnippet}\n    }\n    return ${typeSnippet(innerElementSizeX, dataType)}(0.0);`) :\n                                       (fitInner && fitBOuter ? `\n    let col = colIn * ${innerElementSizeX};\n    ${readXSnippet}` :\n                                                                `\n    let col = colIn * ${innerElementSizeX};\n    if (row < dimInner && col < dimBOuter) {\n      ${readXSnippet}\n    }\n    return ${typeSnippet(innerElementSizeX, dataType)}(0.0);`);\n\n      const sampleW = `${getWSnippet(innerElementSizeW)}`;\n\n      const resType = typeSnippet(innerElementSize, dataType);\n      const aType =\n          isChannelsLast ? typeSnippet(innerElementSizeX, dataType) : typeSnippet(innerElementSizeW, dataType);\n      const bType =\n          isChannelsLast ? typeSnippet(innerElementSizeW, dataType) : typeSnippet(innerElementSizeX, dataType);\n      const userCode = `\n    ${activationFnSnippet(activation, hasPreluActivationWeights, innerElementSize === 4, 4)}\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${aType} {\n      ${isChannelsLast ? sampleX : sampleW}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${bType} {\n      ${isChannelsLast ? sampleW : sampleX}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${resType}) {\n      let col = colIn * ${innerElementSize};\n      if (row < dimAOuter && col < dimBOuter)\n      {\n      var value = valueIn;\n      let outWidth = ${isChannelsLast ? 'outShape[2]' : 'outShape[3]'};\n      ${coordResSnippet}\n      ${biasActivationSnippet(addBias, activation)}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`;\n      return userCode;\n    };\n\nexport const createConv2DMatMulProgramInfo =\n    (inputs: readonly TensorView[], attributes: ConvAttributes, outputShape: readonly number[], dimAOuter: number,\n     dimBOuter: number, dimInner: number, hasBias: boolean, sequentialAccessByThreads: boolean): ProgramInfo => {\n      const isChannelsLast = attributes.format === 'NHWC';\n      const inChannels = isChannelsLast ? inputs[0].dims[3] : inputs[0].dims[1];\n      const batchSize = outputShape[0];\n      const outWidth = isChannelsLast ? outputShape[2] : outputShape[3];\n      const outHeight = isChannelsLast ? outputShape[1] : outputShape[2];\n      const outChannels = isChannelsLast ? outputShape[3] : outputShape[1];\n      // TODO: enable vec4 for NCHW\n      const isVec4 = isChannelsLast && (inChannels % 4 === 0 || inChannels % 3 === 0) && outChannels % 4 === 0;\n\n      // TODO: fine tune size\n      const dispatchX = isChannelsLast ? outChannels : outWidth * outHeight;\n      const dispatchY = isChannelsLast ? outWidth * outHeight : outChannels;\n      const workGroupSize: [number, number, number] = [8, 8, 1];\n      const elementsPerThread = dimAOuter <= 8 ? [4, 1, 1] : [4, 4, 1];\n      const dispatch = [\n        Math.ceil(dispatchX / workGroupSize[0] / elementsPerThread[0]),\n        Math.ceil(dispatchY / workGroupSize[1] / elementsPerThread[1]),\n        Math.ceil(batchSize / workGroupSize[2] / elementsPerThread[2])\n      ];\n\n      LOG_DEBUG('verbose', () => `[conv2d_mm_webgpu] dispatch = ${dispatch}`);\n\n      const innerElementSize = isVec4 ? (isChannelsLast && inChannels % 4 !== 0 ? 3 : 4) : elementsPerThread[0];\n\n      const tileAOuter = workGroupSize[1] * elementsPerThread[1];\n      const tileBOuter = workGroupSize[0] * elementsPerThread[0];\n      const tileInner = Math.max(workGroupSize[0] * innerElementSize, workGroupSize[1]);\n\n      const fitAOuter = dimAOuter % tileAOuter === 0;\n      const fitBOuter = dimBOuter % tileBOuter === 0;\n      const fitInner = dimInner % tileInner === 0;\n\n      const elementsSize = isVec4 ? [innerElementSize, 4, 4] : [1, 1, 1];\n      const t = tensorTypeToWsglStorageType(inputs[0].dataType);\n\n      const declareInputs = [\n        `@group(0) @binding(0) var<storage, read> x: array<${isVec4 && innerElementSize === 4 ? `vec4<${t}>` : t}>;`,\n        `@group(0) @binding(1) var<storage, read> w: array<${isVec4 ? `vec4<${t}>` : t}>;`\n      ];\n      let declareFunctions = `\n      fn setOutputAtIndex(flatIndex : i32, value : ${isVec4 ? `vec4<${t}>` : t}) {\n        result[flatIndex] = ${isVec4 ? `vec4<${t}>` : t}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${isVec4 ? `vec4<${t}>` : t}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${isVec4 ? '/ 4' : ''}, value);\n      }`;\n      if (hasBias) {\n        declareInputs.push(`@group(0) @binding(2) var<storage, read> bias: array<${isVec4 ? `vec4<${t}>` : t}>;`);\n        declareFunctions += `\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${isVec4 ? `vec4<${t}>` : t} {\n          return bias[coords.${isChannelsLast ? 'w' : 'y'}${isVec4 ? '/ 4' : ''}];\n        }`;\n      }\n\n      return {\n        name: 'Conv2DMatMul',\n        shaderCache: {hint: attributes.cacheKey},\n        getRunData: () => ({\n          outputs: [{dims: outputShape, dataType: inputs[0].dataType}],\n          dispatchGroup: {x: dispatch[0], y: dispatch[1], z: dispatch[2]},\n        }),\n        getShaderSource: () => `\n        ${utilFunctions}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${declareInputs.join('')}\n        @group(0) @binding(${declareInputs.length}) var<storage, read_write> result: array<${\n            isVec4 ? `vec4<${t}>` : t}>;\n        //@group(0) @binding(${declareInputs.length + 1}) var<uniform> uniforms: Uniforms;\n\n        const xShape : vec4<i32> = vec4<i32>(${inputs[0].dims.join(',')});\n        const wShape : vec4<i32> = vec4<i32>(${inputs[1].dims.join(',')});\n        const outShape : vec4<i32> = vec4<i32>(${outputShape.join(',')});\n        const outShapeStrides : vec3<i32> = vec3<i32>(${ShapeUtil.computeStrides(outputShape).slice(0, 3).join(',')});\n        const filterDims : vec2<i32> = vec2<i32>(${attributes.kernelShape[0]}, ${attributes.kernelShape[1]});\n        const pad : vec2<i32> = vec2<i32>(${attributes.pads[0]}, ${attributes.pads[1]});\n        const stride : vec2<i32> = vec2<i32>(${attributes.strides[0]}, ${attributes.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${attributes.dilations[0]}, ${attributes.dilations[1]});\n        const dimAOuter : i32 = ${dimAOuter};\n        const dimBOuter : i32 = ${dimBOuter};\n        const dimInner : i32 = ${dimInner};\n        ${declareFunctions}\n        ${\n            conv2dCommonSnippet(\n                isChannelsLast, fitAOuter, fitBOuter, fitInner, hasBias, undefined, false, elementsSize[0],\n                elementsSize[1], elementsSize[2], t)}\n            ${\n            isVec4 ?\n                makeMatMulPackedVec4Source(elementsPerThread, workGroupSize, t, undefined, !isChannelsLast, tileInner) :\n                makeMatMulPackedSource(\n                    elementsPerThread, workGroupSize, t, undefined, !isChannelsLast, tileInner, false, undefined,\n                    sequentialAccessByThreads)}`\n      };\n    };\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor-view';\nimport {ShapeUtil} from '../../util';\nimport {ProgramInfo} from '../types';\n\nimport {inputVariable, outputVariable, ShaderHelper} from './common';\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {getActicationSnippet} from './fuse-utils';\n\n/**\n * naive grouped conv implementation, supports 1d/2d conv\n * @param squeezeOutputShapeFunction - an optional function to squeeze the output shape, only used in conv1d\n */\nexport const createGroupedConvProgramInfo =\n    (inputs: readonly TensorView[], attributes: ConvAttributes,\n     squeezeOutputShapeFunction?: (shape: readonly number[]) => number[]): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += b[output_channel];' : '';\n      const xShape = inputs[0].dims;\n      const wShape = inputs[1].dims;\n      const outputChannelsPerGroup = wShape[0] / attributes.group;\n\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\n\n      const isChannelLast = attributes.format === 'NHWC';\n      const outputShape = calculateOutputShape(\n          xShape, wShape, attributes.dilations, attributes.pads, attributes.strides, isChannelLast);\n      const outputSize = ShapeUtil.size(outputShape);\n\n      const output = outputVariable('output', inputs[0].dataType, outputShape);\n      const x = inputVariable('x', inputs[0].dataType, xShape);\n      const w = inputVariable('w', inputs[1].dataType, wShape);\n      const inputVars = [x, w];\n      if (hasBias) {\n        inputVars.push(inputVariable('b', inputs[2].dataType, inputs[2].dims));\n      }\n\n      const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const strides: vec2<u32> = vec2(${attributes.strides[0]}u, ${attributes.strides[1]}u);\n  const pads: vec2<u32> = vec2(${attributes.pads[0]}u, ${attributes.pads[1]}u);\n\n  ${shaderHelper.declareVariables(...inputVars, output)}\n\n  ${activationFunction}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    let outputIndices = ${output.offsetToIndices('global_idx')};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${isChannelLast ? 3 : 1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${isChannelLast ? 1 : 2}], outputIndices[${\n          isChannelLast ? 2 : 3}]) * strides - pads;\n    let group_id: u32 = output_channel / ${outputChannelsPerGroup}u;\n\n    var value: ${output.type.value} = ${output.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < ${wShape[1]}u; wInChannel++) {\n      let input_channel = group_id * ${wShape[1]}u + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < ${wShape[2]}u; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * ${attributes.dilations[0]}u;\n\n        if (xHeight < 0u || xHeight >= ${xShape[isChannelLast ? 1 : 2]}u) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < ${wShape[3]}u; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * ${attributes.dilations[1]}u;\n          if (xWidth < 0u || xWidth >= ${xShape[isChannelLast ? 2 : 3]}u) {\n            continue;\n          }\n\n          let xVal = ${\n          isChannelLast ? x.get('batch', 'xHeight', 'xWidth', 'input_channel') :\n                          x.get('batch', 'input_channel', 'xHeight', 'xWidth')};\n          let wVal = ${w.get('output_channel', 'wInChannel', 'wHeight', 'wWidth')};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${processBias}\n    ${applyActivation}\n    ${output.setByOffset('global_idx', 'value')}\n  }`;\n      return {\n        name: 'GroupedConv',\n        shaderCache: {hint: attributes.cacheKey},\n        getRunData: () => ({\n          outputs: [{\n            dims: squeezeOutputShapeFunction ? squeezeOutputShapeFunction(outputShape) : outputShape,\n            dataType: inputs[0].dataType\n          }],\n          dispatchGroup: {x: Math.ceil(outputSize / 64 /* workgroup size */)},\n        }),\n        getShaderSource,\n      };\n    };\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor-view';\nimport {ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, ProgramInfo} from '../types';\n\nimport {createTensorShapeVariables, IndicesHelper, inputVariable, outputVariable, ShaderHelper} from './common';\n\nexport interface TransposeAttributes extends AttributeWithCacheKey {\n  readonly perm: number[];\n}\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Transpose requires 1 input.');\n  }\n};\n\nconst getAdjustedPerm = (inputRank: number, perm: number[]): number[] =>\n    (perm && perm.length !== inputRank) ? [...(new Array(inputRank).keys())].reverse() : perm;\n\nconst getOutputShape = (inputShape: readonly number[], perm: number[]): readonly number[] =>\n    ShapeUtil.sortBasedOnPerm(inputShape, getAdjustedPerm(inputShape.length, perm));\n\nconst permFunctionBody = (perm: number[], rank: number, input: IndicesHelper, output: IndicesHelper): string => {\n  const reverseFunc = [];\n  reverseFunc.push(`fn perm(i: ${output.type.indices}) -> ${input.type.indices} {\n    var a: ${input.type.indices};`);\n  for (let i = 0; i < rank; ++i) {\n    reverseFunc.push(input.indicesSet('a', perm[i], `i[${i}]`));\n  }\n  reverseFunc.push('return a;}');\n  return reverseFunc.join('\\n');\n};\n\nexport const createTransposeProgramInfo =\n    (inputDataType: number, inputRank: number, permAttr: number[]): ProgramInfo => {\n      const perm = getAdjustedPerm(inputRank, permAttr);\n      const output = outputVariable('output', inputDataType, (permAttr && permAttr.length) || inputRank);\n      const input = inputVariable('a', inputDataType, inputRank);\n\n      const getShaderSource = (shaderHelper: ShaderHelper) => `\n  ${shaderHelper.registerUniform('output_size', 'u32').declareVariables(input, output)}\n\n  ${permFunctionBody(perm, inputRank, input, output)}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes('uniforms.output_size')}\n\n    let indices = ${output.offsetToIndices('global_idx')};\n    let aIndices = perm(indices);\n\n    ${output.setByOffset('global_idx', input.getByIndices('aIndices'))}\n  }`;\n      return {\n        name: 'Transpose',\n        shaderCache: {hint: `${permAttr}`, inputDependencies: ['rank']},\n        getRunData: (inputs) => {\n          const outputShape = getOutputShape(inputs[0].dims, perm);\n          const outputSize = ShapeUtil.size(outputShape);\n          return {\n            outputs: [{dims: outputShape, dataType: inputs[0].dataType}],\n            dispatchGroup: {x: Math.ceil(outputSize / 64 /* workgroup size */)},\n            programUniforms: [\n              {type: 'uint32', data: outputSize},\n              ...createTensorShapeVariables(inputs[0].dims),\n              ...createTensorShapeVariables(outputShape),\n            ],\n          };\n        },\n        getShaderSource,\n      };\n    };\n\nexport const transpose = (context: ComputeContext, attributes: TransposeAttributes): void => {\n  validateInputs(context.inputs);\n  context.compute(\n      createTransposeProgramInfo(context.inputs[0].dataType, context.inputs[0].dims.length, attributes.perm));\n};\n\nexport const parseTransposeAttributes = (attributes: Record<string, unknown>): TransposeAttributes =>\n    createAttributeWithCacheKey({perm: attributes.perm as number[]});\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor-view';\nimport {PoolConvUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext} from '../types';\n\nimport {createConv2DMatMulProgramInfo} from './3rd-party/conv2d_mm_webgpu';\nimport {createMatmulProgramInfo} from './3rd-party/matmul_packed_webgpu';\nimport {createGroupedConvProgramInfo} from './conv-grouped';\nimport {InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createTransposeProgramInfo} from './transpose';\n\nexport const calculateOutputShape =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[],\n     adjustPads: readonly number[], strides: readonly number[], isChannelLast: boolean): number[] => {\n      const batchSize = inputShape[0];\n      const inputSpatialShape = inputShape.slice(isChannelLast ? 1 : 2, isChannelLast ? 3 : 4);\n      const spatialRank = inputSpatialShape.length;\n      const outChannels = kernelShape[0];\n      const kernelSpatialShape = kernelShape.slice(2);\n      const dilatedKernelShape = kernelSpatialShape.map((v, i) => v + (v - 1) * (dilations[i] - 1));\n      const inputSpatialShapeWithPad = inputSpatialShape.map((v, i) => v + adjustPads[i] + adjustPads[i + spatialRank]);\n      const outputShape =\n          inputSpatialShapeWithPad.map((v, i) => Math.floor((v - dilatedKernelShape[i] + strides[i]) / strides[i]));\n      outputShape.splice(0, 0, batchSize);\n      outputShape.splice(isChannelLast ? 3 : 1, 0, outChannels);\n      return outputShape;\n    };\n\nexport interface ConvAttributes extends InternalActivationAttributes, AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly dilations: readonly number[];\n  readonly format: 'NHWC'|'NCHW';\n  readonly group: number;\n  readonly kernelShape: readonly number[];\n  readonly pads: readonly number[];\n  readonly strides: readonly number[];\n  readonly wIsConst: boolean;\n}\n\n// for transposing weight tensor from [M, C/group, KH, KW] to [KH, KW, C/group, M]\nconst weightTransposeAttribute = [2, 3, 1, 0];\n\nconst validateInputs = (inputs: readonly TensorView[], attributes: ConvAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/master/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 && inputs[0].dims.length !== 3) {\n    throw new Error('currently only support conv 1D and 2D');\n  }\n\n  if (inputs[0].dims.length !== inputs[1].dims.length) {\n    throw new Error('filter does not have same dimension as input');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[attributes.format === 'NHWC' ? inputs[0].dims.length - 1 : 1];\n  const filterInChannel = inputs[1].dims[1] * attributes.group;\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[1].dims[0] !== inputs[2].dims[0])) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n};\n\nconst getAdjustedConvAttributes = <T extends ConvAttributes>(attributes: T, inputs: readonly TensorView[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  for (let i = 2; i < inputs[1].dims.length; ++i) {\n    if (kernelShape[i - 2] === 0) {\n      kernelShape[i - 2] = inputs[1].dims[i];\n    }\n  }\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPadsBasedOnAutoPad(\n      inputs[0].dims, attributes.strides, attributes.dilations, kernelShape, pads, attributes.format === 'NHWC',\n      attributes.autoPad);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvAttributes = (attributes: Record<string, unknown>): ConvAttributes => {\n  const activationAttributes = parseInternalActivationAttributes(attributes);\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n  const format = attributes.format as 'NHWC' | 'NCHW';\n  const autoPad = ['NOTSET', 'VALID', 'SAME_UPPER', 'SAME_LOWER'][attributes.auto_pad as number];\n  const dilations = attributes.dilations as [number, number];\n  const group = attributes.group as number;\n  const kernelShape = attributes.kernel_shape as [number, number];\n  const pads = attributes.pads as [number, number, number, number];\n  const strides = attributes.strides as [number, number];\n  const wIsConst = (attributes.w_is_const as () => boolean)();\n\n  return createAttributeWithCacheKey(\n      {autoPad, format, dilations, group, kernelShape, pads, strides, wIsConst, ...activationAttributes});\n};\n\nconst conv2d = (context: ComputeContext, inputs: readonly TensorView[], attributes: ConvAttributes): void => {\n  const adjustedAttributes = getAdjustedConvAttributes(attributes, inputs);\n\n  // check attributes\n\n  // const hasPreluActivationWeights = false; /* TODO: add support for prelu activation weights */\n  if (attributes.group !== 1) {\n    context.compute(createGroupedConvProgramInfo(inputs, adjustedAttributes));\n    return;\n  }\n\n  const isChannelsLast = attributes.format === 'NHWC';\n  const hasBias = inputs.length === 3;\n  const inputHeight = inputs[0].dims[isChannelsLast ? 1 : 2];\n  const inputWidth = inputs[0].dims[isChannelsLast ? 2 : 3];\n  const inputChannels = inputs[0].dims[isChannelsLast ? 3 : 1];\n  const weightHeight = inputs[1].dims[2];\n  const weightWidth = inputs[1].dims[3];\n\n  const outputShape = calculateOutputShape(\n      inputs[0].dims, inputs[1].dims, attributes.dilations, adjustedAttributes.pads, attributes.strides,\n      isChannelsLast);\n  const outHeight = outputShape[isChannelsLast ? 1 : 2];\n  const outWidth = outputShape[isChannelsLast ? 2 : 3];\n  const outChannels = outputShape[isChannelsLast ? 3 : 1];\n\n  const sameSize = isChannelsLast && weightHeight === inputHeight && weightWidth === inputWidth &&\n      attributes.pads[0] === 0 && attributes.pads[1] === 0;\n  if (sameSize ||\n      (weightHeight === 1 && weightWidth === 1 && attributes.dilations[0] === 1 && attributes.dilations[1] === 1 &&\n       attributes.strides[0] === 1 && attributes.strides[1] === 1 && attributes.pads[0] === 0 &&\n       attributes.pads[1] === 0)) {\n    // conv2dByMatMul\n    const batch = outputShape[0];\n    let xReshaped, wReshaped, matmulOutputShape;\n    const matmulInputs = [];\n    if (isChannelsLast) {\n      const transposedWeight = (context.kernelCustomData.wT as TensorView | undefined) ??\n          context.compute(\n              createTransposeProgramInfo(inputs[1].dataType, inputs[1].dims.length, weightTransposeAttribute),\n              {inputs: [1], outputs: [attributes.wIsConst ? -2 : -1]})[0];\n      if (attributes.wIsConst && !context.kernelCustomData.wT) {\n        context.kernelCustomData.wT = transposedWeight;\n      }\n      if (sameSize) {\n        const sharedDim = inputHeight * inputWidth * inputChannels;\n        xReshaped = inputs[0].reshape([1, batch, sharedDim]);\n        wReshaped = transposedWeight.reshape([1, sharedDim, outChannels]);\n        matmulOutputShape = [1, batch, outChannels];\n      } else {\n        xReshaped = inputs[0].reshape([batch, inputHeight * inputWidth, inputChannels]);\n        wReshaped = transposedWeight.reshape([1, inputChannels, outChannels]);\n        matmulOutputShape = [batch, outHeight * outWidth, outChannels];\n      }\n      matmulInputs.push(xReshaped);\n      matmulInputs.push(wReshaped);\n    } else {\n      xReshaped = inputs[0].reshape([batch, inputChannels, inputHeight * inputWidth]);\n      wReshaped = inputs[1].reshape([1, outChannels, inputChannels]);\n      matmulOutputShape = [batch, outChannels, outHeight * outWidth];\n      matmulInputs.push(wReshaped);\n      matmulInputs.push(xReshaped);\n    }\n    if (hasBias) {\n      matmulInputs.push(inputs[2]);\n    }\n    context.compute(\n        createMatmulProgramInfo(matmulInputs, adjustedAttributes, outputShape, matmulOutputShape, isChannelsLast),\n        {inputs: matmulInputs});\n    return;\n  }\n\n  // TODO: implement conv2dWithIm2Col()\n\n  const sequentialAccessByThreads = /* backend.adapterInfo.isIntel() */ true;\n\n  // STEP.1: transpose weight\n  const transposedWeight = (context.kernelCustomData.wT as TensorView | undefined) ??\n      context.compute(\n          createTransposeProgramInfo(inputs[1].dataType, inputs[1].dims.length, weightTransposeAttribute),\n          {inputs: [1], outputs: [attributes.wIsConst ? -2 : -1]})[0];\n  if (attributes.wIsConst && !context.kernelCustomData.wT) {\n    context.kernelCustomData.wT = transposedWeight;\n  }\n\n  // STEP.2: prepare reshaped inputs\n  const convInputs = [inputs[0], transposedWeight];\n  if (hasBias) {\n    convInputs.push(inputs[2]);\n  }\n\n  // STEP.3: compute matmul\n  const dimAOuter = isChannelsLast ? outHeight * outWidth : outChannels;\n  const dimBOuter = isChannelsLast ? outChannels : outHeight * outWidth;\n  const dimInner = weightHeight * weightWidth * inputChannels;\n  context.compute(\n      createConv2DMatMulProgramInfo(\n          convInputs, adjustedAttributes, outputShape, dimAOuter, dimBOuter, dimInner, hasBias,\n          sequentialAccessByThreads),\n      {inputs: convInputs});\n};\n\nconst conv1d = (context: ComputeContext, attributes: ConvAttributes): void => {\n  // extend the input to 2D by adding H dimension\n  const isChannelLast = attributes.format === 'NHWC';\n  const inputs = [\n    context.inputs[0].reshape(\n        isChannelLast ?\n            // [N, W, C] -> [N, H=1, W, C]\n            [context.inputs[0].dims[0], 1, context.inputs[0].dims[1], context.inputs[0].dims[2]] :\n            // [N, C, W] -> [N, C, H=1, W]\n            [context.inputs[0].dims[0], context.inputs[0].dims[1], 1, context.inputs[0].dims[2]]),\n    //[FILTER_OUT_CHANNEL, FILTER_IN_CHANNEL, kW] -> [FILTER_OUT_CHANNEL, FILTER_IN_CHANNEL, kH=1, kW]\n    context.inputs[1].reshape([context.inputs[1].dims[0], context.inputs[1].dims[1], 1, context.inputs[1].dims[2]])\n  ];\n  if (context.inputs.length === 3) {\n    inputs.push(context.inputs[2]);\n  }\n  const pads = [0, attributes.pads[0], 0, attributes.pads[1]];\n  const strides = [1].concat(attributes.strides);\n  const dilations = [1].concat(attributes.dilations);\n  const kernelShape = [1].concat(attributes.kernelShape);\n  const adjustedAttributes = getAdjustedConvAttributes({...attributes, pads, strides, dilations, kernelShape}, inputs);\n  context.compute(createGroupedConvProgramInfo(\n      inputs, adjustedAttributes,\n      outputShape => isChannelLast ? [outputShape[0], outputShape[2], outputShape[3]] : []));\n};\n\nexport const conv = (context: ComputeContext, attributes: ConvAttributes): void => {\n  validateInputs(context.inputs, attributes);  // currently will fail if not conv1D/2D\n  if (context.inputs[0].dims.length === 3) {\n    conv1d(context, attributes);\n  } else {\n    conv2d(context, context.inputs, attributes);\n  }\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-backend-webgpu/src/conv_backprop_mm_webgpu.ts\n//\n// modified to fit the needs of the project\n\nimport {LOG_DEBUG} from '../../../log';\nimport {TensorView} from '../../../tensor-view';\nimport {ShapeUtil} from '../../../util';\nimport {ProgramInfo} from '../../types';\nimport {ConvTransposeAttributes} from '../conv-transpose';\n\nimport {Activation, activationFnSnippet, biasActivationSnippet, typeSnippet} from './activation_util';\nimport {utilFunctions} from './conv_util';\nimport {makeMatMulPackedSource, makeMatMulPackedVec4Source} from './matmul_packed_webgpu';\n\nconst conv2dTransposeCommonSnippet =\n    (isChannelsLast: boolean, addBias = false, activation?: Activation, hasPreluActivationWeights = false,\n     innerElementSize = 4): string => {\n      const type = typeSnippet(innerElementSize, 'f32');\n      const getWSnippet = (innerElementSize: number) => {\n        switch (innerElementSize) {\n          case 1:\n            return 'return W[getIndexFromCoords4D(coord, wShape)];';\n          case 4:\n            return `\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = W[getIndexFromCoords4D(coord, wShape)];\n            let v1 = W[getIndexFromCoords4D(coord1, wShape)];\n            let v2 = W[getIndexFromCoords4D(coord2, wShape)];\n            let v3 = W[getIndexFromCoords4D(coord3, wShape)];\n            return vec4<f32>(v0, v1, v2, v3);\n            `;\n          default:\n            throw new Error(`innerElementSize ${innerElementSize} is not supported.`);\n        }\n      };\n      const coordASnippet = isChannelsLast ? `\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      ` :\n                                             `\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `;\n\n      const coordResSnippet = isChannelsLast ? `\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    ` :\n                                               `\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `;\n\n      const xHeight = isChannelsLast ? 'outBackprop[1]' : 'outBackprop[2]';\n      const xWidth = isChannelsLast ? 'outBackprop[2]' : 'outBackprop[3]';\n      const row = isChannelsLast ? 'row' : 'col';\n      const col = isChannelsLast ? 'col' : 'row';\n\n      const readASnippet = `\n      let inChannels = ${isChannelsLast ? 'outBackprop[3]' : 'outBackprop[1]'};\n      let outWidth = ${isChannelsLast ? 'outShape[2]' : 'outShape[3]'};\n      let outRow = ${row} / outWidth;\n      let outCol = ${row} % outWidth;\n\n      let WRow = ${col} / (filterDims[1] * inChannels);\n      let WCol = ${col} / inChannels % filterDims[1];\n      let xR = f32(outRow - pads[0] + dilation[0] * WRow) / f32(strides[0]);\n      let xC = f32(outCol - pads[1] + dilation[1] * WCol) / f32(strides[1]);\n      if (xR < 0.0 || xR >= f32(${xHeight}) || fract(xR) > 0.0) {\n        return ${type}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${xWidth}) || fract(xC) > 0.0) {\n        return ${type}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${col} % inChannels;\n      ${coordASnippet}\n      return x[getIndexFromCoords4D(coord, xShape)/${innerElementSize}];`;\n\n      const sampleA = isChannelsLast ? `\n      let col = colIn * ${innerElementSize};\n      if (row < dimAOuter && col < dimInner) {\n        ${readASnippet}\n      }\n      return ${type}(0.0);` :\n                                       `\n      let col = colIn * ${innerElementSize};\n      if (row < dimInner && col < dimBOuter) {\n        ${readASnippet}\n      }\n      return ${type}(0.0);`;\n\n      const sampleW = `\n      let col = colIn * ${innerElementSize};\n      let inChannels = ${isChannelsLast ? 'outBackprop[3]' : 'outBackprop[1]'};\n      let coordX = filterDims.x - 1 - row / (filterDims[1] * inChannels);\n      let coordY = filterDims.y - 1 - (row / inChannels) % filterDims[1];\n      if (${\n          isChannelsLast ? 'row < dimInner && col < dimBOuter' :\n                           'row < dimInner && col < dimAOuter'}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${getWSnippet(innerElementSize)}\n      }\n      return ${type}(0.0);\n      `;\n\n\n      const userCode = `\n  ${activationFnSnippet(activation, hasPreluActivationWeights, innerElementSize === 4, 4)}\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${type} {\n    ${isChannelsLast ? sampleA : sampleW}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${type} {\n    ${isChannelsLast ? sampleW : sampleA}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${type}) {\n    let col = colIn * ${innerElementSize};\n    if (row < dimAOuter && col < dimBOuter) {\n      var value = valueInput;\n      let outWidth = ${isChannelsLast ? 'outShape[2]' : 'outShape[3]'};\n      ${coordResSnippet}\n      ${biasActivationSnippet(addBias, activation)}\n      result[getIndexFromCoords4D(coords, outShape)/${innerElementSize}] = value;\n    }\n  }`;\n      return userCode;\n    };\n\nexport const createConv2DTransposeMatMulProgramInfo =\n    (inputs: readonly TensorView[], attributes: ConvTransposeAttributes, outputShape: readonly number[],\n     dimAOuter: number, dimBOuter: number, dimInner: number, hasBias: boolean,\n     sequentialAccessByThreads: boolean): ProgramInfo => {\n      const isChannelsLast = attributes.format === 'NHWC';\n      const inChannels = isChannelsLast ? inputs[0].dims[3] : inputs[0].dims[1];\n      const batchSize = outputShape[0];\n      const outWidth = isChannelsLast ? outputShape[2] : outputShape[3];\n      const outHeight = isChannelsLast ? outputShape[1] : outputShape[2];\n      const outChannels = isChannelsLast ? outputShape[3] : outputShape[1];\n      const isVec4 =\n          isChannelsLast ? inChannels % 4 === 0 && outChannels % 4 === 0 : outWidth % 4 === 0 && outChannels % 4 === 0;\n\n      // TODO: fine tune size\n      const dispatchX = isChannelsLast ? outChannels : outWidth * outHeight;\n      const dispatchY = isChannelsLast ? outWidth * outHeight : outChannels;\n      const workGroupSize: [number, number, number] = isVec4 ?\n          [8, 8, 1] :\n          [(dispatchX <= 4 || dispatchY <= 4) ? 4 : 16, dispatchX > 4 && dispatchY <= 4 ? 4 : 16, 1];\n      const elementsPerThread =\n          isVec4 ? [4, 4, 1] : [dispatchX <= 4 ? 1 : 4, dispatchX > 4 && dispatchY <= 4 ? 1 : 4, 1];\n      const dispatch = [\n        Math.ceil(dispatchX / workGroupSize[0] / elementsPerThread[0]),\n        Math.ceil(dispatchY / workGroupSize[1] / elementsPerThread[1]),\n        Math.ceil(batchSize / workGroupSize[2] / elementsPerThread[2])\n      ];\n\n      LOG_DEBUG('verbose', () => `[conv_backprop_mm_webgpu] dispatch = ${dispatch}`);\n\n      const innerElementSize = isVec4 ? 4 : 1;\n      const tileInner = Math.max(workGroupSize[0] * innerElementSize, workGroupSize[1]);\n\n\n      const declareInputs = [\n        `@group(0) @binding(0) var<storage, read> x: array<${isVec4 ? 'vec4<f32>' : 'f32'}>;`,\n        '@group(0) @binding(1) var<storage, read> W: array<f32>;'\n      ];\n      let declareFunctions = '';\n      if (hasBias) {\n        declareInputs.push(`@group(0) @binding(2) var<storage, read> bias: array<${isVec4 ? 'vec4<f32>' : 'f32'}>;`);\n        declareFunctions += `\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${isVec4 ? 'vec4<f32>' : 'f32'} {\n          return bias[coords.${isChannelsLast ? 'w' : 'y'}${isVec4 ? '/ 4' : ''}];\n        }`;\n      }\n      return {\n        name: 'Conv2DTransposeMatMul',\n        shaderCache: {hint: attributes.cacheKey},\n        getRunData: () => ({\n          outputs: [{dims: outputShape, dataType: inputs[0].dataType}],\n          dispatchGroup: {x: dispatch[0], y: dispatch[1], z: dispatch[2]}\n        }),\n        getShaderSource: () => `\n        ${utilFunctions}\n        ${declareInputs.join('\\n')}\n        @group(0) @binding(${declareInputs.length}) var<storage, read_write> result: array<${\n            isVec4 ? 'vec4<f32>' : 'f32'}>;\n        const outBackprop : vec4<i32> = vec4<i32>(${inputs[0].dims.join(',')});\n        const xShape : vec4<i32> = vec4<i32>(${inputs[0].dims.join(',')});\n        const wShape : vec4<i32> = vec4<i32>(${inputs[1].dims.join(',')});\n        const outShape : vec4<i32> = vec4<i32>(${outputShape.join(',')});\n        const outShapeStrides : vec3<i32> = vec3<i32>(${ShapeUtil.computeStrides(outputShape).slice(0, 3).join(',')});\n        const filterDims : vec2<i32> = vec2<i32>(${attributes.kernelShape[isChannelsLast ? 1 : 2]}, ${\n            attributes.kernelShape[isChannelsLast ? 2 : 3]});\n        const effectiveFilterDims : vec2<i32> = filterDims + vec2<i32>(\n              ${\n            attributes.dilations[0] <= 1 ?\n                0 :\n                (attributes.kernelShape[isChannelsLast ? 1 : 2] - 1) * (attributes.dilations[0] - 1)},\n              ${\n            attributes.dilations[1] <= 1 ?\n                0 :\n                (attributes.kernelShape[isChannelsLast ? 2 : 3] - 1) * (attributes.dilations[1] - 1)});\n        const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${\n            attributes.pads[0] + attributes.pads[2]})/2,\n                                         i32(effectiveFilterDims[1]) - 1 - (${\n            attributes.pads[1] + attributes.pads[3]})/2);\n        const strides : vec2<i32> = vec2<i32>(${attributes.strides[0]}, ${attributes.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${attributes.dilations[0]}, ${attributes.dilations[1]});\n        const dimAOuter : i32 = ${dimAOuter};\n        const dimBOuter : i32 = ${dimBOuter};\n        const dimInner : i32 = ${dimInner};\n        ${declareFunctions}\n        ${conv2dTransposeCommonSnippet(isChannelsLast, hasBias, undefined, false, innerElementSize)}\n        ${\n            isVec4 ? makeMatMulPackedVec4Source(\n                         elementsPerThread, workGroupSize, 'f32', undefined, !isChannelsLast, tileInner) :\n                     makeMatMulPackedSource(\n                         elementsPerThread, workGroupSize, 'f32', undefined, !isChannelsLast, tileInner, false,\n                         undefined, sequentialAccessByThreads)}`\n      };\n    };\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-backend-webgpu/src/conv_backprop_webgpu.ts\n\nimport {LOG_DEBUG} from '../../../log';\nimport {TensorView} from '../../../tensor-view';\nimport {ShapeUtil} from '../../../util';\nimport {ProgramInfo} from '../../types';\nimport {inputVariable, outputVariable, ShaderHelper, tensorTypeToWsglStorageType} from '../common';\nimport {ConvTransposeAttributes} from '../conv-transpose';\n\nconst createConvTranspose2DOpProgramShaderSource =\n    (shaderHelper: ShaderHelper, inputs: readonly TensorView[], attributes: ConvTransposeAttributes,\n     outputShape: readonly number[], hasBias: boolean, is1DimensionDispatch: boolean, isVec4 = false,\n     dataType: string): string => {\n      const isChannelsLast = attributes.format === 'NHWC';\n      const rowDim = isChannelsLast ? 1 : 2;\n      const colDim = isChannelsLast ? 2 : 3;\n      const channelDim = isChannelsLast ? 3 : 1;\n      const outputSize = ShapeUtil.size(outputShape);\n      const workPerThread = isVec4 ? 2 : 1;\n      const group = attributes.group;\n      const wShape = inputs[1].dims;\n      const inputChannelsPerGroup = wShape[0] / group;\n      const outputChannelsPerGroup = wShape[1];\n\n      let declareFunctions = `\n  fn setOutputAtIndex(flatIndex : u32, value : ${isVec4 ? `vec4<${dataType}>` : dataType}) {\n    result[flatIndex] = ${isVec4 ? `vec4<${dataType}>` : dataType}(value);\n  }`;\n      if (hasBias) {\n        declareFunctions += `\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${isVec4 ? `vec4<${dataType}>` : dataType} {\n      return bias[coords.${isChannelsLast ? 'w' : 'y'}${isVec4 ? '/ 4' : ''}];\n    }`;\n      }\n      const components = isVec4 ? 4 : 1;\n      const w = inputVariable('W', inputs[1].dataType, inputs[1].dims, components);\n      const dy = inputVariable('Dy', inputs[0].dataType, inputs[0].dims, components);\n      const inputVariables = [dy, w];\n      if (hasBias) {\n        inputVariables.push(inputVariable('bias', inputs[2].dataType, [outputShape[channelDim]], components));\n      }\n      const output = outputVariable('result', inputs[0].dataType, outputShape, components);\n      const codeSnippet4 = `{\n        let batch: u32 = ${is1DimensionDispatch ? 'global_id.z' : 'workgroup_id.z'} / outShape[1];\n        let r = ${is1DimensionDispatch ? 'global_id.z' : 'workgroup_id.z'} % outShape[1];\n        let c = ${is1DimensionDispatch ? 'global_id.y' : 'workgroup_id.y'} * ${workPerThread};\n        let d1: u32 = ${is1DimensionDispatch ? 'global_id.x' : 'workgroup_id.x'} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${dataType}>, ${workPerThread}>;\n        for (var i = 0; i < ${workPerThread}; i++) {\n          dotProd[i] = vec4<${dataType}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < filterDims[0]; wR = wR + 1) {\n          var dyR = (${dataType}(dyCorner.x) + ${dataType}(wR)) / ${dataType}(strides.x);\n          let wRPerm = filterDims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${dataType}(outBackprop[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < filterDims[1]; wC = wC + 1) {\n            let dyC = (${dataType}(dyCorner.y) + ${dataType}(wC)) / ${dataType}(strides.y);\n            let dyC2 = (${dataType}(dyCorner.y) + 1.0 + ${dataType}(wC)) / ${dataType}(strides.y);\n            let wCPerm = filterDims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${dataType}(outBackprop[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${dataType}(outBackprop[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = outBackprop[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${w.get('u32(wRPerm)', 'u32(wCPerm)', 'd1', 'd2')};\n                let wValue1 = ${w.get('u32(wRPerm)', 'u32(wCPerm)', 'd1 + 1', 'd2')};\n                let wValue2 = ${w.get('u32(wRPerm)', 'u32(wCPerm)', 'd1 + 2', 'd2')};\n                let wValue3 = ${w.get('u32(wRPerm)', 'u32(wCPerm)', 'd1 + 3', 'd2')};\n\n                var xValue = ${dy.get('batch', 'idyR', 'idyC', 'd2')};\n                let tmpval = vec4<${dataType}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${dy.get('batch', 'idyR', 'idyC2', 'd2')};\n\n                dotProd[1] = dotProd[1] + vec4<${dataType}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = outBackprop[${channelDim}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${w.get('u32(wRPerm)', 'u32(wCPerm)', 'd1', 'd2')};\n                let wValue1 = ${w.get('u32(wRPerm)', 'u32(wCPerm)', 'd1 + 1', 'd2')};\n                let wValue2 = ${w.get('u32(wRPerm)', 'u32(wCPerm)', 'd1 + 2', 'd2')};\n                let wValue3 = ${w.get('u32(wRPerm)', 'u32(wCPerm)', 'd1 + 3', 'd2')};\n\n                var xValue = ${dy.get('batch', 'idyR', 'idyC', 'd2')};\n                let tmpval = vec4<${dataType}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = outBackprop[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${w.get('u32(wRPerm)', 'u32(wCPerm)', 'd1', 'd2')};\n                let wValue1 = ${w.get('u32(wRPerm)', 'u32(wCPerm)', 'd1 + 1', 'd2')};\n                let wValue2 = ${w.get('u32(wRPerm)', 'u32(wCPerm)', 'd1 + 2', 'd2')};\n                let wValue3 = ${w.get('u32(wRPerm)', 'u32(wCPerm)', 'd1 + 3', 'd2')};\n\n                var xValue = ${dy.get('batch', 'idyR', 'idyC2', 'd2')};\n                let tmpval = vec4<${dataType}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${workPerThread}; i = i + 1) {\n          let value = dotProd[i] + ${hasBias ? 'bias[c+i]' : '0.0'};\n          ${output.set('batch', 'r', 'c + i', 'd1', 'value')};\n        }\n      }`;\n      const codeSnippet = `\n          let outputIndices = ${output.offsetToIndices('global_idx')};\n          let batch = ${output.indicesGet('outputIndices', 0)};\n          let d1 = ${output.indicesGet('outputIndices', channelDim)};\n          let r = ${output.indicesGet('outputIndices', rowDim)};\n          let c = ${output.indicesGet('outputIndices', colDim)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / ${outputChannelsPerGroup};\n          let wOutChannel = d1 - groupId * ${outputChannelsPerGroup};\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = 0.0;\n          for (var wR: u32 = 0; wR < effectiveFilterDims.x; wR = wR + 1) {\n            if (wR % dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${dataType}(dyRCorner) + ${dataType}(wR)) / ${dataType}(strides[0]);\n            let wRPerm = filterDims.x - 1 - wR / dilations.x;\n            if (dyR < 0.0 || dyR >= ${dataType}(outBackprop[${rowDim}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < effectiveFilterDims.y; wC = wC + 1) {\n              if (wC % dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${dataType}(dyCCorner) + ${dataType}(wC)) / ${dataType}(strides.y);\n              let wCPerm = filterDims.y - 1 - wC / dilations.y;\n              if (dyC < 0.0 || dyC >= ${dataType}(outBackprop[${colDim}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * ${inputChannelsPerGroup};\n              for (var d2: u32 = 0; d2 < ${inputChannelsPerGroup}; d2 = d2 + 1) {\n                let xValue = ${\n          isChannelsLast ? dy.get('batch', 'idyR', 'idyC', 'inputChannel') :\n                           dy.get('batch', 'inputChannel', 'idyR', 'idyC')};\n                let wValue = ${w.get('inputChannel', 'wOutChannel', 'u32(wRPerm)', 'u32(wCPerm)')};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${hasBias ? 'bias[d1]' : '0.0'};\n          ${output.setByOffset('global_idx', 'value')};\n        `;\n\n      return `\n  ${shaderHelper.declareVariables(...inputVariables, output)}\n  ${declareFunctions}\n  const outShape : vec4<u32> = vec4<u32>(${outputShape.join(',')});\n  const outBackprop : vec4<u32> = vec4<u32>(${inputs[0].dims.join(',')});\n  const strides : vec2<u32> = vec2<u32>(${attributes.strides[0]}, ${attributes.strides[1]});\n  const filterDims : vec2<u32> = vec2<u32>(${attributes.kernelShape[isChannelsLast ? 1 : 2]}, ${\n          attributes.kernelShape[isChannelsLast ? 2 : 3]});\n  const dilations : vec2<u32> = vec2<u32>(${attributes.dilations[0]}, ${attributes.dilations[1]});\n  const effectiveFilterDims : vec2<u32> = filterDims + vec2<u32>(\n          ${\n          attributes.dilations[0] <= 1 ?\n              0 :\n              (attributes.kernelShape[isChannelsLast ? 1 : 2] - 1) * (attributes.dilations[0] - 1)},\n          ${\n          attributes.dilations[1] <= 1 ?\n              0 :\n              (attributes.kernelShape[isChannelsLast ? 2 : 3] - 1) * (attributes.dilations[1] - 1)});\n  const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${attributes.pads[0] + attributes.pads[2]})/2,\n                                     i32(effectiveFilterDims[1]) - 1 - (${attributes.pads[1] + attributes.pads[3]})/2);\n    ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)};\n  ${isVec4 ? codeSnippet4 : codeSnippet}}`;\n    };\n\nexport const createConvTranspose2DProgramInfo =\n    (inputs: readonly TensorView[], attributes: ConvTransposeAttributes,\n     squeezeOutputShapeFunction?: (shape: readonly number[]) => number[]): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      // const isChannelsLast = attributes.format === 'NHWC';\n      const outputShape = attributes.outputShape;\n      const outputSize = ShapeUtil.size(outputShape);\n\n      // const inChannels = inputs[0].dims[isChannelsLast ? 3 : 1];\n      // TODO Enable isVec4 for performance\n      // Disabled due to weight matrix layout issue\n      // const isVec4 = attributes.group === 1 && isChannelsLast && inChannels % 4 === 0 && outChannels % 4 === 0;\n      const dispatch = [\n        Math.ceil(outputSize / 64),\n        1,\n        1,\n      ];\n      LOG_DEBUG('verbose', () => `[conv2d_backprop_webgpu] dispatch = ${dispatch}`);\n\n      const dataType = tensorTypeToWsglStorageType(inputs[0].dataType);\n      return {\n        name: 'ConvTranspose2D',\n        shaderCache: {hint: attributes.cacheKey},\n        getRunData: () => ({\n          dispatchGroup: {x: dispatch[0], y: dispatch[1], z: dispatch[2]},\n          outputs: [{\n            dims: squeezeOutputShapeFunction ? squeezeOutputShapeFunction(outputShape) : outputShape,\n            dataType: inputs[0].dataType\n          }]\n        }),\n        getShaderSource: (shaderHelper: ShaderHelper) => createConvTranspose2DOpProgramShaderSource(\n            shaderHelper, inputs, attributes, outputShape, hasBias, dispatch[1] === 1 && dispatch[2] === 1, false,\n            dataType),\n      };\n    };\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor-view';\nimport {createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext} from '../types';\n\nimport {createConv2DTransposeMatMulProgramInfo} from './3rd-party/conv_backprop_mm_webgpu';\nimport {createConvTranspose2DProgramInfo} from './3rd-party/conv_backprop_webgpu';\nimport {ConvAttributes} from './conv';\nimport {parseInternalActivationAttributes} from './fuse-utils';\nimport {createTransposeProgramInfo} from './transpose';\n\nconst computeTotalPad =\n    (inDim: number, stride: number, adj: number, kernel: number, dilation: number, outSize: number) =>\n        (inDim - 1) * stride + adj + (kernel - 1) * dilation + 1 - outSize;\n\nconst distributePadding = (totalPad: number, autoPad: string, pads: number[], head: number, tail: number) => {\n  const smallPad = Math.floor(totalPad / 2);\n  if (autoPad === 'SAME_UPPER') {\n    pads[head] = smallPad;\n    pads[tail] = totalPad - smallPad;\n  } else if (autoPad === 'SAME_LOWER') {\n    pads[head] = totalPad - smallPad;\n    pads[tail] = smallPad;\n  }\n};\n\nconst calculateOutputShapeAndPads =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[], autoPad: string,\n     group: number, pads: number[], strides: readonly number[], isChannelLast: boolean, outputPadding: number[],\n     outputShape: number[]) => {\n      const spatialRank = inputShape.length - 2;\n      const updateOutputShape = outputShape.length === 0;\n      if (outputPadding.length === 0) {\n        for (let i = 0; i < spatialRank; ++i) {\n          outputPadding.push(0);\n        }\n      }\n      const batchSize = inputShape[0];\n      const outChannels = kernelShape[isChannelLast ? 3 : 1] * group;\n      for (let i = 0, j = inputShape.length - spatialRank - (isChannelLast ? 1 : 0); i < spatialRank; ++i, ++j) {\n        const inSize = inputShape[j];\n        const outSize = updateOutputShape ? inSize * strides[i] : outputShape[i];\n        const totalPad = computeTotalPad(inSize, strides[i], pads[i], kernelShape[j], dilations[i], outSize);\n        distributePadding(totalPad, autoPad, pads, i, i + spatialRank);\n        if (updateOutputShape) {\n          outputShape.push(\n              strides[i] * (inSize - 1) + outputPadding[i] + (kernelShape[j] - 1) * dilations[i] + 1 - pads[i] -\n              pads[i + spatialRank]);\n        }\n      }\n      outputShape.splice(0, 0, batchSize);\n      outputShape.splice(isChannelLast ? 3 : 1, 0, outChannels);\n    };\n\nexport interface ConvTransposeAttributes extends ConvAttributes {\n  readonly outputPadding: readonly number[];\n  readonly outputShape: readonly number[];\n}\n\n\nconst getAdjustedConvTransposeAttributes =\n    <T extends ConvTransposeAttributes>(attributes: T, inputs: readonly TensorView[]): T => {\n      const kernelShape = attributes.kernelShape.slice();\n      // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n      if (attributes.kernelShape.length === 0 || attributes.kernelShape.reduce((a, b) => a * b, 1) === 0) {\n        kernelShape.length = 0;\n        for (let i = 2; i < inputs[1].dims.length; ++i) {\n          kernelShape.push(inputs[1].dims[i]);\n        }\n      }\n      const isChannelsLast = attributes.format === 'NHWC';\n      kernelShape.splice(0, 0, inputs[1].dims[0]);\n      kernelShape.splice(isChannelsLast ? 3 : 1, 0, inputs[1].dims[1]);\n\n      const pads = attributes.pads.slice();\n      const outputShape = attributes.outputShape.slice();\n      const outputPadding = attributes.outputPadding.slice();\n      const inputShape = inputs[0].dims;\n      let dilations = attributes.dilations.slice();\n      if (dilations.reduce((a, b) => a + b, 0) === 0) {\n        const spatialRank = inputs[0].dims.length - 2;\n        dilations = new Array(spatialRank).fill(1);\n      }\n      let strides = attributes.strides.slice();\n      if (strides.reduce((a, b) => a + b, 0) === 0) {\n        const spatialRank = inputs[0].dims.length - 2;\n        strides = new Array(spatialRank).fill(1);\n      }\n      // If outputShape is not specified in the attributes of this op, infer it from the parameters\n      // Similarly, automatically infer pads if not specified\n      calculateOutputShapeAndPads(\n          inputShape, kernelShape, dilations, attributes.autoPad, attributes.group, pads, strides, isChannelsLast,\n          outputPadding, outputShape);\n\n      // always return a new object so does not modify the original attributes\n      const newAttributes: T = Object.assign({}, attributes);\n      const cacheKey = attributes.cacheKey + [\n        kernelShape.join('n,'), pads.join(','), strides.join(','), outputPadding.join(','), outputShape.join(','),\n        dilations.join(',')\n      ].join('_');\n      Object.assign(newAttributes, {kernelShape, pads, outputPadding, outputShape, dilations, strides, cacheKey});\n      return newAttributes;\n    };\n\nexport const parseConvTransposeAttributes = (attributes: Record<string, unknown>): ConvTransposeAttributes => {\n  const activationAttributes = parseInternalActivationAttributes(attributes);\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n  const format = attributes.format as 'NHWC' | 'NCHW';\n  const autoPad =\n      ['NOTSET', 'VALID', 'SAME_UPPER',\n       'SAME_LOWER'][typeof attributes.autoPad == 'undefined' ? 0 : attributes.autoPad as number];\n  const dilations = attributes.dilations as [number, number];\n  const group = attributes.group as number;\n  const kernelShape = attributes.kernelShape as [number, number];\n  const pads = attributes.pads as [number, number, number, number];\n  const strides = attributes.strides as [number, number];\n  const wIsConst = (attributes.wIsConst as () => boolean)();\n  const outputPadding = attributes.outputPadding as [number, number, number, number];\n  const outputShape = attributes.outputShape as [number, number];\n  return createAttributeWithCacheKey({\n    autoPad,\n    format,\n    dilations,\n    group,\n    kernelShape,\n    outputPadding,\n    outputShape,\n    pads,\n    strides,\n    wIsConst,\n    ...activationAttributes\n  });\n};\n\nconst validateInputs = (inputs: readonly TensorView[], attributes: ConvTransposeAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/main/docs/Operators.md#ConvTranspose\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 && inputs[0].dims.length !== 3) {\n    throw new Error('currently only support 2-dimensional conv');\n  }\n\n  if (inputs[0].dims.length !== inputs[1].dims.length) {\n    throw new Error('filter does not have same dimension as input');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[attributes.format === 'NHWC' ? inputs[0].dims.length - 1 : 1];\n  const filterInChannel = inputs[1].dims[0];\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  const featureMaps = inputs[1].dims[1] * attributes.group;\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[2].dims[0] !== featureMaps)) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  const dilationsSet = attributes.dilations.reduce((a, b) => a + b, 0) > 0;\n  // wrong dilations dimension\n  if (dilationsSet && attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  const stridesSet = attributes.strides.reduce((a, b) => a + b, 0) > 0;\n  // Wrong strides dimension\n  if (stridesSet && attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  const padsSet = attributes.pads.reduce((a, b) => a + b, 0) > 0;\n  if (padsSet && attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // Wrong output padding dimension\n  if (attributes.outputPadding.length !== spatialRank && attributes.outputPadding.length !== 0) {\n    throw new Error(`output_padding should be ${spatialRank}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  const kernelShapeSet = attributes.kernelShape.reduce((a, b) => a + b, 0) > 0;\n  if (kernelShapeSet && attributes.kernelShape.length !== 0 &&\n      attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // as with kernelShape, must have same number of spatial dims as input\n  if (attributes.outputShape.length !== 0 && attributes.outputShape.length !== inputs[0].dims.length - 2) {\n    throw new Error('invalid output shape');\n  }\n};\n\n// for transposing weight tensor from [C, M/group, KH, KW] to [KH, KW, M/group, C]\nconst weightTransposePerm = [2, 3, 1, 0];\n\nconst convTranspose2d =\n    (context: ComputeContext, inputs: readonly TensorView[], attributes: ConvTransposeAttributes): void => {\n      const adjustedAttributes = getAdjustedConvTransposeAttributes(attributes, inputs);\n      const isChannelsLast = attributes.format === 'NHWC';\n      const hasBias = inputs.length === 3;\n      if (adjustedAttributes.group !== 1) {\n        context.compute(createConvTranspose2DProgramInfo(inputs, adjustedAttributes));\n        return;\n      }\n      const outputShape = adjustedAttributes.outputShape;\n      const outHeight = outputShape[isChannelsLast ? 1 : 2];\n      const outWidth = outputShape[isChannelsLast ? 2 : 3];\n      const outChannels = outputShape[isChannelsLast ? 3 : 1];\n      const weightHeight = inputs[1].dims[2];\n      const weightWidth = inputs[1].dims[3];\n      const inputChannels = inputs[0].dims[isChannelsLast ? 3 : 1];\n\n      const dimAOuter = isChannelsLast ? outHeight * outWidth : outChannels;\n      const dimBOuter = isChannelsLast ? outChannels : outHeight * outWidth;\n      const dimInner = weightHeight * weightWidth * inputChannels;\n\n      const sequentialAccessByThreads = /* backend.adapterInfo.isIntel() */ true;\n\n\n      // STEP.1: transpose weight\n      const transposedWeight = (context.kernelCustomData.wT as TensorView | undefined) ??\n          context.compute(\n              createTransposeProgramInfo(inputs[1].dataType, inputs[1].dims.length, weightTransposePerm),\n              {inputs: [1], outputs: [attributes.wIsConst ? -2 : -1]})[0];\n      if (attributes.wIsConst && !context.kernelCustomData.wT) {\n        context.kernelCustomData.wT = transposedWeight;\n      }\n\n      // STEP.2: prepare reshaped inputs\n      const convTransposeInputs = [inputs[0], transposedWeight];\n      if (hasBias) {\n        if (!isChannelsLast && inputs[2].dims.length === 1) {\n          convTransposeInputs.push(inputs[2].reshape([inputs[2].dims[0], 1, 1]));\n        } else {\n          convTransposeInputs.push(inputs[2]);\n        }\n      }\n\n      // STEP.3: compute matmul\n      context.compute(\n          createConv2DTransposeMatMulProgramInfo(\n              convTransposeInputs, adjustedAttributes, outputShape, dimAOuter, dimBOuter, dimInner, hasBias,\n              sequentialAccessByThreads),\n          {inputs: convTransposeInputs});\n    };\n\nconst convTranspose1d = (context: ComputeContext, attributes: ConvTransposeAttributes): void => {\n  // extend the input to 2D by adding H dimension\n  const isChannelLast = attributes.format === 'NHWC';\n\n  const inputs = [\n    context.inputs[0].reshape(\n        isChannelLast ?\n            // [N, W, C] -> [N, H=1, W, C]\n            [context.inputs[0].dims[0], 1, context.inputs[0].dims[1], context.inputs[0].dims[2]] :\n            // [N, C, W] -> [N, C, H=1, W]\n            [context.inputs[0].dims[0], context.inputs[0].dims[1], 1, context.inputs[0].dims[2]]),\n    //[FILTER_OUT_CHANNEL, FILTER_IN_CHANNEL, kW] -> [FILTER_OUT_CHANNEL, FILTER_IN_CHANNEL, kH=1, kW]\n    context.inputs[1].reshape([context.inputs[1].dims[0], context.inputs[1].dims[1], 1, context.inputs[1].dims[2]])\n  ];\n  if (inputs.length === 3) {\n    inputs.push(context.inputs[2]);\n  }\n  let kernelShape = attributes.kernelShape;\n  if (kernelShape.length === 0 || kernelShape[0] === 0) {\n    kernelShape = [context.inputs[1].dims[2]];\n  }\n  let dilations = attributes.dilations;\n  if (dilations.length === 0 || dilations[0] === 0) {\n    dilations = [1];\n  }\n  let strides = attributes.strides;\n  if (strides.length === 0 || strides[0] === 0) {\n    strides = [1];\n  }\n  let pads = attributes.pads;\n  if (pads.length === 0) {\n    pads = [0, 0];\n  }\n  pads = [0, pads[0], 0, pads[1]];\n  strides = [1].concat(strides);\n  dilations = [1].concat(dilations);\n  kernelShape = [1].concat(kernelShape);\n  const adjustedAttributes =\n      getAdjustedConvTransposeAttributes({...attributes, pads, strides, dilations, kernelShape}, inputs);\n  context.compute(createConvTranspose2DProgramInfo(\n      inputs, adjustedAttributes,\n      outputShape => isChannelLast ? [outputShape[0], outputShape[2], outputShape[3]] :\n                                     [outputShape[0], outputShape[1], outputShape[3]]));\n};\n\nexport const convTranspose = (context: ComputeContext, attributes: ConvTransposeAttributes): void => {\n  validateInputs(context.inputs, attributes);\n  if (context.inputs[0].dims.length === 3) {\n    convTranspose1d(context, attributes);\n  } else {\n    convTranspose2d(context, context.inputs, attributes);\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor-view';\nimport {ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, ProgramInfo} from '../types';\n\nimport {IndicesHelper, inputVariable, outputVariable, ShaderHelper} from './common';\n\nexport interface EinsumAttributes extends AttributeWithCacheKey {\n  readonly equation: string;\n}\n// The equation attribute value is a string which consists of left hand side (LHS) and optionally right hand side (RHS)\n// separated by '->'. Ex. \"ij,jk -> ik\" expresses matrix multiplication\n//     \"ij->ji\" expresses matrix transpose\n//      \"ii->i\" diagonal elements of a square matrix\n// LHS consists of a sequence of terms separated by commas. Each term corresponds to an input variable.\n// Each symbol corresponds to a dimension in the input variable. The symbol can be either a letter, 'a' to 'z' or 'A' to\n// 'Z' or '...' to represent arbitrary dimensions.\n\nconst symbolPattern =\n    '[a-zA-Z]|\\\\.\\\\.\\\\.';  // The pattern each symbol in each term in the symbolic equation should match\nconst termPattern = '(' + symbolPattern + ')+';   // The pattern each term in the symbolic equation should match\nconst termPatternOnly = '^' + termPattern + '$';  // The patterns only matchs a term begin to end.\nconst lhsPattern = '(' + termPattern + ',)*' + termPattern;  // The pattern the LHS should match\nconst lhsPatternOnly = '^' + lhsPattern + '$';               // The patterns only matchs a LHS begin to end.\n\ninterface SymbolInfo {\n  count: number;           // Symbol corresponding to a dimmension of an input\n  inputIndices: number[];  // Number of input variables the symbol corresponds to\n  dimValue: number;        // Number of dimensions the symbol corresponds to\n}\n\nclass EinsumTerm {\n  constructor(inputIndex = -1) {\n    this.symbolToIndices = new Map<string, number[]>();\n    this.inputIndex = inputIndex;\n  }\n\n  // Add a symbol to the term\n  addSymbol(symbol: string, index: number) {\n    let value = this.symbolToIndices.get(symbol);\n    if (value === undefined) {\n      value = [index];\n    } else {\n      value.push(index);\n    }\n    this.symbolToIndices.set(symbol, value);\n  }\n\n  symbolToIndices: Map<string, number[]>;  // Map from symbol to dimensions of the input corresponding to the term\n  inputIndex: number;                      // -1 for output and 0, 1, 2, ... for inputs\n}\n\nclass EinsumEquation {\n  constructor(inputs: readonly TensorView[], public readonly equation: string) {\n    this.hasEllipsis = false;\n    this.symbolToInfo = new Map<string, SymbolInfo>();\n    this.lhs = new Array<EinsumTerm>();\n    this.outputDims = [];\n    // As rhs needs to be updated allow using let instead of const for both lhs and rhs.\n    // eslint-disable-next-line prefer-const\n    let [lhs, rhs] = equation.includes('->') ? equation.split('->', 2) : [equation, ''];\n    if (!lhs.match(RegExp(lhsPatternOnly))) {\n      throw new Error('Invalid LHS term');\n    }\n    const inputTerms = lhs.split(',');\n    inputTerms.forEach((inputTerm, index) => {\n      const dims = inputs[index].dims.slice();\n      if (!inputTerm.match(RegExp(termPatternOnly))) {\n        throw new Error('Invalid LHS term');\n      }\n      const einsumTerm = this.processTerm(inputTerm, true, dims, index);\n      this.lhs.push(einsumTerm);\n    });\n\n    // Initialize the RHS if not specified\n    if (rhs === '') {\n      // Construct RHS from LHS terms/symbols\n      rhs += [...this.symbolToInfo.entries()]\n                 .filter(([sym, info]) => (info.count === 1 || sym === '...'))\n                 .map(([sym]) => sym)\n                 .join('');\n    } else {\n      if (!rhs.match(RegExp(termPattern))) {\n        throw new Error('Invalid RHS');\n      }\n    }\n\n    // Compute output dims\n    const rhsSymbols = rhs.match(RegExp(symbolPattern, 'g'));\n    rhsSymbols?.forEach((symbol) => {\n      if (symbol === '...') {\n        this.outputDims = this.outputDims.concat(this.ellipsisDims);\n      } else {\n        const info = this.symbolToInfo.get(symbol);\n        if (info === undefined) {\n          throw new Error('Invalid RHS symbol');\n        }\n        this.outputDims.push(info.dimValue);\n      }\n    });\n    this.rhs = this.processTerm(rhs, true, this.outputDims);\n  }  // End of EinsumEqation constructor\n\n  // Add a symbol to the equation\n  addSymbol(symbol: string, dimValue: number, inputIndex: number) {\n    let info = this.symbolToInfo.get(symbol);\n    if (info !== undefined) {\n      if (info.dimValue !== dimValue && info.count !== 1) {\n        throw new Error('Dimension mismatch');\n      } else {\n        info.count++;\n        info.inputIndices.push(inputIndex);\n      }\n    } else {\n      info = {count: 1, dimValue, inputIndices: [inputIndex]};\n    }\n    this.symbolToInfo.set(symbol, info);\n  }\n\n  // Process one input/output term\n  processTerm(term: string, isInput: boolean, dims: readonly number[], index = -1): EinsumTerm {\n    const rank = dims.length;\n    let ellipsis = false;\n    let ellipsisDims = [];\n    let nextDim = 0;\n    // For output empty string is allowed because the output may be reduced to a scalar value\n    if (!term.match(RegExp(termPatternOnly)) && (!isInput && term !== '')) {\n      throw new Error('Invalid LHS term');\n    }\n    const indexSymbols = term.match(RegExp(symbolPattern, 'g'));\n    const einsumTerm = new EinsumTerm(index);\n    // symbol can be either a lettre, 'a' to 'z' or 'A' to 'Z', or '...'\n    indexSymbols?.forEach((symbol: string, i: number) => {\n      if (symbol === '...') {\n        if (ellipsis) {\n          throw new Error('Only one ellipsis is allowed per input term');\n        }\n        ellipsis = true;\n        const ellipsisDimLength = rank - indexSymbols.length + 1;\n        if (ellipsisDimLength < 0) {\n          throw new Error('Ellipsis out of bounds');\n        }\n        ellipsisDims = dims.slice(nextDim, nextDim + ellipsisDimLength);\n        if (this.hasEllipsis) {\n          if (this.ellipsisDims.length !== ellipsisDims.length ||\n              this.ellipsisDims.toString() !== ellipsisDims.toString()) {\n            throw new Error('Ellipsis dimensions mismatch');\n          }\n        } else if (isInput) {\n          this.hasEllipsis = true;\n          this.ellipsisDims = ellipsisDims;\n        } else {\n          throw new Error('Ellipsis must be specified in the LHS');\n        }\n        // Add '0', '1', '2', '3', '4', etc to represent ellipsis dimensions to avoid special handling\n        for (let j = 0; j < ellipsisDims.length; j++) {\n          const symbol = String.fromCharCode('0'.charCodeAt(0) + i);\n          einsumTerm.addSymbol(symbol, i + j);\n          this.addSymbol(symbol, dims[nextDim++], index);\n        }\n      } else {\n        einsumTerm.addSymbol(symbol, i);\n        this.addSymbol(symbol, dims[nextDim++], index);\n      }\n    });\n    return einsumTerm;\n  }\n\n  symbolToInfo: Map<string, SymbolInfo>;  // All symbols in the equation\n  hasEllipsis: boolean;                   // The equation has ellipsis or not\n  ellipsisDims: number[];                 // The dimensions of the equation ellipsis corresponds to.\n  lhs: EinsumTerm[];                      // Terms on the left-hand side of the equation\n  rhs: EinsumTerm;                        // Term on the right-hand side of the equation\n  outputDims: number[];                   // Output dimensions of the equation\n}  // End of class EinsumEquation\n\nconst createEinsumProgramInfo = (inputs: readonly TensorView[], einsumEquation: EinsumEquation): ProgramInfo => {\n  const dataType = inputs[0].dataType;\n  const inputVars = new Array<IndicesHelper>(inputs.length);\n  for (let i = 0; i < inputs.length; ++i) {\n    inputVars[i] = inputVariable(`input${i}`, dataType, inputs[i].dims);\n  }\n  const outputShape = einsumEquation.outputDims;\n  const outputSize = ShapeUtil.size(outputShape);\n  const output = outputVariable('output', dataType, outputShape);\n  const idxCopy: string[] = [];\n  const rhsSymbols = Array.from(einsumEquation.rhs.symbolToIndices.keys());\n  const initProd = 'var prod = 1.0;';\n  const initSum = 'var sum = 0.0;';\n  const updateSum = 'sum += prod;';\n  const reduceOpsSetIndices: string[] = [];\n  const reduceOpsLoopHeaders: string[] = [];\n  const reduceOpsLoopFooters: string[] = [];\n  const reduceOpCompute: string[] = [];\n  const isReduceOpsWithoutLoop = einsumEquation.symbolToInfo.size === rhsSymbols.length;\n  einsumEquation.symbolToInfo.forEach((info, symbol) => {\n    if (rhsSymbols.includes(symbol)) {\n      const outputIndex = rhsSymbols.indexOf(symbol);\n      einsumEquation.lhs.forEach((term, i) => {\n        if (info.inputIndices.includes(i)) {\n          const indices = term.symbolToIndices.get(symbol);\n          if (indices === undefined) {\n            throw new Error('Invalid symbol error');\n          }\n          indices.forEach((index) => {\n            idxCopy.push(`${\n                inputVars[i].indicesSet(`input${i}Indices`, index, output.indicesGet('outputIndices', outputIndex))}`);\n          });\n        }\n      });\n    } else {\n      einsumEquation.lhs.forEach((term, i) => {\n        const info = einsumEquation.symbolToInfo.get(symbol);\n        if (info === undefined) {\n          throw new Error('Invalid symbol error');\n        }\n        if (info.inputIndices.includes(i)) {\n          const indices = term.symbolToIndices.get(symbol);\n          if (indices === undefined) {\n            throw new Error('Invalid symbol error');\n          }\n          indices.forEach((index) => {\n            reduceOpsSetIndices.push(`${inputVars[i].indicesSet(`input${i}Indices`, index, `${symbol}`)}`);\n          });\n          reduceOpCompute.push(`prod *= ${inputVars[i].getByIndices(`input${i}Indices`)};`);\n        }\n      });\n      reduceOpsLoopHeaders.push(`for(var ${symbol}: u32 = 0; ${symbol} < ${\n          einsumEquation.symbolToInfo.get(symbol)?.dimValue}; ${symbol}++) {`);\n      reduceOpsLoopFooters.push('}');\n    }\n  });\n  const reduceOps = isReduceOpsWithoutLoop ?\n      [\n        ...idxCopy,\n        `let sum = ${inputVars.map((inputVar, i) => inputVar.getByIndices(`input${i}Indices`)).join(' * ')};`\n      ] :\n      [\n        ...idxCopy,\n        initSum,\n        ...reduceOpsLoopHeaders,\n        ...reduceOpsSetIndices,\n        initProd,\n        ...reduceOpCompute,\n        updateSum,\n        ...reduceOpsLoopFooters,\n      ];\n  const getShaderSource = (shaderHelper: ShaderHelper) => `\n      ${shaderHelper.declareVariables(...inputVars, output)}\n\n      ${shaderHelper.mainStart()}\n        ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n        var outputIndices = ${output.offsetToIndices('global_idx')};\n        ${inputVars.map((inputVar, i) => `var input${i}Indices: ${inputVars[i].type.indices};`).join('\\n')}\n        ${reduceOps.join('\\n')};\n        ${output.setByOffset('global_idx', 'sum')};\n      }`;\n  return {\n    name: 'Einsum',\n    shaderCache: {hint: einsumEquation.equation},\n    getRunData: () => ({\n      outputs: [{dims: outputShape, dataType: inputs[0].dataType}],\n      dispatchGroup: {x: Math.ceil(outputSize / 64 /* workgroup size */)}\n    }),\n    getShaderSource,\n  };\n};\n\nexport const einsum = (context: ComputeContext, attributes: EinsumAttributes): void => {\n  const einsumEquation = new EinsumEquation(context.inputs, attributes.equation);\n  context.compute(createEinsumProgramInfo(context.inputs, einsumEquation));\n};\n\nexport const parseEinsumAttributes = (attributes: Record<string, unknown>): EinsumAttributes => {\n  const equation = (attributes.equation as string).replace(/\\s+/g, '');\n  return createAttributeWithCacheKey({equation});\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor-view';\nimport {ShapeUtil} from '../../util';\nimport {ComputeContext, ProgramInfo} from '../types';\n\nimport {inputVariable, outputVariable, ShaderHelper} from './common';\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Expand requires 2 input.');\n  }\n  const inputShape = inputs[0].dims;\n  const shape = Array.from(inputs[1].getBigInt64Array(), Number);\n\n  let shapeIndex = shape.length < inputShape.length ? 0 : shape.length - inputShape.length;\n  let inputShapeIndex = inputShape.length < shape.length ? 0 : inputShape.length - shape.length;\n  for (; shapeIndex < shape.length && inputShapeIndex < inputShape.length; ++shapeIndex, ++inputShapeIndex) {\n    if (shape[shapeIndex] !== inputShape[inputShapeIndex] && shape[shapeIndex] !== 1 &&\n        inputShape[inputShapeIndex] !== 1) {\n      throw new Error('Expand requires shape to be broadcastable to input');\n    }\n  }\n};\n\nconst getAdjustedShape = (shape1: readonly number[], shape2: readonly number[]): number[] => {\n  const diff = shape1.length - shape2.length;\n  const shape: number[] = [];\n  for (let i = 0; i < diff; ++i) {\n    shape.push(shape1[i]);\n  }\n  for (let i = 0; i < shape2.length; ++i) {\n    shape.push(shape2[i] === 1 ? shape1[i + diff] : shape2[i]);\n  }\n  return shape;\n};\n\nconst calculateOutputShape = (inputShape: readonly number[], shape: readonly number[]): number[] =>\n    (inputShape.length > shape.length) ? getAdjustedShape(inputShape, shape) : getAdjustedShape(shape, inputShape);\n\n\nconst createExpandProgramInfo = (inputs: readonly TensorView[]): ProgramInfo => {\n  const inputShape = inputs[0].dims;\n  const shape = Array.from(inputs[1].getBigInt64Array(), Number);\n  const outputShape: number[] = calculateOutputShape(inputShape, shape);\n  const outputSize = ShapeUtil.size(outputShape);\n\n  const dataType = inputs[0].dataType;\n  const input = inputVariable('input', dataType, inputShape);\n  const output = outputVariable('output', dataType, outputShape);\n\n  const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const inputShape = ${input.indices(...inputShape)};\n  ${shaderHelper.declareVariables(input, output)}\n  ${shaderHelper.mainStart()}\n  ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n    let outputIndices = ${output.offsetToIndices('global_idx')};\n    var inputIndices: ${input.type.indices};\n    for (var i = 0; i < ${inputShape.length}; i++) {\n      if (${input.indicesGet('inputShape', 'i')} == 1) {\n        ${input.indicesSet('inputIndices', 'i', 0)}\n      } else {\n        ${\n      input.indicesSet(\n          'inputIndices', 'i', output.indicesGet('outputIndices', `i + ${outputShape.length - inputShape.length}`))}\n      }\n    }\n    ${output.setByOffset('global_idx', input.getByIndices('inputIndices'))}\n  }`;\n  return {\n    name: 'Expand',\n    shaderCache: {hint: `${outputShape}`},\n    getShaderSource,\n    getRunData: () => ({\n      outputs: [{dims: outputShape, dataType: inputs[0].dataType}],\n      dispatchGroup: {x: Math.ceil(outputSize / 64 /* workgroup size */)}\n    })\n  };\n};\n\nexport const expand = (context: ComputeContext): void => {\n  validateInputs(context.inputs);\n  context.compute(createExpandProgramInfo(context.inputs), {inputs: [0]});\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor-view';\nimport {ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, ProgramInfo} from '../types';\n\nimport {inputVariable, outputVariable, ShaderHelper} from './common';\n\nexport interface GatherAttributes extends AttributeWithCacheKey {\n  axis: number;\n}\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Gather requires 2 inputs.');\n  }\n};\n\nconst createGatherProgramInfo = (inputs: readonly TensorView[], attributes: GatherAttributes): ProgramInfo => {\n  const inputShape = inputs[0].dims;\n  const indicesShape = inputs[1].dims;\n\n  const inputRank = inputShape.length;\n  const axis = ShapeUtil.normalizeAxis(attributes.axis, inputRank);\n\n  const outputShape = inputShape.slice(0);\n  outputShape.splice(axis, 1, ...indicesShape);\n\n  const axisDimLimit = inputShape[axis];\n  const outputSize = ShapeUtil.size(outputShape);\n\n  const data = inputVariable('data', inputs[0].dataType, inputs[0].dims);\n  const indices = inputVariable('inputIndices', inputs[1].dataType, inputs[1].dims);\n  const output = outputVariable('output', inputs[0].dataType, outputShape);\n  const calcDataIndices = (): string => {\n    const indicesRank = indicesShape.length;\n    let calcStr = `var indicesIndices  = ${indices.type.indices}(0);`;\n    for (let i = 0; i < indicesRank; i++) {\n      calcStr += `${indicesRank > 1 ? `indicesIndices[${i}]` : 'indicesIndices'} = ${\n          outputShape.length > 1 ? `outputIndices[${axis + i}]` : 'outputIndices'};`;\n    }\n    calcStr += `\n        var idx = ${indices.getByIndices('indicesIndices')};\n        if (idx < 0) {\n          idx = idx + ${axisDimLimit};\n        }\n        var dataIndices = ${data.type.indices}(0);\n      `;\n    for (let i = 0, j = 0; i < inputRank; i++) {\n      if (i === axis) {\n        calcStr += `${inputRank > 1 ? `dataIndices[${i}]` : 'dataIndices'} = u32(idx);`;\n        j += indicesRank;\n      } else {\n        calcStr += `${inputRank > 1 ? `dataIndices[${i}]` : 'dataIndices'} = ${\n            outputShape.length > 1 ? `outputIndices[${j}]` : 'outputIndices'};`;\n        j++;\n      }\n    }\n    return calcStr;\n  };\n\n  const getShaderSource = (shaderHelper: ShaderHelper) => `\n      ${shaderHelper.declareVariables(data, indices, output)}\n      ${shaderHelper.mainStart()}\n        ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n        let outputIndices = ${output.offsetToIndices('global_idx')};\n        ${calcDataIndices()};\n        let value = ${data.getByIndices('dataIndices')};\n        ${output.setByOffset('global_idx', 'value')};\n      }`;\n  return {\n    name: 'Gather',\n    shaderCache: {hint: attributes.cacheKey},\n    getRunData: () => ({\n      outputs: [\n        {dims: outputShape, dataType: inputs[0].dataType},\n      ],\n      dispatchGroup: {x: Math.ceil(outputSize / 64 /* workgroup size */)}\n    }),\n    getShaderSource,\n  };\n};\n\nexport const parseGatherAttributes = (attributes: Record<string, unknown>): GatherAttributes =>\n    createAttributeWithCacheKey({axis: attributes.axis as number});\n\nexport const gather = (context: ComputeContext, attributes: GatherAttributes): void => {\n  const inputs = context.inputs;\n  validateInputs(inputs);\n  context.compute(createGatherProgramInfo(context.inputs, attributes));\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor-view';\nimport {ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, ProgramInfo} from '../types';\n\nimport {inputVariable, outputVariable, ShaderHelper} from './common';\n\nexport interface GatherElementsAttributes extends AttributeWithCacheKey {\n  axis: number;\n}\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('GatherElements requires 2 inputs.');\n  }\n\n  if (inputs[0].dims.length < 1) {\n    throw new Error('GatherElements requires that the data input be rank >= 1.');\n  }\n\n  if (inputs[0].dims.length !== inputs[1].dims.length) {\n    throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`);\n  }\n};\n\nconst createGatherElementsProgramInfo =\n    (inputs: readonly TensorView[], attributes: GatherElementsAttributes): ProgramInfo => {\n      const inputShape = inputs[0].dims;\n      const inputOutputDataType = inputs[0].dataType;\n      const inputRank = inputShape.length;\n      const inputStrides = ShapeUtil.computeStrides(inputShape);\n      const inputSize = ShapeUtil.size(inputShape);\n\n      const indicesShape = inputs[1].dims;\n      const indicesDataType = inputs[1].dataType;\n      const indicesSize = ShapeUtil.size(indicesShape);\n\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputRank);\n      const axisDimLimit = inputShape[axis];\n\n      const outputShape = indicesShape.slice(0);\n      const outputSize = ShapeUtil.size(outputShape);\n\n      const input = inputVariable('input', inputOutputDataType, inputShape);\n      const indices = inputVariable('indices', indicesDataType, [indicesSize]);\n      const output = outputVariable('output', inputOutputDataType, outputShape);\n\n\n      // int64 indices would be treated as little endian i32 with assumption they fall in i32 limits\n      // That assumption is safe as it's not possible to allocate >2gb buffer for input tensor\n      // Input data will be treated as u32 or two u32 for 8-byte tensors\n      const getShaderSource = (shaderHelper: ShaderHelper) => `\n      const inputStrides = array<u32, ${inputStrides.length}>(${inputStrides.map(i => `${i}u`).join(',')});\n      ${shaderHelper.declareVariables(input, indices, output)}\n      ${shaderHelper.mainStart()}\n      ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n      let outputIndices = ${output.offsetToIndices('global_idx')};\n\n      var idx = ${indices.getByOffset('global_idx')};\n      if (idx < 0) {\n        idx = idx + ${axisDimLimit};\n      }\n\n      var srcOffset = u32(0);\n\n      for (var i = 0; i < ${inputShape.length}; i++) {\n        if (i == ${axis}) {\n          srcOffset +=  u32(idx) * inputStrides[i];\n        } else {\n          srcOffset += ${output.indicesGet('outputIndices', 'i')} * inputStrides[i];\n        }\n      }\n\n      // Should never hit this with valid values in indices\n      // This is a guard against malicious data in the indices input\n      if (srcOffset < 0 || srcOffset >= ${inputSize}) {\n        return;\n      }\n\n      output[global_idx] = input[srcOffset];\n  }`;\n\n      return {\n        name: 'GatherElements',\n        shaderCache: {hint: attributes.cacheKey},\n        getRunData: () => ({\n          outputs: [{dims: outputShape, dataType: inputs[0].dataType}],\n          dispatchGroup: {x: Math.ceil(outputSize / 64 /* workgroup size */)}\n        }),\n        getShaderSource,\n      };\n    };\n\nexport const parseGatherElementsAttributes = (attributes: Record<string, unknown>): GatherElementsAttributes =>\n    createAttributeWithCacheKey({axis: attributes.axis as number});\n\nexport const gatherElements = (context: ComputeContext, attributes: GatherElementsAttributes): void => {\n  const inputs = context.inputs;\n  validateInputs(inputs);\n  context.compute(createGatherElementsProgramInfo(context.inputs, attributes));\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor-view';\nimport {GemmUtil, ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, ProgramInfo} from '../types';\n\nimport {ShaderHelper, tensorTypeToWsglStorageType} from './common';\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs) {\n    throw new Error('Input is missing');\n  }\n  if (inputs.length < 2 || inputs.length > 3) {\n    throw new Error('Invaid input number.');\n  }\n\n  // 'C' can be of dimensionality 0, 1 or 2 only\n  if (inputs.length === 3 && inputs[2].dims.length > 2) {\n    throw new Error('Invalid input shape of C');\n  }\n\n  if ((inputs[0].dataType !== inputs[1].dataType) ||\n      (inputs.length === 3 && inputs[0].dataType !== inputs[2].dataType)) {\n    throw new Error('Input types are mismatched');\n  }\n};\n\nexport interface GemmAttributes extends AttributeWithCacheKey {\n  transA: boolean;\n  transB: boolean;\n  alpha: number;\n  beta: number;\n}\n\nconst offsetC = (m: number, n: number, dims: readonly number[]): string => {\n  if (dims.length === 0) {\n    return '0u';\n  }\n\n  const broadcastM = (dims.length === 1 && m !== 1) || (dims.length === 2 && dims[0] !== m);\n  const broadcastN = dims[dims.length - 1] !== n;\n\n  let offset = '0u';\n  if (!broadcastM) {\n    offset += `+ m * ${dims[dims.length - 1]}u`;\n  }\n  if (!broadcastN) {\n    offset += '+n';\n  }\n\n  return offset;\n};\n\nconst createGemmProgramInfo = (inputs: readonly TensorView[], attributes: GemmAttributes): ProgramInfo => {\n  const aShape = inputs[0].dims.slice();\n  const bShape = inputs[1].dims.slice();\n  const [M, N, K] = GemmUtil.getShapeOfGemmResult(\n      aShape, attributes.transA, bShape, attributes.transB, inputs.length === 3 ? inputs[2].dims : undefined);\n  const outputShape = [M, N];\n  if (!outputShape) {\n    throw new Error('Can\\'t use gemm on the given tensors');\n  }\n  const outputSize = ShapeUtil.size(outputShape);\n  let line = '';\n  if (attributes.transA && attributes.transB) {\n    line = 'value += a[k * M + m] * b[n * K + k];';\n  } else if (attributes.transA && !attributes.transB) {\n    line = 'value += a[k * M + m] * b[k * N + n];';\n  } else if (!attributes.transA && attributes.transB) {\n    line = 'value += a[m * K + k] * b[n * K + k];';\n  } else if (!attributes.transA && !attributes.transB) {\n    line = 'value += a[m * K + k] * b[k * N + n];';\n  }\n\n  const dataType = tensorTypeToWsglStorageType(inputs[0].dataType);\n  const calculateAlpha = attributes.alpha === 1 ? '' : 'value *= alpha;';\n  const calculateC = inputs.length === 3 ? `value += beta * c[${offsetC(M, N, inputs[2].dims)}];` : '';\n  const inputStorageBuffersDeclarations = [\n    `@group(0) @binding(0) var<storage, read> a : array<${dataType}>;`,\n    `@group(0) @binding(1) var<storage, read> b : array<${dataType}>;`\n  ];\n  if (inputs.length === 3) {\n    inputStorageBuffersDeclarations.push(`@group(0) @binding(2) var<storage, read> c : array<${dataType}>;`);\n  }\n  const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const M: u32 = ${M}u;\n  const N: u32 = ${N}u;\n  const K: u32 = ${K}u;\n  const alpha = ${dataType}(${attributes.alpha});\n  const beta = ${dataType}(${attributes.beta});\n\n  ${inputStorageBuffersDeclarations.join('\\n')}\n  @group(0) @binding(${inputs.length}) var<storage, read_write> output : array<${dataType}>;\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    let m = global_id.x / N;\n    let n = global_id.x % N;\n\n    var value = ${dataType}(0);\n    for (var k: u32 = 0u; k<${K}u; k++) {\n      ${line}\n    }\n\n    ${calculateAlpha}\n    ${calculateC}\n    output[global_id.x] = value;\n\n  }`;\n  return {\n    name: 'Gemm',\n    shaderCache: {hint: attributes.cacheKey},\n    getRunData: () => ({\n      outputs: [{dims: outputShape, dataType: inputs[0].dataType}],\n      dispatchGroup: {x: Math.ceil(outputSize / 64 /* workgroup size */)}\n    }),\n    getShaderSource,\n  };\n};\n\nexport const gemm = (context: ComputeContext, attributes: GemmAttributes): void => {\n  validateInputs(context.inputs);\n  context.compute(createGemmProgramInfo(context.inputs, attributes));\n};\n\nexport const parseGemmAttributes = (attributes: Record<string, unknown>): GemmAttributes =>\n    createAttributeWithCacheKey(attributes as Omit<GemmAttributes, keyof AttributeWithCacheKey>);\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor-view';\nimport {ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, ProgramInfo} from '../types';\n\nimport {fillVector, getMaxComponents, inputVariable, outputVariable, ShaderHelper, tensorTypeToWsglStorageType} from './common';\n\nexport interface InstanceNormAttributes extends AttributeWithCacheKey {\n  epsilon: number;\n  format: 'NHWC'|'NCHW';\n}\n\nconst metadata = {\n  name: 'InstanceNormalization'\n};\n\nconst createInstanceNormProgramInfo =\n    (inputs: readonly TensorView[], attributes: InstanceNormAttributes): ProgramInfo => {\n      const xShape = inputs[0].dims;\n\n      const outputShape = xShape;\n      const axis = 2;\n      const normCount = ShapeUtil.sizeToDimension(xShape, axis);\n      const normSize = ShapeUtil.sizeFromDimension(xShape, axis);\n      const C = xShape[1];\n      const x = inputVariable('x', inputs[0].dataType, [xShape[0], xShape[1], normSize]);\n      const scale = inputVariable('scale', inputs[1].dataType, inputs[1].dims);\n      const bias = inputVariable('bias', inputs[2].dataType, inputs[2].dims);\n      const output = outputVariable('output', inputs[0].dataType, [xShape[0], xShape[1], normSize]);\n      const variables = [x, scale, bias, output];\n      const dataType = x.type.value;\n      const workgroupSize = 64;\n      const getShaderSource = (shaderHelper: ShaderHelper) => `\n\n  const C: u32 = ${C};\n  const normSize: u32 = ${normSize};\n  const epsilon: f32 = ${attributes.epsilon};\n  var<workgroup> meanShared : ${dataType};\n  var<workgroup> squaredNormShared : ${dataType};\n  var<workgroup> workgroupShared : array<${dataType}, ${workgroupSize}>;\n  const workgroupSize = ${workgroupSize}u;\n  ${shaderHelper.declareVariables(...variables)}\n  ${shaderHelper.mainStart(workgroupSize)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / C;\n    let channel = norm % C;\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial: ${dataType} = 0;\n    for (var h = localIndex; h < normSize; h += workgroupSize) {\n      initial = initial + ${x.get('batch', 'channel', 'h')};\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = workgroupShared[0] / ${dataType}(normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = 0;\n    for (var h = localIndex; h < normSize; h += workgroupSize) {\n      let deviation =  ${x.get('batch', 'channel', 'h')} - meanShared;\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = workgroupShared[0];\n    }\n    workgroupBarrier();\n\n    let invStdDev = 1 / sqrt(squaredNormShared / ${dataType}(normSize) + epsilon);\n    let channelScale = invStdDev * ${scale.getByOffset('channel')};\n    let channelShift = ${bias.getByOffset('channel')} - meanShared * channelScale;\n    for (var h = localIndex; h < normSize; h += workgroupSize) {\n      let value = ${x.get('batch', 'channel', 'h')} * channelScale + channelShift;\n      ${output.set('batch', 'channel', 'h', 'value')};\n    }\n  }`;\n      return {\n        ...metadata,\n        shaderCache: {hint: attributes.cacheKey},\n        getRunData: () => ({\n          outputs: [\n            {dims: outputShape, dataType: inputs[0].dataType},\n          ],\n          dispatchGroup: {x: normCount}\n        }),\n        getShaderSource,\n      };\n    };\n\nconst computeMean =\n    (context: ComputeContext, input: TensorView, scale: TensorView, bias: TensorView, n: number, h: number, c: number,\n     epsilon: number) => {\n      const components = getMaxComponents(c);\n      const inputHelper = inputVariable('input', input.dataType, input.dims, components);\n      const scaleHelper = inputVariable('scale', scale.dataType, scale.dims, components);\n      const biasHelper = inputVariable('bias', bias.dataType, bias.dims, components);\n\n      const WG = 64;\n      // we will store channel scale and channel shift in [2, components] matrix\n      // or in vec2 when components == 1\n      const outputType = components === 1 ? 'vec2f' : `mat2x${components}f`;\n      const sumCastType = components === 1 ? 'f32' : `vec${components}f`;\n      const setOutputValue = (var1: string, var2: string) => `${outputType}(${var1}, ${var2})`;\n      const unitsOfWork = n * c / components;\n      const wgSize = Math.ceil(h / WG);\n\n      const getMeanShaderSource = (shaderHelper: ShaderHelper) => `\n  const H: u32 = ${h};\n  const C: u32 = ${c / components};\n  const imageSize: u32 = ${h * c / components};\n\n  ${shaderHelper.declareVariables(inputHelper)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${outputType}>;\n\n  ${shaderHelper.mainStart(WG)}\n    let currentImageNumber = global_idx / ${WG} / C;\n    let currentChannelNumber = (global_idx / ${WG}) % C;\n    let wgId = global_idx % ${WG};\n    let wgOffset = wgId * ${wgSize};\n    if (wgOffset >= H) {\n        return;\n    }\n    let wgMax = min(wgOffset + ${wgSize}, H);\n\n    let offset = currentImageNumber * imageSize + currentChannelNumber;\n    var sum = ${fillVector('f32', components)};\n    var squaredSum = ${fillVector('f32', components)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${sumCastType}(input[offset + i * C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${setOutputValue('sum', 'squaredSum')};\n  }`;\n\n      const meanValues = context.compute(\n          {\n            name: 'InstanceNormComputeMean',\n            shaderCache: {hint: JSON.stringify({components, n, h, c})},\n            getRunData: () => ({\n              outputs: [\n                {dims: [n, c, WG, 2], dataType: DataType.float},\n              ],\n              dispatchGroup: {x: n * c / components},\n            }),\n            getShaderSource: getMeanShaderSource,\n          },\n          {inputs: [input], outputs: [-1]})[0];\n      const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const H: u32 = ${h};\n  const C: u32 = ${c / components};\n  const imageSize: u32 = ${WG * c / components};\n  const epsilon: f32 = ${epsilon};\n\n  @group(0) @binding(0) var<storage, read> input : array<${outputType}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${scaleHelper.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${biasHelper.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${outputType}>;\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(unitsOfWork)}\n    let currentImageNumber = global_idx / C;\n    let currentChannelNumber = global_idx % C;\n\n    let offset = currentImageNumber * imageSize;\n    var sum = ${fillVector('f32', components)};\n    var squaredSum = ${fillVector('f32', components)};\n    for (var i: u32 = 0; i < ${WG}; i++) {\n        let value = input[offset + i + currentChannelNumber * ${WG}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(H);\n    squaredSum = squaredSum / f32(H);\n    let invStdDev = 1 / sqrt(squaredSum - sum * sum + epsilon);\n    let channelScale = invStdDev * ${sumCastType}(scale[currentChannelNumber]);\n    let channelShift = ${sumCastType}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${setOutputValue('channelScale', 'channelShift')};\n  }`;\n\n      return context.compute(\n          {\n            name: 'InstanceNormComputeChannelScaleShift',\n            shaderCache: {hint: JSON.stringify({components, n, h, c, epsilon})},\n            getRunData: () => ({\n              outputs: [\n                {dims: [n, c, 2], dataType: DataType.float},\n              ],\n              dispatchGroup: {x: Math.ceil(unitsOfWork / 64 /* workgroup size */)},\n            }),\n            getShaderSource,\n          },\n          {inputs: [meanValues, scale, bias], outputs: [-1]})[0];\n    };\n\nconst createInstanceNormNHWCProgramInfo =\n    (context: ComputeContext, inputs: readonly TensorView[], attributes: InstanceNormAttributes) => {\n      const xShape = inputs[0].dims;\n      const outputShape = xShape;\n      const N = xShape[0];\n      const C = xShape[xShape.length - 1];\n      const H = ShapeUtil.sizeFromDimension(xShape, 1) / C;\n\n      const components = getMaxComponents(C);\n      const outputSize = ShapeUtil.size(outputShape) / components;\n      const inputHelper = inputVariable('input', inputs[0].dataType, inputs[0].dims, components);\n      const outputHelper = outputVariable('output', inputs[0].dataType, outputShape, components);\n\n      const dataType = tensorTypeToWsglStorageType(inputs[0].dataType);\n      const scaleType = components === 1 ? 'vec2f' : `mat2x${components}f`;\n      const scaleCastType = components === 1 ? dataType : `vec${components}<${dataType}>`;\n      // first compute mean\n      const channelScaleShift = computeMean(context, inputs[0], inputs[1], inputs[2], N, H, C, attributes.epsilon);\n\n      const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const H: u32 = ${H};\n  const C: u32 = ${C / components};\n\n  @group(0) @binding(0) var<storage, read> input : array<${inputHelper.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${scaleType}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${outputHelper.type.storage}>;\n\n  ${shaderHelper.mainStart()}\n    let currentImageNumber = global_idx / (C * H);\n    let currentChannelNumber = global_idx % C;\n\n    let scaleOffset = currentImageNumber * C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${scaleCastType}(scale[0]), ${scaleCastType}(scale[1]));\n  }`;\n      context.compute(\n          {\n            name: 'InstanceNormalization',\n            shaderCache: {hint: `${attributes.cacheKey}`},\n            getRunData: () => ({\n              outputs: [{dims: outputShape, dataType: inputs[0].dataType}],\n              dispatchGroup: {x: Math.ceil(outputSize / 64 /* workgroup size */)}\n            }),\n            getShaderSource,\n          },\n          {inputs: [inputs[0], channelScaleShift]});\n    };\n\nexport const parseInstanceNormAttributes = (attributes: InstanceNormAttributes): InstanceNormAttributes =>\n    createAttributeWithCacheKey({epsilon: attributes.epsilon, format: attributes.format});\n\nexport const instanceNorm = (context: ComputeContext, attributes: InstanceNormAttributes): void => {\n  if (attributes.format === 'NHWC') {\n    createInstanceNormNHWCProgramInfo(context, context.inputs, attributes);\n  } else {\n    context.compute(createInstanceNormProgramInfo(context.inputs, attributes));\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor-view';\nimport {ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, ProgramInfo} from '../types';\n\nimport {castToF32, fillVector, getMaxComponents, inputVariable, outputVariable, ShaderHelper, sumVector, tensorTypeToWsglStorageType,} from './common';\n\nexport interface LayerNormAttributes extends AttributeWithCacheKey {\n  axis: number;\n  epsilon: number;\n}\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length < 2) {\n    throw new Error('layerNorm requires at least 2 inputs.');\n  }\n};\n\nconst createLayerNormProgramInfo =\n    (inputs: readonly TensorView[], attributes: LayerNormAttributes, outputCount: number): ProgramInfo => {\n      const xShape = inputs[0].dims;\n      const scale = inputs[1];\n      const bias = inputs[2];\n\n      const outputShape = xShape;\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, xShape.length);\n      const normCount = ShapeUtil.sizeToDimension(xShape, axis);\n      const normSize = ShapeUtil.sizeFromDimension(xShape, axis);\n\n      const scaleSize = ShapeUtil.size(scale.dims);\n      const biasSize = bias ? ShapeUtil.size(bias.dims) : 0;\n      if (scaleSize !== normSize || (bias && biasSize !== normSize)) {\n        throw new Error(`Size of X.shape()[axis:] == ${normSize}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${scaleSize} and bias size of ${biasSize}`);\n      }\n\n      const meanInvStdDevDim = [];\n      for (let i = 0; i < xShape.length; ++i) {\n        if (i < axis) {\n          meanInvStdDevDim.push(xShape[i]);\n        } else {\n          meanInvStdDevDim.push(1);\n        }\n      }\n\n      const components = getMaxComponents(normSize);\n      const dataType = tensorTypeToWsglStorageType(inputs[0].dataType);\n      const variables = [\n        inputVariable('x', inputs[0].dataType, inputs[0].dims, components),\n        inputVariable('scale', scale.dataType, scale.dims, components),\n      ];\n      if (bias) {\n        variables.push(inputVariable('bias', bias.dataType, bias.dims, components));\n      }\n      variables.push(outputVariable('output', inputs[0].dataType, outputShape, components));\n\n      const hasMeanDataOutput = outputCount > 1;\n      const hasInvStdOutput = outputCount > 2;\n\n      if (hasMeanDataOutput) {\n        variables.push(outputVariable('meanDataOutput', DataType.float, meanInvStdDevDim));\n      }\n      if (hasInvStdOutput) {\n        variables.push(outputVariable('invStdOutput', DataType.float, meanInvStdDevDim));\n      }\n\n      const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const normSize: f32 = ${normSize};\n  const normSizeVectorized: u32 = ${normSize / components};\n  const epsilon: f32 = ${attributes.epsilon};\n\n  ${shaderHelper.declareVariables(...variables)}\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(normCount)}\n    let offset = global_idx * normSizeVectorized;\n    var meanVector = ${fillVector('f32', components)};\n    var meanSquareVector = ${fillVector('f32', components)};\n\n    for (var h: u32 = 0u; h < normSizeVectorized; h++) {\n      let value = ${castToF32(dataType, components, 'x[h + offset]')};\n      meanVector += value;\n      meanSquareVector += value * value;\n    }\n    let mean = ${sumVector('meanVector', components)} / normSize;\n    let meanSquare = sqrt(${sumVector('meanSquareVector', components)} \n      / normSize - mean * mean + epsilon);\n\n    for (var j: u32 = 0; j < normSizeVectorized; j++) {\n      let f32input = ${castToF32(dataType, components, 'x[j + offset]')};\n      let f32scale = ${castToF32(dataType, components, 'scale[j]')};\n      output[j + offset] = ${variables[0].type.value}((f32input - mean) / meanSquare * f32scale\n        ${bias ? `+ ${castToF32(dataType, components, 'bias[j]')}` : ''}\n      );\n    }\n\n    ${hasMeanDataOutput ? 'meanDataOutput[global_idx] = mean' : ''};\n    ${hasInvStdOutput ? 'invStdOutput[global_idx] = 1 / meanSquare' : ''};\n  }`;\n      const outputs = [{dims: outputShape, dataType: inputs[0].dataType}];\n      if (hasMeanDataOutput) {\n        outputs.push({dims: meanInvStdDevDim, dataType: DataType.float});\n      }\n      if (hasInvStdOutput) {\n        outputs.push({dims: meanInvStdDevDim, dataType: DataType.float});\n      }\n\n      return {\n        name: 'LayerNormalization',\n        shaderCache: {hint: `${attributes.cacheKey}|${outputCount}|${inputs.length}`},\n        getRunData: () => ({outputs, dispatchGroup: {x: Math.ceil(normCount / 64 /* workgroup size */)}}),\n        getShaderSource,\n      };\n    };\n\nexport const parseLayerNormAttributes = (attributes: LayerNormAttributes): LayerNormAttributes =>\n    createAttributeWithCacheKey({axis: attributes.axis, epsilon: attributes.epsilon});\n\nexport const layerNorm = (context: ComputeContext, attributes: LayerNormAttributes): void => {\n  validateInputs(context.inputs);\n  context.compute(createLayerNormProgramInfo(context.inputs, attributes, context.outputCount));\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor-view';\nimport {BroadcastUtil} from '../../util';\nimport {ComputeContext} from '../types';\n\nimport {createMatmulProgramInfo} from './3rd-party/matmul_packed_webgpu';\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('MatMul requires 2 inputs.');\n  }\n\n  if (inputs[0].dims[inputs[0].dims.length - 1] !== inputs[1].dims[inputs[1].dims.length - 2]) {\n    throw new Error('shared dimension does not match.');\n  }\n};\n\nexport const matMul = (context: ComputeContext): void => {\n  validateInputs(context.inputs);\n  const outputShape = BroadcastUtil.calcShape(context.inputs[0].dims, context.inputs[1].dims, true);\n  if (!outputShape) {\n    throw new Error('Can\\'t use matmul on the given tensors');\n  }\n  context.compute(createMatmulProgramInfo(context.inputs, {activation: '', activationCacheKey: ''}, outputShape));\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor-view';\nimport {ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, ProgramInfo} from '../types';\n\nimport {IndicesHelper, inputVariable, outputVariable, ShaderHelper} from './common';\n\nexport interface PadAttributes extends AttributeWithCacheKey {\n  // 0-constant, 1-reflect, 2-edge, 3-wrap\n  readonly mode: number;\n  readonly value: number;\n  readonly pads: number[];\n}\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length < 1) {\n    throw new Error('Too few inputs');\n  }\n  if (inputs[0].dataType !== DataType.float) {\n    throw new Error('Input type must be float.');\n  }\n\n  if (inputs.length >= 2) {\n    let validPads = inputs[0].dims.length * 2 === inputs[1].dims[0];\n    if (inputs.length === 4) {\n      validPads = inputs[3].dims[0] * 2 === inputs[1].dims[0];\n    }\n    if (!validPads) {\n      throw new Error('The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].');\n    }\n  }\n};\n\nconst getPadConstant =\n    (output: IndicesHelper, outputDims: readonly number[], inputDims: readonly number[],\n     inputStrides: readonly number[], pads: number[], dataType: string, constantValue: number): string => {\n      const inputRank = inputDims.length;\n\n      let block = '';\n      for (let i = inputRank - 1; i >= 0; --i) {\n        block += `\n            k = i32(${output.indicesGet('indices', i)}) - ${pads[i]};\n            if (k < 0) {\n              break;\n            }\n            if (k >= ${inputDims[i]}) {\n              break;\n            }\n            offset += k * ${inputStrides[i]};\n        `;\n      }\n\n      return `\n          value = ${dataType}(${constantValue});\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${block}\n            value = x[offset];\n          }\n      `;\n    };\n\nconst getPadReflect =\n    (output: IndicesHelper, outputDims: readonly number[], inputDims: readonly number[],\n     inputStrides: readonly number[], pads: number[]): string => {\n      const inputRank = inputDims.length;\n\n      let block = '';\n      for (let i = inputRank - 1; i >= 0; --i) {\n        block += `\n                k = i32(${output.indicesGet('indices', i)}) - ${pads[i]};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = ${2 * (inputDims[i] - 1)};\n                  k = k % _2n_1;\n                  if(k >= ${inputDims[i]}) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * ${inputStrides[i]};\n            `;\n      }\n\n      return `\n              var offset = 0;\n              var k = 0;\n              ${block}\n              value = x[offset];\n          `;\n    };\n\nconst getPadEdge =\n    (output: IndicesHelper, outputDims: readonly number[], inputDims: readonly number[],\n     inputStrides: readonly number[], pads: number[]): string => {\n      const inputRank = inputDims.length;\n\n      let block = '';\n      for (let i = inputRank - 1; i >= 0; --i) {\n        block += `\n                k = i32(${output.indicesGet('indices', i)}) - ${pads[i]};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= ${inputDims[i]}) {\n                  k = ${inputDims[i] - 1};\n                }\n                offset += k * ${inputStrides[i]};\n            `;\n      }\n\n      return `\n              var offset = 0;\n              var k = 0;\n              ${block}\n              value = x[offset];\n          `;\n    };\n\nconst getPadWrap =\n    (output: IndicesHelper, outputDims: readonly number[], inputDims: readonly number[],\n     inputStrides: readonly number[], pads: number[]): string => {\n      const inputRank = inputDims.length;\n\n      let block = '';\n      for (let i = inputRank - 1; i >= 0; --i) {\n        block += `\n                k = i32(${output.indicesGet('indices', i)}) - ${pads[i]};\n                if (k < 0)  {\n                  k += ${inputDims[i]};\n                }\n                if (k >= ${inputDims[i]}) {\n                  k -= ${inputDims[i]};\n                }\n                offset += k * ${inputStrides[i]};\n            `;\n      }\n\n      return `\n              var offset = 0;\n              var k = 0;\n              ${block}\n              value = x[offset];\n          `;\n    };\n\nconst getPadSnippet =\n    (output: IndicesHelper, outputDims: readonly number[], inputDims: readonly number[],\n     inputStrides: readonly number[], attributes: PadAttributes, dataType: string): string => {\n      switch (attributes.mode) {\n        case 0:\n          return getPadConstant(\n              output, outputDims, inputDims, inputStrides, attributes.pads, dataType, attributes.value);\n        case 1:\n          return getPadReflect(output, outputDims, inputDims, inputStrides, attributes.pads);\n        case 2:\n          return getPadEdge(output, outputDims, inputDims, inputStrides, attributes.pads);\n        case 3:\n          return getPadWrap(output, outputDims, inputDims, inputStrides, attributes.pads);\n        default:\n          throw new Error('Invalid mode');\n      }\n    };\n\nconst generatePadCode =\n    (shaderHelper: ShaderHelper, inputs: readonly TensorView[], attributes: PadAttributes, dataType: string):\n        string => {\n          const inputDims = inputs[0].dims;\n          const outputDims = ShapeUtil.padShape(inputDims.slice(), attributes.pads);\n          const outputSize = ShapeUtil.size(outputDims);\n          const inputStrides = ShapeUtil.computeStrides(inputDims);\n\n          const output = outputVariable('output', inputs[0].dataType, outputDims);\n          const input = inputVariable('x', inputs[0].dataType, inputDims);\n\n          const padSnippet = getPadSnippet(output, outputDims, inputDims, inputStrides, attributes, dataType);\n          const padCode = `\n              ${shaderHelper.declareVariables(input, output)}\n              ${shaderHelper.mainStart()}\n              ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n              let indices = ${output.offsetToIndices('global_idx')};\n\n              var value = ${dataType}(0);\n              ${padSnippet}\n              output[global_idx] = value;\n          }`;\n          return padCode;\n        };\n\nconst createPadProgramInfo = (inputs: readonly TensorView[], attributes: PadAttributes): ProgramInfo => {\n  const outputShape = ShapeUtil.padShape(inputs[0].dims.slice(), attributes.pads);\n  return {\n    name: 'Pad',\n    shaderCache: {hint: attributes.cacheKey},\n    getRunData: () => ({\n      outputs: [{dims: outputShape, dataType: inputs[0].dataType}],\n      dispatchGroup: {x: Math.ceil(ShapeUtil.size(outputShape) / 64 /* workgroup size */)}\n    }),\n    getShaderSource: shaderHelper => generatePadCode(shaderHelper, inputs, attributes, 'f32'),\n  };\n};\n\nconst createPadAttributesFromInputs = (inputs: readonly TensorView[], attributes: PadAttributes): PadAttributes => {\n  if (inputs.length > 1) {\n    const bigInt64Pads = inputs[1].getBigInt64Array();\n    const value = (inputs.length >= 3 && inputs[2].data) ? inputs[2].getFloat32Array()[0] : 0.0;\n\n    const inputRank = inputs[0].dims.length;\n    const updatePads = new Int32Array(2 * inputRank).fill(0);\n    if (inputs.length >= 4) {\n      const axes = inputs[3].getBigInt64Array();\n      for (let i = 0; i < axes.length; i++) {\n        updatePads[Number(axes[i])] = Number(bigInt64Pads[i]);\n        updatePads[Number(axes[i]) + inputRank] = Number(bigInt64Pads[i + axes.length]);\n      }\n    } else {\n      bigInt64Pads.forEach((v, i) => updatePads[Number(i)] = (Number(v)));\n    }\n\n    const pads: number[] = [];\n    updatePads.forEach(v => pads.push(v));\n\n    return createAttributeWithCacheKey({mode: attributes.mode, value, pads});\n  } else {\n    return attributes;\n  }\n};\n\nexport const pad = (context: ComputeContext, attributes: PadAttributes): void => {\n  validateInputs(context.inputs);\n  const updatedAttributes = createPadAttributesFromInputs(context.inputs, attributes);\n  context.compute(createPadProgramInfo(context.inputs, updatedAttributes), {inputs: [0]});\n};\n\nexport const parsePadAttributes = (attributes: Record<string, unknown>): PadAttributes => {\n  const mode = attributes.mode as number;\n  const value = attributes.value as number;\n  const pads = attributes.pads as number[];\n  return createAttributeWithCacheKey({mode, value, pads});\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor-view';\nimport {PoolConvUtil, ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, ProgramInfo} from '../types';\n\nimport {IndicesHelper, inputVariable, outputVariable, ShaderHelper} from './common';\n\n// TODO: support:\n// - ceil_mode                 \"test_maxpool_2d_ceil\"\n// - storage_order             \"test_maxpool_with_argmax_2d_precomputed_strides\"\n// - [MaxPool] dilations       \"test_maxpool_2d_dilations\"\n// - [MaxPool] output[1]       \"test_maxpool_with_argmax_2d_precomputed_pads\"\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pool ops requires 1 input.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Pool ops supports 2-D inputs only for now.');\n  }\n};\n\nconst getAdjustedPoolAttributesAndOutputShape = <AttributeType extends AveragePoolAttributes|MaxPoolAttributes>(\n    input: TensorView, attributes: AttributeType, isGlobalOperator: boolean): [AttributeType, number[]] => {\n  const isChannelsLast = attributes.format === 'NHWC';\n  const inputShapeAsChannelFirst =\n      isChannelsLast ? [input.dims[0], input.dims[3], input.dims[1], input.dims[2]] : input.dims.slice();\n  const hasDilations = Object.hasOwnProperty.call(attributes, 'dilations');\n  const kernelShape = attributes.kernelShape.slice();\n  const strides = attributes.strides.slice();\n  const dilations: number[] = hasDilations ? (attributes as MaxPoolAttributes).dilations.slice() : [];\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPoolAttributes(isGlobalOperator, inputShapeAsChannelFirst, kernelShape, strides, dilations, pads);\n\n  const outputShapeAsChannelFirst = PoolConvUtil.computePoolOutputShape(\n      isGlobalOperator, inputShapeAsChannelFirst, strides, dilations, kernelShape, pads, attributes.autoPad);\n\n  const newAttributes = Object.assign({}, attributes);\n  if (hasDilations) {\n    Object.assign(newAttributes, {kernelShape, strides, pads, dilations, cacheKey: attributes.cacheKey});\n  } else {\n    Object.assign(newAttributes, {kernelShape, strides, pads, cacheKey: attributes.cacheKey});\n  }\n  return [\n    newAttributes,\n    isChannelsLast ?\n        [\n          outputShapeAsChannelFirst[0], outputShapeAsChannelFirst[2], outputShapeAsChannelFirst[3],\n          outputShapeAsChannelFirst[1]\n        ] :\n        outputShapeAsChannelFirst\n  ];\n};\n\nconst generatePoolingCode = <AttributeType extends AveragePoolAttributes|MaxPoolAttributes>(\n    shaderHelper: ShaderHelper, x: IndicesHelper, xShape: readonly number[], outputShape: readonly number[],\n    attributes: AttributeType, op1: string, op2: string, start: string): string => {\n  const isChannelsLast = attributes.format === 'NHWC';\n  const inputDims = xShape;\n  const dataType = x.type.value;\n  const rank = inputDims.length;\n  const outputSize = ShapeUtil.size(outputShape);\n  const output = outputVariable('output', x.type.tensor, outputShape);\n\n  if (attributes.kernelShape.length <= 2) {\n    const kw = attributes.kernelShape[attributes.kernelShape.length - 1];\n    const sw = attributes.strides[attributes.strides.length - 1];\n    const pwStart = attributes.pads[attributes.pads.length / 2 - 1];\n    const pwEnd = attributes.pads[attributes.pads.length - 1];\n    const dimIdxW = rank - (isChannelsLast ? 2 : 1);\n    let codeW = '';\n    let codeH = '';\n    let codeHEnd = '';\n    if (pwStart + pwEnd !== 0) {\n      codeW = `\n              for (var i: u32 = 0u; i < ${kw}u; i++) {\n                xIndices[${dimIdxW}] = indices[${dimIdxW}] * ${sw} - ${pwStart} + i;\n                if (xIndices[${dimIdxW}] < 0 || xIndices[${dimIdxW}] >= ${inputDims[dimIdxW]}) {\n                  pad++;\n                  continue;\n                }\n                let x_val = x[${x.indicesToOffset('xIndices')}];\n                ${op1}\n              }`;\n    } else {\n      codeW = `\n              for (var i: u32 = 0u; i < ${kw}u; i++) {\n                xIndices[${dimIdxW}] = indices[${dimIdxW}] * ${sw} - ${pwStart} + i;\n                let x_val = x[${x.indicesToOffset('xIndices')}];\n                ${op1}\n              }`;\n    }\n\n    if (attributes.kernelShape.length === 2) {\n      const kh = attributes.kernelShape[attributes.kernelShape.length - 2];\n      const sh = attributes.strides[attributes.strides.length - 2];\n      const phStart = attributes.pads[attributes.pads.length / 2 - 2];\n      const phEnd = attributes.pads[attributes.pads.length - 2];\n      const dimIdxH = rank - (isChannelsLast ? 3 : 2);\n      const dimH = inputDims[dimIdxH];\n      if (phStart + phEnd !== 0) {\n        codeH = `\n                for (var j: u32 = 0u; j < ${kh}u; j++) {\n                  xIndices[${dimIdxH}] = indices[${dimIdxH}] * ${sh} - ${phStart} + j;\n                  if (xIndices[${dimIdxH}] < 0 || xIndices[${dimIdxH}] >= ${dimH}) {\n                    pad+= ${kw};\n                    continue;\n                  }\n              `;\n      } else {\n        codeH = `\n                for (var j: u32 = 0u; j < ${kh}u; j++) {\n                  xIndices[${dimIdxH}] = indices[${dimIdxH}] * ${sh} - ${phStart} + j;\n                `;\n      }\n      codeHEnd = `\n              }\n            `;\n    }\n\n    const poolingCode = `\n            ${shaderHelper.declareVariables(x, output)}\n\n            ${shaderHelper.mainStart()}\n              ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n              let indices = ${output.offsetToIndices('global_idx')};\n              var xIndices = ${output.offsetToIndices('global_idx')};\n\n              var value: ${dataType} = ${dataType}(${start});\n              var pad = 0;\n              ${codeH}\n              ${codeW}\n              ${codeHEnd}\n              ${op2}\n\n              output[global_idx] = value;\n            }`;\n    return poolingCode;\n  } else {\n    if (isChannelsLast) {\n      throw new Error('Pooling with kernelShape.length > 2 is not supported for NHWC format.');\n    }\n    const kernelSize = ShapeUtil.size(attributes.kernelShape);\n    const kernelStrides = ShapeUtil.computeStrides(attributes.kernelShape);\n    const stridesRank = kernelStrides.length;\n    const padsRank = attributes.pads.length;\n    const hasPads = attributes.pads.reduce((sum, cur) => sum + cur);\n    let padCode = '';\n    if (hasPads) {\n      padCode = `\n                if (xIndices[j] >= inputDims[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${x.indicesToOffset('xIndices')}];\n                ${op1}\n              }`;\n    } else {\n      padCode = `\n              }\n              let x_val = x[${x.indicesToOffset('xIndices')}];\n              ${op1}\n            `;\n    }\n    const poolingCode = `\n            ${shaderHelper.declareVariables(x, output)}\n\n            const pads = array<u32, ${padsRank}>(${attributes.pads.map(i => `${i}u`).join(',')});\n            const inputDims = array<u32, ${rank}>(${inputDims.map(i => `${i}u`).join(',')});\n            const kernelStrides = array<u32, ${stridesRank}>(${kernelStrides.map(i => `${i}u`).join(',')});\n            const strides = array<u32, ${stridesRank}>(${attributes.strides.map(i => `${i}u`).join(',')});\n\n            ${shaderHelper.mainStart()}\n              ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n              let indices = ${output.offsetToIndices('global_idx')};\n              let xIndices = ${output.offsetToIndices('global_idx')};\n\n              var offsets: array<u32, ${stridesRank}>;\n\n              var value = ${output.type.value}(${start});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < ${kernelSize}u; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${stridesRank - 1}u; j++) {\n                  offsets[j] = offset / kernelStrides[j];\n                  offset -= offsets[j] * kernelStrides[j];\n                }\n                offsets[${stridesRank - 1}] = offset;\n\n                isPad = false;\n                for (var j = ${rank - stridesRank}u; j < ${rank}u; j++) {\n                  xIndices[j] = indices[j] * strides[j - ${rank - stridesRank}u]\n                    + offsets[j - ${rank - stridesRank}u] - pads[j - 2u];\n                  ${padCode}\n              }\n              ${op2}\n\n              output[global_idx] = value;\n            }`;\n    return poolingCode;\n  }\n};\n\nexport interface FormatAttributes {\n  readonly format: 'NHWC'|'NCHW';\n}\n\nexport interface PoolCommonAttributes extends FormatAttributes {\n  readonly autoPad: string;\n  readonly ceilMode: number;\n  readonly kernelShape: readonly number[];\n  readonly strides: readonly number[];\n  readonly pads: readonly number[];\n}\n\nconst parsePoolCommonAttributes = (attributes: Record<string, unknown>): PoolCommonAttributes => ({\n  format: attributes.format as FormatAttributes['format'],\n  autoPad: ['NOTSET', 'VALID', 'SAME_UPPER', 'SAME_LOWER'][attributes.auto_pad as number],\n  ceilMode: attributes.ceil_mode as number,\n  kernelShape: attributes.kernel_shape as [number, number],\n  strides: attributes.strides as [number, number],\n  pads: attributes.pads as [number, number, number, number]\n});\n\nexport interface AveragePoolAttributes extends PoolCommonAttributes, AttributeWithCacheKey {\n  readonly countIncludePad: boolean;\n}\n\nconst createAveragePoolProgramInfo =\n    (name: string, input: TensorView, isGlobalOperator: boolean, attributes: AveragePoolAttributes): ProgramInfo => {\n      const [adjustedAttributes, outputShape] =\n          getAdjustedPoolAttributesAndOutputShape(input, attributes, isGlobalOperator);\n      const kernelSize = ShapeUtil.size(adjustedAttributes.kernelShape);\n\n      const x = inputVariable('x', input.dataType, input.dims);\n      const dataType = x.type.value;\n\n      const op1 = 'value += x_val;';\n      let op2 = '';\n      if (adjustedAttributes.countIncludePad) {\n        op2 += `value /= ${dataType}(${kernelSize});`;\n      } else {\n        op2 += `value /= ${dataType}(${kernelSize} - pad);`;\n      }\n      return {\n        name,\n        shaderCache: {hint: attributes.cacheKey},\n        getRunData: () => ({\n          outputs: [{dims: outputShape, dataType: input.dataType}],\n          dispatchGroup: {x: Math.ceil(ShapeUtil.size(outputShape) / 64 /* workgroup size */)}\n        }),\n        getShaderSource: shaderHelper =>\n            generatePoolingCode(shaderHelper, x, input.dims, outputShape, adjustedAttributes, op1, op2, '0.0'),\n      };\n    };\n\nexport const parseAveragePoolAttributes = (attributes: Record<string, unknown>): AveragePoolAttributes => {\n  const countIncludePad = (attributes.count_include_pad as number) === 0 ? false : true;\n\n  const attr = parsePoolCommonAttributes(attributes);\n  // TODO: support attribute 'ceil_mode'\n  if (attr.ceilMode !== 0) {\n    throw new Error('using ceil() in shape computation is not yet supported for AveragePool');\n  }\n\n  return createAttributeWithCacheKey({countIncludePad, ...attr});\n};\n\nexport const averagePool = (context: ComputeContext, attributes: AveragePoolAttributes): void => {\n  validateInputs(context.inputs);\n  context.compute(createAveragePoolProgramInfo('AveragePool', context.inputs[0], false, attributes));\n};\n\nconst globalPoolAttributes = {\n  autoPad: '',\n  ceilMode: 0,\n  countIncludePad: false,\n  kernelShape: [],\n  strides: [],\n  pads: [],\n  storageOrder: 0,\n  dilations: [],\n  cacheKey: ''\n};\n\nexport const parseGlobalAveragePoolAttributes = (attributes: Record<string, unknown>): AveragePoolAttributes => {\n  const format = attributes.format as FormatAttributes['format'];\n  return {format, ...globalPoolAttributes, cacheKey: format};\n};\n\nexport const globalAveragePool = (context: ComputeContext, attributes: AveragePoolAttributes): void => {\n  validateInputs(context.inputs);\n  context.compute(createAveragePoolProgramInfo('GlobalAveragePool', context.inputs[0], true, attributes));\n};\n\nexport interface MaxPoolAttributes extends PoolCommonAttributes, AttributeWithCacheKey {\n  readonly storageOrder: number;\n  readonly dilations: number[];\n}\n\nconst createMaxPoolProgramInfo =\n    (name: string, input: TensorView, isGlobalOperator: boolean, attributes: MaxPoolAttributes): ProgramInfo => {\n      const [adjustedAttributes, outputShape] =\n          getAdjustedPoolAttributesAndOutputShape(input, attributes, isGlobalOperator);\n      const op1 = `\n      value = max(x_val, value);\n    `;\n      const op2 = '';\n      const x = inputVariable('x', input.dataType, input.dims);\n      return {\n        name,\n        shaderCache: {hint: attributes.cacheKey},\n        getRunData: () => ({\n          outputs: [{dims: outputShape, dataType: input.dataType}],\n          dispatchGroup: {x: Math.ceil(ShapeUtil.size(outputShape) / 64 /* workgroup size */)}\n        }),\n        getShaderSource: shaderHelper =>\n            generatePoolingCode(shaderHelper, x, input.dims, outputShape, adjustedAttributes, op1, op2, '-1e5'),\n      };\n    };\n\nexport const maxPool = (context: ComputeContext, attributes: MaxPoolAttributes): void => {\n  validateInputs(context.inputs);\n  context.compute(createMaxPoolProgramInfo('MaxPool', context.inputs[0], false, attributes));\n};\n\nexport const parseMaxPoolAttributes = (attributes: Record<string, unknown>): MaxPoolAttributes => {\n  const storageOrder = attributes.storage_order as number;\n  const dilations = attributes.dilations as [number, number];\n\n  const attr = parsePoolCommonAttributes(attributes);\n  // TODO: support attribute 'ceil_mode' and 'storage_order'\n  if (storageOrder !== 0) {\n    throw new Error('column major storage order is not yet supported for MaxPool');\n  }\n  if (attr.ceilMode !== 0) {\n    throw new Error('using ceil() in shape computation is not yet supported for MaxPool');\n  }\n\n  return createAttributeWithCacheKey({storageOrder, dilations, ...attr});\n};\n\nexport const parseGlobalMaxPoolAttributes = (attributes: Record<string, unknown>): MaxPoolAttributes => {\n  const format = attributes.format as FormatAttributes['format'];\n  return {format, ...globalPoolAttributes, cacheKey: format};\n};\n\nexport const globalMaxPool = (context: ComputeContext, attributes: MaxPoolAttributes): void => {\n  validateInputs(context.inputs);\n  context.compute(createMaxPoolProgramInfo('GlobalMaxPool', context.inputs[0], true, attributes));\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport {DataType} from '../../../wasm-common';\nimport {ComputeContext, ProgramInfo} from '../types';\n\nimport {outputVariable, ShaderHelper} from './common';\n\nconst validateInputsContent = (start: number, limit: number, delta: number): void => {\n  const sameStartLimit = start === limit;\n  const increasingRangeNegativeStep = start < limit && delta < 0;\n  const decreasingRangePositiveStep = start > limit && delta > 0;\n\n  if (sameStartLimit || increasingRangeNegativeStep || decreasingRangePositiveStep) {\n    throw new Error('Range these inputs\\' contents are invalid.');\n  }\n};\n\nconst createRangeProgramInfo = (start: number, limit: number, delta: number, dataType: DataType): ProgramInfo => {\n  const numElements = Math.abs(Math.ceil((limit - start) / delta));\n  const outputShape: number[] = [numElements];\n  const outputSize = numElements;\n\n  const output = outputVariable('output', dataType, outputShape);\n  const wgslType = output.type.storage;\n\n  const getShaderSource = (shaderHelper: ShaderHelper) => `\n        ${shaderHelper.declareVariables(output)}\n        ${shaderHelper.mainStart()}\n        ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n        output[global_idx] = ${wgslType}(${start}) + ${wgslType}(global_idx) * ${wgslType}(${delta});\n      }`;\n  return {\n    name: 'Range',\n    shaderCache: {hint: [start, limit, delta].map(x => x.toString()).join('_')},\n    getShaderSource,\n    getRunData: () => (\n        {outputs: [{dims: outputShape, dataType}],\n         dispatchGroup: {x: Math.ceil(outputSize / 64 /* workgroup size */)}})\n  };\n};\n\nexport const range = (context: ComputeContext): void => {\n  let start = 0;\n  let limit = 0;\n  let delta = 0;\n  if (context.inputs[0].dataType === DataType.int32) {\n    start = context.inputs[0].getInt32Array()[0];\n    limit = context.inputs[1].getInt32Array()[0];\n    delta = context.inputs[2].getInt32Array()[0];\n  } else if (context.inputs[0].dataType === DataType.float) {\n    start = context.inputs[0].getFloat32Array()[0];\n    limit = context.inputs[1].getFloat32Array()[0];\n    delta = context.inputs[2].getFloat32Array()[0];\n  }\n  if (env.webgpu.validateInputContent) {\n    validateInputsContent(start, limit, delta);\n  }\n\n  context.compute(createRangeProgramInfo(start, limit, delta, context.inputs[0].dataType), {inputs: []});\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n\nimport {TensorView} from '../../tensor-view';\nimport {ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, ProgramInfo} from '../types';\n\nimport {IndicesHelper, inputVariable, outputVariable, ShaderHelper} from './common';\n\ntype CoordinateTransformMode = 'half_pixel'|'asymmetric'|'pytorch_half_pixel'|'tf_half_pixel_for_nn'|'align_corners'|\n    'tf_crop_and_resize'|'half_pixel_symmetric';\n\ntype KeepAspectRatioPolicy = 'stretch'|'not_smaller'|'not_larger';\n\ntype Mode = 'nearest'|'linear'|'cubic';\n\ntype NearestMode = 'round_prefer_floor'|'round_prefer_ceil'|'floor'|'ceil'|'simple';\n\nexport interface ResizeAttributes extends AttributeWithCacheKey {\n  antialias: number;\n  axes: number[];\n  coordinateTransformMode: CoordinateTransformMode;\n  cubicCoeffA: number;\n  excludeOutside: boolean;\n  extrapolationValue: number;\n  keepAspectRatioPolicy: KeepAspectRatioPolicy;\n  mode: Mode;\n  nearestMode: NearestMode;\n}\n\nconst validateScales = (scales: number[], attributes: ResizeAttributes): void => {\n  scales.every((value) => value > 0 || (() => {\n                            throw new Error('Resize requires scales input values to be positive');\n                          }));\n  // Check scales dims based on mode: LINEAR, CUBIC\n  if (scales.length > 0) {\n    if (attributes.mode === 'linear') {\n      if (!(scales.length === 2 || (scales.length === 4 && scales[0] === 1 && scales[1] === 1) ||\n            (scales.length === 4 && scales[0] === 1 && scales[3] === 1))) {\n        throw new Error('Resize requires scales input size to be 2 or 4 for linear mode');\n      }\n    } else if (attributes.mode === 'cubic') {\n      if (!(scales.length === 2 || (scales.length === 4 && scales[0] === 1 && scales[1] === 1) ||\n            (scales.length === 4 && scales[0] === 1 && scales[3] === 1))) {\n        throw new Error('Resize requires scales input size to be 2 or 4 for cubic mode');\n      }\n    }\n  }\n};\n\nconst updateScales = (scales: readonly number[], axes: readonly number[], rank: number): number[] => {\n  axes.every((value) => value >= 0 && value < rank || (() => {\n                          throw new Error('Resize requires axes input values to be positive and less than rank');\n                        }));\n  const newScales = new Array(rank).fill(1.0);\n  axes.forEach((value, index) => newScales[value] = scales[index]);\n  return newScales;\n};\n\nconst validateInputs =\n    (inputs: readonly TensorView[], attributes: ResizeAttributes, opsetVersion: number, scales: number[],\n     sizes: number[], roi: number[]): void => {\n      const [roiInputIndex, scalesInputIndex, sizesInputIndex] =\n          (opsetVersion > 10) ? [1, 2, 3] : [-1, (inputs.length > 1) ? 1 : -1, -1];\n      const rank = inputs[0].dims.length;\n      if (roiInputIndex > 0 && inputs.length > roiInputIndex && inputs[roiInputIndex].dims.length > 0) {\n        inputs[roiInputIndex].getFloat32Array().forEach((value) => roi.push(value));\n\n      } else if (attributes.coordinateTransformMode === 'tf_crop_and_resize') {\n        throw new Error('Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize');\n      }\n\n      if (scalesInputIndex > 0 && inputs.length > scalesInputIndex && inputs[scalesInputIndex].dims.length > 0) {\n        inputs[scalesInputIndex].getFloat32Array().forEach((value) => scales.push(value));\n        if (scales.length !== 0 &&\n            (scales.length !== rank && (opsetVersion >= 18 && scales.length !== attributes.axes.length))) {\n          throw new Error(\n              'Resize requires scales input size to be same as input rank or axes size for opset 18 and up');\n        }\n        validateScales(scales, attributes);\n        if (attributes.axes.length > 0) {\n          updateScales(scales, attributes.axes, rank).forEach((value, index) => scales[index] = value);\n        }\n      }\n      if (sizesInputIndex > 0 && inputs.length > sizesInputIndex) {\n        inputs[sizesInputIndex].getBigInt64Array().forEach((value) => sizes.push(Number(value)));\n        if (sizes.length !== rank || (opsetVersion >= 18 && sizes.length === attributes.axes.length)) {\n          throw new Error('Resize requires sizes input size to be same as input rank or axes size for opset 18 and up');\n        }\n      }\n\n      if (attributes.axes.length > 0) {\n        if (scales.length !== attributes.axes.length) {\n          throw new Error('Resize requires \"scales\" input size to be of axes rank when axes attributes is specified');\n        }\n        if (sizes.length !== attributes.axes.length) {\n          throw new Error(\n              'Resize requires \"sizes\" input size to be of rank axes rank when axes attributes is specified');\n        }\n      }\n      if (typeof scales !== 'undefined' && typeof sizes !== 'undefined' && scales.length > 0 && sizes.length > rank) {\n        throw new Error('Resize requires only of scales or sizes to be specified');\n      }\n    };\n\nconst getOriginalCoordinateFromResizedCoordinate = (coordinateTransferMode: CoordinateTransformMode): string =>\n    'fn getOriginalCoordinateFromResizedCoordinate(xResized: f32, xScale: f32, lengthResized: f32,\\\n    lengthOriginal: f32, roiStart: f32, roiEnd: f32) -> f32 { ' +\n    (() => {\n      switch (coordinateTransferMode) {\n        case 'asymmetric':\n          return 'return xResized / xScale;';\n        case 'pytorch_half_pixel':\n          return 'if (lengthResized > 1) { \\\n                    return (xResized + 0.5) / xScale - 0.5; \\\n                  } else { \\\n                    return 0.0; \\\n                  }';\n        case 'tf_half_pixel_for_nn':\n          return 'return (xResized + 0.5) / xScale;';\n        case 'align_corners':\n          return 'if (lengthResized == 1) { \\\n                    return 0.0; \\\n                  } else { \\\n                    return xResized * (lengthOriginal - 1) / (lengthResized - 1); \\\n                  }';\n        case 'tf_crop_and_resize':\n          return 'if (lengthResized > 1) { \\\n                    return roiStart * (lengthOriginal - 1) + \\\n                          (xResized * (roiEnd - roiStart) * (lengthOriginal - 1)) / (lengthResized - 1); \\\n                  } else { \\\n                    return 0.5 * (roiStart + roiEnd) * f32(lengthOriginal - 1); \\\n                  }';\n        case 'half_pixel_symmetric':\n          return [\n            'const outputWidth = xScale * lengthResized;', 'const adjustment = lengthResized / outputWidth;',\n            'const center = lengthOriginal / 2;', 'const offset = center * (1 - adjustment);',\n            'return offset + ((xResized + 0.5) / xScale) - 0.5;'\n          ].join('\\n');\n        case 'half_pixel':\n          return 'return ((xResized + 0.5) / xScale) - 0.5;';\n        default:\n          throw new Error(`Coordinate transform mode ${coordinateTransferMode} is not supported`);\n      }\n    })() +\n    '}';\n\nconst getNearestPixelFromOriginal = (nearestMode: NearestMode, opsetVersion: number): string =>\n    'fn getNearestPixelFromOriginal(xOriginal: f32, isDownSample: bool) -> f32 {' + (() => {\n      switch (nearestMode) {\n        case 'round_prefer_ceil':\n          return 'if (fract(xOriginal) == 0.5) { \\\n            return ceil(xOriginal); \\\n          } else { \\\n            return round(xOriginal); \\\n          }';\n        case 'floor':\n          return 'return floor(xOriginal);';\n        case 'ceil':\n          return 'return ceil(xOriginal);';\n        case 'round_prefer_floor':\n          return 'if (fract(xOriginal) == 0.5) { \\\n                    return floor(xOriginal); \\\n                  } else { \\\n                    return round(xOriginal); \\\n                  }';\n        case 'simple':\n        default:\n          if (opsetVersion < 11) {\n            return 'if (isDownSample) \\\n                    { \\\n                      return ceil(xOriginal); \\\n                    } else { \\\n                      return xOriginal; \\\n                    }';\n          }\n          throw new Error(`Nearest mode ${nearestMode} is not supported`);\n      }\n    })() +\n    '}';\n\nconst updateRoI = (roi: readonly number[], axes: readonly number[], rank: number): number[] => {\n  const roiTmp = new Array(rank).fill(0).concat(new Array(rank).fill(1));\n  const roiLocal = roi.length === 0 ? roiTmp : roi.slice();\n  if (axes.length > 0) {\n    axes.forEach((v, i) => {\n      roiTmp[v] = roiLocal[i];\n      roiTmp[i + rank] = roiLocal[axes.length + i];\n    });\n    return roiTmp;\n  }\n  return roiLocal;\n};\n\nconst initOutputShape =\n    (inputShape: readonly number[], scales: readonly number[], sizes: readonly number[], axes: readonly number[]):\n        number[] => {\n          let outputShape: number[] = [];\n          if (sizes.length > 0) {\n            if (axes.length > 0) {\n              inputShape.forEach((v) => outputShape.push(v));\n              if (Math.max(...axes) > inputShape.length) {\n                throw new Error('axes is out of bound');\n              }\n              axes.forEach((v, i) => outputShape[v] = sizes[i]);\n            } else {\n              sizes.forEach((v) => outputShape.push(v));\n            }\n          } else {\n            if (scales.length === 0) {\n              throw new Error('Resize requires either scales or sizes.');\n            } else {\n              outputShape = inputShape.map((value, index) => Math.round(value * scales[index]));\n            }\n          }\n          return outputShape;\n        };\n\nconst adjustOutputShape =\n    (inputShape: readonly number[], outputShape: readonly number[], scales: number[], attributes: ResizeAttributes):\n        number[] => {\n          const scaleInPolicy = (() => {\n            switch (attributes.keepAspectRatioPolicy) {\n              case 'not_larger':\n                return attributes.axes.length > 0 ? Math.min(...attributes.axes.map(i => scales[i]), Number.MAX_VALUE) :\n                                                    Math.min(...scales, Number.MAX_VALUE);\n              case 'not_smaller':\n                return attributes.axes.length > 0 ? Math.max(...attributes.axes.map(i => scales[i]), Number.MIN_VALUE) :\n                                                    Math.max(...scales, Number.MIN_VALUE);\n              default:\n                throw new Error(`Keep aspect ratio policy ${attributes.keepAspectRatioPolicy} is not supported`);\n            }\n          })();\n          scales.fill(1.0, 0, scales.length);\n          const adjustedOutputShape = inputShape.slice();\n          if (attributes.axes.length > 0) {\n            attributes.axes.forEach((v) => scales[v] = scaleInPolicy);\n            attributes.axes.forEach((v) => adjustedOutputShape[v] = Math.round(inputShape[v] * scales[v]));\n          } else {\n            scales.fill(scaleInPolicy, 0, scales.length);\n            adjustedOutputShape.forEach((v, i) => adjustedOutputShape[i] = Math.round(v * scales[i]));\n          }\n          return adjustedOutputShape;\n        };\n\nconst calculateOriginalIndicesFromOutputIndices =\n    (output: IndicesHelper, inputShape: readonly number[], outputShape: readonly number[], scales: readonly number[],\n     roi: readonly number[]): string => `\n    fn calculateOriginalIndicesFromOutputIndices(outputIndices: ${output.type.indices}) -> array<f32, ${\n        outputShape.length}> {\n      const inputShape = array<u32, ${inputShape.length}>(${inputShape.map(i => `${i}u`).join(',')});\n      const outputShape = array<u32, ${outputShape.length}>(${outputShape.map(i => `${i}u`).join(',')});\n      const scales = array<f32, ${scales.length}>(${scales.map(i => `${i}f`).join(',')});\n      const roi = array<f32, ${roi.length}>(${roi.map(i => `${i}f`).join(',')});\n      var originalIndices: array<f32, ${outputShape.length}>;\n      for (var i:u32 = 0; i < ${outputShape.length}; i++) {\n        var outputIndex = ${outputShape.length === 1 ? 'outputIndices' : 'outputIndices[i]'};\n        if (scales[i] == 1.0) {\n          originalIndices[i] = f32(outputIndex);\n        } else {\n          originalIndices[i] = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],\n                f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${inputShape.length}]);\n        }\n      }\n      return originalIndices;\n    }`;\n\nconst calculateInputIndicesFromOutputIndices =\n    (input: IndicesHelper, output: IndicesHelper, inputShape: readonly number[], outputShape: readonly number[],\n     scales: readonly number[], roi: readonly number[], useExtrapolation: boolean): string => `\n    fn calculateInputIndicesFromOutputIndices(outputIndices: ${output.type.indices}) -> ${input.type.indices} {\n        const inputShape = array<u32, ${inputShape.length}>(${inputShape.map(i => `${i}u`).join(',')});\n        const outputShape = array<u32, ${outputShape.length}>(${outputShape.map(i => `${i}u`).join(',')});\n        const scales = array<f32, ${scales.length}>(${scales.map(i => `${i}f`).join(',')});\n        const roi = array<f32, ${roi.length}>(${roi.map(i => `${i}f`).join(',')});\n        var inputIndices: ${input.type.indices};\n        for (var i:u32 = 0; i < ${outputShape.length}; i++) {\n          var outputIndex = ${outputShape.length === 1 ? 'outputIndices' : 'outputIndices[i]'};\n          var inputIndex: u32;\n          if (scales[i] == 1.0) {\n            inputIndex = outputIndex;\n          } else {\n            var original_idx = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],\n                    f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${inputShape.length}]);\n            if (!${useExtrapolation} || (original_idx >= 0 && original_idx < f32(inputShape[i]))) {\n              if (original_idx < 0) {\n                inputIndex = 0;\n              } else if (original_idx > (f32(inputShape[i]) - 1)) {\n                inputIndex = inputShape[i] - 1;\n              } else {\n                inputIndex = u32(getNearestPixelFromOriginal(original_idx, scales[i] < 1));\n              }\n            } else {\n              inputIndex = u32(original_idx);\n            }\n          }\n          ${input.indicesSet('inputIndices', 'i', 'inputIndex')}\n        }\n        return inputIndices;\n    }`;\n\nconst checkInputIndices = (input: IndicesHelper, inputShape: readonly number[]): string => `\n    fn checkInputIndices(inputIndices: ${input.type.indices}) -> bool {\n      const inputShape = array<u32, ${inputShape.length}>(${inputShape.map(i => `${i}u`).join(',')});\n      for (var i:u32 = 0; i < ${inputShape.length}; i++) {\n        var inputIndex = ${inputShape.length === 1 ? 'inputIndices' : 'inputIndices[i]'};\n        if (inputIndex < 0 || inputIndex >= inputShape[i]) {\n          return false;\n        }\n      }\n      return true;\n    }`;\n\nconst bilinearInterpolation =\n    (input: IndicesHelper, output: IndicesHelper, inputShape: readonly number[], outputShape: readonly number[],\n     scales: readonly number[], useExtrapolation: boolean, extrapolationValue: number): string => {\n      const [batchIdx, heightIdx, widthIdx, channelIdx] =\n          inputShape.length === 2 ? [-1, 0, 1, -1] : (scales[1] === 1.0 ? [0, 2, 3, 1] : [0, 1, 2, 3]);\n      return `\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> f32 {\n      var inputIndices: ${input.type.indices};\n      inputIndices[${heightIdx}] = max(0, min(row, ${inputShape[heightIdx]} - 1));\n      inputIndices[${widthIdx}] = max(0, min(col, ${inputShape[widthIdx]} - 1));\n      if (${inputShape.length} > 2) {\n        inputIndices[${channelIdx}] = channel;\n        inputIndices[${batchIdx}] = batch;\n      };\n      return input[${input.indicesToOffset('inputIndices')}];\n    }\n\n    fn bilinearInterpolation(outputIndices: ${output.type.indices}) -> f32 {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(outputIndices);\n      var row:f32 = originalIndices[${heightIdx}];\n      var col:f32 = originalIndices[${widthIdx}];\n      if (${useExtrapolation} && (row < 0 || row > (${inputShape[heightIdx]} - 1) || col < 0 || col > ${\n          inputShape[widthIdx]} - 1)) {\n        return ${extrapolationValue};\n      }\n      row = max(0, min(row, ${inputShape[heightIdx]} - 1));\n      col = max(0, min(col, ${inputShape[widthIdx]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = 0;\n      var batch: u32 = 0;\n      if (${inputShape.length > 2}) {\n        channel = u32(originalIndices[${channelIdx}]);\n        batch = u32(originalIndices[${batchIdx}]);\n      }\n      var x11: f32 = getInputValue(batch, channel, row1, col1);\n      var x12: f32 = getInputValue(batch, channel, row1, col2);\n      var x21: f32 = getInputValue(batch, channel, row2, col1);\n      var x22: f32 = getInputValue(batch, channel, row2, col2);\n      var dx1: f32 = row - f32(row1);\n      var dx2: f32 = f32(row2 ) - row;\n      var dy1 = col - f32(col1);\n      var dy2 = f32(col2) - col;\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`;\n    };\n\nconst bicubicInterpolation =\n    (input: IndicesHelper, output: IndicesHelper, inputShape: readonly number[], outputShape: readonly number[],\n     scales: readonly number[], roi: readonly number[], cubicCoeffA: number, useExtrapolation: boolean,\n     extrapolationValue: number, excludeOutside: boolean): string => {\n      const [heightIdx, widthIdx] = inputShape.length === 2 ? [0, 1] : (scales[1] === 1.0) ? [2, 3] : [1, 2];\n\n      const createCubicInterpolationFunction = (idx: number): string => {\n        const direction = idx === heightIdx ? 'row' : 'col';\n        return `\n      fn ${direction}CubicInterpolation(inputIndices: ${input.type.indices}, outputIndices: ${\n            output.type.indices}) -> f32 {\n        var outputIndex = ${outputShape.length === 1 ? 'outputIndices' : `outputIndices[${idx}]`};\n        var originalIdx: f32 = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), ${scales[idx]},\n        f32(${outputShape[idx]}), f32(${inputShape[idx]}), ${roi[idx]}, ${roi[idx]} + ${inputShape.length});\n        var fractOriginalIdx: f32 = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${useExtrapolation} && (originalIdx < 0 || originalIdx > (${inputShape[idx]} - 1))) {\n          return ${extrapolationValue};\n        }\n        var data: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${direction}: f32 = originalIdx + f32(i);\n          if (${direction} < 0 || ${direction} >= ${inputShape[idx]}) {\n            if (${excludeOutside}) {\n              coefs[i + 1] = 0.0;\n              continue;\n            } else if (${useExtrapolation}) {\n              return ${extrapolationValue};\n            } else {\n              ${direction} = max(0, min(${direction}, ${inputShape[idx]} - 1));\n            }\n          }\n          var inputIndicesCopy: ${input.type.indices} = inputIndices;\n          inputIndicesCopy[${idx}] = u32(${direction});\n          data[i + 1] = ${idx === heightIdx ? `input[${input.indicesToOffset('inputIndicesCopy')}];` : `\n                                               rowCubicInterpolation(inputIndicesCopy, outputIndices);`}\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`;\n      };\n\n      return `\n    ${createCubicInterpolationFunction(heightIdx)};\n    ${createCubicInterpolationFunction(widthIdx)};\n  fn getCubicInterpolationCoefs(s: f32) -> array<f32, 4> {\n    var absS = abs(s);\n    var coeffs: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: f32 = 1.0 - absS;\n    var twoMinusAbsS: f32 = 2.0 - absS;\n    var onePlusAbsS: f32 = 1.0 + absS;\n    coeffs[0] = ((${cubicCoeffA} * onePlusAbsS - 5 * ${cubicCoeffA}) * onePlusAbsS + 8 * ${\n          cubicCoeffA}) * onePlusAbsS - 4 * ${cubicCoeffA};\n    coeffs[1] = ((${cubicCoeffA} + 2) * absS - (${cubicCoeffA} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${cubicCoeffA} + 2) * oneMinusAbsS - (${cubicCoeffA} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${cubicCoeffA} * twoMinusAbsS - 5 * ${cubicCoeffA}) * twoMinusAbsS + 8 * ${\n          cubicCoeffA}) * twoMinusAbsS - 4 * ${cubicCoeffA};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<f32, 4>, coefs: array<f32, 4>) -> f32 {\n    var coefsSum: f32 = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(outputIndices: ${output.type.indices}) -> f32 {\n    var inputIndices: ${input.type.indices} = outputIndices;\n    return colCubicInterpolation(inputIndices, outputIndices);\n  }\n    `;\n    };\n\nconst createResizeProgramInfo =\n    (inputTensor: TensorView, attributes: ResizeAttributes, opsetVersion: number, scalesInput: readonly number[],\n     sizes: readonly number[], roiInput: readonly number[]): ProgramInfo => {\n      const inputShape = inputTensor.dims;\n      const roi = updateRoI(roiInput, attributes.axes, inputShape.length);\n\n      let outputShape = initOutputShape(inputShape, scalesInput, sizes, attributes.axes);\n      let scales = scalesInput.slice();\n      if (scalesInput.length === 0) {\n        scales = inputShape.map((value, index) => value === 0 ? 1.0 : outputShape[index] / value);\n        if (attributes.keepAspectRatioPolicy !== 'stretch') {\n          outputShape = adjustOutputShape(inputShape, outputShape, scales, attributes);\n        }\n      }\n      const output = outputVariable('output', inputTensor.dataType, outputShape);\n      const input = inputVariable('input', inputTensor.dataType, inputShape);\n      const outputSize = ShapeUtil.size(outputShape);\n      const noScale = inputShape.length === outputShape.length && inputShape.every((d, i) => d === outputShape[i]);\n      const useExtrapolation = attributes.coordinateTransformMode === 'tf_crop_and_resize';\n      const getShaderSource = (shaderHelper: ShaderHelper) => `\n      ${getOriginalCoordinateFromResizedCoordinate(attributes.coordinateTransformMode)};\n      ${(() => {\n        switch (attributes.mode) {\n          case 'nearest':\n            return `\n              ${checkInputIndices(input, inputShape)};\n              ${getNearestPixelFromOriginal(attributes.nearestMode, opsetVersion)};\n              ${\n                calculateInputIndicesFromOutputIndices(\n                    input, output, inputShape, outputShape, scales, roi, useExtrapolation)};\n              `;\n          case 'linear':\n            return `\n              ${calculateOriginalIndicesFromOutputIndices(output, inputShape, outputShape, scales, roi)};\n              ${\n                bilinearInterpolation(\n                    input, output, inputShape, outputShape, scales, useExtrapolation, attributes.extrapolationValue)};\n              `;\n          case 'cubic':\n            return `\n            ${\n                bicubicInterpolation(\n                    input, output, inputShape, outputShape, scales, roi, attributes.cubicCoeffA, useExtrapolation,\n                    attributes.extrapolationValue, attributes.excludeOutside)};\n            `;\n          default:\n            throw Error('Invalid resize mode');\n        }\n      })()};\n      ${shaderHelper.declareVariables(input, output)}\n      ${shaderHelper.mainStart()}\n        ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n        if (${noScale}) {\n          output[global_idx] = input[global_idx];\n        } else {\n          let outputIndices = ${output.offsetToIndices('global_idx')};\n          var inputIndices: ${input.type.indices};\n          ${(() => {\n        switch (attributes.mode) {\n          case 'nearest':\n            return `inputIndices = calculateInputIndicesFromOutputIndices(outputIndices);\n                  if (checkInputIndices(inputIndices)) {\n                    output[global_idx] = input[${input.indicesToOffset('inputIndices')}];\n                  } else {\n                    output[global_idx] = ${attributes.extrapolationValue};\n                  }`;\n          case 'linear':\n            return 'output[global_idx] = bilinearInterpolation(outputIndices);';\n          case 'cubic':\n            return 'output[global_idx] = bicubicInterpolation(outputIndices);';\n          default:\n            throw Error(`Unsupported resize mode: ${attributes.mode}`);\n        }\n      })()};\n        }\n      }`;\n\n      return {\n        name: 'Resize',\n        shaderCache: {\n          hint: `${attributes.cacheKey}|${opsetVersion}|${scales.length > 0 ? scales : ''}|${\n              sizes.length > 0 ? sizes : ''}`\n        },\n        getShaderSource,\n        getRunData: () => ({\n          outputs: [{dims: outputShape, dataType: inputTensor.dataType}],\n          dispatchGroup: {x: Math.ceil(outputSize / 64 /* workgroup size */)}\n        })\n      };\n    };\n\nconst getOpsetVersionFromCustomDataBuffer = (context: ComputeContext): number => {\n  const customDataBuffer = context.customDataBuffer;\n  const customDataBuffer32 = new Uint32Array(customDataBuffer, customDataBuffer.byteOffset, 1);\n  const opsetVersion = customDataBuffer32[0];\n  return opsetVersion;\n};\n\nexport const resize = (context: ComputeContext, attributes: ResizeAttributes): void => {\n  const scales: number[] = [];\n  const sizes: number[] = [];\n  const roi: number[] = [];\n  const opsetVersion = getOpsetVersionFromCustomDataBuffer(context);\n  validateInputs(context.inputs, attributes, opsetVersion, scales, sizes, roi);\n  context.compute(\n      createResizeProgramInfo(context.inputs[0], attributes, opsetVersion, scales, sizes, roi), {inputs: [0]});\n};\n\nexport const parseResizeAttributes = (attributes: Record<string, unknown>): ResizeAttributes => {\n  const antialias = attributes.antialias as number;\n  const axes = attributes.axes as number[];\n  const coordinateTransformMode: CoordinateTransformMode =\n      attributes.coordinateTransformMode as CoordinateTransformMode;\n  const cubicCoeffA = attributes.cubicCoeffA as number;\n  const excludeOutside = attributes.excludeOutside as number !== 0;\n  const extrapolationValue = attributes.extrapolationValue as number;\n  const keepAspectRatioPolicy: KeepAspectRatioPolicy = attributes.keepAspectRatioPolicy as KeepAspectRatioPolicy;\n  const mode: Mode = attributes.mode as Mode;\n  // If nearestMode is not specified, use simple mode.\n  const nearestMode: NearestMode = (attributes.nearestMode === '' ? 'simple' : attributes.nearestMode) as NearestMode;\n  return createAttributeWithCacheKey({\n    antialias,\n    axes,\n    coordinateTransformMode,\n    cubicCoeffA,\n    excludeOutside,\n    extrapolationValue,\n    keepAspectRatioPolicy,\n    mode,\n    nearestMode\n  });\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor-view';\nimport {ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, ProgramInfo} from '../types';\n\nimport {castToF32, fillVector, getMaxComponents, inputVariable, outputVariable, ShaderHelper, sumVector, tensorTypeToWsglStorageType,} from './common';\n\nexport interface SkipLayerNormAttributes extends AttributeWithCacheKey {\n  epsilon: number;\n}\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length < 3) {\n    throw new Error('layerNorm requires at least 3 inputs.');\n  }\n\n  const input: TensorView = inputs[0];\n  const skip: TensorView = inputs[1];\n  const gamma: TensorView = inputs[2];\n\n  if (input.dataType !== skip.dataType || input.dataType !== gamma.dataType) {\n    throw new Error('All inputs must have the same data type');\n  }\n\n  if (input.dims.length !== 3 && input.dims.length !== 2) {\n    throw new Error('Input must be 2D or 3D');\n  }\n\n  if (skip.dims.length !== 3 && skip.dims.length !== 2) {\n    throw new Error('Skip must be 2D or 3D');\n  }\n\n  const hiddenSize = input.dims[input.dims.length - 1];\n  const sequenceLength = input.dims[input.dims.length - 2];\n  if (skip.dims[skip.dims.length - 1] !== hiddenSize) {\n    throw new Error('Skip must have the same hidden size as input');\n  }\n  if (skip.dims[skip.dims.length - 2] !== sequenceLength) {\n    throw new Error('Skip must have the same sequence length as input');\n  }\n\n  if (gamma.dims.length !== 1) {\n    throw new Error('Gamma must be 1D');\n  }\n  if (gamma.dims[gamma.dims.length - 1] !== hiddenSize) {\n    throw new Error('Gamma must have the same hidden size as input');\n  }\n  if (inputs.length > 3) {\n    const beta: TensorView = inputs[3];\n    if (beta.dims.length !== 1) {\n      throw new Error('Beta must be 1D');\n    }\n    if (beta.dims[beta.dims.length - 1] !== hiddenSize) {\n      throw new Error('Beta must have the same hidden size as input');\n    }\n  }\n\n  if (inputs.length > 4) {\n    const bias: TensorView = inputs[4];\n    if (bias.dims.length !== 1) {\n      throw new Error('Bias must be 1D');\n    }\n    if (bias.dims[bias.dims.length - 1] !== hiddenSize) {\n      throw new Error('Bias must have the same hidden size as input');\n    }\n  }\n};\n\nconst createSkipLayerNormProgramInfo =\n    (inputs: readonly TensorView[], attributes: SkipLayerNormAttributes, outputCount: number, isTraining: boolean):\n        ProgramInfo => {\n          const inputShape = inputs[0].dims;\n          const inputSize = ShapeUtil.size(inputShape);\n          const outputShape = inputShape;\n          const outputSize = inputSize;\n          const hiddenSize = inputShape.slice(-1)[0];\n          const meanInvStdDevDim = isTraining ? inputShape.slice(0, -1).concat(1) : [];\n          const hasBetaInput = inputs.length > 3;\n          const hasBiasInput = inputs.length > 4;\n          const hasMeanOutput = isTraining && outputCount > 1;\n          const hasInvStdDevOutput = isTraining && outputCount > 2;\n          const hasInputSkipBiasSumOutput = outputCount > 3;\n\n          const components = getMaxComponents(hiddenSize);\n          const variables = [\n            inputVariable('x', inputs[0].dataType, inputs[0].dims, components),\n            inputVariable('skip', inputs[1].dataType, inputs[1].dims, components),\n            inputVariable('gamma', inputs[2].dataType, inputs[2].dims, components),\n          ];\n          if (hasBetaInput) {\n            variables.push(inputVariable('beta', inputs[3].dataType, inputs[3].dims, components));\n          }\n          if (hasBiasInput) {\n            variables.push(inputVariable('bias', inputs[4].dataType, inputs[4].dims, components));\n          }\n          variables.push(outputVariable('output', inputs[0].dataType, outputShape, components));\n          if (hasMeanOutput) {\n            variables.push(outputVariable('meanOutput', DataType.float, meanInvStdDevDim));\n          }\n          if (hasInvStdDevOutput) {\n            variables.push(outputVariable('invStdOutput', DataType.float, meanInvStdDevDim));\n          }\n          if (hasInputSkipBiasSumOutput) {\n            variables.push(outputVariable('inputSkipBiasSum', inputs[0].dataType, outputShape, components));\n          }\n          const dataType = tensorTypeToWsglStorageType(inputs[0].dataType);\n          const getShaderSource = (shaderHelper: ShaderHelper) => `\n      const hiddenSize: f32 = ${hiddenSize};\n      const hiddenSizeVectorized: u32 = ${hiddenSize / components};\n      const epsilon: f32 = ${attributes.epsilon};\n\n      ${shaderHelper.declareVariables(...variables)}\n\n      ${shaderHelper.mainStart()}\n        ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize / hiddenSize)}\n        let offset = global_idx * hiddenSizeVectorized;\n        var sum = ${fillVector('f32', components)};\n        var squareSum = ${fillVector('f32', components)};\n        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {\n          let skipValue = skip[offset + i];\n          let biasValue = ${hasBiasInput ? 'bias[i]' : '0.0'};\n          let inputValue = x[offset + i];\n          let value = inputValue + skipValue + biasValue;\n          ${hasInputSkipBiasSumOutput ? 'inputSkipBiasSum[offset + i] = value;' : ''}\n          output[offset + i] = value;\n          let f32Value = ${castToF32(dataType, components, 'value')};\n          sum += f32Value;\n          squareSum += f32Value * f32Value;\n        }\n        let mean = ${sumVector('sum', components)} / hiddenSize;\n        let variance = sqrt(${sumVector('squareSum', components)} / hiddenSize - mean * mean + epsilon);\n        ${hasMeanOutput ? 'meanOutput[global_idx] = mean;' : ''}\n        ${hasInvStdDevOutput ? 'invStdOutput[global_idx] = 1.0 / variance;' : ''}\n        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {\n          output[offset + i] = (output[offset + i] - ${dataType}(mean)) / ${dataType}(variance) * gamma[i]\n           + ${hasBetaInput ? 'beta[i]' : '0.0'};\n        }\n      }`;\n          const outputs = [{dims: outputShape, dataType: inputs[0].dataType}];\n          if (outputCount > 1) {\n            outputs.push({dims: meanInvStdDevDim, dataType: DataType.float});\n          }\n          if (outputCount > 2) {\n            outputs.push({dims: meanInvStdDevDim, dataType: DataType.float});\n          }\n          if (outputCount > 3) {\n            outputs.push({dims: inputShape, dataType: inputs[0].dataType});\n          }\n\n          return {\n            name: 'SkipLayerNormalization',\n            shaderCache: {hint: attributes.cacheKey},\n            getShaderSource,\n            getRunData: () => ({outputs, dispatchGroup: {x: Math.ceil(outputSize / hiddenSize / 64)}}),\n          };\n        };\n\nexport const skipLayerNorm = (context: ComputeContext, attributes: SkipLayerNormAttributes): void => {\n  // TODO: initialize isTraining from ComputeContext\n  const isTraining = false;\n  validateInputs(context.inputs);\n  // Mean and InvStdDev are only used in training mode and are not required for inference.\n  // They are added here for completeness only.\n  const outputs = [0];\n  if (context.outputCount > 1) {\n    outputs.push(isTraining ? 1 : -3);\n  }\n  if (context.outputCount > 2) {\n    outputs.push(isTraining ? 2 : -3);\n  }\n  if (context.outputCount > 3) {\n    outputs.push(3);\n  }\n  context.compute(\n      createSkipLayerNormProgramInfo(context.inputs, attributes, context.outputCount, isTraining), {outputs});\n};\n\nexport const parseSkipLayerNormAttributes = (attributes: Record<string, unknown>): SkipLayerNormAttributes => {\n  const epsilon = attributes.epsilon as number;\n  return createAttributeWithCacheKey({epsilon});\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor-view';\nimport {ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, ProgramInfo, TensorInfo} from '../types';\n\nimport {IndicesHelper, inputVariable, outputVariable, ShaderHelper} from './common';\n\nexport interface SliceAttributes extends AttributeWithCacheKey {\n  readonly starts: number[];\n  readonly ends: number[];\n  readonly axes: number[];\n}\n\nconst validateInputs = (inputs: readonly TensorView[], attributes: SliceAttributes): void => {\n  if (!inputs || inputs.length < 1) {\n    throw new Error('too few inputs');\n  }\n  if (attributes.axes.length !== 0) {\n    if (attributes.axes.length !== attributes.starts.length || attributes.axes.length !== attributes.ends.length) {\n      throw new Error('axes, starts and ends must have the same length');\n    }\n  } else if (attributes.starts.length !== attributes.ends.length) {\n    throw new Error('starts and ends must have the same length');\n  }\n  inputs.slice(1).forEach((_, idx) => {\n    if (inputs[idx + 1].dataType !== DataType.int32 && inputs[idx + 1].dataType !== DataType.int64) {\n      throw new Error(`Input ${idx} must be an array of int32 or int64`);\n    }\n  });\n};\n\nconst readInput = (inputs: readonly TensorView[], idx: number): number[] => {\n  const input: number[] = [];\n  if (inputs.length > idx) {\n    if (inputs[idx].dataType === DataType.int64) {\n      inputs[idx].getBigInt64Array().forEach(v => input.push(Number(v)));\n    } else if (inputs[idx].dataType === DataType.int32) {\n      inputs[idx].getInt32Array().forEach(v => input.push(Number(v)));\n    } else {\n      throw new Error(`Input ${idx} must be an array of int32 or int64`);\n    }\n  }\n  return input;\n};\n\nconst createSliceAttributesFromInputs =\n    (inputs: readonly TensorView[], attributes: SliceAttributes): SliceAttributes => {\n      if (inputs.length > 1) {\n        const starts: number[] = readInput(inputs, 1);\n        const ends: number[] = readInput(inputs, 2);\n        let axes: number[] = readInput(inputs, 3);\n        if (axes.length === 0) {\n          axes = [...Array(inputs[0].dims.length).keys()];\n        }\n        return createAttributeWithCacheKey({starts, ends, axes});\n      } else {\n        return attributes;\n      }\n    };\n\nconst fixStartEndValues =\n    (value: number, index: number, inputShape: readonly number[], axes: readonly number[], steps: readonly number[]):\n        number => {\n          let newValue = value;\n          if (value < 0) {\n            newValue += inputShape[axes[index]];\n          }\n          if (steps[index] < 0) {\n            return Math.max(0, Math.min(newValue, inputShape[axes[index]] - 1));\n          } else {\n            return Math.max(0, Math.min(newValue, inputShape[axes[index]]));\n          }\n        };\n\nconst calculateInputIndicesImpl =\n    (input: IndicesHelper, output: IndicesHelper, inputShape: readonly number[], outputShape: readonly number[]):\n        string => `fn calculateInputIndices(outputIndices: ${output.type.indices}) -> ${input.type.indices} {\n          var inputIndices: ${input.type.indices};\n          var carry = 0u;\n          for (var i = ${inputShape.length}; i >= 0; i--) {\n            var outputIndex = ${outputShape.length === 1 ? 'outputIndices' : 'outputIndices[i]'};\n            var inputIndex = outputIndex * steps[i] + starts[i] + carry;\n            carry = inputIndex / inputShape[i];\n            inputIndex = inputIndex % inputShape[i];\n            if (signs[i] < 0) {\n              inputIndex = inputShape[i] - inputIndex - 1u + starts[i];\n            }\n            ${inputShape.length === 1 ? 'inputIndices' : 'inputIndices[i]'} = inputIndex;\n          }\n          return inputIndices;\n      }`;\n\nconst createSliceProgramInfo = (inputs: readonly TensorView[], attributes: SliceAttributes): ProgramInfo => {\n  const inputShape = inputs[0].dims;\n  const inputSize = ShapeUtil.size(inputShape);\n  const axes = (attributes.axes.length > 0) ? ShapeUtil.normalizeAxes(attributes.axes, inputShape.length) :\n                                              [...Array(inputShape.length).keys()];\n  let steps = readInput(inputs, 4);\n  steps.forEach((step) => step !== 0 || (() => {\n                            throw new Error('step cannot be 0');\n                          }));\n  if (steps.length === 0) {\n    steps = Array(axes.length).fill(1);\n  }\n  const starts = attributes.starts.map((start, i) => fixStartEndValues(start, i, inputShape, axes, steps));\n\n  const ends = attributes.ends.map((end, i) => fixStartEndValues(end, i, inputShape, axes, steps));\n\n  if (axes.length !== inputShape.length) {\n    for (let i = 0; i < inputShape.length; ++i) {\n      if (!axes.includes(i)) {\n        starts.splice(i, 0, 0);\n        ends.splice(i, 0, inputShape[i]);\n        steps.splice(i, 0, 1);\n      }\n    }\n  }\n  const signs = steps.map(step => Math.sign(step));\n  // Convert negative steps to positive steps and reverse starts and ends\n  steps.forEach((step, i, array) => {\n    if (step < 0) {\n      const numSteps = (ends[i] - starts[i]) / step;\n      const newEnd = starts[i];\n      const newStart = newEnd + numSteps * steps[i];\n      starts[i] = newStart;\n      ends[i] = newEnd;\n      array[i] = -step;\n    }\n  });\n\n  const outputShape = inputShape.slice(0);\n  axes.forEach((axis, _) => {\n    outputShape[axis] = Math.ceil((ends[axis] - starts[axis]) / steps[axis]);\n  });\n\n  const outputTensorInfo: TensorInfo = {dims: outputShape, dataType: inputs[0].dataType};\n\n  const output = outputVariable('output', inputs[0].dataType, outputShape);\n  const input = inputVariable('input', inputs[0].dataType, inputShape);\n  const outputSize = ShapeUtil.size(outputShape);\n\n  const getShaderSource = (shaderHelper: ShaderHelper) => `\n      ${shaderHelper.declareVariables(input, output)}\n        const signs = array<i32, ${signs.length}>(${signs.map(i => `${i}i`).join(',')});\n        const starts = array<u32, ${starts.length}>(${starts.map(i => `${i}u`).join(',')});\n        const ends = array<u32, ${ends.length}>(${ends.map(i => `${i}u`).join(',')});\n        const steps = array<u32, ${steps.length}>(${steps.map(i => `${i}u`).join(',')});\n        const inputShape = array<u32, ${inputShape.length}>(${inputShape.map(i => `${i}u`).join(',')});\n\n        ${calculateInputIndicesImpl(input, output, inputShape, outputShape)}\n        ${shaderHelper.mainStart()}\n          ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n          let outputIndices = ${output.offsetToIndices('global_idx')};\n          let inputIndices = calculateInputIndices(outputIndices);\n          ${output.setByOffset('global_idx', input.getByIndices('inputIndices'))}\n      }`;\n  return {\n    name: 'Slice',\n    shaderCache: {hint: `${attributes.cacheKey}|${inputs[4]?.dims ?? ''}`},\n    getShaderSource,\n    getRunData: () => ({\n      outputs: [outputTensorInfo],\n      dispatchGroup: {x: Math.ceil(inputSize / 64 /* workgroup size */)},\n    })\n  };\n};\n\nexport const slice = (context: ComputeContext, attributes: SliceAttributes): void => {\n  validateInputs(context.inputs, attributes);\n  const updatedAttributes = createSliceAttributesFromInputs(context.inputs, attributes);\n  context.compute(createSliceProgramInfo(context.inputs, updatedAttributes), {inputs: [0]});\n  // if (ShapeUtil.size(program.outputs[0].dims) > 0) {\n  //   context.compute(programInfoLoader, {inputs: [0]});\n  // } else {\n  //   // TODO: support empty output\n  //   throw new Error('slice: output size is 0');\n  // }\n};\n\nexport const parseSliceAttributes = (attributes: Record<string, unknown>): SliceAttributes => {\n  const starts = attributes.starts as number[];\n  const ends = attributes.ends as number[];\n  const axes = attributes.axes as number[];\n  return createAttributeWithCacheKey({starts, ends, axes});\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// TODO: this is the same naive implementation we use for reduce that has\n// performance limitations when the reduced axis is long. Need to add\n// a optimized codepath for this.\n\nimport {TensorView} from '../../tensor-view';\nimport {ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, ProgramInfo} from '../types';\n\nimport {ShaderHelper, tensorTypeToWsglStorageType} from './common';\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Softmax op requires 1 input.');\n  }\n};\n\nexport interface SoftmaxAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nconst createSoftmaxProgramInfo = (input: TensorView, attributes: SoftmaxAttributes): ProgramInfo => {\n  const dataType = tensorTypeToWsglStorageType(input.dataType);\n  const shape = input.dims;\n  const outputSize = ShapeUtil.size(shape);\n  const WG = 64;\n  let axis = attributes.axis;\n  if (axis < 0) {\n    axis = shape.length + axis;\n  }\n  if (axis < shape.length - 1) {\n    throw new Error('softmax only supports last axis for now.');\n  }\n\n  const cols = shape[axis];\n  const rows = outputSize / cols;\n\n  // 6.2.4 in wgsl spec\n  const threadMaxDecl = dataType === 'f32' ? 'var threadMax: f32 = -3.402823e+38f;' : 'var threadMax: f16 = -65504.0h;';\n  const getShaderSource = (_shaderHelper: ShaderHelper) => `\n      var<workgroup> rowMaxShared : ${dataType};\n      var<workgroup> rowSumShared : ${dataType};\n      var<workgroup> threadShared : array<${dataType}, ${WG}>;\n\n      @group(0) @binding(0) var<storage, read> x : array<${dataType}>;\n      @group(0) @binding(1) var<storage, read_write> result : array<${dataType}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${dataType} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${dataType}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n\n      @compute @workgroup_size(${WG}, 1, 1)\n      fn main(@builtin(local_invocation_id) local_id : vec3<u32>, @builtin(global_invocation_id) global_id : vec3u) {\n        let gindex = i32(global_id.x);\n        let lindex = i32(local_id.x);\n        const wg = ${WG};\n        let row = gindex / wg;\n        let cols = ${cols};\n        let row_stride : i32 = ${cols};\n\n        // find the rows max\n        ${threadMaxDecl}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = threadShared[0];\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum: ${dataType} = 0.0;\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = threadShared[0];\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`;\n  return {\n    name: 'Softmax',\n    getRunData: () => ({outputs: [{dims: shape, dataType: input.dataType}], dispatchGroup: {x: rows}}),\n    getShaderSource,\n  };\n};\n\n\nexport const softmax = (context: ComputeContext, attributes: SoftmaxAttributes): void => {\n  validateInputs(context.inputs);\n  context.compute(createSoftmaxProgramInfo(context.inputs[0], attributes));\n};\n\nexport const parseSoftmaxAttributes = (attributes: Record<string, unknown>): SoftmaxAttributes =>\n    createAttributeWithCacheKey({axis: attributes.axis as number});\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor-view';\nimport {ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, ProgramInfo, TensorInfo} from '../types';\n\nimport {IndicesHelper, inputVariable, outputVariable, ShaderHelper} from './common';\n\nexport interface SplitAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n  readonly numOutputs: number;\n  readonly splitSizes: number[];\n}\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length < 1) {\n    throw new Error('too few inputs');\n  }\n};\n\nconst createSplitAttributesFromInputs =\n    (inputs: readonly TensorView[], attributes: SplitAttributes): SplitAttributes => {\n      const splitSizes: number[] = [];\n      let numOutputs: number = attributes.numOutputs;\n      if (inputs[1].dims[0] > 0) {\n        inputs[1].getBigInt64Array().forEach(v => splitSizes.push(Number(v)));\n        numOutputs = splitSizes.length;\n      }\n      return createAttributeWithCacheKey({numOutputs, axis: attributes.axis, splitSizes});\n    };\n\nconst calculateOutputIndexImpl = (numberOfTensors: number): string => `\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${numberOfTensors}u; i += 1u ) {\n    if (index < sizeInConcatAxis[i]) {\n        return i;\n    }\n    }\n    return ${numberOfTensors}u;\n}`;\nconst writeBufferDataImpl = (outputs: readonly IndicesHelper[]) => {\n  const numberOfTensors = outputs.length;\n  const codeLines: string[] = [];\n  for (let i = 0; i < numberOfTensors; ++i) {\n    const returnSnippet = outputs[i].setByIndices('indices', 'input[global_idx]');\n    if (numberOfTensors === 1) {\n      codeLines.push(returnSnippet);\n    } else if (i === 0) {\n      codeLines.push(`if (outputNumber == ${i}u) { ${returnSnippet} }`);\n    } else if (i === numberOfTensors - 1) {\n      codeLines.push(`else { ${returnSnippet} }`);\n    } else {\n      codeLines.push(`else if (outputNumber == ${i}) { ${returnSnippet} }`);\n    }\n  }\n  return `\n      fn writeBufferData(outputNumber: u32, indices: ${outputs[0].type.indices}, global_idx: u32) {\n        ${codeLines.join('\\n')}\n      }`;\n};\n\nconst createSplitProgramInfo = (inputs: readonly TensorView[], attributes: SplitAttributes): ProgramInfo => {\n  const inputShape = inputs[0].dims;\n  const inputSize = ShapeUtil.size(inputShape);\n  const dataType = inputs[0].dataType;\n  const rank = inputShape.length;\n  const axis = attributes.axis;\n  const adjustedAxis = (axis < 0) ? inputShape.length + axis : axis;\n  const outputs = new Array<IndicesHelper>(attributes.numOutputs);\n  const input = inputVariable('input', dataType, inputShape);\n  const sizeInConcatAxis = new Array<number>(attributes.numOutputs);\n  const outputsTensorInfo: TensorInfo[] = [];\n  const outputShapes: number[][] = [];\n  let previousSum = 0;\n  for (let i = 0; i < attributes.numOutputs; i++) {\n    previousSum += attributes.splitSizes[i];\n    sizeInConcatAxis[i] = previousSum;\n    const outputShape = inputShape.slice();\n    outputShape[attributes.axis] = attributes.splitSizes[i];\n    outputShapes.push(outputShape);\n    outputs[i] = outputVariable(`output${i}`, dataType, outputShapes[i]);\n    outputsTensorInfo.push({dims: outputShapes[i], dataType: inputs[0].dataType});\n  }\n  const indicesAxis = rank < 2 ? 'indices' : `indices[${adjustedAxis}]`;\n  const getShaderSource = (shaderHelper: ShaderHelper) => `\n  ${shaderHelper.declareVariables(input, ...outputs)}\n  const sizeInConcatAxis = array<u32, ${sizeInConcatAxis.length}>(${sizeInConcatAxis.map(i => `${i}u`).join(',')});\n  ${calculateOutputIndexImpl(sizeInConcatAxis.length)}\n  ${writeBufferDataImpl(outputs)}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(inputSize)}\n\n    var indices = ${input.offsetToIndices('global_idx')};\n    let outputNumber = calculateOutputIndex(${indicesAxis});\n    if (outputNumber != 0) {\n        ${indicesAxis} -= sizeInConcatAxis[outputNumber - 1u];\n    }\n    writeBufferData(outputNumber, indices, global_idx);\n  }`;\n  return {\n    name: 'Split',\n    shaderCache: {hint: attributes.cacheKey},\n    getShaderSource,\n    getRunData: () => ({\n      outputs: outputsTensorInfo,\n      dispatchGroup: {x: Math.ceil(inputSize / 64 /* workgroup size */)},\n    })\n  };\n};\n\nexport const split = (context: ComputeContext, attributes: SplitAttributes): void => {\n  validateInputs(context.inputs);\n  const updatedAttributes =\n      context.inputs.length === 1 ? attributes : createSplitAttributesFromInputs(context.inputs, attributes);\n  context.compute(createSplitProgramInfo(context.inputs, updatedAttributes), {inputs: [0]});\n};\n\nexport const parseSplitAttributes = (attributes: Record<string, unknown>): SplitAttributes => {\n  const axis = attributes.axis as number;\n  const splitSizes: number[] = attributes.splitSizes as number[];\n  const numOutputs = attributes.numOutputs as number < 0 ? splitSizes.length : attributes.numOutputs as number;\n  if (numOutputs !== splitSizes.length) {\n    throw new Error('numOutputs and splitSizes lengh must be equal');\n  }\n  return createAttributeWithCacheKey({axis, numOutputs, splitSizes});\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor-view';\nimport {ShapeUtil} from '../../util';\nimport {ComputeContext, ProgramInfo} from '../types';\n\nimport {inputVariable, outputVariable, ShaderHelper} from './common';\n\nconst getRepeats = (repeatsTensorView: TensorView): readonly number[] =>\n    Array.from(repeatsTensorView.getBigInt64Array(), Number);\n\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Tile requires 2 inputs.');\n  }\n\n  if (inputs[0].dataType !== DataType.float && inputs[0].dataType !== DataType.int32 &&\n      inputs[0].dataType !== DataType.uint32) {\n    throw new Error('Tile only support float, int32, and uint32 data types');\n  }\n\n  if (inputs[1].dataType !== DataType.int64) {\n    throw new Error('Tile `repeats` input should be of int64 data type');\n  }\n\n  if (inputs[1].dims.length !== 1) {\n    throw new Error('Tile `repeats` input should be 1-D');\n  }\n\n  const repeats: readonly number[] = getRepeats(inputs[1]);\n\n  if (repeats.length !== inputs[0].dims.length) {\n    throw new Error('Tile `repeats` input should have same number of elements as rank of input data tensor');\n  }\n};\n\nconst getOutputShape = (inputShape: readonly number[], repeats: readonly number[]): readonly number[] => {\n  const outputShape: number[] = [];\n\n  for (let i = 0; i < inputShape.length; ++i) {\n    outputShape.push(inputShape[i] * repeats[i]);\n  }\n\n  return outputShape;\n};\n\nexport const createTileProgramInfo = (inputs: readonly TensorView[]): ProgramInfo => {\n  const inputShape = inputs[0].dims;\n  const repeats: readonly number[] = getRepeats(inputs[1]);\n  const outputShape = getOutputShape(inputShape, repeats);\n  const outputSize = ShapeUtil.size(outputShape);\n\n  const dataType = inputs[0].dataType;\n  const input = inputVariable('input', dataType, inputShape);\n  const output = outputVariable('output', dataType, outputShape);\n\n  const getShaderSource = (shaderHelper: ShaderHelper) => `\n      const inputShape = ${input.indices(...inputShape)};\n      ${shaderHelper.declareVariables(input, output)}\n      ${shaderHelper.mainStart()}\n      ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n      let outputIndices = ${output.offsetToIndices('global_idx')};\n      var inputIndices: ${input.type.indices};\n      for (var i = 0; i < ${inputShape.length}; i++) {\n        let inputDimValue = ${output.indicesGet('outputIndices', 'i')}  % ${input.indicesGet('inputShape', 'i')};\n\n        ${input.indicesSet('inputIndices', 'i', 'inputDimValue')}\n      }\n      ${output.setByOffset('global_idx', input.getByIndices('inputIndices'))}\n    }`;\n\n  return {\n    name: 'Tile',\n    shaderCache: {hint: `${repeats}`},\n    getRunData: () => ({\n      outputs: [{dims: outputShape, dataType: inputs[0].dataType}],\n      dispatchGroup: {x: Math.ceil(outputSize / 64 /* workgroup size */)},\n    }),\n    getShaderSource,\n  };\n};\n\nexport const tile = (context: ComputeContext): void => {\n  validateInputs(context.inputs);\n  context.compute(createTileProgramInfo(context.inputs), {inputs: [0]});\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor-view';\nimport {BroadcastUtil, ShapeUtil} from '../../util';\nimport {ComputeContext, ProgramInfo} from '../types';\n\nimport {inputVariable, outputVariable, ShaderHelper} from './common';\n\nconst createWhereOpProgramShader =\n    (shaderHelper: ShaderHelper, inputs: readonly TensorView[], dimsOutput: readonly number[], isBroadcast: boolean,\n     typeOutput: number) => {\n      const outputSize = ShapeUtil.size(dimsOutput);\n      const vecSize = Math.ceil(outputSize / 4);\n\n      const output = outputVariable('outputData', typeOutput, dimsOutput, 4);\n      const a = inputVariable('aData', inputs[1].dataType, inputs[1].dims, 4);\n      const b = inputVariable('bData', inputs[2].dataType, inputs[2].dims, 4);\n      const c = inputVariable('cData', inputs[0].dataType, inputs[0].dims, 4);\n\n      let assignment: string;\n      const expression = (a: string, b: string, c: string) => `select(${b}, ${a}, ${c})`;\n      if (!isBroadcast) {\n        assignment = output.setByOffset(\n            'global_idx',\n            expression(a.getByOffset('global_idx'), b.getByOffset('global_idx'), c.getByOffset('global_idx')));\n      } else {\n        const singleAssignment = (resStr: string, x: number, typeCast = '') => {\n          const expressionA = `aData[indexA${x}][componentA${x}]`;\n          const expressionB = `bData[indexB${x}][componentB${x}]`;\n          // eslint-disable-next-line no-bitwise\n          const expressionC = `bool(cData[indexC${x}] & ${0xff000000 >>> ((3 - x) * 8)}u)`;\n          return `\n            let outputIndices${x} = ${output.offsetToIndices(`global_idx * 4u + ${x}u`)};\n            let offsetA${x} = ${a.broadcastedIndicesToOffset(`outputIndices${x}`, output)};\n            let offsetB${x} = ${b.broadcastedIndicesToOffset(`outputIndices${x}`, output)};\n            let offsetC${x} = ${c.broadcastedIndicesToOffset(`outputIndices${x}`, output)};\n            let indexA${x} = offsetA${x} / 4u;\n            let indexB${x} = offsetB${x} / 4u;\n            let indexC${x} = offsetC${x} / 4u;\n            let componentA${x} = offsetA${x} % 4u;\n            let componentB${x} = offsetB${x} % 4u;\n            ${resStr}[${x}] = ${typeCast}(${expression(expressionA, expressionB, expressionC)});\n          `;\n        };\n        if (typeOutput === DataType.bool) {\n          assignment = `\n            var data = vec4<u32>(0);\n            ${singleAssignment('data', 0, 'u32')}\n            ${singleAssignment('data', 1, 'u32')}\n            ${singleAssignment('data', 2, 'u32')}\n            ${singleAssignment('data', 3, 'u32')}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`;\n        } else {\n          assignment = `\n            ${singleAssignment('outputData[global_idx]', 0)}\n            ${singleAssignment('outputData[global_idx]', 1)}\n            ${singleAssignment('outputData[global_idx]', 2)}\n            ${singleAssignment('outputData[global_idx]', 3)}\n          `;\n        }\n      }\n\n      return `\n        ${shaderHelper.declareVariables(c, a, b, output)}\n        ${shaderHelper.mainStart()}\n        ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(vecSize)}\n        ${assignment}\n      }`;\n    };\n\nconst createWhereOpProgramInfo = (inputs: readonly TensorView[]): ProgramInfo => {\n  const dimsA = inputs[1].dims;\n  const dimsB = inputs[2].dims;\n  const dimsC = inputs[0].dims;\n  const outputDataType = inputs[1].dataType;\n\n  const isBroadcast = !(ShapeUtil.areEqual(dimsA, dimsB) && ShapeUtil.areEqual(dimsB, dimsC));\n  let outputShape = dimsA;\n  let outputSize = ShapeUtil.size(dimsA);\n  // TODO: deal with zero-sized tensors (eg. dims=[1,0])\n\n  if (isBroadcast) {\n    const calculatedShape = BroadcastUtil.calcShape(BroadcastUtil.calcShape(dimsA, dimsB, false)!, dimsC, false);\n    if (!calculatedShape) {\n      throw new Error('Can\\'t perform where op on the given tensors');\n    }\n    outputShape = calculatedShape;\n    outputSize = ShapeUtil.size(outputShape);\n  }\n\n  return {\n    name: 'Where',\n    getShaderSource: (shaderHelper) =>\n        createWhereOpProgramShader(shaderHelper, inputs, outputShape, isBroadcast, outputDataType),\n    getRunData: () => ({\n      outputs: [{dims: outputShape, dataType: outputDataType}],\n      dispatchGroup: {x: Math.ceil(outputSize / 64 /* workgroup size */ / 4 /* vec size */)}\n    }),\n  };\n};\n\nexport const where = (context: ComputeContext): void => {\n  context.compute(createWhereOpProgramInfo(context.inputs));\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {argMax, argMin, parseArgMinMaxAttributes} from './ops/argminmax';\nimport {biasAdd} from './ops/bias-add';\nimport {biasSplitGelu} from './ops/bias-split-gelu';\nimport * as binaryOps from './ops/binary-op';\nimport {concat, parseConcatAttributes} from './ops/concat';\nimport {conv, parseConvAttributes} from './ops/conv';\nimport {convTranspose, parseConvTransposeAttributes} from './ops/conv-transpose';\nimport {einsum, parseEinsumAttributes} from './ops/einsum';\nimport {expand} from './ops/expand';\nimport {gather, parseGatherAttributes} from './ops/gather';\nimport {gatherElements, parseGatherElementsAttributes} from './ops/gather-elements';\nimport {gemm, parseGemmAttributes} from './ops/gemm';\nimport {instanceNorm, parseInstanceNormAttributes} from './ops/instance-norm';\nimport {layerNorm, parseLayerNormAttributes} from './ops/layer-norm';\nimport {matMul} from './ops/matmul';\nimport {pad, parsePadAttributes} from './ops/pad';\nimport * as pool from './ops/pool';\nimport {range} from './ops/range';\nimport {parseReduceAttributes, reduceL1, reduceL2, reduceLogSum, reduceLogSumExp, reduceMax, reduceMean, reduceMin, reduceProd, reduceSum, reduceSumSquare} from './ops/reduce';\nimport {parseResizeAttributes, resize} from './ops/resize';\nimport {parseSkipLayerNormAttributes, skipLayerNorm} from './ops/skip-layer-norm';\nimport {parseSliceAttributes, slice} from './ops/slice';\nimport {parseSoftmaxAttributes, softmax} from './ops/softmax';\nimport {parseSplitAttributes, split} from './ops/split';\nimport {tile} from './ops/tile';\nimport {parseTransposeAttributes, transpose} from './ops/transpose';\nimport * as unaryOps from './ops/unary-op';\nimport {where} from './ops/where';\nimport {ComputeContext} from './types';\n\nexport type RunFunction = (context: ComputeContext, attribute?: unknown) => void;\nexport type ParseAttributeFunction = (attributeRaw: unknown) => unknown;\nexport type OperatorImplementation = [RunFunction]|[RunFunction, ParseAttributeFunction];\n\nexport const WEBGPU_OP_RESOLVE_RULES: Map<string, OperatorImplementation> = new Map([\n  ['Abs', [unaryOps.abs]],\n  ['Acos', [unaryOps.acos]],\n  ['Acosh', [unaryOps.acosh]],\n  ['Add', [binaryOps.add]],\n  ['ArgMax', [argMax, parseArgMinMaxAttributes]],\n  ['ArgMin', [argMin, parseArgMinMaxAttributes]],\n  ['Asin', [unaryOps.asin]],\n  ['Asinh', [unaryOps.asinh]],\n  ['Atan', [unaryOps.atan]],\n  ['Atanh', [unaryOps.atanh]],\n  // TODO: support new attributes for AveragePool-10\n  ['AveragePool', [pool.averagePool, pool.parseAveragePoolAttributes]],\n  ['BiasAdd', [biasAdd]],\n  ['BiasSplitGelu', [biasSplitGelu]],\n  ['Cast', [unaryOps.cast, unaryOps.parseCastAttributes]],\n  ['Ceil', [unaryOps.ceil]],\n  ['ClipV10', [unaryOps.clipV10]],\n  ['Clip', [unaryOps.clip]],\n  ['Concat', [concat, parseConcatAttributes]],\n  ['Conv', [conv, parseConvAttributes]],\n  ['ConvTranspose', [convTranspose, parseConvTransposeAttributes]],\n  ['Cos', [unaryOps.cos]],\n  ['Cosh', [unaryOps.cosh]],\n  ['Div', [binaryOps.div]],\n  ['Einsum', [einsum, parseEinsumAttributes]],\n  ['Elu', [unaryOps.elu, unaryOps.parseAlphaAttributes]],\n  ['Equal', [binaryOps.equal]],\n  ['Erf', [unaryOps.erf]],\n  ['Exp', [unaryOps.exp]],\n  ['Expand', [expand]],\n  ['Floor', [unaryOps.floor]],\n  ['Gather', [gather, parseGatherAttributes]],\n  ['GatherElements', [gatherElements, parseGatherElementsAttributes]],\n  ['Gelu', [unaryOps.gelu]],\n  ['Gemm', [gemm, parseGemmAttributes]],\n  ['GlobalAveragePool', [pool.globalAveragePool, pool.parseGlobalAveragePoolAttributes]],\n  ['GlobalMaxPool', [pool.globalMaxPool, pool.parseGlobalMaxPoolAttributes]],\n  ['Greater', [binaryOps.greater]],\n  ['GreaterOrEqual', [binaryOps.greaterOrEqual]],\n  ['InstanceNormalization', [instanceNorm, parseInstanceNormAttributes]],\n  ['LayerNormalization', [layerNorm, parseLayerNormAttributes]],\n  ['LeakyRelu', [unaryOps.leakyRelu, unaryOps.parseAlphaAttributes]],\n  ['Less', [binaryOps.less]],\n  ['LessOrEqual', [binaryOps.lessOrEqual]],\n  ['Log', [unaryOps.log]],\n  ['MatMul', [matMul]],\n  // TODO: support new attributes for MaxPool-8 and MaxPool-10\n  ['MaxPool', [pool.maxPool, pool.parseMaxPoolAttributes]],\n  ['Mul', [binaryOps.mul]],\n  ['Neg', [unaryOps.neg]],\n  ['Not', [unaryOps.not]],\n  ['Pad', [pad, parsePadAttributes]],\n  ['Pow', [binaryOps.pow]],\n  ['Range', [range]],\n  ['Reciprocal', [unaryOps.reciprocal]],\n  ['ReduceMin', [reduceMin, parseReduceAttributes]],\n  ['ReduceMean', [reduceMean, parseReduceAttributes]],\n  ['ReduceMax', [reduceMax, parseReduceAttributes]],\n  ['ReduceSum', [reduceSum, parseReduceAttributes]],\n  ['ReduceProd', [reduceProd, parseReduceAttributes]],\n  ['ReduceL1', [reduceL1, parseReduceAttributes]],\n  ['ReduceL2', [reduceL2, parseReduceAttributes]],\n  ['ReduceLogSum', [reduceLogSum, parseReduceAttributes]],\n  ['ReduceLogSumExp', [reduceLogSumExp, parseReduceAttributes]],\n  ['ReduceSumSquare', [reduceSumSquare, parseReduceAttributes]],\n  ['Relu', [unaryOps.relu]],\n  ['Resize', [resize, parseResizeAttributes]],\n  ['Sigmoid', [unaryOps.sigmoid]],\n  ['Sin', [unaryOps.sin]],\n  ['Sinh', [unaryOps.sinh]],\n  ['Slice', [slice, parseSliceAttributes]],\n  ['SkipLayerNormalization', [skipLayerNorm, parseSkipLayerNormAttributes]],\n  ['Split', [split, parseSplitAttributes]],\n  ['Sqrt', [unaryOps.sqrt]],\n  ['Softmax', [softmax, parseSoftmaxAttributes]],\n  ['Sub', [binaryOps.sub]],\n  ['Tan', [unaryOps.tan]],\n  ['Tanh', [unaryOps.tanh]],\n  ['ThresholdedRelu', [unaryOps.thresholdedRelu, unaryOps.parseAlphaAttributes]],\n  ['Tile', [tile]],\n  ['Transpose', [transpose, parseTransposeAttributes]],\n  ['Where', [where]],\n]);\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {tensorDataTypeEnumToString} from '../../wasm-common';\nimport {WebGpuBackend} from '../backend-webgpu';\nimport {LOG_DEBUG} from '../log';\nimport {TensorView} from '../tensor-view';\n\nimport {createShaderHelper} from './ops/common';\nimport {Artifact, GpuData, ProgramInfo} from './types';\n\n/**\n * ProgramManager is the main class behind running computations\n * It builds ProgramInfo's into Artifacts\n * It compiles given ProgramInfo's into WebGL Prorams (cached as Artifacts)\n * Uses the artifact to run the computation by calling Draw on\n * the WebGL drawing buffer\n * ProgramManager automatically maps (binds) input variables to their\n * corresponding Location's in the binary program\n */\nexport class ProgramManager {\n  repo: Map<unknown, Artifact>;  // this should be per-session object\n  attributesBound: boolean;\n\n  constructor(private backend: WebGpuBackend) {\n    this.repo = new Map();\n    this.attributesBound = false;\n  }\n  getArtifact(key: unknown): Artifact|undefined {\n    return this.repo.get(key);\n  }\n  setArtifact(key: unknown, artifact: Artifact): void {\n    this.repo.set(key, artifact);\n  }\n  run(buildArtifact: Artifact, inputTensorViews: readonly TensorView[], outputTensorViews: readonly TensorView[],\n      inputs: GpuData[], outputs: GpuData[], dispatchGroup: [number, number, number],\n      uniformBufferBinding: GPUBindingResource|undefined): void {\n    const device = this.backend.device;\n\n    const computePassEncoder = this.backend.getComputePassEncoder();\n    const profilingEnabled = this.backend.supportTimestampQuery && this.backend.env.webgpu.profilingMode === 'default';\n    if (profilingEnabled) {\n      // profiling write start timestamp\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (computePassEncoder as any).writeTimestamp(this.backend.profilingQuerySet, 0);\n    }\n\n    computePassEncoder.setPipeline(buildArtifact.computePipeline);\n    const entries = [];\n    for (const input of inputs) {\n      entries.push({binding: entries.length, resource: {buffer: input.buffer}});\n    }\n    for (const output of outputs) {\n      entries.push({binding: entries.length, resource: {buffer: output.buffer}});\n    }\n    if (uniformBufferBinding) {\n      entries.push({binding: entries.length, resource: uniformBufferBinding});\n    }\n    const bindGroup = device.createBindGroup(\n        {layout: buildArtifact.computePipeline.getBindGroupLayout(0), entries, label: buildArtifact.programInfo.name});\n    computePassEncoder.setBindGroup(0, bindGroup);\n\n    computePassEncoder.dispatchWorkgroups(...dispatchGroup);\n\n    this.backend.pendingDispatchNumber++;\n\n    if (profilingEnabled) {\n      // profiling write end timestamp\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (computePassEncoder as any).writeTimestamp(this.backend.profilingQuerySet, 1);\n      if (this.backend.profilingQueryData == null) {\n        this.backend.profilingQueryData =\n            // eslint-disable-next-line no-bitwise\n            this.backend.gpuDataManager.create(16, GPUBufferUsage.COPY_SRC | GPUBufferUsage.QUERY_RESOLVE);\n      }\n      // eslint-disable-next-line no-bitwise\n      const syncData = this.backend.gpuDataManager.create(16, GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST);\n\n      this.backend.endComputePass();\n      this.backend.getCommandEncoder().resolveQuerySet(\n          this.backend.profilingQuerySet, 0, 2, this.backend.profilingQueryData.buffer, 0);\n      this.backend.getCommandEncoder().copyBufferToBuffer(\n          this.backend.profilingQueryData.buffer, 0, syncData.buffer, 0, 16);\n      this.backend.flush();\n\n      const kernelId = this.backend.currentKernelId!;\n      const kernelInfo = this.backend.kernels.get(kernelId)!;\n      const kernelName = `[${kernelInfo[0]}] ${kernelInfo[1]}`;\n\n      syncData.buffer.mapAsync(GPUMapMode.READ).then(() => {\n        const mappedData = new BigUint64Array(syncData.buffer.getMappedRange());\n        const startTimeU64 = mappedData[0];\n        const endTimeU64 = mappedData[1];\n\n        syncData.buffer.unmap();\n\n        if (typeof this.backend.profilingTimeBase === 'undefined') {\n          this.backend.profilingTimeBase = startTimeU64;\n        }\n\n        const startTime = Number(startTimeU64 - this.backend.profilingTimeBase);\n        const endTime = Number(endTimeU64 - this.backend.profilingTimeBase);\n\n        if (!Number.isSafeInteger(startTime) || !Number.isSafeInteger(endTime)) {\n          throw new RangeError('incorrect timestamp range');\n        }\n\n        this.backend.gpuDataManager.release(syncData.id);\n        let inputShapes = '';\n        inputTensorViews.forEach((value, i) => {\n          inputShapes += `input[${i}]: [${value.dims}] | ${tensorDataTypeEnumToString(value.dataType)}, `;\n        });\n        let outputShapes = '';\n        outputTensorViews.forEach((value, i) => {\n          outputShapes += `output[${i}]: [${value.dims}] | ${tensorDataTypeEnumToString(value.dataType)}, `;\n        });\n        // eslint-disable-next-line no-console\n        console.log(`[profiling] kernel \"${kernelId}|${kernelName}\" ${inputShapes}${outputShapes}execution time: ${\n            endTime - startTime} ns`);\n      });\n    }\n\n    if (this.backend.pendingDispatchNumber >= 16) {\n      this.backend.flush();\n    }\n  }\n  dispose(): void {\n    // this.repo.forEach(a => this.glContext.deleteProgram(a.program));\n  }\n  build(programInfo: ProgramInfo, normalizedDispatchGroupSize: [number, number, number]): Artifact {\n    const device = this.backend.device;\n    const extensions: string[] = [];\n    if (device.features.has('shader-f16')) {\n      extensions.push('enable f16;');\n    }\n    const shaderHelper = createShaderHelper(normalizedDispatchGroupSize);\n    const userCode = programInfo.getShaderSource(shaderHelper);\n    const code = `${extensions.join('\\n')}\\n${shaderHelper.additionalImplementations}\\n${userCode}`;\n    const shaderModule = device.createShaderModule({code, label: programInfo.name});\n    LOG_DEBUG('verbose', () => `[WebGPU] shader code: ${code}`);\n\n    const computePipeline = device.createComputePipeline(\n        {compute: {module: shaderModule, entryPoint: 'main'}, layout: 'auto', label: programInfo.name});\n\n    return {programInfo, computePipeline};\n  }\n\n  normalizeDispatchGroupSize(dispatchGroup: ReturnType<ProgramInfo['getRunData']>['dispatchGroup']):\n      [number, number, number] {\n    const x = typeof dispatchGroup === 'number' ? dispatchGroup : dispatchGroup.x;\n    const y = typeof dispatchGroup === 'number' ? 1 : (dispatchGroup.y || 1);\n    const z = typeof dispatchGroup === 'number' ? 1 : (dispatchGroup.z || 1);\n    const limitPerDimension = this.backend.device.limits.maxComputeWorkgroupsPerDimension;\n    if (x <= limitPerDimension && y <= limitPerDimension && z <= limitPerDimension) {\n      return [x, y, z];\n    }\n    const size = x * y * z;\n    let dispatchAverage = Math.ceil(Math.sqrt(size));\n    if (dispatchAverage > limitPerDimension) {\n      dispatchAverage = Math.ceil(Math.cbrt(size));\n      if (dispatchAverage > limitPerDimension) {\n        throw new Error('Total dispatch size exceeds WebGPU maximum.');\n      }\n      return [dispatchAverage, dispatchAverage, dispatchAverage];\n    } else {\n      return [dispatchAverage, dispatchAverage, 1];\n    }\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env, Tensor} from 'onnxruntime-common';\n\nimport {configureLogger, LOG_DEBUG} from './log';\nimport {createView, TensorView} from './tensor-view';\nimport {createGpuDataManager, downloadGpuData, GpuDataManager} from './webgpu/gpu-data-manager';\nimport {RunFunction, WEBGPU_OP_RESOLVE_RULES} from './webgpu/op-resolve-rules';\nimport {ProgramManager} from './webgpu/program-manager';\nimport {ComputeContext, GpuData, ProgramInfo, ProgramInputTensorInfoDependency} from './webgpu/types';\n\nconst getProgramInputTensorInfoDependencyKey =\n    (inputTensors: readonly TensorView[], inputDependencies: readonly ProgramInputTensorInfoDependency[]): string => {\n      if (inputDependencies.length !== inputTensors.length) {\n        throw new Error(`inputDependencies length ${inputDependencies.length} is not equal to inputTensors length ${\n            inputTensors.length}.`);\n      }\n\n      const inputInfos: string[] = [];\n      for (let i = 0; i < inputTensors.length; ++i) {\n        const type = inputTensors[i].dataType;\n        switch (inputDependencies[i]) {\n          case 'none': {\n            inputInfos.push('');\n            break;\n          }\n          case 'type': {\n            inputInfos.push(`${type}`);\n            break;\n          }\n          case 'rank': {\n            const rank = inputTensors[i].dims.length;\n            inputInfos.push(`${type};${rank}`);\n            break;\n          }\n          case 'dims': {\n            const dims = inputTensors[i].dims.join(',');\n            inputInfos.push(`${type};${dims}`);\n            break;\n          }\n          default:\n            throw new Error(`unsupported input dependency: ${inputDependencies[i]}`);\n        }\n      }\n\n      return inputInfos.join('|');\n    };\n\n/**\n * get a unique key representing the program from the program info, input shapes and types.\n *\n * @returns a unique key is a shorter string than the shader source, which contains all the information to identify a\n * program. if the key is the same, the program shader source should be the same, so we can reuse the program.\n *\n */\nconst getProgramInfoUniqueKey = (programInfo: ProgramInfo, inputTensors: readonly TensorView[]): string => {\n  // final key format:\n  // <PROGRAM_NAME>[<PROGRAM_CUSTOM_CACHE_HINT>]:<INPUTS_INFO_0>|<INPUTS_INFO_1>|...\n  let key = programInfo.name;\n  if (programInfo.shaderCache?.hint) {\n    key += '[' + programInfo.shaderCache.hint + ']';\n  }\n  key += `:${\n      getProgramInputTensorInfoDependencyKey(\n          inputTensors,\n          programInfo.shaderCache?.inputDependencies ??\n              new Array<ProgramInputTensorInfoDependency>(inputTensors.length).fill('dims'))}`;\n  return key;\n};\n\n/**\n * this class is designed to store status and being used as a singleton for JSEP. It will be passed to jsepInit() as\n * the first parameter so that it is stored for future use.\n */\nexport class WebGpuBackend {\n  device: GPUDevice;\n  /**\n   * an instance of GpuDataManager to manage a GpuDataId -> GpuBuffer mapping\n   */\n  gpuDataManager: GpuDataManager;\n  /**\n   * an instance of ProgramManager to build and run WebGPU compute shader program, and manage a ProgramKey -> Program\n   * artifacts mapping\n   */\n  programManager: ProgramManager;\n\n  /**\n   * representing the kernel ID of which is currently being computed (CPU code perspective).\n   * `null` means no kernel is being computed.\n   * only one kernel can be computed at a moment.\n   */\n  currentKernelId: number|null = null;\n  /**\n   * a list of temporary GPU data for the current kernel. should release when the kernel done computation.\n   */\n  private temporaryData: GpuData[];\n  /**\n   * a KernelID -> a GPU data list, which stores persistent GPU data owned by the specific kernel.\n   */\n  private kernelPersistentData: Map<number, GpuData[]>;\n  /**\n   * a KernelID -> a custom data, which stores custom data owned by the specific kernel.\n   */\n  private kernelCustomData: Map<number, {[key: string]: unknown}>;\n  /**\n   * get the custom data of the current kernel\n   */\n  get currentKernelCustomData(): {[key: string]: unknown} {\n    if (this.currentKernelId === null) {\n      throw new Error('currentKernelCustomData(): currentKernelId is null. (should not happen)');\n    }\n\n    let data = this.kernelCustomData.get(this.currentKernelId);\n    if (!data) {\n      data = {};\n      this.kernelCustomData.set(this.currentKernelId, data);\n    }\n\n    return data;\n  }\n\n  /**\n   * a KernelID -> kernel info mapping. value is\n   * [ op_type, name, run function, [optional] preprocess_attribute_once function ]\n   */\n  kernels: Map<number, [string, string, RunFunction, [((attribute: unknown) => unknown) | undefined, unknown]]>;\n\n  commandEncoder: GPUCommandEncoder|null = null;\n  computePassEncoder: GPUComputePassEncoder|null = null;\n  pendingDispatchNumber = 0;\n\n  supportTimestampQuery = false;\n  profilingQuerySet: GPUQuerySet;\n  profilingQueryData: GpuData;\n  profilingTimeBase?: bigint;\n\n  env: Env;\n\n  /**\n   * a SessionID -> a Map of (InputOutputIndex -> [ID, GPUBuffer]) mapping.\n   */\n  sessionExternalDataMapping: Map<number, Map<number, [number, GPUBuffer]>> = new Map();\n\n  async initialize(env: Env): Promise<void> {\n    if (!navigator.gpu) {\n      // WebGPU is not available.\n      throw new Error('WebGpuBackend: WebGPU is not available.');\n    }\n\n    const adapter = await navigator.gpu.requestAdapter();\n    if (!adapter) {\n      throw new Error('WebGpuBackend: Failed to get GPU adapter.');\n    }\n\n    this.env = env;\n    const requiredFeatures: GPUFeatureName[] = [];\n    const deviceDescriptor: GPUDeviceDescriptor = {\n      requiredLimits: {\n        maxComputeWorkgroupStorageSize: adapter.limits.maxComputeWorkgroupStorageSize,\n        maxComputeWorkgroupsPerDimension: adapter.limits.maxComputeWorkgroupsPerDimension,\n        maxStorageBufferBindingSize: adapter.limits.maxStorageBufferBindingSize,\n        maxBufferSize: adapter.limits.maxBufferSize,\n        maxComputeInvocationsPerWorkgroup: adapter.limits.maxComputeInvocationsPerWorkgroup,\n        maxComputeWorkgroupSizeX: adapter.limits.maxComputeWorkgroupSizeX,\n        maxComputeWorkgroupSizeY: adapter.limits.maxComputeWorkgroupSizeY,\n        maxComputeWorkgroupSizeZ: adapter.limits.maxComputeWorkgroupSizeZ,\n      },\n      requiredFeatures,\n    };\n    // WebGPU Spec: Timestamp Queries Inside Passes\n    // https://github.com/gpuweb/gpuweb/blob/main/proposals/timestamp-query-inside-passes.md\n    if (adapter.features.has('timestamp-query-inside-passes')) {\n      this.supportTimestampQuery = true;\n      requiredFeatures.push('timestamp-query-inside-passes' as GPUFeatureName);\n    }\n    if (adapter.features.has('shader-f16')) {\n      requiredFeatures.push('shader-f16');\n    }\n\n    this.device = await adapter.requestDevice(deviceDescriptor);\n    this.gpuDataManager = createGpuDataManager(this);\n    this.programManager = new ProgramManager(this);\n    this.kernels = new Map();\n    this.kernelPersistentData = new Map();\n    this.kernelCustomData = new Map();\n\n    // set up flags for logger\n    configureLogger(env.logLevel!, !!env.debug);\n\n    // TODO: set up flags\n\n    this.device.onuncapturederror = ev => {\n      if (ev.error instanceof GPUValidationError) {\n        // eslint-disable-next-line no-console\n        console.error(`An uncaught WebGPU validation error was raised: ${ev.error.message}`);\n      }\n    };\n\n    if (this.supportTimestampQuery) {\n      this.profilingQuerySet = this.device.createQuerySet({\n        type: 'timestamp',\n        count: 2,\n      });\n    }\n\n    Object.defineProperty(this.env.webgpu, 'device', {value: this.device});\n  }\n\n  dispose(): void {\n    // currently, we do not do anything in this function. In all known use cases, we don't have the requirement to\n    // actually dispose the WebGpuBackend instance, because it's always used as a singleton.\n    //\n    // revisit this place if we get real requirement to dispose the instance.\n  }\n\n  getCommandEncoder(): GPUCommandEncoder {\n    if (!this.commandEncoder) {\n      this.commandEncoder = this.device.createCommandEncoder();\n    }\n    return this.commandEncoder;\n  }\n\n  getComputePassEncoder(): GPUComputePassEncoder {\n    if (!this.computePassEncoder) {\n      this.computePassEncoder = this.getCommandEncoder().beginComputePass();\n    }\n    return this.computePassEncoder;\n  }\n\n  endComputePass(): void {\n    if (this.computePassEncoder) {\n      this.computePassEncoder.end();\n      this.computePassEncoder = null;\n    }\n  }\n\n  flush(): void {\n    if (this.commandEncoder) {\n      this.endComputePass();\n      this.device.queue.submit([this.getCommandEncoder().finish()]);\n      this.gpuDataManager.refreshPendingBuffers();\n      this.commandEncoder = null;\n      this.pendingDispatchNumber = 0;\n    }\n  }\n\n  /**\n   * run a WebGPU program.\n   * @param program a ProgramInfo instance\n   * @param inputTensorViews a TensorView array. each element represents a value already exists in GPU.\n   * @param outputIndices an indices array. each element can be either -1 (temporary data), -2 (persistent data) or an\n   * index to the kernel's output.\n   * @param createKernelOutput a callback function that create a value to kernel's output with the given index\n   * @param createIntermediateOutput a callback function that create a value as a intermediate value, either temporary\n   * or persistent (owned by the current kernel)\n   * @returns a TensorView array representing the result.\n   */\n  run(program: ProgramInfo, inputTensorViews: readonly TensorView[], outputIndices: readonly number[],\n      createKernelOutput: (index: number, dataType: number, dims: readonly number[]) => TensorView,\n      createIntermediateOutput: (dataType: number, dims: readonly number[]) => TensorView): TensorView[] {\n    // create info for inputs\n    const inputDatas: GpuData[] = [];\n    for (let i = 0; i < inputTensorViews.length; ++i) {\n      const gpuData = this.gpuDataManager.get(inputTensorViews[i].data);\n      if (!gpuData) {\n        throw new Error(`no GPU data for input: ${inputTensorViews[i].data}`);\n      }\n      inputDatas[i] = gpuData;\n    }\n\n    // get program info\n    const key = getProgramInfoUniqueKey(program, inputTensorViews);\n    let artifact = this.programManager.getArtifact(key);\n\n    const {outputs, dispatchGroup, programUniforms} = program.getRunData(inputTensorViews);\n\n    // check output indices\n    const validatedOutputIndices = outputIndices.length === 0 ? outputs.map((_, i) => i) : outputIndices;\n    if (validatedOutputIndices.length !== outputs.length) {\n      throw new Error(`Output size ${validatedOutputIndices.length} must be equal to ${outputs.length}.`);\n    }\n\n    // create info for outputs\n    const outputTensorViews: TensorView[] = [];\n    const outputDatas: GpuData[] = [];\n    for (let i = 0; i < outputs.length; ++i) {\n      // value -1 and -2 are used for creating temporary and persistent outputs.\n      // value -3 is used for placeholder output. So -3, -2, -1 and 0, 1, 2, ... are valid\n      // output indices. see type definition of ComputeContextInputsOutputsMapping for more details.\n      if (!Number.isInteger(validatedOutputIndices[i]) || validatedOutputIndices[i] < -3 ||\n          validatedOutputIndices[i] >= outputs.length) {\n        throw new Error(`Invalid output index: ${validatedOutputIndices[i]}`);\n      }\n      if (validatedOutputIndices[i] === -3) {\n        continue;\n      }\n      const isTemporary = validatedOutputIndices[i] === -1;\n      const isPersistent = validatedOutputIndices[i] === -2;\n      const tensorView = (isTemporary || isPersistent) ?\n          createIntermediateOutput(outputs[i].dataType, outputs[i].dims) :\n          createKernelOutput(validatedOutputIndices[i], outputs[i].dataType, outputs[i].dims);\n      const gpuData = this.gpuDataManager.get(tensorView.data);\n      if (!gpuData) {\n        throw new Error(`no GPU data for output: ${tensorView.data}`);\n      }\n      if (isTemporary) {\n        this.temporaryData.push(gpuData);\n      }\n      if (isPersistent) {\n        let persistentData = this.kernelPersistentData.get(this.currentKernelId!);\n        if (!persistentData) {\n          persistentData = [];\n          this.kernelPersistentData.set(this.currentKernelId!, persistentData);\n        }\n        persistentData.push(gpuData);\n      }\n      outputTensorViews.push(tensorView);\n      outputDatas.push(gpuData);\n    }\n\n\n    // load uniforms\n    // TODO: add cache for uniform (is it necessary?)\n    //\n    let uniformBufferBinding: GPUBindingResource|undefined;\n    if (programUniforms) {\n      let currentOffset = 0;\n      let preLength = 0;\n      const offsets: number[] = [];\n      let maxAlignmentOfField = 1;\n      programUniforms.forEach(v => {\n        const data = typeof v.data === 'number' ? [v.data] : v.data;\n        // https://www.w3.org/TR/WGSL/#alignof\n        let baseAlignment: number;\n        switch (data.length) {\n          case 1:\n            baseAlignment = 4;\n            break;\n          case 2:\n            baseAlignment = 8;\n            break;\n          case 3:\n            baseAlignment = 16;\n            break;\n          case 4:\n            baseAlignment = 16;\n            break;\n          case 5:\n            baseAlignment = 16;\n            break;\n          case 6:\n            baseAlignment = 16;\n            break;\n          default:\n            throw new Error(`unsupported data length: ${data.length}`);\n        }\n\n        if (preLength === 5 || preLength === 6) {\n          baseAlignment = 16;\n        }\n        if (baseAlignment > maxAlignmentOfField) {\n          maxAlignmentOfField = baseAlignment;\n        }\n        currentOffset = Math.ceil(currentOffset / baseAlignment) * baseAlignment;\n        preLength = data.length;\n        offsets.push(currentOffset);\n        currentOffset += data.length * 4;\n      });\n\n      currentOffset = Math.ceil(currentOffset / maxAlignmentOfField) * maxAlignmentOfField;\n      const arrayBuffer = new ArrayBuffer(currentOffset);\n      programUniforms.forEach((v, i) => {\n        const offset = offsets[i];\n        const data = typeof v.data === 'number' ? [v.data] : v.data;\n        if (v.type === 'int32') {\n          new Int32Array(arrayBuffer, offset, data.length).set(data);\n        } else if (v.type === 'uint32') {\n          new Uint32Array(arrayBuffer, offset, data.length).set(data);\n        } else {\n          new Float32Array(arrayBuffer, offset, data.length).set(data);\n        }\n      });\n\n      const uniformBufferData =\n          // eslint-disable-next-line no-bitwise\n          this.gpuDataManager.create(currentOffset, GPUBufferUsage.COPY_DST | GPUBufferUsage.UNIFORM);\n      this.device.queue.writeBuffer(uniformBufferData.buffer, 0, arrayBuffer, 0, currentOffset);\n      this.gpuDataManager.release(uniformBufferData.id);\n      uniformBufferBinding = {offset: 0, size: currentOffset, buffer: uniformBufferData.buffer};\n    }\n\n\n    const normalizedDispatchGroup = this.programManager.normalizeDispatchGroupSize(dispatchGroup);\n\n    if (!artifact) {\n      artifact = this.programManager.build(program, normalizedDispatchGroup);\n      this.programManager.setArtifact(key, artifact);\n    }\n\n    LOG_DEBUG(\n        'info',\n        () => `[ProgramManager] run \"${program.name}\" (key=${key}) with ${normalizedDispatchGroup[0]}x${\n            normalizedDispatchGroup[1]}x${normalizedDispatchGroup[2]}`);\n    this.programManager.run(\n        artifact, inputTensorViews, outputTensorViews, inputDatas, outputDatas, normalizedDispatchGroup,\n        uniformBufferBinding);\n\n    return outputTensorViews;\n  }\n\n  upload(gpuDataId: number, data: Uint8Array): void {\n    this.gpuDataManager.upload(gpuDataId, data);\n  }\n\n  memcpy(src: number, dst: number): void {\n    this.gpuDataManager.memcpy(src, dst);\n  }\n\n  async download(gpuDataId: number, getTargetBuffer: () => Uint8Array): Promise<void> {\n    // the underlying buffer may be changed after the async function is called. so we use a getter function to make sure\n    // the buffer is up-to-date.\n    await this.gpuDataManager.download(gpuDataId, getTargetBuffer);\n  }\n\n  alloc(size: number): number {\n    return this.gpuDataManager.create(size).id;\n  }\n\n  free(ptr: number): number {\n    return this.gpuDataManager.release(ptr);\n  }\n\n  createKernel(opType: string, kernelId: number, attribute: unknown, nodeName: string): void {\n    const op = WEBGPU_OP_RESOLVE_RULES.get(opType);\n    if (!op) {\n      throw new Error(`kernel not implemented: ${opType}`);\n    }\n\n    this.kernels.set(kernelId, [opType, nodeName, op[0], [op[1], attribute]]);\n  }\n\n  releaseKernel(kernelId: number): void {\n    const persistentData = this.kernelPersistentData.get(kernelId);\n    if (persistentData) {\n      for (const data of persistentData) {\n        this.gpuDataManager.release(data.id);\n      }\n      this.kernelPersistentData.delete(kernelId);\n    }\n\n    this.kernelCustomData.delete(kernelId);\n    this.kernels.delete(kernelId);\n  }\n\n  computeKernel(kernelId: number, context: ComputeContext, errors: Array<Promise<string|null>>): number {\n    const kernel = this.kernels.get(kernelId);\n    if (!kernel) {\n      throw new Error(`kernel not created: ${kernelId}`);\n    }\n    const [opType, nodeName, kernelEntry, attributes] = kernel;\n    if (this.currentKernelId !== null) {\n      throw new Error(`kernel \"[${opType}] ${nodeName}\" is not allowed to be called recursively`);\n    }\n    this.currentKernelId = kernelId;\n\n    // parse attributes if necessary\n    if (attributes[0]) {\n      attributes[1] = attributes[0](attributes[1]);\n      attributes[0] = undefined;\n    }\n\n    LOG_DEBUG('info', () => `[WebGPU] Start to run kernel \"[${opType}] ${nodeName}\"...`);\n\n    const useErrorScope = this.env.debug;\n\n    this.temporaryData = [];\n    try {\n      if (useErrorScope) {\n        this.device.pushErrorScope('validation');\n      }\n\n      kernelEntry(context, attributes[1]);\n      return 0;  // ORT_OK\n    } catch (e) {\n      errors.push(Promise.resolve(`[WebGPU] Kernel \"[${opType}] ${nodeName}\" failed. ${e}`));\n      return 1;  // ORT_FAIL\n    } finally {\n      if (useErrorScope) {\n        errors.push(this.device.popErrorScope().then(\n            err => err ? `GPU validation error for kernel \"[${opType}] ${nodeName}\": ${err.message}` : null));\n      }\n\n      for (const data of this.temporaryData) {\n        this.gpuDataManager.release(data.id);\n      }\n      this.temporaryData = [];\n      this.currentKernelId = null;\n    }\n  }\n\n  // #region external buffer\n  registerBuffer(sessionId: number, index: number, buffer: GPUBuffer, size: number): number {\n    let sessionInputOutputMapping = this.sessionExternalDataMapping.get(sessionId);\n    if (!sessionInputOutputMapping) {\n      sessionInputOutputMapping = new Map();\n      this.sessionExternalDataMapping.set(sessionId, sessionInputOutputMapping);\n    }\n\n    const previousBuffer = sessionInputOutputMapping.get(index);\n    const id = this.gpuDataManager.registerExternalBuffer(buffer, size, previousBuffer?.[1]);\n    sessionInputOutputMapping.set(index, [id, buffer]);\n    return id;\n  }\n  unregisterBuffers(sessionId: number): void {\n    const sessionInputOutputMapping = this.sessionExternalDataMapping.get(sessionId);\n    if (sessionInputOutputMapping) {\n      sessionInputOutputMapping.forEach(bufferInfo => this.gpuDataManager.unregisterExternalBuffer(bufferInfo[1]));\n      this.sessionExternalDataMapping.delete(sessionId);\n    }\n  }\n  getBuffer(gpuDataId: number): GPUBuffer {\n    const gpuData = this.gpuDataManager.get(gpuDataId);\n    if (!gpuData) {\n      throw new Error(`no GPU data for buffer: ${gpuDataId}`);\n    }\n    return gpuData.buffer;\n  }\n  createDownloader(gpuBuffer: GPUBuffer, size: number, type: Tensor.GpuBufferDataTypes):\n      () => Promise<Tensor.DataType> {\n    return async () => {\n      const data = await downloadGpuData(this, gpuBuffer, size);\n      return createView(data.buffer, type);\n    };\n  }\n  // #endregion\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {OrtWasmModule} from '../binding/ort-wasm';\nimport {DataType, getTensorElementSize} from '../wasm-common';\n\nimport {WebGpuBackend} from './backend-webgpu';\nimport {LOG_DEBUG} from './log';\nimport {TensorView} from './tensor-view';\nimport {ShapeUtil} from './util';\nimport {ComputeContext, ComputeContextInputsOutputsMapping, ProgramInfo} from './webgpu/types';\n\n/* eslint-disable no-bitwise */\n\nclass TensorViewImpl implements TensorView {\n  constructor(\n      private module: OrtWasmModule, public readonly dataType: number, public readonly data: number,\n      public readonly dims: readonly number[]) {}\n\n  getFloat32Array(): Float32Array {\n    if (this.dataType !== DataType.float) {\n      throw new Error('Invalid data type');\n    }\n    const elementCount = ShapeUtil.size(this.dims);\n    return elementCount === 0 ? new Float32Array() :\n                                new Float32Array(this.module.HEAP8.buffer, this.data, elementCount);\n  }\n\n  getBigInt64Array(): BigInt64Array {\n    if (this.dataType !== DataType.int64) {\n      throw new Error('Invalid data type');\n    }\n    const elementCount = ShapeUtil.size(this.dims);\n    return elementCount === 0 ? new BigInt64Array() :\n                                new BigInt64Array(this.module.HEAP8.buffer, this.data, elementCount);\n  }\n\n  getInt32Array(): Int32Array {\n    if (this.dataType !== DataType.int32) {\n      throw new Error('Invalid data type');\n    }\n    const elementCount = ShapeUtil.size(this.dims);\n    return elementCount === 0 ? new Int32Array() : new Int32Array(this.module.HEAP8.buffer, this.data, elementCount);\n  }\n\n  reshape(newDims: readonly number[]): TensorView {\n    if (ShapeUtil.size(newDims) !== ShapeUtil.size(this.dims)) {\n      throw new Error('Invalid new shape');\n    }\n    return new TensorViewImpl(this.module, this.dataType, this.data, newDims);\n  }\n}\n\nclass ComputeContextImpl implements ComputeContext {\n  readonly opKernelContext: number;\n  readonly inputs: readonly TensorView[];\n  readonly outputCount: number;\n  get kernelCustomData(): {[key: string]: unknown} {\n    return this.backend.currentKernelCustomData;\n  }\n  get customDataBuffer(): Uint8Array {\n    return this.module.HEAPU8.subarray(this.customDataOffset, this.customDataOffset + this.customDataSize);\n  }\n  private customDataOffset = 0;\n  private customDataSize = 0;\n  constructor(private module: OrtWasmModule, private backend: WebGpuBackend, contextDataOffset: number) {\n    const heapU32 = module.HEAPU32;\n\n    // extract context data\n    let dataIndex = (contextDataOffset >> 2);\n    this.opKernelContext = heapU32[dataIndex++];\n    const inputCount = heapU32[dataIndex++];\n    this.outputCount = heapU32[dataIndex++];\n    this.customDataOffset = heapU32[dataIndex++];\n    this.customDataSize = heapU32[dataIndex++];\n\n    const inputs: TensorView[] = [];\n    for (let i = 0; i < inputCount; i++) {\n      const dataType = heapU32[dataIndex++];\n      const data = heapU32[dataIndex++];\n      const dim = heapU32[dataIndex++];\n      const dims: number[] = [];\n      for (let d = 0; d < dim; d++) {\n        dims.push(heapU32[dataIndex++]);\n      }\n      inputs.push(new TensorViewImpl(module, dataType, data, dims));\n    }\n    this.inputs = inputs;\n  }\n\n  compute(program: ProgramInfo, inputsOutputsMapping?: ComputeContextInputsOutputsMapping): TensorView[] {\n    // prepare inputs. inputs should always be valid data.\n    const mappedInputs =\n        inputsOutputsMapping?.inputs?.map(i => typeof i === 'number' ? this.inputs[i] : i) ?? this.inputs;\n    // prepare outputs.\n    const outputIndices = inputsOutputsMapping?.outputs ?? [];\n    const createKernelOutput = (index: number, dataType: number, dims: readonly number[]): TensorView =>\n        new TensorViewImpl(this.module, dataType, this.output(index, dims), dims);\n    const createTemporaryOutput = (dataType: number, dims: readonly number[]): TensorView => {\n      const elementSize = getTensorElementSize(dataType);\n      if (!elementSize) {\n        throw new Error(`Unsupported data type: ${dataType}`);\n      }\n      const bufferSize = elementSize * ShapeUtil.size(dims);\n      return new TensorViewImpl(this.module, dataType, this.backend.gpuDataManager.create(bufferSize).id, dims);\n    };\n    return this.backend.run(program, mappedInputs, outputIndices, createKernelOutput, createTemporaryOutput);\n  }\n\n  output(index: number, dims: readonly number[]): number {\n    const stack = this.module.stackSave();\n    try {\n      const data = this.module.stackAlloc((1 + dims.length) * 4 /* sizeof(size_t) */);\n      let offset = data >> 2;\n      this.module.HEAPU32[offset++] = dims.length;\n      for (let i = 0; i < dims.length; i++) {\n        this.module.HEAPU32[offset++] = dims[i];\n      }\n      return this.module._JsepOutput(this.opKernelContext, index, data);\n    } catch (e) {\n      throw new Error(\n          `Failed to generate kernel's output[${index}] with dims [${dims}]. ` +\n          'If you are running with pre-allocated output, please make sure the output type/dims are correct. ' +\n          `Error: ${e}`);\n    } finally {\n      this.module.stackRestore(stack);\n    }\n  }\n}\n\nexport const init = async(module: OrtWasmModule, env: Env): Promise<void> => {\n  const init = module.jsepInit;\n  if (init && navigator.gpu) {\n    if (!env.wasm.simd) {\n      throw new Error(\n          'Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using WebGPU EP');\n    }\n    const backend = new WebGpuBackend();\n    await backend.initialize(env);\n\n    init(\n        // backend\n        backend,\n\n        // jsepAlloc()\n        (size: number) => backend.alloc(size),\n\n        // jsepFree()\n        (ptr: number) => backend.free(ptr),\n\n        // jsepCopy(src, dst, size, isSourceGpu)\n        (src: number, dst: number, size: number, isSourceGpu = false) => {\n          if (isSourceGpu) {\n            LOG_DEBUG('verbose', () => `[WebGPU] jsepCopyGpuToGpu: src=${src}, dst=${dst}, size=${size}`);\n            backend.memcpy(src, dst);\n          } else {\n            LOG_DEBUG('verbose', () => `[WebGPU] jsepCopyCpuToGpu: dataOffset=${src}, gpuDataId=${dst}, size=${size}`);\n            const data = module.HEAPU8.subarray(src, src + size);\n            backend.upload(dst, data);\n          }\n        },\n\n        // jsepCopyAsync(src, dst, size)\n        async(gpuDataId: number, dataOffset: number, size: number):\n            Promise<void> => {\n              LOG_DEBUG(\n                  'verbose',\n                  () => `[WebGPU] jsepCopyGpuToCpu: gpuDataId=${gpuDataId}, dataOffset=${dataOffset}, size=${size}`);\n\n              await backend.download(gpuDataId, () => module.HEAPU8.subarray(dataOffset, dataOffset + size));\n            },\n\n        // jsepCreateKernel\n        (name: string, kernel: number, attribute: unknown) => backend.createKernel(\n            name, kernel, attribute,\n            env.debug || env.webgpu.profilingMode === 'default' ? module.UTF8ToString(module._JsepGetNodeName(kernel)) :\n                                                                  `${kernel}`),\n\n        // jsepReleaseKernel\n        (kernel: number) => backend.releaseKernel(kernel),\n\n        // jsepRun\n        (kernel: number, contextDataOffset: number, sessionHandle: number, errors: Array<Promise<string|null>>) => {\n          LOG_DEBUG(\n              'verbose',\n              () => `[WebGPU] jsepRun: sessionHandle=${sessionHandle}, kernel=${kernel}, contextDataOffset=${\n                  contextDataOffset}`);\n          const context = new ComputeContextImpl(module, backend, contextDataOffset);\n          return backend.computeKernel(kernel, context, errors);\n        });\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env, InferenceSession, Tensor} from 'onnxruntime-common';\n\nimport {SerializableModeldata, SerializableSessionMetadata, SerializableTensorMetadata, TensorMetadata} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {dataLocationStringToEnum, getTensorElementSize, isGpuBufferSupportedType, logLevelStringToEnum, tensorDataTypeEnumToString, tensorDataTypeStringToEnum, tensorTypeToTypedArrayConstructor} from './wasm-common';\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError} from './wasm-utils';\n\n/**\n * get the input/output count of the session.\n * @param sessionHandle the handle representing the session. should be non-zero.\n * @returns a tuple including 2 numbers, representing the input count and output count.\n */\nconst getSessionInputOutputCount = (sessionHandle: number): [number, number] => {\n  const wasm = getInstance();\n  const stack = wasm.stackSave();\n  try {\n    const dataOffset = wasm.stackAlloc(8);\n    const errorCode = wasm._OrtGetInputOutputCount(sessionHandle, dataOffset, dataOffset + 4);\n    if (errorCode !== 0) {\n      checkLastError('Can\\'t get session input/output count.');\n    }\n    return [wasm.HEAP32[dataOffset / 4], wasm.HEAP32[dataOffset / 4 + 1]];\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n\n/**\n * initialize ORT environment.\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nconst initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    checkLastError('Can\\'t initialize onnxruntime.');\n  }\n};\n\n/**\n * intialize runtime environment.\n * @param env passed in the environment config object.\n */\nexport const initRuntime = async(env: Env): Promise<void> => {\n  // init ORT\n  initOrt(env.wasm.numThreads!, logLevelStringToEnum(env.logLevel));\n\n  if (!BUILD_DEFS.DISABLE_WEBGPU) {\n    // init JSEP if available\n\n    // eslint-disable-next-line @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires\n    const initJsep = require('./jsep/init').init;\n    await initJsep(getInstance(), env);\n  }\n};\n\n/**\n * valid data locations for input/output tensors.\n */\ntype SupportedTensorDataLocationForInputOutput = 'cpu'|'cpu-pinned'|'gpu-buffer';\n\ntype IOBindingState = {\n  /**\n   * the handle of IO binding.\n   */\n  readonly handle: number;\n\n  /**\n   * the preferred location for each output tensor.\n   *\n   * value is one of 'cpu', 'cpu-pinned', 'gpu-buffer'.\n   */\n  readonly outputPreferredLocations: readonly SupportedTensorDataLocationForInputOutput[];\n\n  /**\n   * enum value of the preferred location for each output tensor.\n   */\n  readonly outputPreferredLocationsEncoded: readonly number[];\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded; bindingState\n */\ntype SessionMetadata = [\n  inferenceSessionId: number, inputNamesUTF8Encoded: number[], outputNamesUTF8Encoded: number[],\n  bindingState: IOBindingState|null\n];\n\nconst activeSessions = new Map<number, SessionMetadata>();\n\n/**\n * allocate the memory and memcpy the model bytes, preparing for creating an instance of InferenceSession.\n * @returns a 2-elements tuple - the pointer and size of the allocated buffer\n */\nexport const createSessionAllocate = (model: Uint8Array): [number, number] => {\n  const wasm = getInstance();\n  const modelDataOffset = wasm._malloc(model.byteLength);\n  if (modelDataOffset === 0) {\n    throw new Error(`Can't create a session. failed to allocate a buffer of size ${model.byteLength}.`);\n  }\n  wasm.HEAPU8.set(model, modelDataOffset);\n  return [modelDataOffset, model.byteLength];\n};\n\n/**\n * create an inference session using the prepared buffer containing the model data.\n * @param modelData a 2-elements tuple containing the pointer and size of the model data buffer.\n * @param options an optional session options object.\n * @returns a 3-elements tuple containing [session handle, input names, output names]\n */\nexport const createSessionFinalize =\n    (modelData: SerializableModeldata, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const wasm = getInstance();\n\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let ioBindingHandle = 0;\n      let allocs: number[] = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNamesUTF8Encoded = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        sessionHandle = wasm._OrtCreateSession(modelData[0], modelData[1], sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          checkLastError('Can\\'t create a session.');\n        }\n\n        const [inputCount, outputCount] = getSessionInputOutputCount(sessionHandle);\n\n        const inputNames = [];\n        const outputNames = [];\n        const outputPreferredLocations: SupportedTensorDataLocationForInputOutput[] = [];\n        for (let i = 0; i < inputCount; i++) {\n          const name = wasm._OrtGetInputName(sessionHandle, i);\n          if (name === 0) {\n            checkLastError('Can\\'t get an input name.');\n          }\n          inputNamesUTF8Encoded.push(name);\n          inputNames.push(wasm.UTF8ToString(name));\n        }\n        for (let i = 0; i < outputCount; i++) {\n          const name = wasm._OrtGetOutputName(sessionHandle, i);\n          if (name === 0) {\n            checkLastError('Can\\'t get an output name.');\n          }\n          outputNamesUTF8Encoded.push(name);\n          const nameString = wasm.UTF8ToString(name);\n          outputNames.push(nameString);\n\n          if (!BUILD_DEFS.DISABLE_WEBGPU) {\n            const location = typeof options?.preferredOutputLocation === 'string' ?\n                options.preferredOutputLocation :\n                options?.preferredOutputLocation?.[nameString] ?? 'cpu';\n            if (location !== 'cpu' && location !== 'cpu-pinned' && location !== 'gpu-buffer') {\n              throw new Error(`Not supported preferred output location: ${location}.`);\n            }\n            outputPreferredLocations.push(location);\n          }\n        }\n\n        // use IO binding only when at least one output is preffered to be on GPU.\n        let bindingState: IOBindingState|null = null;\n        if (!BUILD_DEFS.DISABLE_WEBGPU && outputPreferredLocations.some(l => l === 'gpu-buffer')) {\n          ioBindingHandle = wasm._OrtCreateBinding(sessionHandle);\n          if (ioBindingHandle === 0) {\n            checkLastError('Can\\'t create IO binding.');\n          }\n\n          bindingState = {\n            handle: ioBindingHandle,\n            outputPreferredLocations,\n            outputPreferredLocationsEncoded: outputPreferredLocations.map(l => dataLocationStringToEnum(l)),\n          };\n        }\n\n        activeSessions.set(sessionHandle, [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded, bindingState]);\n        return [sessionHandle, inputNames, outputNames];\n      } catch (e) {\n        inputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n        outputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n\n        if (ioBindingHandle !== 0) {\n          wasm._OrtReleaseBinding(ioBindingHandle);\n        }\n\n        if (sessionHandle !== 0) {\n          wasm._OrtReleaseSession(sessionHandle);\n        }\n        throw e;\n      } finally {\n        wasm._free(modelData[0]);\n        if (sessionOptionsHandle !== 0) {\n          wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        }\n        allocs.forEach(alloc => wasm._free(alloc));\n      }\n    };\n\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSession =\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const modelData: SerializableModeldata = createSessionAllocate(model);\n      return createSessionFinalize(modelData, options);\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error(`cannot release session. invalid session id: ${sessionId}`);\n  }\n  const [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded, ioBindingState] = session;\n\n  if (ioBindingState) {\n    wasm._OrtReleaseBinding(ioBindingState.handle);\n  }\n\n  wasm.jsepUnregisterBuffers?.(sessionId);\n\n  inputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n  outputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions.delete(sessionId);\n};\n\nconst prepareInputOutputTensor =\n    (tensor: TensorMetadata|null, tensorHandles: number[], allocs: number[], sessionId: number, index: number):\n        void => {\n          if (!tensor) {\n            tensorHandles.push(0);\n            return;\n          }\n\n          const wasm = getInstance();\n\n          const dataType = tensor[0];\n          const dims = tensor[1];\n          const location = tensor[3];\n\n          let rawData: number;\n          let dataByteLength: number;\n\n          if (dataType === 'string' && location === 'gpu-buffer') {\n            throw new Error('String tensor is not supported on GPU.');\n          }\n\n          if (location === 'gpu-buffer') {\n            const gpuBuffer = tensor[2].gpuBuffer as GPUBuffer;\n            const elementSizeInBytes = getTensorElementSize(tensorDataTypeStringToEnum(dataType))!;\n            dataByteLength = dims.reduce((a, b) => a * b, 1) * elementSizeInBytes;\n            rawData = wasm.jsepRegisterBuffer(sessionId, index, gpuBuffer, dataByteLength);\n          } else {\n            const data = tensor[2];\n\n            if (Array.isArray(data)) {\n              // string tensor\n              dataByteLength = 4 * data.length;\n              rawData = wasm._malloc(dataByteLength);\n              allocs.push(rawData);\n              let dataIndex = rawData / 4;\n              for (let i = 0; i < data.length; i++) {\n                if (typeof data[i] !== 'string') {\n                  throw new TypeError(`tensor data at index ${i} is not a string`);\n                }\n                wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], allocs);\n              }\n            } else {\n              dataByteLength = data.byteLength;\n              rawData = wasm._malloc(dataByteLength);\n              allocs.push(rawData);\n              wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), rawData);\n            }\n          }\n\n          const stack = wasm.stackSave();\n          const dimsOffset = wasm.stackAlloc(4 * dims.length);\n          try {\n            let dimIndex = dimsOffset / 4;\n            dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n            const tensor = wasm._OrtCreateTensor(\n                tensorDataTypeStringToEnum(dataType), rawData, dataByteLength, dimsOffset, dims.length,\n                dataLocationStringToEnum(location));\n            if (tensor === 0) {\n              checkLastError(`Can't create tensor for input/output. session=${sessionId}, index=${index}.`);\n            }\n            tensorHandles.push(tensor);\n          } finally {\n            wasm.stackRestore(stack);\n          }\n        };\n\n/**\n * perform inference run\n */\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputTensors: TensorMetadata[], outputIndices: number[],\n    outputTensors: Array<TensorMetadata|null>, options: InferenceSession.RunOptions): Promise<TensorMetadata[]> => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error(`cannot run inference. invalid session id: ${sessionId}`);\n  }\n  const [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded, ioBindingState] = session;\n\n  const inputCount = inputIndices.length;\n  const outputCount = outputIndices.length;\n\n  let runOptionsHandle = 0;\n  let runOptionsAllocs: number[] = [];\n\n  const inputTensorHandles: number[] = [];\n  const outputTensorHandles: number[] = [];\n  const inputOutputAllocs: number[] = [];\n\n  const beforeRunStack = wasm.stackSave();\n  const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n  const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n  const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n  const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n  try {\n    [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n    // create input tensors\n    for (let i = 0; i < inputCount; i++) {\n      prepareInputOutputTensor(inputTensors[i], inputTensorHandles, inputOutputAllocs, sessionId, inputIndices[i]);\n    }\n\n    // create output tensors\n    for (let i = 0; i < outputCount; i++) {\n      prepareInputOutputTensor(\n          outputTensors[i], outputTensorHandles, inputOutputAllocs, sessionId, inputCount + outputIndices[i]);\n    }\n\n    let inputValuesIndex = inputValuesOffset / 4;\n    let inputNamesIndex = inputNamesOffset / 4;\n    let outputValuesIndex = outputValuesOffset / 4;\n    let outputNamesIndex = outputNamesOffset / 4;\n    for (let i = 0; i < inputCount; i++) {\n      wasm.HEAPU32[inputValuesIndex++] = inputTensorHandles[i];\n      wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n    }\n    for (let i = 0; i < outputCount; i++) {\n      wasm.HEAPU32[outputValuesIndex++] = outputTensorHandles[i];\n      wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n    }\n\n    if (!BUILD_DEFS.DISABLE_WEBGPU && ioBindingState) {\n      const {handle, outputPreferredLocations, outputPreferredLocationsEncoded} = ioBindingState;\n\n      if (inputNamesUTF8Encoded.length !== inputCount) {\n        throw new Error(`input count from feeds (${\n            inputCount}) is expected to be always equal to model's input count (${inputNamesUTF8Encoded.length}).`);\n      }\n\n      // process inputs\n      for (let i = 0; i < inputCount; i++) {\n        const index = inputIndices[i];\n        const errorCode = await wasm._OrtBindInput(handle, inputNamesUTF8Encoded[index], inputTensorHandles[i]);\n        if (errorCode !== 0) {\n          checkLastError(`Can't bind input[${i}] for session=${sessionId}.`);\n        }\n      }\n\n      // process pre-allocated outputs\n      for (let i = 0; i < outputCount; i++) {\n        const index = outputIndices[i];\n        const location = outputTensors[i]?.[3];  // undefined means output is not pre-allocated.\n\n        if (location) {\n          // output is pre-allocated. bind the tensor.\n          const errorCode = wasm._OrtBindOutput(handle, outputNamesUTF8Encoded[index], outputTensorHandles[i], 0);\n          if (errorCode !== 0) {\n            checkLastError(`Can't bind pre-allocated output[${i}] for session=${sessionId}.`);\n          }\n        } else {\n          // output is not pre-allocated. reset preferred location.\n          const errorCode =\n              wasm._OrtBindOutput(handle, outputNamesUTF8Encoded[index], 0, outputPreferredLocationsEncoded[index]);\n          if (errorCode !== 0) {\n            checkLastError(`Can't bind output[${i}] to ${outputPreferredLocations[i]} for session=${sessionId}.`);\n          }\n        }\n      }\n    }\n\n    let errorCode: number;\n\n    if (!BUILD_DEFS.DISABLE_WEBGPU && ioBindingState) {\n      errorCode = await wasm._OrtRunWithBinding(\n          sessionHandle, ioBindingState.handle, outputCount, outputValuesOffset, runOptionsHandle);\n    } else {\n      errorCode = await wasm._OrtRun(\n          sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n          outputValuesOffset, runOptionsHandle);\n    }\n\n    if (errorCode !== 0) {\n      checkLastError('failed to call OrtRun().');\n    }\n\n    const output: TensorMetadata[] = [];\n\n    for (let i = 0; i < outputCount; i++) {\n      const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n      if (tensor === outputTensorHandles[i]) {\n        // output tensor is pre-allocated. no need to copy data.\n        output.push(outputTensors[i]!);\n        continue;\n      }\n\n      const beforeGetTensorDataStack = wasm.stackSave();\n      // stack allocate 4 pointer value\n      const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n      let keepOutputTensor = false;\n      let type: Tensor.Type|undefined, dataOffset = 0;\n      try {\n        const errorCode = wasm._OrtGetTensorData(\n            tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n        if (errorCode !== 0) {\n          checkLastError(`Can't access output tensor data on index ${i}.`);\n        }\n        let tensorDataIndex = tensorDataOffset / 4;\n        const dataType = wasm.HEAPU32[tensorDataIndex++];\n        dataOffset = wasm.HEAPU32[tensorDataIndex++];\n        const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n        const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n        const dims = [];\n        for (let i = 0; i < dimsLength; i++) {\n          dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n        }\n        wasm._OrtFree(dimsOffset);\n\n        const size = dims.reduce((a, b) => a * b, 1);\n        type = tensorDataTypeEnumToString(dataType);\n\n        const preferredLocation = ioBindingState?.outputPreferredLocations[outputIndices[i]];\n\n        if (type === 'string') {\n          if (preferredLocation === 'gpu-buffer') {\n            throw new Error('String tensor is not supported on GPU.');\n          }\n          const stringData: string[] = [];\n          let dataIndex = dataOffset / 4;\n          for (let i = 0; i < size; i++) {\n            const offset = wasm.HEAPU32[dataIndex++];\n            const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n            stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n          }\n          output.push([type, dims, stringData, 'cpu']);\n        } else {\n          // If a certain output's preferred location is GPU but the tensor is empty, we still need to create a CPU\n          // tensor for it. There is no mapping GPU buffer for an empty tensor.\n          if (preferredLocation === 'gpu-buffer' && size > 0) {\n            const gpuBuffer = wasm.jsepGetBuffer(dataOffset);\n            const elementSize = getTensorElementSize(dataType);\n            if (elementSize === undefined || !isGpuBufferSupportedType(type)) {\n              throw new Error(`Unsupported data type: ${type}`);\n            }\n\n            // do not release the tensor right now. it will be released when user calls tensor.dispose().\n            keepOutputTensor = true;\n\n            output.push([\n              type, dims, {\n                gpuBuffer,\n                download: wasm.jsepCreateDownloader(gpuBuffer, size * elementSize, type),\n                dispose: () => {\n                  wasm._OrtReleaseTensor(tensor);\n                }\n              },\n              'gpu-buffer'\n            ]);\n          } else {\n            const typedArrayConstructor = tensorTypeToTypedArrayConstructor(type);\n            const data = new typedArrayConstructor(size);\n            new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n            output.push([type, dims, data, 'cpu']);\n          }\n        }\n      } finally {\n        wasm.stackRestore(beforeGetTensorDataStack);\n        if (type === 'string' && dataOffset) {\n          wasm._free(dataOffset);\n        }\n        if (!keepOutputTensor) {\n          wasm._OrtReleaseTensor(tensor);\n        }\n      }\n    }\n\n    if (ioBindingState) {\n      wasm._OrtClearBoundOutputs(ioBindingState.handle);\n    }\n\n    return output;\n  } finally {\n    wasm.stackRestore(beforeRunStack);\n\n    inputTensorHandles.forEach(v => wasm._OrtReleaseTensor(v));\n    outputTensorHandles.forEach(v => wasm._OrtReleaseTensor(v));\n    inputOutputAllocs.forEach(p => wasm._free(p));\n\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    runOptionsAllocs.forEach(p => wasm._free(p));\n  }\n};\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    checkLastError('Can\\'t get an profile file name.');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensorMetadata[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && 'buffer' in data) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n", "/*!\n * ONNX Runtime Web v1.17.0\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\"use strict\";(()=>{var ui=Object.defineProperty;var wp=Object.getOwnPropertyDescriptor;var Cp=Object.getOwnPropertyNames;var $p=Object.prototype.hasOwnProperty;var oe=(t,r)=>()=>(t&&(r=t(t=0)),r);var Zr=(t,r)=>()=>(r||t((r={exports:{}}).exports,r),r.exports),Dn=(t,r)=>{for(var e in r)ui(t,e,{get:r[e],enumerable:!0})},xp=(t,r,e,d)=>{if(r&&typeof r==\"object\"||typeof r==\"function\")for(let l of Cp(r))!$p.call(t,l)&&l!==e&&ui(t,l,{get:()=>r[l],enumerable:!(d=wp(r,l))||d.enumerable});return t};var cr=t=>xp(ui({},\"__esModule\",{value:!0}),t);var li={};Dn(li,{readFile:()=>Sp});var Sp,ci=oe(()=>{Sp=void 0});var di={};Dn(di,{join:()=>_p});var _p,fi=oe(()=>{_p=void 0});var Ta=Zr((Ia,pi)=>{\"use strict\";var Aa=(()=>{var t=typeof document<\"u\"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<\"u\"&&(t=t||__filename),function(r={}){var e=r,d,l;e.ready=new Promise((n,i)=>{d=n,l=i}),e.jsepInit=(n,i,o,a,s,f,p,g)=>{e.zh=n,e.ph=i,e.rh=o,e.eh=a,e.qh=s,e.Cd=f,e.sh=p,e.th=g,i=(y,v,C)=>(...S)=>{let I=nt,$=v?.();S=y(...S);let M=v?.();return $!==M&&(y=M,C($),v=C=null),nt!=I?gn():S},o=y=>async(...v)=>{try{if(e.Xg)throw Error(\"Session already started\");let C=e.Xg={uh:v[0],errors:[]},S=await y(...v);if(e.Xg!==C)throw Error(\"Session mismatch\");n.flush();let I=C.errors;if(0<I.length){let $=await Promise.all(I);if($=$.filter(M=>M),0<$.length)throw Error($.join(`\n`))}return S}finally{e.Xg=null}},e._OrtRun=o(i(e._OrtRun,()=>e._OrtRun,y=>e._OrtRun=y)),e._OrtRunWithBinding=o(i(e._OrtRunWithBinding,()=>e._OrtRunWithBinding,y=>e._OrtRunWithBinding=y)),e._OrtBindInput=i(e._OrtBindInput,()=>e._OrtBindInput,y=>e._OrtBindInput=y),e.jsepRegisterBuffer=(y,v,C,S)=>n.registerBuffer(y,v,C,S),e.jsepUnregisterBuffers=y=>{n.unregisterBuffers(y)},e.jsepGetBuffer=y=>n.getBuffer(y),e.jsepCreateDownloader=(y,v,C)=>n.createDownloader(y,v,C)};var m=Object.assign({},e),h=\"./this.program\",u=(n,i)=>{throw i},w=typeof window==\"object\",_=typeof importScripts==\"function\",O=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\",j=\"\",B,P,R;if(O){var T=(ci(),cr(li)),k=(fi(),cr(di));j=_?k.dirname(j)+\"/\":__dirname+\"/\",B=(n,i)=>(n=n.startsWith(\"file://\")?new URL(n):k.normalize(n),T.readFileSync(n,i?void 0:\"utf8\")),R=n=>(n=B(n,!0),n.buffer||(n=new Uint8Array(n)),n),P=(n,i,o,a=!0)=>{n=n.startsWith(\"file://\")?new URL(n):k.normalize(n),T.readFile(n,a?void 0:\"utf8\",(s,f)=>{s?o(s):i(a?f.buffer:f)})},!e.thisProgram&&1<process.argv.length&&(h=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),u=(n,i)=>{throw process.exitCode=n,i},e.inspect=()=>\"[Emscripten Module object]\"}else(w||_)&&(_?j=self.location.href:typeof document<\"u\"&&document.currentScript&&(j=document.currentScript.src),t&&(j=t),j.indexOf(\"blob:\")!==0?j=j.substr(0,j.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):j=\"\",B=n=>{var i=new XMLHttpRequest;return i.open(\"GET\",n,!1),i.send(null),i.responseText},_&&(R=n=>{var i=new XMLHttpRequest;return i.open(\"GET\",n,!1),i.responseType=\"arraybuffer\",i.send(null),new Uint8Array(i.response)}),P=(n,i,o)=>{var a=new XMLHttpRequest;a.open(\"GET\",n,!0),a.responseType=\"arraybuffer\",a.onload=()=>{a.status==200||a.status==0&&a.response?i(a.response):o()},a.onerror=o,a.send(null)});var U=e.print||console.log.bind(console),K=e.printErr||console.error.bind(console);Object.assign(e,m),m=null,e.thisProgram&&(h=e.thisProgram),e.quit&&(u=e.quit);var Q;e.wasmBinary&&(Q=e.wasmBinary);var L=e.noExitRuntime||!0;typeof WebAssembly!=\"object\"&&Je(\"no native wasm support detected\");var X,A,Z=!1,re,ie,Ce,H,le,Be;function ue(){var n=X.buffer;e.HEAP8=ie=new Int8Array(n),e.HEAP16=new Int16Array(n),e.HEAP32=H=new Int32Array(n),e.HEAPU8=Ce=new Uint8Array(n),e.HEAPU16=new Uint16Array(n),e.HEAPU32=le=new Uint32Array(n),e.HEAPF32=new Float32Array(n),e.HEAPF64=Be=new Float64Array(n)}var ae=[],Ze=[],Ie=[];function He(){var n=e.preRun.shift();ae.unshift(n)}var Ee=0,qe=null,gt=null;function Je(n){throw e.onAbort&&e.onAbort(n),n=\"Aborted(\"+n+\")\",K(n),Z=!0,re=1,n=new WebAssembly.RuntimeError(n+\". Build with -sASSERTIONS for more info.\"),l(n),n}function _t(n){return n.startsWith(\"data:application/octet-stream;base64,\")}var ee;if(ee=\"ort-wasm-simd.wasm\",!_t(ee)){var $e=ee;ee=e.locateFile?e.locateFile($e,j):j+$e}function Oe(n){if(n==ee&&Q)return new Uint8Array(Q);if(R)return R(n);throw\"both async and sync fetching of the wasm failed\"}function et(n){if(!Q&&(w||_)){if(typeof fetch==\"function\"&&!n.startsWith(\"file://\"))return fetch(n,{credentials:\"same-origin\"}).then(i=>{if(!i.ok)throw\"failed to load wasm binary file at '\"+n+\"'\";return i.arrayBuffer()}).catch(()=>Oe(n));if(P)return new Promise((i,o)=>{P(n,a=>i(new Uint8Array(a)),o)})}return Promise.resolve().then(()=>Oe(n))}function tt(n,i,o){return et(n).then(a=>WebAssembly.instantiate(a,i)).then(a=>a).then(o,a=>{K(\"failed to asynchronously prepare wasm: \"+a),Je(a)})}function Ge(n,i){var o=ee;return Q||typeof WebAssembly.instantiateStreaming!=\"function\"||_t(o)||o.startsWith(\"file://\")||O||typeof fetch!=\"function\"?tt(o,n,i):fetch(o,{credentials:\"same-origin\"}).then(a=>WebAssembly.instantiateStreaming(a,n).then(i,function(s){return K(\"wasm streaming compile failed: \"+s),K(\"falling back to ArrayBuffer instantiation\"),tt(o,n,i)}))}var Me,rt={1312944:n=>{e.Cd(\"Abs\",n,void 0)},1312995:n=>{e.Cd(\"Neg\",n,void 0)},1313046:n=>{e.Cd(\"Floor\",n,void 0)},1313099:n=>{e.Cd(\"Ceil\",n,void 0)},1313151:n=>{e.Cd(\"Reciprocal\",n,void 0)},1313209:n=>{e.Cd(\"Sqrt\",n,void 0)},1313261:n=>{e.Cd(\"Exp\",n,void 0)},1313312:n=>{e.Cd(\"Erf\",n,void 0)},1313363:n=>{e.Cd(\"Sigmoid\",n,void 0)},1313418:n=>{e.Cd(\"Log\",n,void 0)},1313469:n=>{e.Cd(\"Sin\",n,void 0)},1313520:n=>{e.Cd(\"Cos\",n,void 0)},1313571:n=>{e.Cd(\"Tan\",n,void 0)},1313622:n=>{e.Cd(\"Asin\",n,void 0)},1313674:n=>{e.Cd(\"Acos\",n,void 0)},1313726:n=>{e.Cd(\"Atan\",n,void 0)},1313778:n=>{e.Cd(\"Sinh\",n,void 0)},1313830:n=>{e.Cd(\"Cosh\",n,void 0)},1313882:n=>{e.Cd(\"Asinh\",n,void 0)},1313935:n=>{e.Cd(\"Acosh\",n,void 0)},1313988:n=>{e.Cd(\"Atanh\",n,void 0)},1314041:n=>{e.Cd(\"Tanh\",n,void 0)},1314093:n=>{e.Cd(\"Not\",n,void 0)},1314144:(n,i,o)=>{e.Cd(\"ClipV10\",n,{min:i,max:o})},1314216:n=>{e.Cd(\"Clip\",n,void 0)},1314268:(n,i)=>{e.Cd(\"Elu\",n,{alpha:i})},1314326:n=>{e.Cd(\"Relu\",n,void 0)},1314378:(n,i)=>{e.Cd(\"LeakyRelu\",n,{alpha:i})},1314442:(n,i)=>{e.Cd(\"ThresholdedRelu\",n,{alpha:i})},1314512:(n,i)=>{e.Cd(\"Cast\",n,{to:i})},1314570:n=>{e.Cd(\"Add\",n,void 0)},1314621:n=>{e.Cd(\"Sub\",n,void 0)},1314672:n=>{e.Cd(\"Mul\",n,void 0)},1314723:n=>{e.Cd(\"Div\",n,void 0)},1314774:n=>{e.Cd(\"Pow\",n,void 0)},1314825:n=>{e.Cd(\"Equal\",n,void 0)},1314878:n=>{e.Cd(\"Greater\",n,void 0)},1314933:n=>{e.Cd(\"GreaterOrEqual\",n,void 0)},1314995:n=>{e.Cd(\"Less\",n,void 0)},1315047:n=>{e.Cd(\"LessOrEqual\",n,void 0)},1315106:(n,i,o,a,s)=>{e.Cd(\"ReduceMean\",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(H.subarray(s>>>0,s+a>>>0)):[]})},1315270:(n,i,o,a,s)=>{e.Cd(\"ReduceMax\",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(H.subarray(s>>>0,s+a>>>0)):[]})},1315433:(n,i,o,a,s)=>{e.Cd(\"ReduceMin\",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(H.subarray(s>>>0,s+a>>>0)):[]})},1315596:(n,i,o,a,s)=>{e.Cd(\"ReduceProd\",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(H.subarray(s>>>0,s+a>>>0)):[]})},1315760:(n,i,o,a,s)=>{e.Cd(\"ReduceSum\",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(H.subarray(s>>>0,s+a>>>0)):[]})},1315923:(n,i,o,a,s)=>{e.Cd(\"ReduceL1\",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(H.subarray(s>>>0,s+a>>>0)):[]})},1316085:(n,i,o,a,s)=>{e.Cd(\"ReduceL2\",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(H.subarray(s>>>0,s+a>>>0)):[]})},1316247:(n,i,o,a,s)=>{e.Cd(\"ReduceLogSum\",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(H.subarray(s>>>0,s+a>>>0)):[]})},1316413:(n,i,o,a,s)=>{e.Cd(\"ReduceSumSquare\",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(H.subarray(s>>>0,s+a>>>0)):[]})},1316582:(n,i,o,a,s)=>{e.Cd(\"ReduceLogSumExp\",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(H.subarray(s>>>0,s+a>>>0)):[]})},1316751:n=>{e.Cd(\"Where\",n,void 0)},1316804:(n,i,o)=>{e.Cd(\"Transpose\",n,{perm:i?Array.from(H.subarray(o>>>0,o+i>>>0)):[]})},1316917:(n,i,o,a,s,f,p,g,y,v)=>{e.Cd(\"Conv\",n,{format:y?\"NHWC\":\"NCHW\",auto_pad:i,dilations:[o],group:a,kernel_shape:[s],pads:[f,p],strides:[g],w_is_const:()=>!!ie[v>>>0]})},1317145:(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M)=>{e.Cd(\"Conv\",n,{format:$?\"NHWC\":\"NCHW\",auto_pad:i,dilations:[o,a],group:s,kernel_shape:[f,p],pads:[g,y,v,C],strides:[S,I],w_is_const:()=>!!ie[M>>>0]})},1317404:(n,i,o,a,s,f,p,g,y,v)=>{e.Cd(\"Conv\",n,{format:y?\"NHWC\":\"NCHW\",auto_pad:i,dilations:[o],group:a,kernel_shape:[s],pads:[f,p],strides:[g],w_is_const:()=>!!ie[v>>>0]})},1317632:(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M)=>{e.Cd(\"Conv\",n,{format:$?\"NHWC\":\"NCHW\",auto_pad:i,dilations:[o,a],group:s,kernel_shape:[f,p],pads:[g,y,v,C],strides:[S,I],w_is_const:()=>!!ie[M>>>0]})},1317891:(n,i,o,a,s,f,p,g,y,v,C,S,I,$)=>{e.Cd(\"ConvTranspose\",n,{format:y?\"NHWC\":\"NCHW\",autoPad:i,dilations:[o],group:a,kernel_shape:[s],pads:[f,p],strides:[g],wIsConst:()=>!!ie[v>>>0],outputPadding:C?Array.from(H.subarray(S>>>0,S+C>>>0)):[],outputShape:I?Array.from(H.subarray($>>>0,$+I>>>0)):[]})},1318271:(n,i,o,a,s,f,p,g,y,v,C,S,I)=>{e.Cd(\"ConvTranspose\",n,{format:g?\"NHWC\":\"NCHW\",autoPad:i,dilations:Array.from(H.subarray(o>>>0,o+2>>>0)),group:a,kernelShape:Array.from(H.subarray(s>>>0,s+2>>>0)),pads:Array.from(H.subarray(f>>>0,f+4>>>0)),strides:Array.from(H.subarray(p>>>0,p+2>>>0)),wIsConst:()=>!!ie[y>>>0],outputPadding:0<v?Array.from(H.subarray(C>>>0,C+v>>>0)):[],outputShape:0<S?Array.from(H.subarray(I>>>0,I+S>>>0)):[]})},1318794:(n,i,o,a,s,f,p,g,y,v,C,S,I,$)=>{e.Cd(\"ConvTranspose\",n,{format:y?\"NHWC\":\"NCHW\",autoPad:i,dilations:[o],group:a,kernel_shape:[s],pads:[f,p],strides:[g],wIsConst:()=>!!ie[v>>>0],outputPadding:C?Array.from(H.subarray(S>>>0,S+C>>>0)):[],outputShape:I?Array.from(H.subarray($>>>0,$+I>>>0)):[]})},1319174:(n,i,o,a,s,f,p,g,y,v,C,S,I)=>{e.Cd(\"ConvTranspose\",n,{format:g?\"NHWC\":\"NCHW\",autoPad:i,dilations:Array.from(H.subarray(o>>>0,o+2>>>0)),group:a,kernelShape:Array.from(H.subarray(s>>>0,s+2>>>0)),pads:Array.from(H.subarray(f>>>0,f+4>>>0)),strides:Array.from(H.subarray(p>>>0,p+2>>>0)),wIsConst:()=>!!ie[y>>>0],outputPadding:0<v?Array.from(H.subarray(C>>>0,C+v>>>0)):[],outputShape:0<S?Array.from(H.subarray(I>>>0,I+S>>>0)):[]})},1319697:(n,i)=>{e.Cd(\"GlobalAveragePool\",n,{format:i?\"NHWC\":\"NCHW\"})},1319788:(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G)=>{e.Cd(\"AveragePool\",n,{format:G?\"NHWC\":\"NCHW\",auto_pad:i,ceil_mode:o,count_include_pad:a,storage_order:s,dilations:[f,p],kernel_shape:[g,y],pads:[v,C,S,I],strides:[$,M]})},1320072:(n,i)=>{e.Cd(\"GlobalAveragePool\",n,{format:i?\"NHWC\":\"NCHW\"})},1320163:(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G)=>{e.Cd(\"AveragePool\",n,{format:G?\"NHWC\":\"NCHW\",auto_pad:i,ceil_mode:o,count_include_pad:a,storage_order:s,dilations:[f,p],kernel_shape:[g,y],pads:[v,C,S,I],strides:[$,M]})},1320447:(n,i)=>{e.Cd(\"GlobalMaxPool\",n,{format:i?\"NHWC\":\"NCHW\"})},1320534:(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G)=>{e.Cd(\"MaxPool\",n,{format:G?\"NHWC\":\"NCHW\",auto_pad:i,ceil_mode:o,count_include_pad:a,storage_order:s,dilations:[f,p],kernel_shape:[g,y],pads:[v,C,S,I],strides:[$,M]})},1320814:(n,i)=>{e.Cd(\"GlobalMaxPool\",n,{format:i?\"NHWC\":\"NCHW\"})},1320901:(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G)=>{e.Cd(\"MaxPool\",n,{format:G?\"NHWC\":\"NCHW\",auto_pad:i,ceil_mode:o,count_include_pad:a,storage_order:s,dilations:[f,p],kernel_shape:[g,y],pads:[v,C,S,I],strides:[$,M]})},1321181:(n,i,o,a,s)=>{e.Cd(\"Gemm\",n,{alpha:i,beta:o,transA:a,transB:s})},1321285:n=>{e.Cd(\"MatMul\",n,void 0)},1321339:(n,i,o,a)=>{e.Cd(\"ArgMax\",n,{keepDims:!!i,selectLastIndex:!!o,axis:a})},1321447:(n,i,o,a)=>{e.Cd(\"ArgMin\",n,{keepDims:!!i,selectLastIndex:!!o,axis:a})},1321555:(n,i)=>{e.Cd(\"Softmax\",n,{axis:i})},1321618:(n,i)=>{e.Cd(\"Concat\",n,{axis:i})},1321678:(n,i,o,a,s)=>{e.Cd(\"Split\",n,{axis:i,numOutputs:o,splitSizes:a?Array.from(H.subarray(s>>>0,s+a>>>0)):[]})},1321823:n=>{e.Cd(\"Expand\",n,void 0)},1321877:(n,i)=>{e.Cd(\"Gather\",n,{axis:Number(i)})},1321948:(n,i)=>{e.Cd(\"GatherElements\",n,{axis:Number(i)})},1322027:(n,i,o,a,s,f,p,g,y,v,C)=>{e.Cd(\"Resize\",n,{antialias:i,axes:o?Array.from(H.subarray(a>>>0,a+o>>>0)):[],coordinateTransformMode:ct(s),cubicCoeffA:f,excludeOutside:p,extrapolationValue:g,keepAspectRatioPolicy:ct(y),mode:ct(v),nearestMode:ct(C)})},1322378:(n,i,o,a,s,f,p)=>{e.Cd(\"Slice\",n,{starts:i?Array.from(H.subarray(o>>>0,o+i>>>0)):[],ends:a?Array.from(H.subarray(s>>>0,s+a>>>0)):[],axes:f?Array.from(H.subarray(p>>>0,p+f>>>0)):[]})},1322609:n=>{e.Cd(\"Tile\",n,void 0)},1322661:(n,i,o)=>{e.Cd(\"LayerNormalization\",n,{axis:Number(i),epsilon:Number(o)})},1322768:(n,i,o)=>{e.Cd(\"InstanceNormalization\",n,{epsilon:i,format:o?\"NHWC\":\"NCHW\"})},1322882:(n,i,o)=>{e.Cd(\"InstanceNormalization\",n,{epsilon:i,format:o?\"NHWC\":\"NCHW\"})},1322996:n=>{e.Cd(\"Range\",n,void 0)},1323049:(n,i)=>{e.Cd(\"Einsum\",n,{equation:ct(i)})},1323130:(n,i,o,a,s)=>{e.Cd(\"Pad\",n,{mode:i,value:o,pads:a?Array.from(H.subarray(s>>>0,s+a>>>0)):[]})},1323262:n=>{e.Cd(\"Gelu\",n,void 0)},1323314:n=>{e.Cd(\"BiasAdd\",n,void 0)},1323369:n=>{e.Cd(\"BiasSplitGelu\",n,void 0)},1323430:(n,i)=>{e.Cd(\"SkipLayerNormalization\",n,{epsilon:i})},1323511:n=>{e.sh(n)},1323545:(n,i)=>e.th(n,i,e.Xg.uh,e.Xg.errors),1323657:n=>e.ph(n),1323690:n=>e.rh(n),1323722:(n,i,o)=>{e.eh(n,i,o,!0)},1323761:(n,i,o)=>{e.eh(n,i,o)}};function yt(n){this.name=\"ExitStatus\",this.message=`Program terminated with exit(${n})`,this.status=n}var ut=n=>{for(;0<n.length;)n.shift()(e)},Ot=[],Et=0,Ye=0;function Lt(n){this.Wg=n,this.Sg=n-24,this.mh=function(i){le[this.Sg+4>>2>>>0]=i},this.bh=function(){return le[this.Sg+4>>2>>>0]},this.lh=function(i){le[this.Sg+8>>2>>>0]=i},this.fh=function(i){ie[this.Sg+12>>0>>>0]=i?1:0},this.ih=function(){return ie[this.Sg+12>>0>>>0]!=0},this.gh=function(i){ie[this.Sg+13>>0>>>0]=i?1:0},this.oh=function(){return ie[this.Sg+13>>0>>>0]!=0},this.kh=function(i,o){this.dh(0),this.mh(i),this.lh(o)},this.dh=function(i){le[this.Sg+16>>2>>>0]=i},this.hh=function(){return le[this.Sg+16>>2>>>0]},this.jh=function(){if(xr(this.bh()))return le[this.Wg>>2>>>0];var i=this.hh();return i!==0?i:this.Wg}}var lt=n=>{var i=Ye;if(!i)return At(0),0;var o=new Lt(i);o.dh(i);var a=o.bh();if(!a)return At(0),i;for(var s in n){var f=n[s];if(f===0||f===a)break;if($r(f,a,o.Sg+16))return At(f),i}return At(a),i},pr=typeof TextDecoder<\"u\"?new TextDecoder(\"utf8\"):void 0,dn=(n,i,o)=>{i>>>=0;var a=i+o;for(o=i;n[o]&&!(o>=a);)++o;if(16<o-i&&n.buffer&&pr)return pr.decode(n.subarray(i,o));for(a=\"\";i<o;){var s=n[i++];if(s&128){var f=n[i++]&63;if((s&224)==192)a+=String.fromCharCode((s&31)<<6|f);else{var p=n[i++]&63;s=(s&240)==224?(s&15)<<12|f<<6|p:(s&7)<<18|f<<12|p<<6|n[i++]&63,65536>s?a+=String.fromCharCode(s):(s-=65536,a+=String.fromCharCode(55296|s>>10,56320|s&1023))}}else a+=String.fromCharCode(s)}return a},ct=(n,i)=>(n>>>=0)?dn(Ce,n,i):\"\",mr=n=>{for(var i=0,o=0;o<n.length;++o){var a=n.charCodeAt(o);127>=a?i++:2047>=a?i+=2:55296<=a&&57343>=a?(i+=4,++o):i+=3}return i},bt=(n,i,o,a)=>{if(o>>>=0,!(0<a))return 0;var s=o;a=o+a-1;for(var f=0;f<n.length;++f){var p=n.charCodeAt(f);if(55296<=p&&57343>=p){var g=n.charCodeAt(++f);p=65536+((p&1023)<<10)|g&1023}if(127>=p){if(o>=a)break;i[o++>>>0]=p}else{if(2047>=p){if(o+1>=a)break;i[o++>>>0]=192|p>>6}else{if(65535>=p){if(o+2>=a)break;i[o++>>>0]=224|p>>12}else{if(o+3>=a)break;i[o++>>>0]=240|p>>18,i[o++>>>0]=128|p>>12&63}i[o++>>>0]=128|p>>6&63}i[o++>>>0]=128|p&63}}return i[o>>>0]=0,o-s},vt=n=>n%4===0&&(n%100!==0||n%400===0),Pt=[0,31,60,91,121,152,182,213,244,274,305,335],Kt=[0,31,59,90,120,151,181,212,243,273,304,334],hr=n=>{var i=mr(n)+1,o=Zt(i);return o&&bt(n,Ce,o,i),o},qt=[],gr=(n,i)=>{qt.length=0;var o;for(i>>=2;o=Ce[n++>>>0];)i+=o!=105&i,qt.push(o==105?H[i>>>0]:Be[i++>>>1]),++i;return qt},Yt={},dt=()=>{if(!Xt){var n={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:h||\"./this.program\"},i;for(i in Yt)Yt[i]===void 0?delete n[i]:n[i]=Yt[i];var o=[];for(i in n)o.push(`${i}=${n[i]}`);Xt=o}return Xt},Xt,yr=[null,[],[]],he=[31,29,31,30,31,30,31,31,30,31,30,31],Rt=[31,28,31,30,31,30,31,31,30,31,30,31];function fn(n){var i=Array(mr(n)+1);return bt(n,i,0,i.length),i}function pn(n,i,o,a){function s($,M,G){for($=typeof $==\"number\"?$.toString():$||\"\";$.length<M;)$=G[0]+$;return $}function f($,M){return s($,M,\"0\")}function p($,M){function G(te){return 0>te?-1:0<te?1:0}var q;return(q=G($.getFullYear()-M.getFullYear()))===0&&(q=G($.getMonth()-M.getMonth()))===0&&(q=G($.getDate()-M.getDate())),q}function g($){switch($.getDay()){case 0:return new Date($.getFullYear()-1,11,29);case 1:return $;case 2:return new Date($.getFullYear(),0,3);case 3:return new Date($.getFullYear(),0,2);case 4:return new Date($.getFullYear(),0,1);case 5:return new Date($.getFullYear()-1,11,31);case 6:return new Date($.getFullYear()-1,11,30)}}function y($){var M=$.Ug;for($=new Date(new Date($.Vg+1900,0,1).getTime());0<M;){var G=$.getMonth(),q=(vt($.getFullYear())?he:Rt)[G];if(M>q-$.getDate())M-=q-$.getDate()+1,$.setDate(1),11>G?$.setMonth(G+1):($.setMonth(0),$.setFullYear($.getFullYear()+1));else{$.setDate($.getDate()+M);break}}return G=new Date($.getFullYear()+1,0,4),M=g(new Date($.getFullYear(),0,4)),G=g(G),0>=p(M,$)?0>=p(G,$)?$.getFullYear()+1:$.getFullYear():$.getFullYear()-1}n>>>=0,i>>>=0,o>>>=0,a>>>=0;var v=H[a+40>>2>>>0];a={xh:H[a>>2>>>0],wh:H[a+4>>2>>>0],Yg:H[a+8>>2>>>0],ah:H[a+12>>2>>>0],Zg:H[a+16>>2>>>0],Vg:H[a+20>>2>>>0],Tg:H[a+24>>2>>>0],Ug:H[a+28>>2>>>0],Ah:H[a+32>>2>>>0],vh:H[a+36>>2>>>0],yh:v?ct(v):\"\"},o=ct(o),v={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var C in v)o=o.replace(new RegExp(C,\"g\"),v[C]);var S=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),I=\"January February March April May June July August September October November December\".split(\" \");v={\"%a\":$=>S[$.Tg].substring(0,3),\"%A\":$=>S[$.Tg],\"%b\":$=>I[$.Zg].substring(0,3),\"%B\":$=>I[$.Zg],\"%C\":$=>f(($.Vg+1900)/100|0,2),\"%d\":$=>f($.ah,2),\"%e\":$=>s($.ah,2,\" \"),\"%g\":$=>y($).toString().substring(2),\"%G\":$=>y($),\"%H\":$=>f($.Yg,2),\"%I\":$=>($=$.Yg,$==0?$=12:12<$&&($-=12),f($,2)),\"%j\":$=>{for(var M=0,G=0;G<=$.Zg-1;M+=(vt($.Vg+1900)?he:Rt)[G++]);return f($.ah+M,3)},\"%m\":$=>f($.Zg+1,2),\"%M\":$=>f($.wh,2),\"%n\":()=>`\n`,\"%p\":$=>0<=$.Yg&&12>$.Yg?\"AM\":\"PM\",\"%S\":$=>f($.xh,2),\"%t\":()=>\"\t\",\"%u\":$=>$.Tg||7,\"%U\":$=>f(Math.floor(($.Ug+7-$.Tg)/7),2),\"%V\":$=>{var M=Math.floor(($.Ug+7-($.Tg+6)%7)/7);if(2>=($.Tg+371-$.Ug-2)%7&&M++,M)M==53&&(G=($.Tg+371-$.Ug)%7,G==4||G==3&&vt($.Vg)||(M=1));else{M=52;var G=($.Tg+7-$.Ug-1)%7;(G==4||G==5&&vt($.Vg%400-1))&&M++}return f(M,2)},\"%w\":$=>$.Tg,\"%W\":$=>f(Math.floor(($.Ug+7-($.Tg+6)%7)/7),2),\"%y\":$=>($.Vg+1900).toString().substring(2),\"%Y\":$=>$.Vg+1900,\"%z\":$=>{$=$.vh;var M=0<=$;return $=Math.abs($)/60,(M?\"+\":\"-\")+(\"0000\"+($/60*100+$%60)).slice(-4)},\"%Z\":$=>$.yh,\"%%\":()=>\"%\"},o=o.replace(/%%/g,\"\\0\\0\");for(C in v)o.includes(C)&&(o=o.replace(new RegExp(C,\"g\"),v[C](a)));return o=o.replace(/\\0\\0/g,\"%\"),C=fn(o),C.length>i?0:(ie.set(C,n>>>0),C.length-1)}function kt(n){try{n()}catch(i){Je(i)}}function si(n){var i={},o;for(o in n)(function(a){var s=n[a];i[a]=typeof s==\"function\"?function(){Bt.push(a);try{return s.apply(null,arguments)}finally{Z||(Bt.pop()===a||Je(),nt&&ft===1&&Bt.length===0&&(ft=0,kt($a),typeof Fibers<\"u\"&&Fibers.Bh()))}}:s})(o);return i}var ft=0,nt=null,br=0,Bt=[],Qt={},vr={},mn=0,Jt=null,hn=[];function gn(){return new Promise((n,i)=>{Jt={resolve:n,reject:i}})}function yn(){var n=Zt(65548),i=n+12;le[n>>2>>>0]=i,le[n+4>>2>>>0]=i+65536,i=Bt[0];var o=Qt[i];return o===void 0&&(o=mn++,Qt[i]=o,vr[o]=i),H[n+8>>2>>>0]=o,n}function bn(n){if(!Z){if(ft===0){var i=!1,o=!1;n((a=0)=>{if(!Z&&(br=a,i=!0,o)){ft=2,kt(()=>xa(nt)),typeof Browser<\"u\"&&Browser.$g.nh&&Browser.$g.resume(),a=!1;try{var s=(0,A[vr[H[nt+8>>2>>>0]]])()}catch(g){s=g,a=!0}var f=!1;if(!nt){var p=Jt;p&&(Jt=null,(a?p.reject:p.resolve)(s),f=!0)}if(a&&!f)throw s}}),o=!0,i||(ft=1,nt=yn(),typeof Browser<\"u\"&&Browser.$g.nh&&Browser.$g.pause(),kt(()=>Ca(nt)))}else ft===2?(ft=0,kt(Sa),wr(nt),nt=null,hn.forEach(a=>{if(!Z)try{if(a(),!L)try{re=re=a=re,L||(e.onExit&&e.onExit(a),Z=!0),u(a,new yt(a))}catch(s){s instanceof yt||s==\"unwind\"||u(1,s)}}catch(s){s instanceof yt||s==\"unwind\"||u(1,s)}})):Je(`invalid state: ${ft}`);return br}}function vn(n){return bn(i=>{n().then(i)})}var wn={Ha:function(n,i,o){return vn(async()=>{await e.qh(n,i,o)})},u:function(n){return n=new Lt(n>>>0),n.ih()||(n.fh(!0),Et--),n.gh(!1),Ot.push(n),Cr(n.Wg),n.jh()},B:function(){W(0,0);var n=Ot.pop();It(n.Wg),Ye=0},a:function(){return lt([])},k:function(n){return lt([n>>>0])},w:function(n,i){return lt([n>>>0,i>>>0])},q:function(n,i,o){return lt([n>>>0,i>>>0,o>>>0])},pa:function(){var n=Ot.pop();n||Je(\"no exception to throw\");var i=n.Wg;throw n.oh()||(Ot.push(n),n.gh(!0),n.fh(!1),Et++),Ye=i,Ye},s:function(n,i,o){throw n>>>=0,new Lt(n).kh(i>>>0,o>>>0),Ye=n,Et++,Ye},$:function(){return Et},g:function(n){throw Ye||(Ye=n>>>0),Ye},qa:function(){return 0},oc:function(){},Pa:function(){},Ra:function(){},Ja:function(){return 0},Ub:function(){},Ta:function(){},Jb:function(){},Ca:function(){},Qa:function(){},Na:function(){},dc:function(){},Oa:function(){},Tc:()=>!0,Oc:function(n,i,o){n=i+2097152>>>0<4194305-!!n?(n>>>0)+4294967296*i:NaN,o>>>=0,n=new Date(1e3*n),H[o>>2>>>0]=n.getUTCSeconds(),H[o+4>>2>>>0]=n.getUTCMinutes(),H[o+8>>2>>>0]=n.getUTCHours(),H[o+12>>2>>>0]=n.getUTCDate(),H[o+16>>2>>>0]=n.getUTCMonth(),H[o+20>>2>>>0]=n.getUTCFullYear()-1900,H[o+24>>2>>>0]=n.getUTCDay(),H[o+28>>2>>>0]=(n.getTime()-Date.UTC(n.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},Pc:function(n,i,o){n=i+2097152>>>0<4194305-!!n?(n>>>0)+4294967296*i:NaN,o>>>=0,n=new Date(1e3*n),H[o>>2>>>0]=n.getSeconds(),H[o+4>>2>>>0]=n.getMinutes(),H[o+8>>2>>>0]=n.getHours(),H[o+12>>2>>>0]=n.getDate(),H[o+16>>2>>>0]=n.getMonth(),H[o+20>>2>>>0]=n.getFullYear()-1900,H[o+24>>2>>>0]=n.getDay(),H[o+28>>2>>>0]=(vt(n.getFullYear())?Pt:Kt)[n.getMonth()]+n.getDate()-1|0,H[o+36>>2>>>0]=-(60*n.getTimezoneOffset()),i=new Date(n.getFullYear(),6,1).getTimezoneOffset();var a=new Date(n.getFullYear(),0,1).getTimezoneOffset();H[o+32>>2>>>0]=(i!=a&&n.getTimezoneOffset()==Math.min(a,i))|0},Qc:function(n){n>>>=0;var i=new Date(H[n+20>>2>>>0]+1900,H[n+16>>2>>>0],H[n+12>>2>>>0],H[n+8>>2>>>0],H[n+4>>2>>>0],H[n>>2>>>0],0),o=H[n+32>>2>>>0],a=i.getTimezoneOffset(),s=new Date(i.getFullYear(),6,1).getTimezoneOffset(),f=new Date(i.getFullYear(),0,1).getTimezoneOffset(),p=Math.min(f,s);return 0>o?H[n+32>>2>>>0]=+(s!=f&&p==a):0<o!=(p==a)&&(s=Math.max(f,s),i.setTime(i.getTime()+6e4*((0<o?p:s)-a))),H[n+24>>2>>>0]=i.getDay(),H[n+28>>2>>>0]=(vt(i.getFullYear())?Pt:Kt)[i.getMonth()]+i.getDate()-1|0,H[n>>2>>>0]=i.getSeconds(),H[n+4>>2>>>0]=i.getMinutes(),H[n+8>>2>>>0]=i.getHours(),H[n+12>>2>>>0]=i.getDate(),H[n+16>>2>>>0]=i.getMonth(),H[n+20>>2>>>0]=i.getYear(),n=i.getTime()/1e3,At((Me=n,1<=+Math.abs(Me)?0<Me?+Math.floor(Me/4294967296)>>>0:~~+Math.ceil((Me-+(~~Me>>>0))/4294967296)>>>0:0)),n>>>0},Mc:function(){return-52},Nc:function(){},La:function(n,i,o){function a(y){return(y=y.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?y[1]:\"GMT\"}o>>>=0;var s=new Date().getFullYear(),f=new Date(s,0,1),p=new Date(s,6,1);s=f.getTimezoneOffset();var g=p.getTimezoneOffset();le[n>>>0>>2>>>0]=60*Math.max(s,g),H[i>>>0>>2>>>0]=+(s!=g),n=a(f),i=a(p),n=hr(n),i=hr(i),g<s?(le[o>>2>>>0]=n,le[o+4>>2>>>0]=i):(le[o>>2>>>0]=i,le[o+4>>2>>>0]=n)},ja:()=>{Je(\"\")},x:function(n,i,o){return n>>>=0,i=gr(i>>>0,o>>>0),rt[n].apply(null,i)},wa:function(n,i,o){return n>>>=0,i=gr(i>>>0,o>>>0),rt[n].apply(null,i)},Ea:function(){return Date.now()},Ma:function(){return 4294901760},I:()=>performance.now(),yb:function(n,i,o){return i>>>=0,Ce.copyWithin(n>>>0>>>0,i>>>0,i+(o>>>0)>>>0)},Ka:function(n){n>>>=0;var i=Ce.length;if(4294901760<n)return!1;for(var o=1;4>=o;o*=2){var a=i*(1+.2/o);a=Math.min(a,n+100663296);var s=Math;a=Math.max(n,a);e:{s=s.min.call(s,4294901760,a+(65536-a%65536)%65536)-X.buffer.byteLength+65535>>>16;try{X.grow(s),ue();var f=1;break e}catch{}f=void 0}if(f)return!0}return!1},cb:function(n,i){n>>>=0,i>>>=0;var o=0;return dt().forEach(function(a,s){var f=i+o;for(s=le[n+4*s>>2>>>0]=f,f=0;f<a.length;++f)ie[s++>>0>>>0]=a.charCodeAt(f);ie[s>>0>>>0]=0,o+=a.length+1}),0},nb:function(n,i){n>>>=0,i>>>=0;var o=dt();le[n>>2>>>0]=o.length;var a=0;return o.forEach(function(s){a+=s.length+1}),le[i>>2>>>0]=a,0},ma:()=>52,Ba:function(){return 52},Rc:function(){return 70},Aa:function(n,i,o,a){i>>>=0,o>>>=0,a>>>=0;for(var s=0,f=0;f<o;f++){var p=le[i>>2>>>0],g=le[i+4>>2>>>0];i+=8;for(var y=0;y<g;y++){var v=Ce[p+y>>>0],C=yr[n];v===0||v===10?((n===1?U:K)(dn(C,0)),C.length=0):C.push(v)}s+=g}return le[a>>2>>>0]=s,0},ia:Rc,Sc:Pd,M:od,K:Pc,Uc:Ed,Wc:Id,C:Lc,z:Tc,b:wc,Da:Sd,ca:pd,f:bc,ra:_d,h:yc,F:xd,i:_c,Vc:Td,j:Sc,t:xc,r:Ec,n:kc,W:jc,Y:bd,J:Gc,oa:Jc,aa:ed,la:vd,vb:Ff,gb:ip,zc:Fd,bb:up,eb:ap,Sa:bp,Sb:xf,Dc:Gd,jb:tp,Va:gp,Ob:If,fb:op,gc:lf,Lc:Rd,pc:ef,hb:np,db:sp,Bb:zf,kc:of,nc:tf,fc:cf,Kc:kd,_a:dp,ab:lp,qb:Yf,mb:Jf,$a:cp,ic:sf,Kb:Pf,lb:Zf,Ua:yp,Tb:$f,Ic:Md,Ac:Nd,tc:Xd,pb:Xf,lc:nf,Ib:Rf,Hb:kf,c:$c,_:qc,p:Cc,P:Ad,Z:ld,ha:Uc,e:vc,za:zc,G:$d,da:Xc,O:ad,ub:Hf,fa:Nc,d:Ac,xa:Hc,Fa:wd,l:Ic,va:Yc,m:Oc,ya:Fc,ua:Qc,Ga:md,o:Bc,V:nd,ga:rd,U:id,na:cd,y:Mc,A:Dc,E:Wc,X:Cd,ta:sd,ea:Kc,N:td,L:dd,D:Zc,ba:Vc,T:ud,ka:Od,R:hd,sa:yd,Q:gd,S:fd,jc:af,zb:Vf,rb:qf,Eb:jf,Ab:Gf,Bc:Ud,Nb:Tf,xb:Uf,Fb:Mf,Pb:Af,ec:df,ob:Qf,Mb:Of,sb:Kf,Ya:pp,rc:Jd,Fc:Wd,Za:fp,Qb:_f,xc:Ld,Cb:Wf,kb:ep,vc:qd,Hc:jd,wc:Kd,Cc:Vd,Xa:mp,Ec:zd,wb:Nf,Lb:Ef,yc:Hd,Jc:Bd,ib:rp,Db:Df,Yb:bf,tb:Lf,Gc:Dd,Zb:yf,Rb:Sf,hc:uf,qc:Zd,Gb:Bf,Xb:vf,sc:Qd,mc:rf,Wa:hp,uc:Yd,Vb:Cf,Wb:wf,$b:hf,ac:mf,cc:ff,_b:gf,bc:pf,v:function(n){return n>>>0},Ia:pn,H:function(n,i,o,a){return pn(n>>>0,i>>>0,o>>>0,a>>>0)}};(function(){function n(o){if(o=o.exports,o=si(o),A=o=vp(o),X=A.Xc,ue(),Ze.unshift(A.Yc),Ee--,e.monitorRunDependencies&&e.monitorRunDependencies(Ee),Ee==0&&(qe!==null&&(clearInterval(qe),qe=null),gt)){var a=gt;gt=null,a()}return o}var i={a:wn};if(Ee++,e.monitorRunDependencies&&e.monitorRunDependencies(Ee),e.instantiateWasm)try{return e.instantiateWasm(i,n)}catch(o){K(\"Module.instantiateWasm callback failed with error: \"+o),l(o)}return Ge(i,function(o){n(o.instance)}).catch(l),{}})(),e._OrtInit=(n,i)=>(e._OrtInit=A.Zc)(n,i),e._OrtGetLastError=(n,i)=>(e._OrtGetLastError=A._c)(n,i),e._OrtCreateSessionOptions=(n,i,o,a,s,f,p,g,y,v)=>(e._OrtCreateSessionOptions=A.$c)(n,i,o,a,s,f,p,g,y,v),e._OrtAppendExecutionProvider=(n,i)=>(e._OrtAppendExecutionProvider=A.ad)(n,i),e._OrtAddFreeDimensionOverride=(n,i,o)=>(e._OrtAddFreeDimensionOverride=A.bd)(n,i,o),e._OrtAddSessionConfigEntry=(n,i,o)=>(e._OrtAddSessionConfigEntry=A.cd)(n,i,o),e._OrtReleaseSessionOptions=n=>(e._OrtReleaseSessionOptions=A.dd)(n),e._OrtCreateSession=(n,i,o)=>(e._OrtCreateSession=A.ed)(n,i,o),e._OrtReleaseSession=n=>(e._OrtReleaseSession=A.fd)(n),e._OrtGetInputOutputCount=(n,i,o)=>(e._OrtGetInputOutputCount=A.gd)(n,i,o),e._OrtGetInputName=(n,i)=>(e._OrtGetInputName=A.hd)(n,i),e._OrtGetOutputName=(n,i)=>(e._OrtGetOutputName=A.id)(n,i),e._OrtFree=n=>(e._OrtFree=A.jd)(n),e._OrtCreateTensor=(n,i,o,a,s,f)=>(e._OrtCreateTensor=A.kd)(n,i,o,a,s,f),e._OrtGetTensorData=(n,i,o,a,s)=>(e._OrtGetTensorData=A.ld)(n,i,o,a,s),e._OrtReleaseTensor=n=>(e._OrtReleaseTensor=A.md)(n),e._OrtCreateRunOptions=(n,i,o,a)=>(e._OrtCreateRunOptions=A.nd)(n,i,o,a),e._OrtAddRunConfigEntry=(n,i,o)=>(e._OrtAddRunConfigEntry=A.od)(n,i,o),e._OrtReleaseRunOptions=n=>(e._OrtReleaseRunOptions=A.pd)(n),e._OrtCreateBinding=n=>(e._OrtCreateBinding=A.qd)(n),e._OrtBindInput=(n,i,o)=>(e._OrtBindInput=A.rd)(n,i,o),e._OrtBindOutput=(n,i,o,a)=>(e._OrtBindOutput=A.sd)(n,i,o,a),e._OrtClearBoundOutputs=n=>(e._OrtClearBoundOutputs=A.td)(n),e._OrtReleaseBinding=n=>(e._OrtReleaseBinding=A.ud)(n),e._OrtRunWithBinding=(n,i,o,a,s)=>(e._OrtRunWithBinding=A.vd)(n,i,o,a,s),e._OrtRun=(n,i,o,a,s,f,p,g)=>(e._OrtRun=A.wd)(n,i,o,a,s,f,p,g),e._OrtEndProfiling=n=>(e._OrtEndProfiling=A.xd)(n),e._JsepOutput=(n,i,o)=>(e._JsepOutput=A.yd)(n,i,o),e._JsepGetNodeName=n=>(e._JsepGetNodeName=A.zd)(n);var Zt=e._malloc=n=>(Zt=e._malloc=A.Ad)(n),wr=e._free=n=>(wr=e._free=A.Bd)(n),W=(n,i)=>(W=A.Dd)(n,i),At=n=>(At=A.Ed)(n),z=()=>(z=A.Fd)(),D=n=>(D=A.Gd)(n),Mt=n=>(Mt=A.Hd)(n),It=n=>(It=A.Id)(n),Cr=n=>(Cr=A.Jd)(n),$r=(n,i,o)=>($r=A.Kd)(n,i,o),xr=n=>(xr=A.Ld)(n),Sr=e.dynCall_vi=(n,i)=>(Sr=e.dynCall_vi=A.Md)(n,i),_r=e.dynCall_vii=(n,i,o)=>(_r=e.dynCall_vii=A.Nd)(n,i,o),er=e.dynCall_iiii=(n,i,o,a)=>(er=e.dynCall_iiii=A.Od)(n,i,o,a),Ar=e.dynCall_iii=(n,i,o)=>(Ar=e.dynCall_iii=A.Pd)(n,i,o),Cn=e.dynCall_ii=(n,i)=>(Cn=e.dynCall_ii=A.Qd)(n,i),ke=e.dynCall_iiiiiii=(n,i,o,a,s,f,p)=>(ke=e.dynCall_iiiiiii=A.Rd)(n,i,o,a,s,f,p),tr=e.dynCall_v=n=>(tr=e.dynCall_v=A.Sd)(n),rr=e.dynCall_iiiiii=(n,i,o,a,s,f)=>(rr=e.dynCall_iiiiii=A.Td)(n,i,o,a,s,f),Ir=e.dynCall_iiij=(n,i,o,a,s)=>(Ir=e.dynCall_iiij=A.Ud)(n,i,o,a,s),nr=e.dynCall_iiiii=(n,i,o,a,s)=>(nr=e.dynCall_iiiii=A.Vd)(n,i,o,a,s),Tr=e.dynCall_viii=(n,i,o,a)=>(Tr=e.dynCall_viii=A.Wd)(n,i,o,a),Or=e.dynCall_j=n=>(Or=e.dynCall_j=A.Xd)(n),Er=e.dynCall_i=n=>(Er=e.dynCall_i=A.Yd)(n),Pr=e.dynCall_iij=(n,i,o,a)=>(Pr=e.dynCall_iij=A.Zd)(n,i,o,a),Rr=e.dynCall_iiiiij=(n,i,o,a,s,f,p)=>(Rr=e.dynCall_iiiiij=A._d)(n,i,o,a,s,f,p),$n=e.dynCall_vij=(n,i,o,a)=>($n=e.dynCall_vij=A.$d)(n,i,o,a),kr=e.dynCall_viiiii=(n,i,o,a,s,f)=>(kr=e.dynCall_viiiii=A.ae)(n,i,o,a,s,f),Br=e.dynCall_viiii=(n,i,o,a,s)=>(Br=e.dynCall_viiii=A.be)(n,i,o,a,s),Mr=e.dynCall_iiiiiiii=(n,i,o,a,s,f,p,g)=>(Mr=e.dynCall_iiiiiiii=A.ce)(n,i,o,a,s,f,p,g),xn=e.dynCall_fi=(n,i)=>(xn=e.dynCall_fi=A.de)(n,i),Sn=e.dynCall_fii=(n,i,o)=>(Sn=e.dynCall_fii=A.ee)(n,i,o),jr=e.dynCall_ji=(n,i)=>(jr=e.dynCall_ji=A.fe)(n,i),jt=e.dynCall_di=(n,i)=>(jt=e.dynCall_di=A.ge)(n,i),_n=e.dynCall_jii=(n,i,o)=>(_n=e.dynCall_jii=A.he)(n,i,o),pt=e.dynCall_dii=(n,i,o)=>(pt=e.dynCall_dii=A.ie)(n,i,o),it=e.dynCall_iiiiiiiii=(n,i,o,a,s,f,p,g,y)=>(it=e.dynCall_iiiiiiiii=A.je)(n,i,o,a,s,f,p,g,y),Dr=e.dynCall_viij=(n,i,o,a,s)=>(Dr=e.dynCall_viij=A.ke)(n,i,o,a,s),Dt=e.dynCall_viiiiii=(n,i,o,a,s,f,p)=>(Dt=e.dynCall_viiiiii=A.le)(n,i,o,a,s,f,p),Wr=e.dynCall_vijj=(n,i,o,a,s,f)=>(Wr=e.dynCall_vijj=A.me)(n,i,o,a,s,f),zr=e.dynCall_viiiiiii=(n,i,o,a,s,f,p,g)=>(zr=e.dynCall_viiiiiii=A.ne)(n,i,o,a,s,f,p,g),An=e.dynCall_iiiiiiiiii=(n,i,o,a,s,f,p,g,y,v)=>(An=e.dynCall_iiiiiiiiii=A.oe)(n,i,o,a,s,f,p,g,y,v),ir=e.dynCall_viiiiiiii=(n,i,o,a,s,f,p,g,y)=>(ir=e.dynCall_viiiiiiii=A.pe)(n,i,o,a,s,f,p,g,y),In=e.dynCall_iiiiijiiiii=(n,i,o,a,s,f,p,g,y,v,C,S)=>(In=e.dynCall_iiiiijiiiii=A.qe)(n,i,o,a,s,f,p,g,y,v,C,S),Tn=e.dynCall_viiji=(n,i,o,a,s,f)=>(Tn=e.dynCall_viiji=A.re)(n,i,o,a,s,f),On=e.dynCall_viijiii=(n,i,o,a,s,f,p,g)=>(On=e.dynCall_viijiii=A.se)(n,i,o,a,s,f,p,g),En=e.dynCall_viiiiij=(n,i,o,a,s,f,p,g)=>(En=e.dynCall_viiiiij=A.te)(n,i,o,a,s,f,p,g),Pn=e.dynCall_viiiiiiiii=(n,i,o,a,s,f,p,g,y,v)=>(Pn=e.dynCall_viiiiiiiii=A.ue)(n,i,o,a,s,f,p,g,y,v),Rn=e.dynCall_viid=(n,i,o,a)=>(Rn=e.dynCall_viid=A.ve)(n,i,o,a),kn=e.dynCall_iiiiiiiij=(n,i,o,a,s,f,p,g,y,v)=>(kn=e.dynCall_iiiiiiiij=A.we)(n,i,o,a,s,f,p,g,y,v),Bn=e.dynCall_iiiiiiiiiiii=(n,i,o,a,s,f,p,g,y,v,C,S)=>(Bn=e.dynCall_iiiiiiiiiiii=A.xe)(n,i,o,a,s,f,p,g,y,v,C,S),Wt=e.dynCall_viiiiiiiiiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$)=>(Wt=e.dynCall_viiiiiiiiiiiii=A.ye)(n,i,o,a,s,f,p,g,y,v,C,S,I,$),or=e.dynCall_viijjjiiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M)=>(or=e.dynCall_viijjjiiiiii=A.ze)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M),Gr=e.dynCall_viiijiiiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I)=>(Gr=e.dynCall_viiijiiiiiii=A.Ae)(n,i,o,a,s,f,p,g,y,v,C,S,I),Vr=e.dynCall_viffiii=(n,i,o,a,s,f,p)=>(Vr=e.dynCall_viffiii=A.Be)(n,i,o,a,s,f,p),Ur=e.dynCall_viiijjjii=(n,i,o,a,s,f,p,g,y,v,C,S)=>(Ur=e.dynCall_viiijjjii=A.Ce)(n,i,o,a,s,f,p,g,y,v,C,S),ar=e.dynCall_viifiii=(n,i,o,a,s,f,p)=>(ar=e.dynCall_viifiii=A.De)(n,i,o,a,s,f,p),sr=e.dynCall_viiiiidiidi=(n,i,o,a,s,f,p,g,y,v,C)=>(sr=e.dynCall_viiiiidiidi=A.Ee)(n,i,o,a,s,f,p,g,y,v,C),Nr=e.dynCall_viiiiiiiiidi=(n,i,o,a,s,f,p,g,y,v,C,S)=>(Nr=e.dynCall_viiiiiiiiidi=A.Fe)(n,i,o,a,s,f,p,g,y,v,C,S),Fr=e.dynCall_vjiiiiii=(n,i,o,a,s,f,p,g,y)=>(Fr=e.dynCall_vjiiiiii=A.Ge)(n,i,o,a,s,f,p,g,y),Hr=e.dynCall_jiii=(n,i,o,a)=>(Hr=e.dynCall_jiii=A.He)(n,i,o,a),ur=e.dynCall_viiid=(n,i,o,a,s)=>(ur=e.dynCall_viiid=A.Ie)(n,i,o,a,s),zt=e.dynCall_viiiiiiiiiii=(n,i,o,a,s,f,p,g,y,v,C,S)=>(zt=e.dynCall_viiiiiiiiiii=A.Je)(n,i,o,a,s,f,p,g,y,v,C,S),lr=e.dynCall_vijjjjjjjjjjjjji=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se,je,De,Ve,Le,ot,at)=>(lr=e.dynCall_vijjjjjjjjjjjjji=A.Ke)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se,je,De,Ve,Le,ot,at),Lr=e.dynCall_viiiji=(n,i,o,a,s,f,p)=>(Lr=e.dynCall_viiiji=A.Le)(n,i,o,a,s,f,p),Kr=e.dynCall_vijjjiiji=(n,i,o,a,s,f,p,g,y,v,C,S,I)=>(Kr=e.dynCall_vijjjiiji=A.Me)(n,i,o,a,s,f,p,g,y,v,C,S,I),qr=e.dynCall_iiiji=(n,i,o,a,s,f)=>(qr=e.dynCall_iiiji=A.Ne)(n,i,o,a,s,f),Yr=e.dynCall_iiijiiiiiiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M)=>(Yr=e.dynCall_iiijiiiiiiiiii=A.Oe)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M),Xr=e.dynCall_vj=(n,i,o)=>(Xr=e.dynCall_vj=A.Pe)(n,i,o),Mn=e.dynCall_jjj=(n,i,o,a,s)=>(Mn=e.dynCall_jjj=A.Qe)(n,i,o,a,s),Gt=e.dynCall_iiijiiiiii=(n,i,o,a,s,f,p,g,y,v,C)=>(Gt=e.dynCall_iiijiiiiii=A.Re)(n,i,o,a,s,f,p,g,y,v,C),Qr=e.dynCall_viiff=(n,i,o,a,s)=>(Qr=e.dynCall_viiff=A.Se)(n,i,o,a,s),c=e.dynCall_viiiiiff=(n,i,o,a,s,f,p,g)=>(c=e.dynCall_viiiiiff=A.Te)(n,i,o,a,s,f,p,g),b=e.dynCall_vfiii=(n,i,o,a,s)=>(b=e.dynCall_vfiii=A.Ue)(n,i,o,a,s),x=e.dynCall_viiiiff=(n,i,o,a,s,f,p)=>(x=e.dynCall_viiiiff=A.Ve)(n,i,o,a,s,f,p),E=e.dynCall_viiiiiiiiifiii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$)=>(E=e.dynCall_viiiiiiiiifiii=A.We)(n,i,o,a,s,f,p,g,y,v,C,S,I,$),V=e.dynCall_viiiiiiiijj=(n,i,o,a,s,f,p,g,y,v,C,S,I)=>(V=e.dynCall_viiiiiiiijj=A.Xe)(n,i,o,a,s,f,p,g,y,v,C,S,I),F=e.dynCall_iiiiiiiiiiiiiifii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q)=>(F=e.dynCall_iiiiiiiiiiiiiifii=A.Ye)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q),J=e.dynCall_viiiiiiiiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I)=>(J=e.dynCall_viiiiiiiiiiii=A.Ze)(n,i,o,a,s,f,p,g,y,v,C,S,I),pe=e.dynCall_ij=(n,i,o)=>(pe=e.dynCall_ij=A._e)(n,i,o),de=e.dynCall_iiiiiiiiiiiiiiiiifii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge)=>(de=e.dynCall_iiiiiiiiiiiiiiiiifii=A.$e)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge),ce=e.dynCall_vijjiiiiii=(n,i,o,a,s,f,p,g,y,v,C,S)=>(ce=e.dynCall_vijjiiiiii=A.af)(n,i,o,a,s,f,p,g,y,v,C,S),me=e.dynCall_iiiijjj=(n,i,o,a,s,f,p,g,y,v)=>(me=e.dynCall_iiiijjj=A.bf)(n,i,o,a,s,f,p,g,y,v),xe=e.dynCall_viiiiiiiiii=(n,i,o,a,s,f,p,g,y,v,C)=>(xe=e.dynCall_viiiiiiiiii=A.cf)(n,i,o,a,s,f,p,g,y,v,C),_e=e.dynCall_iiijjj=(n,i,o,a,s,f,p,g,y)=>(_e=e.dynCall_iiijjj=A.df)(n,i,o,a,s,f,p,g,y),N=e.dynCall_fffffff=(n,i,o,a,s,f,p)=>(N=e.dynCall_fffffff=A.ef)(n,i,o,a,s,f,p),be=e.dynCall_viiiij=(n,i,o,a,s,f,p)=>(be=e.dynCall_viiiij=A.ff)(n,i,o,a,s,f,p),Te=e.dynCall_viijj=(n,i,o,a,s,f,p)=>(Te=e.dynCall_viijj=A.gf)(n,i,o,a,s,f,p),wt=e.dynCall_vjjjjjjffiifiiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se,je)=>(wt=e.dynCall_vjjjjjjffiifiiiiii=A.hf)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se,je),Jr=e.dynCall_viiiiiiffiifiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q)=>(Jr=e.dynCall_viiiiiiffiifiiiii=A.jf)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q),Fi=e.dynCall_viiiiiiffifiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G)=>(Fi=e.dynCall_viiiiiiffifiiiii=A.kf)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G),Hi=e.dynCall_viiiiiiffiiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M)=>(Hi=e.dynCall_viiiiiiffiiiiii=A.lf)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M),Li=e.dynCall_vjjjjjjjjfffiifiiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se,je,De,Ve,Le,ot,at)=>(Li=e.dynCall_vjjjjjjjjfffiifiiiiii=A.mf)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se,je,De,Ve,Le,ot,at),Ki=e.dynCall_vjjjjjjfffifiiiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se,je,De)=>(Ki=e.dynCall_vjjjjjjfffifiiiiiii=A.nf)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se,je,De),qi=e.dynCall_vjjjjjjfffifiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se)=>(qi=e.dynCall_vjjjjjjfffifiiiii=A.of)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se),Yi=e.dynCall_vjjjjjjjjfffiifiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se,je,De,Ve,Le,ot)=>(Yi=e.dynCall_vjjjjjjjjfffiifiiiii=A.pf)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se,je,De,Ve,Le,ot),Xi=e.dynCall_vijjfffiii=(n,i,o,a,s,f,p,g,y,v,C,S)=>(Xi=e.dynCall_vijjfffiii=A.qf)(n,i,o,a,s,f,p,g,y,v,C,S),Qi=e.dynCall_vijiiiiiiii=(n,i,o,a,s,f,p,g,y,v,C,S)=>(Qi=e.dynCall_vijiiiiiiii=A.rf)(n,i,o,a,s,f,p,g,y,v,C,S),Ji=e.dynCall_vijjjjjjifiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve)=>(Ji=e.dynCall_vijjjjjjifiiiii=A.sf)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve),Zi=e.dynCall_vjjjjjiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M)=>(Zi=e.dynCall_vjjjjjiiii=A.tf)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M),eo=e.dynCall_vjjjjfiii=(n,i,o,a,s,f,p,g,y,v,C,S,I)=>(eo=e.dynCall_vjjjjfiii=A.uf)(n,i,o,a,s,f,p,g,y,v,C,S,I),to=e.dynCall_viifi=(n,i,o,a,s)=>(to=e.dynCall_viifi=A.vf)(n,i,o,a,s),ro=e.dynCall_iiiiiji=(n,i,o,a,s,f,p,g)=>(ro=e.dynCall_iiiiiji=A.wf)(n,i,o,a,s,f,p,g),no=e.dynCall_vijjii=(n,i,o,a,s,f,p,g)=>(no=e.dynCall_vijjii=A.xf)(n,i,o,a,s,f,p,g),io=e.dynCall_viiijiiiiii=(n,i,o,a,s,f,p,g,y,v,C,S)=>(io=e.dynCall_viiijiiiiii=A.yf)(n,i,o,a,s,f,p,g,y,v,C,S),oo=e.dynCall_viiiiijjiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M)=>(oo=e.dynCall_viiiiijjiiiii=A.zf)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M),ao=e.dynCall_iiiiji=(n,i,o,a,s,f,p)=>(ao=e.dynCall_iiiiji=A.Af)(n,i,o,a,s,f,p),so=e.dynCall_viiiiijiiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$)=>(so=e.dynCall_viiiiijiiiiii=A.Bf)(n,i,o,a,s,f,p,g,y,v,C,S,I,$),uo=e.dynCall_viiiijii=(n,i,o,a,s,f,p,g,y)=>(uo=e.dynCall_viiiijii=A.Cf)(n,i,o,a,s,f,p,g,y),lo=e.dynCall_viijjiii=(n,i,o,a,s,f,p,g,y,v)=>(lo=e.dynCall_viijjiii=A.Df)(n,i,o,a,s,f,p,g,y,v),co=e.dynCall_ijii=(n,i,o,a,s)=>(co=e.dynCall_ijii=A.Ef)(n,i,o,a,s),fo=e.dynCall_jjjjjjj=(n,i,o,a,s,f,p,g,y,v,C,S,I)=>(fo=e.dynCall_jjjjjjj=A.Ff)(n,i,o,a,s,f,p,g,y,v,C,S,I),po=e.dynCall_jjjjjj=(n,i,o,a,s,f,p,g,y,v,C)=>(po=e.dynCall_jjjjjj=A.Gf)(n,i,o,a,s,f,p,g,y,v,C),mo=e.dynCall_vijjjjiij=(n,i,o,a,s,f,p,g,y,v,C,S,I,$)=>(mo=e.dynCall_vijjjjiij=A.Hf)(n,i,o,a,s,f,p,g,y,v,C,S,I,$),ho=e.dynCall_viiiiijij=(n,i,o,a,s,f,p,g,y,v,C)=>(ho=e.dynCall_viiiiijij=A.If)(n,i,o,a,s,f,p,g,y,v,C),go=e.dynCall_viiiiiijij=(n,i,o,a,s,f,p,g,y,v,C,S)=>(go=e.dynCall_viiiiiijij=A.Jf)(n,i,o,a,s,f,p,g,y,v,C,S),yo=e.dynCall_vijiii=(n,i,o,a,s,f,p)=>(yo=e.dynCall_vijiii=A.Kf)(n,i,o,a,s,f,p),bo=e.dynCall_viiiiiiiiifi=(n,i,o,a,s,f,p,g,y,v,C,S)=>(bo=e.dynCall_viiiiiiiiifi=A.Lf)(n,i,o,a,s,f,p,g,y,v,C,S),vo=e.dynCall_viiijiiiiiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M)=>(vo=e.dynCall_viiijiiiiiiiii=A.Mf)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M),wo=e.dynCall_iiijiiii=(n,i,o,a,s,f,p,g,y)=>(wo=e.dynCall_iiijiiii=A.Nf)(n,i,o,a,s,f,p,g,y),Co=e.dynCall_viiiiiijjiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G)=>(Co=e.dynCall_viiiiiijjiiiii=A.Of)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G),$o=e.dynCall_viiiiiiijiiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G)=>($o=e.dynCall_viiiiiiijiiiiii=A.Pf)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G),xo=e.dynCall_vif=(n,i,o)=>(xo=e.dynCall_vif=A.Qf)(n,i,o),So=e.dynCall_viif=(n,i,o,a)=>(So=e.dynCall_viif=A.Rf)(n,i,o,a),_o=e.dynCall_viiiiiifii=(n,i,o,a,s,f,p,g,y,v)=>(_o=e.dynCall_viiiiiifii=A.Sf)(n,i,o,a,s,f,p,g,y,v),Ao=e.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se,je,De,Ve,Le)=>(Ao=e.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=A.Tf)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se,je,De,Ve,Le),Io=e.dynCall_viijji=(n,i,o,a,s,f,p,g)=>(Io=e.dynCall_viijji=A.Uf)(n,i,o,a,s,f,p,g),To=e.dynCall_iiiiiiiiiiiji=(n,i,o,a,s,f,p,g,y,v,C,S,I,$)=>(To=e.dynCall_iiiiiiiiiiiji=A.Vf)(n,i,o,a,s,f,p,g,y,v,C,S,I,$),Oo=e.dynCall_viifiifijjjii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G)=>(Oo=e.dynCall_viifiifijjjii=A.Wf)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G),Eo=e.dynCall_viiiiiiiiiiiiiiiiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve)=>(Eo=e.dynCall_viiiiiiiiiiiiiiiiiiii=A.Xf)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve),Po=e.dynCall_iif=(n,i,o)=>(Po=e.dynCall_iif=A.Yf)(n,i,o),Ro=e.dynCall_viiiiifiiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I)=>(Ro=e.dynCall_viiiiifiiiiii=A.Zf)(n,i,o,a,s,f,p,g,y,v,C,S,I),ko=e.dynCall_vijiiiiiiijjii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q)=>(ko=e.dynCall_vijiiiiiiijjii=A._f)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q),Bo=e.dynCall_iiiiid=(n,i,o,a,s,f)=>(Bo=e.dynCall_iiiiid=A.$f)(n,i,o,a,s,f),Mo=e.dynCall_viiiijjj=(n,i,o,a,s,f,p,g,y,v,C)=>(Mo=e.dynCall_viiiijjj=A.ag)(n,i,o,a,s,f,p,g,y,v,C),jo=e.dynCall_viiiiiiiiiiiiiiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se)=>(jo=e.dynCall_viiiiiiiiiiiiiiiiii=A.bg)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se),Do=e.dynCall_viiiiiiiiiiiiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q)=>(Do=e.dynCall_viiiiiiiiiiiiiiii=A.cg)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q),Wo=e.dynCall_viiiiiiiiiiiiiiiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge)=>(Wo=e.dynCall_viiiiiiiiiiiiiiiiiii=A.dg)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge),zo=e.dynCall_viiiiiiiiiiiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G)=>(zo=e.dynCall_viiiiiiiiiiiiiii=A.eg)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G),Go=e.dynCall_viiiiiiijjj=(n,i,o,a,s,f,p,g,y,v,C,S,I,$)=>(Go=e.dynCall_viiiiiiijjj=A.fg)(n,i,o,a,s,f,p,g,y,v,C,S,I,$),Vo=e.dynCall_iiiiiiiiiii=(n,i,o,a,s,f,p,g,y,v,C)=>(Vo=e.dynCall_iiiiiiiiiii=A.gg)(n,i,o,a,s,f,p,g,y,v,C),Uo=e.dynCall_iiiiiiiiiiiiiiiiiifi=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge)=>(Uo=e.dynCall_iiiiiiiiiiiiiiiiiifi=A.hg)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge),No=e.dynCall_viiif=(n,i,o,a,s)=>(No=e.dynCall_viiif=A.ig)(n,i,o,a,s),Fo=e.dynCall_iijjj=(n,i,o,a,s,f,p,g)=>(Fo=e.dynCall_iijjj=A.jg)(n,i,o,a,s,f,p,g),Ho=e.dynCall_viiiiji=(n,i,o,a,s,f,p,g)=>(Ho=e.dynCall_viiiiji=A.kg)(n,i,o,a,s,f,p,g),Lo=e.dynCall_iijjji=(n,i,o,a,s,f,p,g,y)=>(Lo=e.dynCall_iijjji=A.lg)(n,i,o,a,s,f,p,g,y),Ko=e.dynCall_ijijji=(n,i,o,a,s,f,p,g,y)=>(Ko=e.dynCall_ijijji=A.mg)(n,i,o,a,s,f,p,g,y),qo=e.dynCall_viiijjiii=(n,i,o,a,s,f,p,g,y,v,C)=>(qo=e.dynCall_viiijjiii=A.ng)(n,i,o,a,s,f,p,g,y,v,C),Yo=e.dynCall_iiiiijji=(n,i,o,a,s,f,p,g,y,v)=>(Yo=e.dynCall_iiiiijji=A.og)(n,i,o,a,s,f,p,g,y,v),Xo=e.dynCall_viji=(n,i,o,a,s)=>(Xo=e.dynCall_viji=A.pg)(n,i,o,a,s),Qo=e.dynCall_iiiifi=(n,i,o,a,s,f)=>(Qo=e.dynCall_iiiifi=A.qg)(n,i,o,a,s,f),Jo=e.dynCall_iiijii=(n,i,o,a,s,f,p)=>(Jo=e.dynCall_iiijii=A.rg)(n,i,o,a,s,f,p),Zo=e.dynCall_iiiiiiiiijii=(n,i,o,a,s,f,p,g,y,v,C,S,I)=>(Zo=e.dynCall_iiiiiiiiijii=A.sg)(n,i,o,a,s,f,p,g,y,v,C,S,I),ea=e.dynCall_iiiijjii=(n,i,o,a,s,f,p,g,y,v)=>(ea=e.dynCall_iiiijjii=A.tg)(n,i,o,a,s,f,p,g,y,v),ta=e.dynCall_iiiiiijjjii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$)=>(ta=e.dynCall_iiiiiijjjii=A.ug)(n,i,o,a,s,f,p,g,y,v,C,S,I,$),ra=e.dynCall_iiijiii=(n,i,o,a,s,f,p,g)=>(ra=e.dynCall_iiijiii=A.vg)(n,i,o,a,s,f,p,g),na=e.dynCall_iiiiiiiijjjfi=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G)=>(na=e.dynCall_iiiiiiiijjjfi=A.wg)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G),ia=e.dynCall_iijiiii=(n,i,o,a,s,f,p,g)=>(ia=e.dynCall_iijiiii=A.xg)(n,i,o,a,s,f,p,g),oa=e.dynCall_iijjjii=(n,i,o,a,s,f,p,g,y,v)=>(oa=e.dynCall_iijjjii=A.yg)(n,i,o,a,s,f,p,g,y,v),aa=e.dynCall_iiji=(n,i,o,a,s)=>(aa=e.dynCall_iiji=A.zg)(n,i,o,a,s),sa=e.dynCall_viiijiiiii=(n,i,o,a,s,f,p,g,y,v,C)=>(sa=e.dynCall_viiijiiiii=A.Ag)(n,i,o,a,s,f,p,g,y,v,C),ua=e.dynCall_iid=(n,i,o)=>(ua=e.dynCall_iid=A.Bg)(n,i,o),la=e.dynCall_iiif=(n,i,o,a)=>(la=e.dynCall_iiif=A.Cg)(n,i,o,a),ca=e.dynCall_vidi=(n,i,o,a)=>(ca=e.dynCall_vidi=A.Dg)(n,i,o,a),da=e.dynCall_vjiii=(n,i,o,a,s,f)=>(da=e.dynCall_vjiii=A.Eg)(n,i,o,a,s,f),fa=e.dynCall_iiiij=(n,i,o,a,s,f)=>(fa=e.dynCall_iiiij=A.Fg)(n,i,o,a,s,f),pa=e.dynCall_viiijii=(n,i,o,a,s,f,p,g)=>(pa=e.dynCall_viiijii=A.Gg)(n,i,o,a,s,f,p,g),ma=e.dynCall_viijiiiiiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$)=>(ma=e.dynCall_viijiiiiiiiii=A.Hg)(n,i,o,a,s,f,p,g,y,v,C,S,I,$),ha=e.dynCall_viiij=(n,i,o,a,s,f)=>(ha=e.dynCall_viiij=A.Ig)(n,i,o,a,s,f),ga=e.dynCall_fiiii=(n,i,o,a,s)=>(ga=e.dynCall_fiiii=A.Jg)(n,i,o,a,s),ya=e.dynCall_jfi=(n,i,o)=>(ya=e.dynCall_jfi=A.Kg)(n,i,o),ba=e.dynCall_viiiiiiiiiiiiii=(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M)=>(ba=e.dynCall_viiiiiiiiiiiiii=A.Lg)(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M),va=e.dynCall_jiij=(n,i,o,a,s)=>(va=e.dynCall_jiij=A.Mg)(n,i,o,a,s),wa=e.dynCall_fiii=(n,i,o,a)=>(wa=e.dynCall_fiii=A.Ng)(n,i,o,a),Ca=n=>(Ca=A.Og)(n),$a=()=>($a=A.Pg)(),xa=n=>(xa=A.Qg)(n),Sa=()=>(Sa=A.Rg)();e.___start_em_js=1323794,e.___stop_em_js=1323955;function yc(n,i,o,a){var s=z();try{return er(n,i,o,a)}catch(f){if(D(s),f!==f+0)throw f;W(1,0)}}function bc(n,i,o){var a=z();try{return Ar(n,i,o)}catch(s){if(D(a),s!==s+0)throw s;W(1,0)}}function vc(n,i,o){var a=z();try{_r(n,i,o)}catch(s){if(D(a),s!==s+0)throw s;W(1,0)}}function wc(n,i){var o=z();try{return Cn(n,i)}catch(a){if(D(o),a!==a+0)throw a;W(1,0)}}function Cc(n,i){var o=z();try{Sr(n,i)}catch(a){if(D(o),a!==a+0)throw a;W(1,0)}}function $c(n){var i=z();try{tr(n)}catch(o){if(D(i),o!==o+0)throw o;W(1,0)}}function xc(n,i,o,a,s,f,p){var g=z();try{return ke(n,i,o,a,s,f,p)}catch(y){if(D(g),y!==y+0)throw y;W(1,0)}}function Sc(n,i,o,a,s,f){var p=z();try{return rr(n,i,o,a,s,f)}catch(g){if(D(p),g!==g+0)throw g;W(1,0)}}function _c(n,i,o,a,s){var f=z();try{return nr(n,i,o,a,s)}catch(p){if(D(f),p!==p+0)throw p;W(1,0)}}function Ac(n,i,o,a){var s=z();try{Tr(n,i,o,a)}catch(f){if(D(s),f!==f+0)throw f;W(1,0)}}function Ic(n,i,o,a,s){var f=z();try{Br(n,i,o,a,s)}catch(p){if(D(f),p!==p+0)throw p;W(1,0)}}function Tc(n){var i=z();try{return Er(n)}catch(o){if(D(i),o!==o+0)throw o;W(1,0)}}function Oc(n,i,o,a,s,f){var p=z();try{kr(n,i,o,a,s,f)}catch(g){if(D(p),g!==g+0)throw g;W(1,0)}}function Ec(n,i,o,a,s,f,p,g){var y=z();try{return Mr(n,i,o,a,s,f,p,g)}catch(v){if(D(y),v!==v+0)throw v;W(1,0)}}function Pc(n,i){var o=z();try{return xn(n,i)}catch(a){if(D(o),a!==a+0)throw a;W(1,0)}}function Rc(n,i){var o=z();try{return jt(n,i)}catch(a){if(D(o),a!==a+0)throw a;W(1,0)}}function kc(n,i,o,a,s,f,p,g,y){var v=z();try{return it(n,i,o,a,s,f,p,g,y)}catch(C){if(D(v),C!==C+0)throw C;W(1,0)}}function Bc(n,i,o,a,s,f,p){var g=z();try{Dt(n,i,o,a,s,f,p)}catch(y){if(D(g),y!==y+0)throw y;W(1,0)}}function Mc(n,i,o,a,s,f,p,g){var y=z();try{zr(n,i,o,a,s,f,p,g)}catch(v){if(D(y),v!==v+0)throw v;W(1,0)}}function jc(n,i,o,a,s,f,p,g,y,v){var C=z();try{return An(n,i,o,a,s,f,p,g,y,v)}catch(S){if(D(C),S!==S+0)throw S;W(1,0)}}function Dc(n,i,o,a,s,f,p,g,y){var v=z();try{ir(n,i,o,a,s,f,p,g,y)}catch(C){if(D(v),C!==C+0)throw C;W(1,0)}}function Wc(n,i,o,a,s,f,p,g,y,v){var C=z();try{Pn(n,i,o,a,s,f,p,g,y,v)}catch(S){if(D(C),S!==S+0)throw S;W(1,0)}}function zc(n,i,o,a){var s=z();try{Rn(n,i,o,a)}catch(f){if(D(s),f!==f+0)throw f;W(1,0)}}function Gc(n,i,o,a,s,f,p,g,y,v,C,S){var I=z();try{return Bn(n,i,o,a,s,f,p,g,y,v,C,S)}catch($){if(D(I),$!==$+0)throw $;W(1,0)}}function Vc(n,i,o,a,s,f,p,g,y,v,C,S,I,$){var M=z();try{Wt(n,i,o,a,s,f,p,g,y,v,C,S,I,$)}catch(G){if(D(M),G!==G+0)throw G;W(1,0)}}function Uc(n,i,o,a,s,f,p){var g=z();try{Vr(n,i,o,a,s,f,p)}catch(y){if(D(g),y!==y+0)throw y;W(1,0)}}function Nc(n,i,o,a,s,f,p){var g=z();try{ar(n,i,o,a,s,f,p)}catch(y){if(D(g),y!==y+0)throw y;W(1,0)}}function Fc(n,i,o,a,s,f,p,g,y,v,C){var S=z();try{sr(n,i,o,a,s,f,p,g,y,v,C)}catch(I){if(D(S),I!==I+0)throw I;W(1,0)}}function Hc(n,i,o,a,s){var f=z();try{ur(n,i,o,a,s)}catch(p){if(D(f),p!==p+0)throw p;W(1,0)}}function Lc(n,i,o,a,s){var f=z();try{return ga(n,i,o,a,s)}catch(p){if(D(f),p!==p+0)throw p;W(1,0)}}function Kc(n,i,o,a,s,f,p,g,y,v,C,S,I,$){var M=z();try{E(n,i,o,a,s,f,p,g,y,v,C,S,I,$)}catch(G){if(D(M),G!==G+0)throw G;W(1,0)}}function qc(n,i,o,a,s){var f=z();try{b(n,i,o,a,s)}catch(p){if(D(f),p!==p+0)throw p;W(1,0)}}function Yc(n,i,o,a,s,f,p){var g=z();try{x(n,i,o,a,s,f,p)}catch(y){if(D(g),y!==y+0)throw y;W(1,0)}}function Xc(n,i,o,a,s){var f=z();try{Qr(n,i,o,a,s)}catch(p){if(D(f),p!==p+0)throw p;W(1,0)}}function Qc(n,i,o,a,s,f,p,g){var y=z();try{c(n,i,o,a,s,f,p,g)}catch(v){if(D(y),v!==v+0)throw v;W(1,0)}}function Jc(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q){var te=z();try{return F(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q)}catch(se){if(D(te),se!==se+0)throw se;W(1,0)}}function Zc(n,i,o,a,s,f,p,g,y,v,C,S,I){var $=z();try{J(n,i,o,a,s,f,p,g,y,v,C,S,I)}catch(M){if(D($),M!==M+0)throw M;W(1,0)}}function ed(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge){var ve=z();try{return de(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge)}catch(we){if(D(ve),we!==we+0)throw we;W(1,0)}}function td(n,i,o,a,s,f,p,g,y,v,C){var S=z();try{xe(n,i,o,a,s,f,p,g,y,v,C)}catch(I){if(D(S),I!==I+0)throw I;W(1,0)}}function rd(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q){var te=z();try{Jr(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q)}catch(se){if(D(te),se!==se+0)throw se;W(1,0)}}function nd(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G){var q=z();try{Fi(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G)}catch(te){if(D(q),te!==te+0)throw te;W(1,0)}}function id(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M){var G=z();try{Hi(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M)}catch(q){if(D(G),q!==q+0)throw q;W(1,0)}}function od(n,i,o,a,s,f,p){var g=z();try{return N(n,i,o,a,s,f,p)}catch(y){if(D(g),y!==y+0)throw y;W(1,0)}}function ad(n,i,o,a,s){var f=z();try{to(n,i,o,a,s)}catch(p){if(D(f),p!==p+0)throw p;W(1,0)}}function sd(n,i,o,a,s,f,p,g,y,v,C,S){var I=z();try{bo(n,i,o,a,s,f,p,g,y,v,C,S)}catch($){if(D(I),$!==$+0)throw $;W(1,0)}}function ud(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M){var G=z();try{ba(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M)}catch(q){if(D(G),q!==q+0)throw q;W(1,0)}}function ld(n,i,o){var a=z();try{xo(n,i,o)}catch(s){if(D(a),s!==s+0)throw s;W(1,0)}}function cd(n,i,o,a,s,f,p,g,y,v){var C=z();try{_o(n,i,o,a,s,f,p,g,y,v)}catch(S){if(D(C),S!==S+0)throw S;W(1,0)}}function dd(n,i,o,a,s,f,p,g,y,v,C,S){var I=z();try{zt(n,i,o,a,s,f,p,g,y,v,C,S)}catch($){if(D(I),$!==$+0)throw $;W(1,0)}}function fd(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve){var we=z();try{Eo(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve)}catch(Se){if(D(we),Se!==Se+0)throw Se;W(1,0)}}function pd(n,i,o){var a=z();try{return Po(n,i,o)}catch(s){if(D(a),s!==s+0)throw s;W(1,0)}}function md(n,i,o,a,s,f,p,g,y,v,C,S,I){var $=z();try{Ro(n,i,o,a,s,f,p,g,y,v,C,S,I)}catch(M){if(D($),M!==M+0)throw M;W(1,0)}}function hd(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q){var te=z();try{Do(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q)}catch(se){if(D(te),se!==se+0)throw se;W(1,0)}}function gd(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge){var ve=z();try{Wo(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge)}catch(we){if(D(ve),we!==we+0)throw we;W(1,0)}}function yd(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se){var ge=z();try{jo(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se)}catch(ve){if(D(ge),ve!==ve+0)throw ve;W(1,0)}}function bd(n,i,o,a,s,f,p,g,y,v,C){var S=z();try{return Vo(n,i,o,a,s,f,p,g,y,v,C)}catch(I){if(D(S),I!==I+0)throw I;W(1,0)}}function vd(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge){var ve=z();try{return Uo(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge)}catch(we){if(D(ve),we!==we+0)throw we;W(1,0)}}function wd(n,i,o,a,s){var f=z();try{No(n,i,o,a,s)}catch(p){if(D(f),p!==p+0)throw p;W(1,0)}}function Cd(n,i,o,a,s,f,p,g,y,v,C,S){var I=z();try{Nr(n,i,o,a,s,f,p,g,y,v,C,S)}catch($){if(D(I),$!==$+0)throw $;W(1,0)}}function $d(n,i,o,a){var s=z();try{So(n,i,o,a)}catch(f){if(D(s),f!==f+0)throw f;W(1,0)}}function xd(n,i,o,a,s,f){var p=z();try{return Qo(n,i,o,a,s,f)}catch(g){if(D(p),g!==g+0)throw g;W(1,0)}}function Sd(n,i,o){var a=z();try{return ua(n,i,o)}catch(s){if(D(a),s!==s+0)throw s;W(1,0)}}function _d(n,i,o,a){var s=z();try{return la(n,i,o,a)}catch(f){if(D(s),f!==f+0)throw f;W(1,0)}}function Ad(n,i,o,a){var s=z();try{ca(n,i,o,a)}catch(f){if(D(s),f!==f+0)throw f;W(1,0)}}function Id(n,i,o,a){var s=z();try{return wa(n,i,o,a)}catch(f){if(D(s),f!==f+0)throw f;W(1,0)}}function Td(n,i,o,a,s,f){var p=z();try{return Bo(n,i,o,a,s,f)}catch(g){if(D(p),g!==g+0)throw g;W(1,0)}}function Od(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G){var q=z();try{zo(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G)}catch(te){if(D(q),te!==te+0)throw te;W(1,0)}}function Ed(n,i,o){var a=z();try{return Sn(n,i,o)}catch(s){if(D(a),s!==s+0)throw s;W(1,0)}}function Pd(n,i,o){var a=z();try{return pt(n,i,o)}catch(s){if(D(a),s!==s+0)throw s;W(1,0)}}function Rd(n,i,o,a,s){var f=z();try{return Ir(n,i,o,a,s)}catch(p){if(D(f),p!==p+0)throw p;W(1,0)}}function kd(n,i,o,a){var s=z();try{return Pr(n,i,o,a)}catch(f){if(D(s),f!==f+0)throw f;W(1,0)}}function Bd(n,i,o,a){var s=z();try{$n(n,i,o,a)}catch(f){if(D(s),f!==f+0)throw f;W(1,0)}}function Md(n,i){var o=z();try{return jr(n,i)}catch(a){if(D(o),a!==a+0)throw a;W(1,0)}}function jd(n,i,o,a,s){var f=z();try{Dr(n,i,o,a,s)}catch(p){if(D(f),p!==p+0)throw p;W(1,0)}}function Dd(n,i,o,a,s,f){var p=z();try{Wr(n,i,o,a,s,f)}catch(g){if(D(p),g!==g+0)throw g;W(1,0)}}function Wd(n,i,o,a,s,f,p,g){var y=z();try{pa(n,i,o,a,s,f,p,g)}catch(v){if(D(y),v!==v+0)throw v;W(1,0)}}function zd(n,i,o,a,s,f,p){var g=z();try{Te(n,i,o,a,s,f,p)}catch(y){if(D(g),y!==y+0)throw y;W(1,0)}}function Gd(n,i,o,a,s,f,p,g,y,v,C,S){var I=z();try{return In(n,i,o,a,s,f,p,g,y,v,C,S)}catch($){if(D(I),$!==$+0)throw $;W(1,0)}}function Vd(n,i,o,a,s,f,p,g){var y=z();try{On(n,i,o,a,s,f,p,g)}catch(v){if(D(y),v!==v+0)throw v;W(1,0)}}function Ud(n,i,o,a,s,f,p,g){var y=z();try{En(n,i,o,a,s,f,p,g)}catch(v){if(D(y),v!==v+0)throw v;W(1,0)}}function Nd(n,i,o){var a=z();try{return _n(n,i,o)}catch(s){if(D(a),s!==s+0)throw s;W(1,0)}}function Fd(n,i,o,a,s,f,p,g,y,v){var C=z();try{return kn(n,i,o,a,s,f,p,g,y,v)}catch(S){if(D(C),S!==S+0)throw S;W(1,0)}}function Hd(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M){var G=z();try{or(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M)}catch(q){if(D(G),q!==q+0)throw q;W(1,0)}}function Ld(n,i,o,a,s,f,p,g,y,v,C,S,I){var $=z();try{Gr(n,i,o,a,s,f,p,g,y,v,C,S,I)}catch(M){if(D($),M!==M+0)throw M;W(1,0)}}function Kd(n,i,o,a,s,f){var p=z();try{Tn(n,i,o,a,s,f)}catch(g){if(D(p),g!==g+0)throw g;W(1,0)}}function qd(n,i,o,a,s,f,p,g,y,v,C,S){var I=z();try{Ur(n,i,o,a,s,f,p,g,y,v,C,S)}catch($){if(D(I),$!==$+0)throw $;W(1,0)}}function Yd(n,i,o,a,s,f,p,g,y){var v=z();try{Fr(n,i,o,a,s,f,p,g,y)}catch(C){if(D(v),C!==C+0)throw C;W(1,0)}}function Xd(n,i,o,a){var s=z();try{return Hr(n,i,o,a)}catch(f){if(D(s),f!==f+0)throw f;W(1,0)}}function Qd(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se,je,De,Ve,Le,ot,at){var Vt=z();try{lr(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se,je,De,Ve,Le,ot,at)}catch(Ut){if(D(Vt),Ut!==Ut+0)throw Ut;W(1,0)}}function Jd(n,i,o,a,s,f,p){var g=z();try{Lr(n,i,o,a,s,f,p)}catch(y){if(D(g),y!==y+0)throw y;W(1,0)}}function Zd(n,i,o,a,s,f,p,g,y,v,C,S,I){var $=z();try{Kr(n,i,o,a,s,f,p,g,y,v,C,S,I)}catch(M){if(D($),M!==M+0)throw M;W(1,0)}}function ef(n,i,o,a,s,f){var p=z();try{return qr(n,i,o,a,s,f)}catch(g){if(D(p),g!==g+0)throw g;W(1,0)}}function tf(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M){var G=z();try{return Yr(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M)}catch(q){if(D(G),q!==q+0)throw q;W(1,0)}}function rf(n,i,o){var a=z();try{Xr(n,i,o)}catch(s){if(D(a),s!==s+0)throw s;W(1,0)}}function nf(n,i,o,a,s){var f=z();try{return Mn(n,i,o,a,s)}catch(p){if(D(f),p!==p+0)throw p;W(1,0)}}function of(n,i,o,a,s,f,p,g,y,v,C){var S=z();try{return Gt(n,i,o,a,s,f,p,g,y,v,C)}catch(I){if(D(S),I!==I+0)throw I;W(1,0)}}function af(n,i,o,a,s,f,p,g,y,v,C,S,I){var $=z();try{V(n,i,o,a,s,f,p,g,y,v,C,S,I)}catch(M){if(D($),M!==M+0)throw M;W(1,0)}}function sf(n,i,o){var a=z();try{return pe(n,i,o)}catch(s){if(D(a),s!==s+0)throw s;W(1,0)}}function uf(n,i,o,a,s,f,p,g,y,v,C,S){var I=z();try{ce(n,i,o,a,s,f,p,g,y,v,C,S)}catch($){if(D(I),$!==$+0)throw $;W(1,0)}}function lf(n,i,o,a,s,f,p,g,y,v){var C=z();try{return me(n,i,o,a,s,f,p,g,y,v)}catch(S){if(D(C),S!==S+0)throw S;W(1,0)}}function cf(n,i,o,a,s,f,p,g,y){var v=z();try{return _e(n,i,o,a,s,f,p,g,y)}catch(C){if(D(v),C!==C+0)throw C;W(1,0)}}function df(n,i,o,a,s,f,p){var g=z();try{be(n,i,o,a,s,f,p)}catch(y){if(D(g),y!==y+0)throw y;W(1,0)}}function ff(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se,je){var De=z();try{wt(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se,je)}catch(Ve){if(D(De),Ve!==Ve+0)throw Ve;W(1,0)}}function pf(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se,je,De,Ve,Le,ot,at){var Vt=z();try{Li(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se,je,De,Ve,Le,ot,at)}catch(Ut){if(D(Vt),Ut!==Ut+0)throw Ut;W(1,0)}}function mf(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se,je,De){var Ve=z();try{Ki(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se,je,De)}catch(Le){if(D(Ve),Le!==Le+0)throw Le;W(1,0)}}function hf(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se){var je=z();try{qi(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se)}catch(De){if(D(je),De!==De+0)throw De;W(1,0)}}function gf(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se,je,De,Ve,Le,ot){var at=z();try{Yi(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se,je,De,Ve,Le,ot)}catch(Vt){if(D(at),Vt!==Vt+0)throw Vt;W(1,0)}}function yf(n,i,o,a,s,f,p,g,y,v,C,S){var I=z();try{Xi(n,i,o,a,s,f,p,g,y,v,C,S)}catch($){if(D(I),$!==$+0)throw $;W(1,0)}}function bf(n,i,o,a,s,f,p,g,y,v,C,S){var I=z();try{Qi(n,i,o,a,s,f,p,g,y,v,C,S)}catch($){if(D(I),$!==$+0)throw $;W(1,0)}}function vf(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve){var we=z();try{Ji(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve)}catch(Se){if(D(we),Se!==Se+0)throw Se;W(1,0)}}function wf(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M){var G=z();try{Zi(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M)}catch(q){if(D(G),q!==q+0)throw q;W(1,0)}}function Cf(n,i,o,a,s,f,p,g,y,v,C,S,I){var $=z();try{eo(n,i,o,a,s,f,p,g,y,v,C,S,I)}catch(M){if(D($),M!==M+0)throw M;W(1,0)}}function $f(n,i,o){var a=z();try{return ya(n,i,o)}catch(s){if(D(a),s!==s+0)throw s;W(1,0)}}function xf(n,i,o,a,s,f,p,g){var y=z();try{return ro(n,i,o,a,s,f,p,g)}catch(v){if(D(y),v!==v+0)throw v;W(1,0)}}function Sf(n,i,o,a,s,f,p,g){var y=z();try{no(n,i,o,a,s,f,p,g)}catch(v){if(D(y),v!==v+0)throw v;W(1,0)}}function _f(n,i,o,a,s,f,p,g,y,v,C,S){var I=z();try{io(n,i,o,a,s,f,p,g,y,v,C,S)}catch($){if(D(I),$!==$+0)throw $;W(1,0)}}function Af(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M){var G=z();try{oo(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M)}catch(q){if(D(G),q!==q+0)throw q;W(1,0)}}function If(n,i,o,a,s,f,p){var g=z();try{return ao(n,i,o,a,s,f,p)}catch(y){if(D(g),y!==y+0)throw y;W(1,0)}}function Tf(n,i,o,a,s,f,p,g,y,v,C,S,I,$){var M=z();try{so(n,i,o,a,s,f,p,g,y,v,C,S,I,$)}catch(G){if(D(M),G!==G+0)throw G;W(1,0)}}function Of(n,i,o,a,s,f,p,g,y){var v=z();try{uo(n,i,o,a,s,f,p,g,y)}catch(C){if(D(v),C!==C+0)throw C;W(1,0)}}function Ef(n,i,o,a,s,f,p,g,y,v){var C=z();try{lo(n,i,o,a,s,f,p,g,y,v)}catch(S){if(D(C),S!==S+0)throw S;W(1,0)}}function Pf(n,i,o,a,s){var f=z();try{return co(n,i,o,a,s)}catch(p){if(D(f),p!==p+0)throw p;W(1,0)}}function Rf(n,i,o,a,s,f,p,g,y,v,C){var S=z();try{return po(n,i,o,a,s,f,p,g,y,v,C)}catch(I){if(D(S),I!==I+0)throw I;W(1,0)}}function kf(n,i,o,a,s,f,p,g,y,v,C,S,I){var $=z();try{return fo(n,i,o,a,s,f,p,g,y,v,C,S,I)}catch(M){if(D($),M!==M+0)throw M;W(1,0)}}function Bf(n,i,o,a,s,f,p,g,y,v,C,S,I,$){var M=z();try{mo(n,i,o,a,s,f,p,g,y,v,C,S,I,$)}catch(G){if(D(M),G!==G+0)throw G;W(1,0)}}function Mf(n,i,o,a,s,f,p,g,y,v,C){var S=z();try{ho(n,i,o,a,s,f,p,g,y,v,C)}catch(I){if(D(S),I!==I+0)throw I;W(1,0)}}function jf(n,i,o,a,s,f,p,g,y,v,C,S){var I=z();try{go(n,i,o,a,s,f,p,g,y,v,C,S)}catch($){if(D(I),$!==$+0)throw $;W(1,0)}}function Df(n,i,o,a,s,f,p){var g=z();try{yo(n,i,o,a,s,f,p)}catch(y){if(D(g),y!==y+0)throw y;W(1,0)}}function Wf(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M){var G=z();try{vo(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M)}catch(q){if(D(G),q!==q+0)throw q;W(1,0)}}function zf(n,i,o,a,s,f,p,g,y){var v=z();try{return wo(n,i,o,a,s,f,p,g,y)}catch(C){if(D(v),C!==C+0)throw C;W(1,0)}}function Gf(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G){var q=z();try{Co(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G)}catch(te){if(D(q),te!==te+0)throw te;W(1,0)}}function Vf(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G){var q=z();try{$o(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G)}catch(te){if(D(q),te!==te+0)throw te;W(1,0)}}function Uf(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se,je,De,Ve,Le){var ot=z();try{Ao(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q,te,se,ge,ve,we,Se,je,De,Ve,Le)}catch(at){if(D(ot),at!==at+0)throw at;W(1,0)}}function Nf(n,i,o,a,s,f,p,g){var y=z();try{Io(n,i,o,a,s,f,p,g)}catch(v){if(D(y),v!==v+0)throw v;W(1,0)}}function Ff(n,i,o,a,s,f,p,g,y,v,C,S,I,$){var M=z();try{return To(n,i,o,a,s,f,p,g,y,v,C,S,I,$)}catch(G){if(D(M),G!==G+0)throw G;W(1,0)}}function Hf(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G){var q=z();try{Oo(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G)}catch(te){if(D(q),te!==te+0)throw te;W(1,0)}}function Lf(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q){var te=z();try{ko(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G,q)}catch(se){if(D(te),se!==se+0)throw se;W(1,0)}}function Kf(n,i,o,a,s,f,p,g,y,v,C){var S=z();try{Mo(n,i,o,a,s,f,p,g,y,v,C)}catch(I){if(D(S),I!==I+0)throw I;W(1,0)}}function qf(n,i,o,a,s,f,p,g,y,v,C,S,I,$){var M=z();try{Go(n,i,o,a,s,f,p,g,y,v,C,S,I,$)}catch(G){if(D(M),G!==G+0)throw G;W(1,0)}}function Yf(n,i,o,a,s,f,p,g){var y=z();try{return Fo(n,i,o,a,s,f,p,g)}catch(v){if(D(y),v!==v+0)throw v;W(1,0)}}function Xf(n,i,o,a,s){var f=z();try{return va(n,i,o,a,s)}catch(p){if(D(f),p!==p+0)throw p;W(1,0)}}function Qf(n,i,o,a,s,f,p,g){var y=z();try{Ho(n,i,o,a,s,f,p,g)}catch(v){if(D(y),v!==v+0)throw v;W(1,0)}}function Jf(n,i,o,a,s,f,p,g,y){var v=z();try{return Lo(n,i,o,a,s,f,p,g,y)}catch(C){if(D(v),C!==C+0)throw C;W(1,0)}}function Zf(n,i,o,a,s,f,p,g,y){var v=z();try{return Ko(n,i,o,a,s,f,p,g,y)}catch(C){if(D(v),C!==C+0)throw C;W(1,0)}}function ep(n,i,o,a,s,f,p,g,y,v,C){var S=z();try{qo(n,i,o,a,s,f,p,g,y,v,C)}catch(I){if(D(S),I!==I+0)throw I;W(1,0)}}function tp(n,i,o,a,s,f,p,g,y,v){var C=z();try{return Yo(n,i,o,a,s,f,p,g,y,v)}catch(S){if(D(C),S!==S+0)throw S;W(1,0)}}function rp(n,i,o,a,s){var f=z();try{Xo(n,i,o,a,s)}catch(p){if(D(f),p!==p+0)throw p;W(1,0)}}function np(n,i,o,a,s,f,p){var g=z();try{return Jo(n,i,o,a,s,f,p)}catch(y){if(D(g),y!==y+0)throw y;W(1,0)}}function ip(n,i,o,a,s,f,p,g,y,v,C,S,I){var $=z();try{return Zo(n,i,o,a,s,f,p,g,y,v,C,S,I)}catch(M){if(D($),M!==M+0)throw M;W(1,0)}}function op(n,i,o,a,s,f,p,g,y,v){var C=z();try{return ea(n,i,o,a,s,f,p,g,y,v)}catch(S){if(D(C),S!==S+0)throw S;W(1,0)}}function ap(n,i,o,a,s,f,p,g,y,v,C,S,I,$){var M=z();try{return ta(n,i,o,a,s,f,p,g,y,v,C,S,I,$)}catch(G){if(D(M),G!==G+0)throw G;W(1,0)}}function sp(n,i,o,a,s,f,p,g){var y=z();try{return ra(n,i,o,a,s,f,p,g)}catch(v){if(D(y),v!==v+0)throw v;W(1,0)}}function up(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G){var q=z();try{return na(n,i,o,a,s,f,p,g,y,v,C,S,I,$,M,G)}catch(te){if(D(q),te!==te+0)throw te;W(1,0)}}function lp(n,i,o,a,s,f,p,g){var y=z();try{return ia(n,i,o,a,s,f,p,g)}catch(v){if(D(y),v!==v+0)throw v;W(1,0)}}function cp(n,i,o,a,s,f,p,g,y,v){var C=z();try{return oa(n,i,o,a,s,f,p,g,y,v)}catch(S){if(D(C),S!==S+0)throw S;W(1,0)}}function dp(n,i,o,a,s){var f=z();try{return aa(n,i,o,a,s)}catch(p){if(D(f),p!==p+0)throw p;W(1,0)}}function fp(n,i,o,a,s,f,p,g,y,v,C){var S=z();try{sa(n,i,o,a,s,f,p,g,y,v,C)}catch(I){if(D(S),I!==I+0)throw I;W(1,0)}}function pp(n,i,o,a,s,f){var p=z();try{ha(n,i,o,a,s,f)}catch(g){if(D(p),g!==g+0)throw g;W(1,0)}}function mp(n,i,o,a,s,f,p,g,y,v,C,S,I,$){var M=z();try{ma(n,i,o,a,s,f,p,g,y,v,C,S,I,$)}catch(G){if(D(M),G!==G+0)throw G;W(1,0)}}function hp(n,i,o,a,s,f){var p=z();try{da(n,i,o,a,s,f)}catch(g){if(D(p),g!==g+0)throw g;W(1,0)}}function gp(n,i,o,a,s,f){var p=z();try{return fa(n,i,o,a,s,f)}catch(g){if(D(p),g!==g+0)throw g;W(1,0)}}function yp(n){var i=z();try{return Or(n)}catch(o){if(D(i),o!==o+0)throw o;W(1,0)}}function bp(n,i,o,a,s,f,p){var g=z();try{return Rr(n,i,o,a,s,f,p)}catch(y){if(D(g),y!==y+0)throw y;W(1,0)}}function vp(n){n=Object.assign({},n);var i=a=>()=>a()>>>0,o=a=>s=>a(s)>>>0;return n.__errno_location=i(n.__errno_location),n.malloc=o(n.malloc),n.stackSave=i(n.stackSave),n.stackAlloc=o(n.stackAlloc),n}e.stackAlloc=Mt,e.stackSave=z,e.stackRestore=D,e.UTF8ToString=ct,e.stringToUTF8=(n,i,o)=>bt(n,Ce,i,o),e.lengthBytesUTF8=mr;var jn;gt=function n(){jn||_a(),jn||(gt=n)};function _a(){function n(){if(!jn&&(jn=!0,e.calledRun=!0,!Z)){if(ut(Ze),d(e),e.onRuntimeInitialized&&e.onRuntimeInitialized(),e.postRun)for(typeof e.postRun==\"function\"&&(e.postRun=[e.postRun]);e.postRun.length;){var i=e.postRun.shift();Ie.unshift(i)}ut(Ie)}}if(!(0<Ee)){if(e.preRun)for(typeof e.preRun==\"function\"&&(e.preRun=[e.preRun]);e.preRun.length;)He();ut(ae),0<Ee||(e.setStatus?(e.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){e.setStatus(\"\")},1),n()},1)):n())}}if(e.preInit)for(typeof e.preInit==\"function\"&&(e.preInit=[e.preInit]);0<e.preInit.length;)e.preInit.pop()();return _a(),r.ready}})();typeof Ia==\"object\"&&typeof pi==\"object\"?pi.exports=Aa:typeof define==\"function\"&&define.amd&&define([],()=>Aa)});var Oa=Zr(()=>{});var Ea=Zr(()=>{});var Pa={};Dn(Pa,{cpus:()=>Ap});var Ap,Ra=oe(()=>{Ap=void 0});var Ma=Zr((Ba,mi)=>{\"use strict\";var ka=(()=>{var t=typeof document<\"u\"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<\"u\"&&(t=t||__filename),function(r={}){function e(){return ue.buffer!=Ee.buffer&&ee(),Ee}function d(){return ue.buffer!=Ee.buffer&&ee(),qe}function l(){return ue.buffer!=Ee.buffer&&ee(),gt}function m(){return ue.buffer!=Ee.buffer&&ee(),Je}function h(){return ue.buffer!=Ee.buffer&&ee(),_t}var u=r,w,_;u.ready=new Promise((c,b)=>{w=c,_=b}),u.jsepInit=(c,b,x,E,V,F,J,pe)=>{u.Qb=c,u.wb=b,u.yb=x,u.jb=E,u.xb=V,u.Ea=F,u.zb=J,u.Ab=pe,b=(de,ce,me)=>(...xe)=>{let _e=it,N=ce?.();xe=de(...xe);let be=ce?.();return N!==be&&(de=be,me(N),ce=me=null),it!=_e?Tn():xe},x=de=>async(...ce)=>{try{if(u.bb)throw Error(\"Session already started\");let me=u.bb={Fb:ce[0],errors:[]},xe=await de(...ce);if(u.bb!==me)throw Error(\"Session mismatch\");c.flush();let _e=me.errors;if(0<_e.length){let N=await Promise.all(_e);if(N=N.filter(be=>be),0<N.length)throw Error(N.join(`\n`))}return xe}finally{u.bb=null}},u._OrtRun=x(b(u._OrtRun,()=>u._OrtRun,de=>u._OrtRun=de)),u._OrtRunWithBinding=x(b(u._OrtRunWithBinding,()=>u._OrtRunWithBinding,de=>u._OrtRunWithBinding=de)),u._OrtBindInput=b(u._OrtBindInput,()=>u._OrtBindInput,de=>u._OrtBindInput=de),u.jsepRegisterBuffer=(de,ce,me,xe)=>c.registerBuffer(de,ce,me,xe),u.jsepUnregisterBuffers=de=>{c.unregisterBuffers(de)},u.jsepGetBuffer=de=>c.getBuffer(de),u.jsepCreateDownloader=(de,ce,me)=>c.createDownloader(de,ce,me)};var O=Object.assign({},u),j=\"./this.program\",B=(c,b)=>{throw b},P=typeof window==\"object\",R=typeof importScripts==\"function\",T=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\",k=u.ENVIRONMENT_IS_PTHREAD||!1,U=\"\";function K(c){return u.locateFile?u.locateFile(c,U):U+c}var Q,L,X;if(T){var A=(ci(),cr(li)),Z=(fi(),cr(di));U=R?Z.dirname(U)+\"/\":__dirname+\"/\",Q=(b,x)=>(b=b.startsWith(\"file://\")?new URL(b):Z.normalize(b),A.readFileSync(b,x?void 0:\"utf8\")),X=b=>(b=Q(b,!0),b.buffer||(b=new Uint8Array(b)),b),L=(b,x,E,V=!0)=>{b=b.startsWith(\"file://\")?new URL(b):Z.normalize(b),A.readFile(b,V?void 0:\"utf8\",(F,J)=>{F?E(F):x(V?J.buffer:J)})},!u.thisProgram&&1<process.argv.length&&(j=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),B=(b,x)=>{throw process.exitCode=b,x},u.inspect=()=>\"[Emscripten Module object]\";let c;try{c=Oa()}catch(b){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),b}global.Worker=c.Worker}else(P||R)&&(R?U=self.location.href:typeof document<\"u\"&&document.currentScript&&(U=document.currentScript.src),typeof t<\"u\"&&t&&(U=t),U.indexOf(\"blob:\")!==0?U=U.substr(0,U.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):U=\"\",T||(Q=c=>{var b=new XMLHttpRequest;return b.open(\"GET\",c,!1),b.send(null),b.responseText},R&&(X=c=>{var b=new XMLHttpRequest;return b.open(\"GET\",c,!1),b.responseType=\"arraybuffer\",b.send(null),new Uint8Array(b.response)}),L=(c,b,x)=>{var E=new XMLHttpRequest;E.open(\"GET\",c,!0),E.responseType=\"arraybuffer\",E.onload=()=>{E.status==200||E.status==0&&E.response?b(E.response):x()},E.onerror=x,E.send(null)}));T&&typeof performance>\"u\"&&(global.performance=Ea().performance);var re=console.log.bind(console),ie=console.error.bind(console);T&&(re=(...c)=>A.writeSync(1,c.join(\" \")+`\n`),ie=(...c)=>A.writeSync(2,c.join(\" \")+`\n`));var Ce=u.print||re,H=u.printErr||ie;Object.assign(u,O),O=null,u.thisProgram&&(j=u.thisProgram),u.quit&&(B=u.quit);var le;u.wasmBinary&&(le=u.wasmBinary);var Be=u.noExitRuntime||!0;typeof WebAssembly!=\"object\"&&Ye(\"no native wasm support detected\");var ue,ae,Ze,Ie=!1,He,Ee,qe,gt,Je,_t;function ee(){var c=ue.buffer;u.HEAP8=Ee=new Int8Array(c),u.HEAP16=new Int16Array(c),u.HEAP32=gt=new Int32Array(c),u.HEAPU8=qe=new Uint8Array(c),u.HEAPU16=new Uint16Array(c),u.HEAPU32=Je=new Uint32Array(c),u.HEAPF32=new Float32Array(c),u.HEAPF64=_t=new Float64Array(c)}var $e=u.INITIAL_MEMORY||16777216;if(5242880<=$e||Ye(\"INITIAL_MEMORY should be larger than STACK_SIZE, was \"+$e+\"! (STACK_SIZE=5242880)\"),k)ue=u.wasmMemory;else if(u.wasmMemory)ue=u.wasmMemory;else if(ue=new WebAssembly.Memory({initial:$e/65536,maximum:65536,shared:!0}),!(ue.buffer instanceof SharedArrayBuffer))throw H(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),T&&H(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)\"),Error(\"bad memory\");ee(),$e=ue.buffer.byteLength;var Oe=[],et=[],tt=[],Ge=0;function Me(){return Be||0<Ge}var rt=0,yt=null,ut=null;function Ot(){rt++,u.monitorRunDependencies&&u.monitorRunDependencies(rt)}function Et(){if(rt--,u.monitorRunDependencies&&u.monitorRunDependencies(rt),rt==0&&(yt!==null&&(clearInterval(yt),yt=null),ut)){var c=ut;ut=null,c()}}function Ye(c){throw u.onAbort&&u.onAbort(c),c=\"Aborted(\"+c+\")\",H(c),Ie=!0,He=1,c=new WebAssembly.RuntimeError(c+\". Build with -sASSERTIONS for more info.\"),_(c),c}function Lt(c){return c.startsWith(\"data:application/octet-stream;base64,\")}var lt;lt=\"ort-wasm-simd-threaded.wasm\",Lt(lt)||(lt=K(lt));function pr(c){if(c==lt&&le)return new Uint8Array(le);if(X)return X(c);throw\"both async and sync fetching of the wasm failed\"}function dn(c){if(!le&&(P||R)){if(typeof fetch==\"function\"&&!c.startsWith(\"file://\"))return fetch(c,{credentials:\"same-origin\"}).then(b=>{if(!b.ok)throw\"failed to load wasm binary file at '\"+c+\"'\";return b.arrayBuffer()}).catch(()=>pr(c));if(L)return new Promise((b,x)=>{L(c,E=>b(new Uint8Array(E)),x)})}return Promise.resolve().then(()=>pr(c))}function ct(c,b,x){return dn(c).then(E=>WebAssembly.instantiate(E,b)).then(E=>E).then(x,E=>{H(\"failed to asynchronously prepare wasm: \"+E),Ye(E)})}function mr(c,b){var x=lt;return le||typeof WebAssembly.instantiateStreaming!=\"function\"||Lt(x)||x.startsWith(\"file://\")||T||typeof fetch!=\"function\"?ct(x,c,b):fetch(x,{credentials:\"same-origin\"}).then(E=>WebAssembly.instantiateStreaming(E,c).then(b,function(V){return H(\"wasm streaming compile failed: \"+V),H(\"falling back to ArrayBuffer instantiation\"),ct(x,c,b)}))}var bt,vt={911532:c=>{u.Ea(\"Abs\",c,void 0)},911583:c=>{u.Ea(\"Neg\",c,void 0)},911634:c=>{u.Ea(\"Floor\",c,void 0)},911687:c=>{u.Ea(\"Ceil\",c,void 0)},911739:c=>{u.Ea(\"Reciprocal\",c,void 0)},911797:c=>{u.Ea(\"Sqrt\",c,void 0)},911849:c=>{u.Ea(\"Exp\",c,void 0)},911900:c=>{u.Ea(\"Erf\",c,void 0)},911951:c=>{u.Ea(\"Sigmoid\",c,void 0)},912006:c=>{u.Ea(\"Log\",c,void 0)},912057:c=>{u.Ea(\"Sin\",c,void 0)},912108:c=>{u.Ea(\"Cos\",c,void 0)},912159:c=>{u.Ea(\"Tan\",c,void 0)},912210:c=>{u.Ea(\"Asin\",c,void 0)},912262:c=>{u.Ea(\"Acos\",c,void 0)},912314:c=>{u.Ea(\"Atan\",c,void 0)},912366:c=>{u.Ea(\"Sinh\",c,void 0)},912418:c=>{u.Ea(\"Cosh\",c,void 0)},912470:c=>{u.Ea(\"Asinh\",c,void 0)},912523:c=>{u.Ea(\"Acosh\",c,void 0)},912576:c=>{u.Ea(\"Atanh\",c,void 0)},912629:c=>{u.Ea(\"Tanh\",c,void 0)},912681:c=>{u.Ea(\"Not\",c,void 0)},912732:(c,b,x)=>{u.Ea(\"ClipV10\",c,{min:b,max:x})},912804:c=>{u.Ea(\"Clip\",c,void 0)},912856:(c,b)=>{u.Ea(\"Elu\",c,{alpha:b})},912914:c=>{u.Ea(\"Relu\",c,void 0)},912966:(c,b)=>{u.Ea(\"LeakyRelu\",c,{alpha:b})},913030:(c,b)=>{u.Ea(\"ThresholdedRelu\",c,{alpha:b})},913100:(c,b)=>{u.Ea(\"Cast\",c,{to:b})},913158:c=>{u.Ea(\"Add\",c,void 0)},913209:c=>{u.Ea(\"Sub\",c,void 0)},913260:c=>{u.Ea(\"Mul\",c,void 0)},913311:c=>{u.Ea(\"Div\",c,void 0)},913362:c=>{u.Ea(\"Pow\",c,void 0)},913413:c=>{u.Ea(\"Equal\",c,void 0)},913466:c=>{u.Ea(\"Greater\",c,void 0)},913521:c=>{u.Ea(\"GreaterOrEqual\",c,void 0)},913583:c=>{u.Ea(\"Less\",c,void 0)},913635:c=>{u.Ea(\"LessOrEqual\",c,void 0)},913694:(c,b,x,E,V)=>{u.Ea(\"ReduceMean\",c,{keepDims:!!b,noopWithEmptyAxes:!!x,axes:E?Array.from(l().subarray(V>>>0,V+E>>>0)):[]})},913858:(c,b,x,E,V)=>{u.Ea(\"ReduceMax\",c,{keepDims:!!b,noopWithEmptyAxes:!!x,axes:E?Array.from(l().subarray(V>>>0,V+E>>>0)):[]})},914021:(c,b,x,E,V)=>{u.Ea(\"ReduceMin\",c,{keepDims:!!b,noopWithEmptyAxes:!!x,axes:E?Array.from(l().subarray(V>>>0,V+E>>>0)):[]})},914184:(c,b,x,E,V)=>{u.Ea(\"ReduceProd\",c,{keepDims:!!b,noopWithEmptyAxes:!!x,axes:E?Array.from(l().subarray(V>>>0,V+E>>>0)):[]})},914348:(c,b,x,E,V)=>{u.Ea(\"ReduceSum\",c,{keepDims:!!b,noopWithEmptyAxes:!!x,axes:E?Array.from(l().subarray(V>>>0,V+E>>>0)):[]})},914511:(c,b,x,E,V)=>{u.Ea(\"ReduceL1\",c,{keepDims:!!b,noopWithEmptyAxes:!!x,axes:E?Array.from(l().subarray(V>>>0,V+E>>>0)):[]})},914673:(c,b,x,E,V)=>{u.Ea(\"ReduceL2\",c,{keepDims:!!b,noopWithEmptyAxes:!!x,axes:E?Array.from(l().subarray(V>>>0,V+E>>>0)):[]})},914835:(c,b,x,E,V)=>{u.Ea(\"ReduceLogSum\",c,{keepDims:!!b,noopWithEmptyAxes:!!x,axes:E?Array.from(l().subarray(V>>>0,V+E>>>0)):[]})},915001:(c,b,x,E,V)=>{u.Ea(\"ReduceSumSquare\",c,{keepDims:!!b,noopWithEmptyAxes:!!x,axes:E?Array.from(l().subarray(V>>>0,V+E>>>0)):[]})},915170:(c,b,x,E,V)=>{u.Ea(\"ReduceLogSumExp\",c,{keepDims:!!b,noopWithEmptyAxes:!!x,axes:E?Array.from(l().subarray(V>>>0,V+E>>>0)):[]})},915339:c=>{u.Ea(\"Where\",c,void 0)},915392:(c,b,x)=>{u.Ea(\"Transpose\",c,{perm:b?Array.from(l().subarray(x>>>0,x+b>>>0)):[]})},915505:(c,b,x,E,V,F,J,pe,de,ce)=>{u.Ea(\"Conv\",c,{format:de?\"NHWC\":\"NCHW\",auto_pad:b,dilations:[x],group:E,kernel_shape:[V],pads:[F,J],strides:[pe],w_is_const:()=>!!e()[ce>>>0]})},915733:(c,b,x,E,V,F,J,pe,de,ce,me,xe,_e,N,be)=>{u.Ea(\"Conv\",c,{format:N?\"NHWC\":\"NCHW\",auto_pad:b,dilations:[x,E],group:V,kernel_shape:[F,J],pads:[pe,de,ce,me],strides:[xe,_e],w_is_const:()=>!!e()[be>>>0]})},915992:(c,b,x,E,V,F,J,pe,de,ce)=>{u.Ea(\"Conv\",c,{format:de?\"NHWC\":\"NCHW\",auto_pad:b,dilations:[x],group:E,kernel_shape:[V],pads:[F,J],strides:[pe],w_is_const:()=>!!e()[ce>>>0]})},916220:(c,b,x,E,V,F,J,pe,de,ce,me,xe,_e,N,be)=>{u.Ea(\"Conv\",c,{format:N?\"NHWC\":\"NCHW\",auto_pad:b,dilations:[x,E],group:V,kernel_shape:[F,J],pads:[pe,de,ce,me],strides:[xe,_e],w_is_const:()=>!!e()[be>>>0]})},916479:(c,b,x,E,V,F,J,pe,de,ce,me,xe,_e,N)=>{u.Ea(\"ConvTranspose\",c,{format:de?\"NHWC\":\"NCHW\",autoPad:b,dilations:[x],group:E,kernel_shape:[V],pads:[F,J],strides:[pe],wIsConst:()=>!!e()[ce>>>0],outputPadding:me?Array.from(l().subarray(xe>>>0,xe+me>>>0)):[],outputShape:_e?Array.from(l().subarray(N>>>0,N+_e>>>0)):[]})},916859:(c,b,x,E,V,F,J,pe,de,ce,me,xe,_e)=>{u.Ea(\"ConvTranspose\",c,{format:pe?\"NHWC\":\"NCHW\",autoPad:b,dilations:Array.from(l().subarray(x>>>0,x+2>>>0)),group:E,kernelShape:Array.from(l().subarray(V>>>0,V+2>>>0)),pads:Array.from(l().subarray(F>>>0,F+4>>>0)),strides:Array.from(l().subarray(J>>>0,J+2>>>0)),wIsConst:()=>!!e()[de>>>0],outputPadding:0<ce?Array.from(l().subarray(me>>>0,me+ce>>>0)):[],outputShape:0<xe?Array.from(l().subarray(_e>>>0,_e+xe>>>0)):[]})},917382:(c,b,x,E,V,F,J,pe,de,ce,me,xe,_e,N)=>{u.Ea(\"ConvTranspose\",c,{format:de?\"NHWC\":\"NCHW\",autoPad:b,dilations:[x],group:E,kernel_shape:[V],pads:[F,J],strides:[pe],wIsConst:()=>!!e()[ce>>>0],outputPadding:me?Array.from(l().subarray(xe>>>0,xe+me>>>0)):[],outputShape:_e?Array.from(l().subarray(N>>>0,N+_e>>>0)):[]})},917762:(c,b,x,E,V,F,J,pe,de,ce,me,xe,_e)=>{u.Ea(\"ConvTranspose\",c,{format:pe?\"NHWC\":\"NCHW\",autoPad:b,dilations:Array.from(l().subarray(x>>>0,x+2>>>0)),group:E,kernelShape:Array.from(l().subarray(V>>>0,V+2>>>0)),pads:Array.from(l().subarray(F>>>0,F+4>>>0)),strides:Array.from(l().subarray(J>>>0,J+2>>>0)),wIsConst:()=>!!e()[de>>>0],outputPadding:0<ce?Array.from(l().subarray(me>>>0,me+ce>>>0)):[],outputShape:0<xe?Array.from(l().subarray(_e>>>0,_e+xe>>>0)):[]})},918285:(c,b)=>{u.Ea(\"GlobalAveragePool\",c,{format:b?\"NHWC\":\"NCHW\"})},918376:(c,b,x,E,V,F,J,pe,de,ce,me,xe,_e,N,be,Te)=>{u.Ea(\"AveragePool\",c,{format:Te?\"NHWC\":\"NCHW\",auto_pad:b,ceil_mode:x,count_include_pad:E,storage_order:V,dilations:[F,J],kernel_shape:[pe,de],pads:[ce,me,xe,_e],strides:[N,be]})},918660:(c,b)=>{u.Ea(\"GlobalAveragePool\",c,{format:b?\"NHWC\":\"NCHW\"})},918751:(c,b,x,E,V,F,J,pe,de,ce,me,xe,_e,N,be,Te)=>{u.Ea(\"AveragePool\",c,{format:Te?\"NHWC\":\"NCHW\",auto_pad:b,ceil_mode:x,count_include_pad:E,storage_order:V,dilations:[F,J],kernel_shape:[pe,de],pads:[ce,me,xe,_e],strides:[N,be]})},919035:(c,b)=>{u.Ea(\"GlobalMaxPool\",c,{format:b?\"NHWC\":\"NCHW\"})},919122:(c,b,x,E,V,F,J,pe,de,ce,me,xe,_e,N,be,Te)=>{u.Ea(\"MaxPool\",c,{format:Te?\"NHWC\":\"NCHW\",auto_pad:b,ceil_mode:x,count_include_pad:E,storage_order:V,dilations:[F,J],kernel_shape:[pe,de],pads:[ce,me,xe,_e],strides:[N,be]})},919402:(c,b)=>{u.Ea(\"GlobalMaxPool\",c,{format:b?\"NHWC\":\"NCHW\"})},919489:(c,b,x,E,V,F,J,pe,de,ce,me,xe,_e,N,be,Te)=>{u.Ea(\"MaxPool\",c,{format:Te?\"NHWC\":\"NCHW\",auto_pad:b,ceil_mode:x,count_include_pad:E,storage_order:V,dilations:[F,J],kernel_shape:[pe,de],pads:[ce,me,xe,_e],strides:[N,be]})},919769:(c,b,x,E,V)=>{u.Ea(\"Gemm\",c,{alpha:b,beta:x,transA:E,transB:V})},919873:c=>{u.Ea(\"MatMul\",c,void 0)},919927:(c,b,x,E)=>{u.Ea(\"ArgMax\",c,{keepDims:!!b,selectLastIndex:!!x,axis:E})},920035:(c,b,x,E)=>{u.Ea(\"ArgMin\",c,{keepDims:!!b,selectLastIndex:!!x,axis:E})},920143:(c,b)=>{u.Ea(\"Softmax\",c,{axis:b})},920206:(c,b)=>{u.Ea(\"Concat\",c,{axis:b})},920266:(c,b,x,E,V)=>{u.Ea(\"Split\",c,{axis:b,numOutputs:x,splitSizes:E?Array.from(l().subarray(V>>>0,V+E>>>0)):[]})},920411:c=>{u.Ea(\"Expand\",c,void 0)},920465:(c,b)=>{u.Ea(\"Gather\",c,{axis:Number(b)})},920536:(c,b)=>{u.Ea(\"GatherElements\",c,{axis:Number(b)})},920615:(c,b,x,E,V,F,J,pe,de,ce,me)=>{u.Ea(\"Resize\",c,{antialias:b,axes:x?Array.from(l().subarray(E>>>0,E+x>>>0)):[],coordinateTransformMode:dt(V),cubicCoeffA:F,excludeOutside:J,extrapolationValue:pe,keepAspectRatioPolicy:dt(de),mode:dt(ce),nearestMode:dt(me)})},920966:(c,b,x,E,V,F,J)=>{u.Ea(\"Slice\",c,{starts:b?Array.from(l().subarray(x>>>0,x+b>>>0)):[],ends:E?Array.from(l().subarray(V>>>0,V+E>>>0)):[],axes:F?Array.from(l().subarray(J>>>0,J+F>>>0)):[]})},921197:c=>{u.Ea(\"Tile\",c,void 0)},921249:(c,b,x)=>{u.Ea(\"LayerNormalization\",c,{axis:Number(b),epsilon:Number(x)})},921356:(c,b,x)=>{u.Ea(\"InstanceNormalization\",c,{epsilon:b,format:x?\"NHWC\":\"NCHW\"})},921470:(c,b,x)=>{u.Ea(\"InstanceNormalization\",c,{epsilon:b,format:x?\"NHWC\":\"NCHW\"})},921584:c=>{u.Ea(\"Range\",c,void 0)},921637:(c,b)=>{u.Ea(\"Einsum\",c,{equation:dt(b)})},921718:(c,b,x,E,V)=>{u.Ea(\"Pad\",c,{mode:b,value:x,pads:E?Array.from(l().subarray(V>>>0,V+E>>>0)):[]})},921850:c=>{u.Ea(\"Gelu\",c,void 0)},921902:c=>{u.Ea(\"BiasAdd\",c,void 0)},921957:c=>{u.Ea(\"BiasSplitGelu\",c,void 0)},922018:(c,b)=>{u.Ea(\"SkipLayerNormalization\",c,{epsilon:b})},922099:c=>{u.zb(c)},922133:(c,b)=>u.Ab(c,b,u.bb.Fb,u.bb.errors),922245:c=>u.wb(c),922278:c=>u.yb(c),922310:(c,b,x)=>{u.jb(c,b,x,!0)},922349:(c,b,x)=>{u.jb(c,b,x)}};function Pt(c){this.name=\"ExitStatus\",this.message=`Program terminated with exit(${c})`,this.status=c}function Kt(c){c.terminate(),c.onmessage=()=>{}}function hr(c){(c=he.Qa[c])||Ye(),he.Eb(c)}function qt(c){var b=he.tb();if(!b)return 6;he.Ya.push(b),he.Qa[c.Xa]=b,b.Xa=c.Xa;var x={cmd:\"run\",start_routine:c.Gb,arg:c.rb,pthread_ptr:c.Xa};return T&&b.unref(),b.postMessage(x,c.Mb),0}var gr=typeof TextDecoder<\"u\"?new TextDecoder(\"utf8\"):void 0,Yt=(c,b,x)=>{b>>>=0;var E=b+x;for(x=b;c[x]&&!(x>=E);)++x;if(16<x-b&&c.buffer&&gr)return gr.decode(c.buffer instanceof SharedArrayBuffer?c.slice(b,x):c.subarray(b,x));for(E=\"\";b<x;){var V=c[b++];if(V&128){var F=c[b++]&63;if((V&224)==192)E+=String.fromCharCode((V&31)<<6|F);else{var J=c[b++]&63;V=(V&240)==224?(V&15)<<12|F<<6|J:(V&7)<<18|F<<12|J<<6|c[b++]&63,65536>V?E+=String.fromCharCode(V):(V-=65536,E+=String.fromCharCode(55296|V>>10,56320|V&1023))}}else E+=String.fromCharCode(V)}return E},dt=(c,b)=>(c>>>=0)?Yt(d(),c,b):\"\";function Xt(c){if(k)return ke(1,1,c);He=c,Me()||(he.Hb(),u.onExit&&u.onExit(c),Ie=!0),B(c,new Pt(c))}var yr=c=>{if(He=c,k)throw fn(c),\"unwind\";Xt(c)},he={ab:[],Ya:[],mb:[],Qa:{},gb:function(){k?he.vb():he.ub()},ub:function(){Oe.unshift(()=>{Ot(),he.Bb(()=>Et())})},vb:function(){he.receiveObjectTransfer=he.Db,he.threadInitTLS=he.lb,he.setExitStatus=he.kb,Be=!1},kb:function(c){He=c},Sb:[\"$terminateWorker\"],Hb:function(){for(var c of he.Ya)Kt(c);for(c of he.ab)Kt(c);he.ab=[],he.Ya=[],he.Qa=[]},Eb:function(c){var b=c.Xa;delete he.Qa[b],he.ab.push(c),he.Ya.splice(he.Ya.indexOf(c),1),c.Xa=0,ar(b)},Db:function(){},lb:function(){he.mb.forEach(c=>c())},Cb:c=>new Promise(b=>{c.onmessage=F=>{F=F.data;var J=F.cmd;if(F.targetThread&&F.targetThread!=Wt()){var pe=he.Qa[F.Rb];pe?pe.postMessage(F,F.transferList):H('Internal error! Worker sent a message \"'+J+'\" to target pthread '+F.targetThread+\", but that thread no longer exists!\")}else J===\"checkMailbox\"?Mt():J===\"spawnThread\"?qt(F):J===\"cleanupThread\"?hr(F.thread):J===\"killThread\"?(F=F.thread,J=he.Qa[F],delete he.Qa[F],Kt(J),ar(F),he.Ya.splice(he.Ya.indexOf(J),1),J.Xa=0):J===\"cancelThread\"?he.Qa[F.thread].postMessage({cmd:\"cancel\"}):J===\"loaded\"?(c.loaded=!0,b(c)):J===\"alert\"?alert(\"Thread \"+F.threadId+\": \"+F.text):F.target===\"setimmediate\"?c.postMessage(F):J===\"callHandler\"?u[F.handler](...F.args):J&&H(\"worker sent an unknown command \"+J)},c.onerror=F=>{throw H(\"worker sent an error! \"+F.filename+\":\"+F.lineno+\": \"+F.message),F},T&&(c.on(\"message\",function(F){c.onmessage({data:F})}),c.on(\"error\",function(F){c.onerror(F)}));var x=[],E=[\"onExit\",\"onAbort\",\"print\",\"printErr\"],V;for(V of E)u.hasOwnProperty(V)&&x.push(V);c.postMessage({cmd:\"load\",handlers:x,urlOrBlob:u.mainScriptUrlOrBlob||t,wasmMemory:ue,wasmModule:Ze})}),Bb:function(c){c()},qb:function(){var c=K(\"ort-wasm-simd-threaded.worker.js\");c=new Worker(c),he.ab.push(c)},tb:function(){return he.ab.length==0&&(he.qb(),he.Cb(he.ab[0])),he.ab.pop()}};u.PThread=he;var Rt=c=>{for(;0<c.length;)c.shift()(u)};u.establishStackSpace=function(){var c=Wt(),b=l()[c+52>>2>>>0];c=l()[c+56>>2>>>0],Hr(b,b-c),zt(b)};function fn(c){if(k)return ke(2,0,c);yr(c)}u.invokeEntryPoint=function(c,b){c=Lr.apply(null,[c,b]),Me()?he.kb(c):sr(c)};function pn(c){this.fb=c-24,this.pb=function(b){m()[this.fb+4>>2>>>0]=b},this.ob=function(b){m()[this.fb+8>>2>>>0]=b},this.gb=function(b,x){this.nb(),this.pb(b),this.ob(x)},this.nb=function(){m()[this.fb+16>>2>>>0]=0}}var kt=0,si=0;function ft(c,b,x,E){return k?ke(3,1,c,b,x,E):nt(c,b,x,E)}function nt(c,b,x,E){if(c>>>=0,b>>>=0,x>>>=0,E>>>=0,typeof SharedArrayBuffer>\"u\")return H(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;var V=[];return k&&V.length===0?ft(c,b,x,E):(c={Gb:x,Xa:c,rb:E,Mb:V},k?(c.Ob=\"spawnThread\",postMessage(c,V),0):qt(c))}function br(c,b,x){return k?ke(4,1,c,b,x):0}function Bt(c,b){if(k)return ke(5,1,c,b)}var Qt=c=>{for(var b=0,x=0;x<c.length;++x){var E=c.charCodeAt(x);127>=E?b++:2047>=E?b+=2:55296<=E&&57343>=E?(b+=4,++x):b+=3}return b},vr=(c,b,x,E)=>{if(x>>>=0,!(0<E))return 0;var V=x;E=x+E-1;for(var F=0;F<c.length;++F){var J=c.charCodeAt(F);if(55296<=J&&57343>=J){var pe=c.charCodeAt(++F);J=65536+((J&1023)<<10)|pe&1023}if(127>=J){if(x>=E)break;b[x++>>>0]=J}else{if(2047>=J){if(x+1>=E)break;b[x++>>>0]=192|J>>6}else{if(65535>=J){if(x+2>=E)break;b[x++>>>0]=224|J>>12}else{if(x+3>=E)break;b[x++>>>0]=240|J>>18,b[x++>>>0]=128|J>>12&63}b[x++>>>0]=128|J>>6&63}b[x++>>>0]=128|J&63}}return b[x>>>0]=0,x-V},mn=(c,b,x)=>vr(c,d(),b,x);function Jt(c,b){if(k)return ke(6,1,c,b)}function hn(c,b,x){if(k)return ke(7,1,c,b,x)}function gn(c,b,x){return k?ke(8,1,c,b,x):0}function yn(c,b){if(k)return ke(9,1,c,b)}function bn(c,b,x){if(k)return ke(10,1,c,b,x)}function vn(c,b,x,E){if(k)return ke(11,1,c,b,x,E)}function wn(c,b,x,E){if(k)return ke(12,1,c,b,x,E)}function Zt(c,b,x,E){if(k)return ke(13,1,c,b,x,E)}function wr(c){if(k)return ke(14,1,c)}function W(c,b){if(k)return ke(15,1,c,b)}function At(c,b,x){if(k)return ke(16,1,c,b,x)}var z=c=>{if(!Ie)try{if(c(),!Me())try{k?sr(He):yr(He)}catch(b){b instanceof Pt||b==\"unwind\"||B(1,b)}}catch(b){b instanceof Pt||b==\"unwind\"||B(1,b)}};function D(c){c>>>=0,typeof Atomics.Nb==\"function\"&&(Atomics.Nb(l(),c>>2,c).value.then(Mt),c+=128,Atomics.store(l(),c>>2,1))}u.__emscripten_thread_mailbox_await=D;function Mt(){var c=Wt();c&&(D(c),z(()=>Nr()))}u.checkMailbox=Mt;var It=c=>c%4===0&&(c%100!==0||c%400===0),Cr=[0,31,60,91,121,152,182,213,244,274,305,335],$r=[0,31,59,90,120,151,181,212,243,273,304,334];function xr(c,b,x,E,V,F,J,pe){return k?ke(17,1,c,b,x,E,V,F,J,pe):-52}function Sr(c,b,x,E,V,F,J){if(k)return ke(18,1,c,b,x,E,V,F,J)}var _r=c=>{var b=Qt(c)+1,x=or(b);return x&&mn(c,x,b),x},er=[],Ar=(c,b)=>{er.length=0;var x;for(b>>=2;x=d()[c++>>>0];)b+=x!=105&b,er.push(x==105?l()[b>>>0]:h()[b++>>>1]),++b;return er},Cn=c=>{var b=ur();return c=c(),zt(b),c};function ke(c,b){var x=arguments.length-2,E=arguments;return Cn(()=>{for(var V=lr(8*x),F=V>>3,J=0;J<x;J++){var pe=E[2+J];h()[F+J>>>0]=pe}return Ur(c,x,V,b)})}var tr=[],rr={},Ir=()=>{if(!nr){var c={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:j||\"./this.program\"},b;for(b in rr)rr[b]===void 0?delete c[b]:c[b]=rr[b];var x=[];for(b in c)x.push(`${b}=${c[b]}`);nr=x}return nr},nr;function Tr(c,b){if(k)return ke(19,1,c,b);c>>>=0,b>>>=0;var x=0;return Ir().forEach(function(E,V){var F=b+x;for(V=m()[c+4*V>>2>>>0]=F,F=0;F<E.length;++F)e()[V++>>0>>>0]=E.charCodeAt(F);e()[V>>0>>>0]=0,x+=E.length+1}),0}function Or(c,b){if(k)return ke(20,1,c,b);c>>>=0,b>>>=0;var x=Ir();m()[c>>2>>>0]=x.length;var E=0;return x.forEach(function(V){E+=V.length+1}),m()[b>>2>>>0]=E,0}function Er(c){return k?ke(21,1,c):52}function Pr(c,b,x,E){return k?ke(22,1,c,b,x,E):52}function Rr(c,b,x,E,V){return k?ke(23,1,c,b,x,E,V):70}var $n=[null,[],[]];function kr(c,b,x,E){if(k)return ke(24,1,c,b,x,E);b>>>=0,x>>>=0,E>>>=0;for(var V=0,F=0;F<x;F++){var J=m()[b>>2>>>0],pe=m()[b+4>>2>>>0];b+=8;for(var de=0;de<pe;de++){var ce=d()[J+de>>>0],me=$n[c];ce===0||ce===10?((c===1?Ce:H)(Yt(me,0)),me.length=0):me.push(ce)}V+=pe}return m()[E>>2>>>0]=V,0}var Br=[31,29,31,30,31,30,31,31,30,31,30,31],Mr=[31,28,31,30,31,30,31,31,30,31,30,31];function xn(c){var b=Array(Qt(c)+1);return vr(c,b,0,b.length),b}var Sn=(c,b)=>{e().set(c,b>>>0)};function jr(c,b,x,E){function V(N,be,Te){for(N=typeof N==\"number\"?N.toString():N||\"\";N.length<be;)N=Te[0]+N;return N}function F(N,be){return V(N,be,\"0\")}function J(N,be){function Te(Jr){return 0>Jr?-1:0<Jr?1:0}var wt;return(wt=Te(N.getFullYear()-be.getFullYear()))===0&&(wt=Te(N.getMonth()-be.getMonth()))===0&&(wt=Te(N.getDate()-be.getDate())),wt}function pe(N){switch(N.getDay()){case 0:return new Date(N.getFullYear()-1,11,29);case 1:return N;case 2:return new Date(N.getFullYear(),0,3);case 3:return new Date(N.getFullYear(),0,2);case 4:return new Date(N.getFullYear(),0,1);case 5:return new Date(N.getFullYear()-1,11,31);case 6:return new Date(N.getFullYear()-1,11,30)}}function de(N){var be=N.Za;for(N=new Date(new Date(N.$a+1900,0,1).getTime());0<be;){var Te=N.getMonth(),wt=(It(N.getFullYear())?Br:Mr)[Te];if(be>wt-N.getDate())be-=wt-N.getDate()+1,N.setDate(1),11>Te?N.setMonth(Te+1):(N.setMonth(0),N.setFullYear(N.getFullYear()+1));else{N.setDate(N.getDate()+be);break}}return Te=new Date(N.getFullYear()+1,0,4),be=pe(new Date(N.getFullYear(),0,4)),Te=pe(Te),0>=J(be,N)?0>=J(Te,N)?N.getFullYear()+1:N.getFullYear():N.getFullYear()-1}c>>>=0,b>>>=0,x>>>=0,E>>>=0;var ce=l()[E+40>>2>>>0];E={Kb:l()[E>>2>>>0],Jb:l()[E+4>>2>>>0],cb:l()[E+8>>2>>>0],ib:l()[E+12>>2>>>0],eb:l()[E+16>>2>>>0],$a:l()[E+20>>2>>>0],Wa:l()[E+24>>2>>>0],Za:l()[E+28>>2>>>0],Tb:l()[E+32>>2>>>0],Ib:l()[E+36>>2>>>0],Lb:ce?dt(ce):\"\"},x=dt(x),ce={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var me in ce)x=x.replace(new RegExp(me,\"g\"),ce[me]);var xe=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),_e=\"January February March April May June July August September October November December\".split(\" \");ce={\"%a\":N=>xe[N.Wa].substring(0,3),\"%A\":N=>xe[N.Wa],\"%b\":N=>_e[N.eb].substring(0,3),\"%B\":N=>_e[N.eb],\"%C\":N=>F((N.$a+1900)/100|0,2),\"%d\":N=>F(N.ib,2),\"%e\":N=>V(N.ib,2,\" \"),\"%g\":N=>de(N).toString().substring(2),\"%G\":N=>de(N),\"%H\":N=>F(N.cb,2),\"%I\":N=>(N=N.cb,N==0?N=12:12<N&&(N-=12),F(N,2)),\"%j\":N=>{for(var be=0,Te=0;Te<=N.eb-1;be+=(It(N.$a+1900)?Br:Mr)[Te++]);return F(N.ib+be,3)},\"%m\":N=>F(N.eb+1,2),\"%M\":N=>F(N.Jb,2),\"%n\":()=>`\n`,\"%p\":N=>0<=N.cb&&12>N.cb?\"AM\":\"PM\",\"%S\":N=>F(N.Kb,2),\"%t\":()=>\"\t\",\"%u\":N=>N.Wa||7,\"%U\":N=>F(Math.floor((N.Za+7-N.Wa)/7),2),\"%V\":N=>{var be=Math.floor((N.Za+7-(N.Wa+6)%7)/7);if(2>=(N.Wa+371-N.Za-2)%7&&be++,be)be==53&&(Te=(N.Wa+371-N.Za)%7,Te==4||Te==3&&It(N.$a)||(be=1));else{be=52;var Te=(N.Wa+7-N.Za-1)%7;(Te==4||Te==5&&It(N.$a%400-1))&&be++}return F(be,2)},\"%w\":N=>N.Wa,\"%W\":N=>F(Math.floor((N.Za+7-(N.Wa+6)%7)/7),2),\"%y\":N=>(N.$a+1900).toString().substring(2),\"%Y\":N=>N.$a+1900,\"%z\":N=>{N=N.Ib;var be=0<=N;return N=Math.abs(N)/60,(be?\"+\":\"-\")+(\"0000\"+(N/60*100+N%60)).slice(-4)},\"%Z\":N=>N.Lb,\"%%\":()=>\"%\"},x=x.replace(/%%/g,\"\\0\\0\");for(me in ce)x.includes(me)&&(x=x.replace(new RegExp(me,\"g\"),ce[me](E)));return x=x.replace(/\\0\\0/g,\"%\"),me=xn(x),me.length>b?0:(Sn(me,c),me.length-1)}function jt(c){try{c()}catch(b){Ye(b)}}function _n(c){var b={},x;for(x in c)(function(E){var V=c[E];b[E]=typeof V==\"function\"?function(){Dt.push(E);try{return V.apply(null,arguments)}finally{Ie||(Dt.pop()===E||Ye(),it&&pt===1&&Dt.length===0&&(pt=0,Ge+=1,jt(qr),typeof Fibers<\"u\"&&Fibers.Ub()))}}:V})(x);return b}var pt=0,it=null,Dr=0,Dt=[],Wr={},zr={},An=0,ir=null,In=[];function Tn(){return new Promise((c,b)=>{ir={resolve:c,reject:b}})}function On(){var c=or(65548),b=c+12;m()[c>>2>>>0]=b,m()[c+4>>2>>>0]=b+65536,b=Dt[0];var x=Wr[b];return x===void 0&&(x=An++,Wr[b]=x,zr[x]=b),b=x,l()[c+8>>2>>>0]=b,c}function En(){var c=l()[it+8>>2>>>0];return c=ae[zr[c]],--Ge,c()}function Pn(c){if(!Ie){if(pt===0){var b=!1,x=!1;c((E=0)=>{if(!Ie&&(Dr=E,b=!0,x)){pt=2,jt(()=>Yr(it)),typeof Browser<\"u\"&&Browser.hb.sb&&Browser.hb.resume(),E=!1;try{var V=En()}catch(pe){V=pe,E=!0}var F=!1;if(!it){var J=ir;J&&(ir=null,(E?J.reject:J.resolve)(V),F=!0)}if(E&&!F)throw V}}),x=!0,b||(pt=1,it=On(),typeof Browser<\"u\"&&Browser.hb.sb&&Browser.hb.pause(),jt(()=>Kr(it)))}else pt===2?(pt=0,jt(Xr),Gr(it),it=null,In.forEach(E=>z(E))):Ye(`invalid state: ${pt}`);return Dr}}function Rn(c){return Pn(b=>{c().then(b)})}he.gb();var kn=[null,Xt,fn,ft,br,Bt,Jt,hn,gn,yn,bn,vn,wn,Zt,wr,W,At,xr,Sr,Tr,Or,Er,Pr,Rr,kr],Bn={r:function(c,b,x){return Rn(async()=>{await u.xb(c,b,x)})},b:function(c,b,x){throw c>>>=0,new pn(c).gb(b>>>0,x>>>0),kt=c,si++,kt},O:function(c){Vr(c>>>0,!R,1,!P,131072,!1),he.lb()},l:function(c){c>>>=0,k?postMessage({cmd:\"cleanupThread\",thread:c}):hr(c)},I:nt,i:br,U:Bt,E:Jt,G:hn,V:gn,S:yn,K:bn,R:vn,p:wn,F:Zt,C:wr,T:W,D:At,q:()=>!0,A:function(c,b){c>>>=0,c==b>>>0?setTimeout(()=>Mt()):k?postMessage({targetThread:c,cmd:\"checkMailbox\"}):(c=he.Qa[c])&&c.postMessage({cmd:\"checkMailbox\"})},M:function(){return-1},N:D,X:function(c){T&&he.Qa[c>>>0].ref()},u:function(c,b,x){c=b+2097152>>>0<4194305-!!c?(c>>>0)+4294967296*b:NaN,x>>>=0,c=new Date(1e3*c),l()[x>>2>>>0]=c.getUTCSeconds(),l()[x+4>>2>>>0]=c.getUTCMinutes(),l()[x+8>>2>>>0]=c.getUTCHours(),l()[x+12>>2>>>0]=c.getUTCDate(),l()[x+16>>2>>>0]=c.getUTCMonth(),l()[x+20>>2>>>0]=c.getUTCFullYear()-1900,l()[x+24>>2>>>0]=c.getUTCDay(),c=(c.getTime()-Date.UTC(c.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,l()[x+28>>2>>>0]=c},v:function(c,b,x){c=b+2097152>>>0<4194305-!!c?(c>>>0)+4294967296*b:NaN,x>>>=0,c=new Date(1e3*c),l()[x>>2>>>0]=c.getSeconds(),l()[x+4>>2>>>0]=c.getMinutes(),l()[x+8>>2>>>0]=c.getHours(),l()[x+12>>2>>>0]=c.getDate(),l()[x+16>>2>>>0]=c.getMonth(),l()[x+20>>2>>>0]=c.getFullYear()-1900,l()[x+24>>2>>>0]=c.getDay(),b=(It(c.getFullYear())?Cr:$r)[c.getMonth()]+c.getDate()-1|0,l()[x+28>>2>>>0]=b,l()[x+36>>2>>>0]=-(60*c.getTimezoneOffset()),b=new Date(c.getFullYear(),6,1).getTimezoneOffset();var E=new Date(c.getFullYear(),0,1).getTimezoneOffset();c=(b!=E&&c.getTimezoneOffset()==Math.min(E,b))|0,l()[x+32>>2>>>0]=c},w:function(c){c>>>=0;var b=new Date(l()[c+20>>2>>>0]+1900,l()[c+16>>2>>>0],l()[c+12>>2>>>0],l()[c+8>>2>>>0],l()[c+4>>2>>>0],l()[c>>2>>>0],0),x=l()[c+32>>2>>>0],E=b.getTimezoneOffset(),V=new Date(b.getFullYear(),6,1).getTimezoneOffset(),F=new Date(b.getFullYear(),0,1).getTimezoneOffset(),J=Math.min(F,V);return 0>x?l()[c+32>>2>>>0]=+(V!=F&&J==E):0<x!=(J==E)&&(V=Math.max(F,V),b.setTime(b.getTime()+6e4*((0<x?J:V)-E))),l()[c+24>>2>>>0]=b.getDay(),x=(It(b.getFullYear())?Cr:$r)[b.getMonth()]+b.getDate()-1|0,l()[c+28>>2>>>0]=x,l()[c>>2>>>0]=b.getSeconds(),l()[c+4>>2>>>0]=b.getMinutes(),l()[c+8>>2>>>0]=b.getHours(),l()[c+12>>2>>>0]=b.getDate(),l()[c+16>>2>>>0]=b.getMonth(),l()[c+20>>2>>>0]=b.getYear(),c=b.getTime()/1e3,Fr((bt=c,1<=+Math.abs(bt)?0<bt?+Math.floor(bt/4294967296)>>>0:~~+Math.ceil((bt-+(~~bt>>>0))/4294967296)>>>0:0)),c>>>0},s:xr,t:Sr,z:function(c,b,x){function E(ce){return(ce=ce.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?ce[1]:\"GMT\"}c>>>=0,b>>>=0,x>>>=0;var V=new Date().getFullYear(),F=new Date(V,0,1),J=new Date(V,6,1);V=F.getTimezoneOffset();var pe=J.getTimezoneOffset(),de=Math.max(V,pe);m()[c>>2>>>0]=60*de,l()[b>>2>>>0]=+(V!=pe),c=E(F),b=E(J),c=_r(c),b=_r(b),pe<V?(m()[x>>2>>>0]=c,m()[x+4>>2>>>0]=b):(m()[x>>2>>>0]=b,m()[x+4>>2>>>0]=c)},d:()=>{Ye(\"\")},c:function(c,b,x){return c>>>=0,b=Ar(b>>>0,x>>>0),vt[c].apply(null,b)},k:function(c,b,x){return c>>>=0,b=Ar(b>>>0,x>>>0),vt[c].apply(null,b)},m:function(){},j:function(){return Date.now()},W:()=>{throw Ge+=1,\"unwind\"},B:function(){return 4294901760},f:()=>performance.timeOrigin+performance.now(),g:function(){return T?(Ra(),cr(Pa)).cpus().length:navigator.hardwareConcurrency},L:function(c,b,x,E){for(he.Pb=b>>>0,tr.length=x,b=E>>>0>>3,E=0;E<x;E++)tr[E]=h()[b+E>>>0];return(0>c?vt[-c-1]:kn[c]).apply(null,tr)},y:function(c){c>>>=0;var b=d().length;if(c<=b||4294901760<c)return!1;for(var x=1;4>=x;x*=2){var E=b*(1+.2/x);E=Math.min(E,c+100663296);var V=Math;E=Math.max(c,E);e:{V=V.min.call(V,4294901760,E+(65536-E%65536)%65536)-ue.buffer.byteLength+65535>>>16;try{ue.grow(V),ee();var F=1;break e}catch{}F=void 0}if(F)return!0}return!1},P:Tr,Q:Or,H:yr,h:Er,o:Pr,x:Rr,n:kr,a:ue||u.wasmMemory,J:jr,e:function(c,b,x,E){return jr(c>>>0,b>>>0,x>>>0,E>>>0)}};(function(){function c(x,E){return x=x.exports,x=_n(x),ae=x=Mn(x),he.mb.push(ae.Da),et.unshift(ae.Y),Ze=E,Et(),x}var b={a:Bn};if(Ot(),u.instantiateWasm)try{return u.instantiateWasm(b,c)}catch(x){H(\"Module.instantiateWasm callback failed with error: \"+x),_(x)}return mr(b,function(x){c(x.instance,x.module)}).catch(_),{}})(),u._OrtInit=(c,b)=>(u._OrtInit=ae.Z)(c,b),u._OrtGetLastError=(c,b)=>(u._OrtGetLastError=ae._)(c,b),u._OrtCreateSessionOptions=(c,b,x,E,V,F,J,pe,de,ce)=>(u._OrtCreateSessionOptions=ae.$)(c,b,x,E,V,F,J,pe,de,ce),u._OrtAppendExecutionProvider=(c,b)=>(u._OrtAppendExecutionProvider=ae.aa)(c,b),u._OrtAddFreeDimensionOverride=(c,b,x)=>(u._OrtAddFreeDimensionOverride=ae.ba)(c,b,x),u._OrtAddSessionConfigEntry=(c,b,x)=>(u._OrtAddSessionConfigEntry=ae.ca)(c,b,x),u._OrtReleaseSessionOptions=c=>(u._OrtReleaseSessionOptions=ae.da)(c),u._OrtCreateSession=(c,b,x)=>(u._OrtCreateSession=ae.ea)(c,b,x),u._OrtReleaseSession=c=>(u._OrtReleaseSession=ae.fa)(c),u._OrtGetInputOutputCount=(c,b,x)=>(u._OrtGetInputOutputCount=ae.ga)(c,b,x),u._OrtGetInputName=(c,b)=>(u._OrtGetInputName=ae.ha)(c,b),u._OrtGetOutputName=(c,b)=>(u._OrtGetOutputName=ae.ia)(c,b),u._OrtFree=c=>(u._OrtFree=ae.ja)(c),u._OrtCreateTensor=(c,b,x,E,V,F)=>(u._OrtCreateTensor=ae.ka)(c,b,x,E,V,F),u._OrtGetTensorData=(c,b,x,E,V)=>(u._OrtGetTensorData=ae.la)(c,b,x,E,V),u._OrtReleaseTensor=c=>(u._OrtReleaseTensor=ae.ma)(c),u._OrtCreateRunOptions=(c,b,x,E)=>(u._OrtCreateRunOptions=ae.na)(c,b,x,E),u._OrtAddRunConfigEntry=(c,b,x)=>(u._OrtAddRunConfigEntry=ae.oa)(c,b,x),u._OrtReleaseRunOptions=c=>(u._OrtReleaseRunOptions=ae.pa)(c),u._OrtCreateBinding=c=>(u._OrtCreateBinding=ae.qa)(c),u._OrtBindInput=(c,b,x)=>(u._OrtBindInput=ae.ra)(c,b,x),u._OrtBindOutput=(c,b,x,E)=>(u._OrtBindOutput=ae.sa)(c,b,x,E),u._OrtClearBoundOutputs=c=>(u._OrtClearBoundOutputs=ae.ta)(c),u._OrtReleaseBinding=c=>(u._OrtReleaseBinding=ae.ua)(c),u._OrtRunWithBinding=(c,b,x,E,V)=>(u._OrtRunWithBinding=ae.va)(c,b,x,E,V),u._OrtRun=(c,b,x,E,V,F,J,pe)=>(u._OrtRun=ae.wa)(c,b,x,E,V,F,J,pe),u._OrtEndProfiling=c=>(u._OrtEndProfiling=ae.xa)(c),u._JsepOutput=(c,b,x)=>(u._JsepOutput=ae.ya)(c,b,x),u._JsepGetNodeName=c=>(u._JsepGetNodeName=ae.za)(c);var Wt=u._pthread_self=()=>(Wt=u._pthread_self=ae.Aa)(),or=u._malloc=c=>(or=u._malloc=ae.Ba)(c),Gr=u._free=c=>(Gr=u._free=ae.Ca)(c);u.__emscripten_tls_init=()=>(u.__emscripten_tls_init=ae.Da)();var Vr=u.__emscripten_thread_init=(c,b,x,E,V,F)=>(Vr=u.__emscripten_thread_init=ae.Fa)(c,b,x,E,V,F);u.__emscripten_thread_crashed=()=>(u.__emscripten_thread_crashed=ae.Ga)();var Ur=(c,b,x,E)=>(Ur=ae.Ha)(c,b,x,E),ar=c=>(ar=ae.Ia)(c),sr=u.__emscripten_thread_exit=c=>(sr=u.__emscripten_thread_exit=ae.Ja)(c),Nr=u.__emscripten_check_mailbox=()=>(Nr=u.__emscripten_check_mailbox=ae.Ka)(),Fr=c=>(Fr=ae.La)(c),Hr=(c,b)=>(Hr=ae.Ma)(c,b),ur=()=>(ur=ae.Na)(),zt=c=>(zt=ae.Oa)(c),lr=c=>(lr=ae.Pa)(c),Lr=u.dynCall_ii=(c,b)=>(Lr=u.dynCall_ii=ae.Ra)(c,b),Kr=c=>(Kr=ae.Sa)(c),qr=()=>(qr=ae.Ta)(),Yr=c=>(Yr=ae.Ua)(c),Xr=()=>(Xr=ae.Va)();u.___start_em_js=922382,u.___stop_em_js=922543;function Mn(c){c=Object.assign({},c);var b=E=>()=>E()>>>0,x=E=>V=>E(V)>>>0;return c.__errno_location=b(c.__errno_location),c.pthread_self=b(c.pthread_self),c.malloc=x(c.malloc),c.stackSave=b(c.stackSave),c.stackAlloc=x(c.stackAlloc),c}u.keepRuntimeAlive=Me,u.wasmMemory=ue,u.stackAlloc=lr,u.stackSave=ur,u.stackRestore=zt,u.UTF8ToString=dt,u.stringToUTF8=mn,u.lengthBytesUTF8=Qt,u.ExitStatus=Pt,u.PThread=he;var Gt;ut=function c(){Gt||Qr(),Gt||(ut=c)};function Qr(){function c(){if(!Gt&&(Gt=!0,u.calledRun=!0,!Ie)&&(k||Rt(et),w(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),!k)){if(u.postRun)for(typeof u.postRun==\"function\"&&(u.postRun=[u.postRun]);u.postRun.length;){var b=u.postRun.shift();tt.unshift(b)}Rt(tt)}}if(!(0<rt))if(k)w(u),k||Rt(et),startWorker(u);else{if(u.preRun)for(typeof u.preRun==\"function\"&&(u.preRun=[u.preRun]);u.preRun.length;)Oe.unshift(u.preRun.shift());Rt(Oe),0<rt||(u.setStatus?(u.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){u.setStatus(\"\")},1),c()},1)):c())}}if(u.preInit)for(typeof u.preInit==\"function\"&&(u.preInit=[u.preInit]);0<u.preInit.length;)u.preInit.pop()();return Qr(),r.ready}})();typeof Ba==\"object\"&&typeof mi==\"object\"?mi.exports=ka:typeof define==\"function\"&&define.amd&&define([],()=>ka)});var ja=Zr((Fh,Ip)=>{Ip.exports='\"use strict\";var Module={},ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require(\"worker_threads\"),parentPort=nodeWorkerThreads.parentPort;parentPort.on(\"message\",e=>onmessage({data:e}));var fs=require(\"fs\");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>(0,eval)(fs.readFileSync(e,\"utf8\")+\"//# sourceURL=\"+e),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(\" \");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(\" \");postMessage({cmd:\"alert\",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason??e};function handleMessage(e){try{if(e.data.cmd===\"load\"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:\"loaded\"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:\"callHandler\",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob==\"string\")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd===\"run\"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!=\"unwind\")throw a}}else e.data.cmd===\"cancel\"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target===\"setimmediate\"||(e.data.cmd===\"checkMailbox\"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(\"worker.js received unknown command \"+e.data.cmd),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed&&Module.__emscripten_thread_crashed(),a}}self.onmessage=handleMessage;\\n'});var yi,tn,rn,zn,nn,Ua,bi,Xe=oe(()=>{\"use strict\";yi=t=>{switch(t){case\"int8\":return 3;case\"uint8\":return 2;case\"bool\":return 9;case\"int16\":return 5;case\"uint16\":return 4;case\"int32\":return 6;case\"uint32\":return 12;case\"float16\":return 10;case\"float32\":return 1;case\"float64\":return 11;case\"string\":return 8;case\"int64\":return 7;case\"uint64\":return 13;default:throw new Error(`unsupported data type: ${t}`)}},tn=t=>{switch(t){case 3:return\"int8\";case 2:return\"uint8\";case 9:return\"bool\";case 5:return\"int16\";case 4:return\"uint16\";case 6:return\"int32\";case 12:return\"uint32\";case 10:return\"float16\";case 1:return\"float32\";case 11:return\"float64\";case 8:return\"string\";case 7:return\"int64\";case 13:return\"uint64\";default:throw new Error(`unsupported data type: ${t}`)}},rn=t=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][t],zn=t=>{switch(t){case\"float16\":return Uint16Array;case\"float32\":return Float32Array;case\"uint8\":return Uint8Array;case\"int8\":return Int8Array;case\"uint16\":return Uint16Array;case\"int16\":return Int16Array;case\"int32\":return Int32Array;case\"bool\":return Uint8Array;case\"float64\":return Float64Array;case\"uint32\":return Uint32Array;case\"int64\":return BigInt64Array;case\"uint64\":return BigUint64Array;default:throw new Error(`unsupported type: ${t}`)}},nn=t=>{switch(t){case\"verbose\":return 0;case\"info\":return 1;case\"warning\":return 2;case\"error\":return 3;case\"fatal\":return 4;default:throw new Error(`unsupported logging level: ${t}`)}},Ua=t=>t===\"float32\"||t===\"int32\"||t===\"int64\"||t===\"bool\"||t===\"float16\"||t===\"uint32\",bi=t=>{switch(t){case\"none\":return 0;case\"cpu\":return 1;case\"cpu-pinned\":return 2;case\"texture\":return 3;case\"gpu-buffer\":return 4;default:throw new Error(`unsupported data location: ${t}`)}}});var jp,Dp,Na,Fa,Ha,Wp,ze,Tt=oe(()=>{\"use strict\";Xe();jp=[\"V\",\"I\",\"W\",\"E\",\"F\"],Dp=(t,r)=>{console.log(`[${jp[t]},${new Date().toISOString()}]${r}`)},Ha=(t,r)=>{Na=t,Fa=r},Wp=(t,r)=>{let e=nn(t),d=nn(Na);e>=d&&Dp(e,typeof r==\"function\"?r():r)},ze=(...t)=>{Fa&&Wp(...t)}});var La,Ka=oe(()=>{\"use strict\";Xe();La=(t,r)=>new(zn(r))(t)});var qa=oe(()=>{\"use strict\"});var Gn,zp,Ya,wi,vi,Xa,Qa=oe(()=>{\"use strict\";Tt();qa();Gn=t=>Math.ceil(t/16)*16,zp=1,Ya=()=>zp++,wi=async(t,r,e,d)=>{let l=Gn(e),m=t.device.createBuffer({size:l,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let h=t.getCommandEncoder();t.endComputePass(),h.copyBufferToBuffer(r,0,m,0,l),t.flush(),await m.mapAsync(GPUMapMode.READ);let u=m.getMappedRange();if(d){let w=d();return w.set(new Uint8Array(u,0,e)),w}else return new Uint8Array(u.slice(0,e))}finally{m.destroy()}},vi=class{constructor(r){this.backend=r;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map}upload(r,e){let d=e.buffer,l=e.byteOffset,m=e.byteLength,h=Gn(m),u=this.storageCache.get(r);if(!u)throw new Error(\"gpu data for uploading does not exist\");if(u.originalSize!==m)throw new Error(`inconsistent data size. gpu data size=${u.originalSize}, data size=${m}`);let w=this.backend.device.createBuffer({mappedAtCreation:!0,size:h,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),_=w.getMappedRange();new Uint8Array(_).set(new Uint8Array(d,l,m)),w.unmap();let O=this.backend.getCommandEncoder();this.backend.endComputePass(),O.copyBufferToBuffer(w,0,u.gpuData.buffer,0,h),ze(\"verbose\",()=>`[WebGPU] GpuDataManager.upload(id=${r})`),this.buffersForUploadingPending.push(w)}memcpy(r,e){let d=this.storageCache.get(r);if(!d)throw new Error(\"source gpu data for memcpy does not exist\");let l=this.storageCache.get(e);if(!l)throw new Error(\"destination gpu data for memcpy does not exist\");if(d.originalSize!==l.originalSize)throw new Error(\"inconsistent source and destination gpu data size\");let m=Gn(d.originalSize),h=this.backend.getCommandEncoder();this.backend.endComputePass(),h.copyBufferToBuffer(d.gpuData.buffer,0,l.gpuData.buffer,0,m)}registerExternalBuffer(r,e,d){let l;if(d){if(l=this.externalBuffers.get(d),l===void 0)throw new Error(\"previous buffer is not registered\");if(r===d)return ze(\"verbose\",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${e}) => id=${l}, buffer is the same, skip.`),l;this.externalBuffers.delete(d)}else l=Ya();return this.storageCache.set(l,{gpuData:{id:l,type:0,buffer:r},originalSize:e}),this.externalBuffers.set(r,l),ze(\"verbose\",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${e}) => id=${l}, registered.`),l}unregisterExternalBuffer(r){let e=this.externalBuffers.get(r);e!==void 0&&(this.storageCache.delete(e),this.externalBuffers.delete(r),ze(\"verbose\",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(r,e=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let d=Gn(r),l,m=(e&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,h=(e&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(m||h){let w=m?this.freeBuffers:this.freeUniformBuffers,_=w.get(d);_||(_=[],w.set(d,_)),_.length>0?l=_.pop():l=this.backend.device.createBuffer({size:d,usage:e})}else l=this.backend.device.createBuffer({size:d,usage:e});let u={id:Ya(),type:0,buffer:l};return this.storageCache.set(u.id,{gpuData:u,originalSize:r}),ze(\"verbose\",()=>`[WebGPU] GpuDataManager.create(size=${r}) => id=${u.id}`),u}get(r){return this.storageCache.get(r)?.gpuData}release(r){let e=this.storageCache.get(r);if(!e)throw new Error(\"releasing data does not exist\");return ze(\"verbose\",()=>`[WebGPU] GpuDataManager.release(id=${r}), gpuDataId=${e.gpuData.id}`),this.storageCache.delete(r),this.buffersPending.push(e.gpuData.buffer),e.originalSize}async download(r,e){let d=this.storageCache.get(r);if(!d)throw new Error(\"data does not exist\");await wi(this.backend,d.gpuData.buffer,d.originalSize,e)}refreshPendingBuffers(){for(let r of this.buffersForUploadingPending)r.destroy();this.buffersForUploadingPending=[];for(let r of this.buffersPending)(r.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(r.size).push(r):(r.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(r.size).push(r):r.destroy();this.buffersPending=[]}dispose(){this.freeBuffers.forEach(r=>{r.forEach(e=>{e.destroy()})}),this.freeUniformBuffers.forEach(r=>{r.forEach(e=>{e.destroy()})}),this.storageCache.forEach(r=>{r.gpuData.buffer.destroy()}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map}},Xa=(...t)=>new vi(...t)});var Ci,ye,Ne=oe(()=>{\"use strict\";Ci=class{constructor(r){Object.assign(this,r)}get cacheKey(){return this._cacheKey||(this._cacheKey=Object.getOwnPropertyNames(this).sort().map(r=>`${this[r]}`).join(\";\")),this._cacheKey}},ye=t=>new Ci(t)});var $i,Ct,Y,Nt,Vn,Un,Nn,Ae=oe(()=>{\"use strict\";$i=class{static calcMatMulShape(r,e){return r[1]!==e[0]?void 0:[r[0],e[1]]}},Ct=class{static calcShape(r,e,d=!1){let l=r.length,m=e.length;if(l===0)return e;if(m===0)return r;let h=Math.max(r.length,e.length),u=new Array(h);if(d){if(l<2||m<2)return;let w=$i.calcMatMulShape([r[l-2],r[l-1]],[e[m-2],e[m-1]]);if(w===void 0)return;[u[h-2],u[h-1]]=w}for(let w=d?3:1;w<=h;w++){let _=l-w<0?1:r[l-w],O=m-w<0?1:e[m-w];if(_!==O&&_>1&&O>1)return;u[h-w]=Math.max(_,O)}return u}static isValidBroadcast(r,e){let d=r.length,l=e.length;if(d>l)return!1;for(let m=1;m<=d;m++)if(r[d-m]!==1&&r[d-m]!==e[l-m])return!1;return!0}},Y=class t{static size(r){return t.getSizeFromDimensionRange(r,0,r.length)}static sizeFromDimension(r,e){if(e<0||e>r.length)throw new Error(`invalid dimension of ${e} for sizeFromDimension as Tensor has ${r.length} dimensions.`);return t.getSizeFromDimensionRange(r,e,r.length)}static sizeToDimension(r,e){if(e<0||e>r.length)throw new Error(`invalid dimension of ${e} for sizeToDimension as Tensor has ${r.length} dimensions.`);return t.getSizeFromDimensionRange(r,0,e)}static getSizeFromDimensionRange(r,e,d){let l=1;for(let m=e;m<d;m++){if(r[m]<0)throw new Error(\"cannot get valid size from specified dimension range. Most likely the range contains negative values in them.\");l*=r[m]}return l}static computeStrides(r){let e=r.length;if(e===0)return[];if(e===1)return[1];let d=new Array(e);d[e-1]=1,d[e-2]=r[e-1];for(let l=e-3;l>=0;--l)d[l]=d[l+1]*r[l+1];return d}static normalizeAxis(r,e){if(r<-e&&r>=e)throw new Error(\"unsupported axis for this operation.\");return r<0?r+e:r}static normalizeAxes(r,e){return r.map(d=>this.normalizeAxis(d,e??r.length))}static sortBasedOnPerm(r,e){return e?e.map(d=>r[d]):r.slice().reverse()}static padShape(r,e){let d=r.length;return r.map((l,m)=>l+e[m]+e[m+d])}static areEqual(r,e){return r.length!==e.length?!1:r.every((d,l)=>d===e[l])}},Nt=class t{static adjustPoolAttributes(r,e,d,l,m,h){if(!r&&d.length!==e.length-2)throw new Error(\"length of specified kernel shapes should be 2 less than length of input dimensions\");if(r)for(let u=0;u<e.length-2;u++)u>=d.length?d.push(e[u+2]):d[u]=e[u+2];for(let u=0;u<d.length;u++)if(u<l.length){if(l[u]<0)throw new Error(\"strides should be greater than or equal to 1\")}else l.push(1);for(let u=0;u<d.length;u++)if(u<m.length){if(m[u]<0)throw new Error(\"dilations should be greater than or equal to 1\")}else m.push(1);for(let u=0;u<d.length*2;u++)if(u<h.length){if(h[u]<0)throw new Error(\"pad should be greater than or equal to 1\")}else h.push(0);for(let u=0;u<d.length;u++){if(d[u]<=0)throw new Error(\"kernel shapes need to be greater than 0\");if(h[u]>=d[u]||h[u+d.length]>=d[u])throw new Error(\"pads should be smaller than kernel\")}}static adjustPadsBasedOnAutoPad(r,e,d,l,m,h,u){if(u){if(m.length!==2*(r.length-2))throw new Error(\"length of pads should be twice the length of data dimensions\");if(e.length!==r.length-2)throw new Error(\"length of strides should be the length of data dimensions\");if(l.length!==r.length-2)throw new Error(\"length of kernel shapes should be the length of data dimensions\");for(let w=0;w<r.length-2;w++)t.adjustPadAndReturnShape(r[w+(h?1:2)],e[w],d[w],l[w],m,w,w+r.length-2,u)}}static computePoolOutputShape(r,e,d,l,m,h,u){if(e.length<=0)throw new Error(\"input shape must be of size greater than 0\");let w=[e[0],e[1]];return t.computeShapeHelper(r,e,w,d,l,m,h,u),w}static computeConvOutputShape(r,e,d,l,m,h,u){if(r.length<=0||e.length<=0)throw new Error(\"invalid input tensor dims or invalid filter tensor dims\");let w=[r[0],e[0]];return t.computeShapeHelper(!1,r,w,d,l,m,h,u),w}static computeShapeHelper(r,e,d,l,m,h,u,w){if(r)for(let _=0;_<e.length-2;_++)d.push(1);else for(let _=0;_<e.length-2;_++)d.push(t.adjustPadAndReturnShape(e[_+2],l[_],m[_],h[_],u,_,_+e.length-2,w))}static adjustPadAndReturnShape(r,e,d,l,m,h,u,w){let _=d*(l-1)+1;if(w&&w!==\"NOTSET\")switch(w){case\"VALID\":return m[h]=0,m[u]=0,Math.floor((r-_)/e+1);case\"SAME_LOWER\":case\"SAME_UPPER\":if(d!==1)throw new Error(\"Dilation not supported for SAME_UPPER or SAME_LOWER\");{let j=((r+e-1)/e-1)*e+l-r;return m[h]=Math.floor(w===\"SAME_LOWER\"?(j+1)/2:j/2),m[u]=j-m[h],Math.floor((r+j-l)/e+1)}default:throw new Error(\"Unsupported AutoPad type\")}else return Math.floor((r+m[h]+m[u]-_)/e+1)}},Vn=class{static getShapeOfGemmResult(r,e,d,l,m){if(r.length!==2||d.length!==2)throw new Error(\"shape need to be of size 2\");let h,u,w;e?(h=r[1],u=r[0]):(h=r[0],u=r[1]);let _=-1;if(l?(w=d[0],_=1):(w=d[1],_=0),d[_]!==u)throw new Error(\"dimension mismatch\");if(h<=0||w<=0||u<=0)throw new Error(\"invalid shape specified\");if(m&&!Ct.isValidBroadcast(m,[h,w]))throw new Error(\"gemm: invalid bias shape for broadcast\");return[h,w,u]}},Un=-34028234663852886e22,Nn=34028234663852886e22});var Gp,Ja,Fe,Si,Ft,mt,Ht,dr,Za,ne,fe,xi,es,_i,Pe=oe(()=>{\"use strict\";Xe();Ae();Gp=64,Ja=(t,r)=>{if(r===3)throw new Error(\"vec3 has same alignment as vec4, use vec4 instead\");switch(t){case 10:return r>1?`vec${r}<f16>`:\"f16\";case 1:return r>1?`vec${r}<f32>`:\"f32\";case 6:return r>1?`vec${r}<i32>`:\"i32\";case 12:return r>1?`vec${r}<u32>`:\"u32\";case 7:if(r>1)throw new Error(\"currently not supported vecX of uint64 yet\");return[\"vec2<u32>\",\"i32\"];case 13:if(r>1)throw new Error(\"currently not supported vecX of uint64 yet\");return[\"vec2<u32>\",\"u32\"];case 9:if(r!==4)throw new Error(\"bool must be vec4\");return[\"u32\",\"vec4<bool>\"];default:throw new Error(`Unknown data type: ${t}`)}},Fe=(t,r=1)=>{let e=Ja(t,r);return typeof e==\"string\"?e:e[0]},Si=t=>[{type:\"uint32\",data:t},{type:\"uint32\",data:Y.computeStrides(t)}],Ft=t=>t%4===0?4:t%2===0?2:1,mt=(t=\"f32\",r,e=\"0\")=>!r||r===1?`${t}(${e})`:`vec${r}<${t}>(${e})`,Ht=(t,r,e)=>t===\"f32\"?e:r===1?`f32(${e})`:`vec${r}f(${e})`,dr=(t,r)=>r===4?`(${t}.x + ${t}.y + ${t}.z + ${t}.w)`:r===2?`(${t}.x + ${t}.y)`:r===3?`(${t}.x + ${t}.y + ${t}.z)`:t,Za=(t,r,e,d,l)=>{let m=typeof e==\"number\",h=m?e:e.length,u=[...new Array(h).keys()],w=h<2?\"u32\":h<=4?`vec${h}<u32>`:`array<u32, ${h}>`,_=Ja(r,l),O=typeof _==\"string\"?_:_[1],j=typeof _==\"string\"?_:_[0],B={indices:w,value:O,storage:j,tensor:r},P=ee=>typeof ee==\"string\"?ee:`${ee}u`,R={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},T=m?\"uniforms.\":\"\",k=`${T}${t}_shape`,U=`${T}${t}_strides`,K=\"\";for(let ee=0;ee<h-1;ee++)K+=`\n    let dim${ee} = current / ${U}[${ee}];\n    let rest${ee} = current % ${U}[${ee}];\n    indices[${ee}] = dim${ee};\n    current = rest${ee};\n    `;K+=`indices[${h-1}] = current;`;let Q=h<2?\"\":`\n  fn o2i_${t}(offset: u32) -> ${B.indices} {\n    var indices: ${B.indices};\n    var current = offset;\n    ${K}\n    return indices;\n  }`,L=ee=>(R.offsetToIndices=!0,h<2?ee:`o2i_${t}(${ee})`),X=[];if(h>=2)for(let ee=h-1;ee>=0;ee--)X.push(`${U}[${ee}] * (indices[${ee}])`);let A=h<2?\"\":`\n  fn i2o_${t}(indices: ${B.indices}) -> u32 {\n    return ${X.join(\"+\")};\n  }`,Z=ee=>(R.indicesToOffset=!0,h<2?ee:`i2o_${t}(${ee})`),re=(...ee)=>h===0?\"0u\":`${B.indices}(${ee.map(P).join(\",\")})`,ie=(ee,$e)=>h<2?`${ee}`:`${ee}[${$e}]`,Ce=(ee,$e,Oe)=>h<2?`${ee}=${Oe};`:`${ee}[${$e}]=${Oe};`,H={},le=(ee,$e)=>{R.broadcastedIndicesToOffset=!0;let Oe=`${$e.name}broadcastedIndicesTo${t}Offset`;if(Oe in H)return`${Oe}(${ee})`;let et=[];for(let tt=h-1;tt>=0;tt--){let Ge=$e.indicesGet(\"outputIndices\",tt+$e.rank-h);et.push(`${ie(U,tt)} * (${Ge} % ${ie(k,tt)})`)}return H[Oe]=`fn ${Oe}(outputIndices: ${$e.type.indices}) -> u32 {\n             return ${et.length>0?et.join(\"+\"):\"0u\"};\n           }`,`${Oe}(${ee})`},Be=(ee,$e)=>(()=>{if(B.storage===B.value)return`${t}[${ee}]=${$e};`;if(B.storage===\"vec2<u32>\"&&B.value===\"i32\")return`${t}[${ee}]=vec2<u32>(u32(${$e}), select(0u, 0xFFFFFFFFu, ${$e} < 0));`;if(B.storage===\"vec2<u32>\"&&B.value===\"u32\")return`${t}[${ee}]=vec2<u32>(u32(${$e}), 0u);`;if(B.storage===\"u32\"&&B.value===\"vec4<bool>\")return`${t}[${ee}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${$e}));`;throw new Error(`not supported combination of storage type ${B.storage} and value type ${B.value} yet`)})(),ue=ee=>(()=>{if(B.storage===B.value)return`${t}[${ee}]`;if(B.storage===\"vec2<u32>\"&&B.value===\"i32\")return`i32(${t}[${ee}].x)`;if(B.storage===\"vec2<u32>\"&&B.value===\"u32\")return`u32(${t}[${ee}].x)`;if(B.storage===\"u32\"&&B.value===\"vec4<bool>\")return`vec4<bool>(bool(${t}[${ee}] & 0xFFu), bool(${t}[${ee}] & 0xFF00u), bool(${t}[${ee}] & 0xFF0000u), bool(${t}[${ee}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${B.storage} and value type ${B.value} yet`)})(),ae=h<2?\"\":`\n  fn get_${t}ByIndices(indices: ${B.indices}) -> ${O} {\n    return ${ue(`i2o_${t}(indices)`)};\n  }`,Ze=h<2?\"\":(()=>{let ee=u.map(Oe=>`d${Oe}: u32`).join(\", \"),$e=u.map(Oe=>`d${Oe}`).join(\", \");return`\n  fn get_${t}(${ee}) -> ${O} {\n    return get_${t}ByIndices(${re($e)});\n  }`})(),Ie=(...ee)=>{if(ee.length!==h)throw new Error(`indices length must be ${h}`);let $e=ee.map(P).join(\",\");return h===0?ue(\"0u\"):h===1?ue($e[0]):(R.get=!0,R.getByIndices=!0,R.indicesToOffset=!0,`get_${t}(${$e})`)},He=ee=>h<2?ue(ee):(R.getByIndices=!0,R.indicesToOffset=!0,`get_${t}ByIndices(${ee})`),Ee=h<2?\"\":`\n  fn set_${t}ByIndices(indices: ${B.indices}, value: ${O}) {\n    ${Be(`i2o_${t}(indices)`,\"value\")}\n  }`,qe=h<2?\"\":(()=>{let ee=u.map(Oe=>`d${Oe}: u32`).join(\", \"),$e=u.map(Oe=>`d${Oe}`).join(\", \");return`\n  fn set_${t}(${ee}, value: ${O}) {\n    set_${t}ByIndices(${re($e)}, value);\n  }`})();return{impl:()=>{let ee=[];return m||(ee.push(`const ${k} = ${B.indices}(${e.join(\",\")});`),ee.push(`const ${U} = ${B.indices}(${Y.computeStrides(e).join(\",\")});`)),R.offsetToIndices&&ee.push(Q),R.indicesToOffset&&ee.push(A),R.broadcastedIndicesToOffset&&Object.values(H).forEach($e=>ee.push($e)),R.set&&ee.push(qe),R.setByIndices&&ee.push(Ee),R.get&&ee.push(Ze),R.getByIndices&&ee.push(ae),ee.join(`\n`)},type:B,offsetToIndices:L,indicesToOffset:Z,broadcastedIndicesToOffset:le,indices:re,indicesGet:ie,indicesSet:Ce,set:(...ee)=>{if(ee.length!==h+1)throw new Error(`indices length must be ${h}`);let $e=ee[h];if(typeof $e!=\"string\")throw new Error(\"value must be string\");let Oe=ee.slice(0,h).map(P).join(\",\");return h===0?Be(\"0u\",$e):h===1?Be(Oe[0],$e):(R.set=!0,R.setByIndices=!0,R.indicesToOffset=!0,`set_${t}(${Oe}, ${$e})`)},setByOffset:Be,setByIndices:(ee,$e)=>h<2?Be(ee,$e):(R.setByIndices=!0,R.indicesToOffset=!0,`set_${t}ByIndices(${ee}, ${$e});`),get:Ie,getByOffset:ue,getByIndices:He,usage:d?\"input\":\"output\",name:t,strides:U,shape:k,rank:h}},ne=(t,r,e,d=1)=>Za(t,r,e,!0,d),fe=(t,r,e,d=1)=>Za(t,r,e,!1,d),xi=class{constructor(r){this.normalizedDispatchGroup=r;this.indicesHelpers=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(r){return`if (global_idx >= ${typeof r==\"number\"?`${r}u`:r}) { return; }`}mainStart(r=Gp){let e=typeof r==\"number\"?r:r[0],d=typeof r==\"number\"?1:r[1],l=typeof r==\"number\"?1:r[2],m=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,h=m?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_index) local_index : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>`,u=m?\"let global_idx = global_id.x;\":`let global_idx = (workgroup_id.z * ${this.normalizedDispatchGroup[0]*this.normalizedDispatchGroup[1]}u +\n          workgroup_id.y * ${this.normalizedDispatchGroup[0]}u + workgroup_id.x) * ${e*d*l}u + local_index;`;return`@compute @workgroup_size(${e}, ${d}, ${l})\n  fn main(${h}) {\n    ${u}\n  `}declareVariable(r,e){this.indicesHelpers.push(r),r.shape.startsWith(\"uniforms.\")&&this.uniforms.push({name:r.shape.replace(\"uniforms.\",\"\"),type:r.type.indices}),r.strides.startsWith(\"uniforms.\")&&this.uniforms.push({name:r.strides.replace(\"uniforms.\",\"\"),type:r.type.indices});let d=r.usage===\"input\"?\"read\":\"read_write\",l=r.type.storage;return`@group(0) @binding(${e}) var<storage, ${d}> ${r.name}: array<${l}>;`}declareVariables(...r){return r.map(e=>this.declareVariable(e,this.variableIndex++)).join(`\n`)}registerUniform(r,e){return this.uniforms.push({name:r,type:e}),this}uniformDeclaration(){if(this.uniforms.length===0)return\"\";let r=[];for(let{name:e,type:d}of this.uniforms)r.push(`${e}:${d}`);return`\n      struct Uniforms { ${r.join(\", \")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.indicesHelpers.map(r=>r.impl()).join(`\n`)}},es=t=>new xi(t),_i=(t,r)=>{let e=t.length,d=[];for(let l=0;l<e;l++){let m=e-1-l,h=t[m]||1;(r[r.length-1-l]||1)>1&&h===1&&d.unshift(m)}return d}});var $t,Vp,Fn,Up,xt,ts,rs,ns,is,os,as,ss,us,ls,cs,ht,Ai=oe(()=>{\"use strict\";Ae();Ne();Pe();$t=t=>{if(!t||t.length===0||t.length>2)throw new Error(\"Reduce op requires 1 or 2 inputs.\");if(t.length===2&&t[1].dims.length!==1)throw new Error(\"Invalid axes input dims.\")},Vp=t=>[\"\",\"\",`var value = ${t.getByOffset(\"inputOffset\")};`,\"\"],Fn=(t,r,e,d,l,m,h=!1,u=!1)=>{let w=[],_=e[0].dims,O=Y.normalizeAxes(l,e[0].dims.length),j=!u&&O.length===0;_.forEach((Z,re)=>{j||O.indexOf(re)>=0?h&&w.push(1):w.push(Z)});let B=[],P=ne(\"_A\",e[0].dataType,_),R=fe(\"output\",m,w),T=d(P,R,O),k=`inputOffset = ${P.indicesToOffset(\"inputIndices\")};`,U=`let ${k};`,K=`var ${k};`,Q=T[1]===\"\"?\"\":K,L=(T[1]===\"\"?U:k)+`\n`+T[2];for(let Z=0,re=0;Z<e[0].dims.length;Z++)j||O.indexOf(Z)>=0?(h&&re++,L=`for(var j${Z}: u32 = 0; j${Z} < ${e[0].dims[Z]}; j${Z}++) {\n                ${T[2].includes(\"lastIndex\")?`let lastIndex = j${Z};`:\"\"}\n                ${P.indicesSet(\"inputIndices\",Z,`j${Z}`)}\n                ${L}\n              }`):(B.push(`${P.indicesSet(\"inputIndices\",Z,R.indicesGet(\"outputIndices\",re))};`),re++);let X=Y.size(w);return{name:t,shaderCache:r,getShaderSource:Z=>`\n        ${Z.declareVariables(P,R)}\n\n        ${Z.mainStart()}\n          ${Z.guardAgainstOutOfBoundsWorkgroupSizes(X)}\n          var inputIndices: ${P.type.indices};\n          let outputIndices = ${R.offsetToIndices(\"global_idx\")};\n\n          ${B.join(`\n`)}\n          ${T[0]}       // init ops for reduce max/min\n          ${Q}\n          ${T[1]}\n          ${L}\n          ${T[3]}\n          ${T.length===4?R.setByOffset(\"global_idx\",\"value\"):T.slice(4).join(`\n`)}\n        }`,getRunData:()=>({outputs:[{dims:w,dataType:m}],dispatchGroup:{x:Math.ceil(X/64)}})}},Up=(t,r)=>{let e=[];return t[1].dims[0]>0&&t[1].getBigInt64Array().forEach(d=>e.push(Number(d))),ye({axes:e,keepDims:r.keepDims,noopWithEmptyAxes:r.noopWithEmptyAxes})},xt=(t,r,e,d)=>{let l=t.inputs,m=l.length===1?e:Up(l,e);t.compute(Fn(r,{hint:m.cacheKey},[l[0]],m.noopWithEmptyAxes&&m.axes.length===0?Vp:d,m.axes,l[0].dataType,m.keepDims,m.noopWithEmptyAxes),{inputs:[0]})},ts=(t,r)=>{$t(t.inputs),xt(t,\"ReduceLogSum\",r,(d,l)=>[`var value = ${l.type.storage}(0);`,\"\",`value += ${d.getByOffset(\"inputOffset\")};`,\"value = log(value);\"])},rs=(t,r)=>{$t(t.inputs),xt(t,\"ReduceL1\",r,(d,l)=>[`var value = ${l.type.storage}(0);`,\"\",`value += abs(${d.getByOffset(\"inputOffset\")});`,\"\"])},ns=(t,r)=>{$t(t.inputs),xt(t,\"ReduceL2\",r,(d,l)=>[`var t = ${l.type.value}(0); var value = ${l.type.value}(0);`,\"\",`t = ${d.getByOffset(\"inputOffset\")}; value += (t * t);`,\"value = sqrt(value);\"])},is=(t,r)=>{$t(t.inputs),xt(t,\"ReduceLogSumExp\",r,(d,l)=>[`var value = ${l.type.storage}(0);`,\"\",`value += exp(${d.getByOffset(\"inputOffset\")});`,\"value = log(value);\"])},os=(t,r)=>{$t(t.inputs),xt(t,\"ReduceMax\",r,(d,l,m)=>{let h=[];for(let u=0;u<d.rank;u++)(m.indexOf(u)>=0||m.length===0)&&h.push(d.indicesSet(\"inputIndices\",u,0));return[`${h.join(`\n`)}`,`var value = ${d.getByOffset(\"inputOffset\")};`,`value = max(value, ${d.getByOffset(\"inputOffset\")});`,\"\"]})},as=(t,r)=>{$t(t.inputs),xt(t,\"ReduceMean\",r,(d,l,m)=>{let h=1;for(let u=0;u<d.rank;u++)(m.indexOf(u)>=0||m.length===0)&&(h*=t.inputs[0].dims[u]);return[\"var sum = f32(0);\",\"\",`sum += f32(${d.getByOffset(\"inputOffset\")});`,`let value = ${l.type.value}(sum / ${h});`]})},ss=(t,r)=>{$t(t.inputs),xt(t,\"ReduceMin\",r,(d,l,m)=>{let h=[];for(let u=0;u<d.rank;u++)(m.indexOf(u)>=0||m.length===0)&&h.push(`inputIndices[${u}] = 0;`);return[`${h.join(`\n`)}`,`var value = ${d.getByOffset(\"inputOffset\")};`,`value = min(value, ${d.getByOffset(\"inputOffset\")});`,\"\"]})},us=(t,r)=>{$t(t.inputs),xt(t,\"ReduceProd\",r,(d,l)=>[`var value = ${l.type.storage}(1);`,\"\",`value *= ${d.getByOffset(\"inputOffset\")};`,\"\"])},ls=(t,r)=>{$t(t.inputs),xt(t,\"ReduceSum\",r,(d,l)=>[`var value = ${l.type.storage}(0);`,\"\",`value += ${d.getByOffset(\"inputOffset\")};`,\"\"])},cs=(t,r)=>{$t(t.inputs),xt(t,\"ReduceSumSquare\",r,(d,l)=>[`var t = ${l.type.value}(0); var value = ${l.type.value}(0);`,\"\",`t = ${d.getByOffset(\"inputOffset\")}; value += t * t;`,\"\"])},ht=t=>ye(t)});var ds,fs,ps,ms,Ii,hs=oe(()=>{\"use strict\";Xe();Ne();Ai();ds=t=>{if(!t||t.length===0||t.length>2)throw new Error(\"ArgMinMaxOp op requires 1 or 2 inputs.\");if(t[0].dataType!==1)throw new Error(\"Invalid input type.\")},fs=(t,r)=>ye({axis:r.axis,keepDims:r.keepDims,selectLastIndex:r.selectLastIndex}),ps=(t,r)=>{ds(t.inputs);let e=(l,m,h)=>{let u=[];for(let w=0;w<l.rank;w++)(h.indexOf(w)>=0||h.length===0)&&u.push(`inputIndices[${w}] = 0;`);return[`${u.join(`\n`)}`,`var value = ${l.getByOffset(\"inputOffset\")};\nvar bestIndex : i32 = 0;`,`if (${l.getByOffset(\"inputOffset\")} ${r.selectLastIndex>0?\"<=\":\"<\"} value) {\n         value = ${l.getByOffset(\"inputOffset\")};\n         bestIndex = i32(lastIndex);\n       }`,\"\",m.setByOffset(\"global_idx\",\"bestIndex\")]},d=t.inputs.length===1?r:fs(t.inputs,r);t.compute(Fn(\"ArgMin\",{hint:d.cacheKey},[t.inputs[0]],e,[d.axis],7,d.keepDims),{inputs:[0]})},ms=(t,r)=>{ds(t.inputs);let e=(l,m,h)=>{let u=[];for(let w=0;w<l.rank;w++)(h.indexOf(w)>=0||h.length===0)&&u.push(`inputIndices[${w}] = 0;`);return[`${u.join(`\n`)}`,`var value = ${l.getByOffset(\"inputOffset\")};\nvar bestIndex : i32 = 0;`,`if (${l.getByOffset(\"inputOffset\")} ${r.selectLastIndex>0?\">=\":\">\"} value) {\n         value = ${l.getByOffset(\"inputOffset\")};\n         bestIndex = i32(lastIndex);\n       }`,\"\",m.setByOffset(\"global_idx\",\"bestIndex\")]},d=t.inputs.length===1?r:fs(t.inputs,r);t.compute(Fn(\"argMax\",{hint:d.cacheKey},[t.inputs[0]],e,[d.axis],7,d.keepDims),{inputs:[0]})},Ii=t=>ye(t)});var Np,Fp,gs,ys=oe(()=>{\"use strict\";Ae();Pe();Np=t=>{if(t[0].dims.length!==3)throw new Error(\"input should have 3 dimensions\");if(![320,640,1280].includes(t[0].dims[2]))throw new Error(\"number of channels should be 320, 640 or 1280\");if(t[1].dims.length!==1)throw new Error(\"bias is expected to have 1 dimensions\");if(t[0].dims[2]!==t[1].dims[0])throw new Error(\"last dimension of input and bias are not the same\")},Fp=t=>{let r=t[0].dims,e=t[0].dims[2],d=Y.size(r)/4,l=t[0].dataType,m=ne(\"input\",l,r,4),h=ne(\"bias\",l,[e],4),u=ne(\"residual\",l,r,4),w=fe(\"output\",l,r,4);return{name:\"BiasAdd\",getRunData:()=>({outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)}}),getShaderSource:O=>`\n  const channels = ${e}u / 4;\n  ${O.declareVariables(m,h,u,w)}\n\n  ${O.mainStart()}\n    ${O.guardAgainstOutOfBoundsWorkgroupSizes(d)}\n    let value = ${m.getByOffset(\"global_idx\")}\n      + ${h.getByOffset(\"global_idx % channels\")} + ${u.getByOffset(\"global_idx\")};\n    ${w.setByOffset(\"global_idx\",\"value\")}\n  }`}},gs=t=>{Np(t.inputs),t.compute(Fp(t.inputs))}});var Hp,Re,bs,vs,ws,Cs,$s,xs,Ss,_s,As,Ti,Lp,Is,Ts,Os,Es,Hn,Ps,Ln,Rs,ks,Bs,Ms,js,Ds,Ws,zs,Gs,Vs,Us,Ns,Fs,Hs,Ls,Ks,qs,Oi=oe(()=>{\"use strict\";Xe();Ae();Ne();Pe();Hp=(t,r,e,d,l,m)=>{let h=Math.ceil(r/4),u=\"\";typeof l==\"string\"?u=`${l}(a)`:u=l(\"a\");let w=ne(\"inputData\",e,[h],4),_=fe(\"outputData\",d,[h],4);return`\n  ${t.declareVariables(w,_)}\n\n  ${m??\"\"}\n\n  ${t.mainStart()}\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes(h)}\n\n    let a = ${w.getByOffset(\"global_idx\")};\n    ${_.setByOffset(\"global_idx\",u)}\n  }`},Re=(t,r,e,d,l,m=t.dataType)=>({name:r,shaderCache:{hint:l},getShaderSource:h=>Hp(h,Y.size(t.dims),t.dataType,m,e,d),getRunData:h=>({outputs:[{dims:t.dims,dataType:m}],dispatchGroup:{x:Math.ceil(Y.size(h[0].dims)/64/4)}})}),bs=t=>{t.compute(Re(t.inputs[0],\"Abs\",\"abs\"))},vs=t=>{t.compute(Re(t.inputs[0],\"Acos\",\"acos\"))},ws=t=>{t.compute(Re(t.inputs[0],\"Acosh\",\"acosh\"))},Cs=t=>{t.compute(Re(t.inputs[0],\"Asin\",\"asin\"))},$s=t=>{t.compute(Re(t.inputs[0],\"Asinh\",\"asinh\"))},xs=t=>{t.compute(Re(t.inputs[0],\"Atan\",\"atan\"))},Ss=t=>{t.compute(Re(t.inputs[0],\"Atanh\",\"atanh\"))},_s=t=>ye(t),As=(t,r)=>{let e;switch(r.to){case 10:e=\"vec4<f16>\";break;case 1:e=\"vec4<f32>\";break;case 12:e=\"vec4<u32>\";break;case 6:e=\"vec4<i32>\";break;case 9:e=\"vec4<bool>\";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${r.to}`)}t.compute(Re(t.inputs[0],\"Cast\",e,void 0,r.cacheKey,r.to))},Ti=(t,r)=>{let e=Fe(t.inputs[0].dataType);t.compute(Re(t.inputs[0],\"Clip\",d=>`clamp(${d}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${e}> = vec4(${e}(${r.min}));\n    const clip_max_: vec4<${e}> = vec4(${e}(${r.max}));\n`,r.cacheKey),{inputs:[0]})},Lp=t=>{let r=t.length>=2?t[1].getFloat32Array()[0]:Un,e=t.length>=3?t[2].getFloat32Array()[0]:Nn;return ye({min:r,max:e})},Is=t=>{let r=Lp(t.inputs);Ti(t,r)},Ts=t=>{t.compute(Re(t.inputs[0],\"Ceil\",\"ceil\"))},Os=t=>{t.compute(Re(t.inputs[0],\"Cos\",\"cos\"))},Es=t=>{t.compute(Re(t.inputs[0],\"Cosh\",\"cosh\"))},Hn=t=>ye(t),Ps=(t,r)=>{t.compute(Re(t.inputs[0],\"Elu\",e=>`elu_vf32(${e})`,`\n  const elu_alpha_: f32 = f32(${r.alpha});\n\n  fn elu_f32(a: f32) -> f32 {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<f32>) -> vec4<f32> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,r.cacheKey))},Ln=(t,r=\"f32\")=>`\nconst r0: ${r} = 0.3275911;\nconst r1: ${r} = 0.254829592;\nconst r2: ${r} = -0.284496736;\nconst r3: ${r} = 1.421413741;\nconst r4: ${r} = -1.453152027;\nconst r5: ${r} = 1.061405429;\n\nfn erf_vf32(v: ${t}) -> ${t} {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,Rs=t=>{let r=Fe(t.inputs[0].dataType);t.compute(Re(t.inputs[0],\"Erf\",e=>`erf_vf32(${e})`,Ln(`vec4<${r}>`,r)))},ks=t=>{t.compute(Re(t.inputs[0],\"Exp\",\"exp\"))},Bs=t=>{t.compute(Re(t.inputs[0],\"Floor\",\"floor\"))},Ms=t=>{let r=Fe(t.inputs[0].dataType);t.compute(Re(t.inputs[0],\"Gelu\",e=>`0.5 * ${e} * (1.0 + erf_vf32(${e} * 0.7071067811865475))`,Ln(`vec4<${r}>`,r)))},js=(t,r)=>{t.compute(Re(t.inputs[0],\"LeakyRelu\",e=>`select(leaky_relu_alpha_ * ${e}, ${e}, ${e} >= vec4<f32>(0.0))`,`const leaky_relu_alpha_: f32 = f32(${r.alpha});`,r.cacheKey))},Ds=t=>{t.compute(Re(t.inputs[0],\"Not\",r=>`!${r}`))},Ws=t=>{t.compute(Re(t.inputs[0],\"Neg\",r=>`-${r}`))},zs=t=>{t.compute(Re(t.inputs[0],\"Reciprocal\",r=>`1.0/${r}`))},Gs=t=>{t.compute(Re(t.inputs[0],\"Relu\",r=>`select(vec4<f32>(0.0), ${r}, ${r} > vec4<f32>(0.0))`))},Vs=t=>{t.compute(Re(t.inputs[0],\"Sigmoid\",r=>`(1.0 / (1.0 + exp(-${r})))`))},Us=t=>{t.compute(Re(t.inputs[0],\"Sin\",\"sin\"))},Ns=t=>{t.compute(Re(t.inputs[0],\"Sinh\",\"sinh\"))},Fs=t=>{t.compute(Re(t.inputs[0],\"Sqrt\",\"sqrt\"))},Hs=t=>{t.compute(Re(t.inputs[0],\"Tan\",\"tan\"))},Ls=t=>{t.compute(Re(t.inputs[0],\"Tanh\",\"tanh\"))},Ks=(t,r)=>(t.compute(Re(t.inputs[0],\"ThresholdedRelu\",e=>`select(vec4<f32>(0.0), ${e}, ${e} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_: vec4<f32> = vec4<f32>(${r.alpha});`,r.cacheKey)),0),qs=t=>{t.compute(Re(t.inputs[0],\"Log\",\"log\"))}});var qp,Yp,Ys,Xs=oe(()=>{\"use strict\";Ae();Pe();Oi();qp=t=>{if(t[0].dims.length!==3)throw new Error(\"input should have 3 dimensions\");if(![2560,5120,10240].includes(t[0].dims[2]))throw new Error(\"hidden state should be 2560, 5120 or 10240\");if(t[1].dims.length!==1)throw new Error(\"bias is expected to have 1 dimensions\");if(t[0].dims[2]!==t[1].dims[0])throw new Error(\"last dimension of input and bias are not the same\")},Yp=t=>{let r=t[0].dims.slice();r[2]=r[2]/2;let e=ne(\"input\",t[0].dataType,t[0].dims,4),d=ne(\"bias\",t[0].dataType,[t[0].dims[2]],4),l=fe(\"output\",t[0].dataType,r,4),m=Y.size(r)/4;return{name:\"BiasSplitGelu\",getRunData:()=>({outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)}}),getShaderSource:u=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${t[0].dims[2]/4/2}u;\n\n  ${u.declareVariables(e,d,l)}\n\n  ${Ln(\"vec4f\")}\n\n  ${u.mainStart()}\n    ${u.guardAgainstOutOfBoundsWorkgroupSizes(m)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${l.setByOffset(\"global_idx\",\"valueLeft * geluRight\")}\n  }`}},Ys=t=>{qp(t.inputs),t.compute(Yp(t.inputs))}});var Xp,Qp,St,Qs,Js,Zs,eu,tu,ru,nu,iu,ou,au,su=oe(()=>{\"use strict\";Xe();Ae();Pe();Xp=(t,r,e,d,l,m,h,u,w,_,O)=>{let j=Y.size(d),B=Math.ceil(j/4),P,R;typeof h==\"string\"?P=R=(L,X)=>`${h}((${L}),(${X}))`:typeof h==\"function\"?P=R=h:(P=h.scalar,R=h.vector);let T=\"\",k=fe(\"outputData\",_,d,4),U=ne(\"aData\",u,r,4),K=ne(\"bData\",w,e,4);if(m){let L=X=>{let A=Y.computeStrides(X),Z=[];for(let re=X.length-1;re>=0;re--){let ie=k.indicesGet(\"outputIndices\",re+d.length-X.length);Z.push(`${A[re]}u * (${ie} % ${X[re]}u)`)}return Z.length>0?Z.join(\"+\"):\"0u\"};T=`\n          fn calcOffsetA(outputIndices: ${k.type.indices}) -> u32 {\n            return ${L(r)};\n          }\n\n          fn calcOffsetB(outputIndices: ${k.type.indices}) -> u32 {\n            return ${L(e)};\n          }\n        `}let Q;if(l)if(m){let L=Y.size(r)===1,X=Y.size(e)===1;L||X?Q=k.setByOffset(\"global_idx\",R(L?`${U.type.value}(${U.getByOffset(\"0\")}.x)`:U.getByOffset(\"global_idx\"),X?`${K.type.value}(${K.getByOffset(\"0\")}.x)`:K.getByOffset(\"global_idx\"))):Q=`\n            let outputIndices = ${k.offsetToIndices(\"global_idx * 4u\")};\n            let offsetA = calcOffsetA(outputIndices);\n            let offsetB = calcOffsetB(outputIndices);\n            ${k.setByOffset(\"global_idx\",R(U.getByOffset(\"offsetA / 4u\"),K.getByOffset(\"offsetB / 4u\")))}\n          `}else Q=k.setByOffset(\"global_idx\",R(U.getByOffset(\"global_idx\"),K.getByOffset(\"global_idx\")));else{if(!m)throw new Error(\"no necessary to use scalar implementation for element-wise binary op implementation.\");let L=(X,A,Z=\"\")=>{let re=`aData[indexA${A}][componentA${A}]`,ie=`bData[indexB${A}][componentB${A}]`;return`\n            let outputIndices${A} = ${k.offsetToIndices(`global_idx * 4u + ${A}u`)};\n            let offsetA${A} = calcOffsetA(outputIndices${A});\n            let offsetB${A} = calcOffsetB(outputIndices${A});\n            let indexA${A} = offsetA${A} / 4u;\n            let indexB${A} = offsetB${A} / 4u;\n            let componentA${A} = offsetA${A} % 4u;\n            let componentB${A} = offsetB${A} % 4u;\n            ${X}[${A}] = ${Z}(${P(re,ie)});\n          `};_===9?Q=`\n            var data = vec4<u32>(0);\n            ${L(\"data\",0,\"u32\")}\n            ${L(\"data\",1,\"u32\")}\n            ${L(\"data\",2,\"u32\")}\n            ${L(\"data\",3,\"u32\")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:Q=`\n            ${L(\"outputData[global_idx]\",0)}\n            ${L(\"outputData[global_idx]\",1)}\n            ${L(\"outputData[global_idx]\",2)}\n            ${L(\"outputData[global_idx]\",3)}\n          `}return`\n        ${t.declareVariables(U,K,k)}\n\n        ${O??\"\"}\n        ${T}\n\n        ${t.mainStart()}\n        ${t.guardAgainstOutOfBoundsWorkgroupSizes(B)}\n        ${Q}\n      }`},Qp=(t,r,e,d,l,m,h=e.dataType)=>{let u=!Y.areEqual(e.dims,d.dims),w=e.dims,_=Y.size(e.dims),O=!1;if(u){let j=Ct.calcShape(e.dims,d.dims,!1);if(!j)throw new Error(\"Can't perform binary op on the given tensors\");w=j,_=Y.size(w);let B=Y.size(e.dims)===1,P=Y.size(d.dims)===1,R=1;for(let T=1;T<w.length;T++){let k=e.dims[e.dims.length-T]??1,U=d.dims[d.dims.length-T]??1;if(k===U)R*=k;else break}(R%4===0||B||P)&&(O=!0)}else O=!0;return{name:t,shaderCache:{hint:r},getShaderSource:j=>Xp(j,e.dims,d.dims,w,O,u,l,e.dataType,d.dataType,h,m),getRunData:()=>({outputs:[{dims:w,dataType:h}],dispatchGroup:{x:Math.ceil(_/64/4)}})}},St=(t,r,e,d,l,m)=>{t.compute(Qp(r,l??\"\",t.inputs[0],t.inputs[1],e,d,m))},Qs=t=>{St(t,\"Add\",(r,e)=>`${r}+${e}`)},Js=t=>{St(t,\"Div\",(r,e)=>`${r}/${e}`)},Zs=t=>{St(t,\"Equal\",{scalar:(r,e)=>`u32(${r}==${e})`,vector:(r,e)=>`vec4<u32>(${r}==${e})`},void 0,void 0,9)},eu=t=>{St(t,\"Mul\",(r,e)=>`${r}*${e}`)},tu=t=>{let r=ne(\"input\",t.inputs[0].dataType,t.inputs[0].dims).type.value;St(t,\"Pow\",{scalar:(d,l)=>`pow_custom(${d},${l})`,vector:(d,l)=>`pow_vector_custom(${d},${l})`},`\n    fn pow_custom(a : ${r}, b : ${r}) -> ${r} {\n      if (b == ${r}(0.0)) {\n        return ${r}(1.0);\n      } else if (a < ${r}(0.0) && f32(b) != floor(f32(b))) {\n        return ${r}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${r}(1.0), round(f32(abs(b) % ${r}(2.0))) != 1.0) * ${r}(${r===\"i32\"?\"round\":\"\"}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${r}>, b : vec4<${r}>) -> vec4<${r}> {\n      // TODO: implement vectorized pow\n      return vec4<${r}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},ru=t=>{St(t,\"Sub\",(r,e)=>`${r}-${e}`)},nu=t=>{St(t,\"Greater\",{scalar:(r,e)=>`u32(${r}>${e})`,vector:(r,e)=>`vec4<u32>(${r}>${e})`},void 0,void 0,9)},iu=t=>{St(t,\"Less\",{scalar:(r,e)=>`u32(${r}<${e})`,vector:(r,e)=>`vec4<u32>(${r}<${e})`},void 0,void 0,9)},ou=t=>{St(t,\"GreaterOrEqual\",{scalar:(r,e)=>`u32(${r}>=${e})`,vector:(r,e)=>`vec4<u32>(${r}>=${e})`},void 0,void 0,9)},au=t=>{St(t,\"LessOrEqual\",{scalar:(r,e)=>`u32(${r}<=${e})`,vector:(r,e)=>`vec4<u32>(${r}<=${e})`},void 0,void 0,9)}});var Zp,em,tm,rm,uu,lu,cu=oe(()=>{\"use strict\";Ae();Ne();Pe();Zp=t=>{if(!t||t.length<1)throw new Error(\"too few inputs\");let r=t[0].dataType,e=t[0].dims.length;for(let d of t){if(d.dataType!==r)throw new Error(\"input tensors should be one type\");if(d.dims.length!==e)throw new Error(\"input tensors should have the same shape\")}},em=t=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${t}u; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${t}u;\n  }`,tm=(t,r)=>{let e=t.length,d=[];for(let l=0;l<e;++l){let m=r.setByOffset(\"global_idx\",t[l].getByIndices(\"indices\"));e===1?d.push(m):l===0?d.push(`if (inputIndex == ${l}u) { ${m} }`):l===e-1?d.push(`else { ${m} }`):d.push(`else if (inputIndex == ${l}) { ${m} }`)}return d.join(`\n`)},rm=(t,r)=>{let e=t[0].dims.slice();if(r>=e.length||r<-1*e.length)throw new Error(\"axis specified for concat doesn't match input dimensionality\");let d=r<0?e.length+r:r,l=e.slice(0);for(let P=1;P<t.length;P++){let R=t[P].dims.slice();for(let T=0;T<e.length;T++)if(T===d)l[d]+=R[T];else if(e[T]!==R[T])throw new Error(\"non concat dimensions must match\")}let m=Y.size(l),h=new Array(t.length),u=new Array(t.length),w=t[0].dataType,_=0;for(let P=0;P<t.length;++P)_+=t[P].dims[d],h[P]=_,u[P]=ne(`input${P}`,w,t[P].dims);let O=fe(\"output\",w,l),j=O.indicesGet(\"indices\",d),B=P=>`\n  ${P.declareVariables(...u,O)}\n\n  const sizeInConcatAxis = array<u32, ${h.length}>(${h.map(R=>`${R}u`).join(\",\")});\n  ${em(h.length)}\n\n  ${P.mainStart()}\n    ${P.guardAgainstOutOfBoundsWorkgroupSizes(m)}\n\n    var indices = ${O.offsetToIndices(\"global_idx\")};\n\n    let inputIndex = calculateInputIndex(${j});\n    if (inputIndex != 0u) {\n      ${j} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${tm(u,O)}\n  }`;return{name:\"Concat\",shaderCache:{hint:`${r}`},getRunData:()=>({outputs:[{dims:l,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)}}),getShaderSource:B}},uu=(t,r)=>{Zp(t.inputs),t.compute(rm(t.inputs,r.axis))},lu=t=>ye({axis:t.axis})});var Qe,Kn,qn,Yn=oe(()=>{\"use strict\";Qe=(t,r)=>{switch(t){case 1:return r;case 2:return`vec2<${r}>`;case 3:return`vec3<${r}>`;case 4:return`vec4<${r}>`;default:throw new Error(`${t}-component is not supported.`)}},Kn=(t,r=!1,e=!1,d=3)=>\"\",qn=(t,r)=>`\n      ${t?\"value = value + getBiasByOutputCoords(coords);\":\"\"}\n      ${r?\"value = activation(value, coords);\":\"\"}\n      `});var Xn,Ei=oe(()=>{\"use strict\";Xn=`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    outShapeStrides.x, outShapeStrides.y, outShapeStrides.z, 1));\n}\n`});var Qn,Jn,on=oe(()=>{\"use strict\";Ae();Qn=t=>{switch(t.activation){case\"Relu\":return{activationFunction:\"\",applyActivation:\"value = max(value, 0.0);\"};case\"Sigmoid\":return{activationFunction:\"\",applyActivation:\"value = (1.0 / (1.0 + exp(-value)));\"};case\"Clip\":return{activationFunction:`const clip_min_=f32(${t.clipMin});const clip_max_=f32(${t.clipMax});`,applyActivation:\"value = clamp(value, clip_min_, clip_max_);\"};default:return{activationFunction:\"\",applyActivation:\"\"}}},Jn=t=>{let r=t?.activation||\"\";if(r===\"Clip\"){let[e,d]=t?.activation_params||[Un,Nn];return{activation:r,clipMax:d,clipMin:e,activationCacheKey:`${r}:${e},${d}`}}return{activation:r,activationCacheKey:r}}});var nm,im,an,du,om,sn,am,Zn,un=oe(()=>{\"use strict\";Ae();Pe();on();Yn();nm=(t,r)=>t?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${r?\", batchIndices\":\"\"});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${r?\", batchIndices\":\"\"});\n        `,im=(t,r)=>t?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${r===3?\"\":\"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];\"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${r===3?\"\":\"acc[i] = BCached3 * ACached3[i] + acc[i];\"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${r===3?\"\":\"acc[i] = BCached3 * ACached.w + acc[i];\"}\n        }`,an=(t,r,e=\"f32\",d,l=!1,m=32,h=!1,u=32)=>{let w=r[1]*t[1],_=r[0]*t[0],O=l?w:m,j=l?m:w,B=O/r[0],P=m/r[1];if(!((l&&B===4&&t[1]===4||!l&&(B===3||B===4))&&O%r[0]===0&&m%r[1]===0&&t[0]===4))throw new Error(`If transposeA ${l} is true, innerElementSize ${B} and workPerThread[1] ${t[1]} must be 4.\n      Otherwise, innerElementSize ${B} must be 3 or 4.\n  tileAWidth ${O} must be divisible by workgroupSize[0]${r[0]}. tileInner ${m} must be divisible by workgroupSize[1] ${r[1]}. colPerThread ${t[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${B}<${e}>, ${O/B}>, ${j}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${e}>, ${_/t[0]}>, ${m}>;\n\nconst rowPerThread = ${t[1]};\nconst colPerThread = ${t[0]};\nconst innerElementSize = ${B};\nconst tileInner = ${m};\n\n@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${h?\"0\":\"i32(globalId.z)\"};\n  ${d?`let batchIndices = ${d.offsetToIndices(\"u32(batch)\")};`:\"\"}\n  let globalRowStart = i32(workgroupId.y) * ${w};\n\n  let numTiles = ${h?`${Math.ceil(u/m)}`:\"(dimInner - 1) / tileInner + 1\"};\n  var kStart = ${h?`i32(globalId.z) * ${u}`:\"0\"};\n\n  var acc: array<vec4<${e}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${P};\n  for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${nm(l,d)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${P}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${d?\", batchIndices\":\"\"});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${B===3?\"\":\"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];\"}\n\n          ${im(l,B)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},du=(t,r)=>t?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${r?\", batchIndices\":\"\"});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${r?\", batchIndices\":\"\"});\n            `,om=t=>t?\"let ACached = mm_Asub[k][tileRow + innerRow];\":\"let ACached = mm_Asub[tileRow + innerRow][k];\",sn=(t,r,e=\"f32\",d,l=!1,m=32,h=!1,u=32,w=!1)=>{let _=t[1]*r[1],O=t[0]*r[0],j=l?_:m,B=l?m:_;if(!(B%r[1]===0&&j%r[0]===0&&m%r[1]===0))throw new Error(`tileAHight ${B} must be divisible by workgroupSize[1]${r[1]}, tileAWidth ${j} must be divisible by workgroupSize[0]${r[0]}, tileInner ${m} must be divisible by workgroupSize[1]${r[1]}`);let P=B/r[1],R=j/r[0],T=m/r[1],k=w?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${_};\n    let globalColStart = i32(workgroupId.x) * ${O};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${B}; inputRow = inputRow + ${r[1]}) {\n        for (var inputCol = localCol; inputCol < ${j}; inputCol = inputCol + ${r[0]}) {\n          ${du(l,d)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${m}; inputRow = inputRow + ${r[1]}) {\n            for (var inputCol = localCol; inputCol < ${O}; inputCol = inputCol + ${r[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${d?\", batchIndices\":\"\"});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${e}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${r[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${l?`mm_Asub[k][localRow + innerRow * ${r[1]}];`:`mm_Asub[localRow + innerRow * ${r[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${r[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${r[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${_};\n\nlet tileRowA = i32(localId.y) * ${P};\nlet tileColA = i32(localId.x) * ${R};\nlet tileRowB = i32(localId.y) * ${T};\n// Loop over shared dimension.\nfor (var t = 0; t < numTiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${P}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${R}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${du(l,d)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${T}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${d?\", batchIndices\":\"\"});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${e}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${om(l)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${e}, ${j}>, ${B}>;\n  var<workgroup> mm_Bsub : array<array<${e}, ${O}>, ${m}>;\n  const rowPerThread = ${t[1]};\n  const colPerThread = ${t[0]};\n  const tileInner = ${m};\n\n@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${h?\"0\":\"i32(globalId.z)\"};\n    ${d?`let batchIndices = ${d.offsetToIndices(\"u32(batch)\")};`:\"\"}\n    let numTiles = ${h?`${Math.ceil(u/m)}`:\"(dimInner - 1) / tileInner + 1\"};\n    var kStart = ${h?`i32(globalId.z) * ${u}`:\"0\"};\n\n    var acc : array<array<${e}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${k}\n  }\n`},am=(t,r,e,d,l,m=!1)=>{let h=l[0],u=l[1],w=l[2],_=d[0],O=d[1],j=d[2],B=d[3],P=_i(h,w),R=_i(u,w),T=Fe(d[0].type.tensor),k=()=>{let Q=O.rank,L=_.rank,X=`var aIndices: ${O.type.indices};`;for(let A=Q-2-1,Z=L-1;A>=0;A--,Z--)X+=`\naIndices[${A}] = ${L>1?`batchIndices[${Z}]`:\"batchIndices\"};`;return P.forEach(A=>{X+=`\naIndices[${A}] = 0;`}),X+=`\naIndices[${Q-2}] = u32(row);\n                   aIndices[${Q-1}] = u32(colIn);`,X},U=()=>{let Q=j.rank,L=_.rank,X=`var bIndices: ${j.type.indices};`;for(let A=Q-2-1,Z=L-1;A>=0;A--,Z--)X+=`\nbIndices[${A}] = ${L>1?`batchIndices[${Z}]`:\"batchIndices\"};`;return R.forEach(A=>{X+=`\nbIndices[${A}] = 0;`}),X+=`\nbIndices[${Q-2}] = u32(row);\n                   bIndices[${Q-1}] = u32(colIn);`,X};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${_.type.indices}) -> ${Qe(t,T)} {\n      var value = ${Qe(t,T)}(0.0);\n      let col = colIn * ${t};\n      if(row < dimAOuter && col < dimInner)\n      {\n        ${k()}\n        value = ${O.getByIndices(\"aIndices\")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${_.type.indices}) -> ${Qe(t,T)} {\n      var value = ${Qe(t,T)}(0.0);\n      let col = colIn * ${t};\n      if(row < dimInner && col < dimBOuter)\n      {\n        ${U()}\n        value = ${j.getByIndices(\"bIndices\")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Qe(t,T)}) {\n      let col = colIn * ${t};\n      if (row < dimAOuter && col < dimBOuter) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${r?`value = value + ${m?\"bias[colIn]\":`${Qe(t,T)}(bias[row])`};`:\"\"}\n        ${e}\n        ${B.setByIndices(\"vec3<u32>(coords)\",\"value\")}\n      }\n    }\n    `},Zn=(t,r,e,d,l=!1)=>{let m=t[0].dims,h=t[1].dims,u=m.slice(0,-2),w=h.slice(0,-2),_=d?d.slice(0,-2):e.slice(0,-2),O=ne(\"batchDims\",t[0].dataType,_),j=[O],B=[u,w,_],P=Y.size(_),R=m[m.length-2],T=m[m.length-1],k=h[h.length-1],U=T%4===0&&k%4===0,{activationFunction:K,applyActivation:Q}=Qn(r),L=R<=8?[4,1,1]:[4,4,1],X=[8,8,1],A=[Math.ceil(k/X[0]/L[0]),Math.ceil(R/X[1]/L[1]),Math.ceil(P/X[2]/L[2])],Z=Fe(t[0].dataType),re=U?4:1,ie=ne(\"a\",t[0].dataType,[...u,R,T/re],re),Ce=ne(\"b\",t[1].dataType,[...w,T,k/re],re),H=fe(\"result\",t[0].dataType,[P,R,k/re],re);j.push(ie),j.push(Ce),j.push(H);let le=[ie,Ce],Be=t.length>2,ue=am(re,Be,Q,j,B,l);if(Be){let Ze=l?re:1;le.push(ne(\"bias\",t[2].dataType,t[2].dims,Ze))}let ae=Ze=>`\n  const dimAOuter: i32 = ${R};\n  const dimBOuter: i32 = ${k};\n  const dimInner: i32 = ${T};\n  ${Ze.declareVariables(...le,H)}\n  ${ue}\n  ${K}\n  ${U?an(L,X,Z,O):sn(L,X,Z,O)}\n                   ${O.impl()}`;return{name:\"MatMul\",shaderCache:{hint:r.activationCacheKey},getRunData:()=>({outputs:[{dims:e,dataType:t[0].dataType}],dispatchGroup:{x:A[0],y:A[1],z:A[2]}}),getShaderSource:ae}}});var sm,fu,pu=oe(()=>{\"use strict\";Tt();Ae();Pe();Yn();Ei();un();sm=(t,r,e,d,l=!1,m,h=!1,u=4,w=4,_=4,O=\"f32\")=>{let j=Ce=>{switch(Ce){case 1:return\"resData = x[xIndex];\";case 3:return`resData = vec3<${O}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return\"resData = x[xIndex / 4];\";default:throw new Error(`innerElementSize ${Ce} is not supported.`)}},B=Ce=>{switch(Ce){case 1:return\"return w[row * wShape[3] + colIn];\";case 4:return\"return w[row * wShape[3] / 4 + colIn];\";default:throw new Error(`innerElementSize ${Ce} is not supported.`)}},P=t?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,R=t?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,T=t?\"xShape[1]\":\"xShape[2]\",k=t?\"xShape[2]\":\"xShape[3]\",U=t?\"row\":\"col\",K=t?\"col\":\"row\",Q=`\n    let inChannels = wShape[2];\n    let outWidth = ${t?\"outShape[2]\":\"outShape[3]\"};\n    let outRow = ${U} / outWidth;\n    let outCol = ${U} % outWidth;\n\n    let WRow = ${K} / (filterDims[1] * inChannels);\n    let WCol = ${K} / inChannels % filterDims[1];\n    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];\n    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];\n    let xCh = ${K} % inChannels;\n    var resData = ${Qe(u,O)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the 'same' padding type.\n    if (xRow >= 0 && xRow < ${T} && xCol >= 0 && xCol < ${k}) {\n      ${P}\n      let xIndex = getIndexFromCoords4D(coord, xShape);\n      ${j(u)}\n    }\n    return resData;`,L=t?r&&d?`\n    let col = colIn * ${u};\n    ${Q}`:`\n    let col = colIn * ${u};\n    if (row < dimAOuter && col < dimInner) {\n      ${Q}\n    }\n    return ${Qe(u,O)}(0.0);`:d&&e?`\n    let col = colIn * ${u};\n    ${Q}`:`\n    let col = colIn * ${u};\n    if (row < dimInner && col < dimBOuter) {\n      ${Q}\n    }\n    return ${Qe(u,O)}(0.0);`,X=`${B(w)}`,A=Qe(_,O),Z=t?Qe(u,O):Qe(w,O),re=t?Qe(w,O):Qe(u,O);return`\n    ${Kn(m,h,_===4,4)}\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${Z} {\n      ${t?L:X}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${re} {\n      ${t?X:L}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${A}) {\n      let col = colIn * ${_};\n      if (row < dimAOuter && col < dimBOuter)\n      {\n      var value = valueIn;\n      let outWidth = ${t?\"outShape[2]\":\"outShape[3]\"};\n      ${R}\n      ${qn(l,m)}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},fu=(t,r,e,d,l,m,h,u)=>{let w=r.format===\"NHWC\",_=w?t[0].dims[3]:t[0].dims[1],O=e[0],j=w?e[2]:e[3],B=w?e[1]:e[2],P=w?e[3]:e[1],R=w&&(_%4===0||_%3===0)&&P%4===0,T=w?P:j*B,k=w?j*B:P,U=[8,8,1],K=d<=8?[4,1,1]:[4,4,1],Q=[Math.ceil(T/U[0]/K[0]),Math.ceil(k/U[1]/K[1]),Math.ceil(O/U[2]/K[2])];ze(\"verbose\",()=>`[conv2d_mm_webgpu] dispatch = ${Q}`);let L=R?w&&_%4!==0?3:4:K[0],X=U[1]*K[1],A=U[0]*K[0],Z=Math.max(U[0]*L,U[1]),re=d%X===0,ie=l%A===0,Ce=m%Z===0,H=R?[L,4,4]:[1,1,1],le=Fe(t[0].dataType),Be=[`@group(0) @binding(0) var<storage, read> x: array<${R&&L===4?`vec4<${le}>`:le}>;`,`@group(0) @binding(1) var<storage, read> w: array<${R?`vec4<${le}>`:le}>;`],ue=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${R?`vec4<${le}>`:le}) {\n        result[flatIndex] = ${R?`vec4<${le}>`:le}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${R?`vec4<${le}>`:le}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${R?\"/ 4\":\"\"}, value);\n      }`;return h&&(Be.push(`@group(0) @binding(2) var<storage, read> bias: array<${R?`vec4<${le}>`:le}>;`),ue+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${R?`vec4<${le}>`:le} {\n          return bias[coords.${w?\"w\":\"y\"}${R?\"/ 4\":\"\"}];\n        }`),{name:\"Conv2DMatMul\",shaderCache:{hint:r.cacheKey},getRunData:()=>({outputs:[{dims:e,dataType:t[0].dataType}],dispatchGroup:{x:Q[0],y:Q[1],z:Q[2]}}),getShaderSource:()=>`\n        ${Xn}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${Be.join(\"\")}\n        @group(0) @binding(${Be.length}) var<storage, read_write> result: array<${R?`vec4<${le}>`:le}>;\n        //@group(0) @binding(${Be.length+1}) var<uniform> uniforms: Uniforms;\n\n        const xShape : vec4<i32> = vec4<i32>(${t[0].dims.join(\",\")});\n        const wShape : vec4<i32> = vec4<i32>(${t[1].dims.join(\",\")});\n        const outShape : vec4<i32> = vec4<i32>(${e.join(\",\")});\n        const outShapeStrides : vec3<i32> = vec3<i32>(${Y.computeStrides(e).slice(0,3).join(\",\")});\n        const filterDims : vec2<i32> = vec2<i32>(${r.kernelShape[0]}, ${r.kernelShape[1]});\n        const pad : vec2<i32> = vec2<i32>(${r.pads[0]}, ${r.pads[1]});\n        const stride : vec2<i32> = vec2<i32>(${r.strides[0]}, ${r.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${r.dilations[0]}, ${r.dilations[1]});\n        const dimAOuter : i32 = ${d};\n        const dimBOuter : i32 = ${l};\n        const dimInner : i32 = ${m};\n        ${ue}\n        ${sm(w,re,ie,Ce,h,void 0,!1,H[0],H[1],H[2],le)}\n            ${R?an(K,U,le,void 0,!w,Z):sn(K,U,le,void 0,!w,Z,!1,void 0,u)}`}}});var Pi,mu=oe(()=>{\"use strict\";Ae();Pe();ki();on();Pi=(t,r,e)=>{let d=t.length>2,l=d?\"value += b[output_channel];\":\"\",m=t[0].dims,h=t[1].dims,u=h[0]/r.group,{activationFunction:w,applyActivation:_}=Qn(r),O=r.format===\"NHWC\",j=Ri(m,h,r.dilations,r.pads,r.strides,O),B=Y.size(j),P=fe(\"output\",t[0].dataType,j),R=ne(\"x\",t[0].dataType,m),T=ne(\"w\",t[1].dataType,h),k=[R,T];d&&k.push(ne(\"b\",t[2].dataType,t[2].dims));let U=K=>`\n  const strides: vec2<u32> = vec2(${r.strides[0]}u, ${r.strides[1]}u);\n  const pads: vec2<u32> = vec2(${r.pads[0]}u, ${r.pads[1]}u);\n\n  ${K.declareVariables(...k,P)}\n\n  ${w}\n\n  ${K.mainStart()}\n    ${K.guardAgainstOutOfBoundsWorkgroupSizes(B)}\n\n    let outputIndices = ${P.offsetToIndices(\"global_idx\")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${O?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${O?1:2}], outputIndices[${O?2:3}]) * strides - pads;\n    let group_id: u32 = output_channel / ${u}u;\n\n    var value: ${P.type.value} = ${P.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < ${h[1]}u; wInChannel++) {\n      let input_channel = group_id * ${h[1]}u + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < ${h[2]}u; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * ${r.dilations[0]}u;\n\n        if (xHeight < 0u || xHeight >= ${m[O?1:2]}u) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < ${h[3]}u; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * ${r.dilations[1]}u;\n          if (xWidth < 0u || xWidth >= ${m[O?2:3]}u) {\n            continue;\n          }\n\n          let xVal = ${O?R.get(\"batch\",\"xHeight\",\"xWidth\",\"input_channel\"):R.get(\"batch\",\"input_channel\",\"xHeight\",\"xWidth\")};\n          let wVal = ${T.get(\"output_channel\",\"wInChannel\",\"wHeight\",\"wWidth\")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${l}\n    ${_}\n    ${P.setByOffset(\"global_idx\",\"value\")}\n  }`;return{name:\"GroupedConv\",shaderCache:{hint:r.cacheKey},getRunData:()=>({outputs:[{dims:e?e(j):j,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(B/64)}}),getShaderSource:U}}});var um,hu,lm,cm,fr,gu,yu,ei=oe(()=>{\"use strict\";Ae();Ne();Pe();um=t=>{if(!t||t.length!==1)throw new Error(\"Transpose requires 1 input.\")},hu=(t,r)=>r&&r.length!==t?[...new Array(t).keys()].reverse():r,lm=(t,r)=>Y.sortBasedOnPerm(t,hu(t.length,r)),cm=(t,r,e,d)=>{let l=[];l.push(`fn perm(i: ${d.type.indices}) -> ${e.type.indices} {\n    var a: ${e.type.indices};`);for(let m=0;m<r;++m)l.push(e.indicesSet(\"a\",t[m],`i[${m}]`));return l.push(\"return a;}\"),l.join(`\n`)},fr=(t,r,e)=>{let d=hu(r,e),l=fe(\"output\",t,e&&e.length||r),m=ne(\"a\",t,r),h=u=>`\n  ${u.registerUniform(\"output_size\",\"u32\").declareVariables(m,l)}\n\n  ${cm(d,r,m,l)}\n\n  ${u.mainStart()}\n    ${u.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\n\n    let indices = ${l.offsetToIndices(\"global_idx\")};\n    let aIndices = perm(indices);\n\n    ${l.setByOffset(\"global_idx\",m.getByIndices(\"aIndices\"))}\n  }`;return{name:\"Transpose\",shaderCache:{hint:`${e}`,inputDependencies:[\"rank\"]},getRunData:u=>{let w=lm(u[0].dims,d),_=Y.size(w);return{outputs:[{dims:w,dataType:u[0].dataType}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:[{type:\"uint32\",data:_},...Si(u[0].dims),...Si(w)]}},getShaderSource:h}},gu=(t,r)=>{um(t.inputs),t.compute(fr(t.inputs[0].dataType,t.inputs[0].dims.length,r.perm))},yu=t=>ye({perm:t.perm})});var Ri,bu,dm,vu,wu,fm,pm,Cu,ki=oe(()=>{\"use strict\";Ae();Ne();pu();un();mu();on();ei();Ri=(t,r,e,d,l,m)=>{let h=t[0],u=t.slice(m?1:2,m?3:4),w=u.length,_=r[0],j=r.slice(2).map((R,T)=>R+(R-1)*(e[T]-1)),P=u.map((R,T)=>R+d[T]+d[T+w]).map((R,T)=>Math.floor((R-j[T]+l[T])/l[T]));return P.splice(0,0,h),P.splice(m?3:1,0,_),P},bu=[2,3,1,0],dm=(t,r)=>{if(!t||t.length!==2&&t.length!==3)throw new Error(\"Conv requires 2 or 3 inputs\");if(t[0].dims.length!==4&&t[0].dims.length!==3)throw new Error(\"currently only support conv 1D and 2D\");if(t[0].dims.length!==t[1].dims.length)throw new Error(\"filter does not have same dimension as input\");let e=t[0].dims[r.format===\"NHWC\"?t[0].dims.length-1:1],d=t[1].dims[1]*r.group;if(e!==d)throw new Error(\"FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\");if(t.length===3&&(t[2].dims.length!==1||t[1].dims[0]!==t[2].dims[0]))throw new Error(\"invalid bias\");let l=t[0].dims.length-2;if(r.dilations.length!==l)throw new Error(`dilations should be ${l}D`);if(r.strides.length!==l)throw new Error(`strides should be ${l}D`);if(r.pads.length!==l*2)throw new Error(`pads should be ${l*2}D`);if(r.kernelShape.length!==0&&r.kernelShape.length!==t[1].dims.length-2)throw new Error(\"invalid kernel shape\")},vu=(t,r)=>{let e=t.kernelShape.slice();for(let m=2;m<r[1].dims.length;++m)e[m-2]===0&&(e[m-2]=r[1].dims[m]);let d=t.pads.slice();Nt.adjustPadsBasedOnAutoPad(r[0].dims,t.strides,t.dilations,e,d,t.format===\"NHWC\",t.autoPad);let l=Object.assign({},t);return Object.assign(l,{kernelShape:e,pads:d,cacheKey:t.cacheKey}),l},wu=t=>{let r=Jn(t),e=t.format,d=[\"NOTSET\",\"VALID\",\"SAME_UPPER\",\"SAME_LOWER\"][t.auto_pad],l=t.dilations,m=t.group,h=t.kernel_shape,u=t.pads,w=t.strides,_=t.w_is_const();return ye({autoPad:d,format:e,dilations:l,group:m,kernelShape:h,pads:u,strides:w,wIsConst:_,...r})},fm=(t,r,e)=>{let d=vu(e,r);if(e.group!==1){t.compute(Pi(r,d));return}let l=e.format===\"NHWC\",m=r.length===3,h=r[0].dims[l?1:2],u=r[0].dims[l?2:3],w=r[0].dims[l?3:1],_=r[1].dims[2],O=r[1].dims[3],j=Ri(r[0].dims,r[1].dims,e.dilations,d.pads,e.strides,l),B=j[l?1:2],P=j[l?2:3],R=j[l?3:1],T=l&&_===h&&O===u&&e.pads[0]===0&&e.pads[1]===0;if(T||_===1&&O===1&&e.dilations[0]===1&&e.dilations[1]===1&&e.strides[0]===1&&e.strides[1]===1&&e.pads[0]===0&&e.pads[1]===0){let A=j[0],Z,re,ie,Ce=[];if(l){let H=t.kernelCustomData.wT??t.compute(fr(r[1].dataType,r[1].dims.length,bu),{inputs:[1],outputs:[e.wIsConst?-2:-1]})[0];if(e.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=H),T){let le=h*u*w;Z=r[0].reshape([1,A,le]),re=H.reshape([1,le,R]),ie=[1,A,R]}else Z=r[0].reshape([A,h*u,w]),re=H.reshape([1,w,R]),ie=[A,B*P,R];Ce.push(Z),Ce.push(re)}else Z=r[0].reshape([A,w,h*u]),re=r[1].reshape([1,R,w]),ie=[A,R,B*P],Ce.push(re),Ce.push(Z);m&&Ce.push(r[2]),t.compute(Zn(Ce,d,j,ie,l),{inputs:Ce});return}let k=!0,U=t.kernelCustomData.wT??t.compute(fr(r[1].dataType,r[1].dims.length,bu),{inputs:[1],outputs:[e.wIsConst?-2:-1]})[0];e.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=U);let K=[r[0],U];m&&K.push(r[2]);let Q=l?B*P:R,L=l?R:B*P,X=_*O*w;t.compute(fu(K,d,j,Q,L,X,m,k),{inputs:K})},pm=(t,r)=>{let e=r.format===\"NHWC\",d=[t.inputs[0].reshape(e?[t.inputs[0].dims[0],1,t.inputs[0].dims[1],t.inputs[0].dims[2]]:[t.inputs[0].dims[0],t.inputs[0].dims[1],1,t.inputs[0].dims[2]]),t.inputs[1].reshape([t.inputs[1].dims[0],t.inputs[1].dims[1],1,t.inputs[1].dims[2]])];t.inputs.length===3&&d.push(t.inputs[2]);let l=[0,r.pads[0],0,r.pads[1]],m=[1].concat(r.strides),h=[1].concat(r.dilations),u=[1].concat(r.kernelShape),w=vu({...r,pads:l,strides:m,dilations:h,kernelShape:u},d);t.compute(Pi(d,w,_=>e?[_[0],_[2],_[3]]:[]))},Cu=(t,r)=>{dm(t.inputs,r),t.inputs[0].dims.length===3?pm(t,r):fm(t,t.inputs,r)}});var mm,$u,xu=oe(()=>{\"use strict\";Tt();Ae();Yn();Ei();un();mm=(t,r=!1,e,d=!1,l=4)=>{let m=Qe(l,\"f32\"),h=U=>{switch(U){case 1:return\"return W[getIndexFromCoords4D(coord, wShape)];\";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = W[getIndexFromCoords4D(coord, wShape)];\n            let v1 = W[getIndexFromCoords4D(coord1, wShape)];\n            let v2 = W[getIndexFromCoords4D(coord2, wShape)];\n            let v3 = W[getIndexFromCoords4D(coord3, wShape)];\n            return vec4<f32>(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${U} is not supported.`)}},u=t?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,w=t?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,_=t?\"outBackprop[1]\":\"outBackprop[2]\",O=t?\"outBackprop[2]\":\"outBackprop[3]\",j=t?\"row\":\"col\",B=t?\"col\":\"row\",P=`\n      let inChannels = ${t?\"outBackprop[3]\":\"outBackprop[1]\"};\n      let outWidth = ${t?\"outShape[2]\":\"outShape[3]\"};\n      let outRow = ${j} / outWidth;\n      let outCol = ${j} % outWidth;\n\n      let WRow = ${B} / (filterDims[1] * inChannels);\n      let WCol = ${B} / inChannels % filterDims[1];\n      let xR = f32(outRow - pads[0] + dilation[0] * WRow) / f32(strides[0]);\n      let xC = f32(outCol - pads[1] + dilation[1] * WCol) / f32(strides[1]);\n      if (xR < 0.0 || xR >= f32(${_}) || fract(xR) > 0.0) {\n        return ${m}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${O}) || fract(xC) > 0.0) {\n        return ${m}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${B} % inChannels;\n      ${u}\n      return x[getIndexFromCoords4D(coord, xShape)/${l}];`,R=t?`\n      let col = colIn * ${l};\n      if (row < dimAOuter && col < dimInner) {\n        ${P}\n      }\n      return ${m}(0.0);`:`\n      let col = colIn * ${l};\n      if (row < dimInner && col < dimBOuter) {\n        ${P}\n      }\n      return ${m}(0.0);`,T=`\n      let col = colIn * ${l};\n      let inChannels = ${t?\"outBackprop[3]\":\"outBackprop[1]\"};\n      let coordX = filterDims.x - 1 - row / (filterDims[1] * inChannels);\n      let coordY = filterDims.y - 1 - (row / inChannels) % filterDims[1];\n      if (${t?\"row < dimInner && col < dimBOuter\":\"row < dimInner && col < dimAOuter\"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${h(l)}\n      }\n      return ${m}(0.0);\n      `;return`\n  ${Kn(e,d,l===4,4)}\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${m} {\n    ${t?R:T}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${m} {\n    ${t?T:R}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${m}) {\n    let col = colIn * ${l};\n    if (row < dimAOuter && col < dimBOuter) {\n      var value = valueInput;\n      let outWidth = ${t?\"outShape[2]\":\"outShape[3]\"};\n      ${w}\n      ${qn(r,e)}\n      result[getIndexFromCoords4D(coords, outShape)/${l}] = value;\n    }\n  }`},$u=(t,r,e,d,l,m,h,u)=>{let w=r.format===\"NHWC\",_=w?t[0].dims[3]:t[0].dims[1],O=e[0],j=w?e[2]:e[3],B=w?e[1]:e[2],P=w?e[3]:e[1],R=w?_%4===0&&P%4===0:j%4===0&&P%4===0,T=w?P:j*B,k=w?j*B:P,U=R?[8,8,1]:[T<=4||k<=4?4:16,T>4&&k<=4?4:16,1],K=R?[4,4,1]:[T<=4?1:4,T>4&&k<=4?1:4,1],Q=[Math.ceil(T/U[0]/K[0]),Math.ceil(k/U[1]/K[1]),Math.ceil(O/U[2]/K[2])];ze(\"verbose\",()=>`[conv_backprop_mm_webgpu] dispatch = ${Q}`);let L=R?4:1,X=Math.max(U[0]*L,U[1]),A=[`@group(0) @binding(0) var<storage, read> x: array<${R?\"vec4<f32>\":\"f32\"}>;`,\"@group(0) @binding(1) var<storage, read> W: array<f32>;\"],Z=\"\";return h&&(A.push(`@group(0) @binding(2) var<storage, read> bias: array<${R?\"vec4<f32>\":\"f32\"}>;`),Z+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${R?\"vec4<f32>\":\"f32\"} {\n          return bias[coords.${w?\"w\":\"y\"}${R?\"/ 4\":\"\"}];\n        }`),{name:\"Conv2DTransposeMatMul\",shaderCache:{hint:r.cacheKey},getRunData:()=>({outputs:[{dims:e,dataType:t[0].dataType}],dispatchGroup:{x:Q[0],y:Q[1],z:Q[2]}}),getShaderSource:()=>`\n        ${Xn}\n        ${A.join(`\n`)}\n        @group(0) @binding(${A.length}) var<storage, read_write> result: array<${R?\"vec4<f32>\":\"f32\"}>;\n        const outBackprop : vec4<i32> = vec4<i32>(${t[0].dims.join(\",\")});\n        const xShape : vec4<i32> = vec4<i32>(${t[0].dims.join(\",\")});\n        const wShape : vec4<i32> = vec4<i32>(${t[1].dims.join(\",\")});\n        const outShape : vec4<i32> = vec4<i32>(${e.join(\",\")});\n        const outShapeStrides : vec3<i32> = vec3<i32>(${Y.computeStrides(e).slice(0,3).join(\",\")});\n        const filterDims : vec2<i32> = vec2<i32>(${r.kernelShape[w?1:2]}, ${r.kernelShape[w?2:3]});\n        const effectiveFilterDims : vec2<i32> = filterDims + vec2<i32>(\n              ${r.dilations[0]<=1?0:(r.kernelShape[w?1:2]-1)*(r.dilations[0]-1)},\n              ${r.dilations[1]<=1?0:(r.kernelShape[w?2:3]-1)*(r.dilations[1]-1)});\n        const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${r.pads[0]+r.pads[2]})/2,\n                                         i32(effectiveFilterDims[1]) - 1 - (${r.pads[1]+r.pads[3]})/2);\n        const strides : vec2<i32> = vec2<i32>(${r.strides[0]}, ${r.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${r.dilations[0]}, ${r.dilations[1]});\n        const dimAOuter : i32 = ${d};\n        const dimBOuter : i32 = ${l};\n        const dimInner : i32 = ${m};\n        ${Z}\n        ${mm(w,h,void 0,!1,L)}\n        ${R?an(K,U,\"f32\",void 0,!w,X):sn(K,U,\"f32\",void 0,!w,X,!1,void 0,u)}`}}});var hm,Bi,Su=oe(()=>{\"use strict\";Tt();Ae();Pe();hm=(t,r,e,d,l,m,h=!1,u)=>{let w=e.format===\"NHWC\",_=w?1:2,O=w?2:3,j=w?3:1,B=Y.size(d),P=h?2:1,R=e.group,T=r[1].dims,k=T[0]/R,U=T[1],K=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${h?`vec4<${u}>`:u}) {\n    result[flatIndex] = ${h?`vec4<${u}>`:u}(value);\n  }`;l&&(K+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${h?`vec4<${u}>`:u} {\n      return bias[coords.${w?\"w\":\"y\"}${h?\"/ 4\":\"\"}];\n    }`);let Q=h?4:1,L=ne(\"W\",r[1].dataType,r[1].dims,Q),X=ne(\"Dy\",r[0].dataType,r[0].dims,Q),A=[X,L];l&&A.push(ne(\"bias\",r[2].dataType,[d[j]],Q));let Z=fe(\"result\",r[0].dataType,d,Q),re=`{\n        let batch: u32 = ${m?\"global_id.z\":\"workgroup_id.z\"} / outShape[1];\n        let r = ${m?\"global_id.z\":\"workgroup_id.z\"} % outShape[1];\n        let c = ${m?\"global_id.y\":\"workgroup_id.y\"} * ${P};\n        let d1: u32 = ${m?\"global_id.x\":\"workgroup_id.x\"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${u}>, ${P}>;\n        for (var i = 0; i < ${P}; i++) {\n          dotProd[i] = vec4<${u}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < filterDims[0]; wR = wR + 1) {\n          var dyR = (${u}(dyCorner.x) + ${u}(wR)) / ${u}(strides.x);\n          let wRPerm = filterDims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${u}(outBackprop[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < filterDims[1]; wC = wC + 1) {\n            let dyC = (${u}(dyCorner.y) + ${u}(wC)) / ${u}(strides.y);\n            let dyC2 = (${u}(dyCorner.y) + 1.0 + ${u}(wC)) / ${u}(strides.y);\n            let wCPerm = filterDims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${u}(outBackprop[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${u}(outBackprop[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = outBackprop[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${L.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1\",\"d2\")};\n                let wValue1 = ${L.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1 + 1\",\"d2\")};\n                let wValue2 = ${L.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1 + 2\",\"d2\")};\n                let wValue3 = ${L.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1 + 3\",\"d2\")};\n\n                var xValue = ${X.get(\"batch\",\"idyR\",\"idyC\",\"d2\")};\n                let tmpval = vec4<${u}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${X.get(\"batch\",\"idyR\",\"idyC2\",\"d2\")};\n\n                dotProd[1] = dotProd[1] + vec4<${u}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = outBackprop[${j}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${L.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1\",\"d2\")};\n                let wValue1 = ${L.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1 + 1\",\"d2\")};\n                let wValue2 = ${L.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1 + 2\",\"d2\")};\n                let wValue3 = ${L.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1 + 3\",\"d2\")};\n\n                var xValue = ${X.get(\"batch\",\"idyR\",\"idyC\",\"d2\")};\n                let tmpval = vec4<${u}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = outBackprop[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${L.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1\",\"d2\")};\n                let wValue1 = ${L.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1 + 1\",\"d2\")};\n                let wValue2 = ${L.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1 + 2\",\"d2\")};\n                let wValue3 = ${L.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1 + 3\",\"d2\")};\n\n                var xValue = ${X.get(\"batch\",\"idyR\",\"idyC2\",\"d2\")};\n                let tmpval = vec4<${u}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${P}; i = i + 1) {\n          let value = dotProd[i] + ${l?\"bias[c+i]\":\"0.0\"};\n          ${Z.set(\"batch\",\"r\",\"c + i\",\"d1\",\"value\")};\n        }\n      }`,ie=`\n          let outputIndices = ${Z.offsetToIndices(\"global_idx\")};\n          let batch = ${Z.indicesGet(\"outputIndices\",0)};\n          let d1 = ${Z.indicesGet(\"outputIndices\",j)};\n          let r = ${Z.indicesGet(\"outputIndices\",_)};\n          let c = ${Z.indicesGet(\"outputIndices\",O)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / ${U};\n          let wOutChannel = d1 - groupId * ${U};\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = 0.0;\n          for (var wR: u32 = 0; wR < effectiveFilterDims.x; wR = wR + 1) {\n            if (wR % dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${u}(dyRCorner) + ${u}(wR)) / ${u}(strides[0]);\n            let wRPerm = filterDims.x - 1 - wR / dilations.x;\n            if (dyR < 0.0 || dyR >= ${u}(outBackprop[${_}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < effectiveFilterDims.y; wC = wC + 1) {\n              if (wC % dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${u}(dyCCorner) + ${u}(wC)) / ${u}(strides.y);\n              let wCPerm = filterDims.y - 1 - wC / dilations.y;\n              if (dyC < 0.0 || dyC >= ${u}(outBackprop[${O}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * ${k};\n              for (var d2: u32 = 0; d2 < ${k}; d2 = d2 + 1) {\n                let xValue = ${w?X.get(\"batch\",\"idyR\",\"idyC\",\"inputChannel\"):X.get(\"batch\",\"inputChannel\",\"idyR\",\"idyC\")};\n                let wValue = ${L.get(\"inputChannel\",\"wOutChannel\",\"u32(wRPerm)\",\"u32(wCPerm)\")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${l?\"bias[d1]\":\"0.0\"};\n          ${Z.setByOffset(\"global_idx\",\"value\")};\n        `;return`\n  ${t.declareVariables(...A,Z)}\n  ${K}\n  const outShape : vec4<u32> = vec4<u32>(${d.join(\",\")});\n  const outBackprop : vec4<u32> = vec4<u32>(${r[0].dims.join(\",\")});\n  const strides : vec2<u32> = vec2<u32>(${e.strides[0]}, ${e.strides[1]});\n  const filterDims : vec2<u32> = vec2<u32>(${e.kernelShape[w?1:2]}, ${e.kernelShape[w?2:3]});\n  const dilations : vec2<u32> = vec2<u32>(${e.dilations[0]}, ${e.dilations[1]});\n  const effectiveFilterDims : vec2<u32> = filterDims + vec2<u32>(\n          ${e.dilations[0]<=1?0:(e.kernelShape[w?1:2]-1)*(e.dilations[0]-1)},\n          ${e.dilations[1]<=1?0:(e.kernelShape[w?2:3]-1)*(e.dilations[1]-1)});\n  const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${e.pads[0]+e.pads[2]})/2,\n                                     i32(effectiveFilterDims[1]) - 1 - (${e.pads[1]+e.pads[3]})/2);\n    ${t.mainStart()}\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes(B)};\n  ${h?re:ie}}`},Bi=(t,r,e)=>{let d=t.length>2,l=r.outputShape,m=Y.size(l),h=[Math.ceil(m/64),1,1];ze(\"verbose\",()=>`[conv2d_backprop_webgpu] dispatch = ${h}`);let u=Fe(t[0].dataType);return{name:\"ConvTranspose2D\",shaderCache:{hint:r.cacheKey},getRunData:()=>({dispatchGroup:{x:h[0],y:h[1],z:h[2]},outputs:[{dims:e?e(l):l,dataType:t[0].dataType}]}),getShaderSource:w=>hm(w,t,r,l,d,h[1]===1&&h[2]===1,!1,u)}}});var gm,ym,bm,_u,Au,vm,wm,Cm,$m,Iu,Tu=oe(()=>{\"use strict\";Ne();xu();Su();on();ei();gm=(t,r,e,d,l,m)=>(t-1)*r+e+(d-1)*l+1-m,ym=(t,r,e,d,l)=>{let m=Math.floor(t/2);r===\"SAME_UPPER\"?(e[d]=m,e[l]=t-m):r===\"SAME_LOWER\"&&(e[d]=t-m,e[l]=m)},bm=(t,r,e,d,l,m,h,u,w,_)=>{let O=t.length-2,j=_.length===0;if(w.length===0)for(let R=0;R<O;++R)w.push(0);let B=t[0],P=r[u?3:1]*l;for(let R=0,T=t.length-O-(u?1:0);R<O;++R,++T){let k=t[T],U=j?k*h[R]:_[R],K=gm(k,h[R],m[R],r[T],e[R],U);ym(K,d,m,R,R+O),j&&_.push(h[R]*(k-1)+w[R]+(r[T]-1)*e[R]+1-m[R]-m[R+O])}_.splice(0,0,B),_.splice(u?3:1,0,P)},_u=(t,r)=>{let e=t.kernelShape.slice();if(t.kernelShape.length===0||t.kernelShape.reduce((B,P)=>B*P,1)===0){e.length=0;for(let B=2;B<r[1].dims.length;++B)e.push(r[1].dims[B])}let d=t.format===\"NHWC\";e.splice(0,0,r[1].dims[0]),e.splice(d?3:1,0,r[1].dims[1]);let l=t.pads.slice(),m=t.outputShape.slice(),h=t.outputPadding.slice(),u=r[0].dims,w=t.dilations.slice();if(w.reduce((B,P)=>B+P,0)===0){let B=r[0].dims.length-2;w=new Array(B).fill(1)}let _=t.strides.slice();if(_.reduce((B,P)=>B+P,0)===0){let B=r[0].dims.length-2;_=new Array(B).fill(1)}bm(u,e,w,t.autoPad,t.group,l,_,d,h,m);let O=Object.assign({},t),j=t.cacheKey+[e.join(\"n,\"),l.join(\",\"),_.join(\",\"),h.join(\",\"),m.join(\",\"),w.join(\",\")].join(\"_\");return Object.assign(O,{kernelShape:e,pads:l,outputPadding:h,outputShape:m,dilations:w,strides:_,cacheKey:j}),O},Au=t=>{let r=Jn(t),e=t.format,d=[\"NOTSET\",\"VALID\",\"SAME_UPPER\",\"SAME_LOWER\"][typeof t.autoPad>\"u\"?0:t.autoPad],l=t.dilations,m=t.group,h=t.kernelShape,u=t.pads,w=t.strides,_=t.wIsConst(),O=t.outputPadding,j=t.outputShape;return ye({autoPad:d,format:e,dilations:l,group:m,kernelShape:h,outputPadding:O,outputShape:j,pads:u,strides:w,wIsConst:_,...r})},vm=(t,r)=>{if(!t||t.length!==2&&t.length!==3)throw new Error(\"Conv requires 2 or 3 inputs\");if(t[0].dims.length!==4&&t[0].dims.length!==3)throw new Error(\"currently only support 2-dimensional conv\");if(t[0].dims.length!==t[1].dims.length)throw new Error(\"filter does not have same dimension as input\");let e=t[0].dims[r.format===\"NHWC\"?t[0].dims.length-1:1],d=t[1].dims[0];if(e!==d)throw new Error(\"FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\");let l=t[1].dims[1]*r.group;if(t.length===3&&(t[2].dims.length!==1||t[2].dims[0]!==l))throw new Error(\"invalid bias\");let m=t[0].dims.length-2;if(r.dilations.reduce((O,j)=>O+j,0)>0&&r.dilations.length!==m)throw new Error(`dilations should be ${m}D`);if(r.strides.reduce((O,j)=>O+j,0)>0&&r.strides.length!==m)throw new Error(`strides should be ${m}D`);if(r.pads.reduce((O,j)=>O+j,0)>0&&r.pads.length!==m*2)throw new Error(`pads should be ${m*2}D`);if(r.outputPadding.length!==m&&r.outputPadding.length!==0)throw new Error(`output_padding should be ${m}D`);if(r.kernelShape.reduce((O,j)=>O+j,0)>0&&r.kernelShape.length!==0&&r.kernelShape.length!==t[1].dims.length-2)throw new Error(\"invalid kernel shape\");if(r.outputShape.length!==0&&r.outputShape.length!==t[0].dims.length-2)throw new Error(\"invalid output shape\")},wm=[2,3,1,0],Cm=(t,r,e)=>{let d=_u(e,r),l=e.format===\"NHWC\",m=r.length===3;if(d.group!==1){t.compute(Bi(r,d));return}let h=d.outputShape,u=h[l?1:2],w=h[l?2:3],_=h[l?3:1],O=r[1].dims[2],j=r[1].dims[3],B=r[0].dims[l?3:1],P=l?u*w:_,R=l?_:u*w,T=O*j*B,k=!0,U=t.kernelCustomData.wT??t.compute(fr(r[1].dataType,r[1].dims.length,wm),{inputs:[1],outputs:[e.wIsConst?-2:-1]})[0];e.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=U);let K=[r[0],U];m&&(!l&&r[2].dims.length===1?K.push(r[2].reshape([r[2].dims[0],1,1])):K.push(r[2])),t.compute($u(K,d,h,P,R,T,m,k),{inputs:K})},$m=(t,r)=>{let e=r.format===\"NHWC\",d=[t.inputs[0].reshape(e?[t.inputs[0].dims[0],1,t.inputs[0].dims[1],t.inputs[0].dims[2]]:[t.inputs[0].dims[0],t.inputs[0].dims[1],1,t.inputs[0].dims[2]]),t.inputs[1].reshape([t.inputs[1].dims[0],t.inputs[1].dims[1],1,t.inputs[1].dims[2]])];d.length===3&&d.push(t.inputs[2]);let l=r.kernelShape;(l.length===0||l[0]===0)&&(l=[t.inputs[1].dims[2]]);let m=r.dilations;(m.length===0||m[0]===0)&&(m=[1]);let h=r.strides;(h.length===0||h[0]===0)&&(h=[1]);let u=r.pads;u.length===0&&(u=[0,0]),u=[0,u[0],0,u[1]],h=[1].concat(h),m=[1].concat(m),l=[1].concat(l);let w=_u({...r,pads:u,strides:h,dilations:m,kernelShape:l},d);t.compute(Bi(d,w,_=>e?[_[0],_[2],_[3]]:[_[0],_[1],_[3]]))},Iu=(t,r)=>{vm(t.inputs,r),t.inputs[0].dims.length===3?$m(t,r):Cm(t,t.inputs,r)}});var Mi,ti,Ou,xm,Sm,ji,Di,_m,Eu,Pu,Ru=oe(()=>{\"use strict\";Ae();Ne();Pe();Mi=\"[a-zA-Z]|\\\\.\\\\.\\\\.\",ti=\"(\"+Mi+\")+\",Ou=\"^\"+ti+\"$\",xm=\"(\"+ti+\",)*\"+ti,Sm=\"^\"+xm+\"$\",ji=class{constructor(r=-1){this.symbolToIndices=new Map,this.inputIndex=r}addSymbol(r,e){let d=this.symbolToIndices.get(r);d===void 0?d=[e]:d.push(e),this.symbolToIndices.set(r,d)}},Di=class{constructor(r,e){this.equation=e;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[d,l]=e.includes(\"->\")?e.split(\"->\",2):[e,\"\"];if(!d.match(RegExp(Sm)))throw new Error(\"Invalid LHS term\");if(d.split(\",\").forEach((u,w)=>{let _=r[w].dims.slice();if(!u.match(RegExp(Ou)))throw new Error(\"Invalid LHS term\");let O=this.processTerm(u,!0,_,w);this.lhs.push(O)}),l===\"\")l+=[...this.symbolToInfo.entries()].filter(([u,w])=>w.count===1||u===\"...\").map(([u])=>u).join(\"\");else if(!l.match(RegExp(ti)))throw new Error(\"Invalid RHS\");l.match(RegExp(Mi,\"g\"))?.forEach(u=>{if(u===\"...\")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let w=this.symbolToInfo.get(u);if(w===void 0)throw new Error(\"Invalid RHS symbol\");this.outputDims.push(w.dimValue)}}),this.rhs=this.processTerm(l,!0,this.outputDims)}addSymbol(r,e,d){let l=this.symbolToInfo.get(r);if(l!==void 0){if(l.dimValue!==e&&l.count!==1)throw new Error(\"Dimension mismatch\");l.count++,l.inputIndices.push(d)}else l={count:1,dimValue:e,inputIndices:[d]};this.symbolToInfo.set(r,l)}processTerm(r,e,d,l=-1){let m=d.length,h=!1,u=[],w=0;if(!r.match(RegExp(Ou))&&!e&&r!==\"\")throw new Error(\"Invalid LHS term\");let _=r.match(RegExp(Mi,\"g\")),O=new ji(l);return _?.forEach((j,B)=>{if(j===\"...\"){if(h)throw new Error(\"Only one ellipsis is allowed per input term\");h=!0;let P=m-_.length+1;if(P<0)throw new Error(\"Ellipsis out of bounds\");if(u=d.slice(w,w+P),this.hasEllipsis){if(this.ellipsisDims.length!==u.length||this.ellipsisDims.toString()!==u.toString())throw new Error(\"Ellipsis dimensions mismatch\")}else if(e)this.hasEllipsis=!0,this.ellipsisDims=u;else throw new Error(\"Ellipsis must be specified in the LHS\");for(let R=0;R<u.length;R++){let T=String.fromCharCode(\"0\".charCodeAt(0)+B);O.addSymbol(T,B+R),this.addSymbol(T,d[w++],l)}}else O.addSymbol(j,B),this.addSymbol(j,d[w++],l)}),O}},_m=(t,r)=>{let e=t[0].dataType,d=new Array(t.length);for(let Q=0;Q<t.length;++Q)d[Q]=ne(`input${Q}`,e,t[Q].dims);let l=r.outputDims,m=Y.size(l),h=fe(\"output\",e,l),u=[],w=Array.from(r.rhs.symbolToIndices.keys()),_=\"var prod = 1.0;\",O=\"var sum = 0.0;\",j=\"sum += prod;\",B=[],P=[],R=[],T=[],k=r.symbolToInfo.size===w.length;r.symbolToInfo.forEach((Q,L)=>{if(w.includes(L)){let X=w.indexOf(L);r.lhs.forEach((A,Z)=>{if(Q.inputIndices.includes(Z)){let re=A.symbolToIndices.get(L);if(re===void 0)throw new Error(\"Invalid symbol error\");re.forEach(ie=>{u.push(`${d[Z].indicesSet(`input${Z}Indices`,ie,h.indicesGet(\"outputIndices\",X))}`)})}})}else r.lhs.forEach((X,A)=>{let Z=r.symbolToInfo.get(L);if(Z===void 0)throw new Error(\"Invalid symbol error\");if(Z.inputIndices.includes(A)){let re=X.symbolToIndices.get(L);if(re===void 0)throw new Error(\"Invalid symbol error\");re.forEach(ie=>{B.push(`${d[A].indicesSet(`input${A}Indices`,ie,`${L}`)}`)}),T.push(`prod *= ${d[A].getByIndices(`input${A}Indices`)};`)}}),P.push(`for(var ${L}: u32 = 0; ${L} < ${r.symbolToInfo.get(L)?.dimValue}; ${L}++) {`),R.push(\"}\")});let U=k?[...u,`let sum = ${d.map((Q,L)=>Q.getByIndices(`input${L}Indices`)).join(\" * \")};`]:[...u,O,...P,...B,_,...T,j,...R],K=Q=>`\n      ${Q.declareVariables(...d,h)}\n\n      ${Q.mainStart()}\n        ${Q.guardAgainstOutOfBoundsWorkgroupSizes(m)}\n        var outputIndices = ${h.offsetToIndices(\"global_idx\")};\n        ${d.map((L,X)=>`var input${X}Indices: ${d[X].type.indices};`).join(`\n`)}\n        ${U.join(`\n`)};\n        ${h.setByOffset(\"global_idx\",\"sum\")};\n      }`;return{name:\"Einsum\",shaderCache:{hint:r.equation},getRunData:()=>({outputs:[{dims:l,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)}}),getShaderSource:K}},Eu=(t,r)=>{let e=new Di(t.inputs,r.equation);t.compute(_m(t.inputs,e))},Pu=t=>{let r=t.equation.replace(/\\s+/g,\"\");return ye({equation:r})}});var Am,ku,Im,Tm,Bu,Mu=oe(()=>{\"use strict\";Ae();Pe();Am=t=>{if(!t||t.length!==2)throw new Error(\"Expand requires 2 input.\");let r=t[0].dims,e=Array.from(t[1].getBigInt64Array(),Number),d=e.length<r.length?0:e.length-r.length,l=r.length<e.length?0:r.length-e.length;for(;d<e.length&&l<r.length;++d,++l)if(e[d]!==r[l]&&e[d]!==1&&r[l]!==1)throw new Error(\"Expand requires shape to be broadcastable to input\")},ku=(t,r)=>{let e=t.length-r.length,d=[];for(let l=0;l<e;++l)d.push(t[l]);for(let l=0;l<r.length;++l)d.push(r[l]===1?t[l+e]:r[l]);return d},Im=(t,r)=>t.length>r.length?ku(t,r):ku(r,t),Tm=t=>{let r=t[0].dims,e=Array.from(t[1].getBigInt64Array(),Number),d=Im(r,e),l=Y.size(d),m=t[0].dataType,h=ne(\"input\",m,r),u=fe(\"output\",m,d),w=_=>`\n  const inputShape = ${h.indices(...r)};\n  ${_.declareVariables(h,u)}\n  ${_.mainStart()}\n  ${_.guardAgainstOutOfBoundsWorkgroupSizes(l)}\n    let outputIndices = ${u.offsetToIndices(\"global_idx\")};\n    var inputIndices: ${h.type.indices};\n    for (var i = 0; i < ${r.length}; i++) {\n      if (${h.indicesGet(\"inputShape\",\"i\")} == 1) {\n        ${h.indicesSet(\"inputIndices\",\"i\",0)}\n      } else {\n        ${h.indicesSet(\"inputIndices\",\"i\",u.indicesGet(\"outputIndices\",`i + ${d.length-r.length}`))}\n      }\n    }\n    ${u.setByOffset(\"global_idx\",h.getByIndices(\"inputIndices\"))}\n  }`;return{name:\"Expand\",shaderCache:{hint:`${d}`},getShaderSource:w,getRunData:()=>({outputs:[{dims:d,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)}})}},Bu=t=>{Am(t.inputs),t.compute(Tm(t.inputs),{inputs:[0]})}});var Om,Em,ju,Du,Wu=oe(()=>{\"use strict\";Ae();Ne();Pe();Om=t=>{if(!t||t.length!==2)throw new Error(\"Gather requires 2 inputs.\")},Em=(t,r)=>{let e=t[0].dims,d=t[1].dims,l=e.length,m=Y.normalizeAxis(r.axis,l),h=e.slice(0);h.splice(m,1,...d);let u=e[m],w=Y.size(h),_=ne(\"data\",t[0].dataType,t[0].dims),O=ne(\"inputIndices\",t[1].dataType,t[1].dims),j=fe(\"output\",t[0].dataType,h),B=()=>{let R=d.length,T=`var indicesIndices  = ${O.type.indices}(0);`;for(let k=0;k<R;k++)T+=`${R>1?`indicesIndices[${k}]`:\"indicesIndices\"} = ${h.length>1?`outputIndices[${m+k}]`:\"outputIndices\"};`;T+=`\n        var idx = ${O.getByIndices(\"indicesIndices\")};\n        if (idx < 0) {\n          idx = idx + ${u};\n        }\n        var dataIndices = ${_.type.indices}(0);\n      `;for(let k=0,U=0;k<l;k++)k===m?(T+=`${l>1?`dataIndices[${k}]`:\"dataIndices\"} = u32(idx);`,U+=R):(T+=`${l>1?`dataIndices[${k}]`:\"dataIndices\"} = ${h.length>1?`outputIndices[${U}]`:\"outputIndices\"};`,U++);return T},P=R=>`\n      ${R.declareVariables(_,O,j)}\n      ${R.mainStart()}\n        ${R.guardAgainstOutOfBoundsWorkgroupSizes(w)}\n        let outputIndices = ${j.offsetToIndices(\"global_idx\")};\n        ${B()};\n        let value = ${_.getByIndices(\"dataIndices\")};\n        ${j.setByOffset(\"global_idx\",\"value\")};\n      }`;return{name:\"Gather\",shaderCache:{hint:r.cacheKey},getRunData:()=>({outputs:[{dims:h,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)}}),getShaderSource:P}},ju=t=>ye({axis:t.axis}),Du=(t,r)=>{let e=t.inputs;Om(e),t.compute(Em(t.inputs,r))}});var Pm,Rm,zu,Gu,Vu=oe(()=>{\"use strict\";Ae();Ne();Pe();Pm=t=>{if(!t||t.length!==2)throw new Error(\"GatherElements requires 2 inputs.\");if(t[0].dims.length<1)throw new Error(\"GatherElements requires that the data input be rank >= 1.\");if(t[0].dims.length!==t[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},Rm=(t,r)=>{let e=t[0].dims,d=t[0].dataType,l=e.length,m=Y.computeStrides(e),h=Y.size(e),u=t[1].dims,w=t[1].dataType,_=Y.size(u),O=Y.normalizeAxis(r.axis,l),j=e[O],B=u.slice(0),P=Y.size(B),R=ne(\"input\",d,e),T=ne(\"indices\",w,[_]),k=fe(\"output\",d,B),U=K=>`\n      const inputStrides = array<u32, ${m.length}>(${m.map(Q=>`${Q}u`).join(\",\")});\n      ${K.declareVariables(R,T,k)}\n      ${K.mainStart()}\n      ${K.guardAgainstOutOfBoundsWorkgroupSizes(P)}\n\n      let outputIndices = ${k.offsetToIndices(\"global_idx\")};\n\n      var idx = ${T.getByOffset(\"global_idx\")};\n      if (idx < 0) {\n        idx = idx + ${j};\n      }\n\n      var srcOffset = u32(0);\n\n      for (var i = 0; i < ${e.length}; i++) {\n        if (i == ${O}) {\n          srcOffset +=  u32(idx) * inputStrides[i];\n        } else {\n          srcOffset += ${k.indicesGet(\"outputIndices\",\"i\")} * inputStrides[i];\n        }\n      }\n\n      // Should never hit this with valid values in indices\n      // This is a guard against malicious data in the indices input\n      if (srcOffset < 0 || srcOffset >= ${h}) {\n        return;\n      }\n\n      output[global_idx] = input[srcOffset];\n  }`;return{name:\"GatherElements\",shaderCache:{hint:r.cacheKey},getRunData:()=>({outputs:[{dims:B,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(P/64)}}),getShaderSource:U}},zu=t=>ye({axis:t.axis}),Gu=(t,r)=>{let e=t.inputs;Pm(e),t.compute(Rm(t.inputs,r))}});var km,Bm,Mm,Uu,Nu,Fu=oe(()=>{\"use strict\";Ae();Ne();Pe();km=t=>{if(!t)throw new Error(\"Input is missing\");if(t.length<2||t.length>3)throw new Error(\"Invaid input number.\");if(t.length===3&&t[2].dims.length>2)throw new Error(\"Invalid input shape of C\");if(t[0].dataType!==t[1].dataType||t.length===3&&t[0].dataType!==t[2].dataType)throw new Error(\"Input types are mismatched\")},Bm=(t,r,e)=>{if(e.length===0)return\"0u\";let d=e.length===1&&t!==1||e.length===2&&e[0]!==t,l=e[e.length-1]!==r,m=\"0u\";return d||(m+=`+ m * ${e[e.length-1]}u`),l||(m+=\"+n\"),m},Mm=(t,r)=>{let e=t[0].dims.slice(),d=t[1].dims.slice(),[l,m,h]=Vn.getShapeOfGemmResult(e,r.transA,d,r.transB,t.length===3?t[2].dims:void 0),u=[l,m];if(!u)throw new Error(\"Can't use gemm on the given tensors\");let w=Y.size(u),_=\"\";r.transA&&r.transB?_=\"value += a[k * M + m] * b[n * K + k];\":r.transA&&!r.transB?_=\"value += a[k * M + m] * b[k * N + n];\":!r.transA&&r.transB?_=\"value += a[m * K + k] * b[n * K + k];\":!r.transA&&!r.transB&&(_=\"value += a[m * K + k] * b[k * N + n];\");let O=Fe(t[0].dataType),j=r.alpha===1?\"\":\"value *= alpha;\",B=t.length===3?`value += beta * c[${Bm(l,m,t[2].dims)}];`:\"\",P=[`@group(0) @binding(0) var<storage, read> a : array<${O}>;`,`@group(0) @binding(1) var<storage, read> b : array<${O}>;`];t.length===3&&P.push(`@group(0) @binding(2) var<storage, read> c : array<${O}>;`);let R=T=>`\n  const M: u32 = ${l}u;\n  const N: u32 = ${m}u;\n  const K: u32 = ${h}u;\n  const alpha = ${O}(${r.alpha});\n  const beta = ${O}(${r.beta});\n\n  ${P.join(`\n`)}\n  @group(0) @binding(${t.length}) var<storage, read_write> output : array<${O}>;\n\n  ${T.mainStart()}\n    ${T.guardAgainstOutOfBoundsWorkgroupSizes(w)}\n\n    let m = global_id.x / N;\n    let n = global_id.x % N;\n\n    var value = ${O}(0);\n    for (var k: u32 = 0u; k<${h}u; k++) {\n      ${_}\n    }\n\n    ${j}\n    ${B}\n    output[global_id.x] = value;\n\n  }`;return{name:\"Gemm\",shaderCache:{hint:r.cacheKey},getRunData:()=>({outputs:[{dims:u,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)}}),getShaderSource:R}},Uu=(t,r)=>{km(t.inputs),t.compute(Mm(t.inputs,r))},Nu=t=>ye(t)});var jm,Dm,Wm,zm,Hu,Lu,Ku=oe(()=>{\"use strict\";Xe();Ae();Ne();Pe();jm={name:\"InstanceNormalization\"},Dm=(t,r)=>{let e=t[0].dims,d=e,l=2,m=Y.sizeToDimension(e,l),h=Y.sizeFromDimension(e,l),u=e[1],w=ne(\"x\",t[0].dataType,[e[0],e[1],h]),_=ne(\"scale\",t[1].dataType,t[1].dims),O=ne(\"bias\",t[2].dataType,t[2].dims),j=fe(\"output\",t[0].dataType,[e[0],e[1],h]),B=[w,_,O,j],P=w.type.value,R=64,T=k=>`\n\n  const C: u32 = ${u};\n  const normSize: u32 = ${h};\n  const epsilon: f32 = ${r.epsilon};\n  var<workgroup> meanShared : ${P};\n  var<workgroup> squaredNormShared : ${P};\n  var<workgroup> workgroupShared : array<${P}, ${R}>;\n  const workgroupSize = ${R}u;\n  ${k.declareVariables(...B)}\n  ${k.mainStart(R)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / C;\n    let channel = norm % C;\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial: ${P} = 0;\n    for (var h = localIndex; h < normSize; h += workgroupSize) {\n      initial = initial + ${w.get(\"batch\",\"channel\",\"h\")};\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = workgroupShared[0] / ${P}(normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = 0;\n    for (var h = localIndex; h < normSize; h += workgroupSize) {\n      let deviation =  ${w.get(\"batch\",\"channel\",\"h\")} - meanShared;\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = workgroupShared[0];\n    }\n    workgroupBarrier();\n\n    let invStdDev = 1 / sqrt(squaredNormShared / ${P}(normSize) + epsilon);\n    let channelScale = invStdDev * ${_.getByOffset(\"channel\")};\n    let channelShift = ${O.getByOffset(\"channel\")} - meanShared * channelScale;\n    for (var h = localIndex; h < normSize; h += workgroupSize) {\n      let value = ${w.get(\"batch\",\"channel\",\"h\")} * channelScale + channelShift;\n      ${j.set(\"batch\",\"channel\",\"h\",\"value\")};\n    }\n  }`;return{...jm,shaderCache:{hint:r.cacheKey},getRunData:()=>({outputs:[{dims:d,dataType:t[0].dataType}],dispatchGroup:{x:m}}),getShaderSource:T}},Wm=(t,r,e,d,l,m,h,u)=>{let w=Ft(h),_=ne(\"input\",r.dataType,r.dims,w),O=ne(\"scale\",e.dataType,e.dims,w),j=ne(\"bias\",d.dataType,d.dims,w),B=64,P=w===1?\"vec2f\":`mat2x${w}f`,R=w===1?\"f32\":`vec${w}f`,T=(X,A)=>`${P}(${X}, ${A})`,k=l*h/w,U=Math.ceil(m/B),K=X=>`\n  const H: u32 = ${m};\n  const C: u32 = ${h/w};\n  const imageSize: u32 = ${m*h/w};\n\n  ${X.declareVariables(_)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${P}>;\n\n  ${X.mainStart(B)}\n    let currentImageNumber = global_idx / ${B} / C;\n    let currentChannelNumber = (global_idx / ${B}) % C;\n    let wgId = global_idx % ${B};\n    let wgOffset = wgId * ${U};\n    if (wgOffset >= H) {\n        return;\n    }\n    let wgMax = min(wgOffset + ${U}, H);\n\n    let offset = currentImageNumber * imageSize + currentChannelNumber;\n    var sum = ${mt(\"f32\",w)};\n    var squaredSum = ${mt(\"f32\",w)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${R}(input[offset + i * C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${T(\"sum\",\"squaredSum\")};\n  }`,Q=t.compute({name:\"InstanceNormComputeMean\",shaderCache:{hint:JSON.stringify({components:w,n:l,h:m,c:h})},getRunData:()=>({outputs:[{dims:[l,h,B,2],dataType:1}],dispatchGroup:{x:l*h/w}}),getShaderSource:K},{inputs:[r],outputs:[-1]})[0],L=X=>`\n  const H: u32 = ${m};\n  const C: u32 = ${h/w};\n  const imageSize: u32 = ${B*h/w};\n  const epsilon: f32 = ${u};\n\n  @group(0) @binding(0) var<storage, read> input : array<${P}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${O.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${j.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${P}>;\n\n  ${X.mainStart()}\n    ${X.guardAgainstOutOfBoundsWorkgroupSizes(k)}\n    let currentImageNumber = global_idx / C;\n    let currentChannelNumber = global_idx % C;\n\n    let offset = currentImageNumber * imageSize;\n    var sum = ${mt(\"f32\",w)};\n    var squaredSum = ${mt(\"f32\",w)};\n    for (var i: u32 = 0; i < ${B}; i++) {\n        let value = input[offset + i + currentChannelNumber * ${B}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(H);\n    squaredSum = squaredSum / f32(H);\n    let invStdDev = 1 / sqrt(squaredSum - sum * sum + epsilon);\n    let channelScale = invStdDev * ${R}(scale[currentChannelNumber]);\n    let channelShift = ${R}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${T(\"channelScale\",\"channelShift\")};\n  }`;return t.compute({name:\"InstanceNormComputeChannelScaleShift\",shaderCache:{hint:JSON.stringify({components:w,n:l,h:m,c:h,epsilon:u})},getRunData:()=>({outputs:[{dims:[l,h,2],dataType:1}],dispatchGroup:{x:Math.ceil(k/64)}}),getShaderSource:L},{inputs:[Q,e,d],outputs:[-1]})[0]},zm=(t,r,e)=>{let d=r[0].dims,l=d,m=d[0],h=d[d.length-1],u=Y.sizeFromDimension(d,1)/h,w=Ft(h),_=Y.size(l)/w,O=ne(\"input\",r[0].dataType,r[0].dims,w),j=fe(\"output\",r[0].dataType,l,w),B=Fe(r[0].dataType),P=w===1?\"vec2f\":`mat2x${w}f`,R=w===1?B:`vec${w}<${B}>`,T=Wm(t,r[0],r[1],r[2],m,u,h,e.epsilon),k=U=>`\n  const H: u32 = ${u};\n  const C: u32 = ${h/w};\n\n  @group(0) @binding(0) var<storage, read> input : array<${O.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${P}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${j.type.storage}>;\n\n  ${U.mainStart()}\n    let currentImageNumber = global_idx / (C * H);\n    let currentChannelNumber = global_idx % C;\n\n    let scaleOffset = currentImageNumber * C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${R}(scale[0]), ${R}(scale[1]));\n  }`;t.compute({name:\"InstanceNormalization\",shaderCache:{hint:`${e.cacheKey}`},getRunData:()=>({outputs:[{dims:l,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(_/64)}}),getShaderSource:k},{inputs:[r[0],T]})},Hu=t=>ye({epsilon:t.epsilon,format:t.format}),Lu=(t,r)=>{r.format===\"NHWC\"?zm(t,t.inputs,r):t.compute(Dm(t.inputs,r))}});var Gm,Vm,qu,Yu,Xu=oe(()=>{\"use strict\";Xe();Ae();Ne();Pe();Gm=t=>{if(!t||t.length<2)throw new Error(\"layerNorm requires at least 2 inputs.\")},Vm=(t,r,e)=>{let d=t[0].dims,l=t[1],m=t[2],h=d,u=Y.normalizeAxis(r.axis,d.length),w=Y.sizeToDimension(d,u),_=Y.sizeFromDimension(d,u),O=Y.size(l.dims),j=m?Y.size(m.dims):0;if(O!==_||m&&j!==_)throw new Error(`Size of X.shape()[axis:] == ${_}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${O} and bias size of ${j}`);let B=[];for(let L=0;L<d.length;++L)L<u?B.push(d[L]):B.push(1);let P=Ft(_),R=Fe(t[0].dataType),T=[ne(\"x\",t[0].dataType,t[0].dims,P),ne(\"scale\",l.dataType,l.dims,P)];m&&T.push(ne(\"bias\",m.dataType,m.dims,P)),T.push(fe(\"output\",t[0].dataType,h,P));let k=e>1,U=e>2;k&&T.push(fe(\"meanDataOutput\",1,B)),U&&T.push(fe(\"invStdOutput\",1,B));let K=L=>`\n  const normSize: f32 = ${_};\n  const normSizeVectorized: u32 = ${_/P};\n  const epsilon: f32 = ${r.epsilon};\n\n  ${L.declareVariables(...T)}\n  ${L.mainStart()}\n    ${L.guardAgainstOutOfBoundsWorkgroupSizes(w)}\n    let offset = global_idx * normSizeVectorized;\n    var meanVector = ${mt(\"f32\",P)};\n    var meanSquareVector = ${mt(\"f32\",P)};\n\n    for (var h: u32 = 0u; h < normSizeVectorized; h++) {\n      let value = ${Ht(R,P,\"x[h + offset]\")};\n      meanVector += value;\n      meanSquareVector += value * value;\n    }\n    let mean = ${dr(\"meanVector\",P)} / normSize;\n    let meanSquare = sqrt(${dr(\"meanSquareVector\",P)} \n      / normSize - mean * mean + epsilon);\n\n    for (var j: u32 = 0; j < normSizeVectorized; j++) {\n      let f32input = ${Ht(R,P,\"x[j + offset]\")};\n      let f32scale = ${Ht(R,P,\"scale[j]\")};\n      output[j + offset] = ${T[0].type.value}((f32input - mean) / meanSquare * f32scale\n        ${m?`+ ${Ht(R,P,\"bias[j]\")}`:\"\"}\n      );\n    }\n\n    ${k?\"meanDataOutput[global_idx] = mean\":\"\"};\n    ${U?\"invStdOutput[global_idx] = 1 / meanSquare\":\"\"};\n  }`,Q=[{dims:h,dataType:t[0].dataType}];return k&&Q.push({dims:B,dataType:1}),U&&Q.push({dims:B,dataType:1}),{name:\"LayerNormalization\",shaderCache:{hint:`${r.cacheKey}|${e}|${t.length}`},getRunData:()=>({outputs:Q,dispatchGroup:{x:Math.ceil(w/64)}}),getShaderSource:K}},qu=t=>ye({axis:t.axis,epsilon:t.epsilon}),Yu=(t,r)=>{Gm(t.inputs),t.compute(Vm(t.inputs,r,t.outputCount))}});var Um,Qu,Ju=oe(()=>{\"use strict\";Ae();un();Um=t=>{if(!t||t.length!==2)throw new Error(\"MatMul requires 2 inputs.\");if(t[0].dims[t[0].dims.length-1]!==t[1].dims[t[1].dims.length-2])throw new Error(\"shared dimension does not match.\")},Qu=t=>{Um(t.inputs);let r=Ct.calcShape(t.inputs[0].dims,t.inputs[1].dims,!0);if(!r)throw new Error(\"Can't use matmul on the given tensors\");t.compute(Zn(t.inputs,{activation:\"\",activationCacheKey:\"\"},r))}});var Nm,Fm,Hm,Lm,Km,qm,Ym,Xm,Qm,Zu,el,tl=oe(()=>{\"use strict\";Xe();Ae();Ne();Pe();Nm=t=>{if(!t||t.length<1)throw new Error(\"Too few inputs\");if(t[0].dataType!==1)throw new Error(\"Input type must be float.\");if(t.length>=2){let r=t[0].dims.length*2===t[1].dims[0];if(t.length===4&&(r=t[3].dims[0]*2===t[1].dims[0]),!r)throw new Error(\"The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].\")}},Fm=(t,r,e,d,l,m,h)=>{let u=e.length,w=\"\";for(let _=u-1;_>=0;--_)w+=`\n            k = i32(${t.indicesGet(\"indices\",_)}) - ${l[_]};\n            if (k < 0) {\n              break;\n            }\n            if (k >= ${e[_]}) {\n              break;\n            }\n            offset += k * ${d[_]};\n        `;return`\n          value = ${m}(${h});\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${w}\n            value = x[offset];\n          }\n      `},Hm=(t,r,e,d,l)=>{let m=e.length,h=\"\";for(let u=m-1;u>=0;--u)h+=`\n                k = i32(${t.indicesGet(\"indices\",u)}) - ${l[u]};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = ${2*(e[u]-1)};\n                  k = k % _2n_1;\n                  if(k >= ${e[u]}) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * ${d[u]};\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${h}\n              value = x[offset];\n          `},Lm=(t,r,e,d,l)=>{let m=e.length,h=\"\";for(let u=m-1;u>=0;--u)h+=`\n                k = i32(${t.indicesGet(\"indices\",u)}) - ${l[u]};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= ${e[u]}) {\n                  k = ${e[u]-1};\n                }\n                offset += k * ${d[u]};\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${h}\n              value = x[offset];\n          `},Km=(t,r,e,d,l)=>{let m=e.length,h=\"\";for(let u=m-1;u>=0;--u)h+=`\n                k = i32(${t.indicesGet(\"indices\",u)}) - ${l[u]};\n                if (k < 0)  {\n                  k += ${e[u]};\n                }\n                if (k >= ${e[u]}) {\n                  k -= ${e[u]};\n                }\n                offset += k * ${d[u]};\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${h}\n              value = x[offset];\n          `},qm=(t,r,e,d,l,m)=>{switch(l.mode){case 0:return Fm(t,r,e,d,l.pads,m,l.value);case 1:return Hm(t,r,e,d,l.pads);case 2:return Lm(t,r,e,d,l.pads);case 3:return Km(t,r,e,d,l.pads);default:throw new Error(\"Invalid mode\")}},Ym=(t,r,e,d)=>{let l=r[0].dims,m=Y.padShape(l.slice(),e.pads),h=Y.size(m),u=Y.computeStrides(l),w=fe(\"output\",r[0].dataType,m),_=ne(\"x\",r[0].dataType,l),O=qm(w,m,l,u,e,d);return`\n              ${t.declareVariables(_,w)}\n              ${t.mainStart()}\n              ${t.guardAgainstOutOfBoundsWorkgroupSizes(h)}\n\n              let indices = ${w.offsetToIndices(\"global_idx\")};\n\n              var value = ${d}(0);\n              ${O}\n              output[global_idx] = value;\n          }`},Xm=(t,r)=>{let e=Y.padShape(t[0].dims.slice(),r.pads);return{name:\"Pad\",shaderCache:{hint:r.cacheKey},getRunData:()=>({outputs:[{dims:e,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(Y.size(e)/64)}}),getShaderSource:d=>Ym(d,t,r,\"f32\")}},Qm=(t,r)=>{if(t.length>1){let e=t[1].getBigInt64Array(),d=t.length>=3&&t[2].data?t[2].getFloat32Array()[0]:0,l=t[0].dims.length,m=new Int32Array(2*l).fill(0);if(t.length>=4){let u=t[3].getBigInt64Array();for(let w=0;w<u.length;w++)m[Number(u[w])]=Number(e[w]),m[Number(u[w])+l]=Number(e[w+u.length])}else e.forEach((u,w)=>m[Number(w)]=Number(u));let h=[];return m.forEach(u=>h.push(u)),ye({mode:r.mode,value:d,pads:h})}else return r},Zu=(t,r)=>{Nm(t.inputs);let e=Qm(t.inputs,r);t.compute(Xm(t.inputs,e),{inputs:[0]})},el=t=>{let r=t.mode,e=t.value,d=t.pads;return ye({mode:r,value:e,pads:d})}});var ri,rl,nl,il,ol,al,sl,ul,ll,cl,dl,fl,pl,ml,hl,gl=oe(()=>{\"use strict\";Ae();Ne();Pe();ri=t=>{if(!t||t.length!==1)throw new Error(\"Pool ops requires 1 input.\");if(t[0].dims.length!==4)throw new Error(\"Pool ops supports 2-D inputs only for now.\")},rl=(t,r,e)=>{let d=r.format===\"NHWC\",l=d?[t.dims[0],t.dims[3],t.dims[1],t.dims[2]]:t.dims.slice(),m=Object.hasOwnProperty.call(r,\"dilations\"),h=r.kernelShape.slice(),u=r.strides.slice(),w=m?r.dilations.slice():[],_=r.pads.slice();Nt.adjustPoolAttributes(e,l,h,u,w,_);let O=Nt.computePoolOutputShape(e,l,u,w,h,_,r.autoPad),j=Object.assign({},r);return m?Object.assign(j,{kernelShape:h,strides:u,pads:_,dilations:w,cacheKey:r.cacheKey}):Object.assign(j,{kernelShape:h,strides:u,pads:_,cacheKey:r.cacheKey}),[j,d?[O[0],O[2],O[3],O[1]]:O]},nl=(t,r,e,d,l,m,h,u)=>{let w=l.format===\"NHWC\",_=e,O=r.type.value,j=_.length,B=Y.size(d),P=fe(\"output\",r.type.tensor,d);if(l.kernelShape.length<=2){let R=l.kernelShape[l.kernelShape.length-1],T=l.strides[l.strides.length-1],k=l.pads[l.pads.length/2-1],U=l.pads[l.pads.length-1],K=j-(w?2:1),Q=\"\",L=\"\",X=\"\";if(k+U!==0?Q=`\n              for (var i: u32 = 0u; i < ${R}u; i++) {\n                xIndices[${K}] = indices[${K}] * ${T} - ${k} + i;\n                if (xIndices[${K}] < 0 || xIndices[${K}] >= ${_[K]}) {\n                  pad++;\n                  continue;\n                }\n                let x_val = x[${r.indicesToOffset(\"xIndices\")}];\n                ${m}\n              }`:Q=`\n              for (var i: u32 = 0u; i < ${R}u; i++) {\n                xIndices[${K}] = indices[${K}] * ${T} - ${k} + i;\n                let x_val = x[${r.indicesToOffset(\"xIndices\")}];\n                ${m}\n              }`,l.kernelShape.length===2){let Z=l.kernelShape[l.kernelShape.length-2],re=l.strides[l.strides.length-2],ie=l.pads[l.pads.length/2-2],Ce=l.pads[l.pads.length-2],H=j-(w?3:2),le=_[H];ie+Ce!==0?L=`\n                for (var j: u32 = 0u; j < ${Z}u; j++) {\n                  xIndices[${H}] = indices[${H}] * ${re} - ${ie} + j;\n                  if (xIndices[${H}] < 0 || xIndices[${H}] >= ${le}) {\n                    pad+= ${R};\n                    continue;\n                  }\n              `:L=`\n                for (var j: u32 = 0u; j < ${Z}u; j++) {\n                  xIndices[${H}] = indices[${H}] * ${re} - ${ie} + j;\n                `,X=`\n              }\n            `}return`\n            ${t.declareVariables(r,P)}\n\n            ${t.mainStart()}\n              ${t.guardAgainstOutOfBoundsWorkgroupSizes(B)}\n\n              let indices = ${P.offsetToIndices(\"global_idx\")};\n              var xIndices = ${P.offsetToIndices(\"global_idx\")};\n\n              var value: ${O} = ${O}(${u});\n              var pad = 0;\n              ${L}\n              ${Q}\n              ${X}\n              ${h}\n\n              output[global_idx] = value;\n            }`}else{if(w)throw new Error(\"Pooling with kernelShape.length > 2 is not supported for NHWC format.\");let R=Y.size(l.kernelShape),T=Y.computeStrides(l.kernelShape),k=T.length,U=l.pads.length,K=l.pads.reduce((X,A)=>X+A),Q=\"\";return K?Q=`\n                if (xIndices[j] >= inputDims[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${r.indicesToOffset(\"xIndices\")}];\n                ${m}\n              }`:Q=`\n              }\n              let x_val = x[${r.indicesToOffset(\"xIndices\")}];\n              ${m}\n            `,`\n            ${t.declareVariables(r,P)}\n\n            const pads = array<u32, ${U}>(${l.pads.map(X=>`${X}u`).join(\",\")});\n            const inputDims = array<u32, ${j}>(${_.map(X=>`${X}u`).join(\",\")});\n            const kernelStrides = array<u32, ${k}>(${T.map(X=>`${X}u`).join(\",\")});\n            const strides = array<u32, ${k}>(${l.strides.map(X=>`${X}u`).join(\",\")});\n\n            ${t.mainStart()}\n              ${t.guardAgainstOutOfBoundsWorkgroupSizes(B)}\n\n              let indices = ${P.offsetToIndices(\"global_idx\")};\n              let xIndices = ${P.offsetToIndices(\"global_idx\")};\n\n              var offsets: array<u32, ${k}>;\n\n              var value = ${P.type.value}(${u});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < ${R}u; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${k-1}u; j++) {\n                  offsets[j] = offset / kernelStrides[j];\n                  offset -= offsets[j] * kernelStrides[j];\n                }\n                offsets[${k-1}] = offset;\n\n                isPad = false;\n                for (var j = ${j-k}u; j < ${j}u; j++) {\n                  xIndices[j] = indices[j] * strides[j - ${j-k}u]\n                    + offsets[j - ${j-k}u] - pads[j - 2u];\n                  ${Q}\n              }\n              ${h}\n\n              output[global_idx] = value;\n            }`}},il=t=>({format:t.format,autoPad:[\"NOTSET\",\"VALID\",\"SAME_UPPER\",\"SAME_LOWER\"][t.auto_pad],ceilMode:t.ceil_mode,kernelShape:t.kernel_shape,strides:t.strides,pads:t.pads}),ol=(t,r,e,d)=>{let[l,m]=rl(r,d,e),h=Y.size(l.kernelShape),u=ne(\"x\",r.dataType,r.dims),w=u.type.value,_=\"value += x_val;\",O=\"\";return l.countIncludePad?O+=`value /= ${w}(${h});`:O+=`value /= ${w}(${h} - pad);`,{name:t,shaderCache:{hint:d.cacheKey},getRunData:()=>({outputs:[{dims:m,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(Y.size(m)/64)}}),getShaderSource:j=>nl(j,u,r.dims,m,l,_,O,\"0.0\")}},al=t=>{let r=t.count_include_pad!==0,e=il(t);if(e.ceilMode!==0)throw new Error(\"using ceil() in shape computation is not yet supported for AveragePool\");return ye({countIncludePad:r,...e})},sl=(t,r)=>{ri(t.inputs),t.compute(ol(\"AveragePool\",t.inputs[0],!1,r))},ul={autoPad:\"\",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:\"\"},ll=t=>{let r=t.format;return{format:r,...ul,cacheKey:r}},cl=(t,r)=>{ri(t.inputs),t.compute(ol(\"GlobalAveragePool\",t.inputs[0],!0,r))},dl=(t,r,e,d)=>{let[l,m]=rl(r,d,e),h=`\n      value = max(x_val, value);\n    `,u=\"\",w=ne(\"x\",r.dataType,r.dims);return{name:t,shaderCache:{hint:d.cacheKey},getRunData:()=>({outputs:[{dims:m,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(Y.size(m)/64)}}),getShaderSource:_=>nl(_,w,r.dims,m,l,h,u,\"-1e5\")}},fl=(t,r)=>{ri(t.inputs),t.compute(dl(\"MaxPool\",t.inputs[0],!1,r))},pl=t=>{let r=t.storage_order,e=t.dilations,d=il(t);if(r!==0)throw new Error(\"column major storage order is not yet supported for MaxPool\");if(d.ceilMode!==0)throw new Error(\"using ceil() in shape computation is not yet supported for MaxPool\");return ye({storageOrder:r,dilations:e,...d})},ml=t=>{let r=t.format;return{format:r,...ul,cacheKey:r}},hl=(t,r)=>{ri(t.inputs),t.compute(dl(\"GlobalMaxPool\",t.inputs[0],!0,r))}});var Wi=oe(()=>{\"use strict\"});var yl=oe(()=>{\"use strict\";Wi()});var bl,vl=oe(()=>{\"use strict\";bl=\"1.17.0\"});var wl,zi,Cl=oe(()=>{\"use strict\";vl();wl=\"warning\",zi={wasm:{},webgl:{},webgpu:{},versions:{common:bl},set logLevel(t){if(t!==void 0){if(typeof t!=\"string\"||[\"verbose\",\"info\",\"warning\",\"error\",\"fatal\"].indexOf(t)===-1)throw new Error(`Unsupported logging level: ${t}`);wl=t}},get logLevel(){return wl}};Object.defineProperty(zi,\"logLevel\",{enumerable:!0})});var $l,xl=oe(()=>{\"use strict\";Cl();$l=zi});var Sl=oe(()=>{\"use strict\"});var _l=oe(()=>{\"use strict\";ni()});var Il=oe(()=>{\"use strict\"});var Tl=oe(()=>{\"use strict\";ni()});var ni=oe(()=>{\"use strict\";Sl();_l();Il();Tl()});var Gi=oe(()=>{\"use strict\";ni()});var Ol=oe(()=>{\"use strict\";Wi();Gi()});var El=oe(()=>{\"use strict\";Ol()});var Pl=oe(()=>{\"use strict\"});var Rl=oe(()=>{\"use strict\"});var kl=oe(()=>{\"use strict\";Rl()});var Bl=oe(()=>{\"use strict\";yl();xl();El();Gi();Pl();kl()});var Zm,eh,Ml,jl=oe(()=>{\"use strict\";Bl();Xe();Pe();Zm=(t,r,e)=>{let d=t===r,l=t<r&&e<0,m=t>r&&e>0;if(d||l||m)throw new Error(\"Range these inputs' contents are invalid.\")},eh=(t,r,e,d)=>{let l=Math.abs(Math.ceil((r-t)/e)),m=[l],h=l,u=fe(\"output\",d,m),w=u.type.storage,_=O=>`\n        ${O.declareVariables(u)}\n        ${O.mainStart()}\n        ${O.guardAgainstOutOfBoundsWorkgroupSizes(h)}\n        output[global_idx] = ${w}(${t}) + ${w}(global_idx) * ${w}(${e});\n      }`;return{name:\"Range\",shaderCache:{hint:[t,r,e].map(O=>O.toString()).join(\"_\")},getShaderSource:_,getRunData:()=>({outputs:[{dims:m,dataType:d}],dispatchGroup:{x:Math.ceil(h/64)}})}},Ml=t=>{let r=0,e=0,d=0;t.inputs[0].dataType===6?(r=t.inputs[0].getInt32Array()[0],e=t.inputs[1].getInt32Array()[0],d=t.inputs[2].getInt32Array()[0]):t.inputs[0].dataType===1&&(r=t.inputs[0].getFloat32Array()[0],e=t.inputs[1].getFloat32Array()[0],d=t.inputs[2].getFloat32Array()[0]),$l.webgpu.validateInputContent&&Zm(r,e,d),t.compute(eh(r,e,d,t.inputs[0].dataType),{inputs:[]})}});var th,rh,nh,ih,oh,ah,sh,uh,lh,ch,dh,fh,ph,mh,hh,Dl,Wl,zl=oe(()=>{\"use strict\";Ae();Ne();Pe();th=(t,r)=>{if(t.every(e=>e>0||(()=>{throw new Error(\"Resize requires scales input values to be positive\")})),t.length>0){if(r.mode===\"linear\"){if(!(t.length===2||t.length===4&&t[0]===1&&t[1]===1||t.length===4&&t[0]===1&&t[3]===1))throw new Error(\"Resize requires scales input size to be 2 or 4 for linear mode\")}else if(r.mode===\"cubic\"&&!(t.length===2||t.length===4&&t[0]===1&&t[1]===1||t.length===4&&t[0]===1&&t[3]===1))throw new Error(\"Resize requires scales input size to be 2 or 4 for cubic mode\")}},rh=(t,r,e)=>{r.every(l=>l>=0&&l<e||(()=>{throw new Error(\"Resize requires axes input values to be positive and less than rank\")}));let d=new Array(e).fill(1);return r.forEach((l,m)=>d[l]=t[m]),d},nh=(t,r,e,d,l,m)=>{let[h,u,w]=e>10?[1,2,3]:[-1,t.length>1?1:-1,-1],_=t[0].dims.length;if(h>0&&t.length>h&&t[h].dims.length>0)t[h].getFloat32Array().forEach(O=>m.push(O));else if(r.coordinateTransformMode===\"tf_crop_and_resize\")throw new Error(\"Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize\");if(u>0&&t.length>u&&t[u].dims.length>0){if(t[u].getFloat32Array().forEach(O=>d.push(O)),d.length!==0&&d.length!==_&&e>=18&&d.length!==r.axes.length)throw new Error(\"Resize requires scales input size to be same as input rank or axes size for opset 18 and up\");th(d,r),r.axes.length>0&&rh(d,r.axes,_).forEach((O,j)=>d[j]=O)}if(w>0&&t.length>w&&(t[w].getBigInt64Array().forEach(O=>l.push(Number(O))),l.length!==_||e>=18&&l.length===r.axes.length))throw new Error(\"Resize requires sizes input size to be same as input rank or axes size for opset 18 and up\");if(r.axes.length>0){if(d.length!==r.axes.length)throw new Error('Resize requires \"scales\" input size to be of axes rank when axes attributes is specified');if(l.length!==r.axes.length)throw new Error('Resize requires \"sizes\" input size to be of rank axes rank when axes attributes is specified')}if(typeof d<\"u\"&&typeof l<\"u\"&&d.length>0&&l.length>_)throw new Error(\"Resize requires only of scales or sizes to be specified\")},ih=t=>\"fn getOriginalCoordinateFromResizedCoordinate(xResized: f32, xScale: f32, lengthResized: f32,    lengthOriginal: f32, roiStart: f32, roiEnd: f32) -> f32 { \"+(()=>{switch(t){case\"asymmetric\":return\"return xResized / xScale;\";case\"pytorch_half_pixel\":return\"if (lengthResized > 1) {                     return (xResized + 0.5) / xScale - 0.5;                   } else {                     return 0.0;                   }\";case\"tf_half_pixel_for_nn\":return\"return (xResized + 0.5) / xScale;\";case\"align_corners\":return\"if (lengthResized == 1) {                     return 0.0;                   } else {                     return xResized * (lengthOriginal - 1) / (lengthResized - 1);                   }\";case\"tf_crop_and_resize\":return\"if (lengthResized > 1) {                     return roiStart * (lengthOriginal - 1) +                           (xResized * (roiEnd - roiStart) * (lengthOriginal - 1)) / (lengthResized - 1);                   } else {                     return 0.5 * (roiStart + roiEnd) * f32(lengthOriginal - 1);                   }\";case\"half_pixel_symmetric\":return[\"const outputWidth = xScale * lengthResized;\",\"const adjustment = lengthResized / outputWidth;\",\"const center = lengthOriginal / 2;\",\"const offset = center * (1 - adjustment);\",\"return offset + ((xResized + 0.5) / xScale) - 0.5;\"].join(`\n`);case\"half_pixel\":return\"return ((xResized + 0.5) / xScale) - 0.5;\";default:throw new Error(`Coordinate transform mode ${t} is not supported`)}})()+\"}\",oh=(t,r)=>\"fn getNearestPixelFromOriginal(xOriginal: f32, isDownSample: bool) -> f32 {\"+(()=>{switch(t){case\"round_prefer_ceil\":return\"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }\";case\"floor\":return\"return floor(xOriginal);\";case\"ceil\":return\"return ceil(xOriginal);\";case\"round_prefer_floor\":return\"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }\";case\"simple\":default:if(r<11)return\"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }\";throw new Error(`Nearest mode ${t} is not supported`)}})()+\"}\",ah=(t,r,e)=>{let d=new Array(e).fill(0).concat(new Array(e).fill(1)),l=t.length===0?d:t.slice();return r.length>0?(r.forEach((m,h)=>{d[m]=l[h],d[h+e]=l[r.length+h]}),d):l},sh=(t,r,e,d)=>{let l=[];if(e.length>0)if(d.length>0){if(t.forEach(m=>l.push(m)),Math.max(...d)>t.length)throw new Error(\"axes is out of bound\");d.forEach((m,h)=>l[m]=e[h])}else e.forEach(m=>l.push(m));else{if(r.length===0)throw new Error(\"Resize requires either scales or sizes.\");l=t.map((m,h)=>Math.round(m*r[h]))}return l},uh=(t,r,e,d)=>{let l=(()=>{switch(d.keepAspectRatioPolicy){case\"not_larger\":return d.axes.length>0?Math.min(...d.axes.map(h=>e[h]),Number.MAX_VALUE):Math.min(...e,Number.MAX_VALUE);case\"not_smaller\":return d.axes.length>0?Math.max(...d.axes.map(h=>e[h]),Number.MIN_VALUE):Math.max(...e,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${d.keepAspectRatioPolicy} is not supported`)}})();e.fill(1,0,e.length);let m=t.slice();return d.axes.length>0?(d.axes.forEach(h=>e[h]=l),d.axes.forEach(h=>m[h]=Math.round(t[h]*e[h]))):(e.fill(l,0,e.length),m.forEach((h,u)=>m[u]=Math.round(h*e[u]))),m},lh=(t,r,e,d,l)=>`\n    fn calculateOriginalIndicesFromOutputIndices(outputIndices: ${t.type.indices}) -> array<f32, ${e.length}> {\n      const inputShape = array<u32, ${r.length}>(${r.map(m=>`${m}u`).join(\",\")});\n      const outputShape = array<u32, ${e.length}>(${e.map(m=>`${m}u`).join(\",\")});\n      const scales = array<f32, ${d.length}>(${d.map(m=>`${m}f`).join(\",\")});\n      const roi = array<f32, ${l.length}>(${l.map(m=>`${m}f`).join(\",\")});\n      var originalIndices: array<f32, ${e.length}>;\n      for (var i:u32 = 0; i < ${e.length}; i++) {\n        var outputIndex = ${e.length===1?\"outputIndices\":\"outputIndices[i]\"};\n        if (scales[i] == 1.0) {\n          originalIndices[i] = f32(outputIndex);\n        } else {\n          originalIndices[i] = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],\n                f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${r.length}]);\n        }\n      }\n      return originalIndices;\n    }`,ch=(t,r,e,d,l,m,h)=>`\n    fn calculateInputIndicesFromOutputIndices(outputIndices: ${r.type.indices}) -> ${t.type.indices} {\n        const inputShape = array<u32, ${e.length}>(${e.map(u=>`${u}u`).join(\",\")});\n        const outputShape = array<u32, ${d.length}>(${d.map(u=>`${u}u`).join(\",\")});\n        const scales = array<f32, ${l.length}>(${l.map(u=>`${u}f`).join(\",\")});\n        const roi = array<f32, ${m.length}>(${m.map(u=>`${u}f`).join(\",\")});\n        var inputIndices: ${t.type.indices};\n        for (var i:u32 = 0; i < ${d.length}; i++) {\n          var outputIndex = ${d.length===1?\"outputIndices\":\"outputIndices[i]\"};\n          var inputIndex: u32;\n          if (scales[i] == 1.0) {\n            inputIndex = outputIndex;\n          } else {\n            var original_idx = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],\n                    f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${e.length}]);\n            if (!${h} || (original_idx >= 0 && original_idx < f32(inputShape[i]))) {\n              if (original_idx < 0) {\n                inputIndex = 0;\n              } else if (original_idx > (f32(inputShape[i]) - 1)) {\n                inputIndex = inputShape[i] - 1;\n              } else {\n                inputIndex = u32(getNearestPixelFromOriginal(original_idx, scales[i] < 1));\n              }\n            } else {\n              inputIndex = u32(original_idx);\n            }\n          }\n          ${t.indicesSet(\"inputIndices\",\"i\",\"inputIndex\")}\n        }\n        return inputIndices;\n    }`,dh=(t,r)=>`\n    fn checkInputIndices(inputIndices: ${t.type.indices}) -> bool {\n      const inputShape = array<u32, ${r.length}>(${r.map(e=>`${e}u`).join(\",\")});\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var inputIndex = ${r.length===1?\"inputIndices\":\"inputIndices[i]\"};\n        if (inputIndex < 0 || inputIndex >= inputShape[i]) {\n          return false;\n        }\n      }\n      return true;\n    }`,fh=(t,r,e,d,l,m,h)=>{let[u,w,_,O]=e.length===2?[-1,0,1,-1]:l[1]===1?[0,2,3,1]:[0,1,2,3];return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> f32 {\n      var inputIndices: ${t.type.indices};\n      inputIndices[${w}] = max(0, min(row, ${e[w]} - 1));\n      inputIndices[${_}] = max(0, min(col, ${e[_]} - 1));\n      if (${e.length} > 2) {\n        inputIndices[${O}] = channel;\n        inputIndices[${u}] = batch;\n      };\n      return input[${t.indicesToOffset(\"inputIndices\")}];\n    }\n\n    fn bilinearInterpolation(outputIndices: ${r.type.indices}) -> f32 {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(outputIndices);\n      var row:f32 = originalIndices[${w}];\n      var col:f32 = originalIndices[${_}];\n      if (${m} && (row < 0 || row > (${e[w]} - 1) || col < 0 || col > ${e[_]} - 1)) {\n        return ${h};\n      }\n      row = max(0, min(row, ${e[w]} - 1));\n      col = max(0, min(col, ${e[_]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = 0;\n      var batch: u32 = 0;\n      if (${e.length>2}) {\n        channel = u32(originalIndices[${O}]);\n        batch = u32(originalIndices[${u}]);\n      }\n      var x11: f32 = getInputValue(batch, channel, row1, col1);\n      var x12: f32 = getInputValue(batch, channel, row1, col2);\n      var x21: f32 = getInputValue(batch, channel, row2, col1);\n      var x22: f32 = getInputValue(batch, channel, row2, col2);\n      var dx1: f32 = row - f32(row1);\n      var dx2: f32 = f32(row2 ) - row;\n      var dy1 = col - f32(col1);\n      var dy2 = f32(col2) - col;\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},ph=(t,r,e,d,l,m,h,u,w,_)=>{let[O,j]=e.length===2?[0,1]:l[1]===1?[2,3]:[1,2],B=P=>{let R=P===O?\"row\":\"col\";return`\n      fn ${R}CubicInterpolation(inputIndices: ${t.type.indices}, outputIndices: ${r.type.indices}) -> f32 {\n        var outputIndex = ${d.length===1?\"outputIndices\":`outputIndices[${P}]`};\n        var originalIdx: f32 = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), ${l[P]},\n        f32(${d[P]}), f32(${e[P]}), ${m[P]}, ${m[P]} + ${e.length});\n        var fractOriginalIdx: f32 = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${u} && (originalIdx < 0 || originalIdx > (${e[P]} - 1))) {\n          return ${w};\n        }\n        var data: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${R}: f32 = originalIdx + f32(i);\n          if (${R} < 0 || ${R} >= ${e[P]}) {\n            if (${_}) {\n              coefs[i + 1] = 0.0;\n              continue;\n            } else if (${u}) {\n              return ${w};\n            } else {\n              ${R} = max(0, min(${R}, ${e[P]} - 1));\n            }\n          }\n          var inputIndicesCopy: ${t.type.indices} = inputIndices;\n          inputIndicesCopy[${P}] = u32(${R});\n          data[i + 1] = ${P===O?`input[${t.indicesToOffset(\"inputIndicesCopy\")}];`:`\n                                               rowCubicInterpolation(inputIndicesCopy, outputIndices);`}\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${B(O)};\n    ${B(j)};\n  fn getCubicInterpolationCoefs(s: f32) -> array<f32, 4> {\n    var absS = abs(s);\n    var coeffs: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: f32 = 1.0 - absS;\n    var twoMinusAbsS: f32 = 2.0 - absS;\n    var onePlusAbsS: f32 = 1.0 + absS;\n    coeffs[0] = ((${h} * onePlusAbsS - 5 * ${h}) * onePlusAbsS + 8 * ${h}) * onePlusAbsS - 4 * ${h};\n    coeffs[1] = ((${h} + 2) * absS - (${h} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${h} + 2) * oneMinusAbsS - (${h} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${h} * twoMinusAbsS - 5 * ${h}) * twoMinusAbsS + 8 * ${h}) * twoMinusAbsS - 4 * ${h};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<f32, 4>, coefs: array<f32, 4>) -> f32 {\n    var coefsSum: f32 = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(outputIndices: ${r.type.indices}) -> f32 {\n    var inputIndices: ${t.type.indices} = outputIndices;\n    return colCubicInterpolation(inputIndices, outputIndices);\n  }\n    `},mh=(t,r,e,d,l,m)=>{let h=t.dims,u=ah(m,r.axes,h.length),w=sh(h,d,l,r.axes),_=d.slice();d.length===0&&(_=h.map((k,U)=>k===0?1:w[U]/k),r.keepAspectRatioPolicy!==\"stretch\"&&(w=uh(h,w,_,r)));let O=fe(\"output\",t.dataType,w),j=ne(\"input\",t.dataType,h),B=Y.size(w),P=h.length===w.length&&h.every((k,U)=>k===w[U]),R=r.coordinateTransformMode===\"tf_crop_and_resize\",T=k=>`\n      ${ih(r.coordinateTransformMode)};\n      ${(()=>{switch(r.mode){case\"nearest\":return`\n              ${dh(j,h)};\n              ${oh(r.nearestMode,e)};\n              ${ch(j,O,h,w,_,u,R)};\n              `;case\"linear\":return`\n              ${lh(O,h,w,_,u)};\n              ${fh(j,O,h,w,_,R,r.extrapolationValue)};\n              `;case\"cubic\":return`\n            ${ph(j,O,h,w,_,u,r.cubicCoeffA,R,r.extrapolationValue,r.excludeOutside)};\n            `;default:throw Error(\"Invalid resize mode\")}})()};\n      ${k.declareVariables(j,O)}\n      ${k.mainStart()}\n        ${k.guardAgainstOutOfBoundsWorkgroupSizes(B)}\n        if (${P}) {\n          output[global_idx] = input[global_idx];\n        } else {\n          let outputIndices = ${O.offsetToIndices(\"global_idx\")};\n          var inputIndices: ${j.type.indices};\n          ${(()=>{switch(r.mode){case\"nearest\":return`inputIndices = calculateInputIndicesFromOutputIndices(outputIndices);\n                  if (checkInputIndices(inputIndices)) {\n                    output[global_idx] = input[${j.indicesToOffset(\"inputIndices\")}];\n                  } else {\n                    output[global_idx] = ${r.extrapolationValue};\n                  }`;case\"linear\":return\"output[global_idx] = bilinearInterpolation(outputIndices);\";case\"cubic\":return\"output[global_idx] = bicubicInterpolation(outputIndices);\";default:throw Error(`Unsupported resize mode: ${r.mode}`)}})()};\n        }\n      }`;return{name:\"Resize\",shaderCache:{hint:`${r.cacheKey}|${e}|${_.length>0?_:\"\"}|${l.length>0?l:\"\"}`},getShaderSource:T,getRunData:()=>({outputs:[{dims:w,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(B/64)}})}},hh=t=>{let r=t.customDataBuffer;return new Uint32Array(r,r.byteOffset,1)[0]},Dl=(t,r)=>{let e=[],d=[],l=[],m=hh(t);nh(t.inputs,r,m,e,d,l),t.compute(mh(t.inputs[0],r,m,e,d,l),{inputs:[0]})},Wl=t=>{let r=t.antialias,e=t.axes,d=t.coordinateTransformMode,l=t.cubicCoeffA,m=t.excludeOutside!==0,h=t.extrapolationValue,u=t.keepAspectRatioPolicy,w=t.mode,_=t.nearestMode===\"\"?\"simple\":t.nearestMode;return ye({antialias:r,axes:e,coordinateTransformMode:d,cubicCoeffA:l,excludeOutside:m,extrapolationValue:h,keepAspectRatioPolicy:u,mode:w,nearestMode:_})}});var gh,yh,Gl,Vl,Ul=oe(()=>{\"use strict\";Xe();Ae();Ne();Pe();gh=t=>{if(!t||t.length<3)throw new Error(\"layerNorm requires at least 3 inputs.\");let r=t[0],e=t[1],d=t[2];if(r.dataType!==e.dataType||r.dataType!==d.dataType)throw new Error(\"All inputs must have the same data type\");if(r.dims.length!==3&&r.dims.length!==2)throw new Error(\"Input must be 2D or 3D\");if(e.dims.length!==3&&e.dims.length!==2)throw new Error(\"Skip must be 2D or 3D\");let l=r.dims[r.dims.length-1],m=r.dims[r.dims.length-2];if(e.dims[e.dims.length-1]!==l)throw new Error(\"Skip must have the same hidden size as input\");if(e.dims[e.dims.length-2]!==m)throw new Error(\"Skip must have the same sequence length as input\");if(d.dims.length!==1)throw new Error(\"Gamma must be 1D\");if(d.dims[d.dims.length-1]!==l)throw new Error(\"Gamma must have the same hidden size as input\");if(t.length>3){let h=t[3];if(h.dims.length!==1)throw new Error(\"Beta must be 1D\");if(h.dims[h.dims.length-1]!==l)throw new Error(\"Beta must have the same hidden size as input\")}if(t.length>4){let h=t[4];if(h.dims.length!==1)throw new Error(\"Bias must be 1D\");if(h.dims[h.dims.length-1]!==l)throw new Error(\"Bias must have the same hidden size as input\")}},yh=(t,r,e,d)=>{let l=t[0].dims,m=Y.size(l),h=l,u=m,w=l.slice(-1)[0],_=d?l.slice(0,-1).concat(1):[],O=t.length>3,j=t.length>4,B=d&&e>1,P=d&&e>2,R=e>3,T=Ft(w),k=[ne(\"x\",t[0].dataType,t[0].dims,T),ne(\"skip\",t[1].dataType,t[1].dims,T),ne(\"gamma\",t[2].dataType,t[2].dims,T)];O&&k.push(ne(\"beta\",t[3].dataType,t[3].dims,T)),j&&k.push(ne(\"bias\",t[4].dataType,t[4].dims,T)),k.push(fe(\"output\",t[0].dataType,h,T)),B&&k.push(fe(\"meanOutput\",1,_)),P&&k.push(fe(\"invStdOutput\",1,_)),R&&k.push(fe(\"inputSkipBiasSum\",t[0].dataType,h,T));let U=Fe(t[0].dataType),K=L=>`\n      const hiddenSize: f32 = ${w};\n      const hiddenSizeVectorized: u32 = ${w/T};\n      const epsilon: f32 = ${r.epsilon};\n\n      ${L.declareVariables(...k)}\n\n      ${L.mainStart()}\n        ${L.guardAgainstOutOfBoundsWorkgroupSizes(u/w)}\n        let offset = global_idx * hiddenSizeVectorized;\n        var sum = ${mt(\"f32\",T)};\n        var squareSum = ${mt(\"f32\",T)};\n        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {\n          let skipValue = skip[offset + i];\n          let biasValue = ${j?\"bias[i]\":\"0.0\"};\n          let inputValue = x[offset + i];\n          let value = inputValue + skipValue + biasValue;\n          ${R?\"inputSkipBiasSum[offset + i] = value;\":\"\"}\n          output[offset + i] = value;\n          let f32Value = ${Ht(U,T,\"value\")};\n          sum += f32Value;\n          squareSum += f32Value * f32Value;\n        }\n        let mean = ${dr(\"sum\",T)} / hiddenSize;\n        let variance = sqrt(${dr(\"squareSum\",T)} / hiddenSize - mean * mean + epsilon);\n        ${B?\"meanOutput[global_idx] = mean;\":\"\"}\n        ${P?\"invStdOutput[global_idx] = 1.0 / variance;\":\"\"}\n        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {\n          output[offset + i] = (output[offset + i] - ${U}(mean)) / ${U}(variance) * gamma[i]\n           + ${O?\"beta[i]\":\"0.0\"};\n        }\n      }`,Q=[{dims:h,dataType:t[0].dataType}];return e>1&&Q.push({dims:_,dataType:1}),e>2&&Q.push({dims:_,dataType:1}),e>3&&Q.push({dims:l,dataType:t[0].dataType}),{name:\"SkipLayerNormalization\",shaderCache:{hint:r.cacheKey},getShaderSource:K,getRunData:()=>({outputs:Q,dispatchGroup:{x:Math.ceil(u/w/64)}})}},Gl=(t,r)=>{gh(t.inputs);let d=[0];t.outputCount>1&&d.push(-3),t.outputCount>2&&d.push(-3),t.outputCount>3&&d.push(3),t.compute(yh(t.inputs,r,t.outputCount,!1),{outputs:d})},Vl=t=>{let r=t.epsilon;return ye({epsilon:r})}});var bh,ii,vh,Nl,wh,Ch,Fl,Hl,Ll=oe(()=>{\"use strict\";Xe();Ae();Ne();Pe();bh=(t,r)=>{if(!t||t.length<1)throw new Error(\"too few inputs\");if(r.axes.length!==0){if(r.axes.length!==r.starts.length||r.axes.length!==r.ends.length)throw new Error(\"axes, starts and ends must have the same length\")}else if(r.starts.length!==r.ends.length)throw new Error(\"starts and ends must have the same length\");t.slice(1).forEach((e,d)=>{if(t[d+1].dataType!==6&&t[d+1].dataType!==7)throw new Error(`Input ${d} must be an array of int32 or int64`)})},ii=(t,r)=>{let e=[];if(t.length>r)if(t[r].dataType===7)t[r].getBigInt64Array().forEach(d=>e.push(Number(d)));else if(t[r].dataType===6)t[r].getInt32Array().forEach(d=>e.push(Number(d)));else throw new Error(`Input ${r} must be an array of int32 or int64`);return e},vh=(t,r)=>{if(t.length>1){let e=ii(t,1),d=ii(t,2),l=ii(t,3);return l.length===0&&(l=[...Array(t[0].dims.length).keys()]),ye({starts:e,ends:d,axes:l})}else return r},Nl=(t,r,e,d,l)=>{let m=t;return t<0&&(m+=e[d[r]]),l[r]<0?Math.max(0,Math.min(m,e[d[r]]-1)):Math.max(0,Math.min(m,e[d[r]]))},wh=(t,r,e,d)=>`fn calculateInputIndices(outputIndices: ${r.type.indices}) -> ${t.type.indices} {\n          var inputIndices: ${t.type.indices};\n          var carry = 0u;\n          for (var i = ${e.length}; i >= 0; i--) {\n            var outputIndex = ${d.length===1?\"outputIndices\":\"outputIndices[i]\"};\n            var inputIndex = outputIndex * steps[i] + starts[i] + carry;\n            carry = inputIndex / inputShape[i];\n            inputIndex = inputIndex % inputShape[i];\n            if (signs[i] < 0) {\n              inputIndex = inputShape[i] - inputIndex - 1u + starts[i];\n            }\n            ${e.length===1?\"inputIndices\":\"inputIndices[i]\"} = inputIndex;\n          }\n          return inputIndices;\n      }`,Ch=(t,r)=>{let e=t[0].dims,d=Y.size(e),l=r.axes.length>0?Y.normalizeAxes(r.axes,e.length):[...Array(e.length).keys()],m=ii(t,4);m.forEach(T=>T!==0||(()=>{throw new Error(\"step cannot be 0\")})),m.length===0&&(m=Array(l.length).fill(1));let h=r.starts.map((T,k)=>Nl(T,k,e,l,m)),u=r.ends.map((T,k)=>Nl(T,k,e,l,m));if(l.length!==e.length)for(let T=0;T<e.length;++T)l.includes(T)||(h.splice(T,0,0),u.splice(T,0,e[T]),m.splice(T,0,1));let w=m.map(T=>Math.sign(T));m.forEach((T,k,U)=>{if(T<0){let K=(u[k]-h[k])/T,Q=h[k],L=Q+K*m[k];h[k]=L,u[k]=Q,U[k]=-T}});let _=e.slice(0);l.forEach((T,k)=>{_[T]=Math.ceil((u[T]-h[T])/m[T])});let O={dims:_,dataType:t[0].dataType},j=fe(\"output\",t[0].dataType,_),B=ne(\"input\",t[0].dataType,e),P=Y.size(_),R=T=>`\n      ${T.declareVariables(B,j)}\n        const signs = array<i32, ${w.length}>(${w.map(k=>`${k}i`).join(\",\")});\n        const starts = array<u32, ${h.length}>(${h.map(k=>`${k}u`).join(\",\")});\n        const ends = array<u32, ${u.length}>(${u.map(k=>`${k}u`).join(\",\")});\n        const steps = array<u32, ${m.length}>(${m.map(k=>`${k}u`).join(\",\")});\n        const inputShape = array<u32, ${e.length}>(${e.map(k=>`${k}u`).join(\",\")});\n\n        ${wh(B,j,e,_)}\n        ${T.mainStart()}\n          ${T.guardAgainstOutOfBoundsWorkgroupSizes(P)}\n          let outputIndices = ${j.offsetToIndices(\"global_idx\")};\n          let inputIndices = calculateInputIndices(outputIndices);\n          ${j.setByOffset(\"global_idx\",B.getByIndices(\"inputIndices\"))}\n      }`;return{name:\"Slice\",shaderCache:{hint:`${r.cacheKey}|${t[4]?.dims??\"\"}`},getShaderSource:R,getRunData:()=>({outputs:[O],dispatchGroup:{x:Math.ceil(d/64)}})}},Fl=(t,r)=>{bh(t.inputs,r);let e=vh(t.inputs,r);t.compute(Ch(t.inputs,e),{inputs:[0]})},Hl=t=>{let r=t.starts,e=t.ends,d=t.axes;return ye({starts:r,ends:e,axes:d})}});var $h,xh,Kl,ql,Yl=oe(()=>{\"use strict\";Ae();Ne();Pe();$h=t=>{if(!t||t.length!==1)throw new Error(\"Softmax op requires 1 input.\")},xh=(t,r)=>{let e=Fe(t.dataType),d=t.dims,l=Y.size(d),m=64,h=r.axis;if(h<0&&(h=d.length+h),h<d.length-1)throw new Error(\"softmax only supports last axis for now.\");let u=d[h],w=l/u,_=e===\"f32\"?\"var threadMax: f32 = -3.402823e+38f;\":\"var threadMax: f16 = -65504.0h;\";return{name:\"Softmax\",getRunData:()=>({outputs:[{dims:d,dataType:t.dataType}],dispatchGroup:{x:w}}),getShaderSource:j=>`\n      var<workgroup> rowMaxShared : ${e};\n      var<workgroup> rowSumShared : ${e};\n      var<workgroup> threadShared : array<${e}, ${m}>;\n\n      @group(0) @binding(0) var<storage, read> x : array<${e}>;\n      @group(0) @binding(1) var<storage, read_write> result : array<${e}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${e} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${e}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n\n      @compute @workgroup_size(${m}, 1, 1)\n      fn main(@builtin(local_invocation_id) local_id : vec3<u32>, @builtin(global_invocation_id) global_id : vec3u) {\n        let gindex = i32(global_id.x);\n        let lindex = i32(local_id.x);\n        const wg = ${m};\n        let row = gindex / wg;\n        let cols = ${u};\n        let row_stride : i32 = ${u};\n\n        // find the rows max\n        ${_}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = threadShared[0];\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum: ${e} = 0.0;\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = threadShared[0];\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`}},Kl=(t,r)=>{$h(t.inputs),t.compute(xh(t.inputs[0],r))},ql=t=>ye({axis:t.axis})});var Sh,_h,Ah,Ih,Th,Xl,Ql,Jl=oe(()=>{\"use strict\";Ae();Ne();Pe();Sh=t=>{if(!t||t.length<1)throw new Error(\"too few inputs\")},_h=(t,r)=>{let e=[],d=r.numOutputs;return t[1].dims[0]>0&&(t[1].getBigInt64Array().forEach(l=>e.push(Number(l))),d=e.length),ye({numOutputs:d,axis:r.axis,splitSizes:e})},Ah=t=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${t}u; i += 1u ) {\n    if (index < sizeInConcatAxis[i]) {\n        return i;\n    }\n    }\n    return ${t}u;\n}`,Ih=t=>{let r=t.length,e=[];for(let d=0;d<r;++d){let l=t[d].setByIndices(\"indices\",\"input[global_idx]\");r===1?e.push(l):d===0?e.push(`if (outputNumber == ${d}u) { ${l} }`):d===r-1?e.push(`else { ${l} }`):e.push(`else if (outputNumber == ${d}) { ${l} }`)}return`\n      fn writeBufferData(outputNumber: u32, indices: ${t[0].type.indices}, global_idx: u32) {\n        ${e.join(`\n`)}\n      }`},Th=(t,r)=>{let e=t[0].dims,d=Y.size(e),l=t[0].dataType,m=e.length,h=r.axis,u=h<0?e.length+h:h,w=new Array(r.numOutputs),_=ne(\"input\",l,e),O=new Array(r.numOutputs),j=[],B=[],P=0;for(let k=0;k<r.numOutputs;k++){P+=r.splitSizes[k],O[k]=P;let U=e.slice();U[r.axis]=r.splitSizes[k],B.push(U),w[k]=fe(`output${k}`,l,B[k]),j.push({dims:B[k],dataType:t[0].dataType})}let R=m<2?\"indices\":`indices[${u}]`,T=k=>`\n  ${k.declareVariables(_,...w)}\n  const sizeInConcatAxis = array<u32, ${O.length}>(${O.map(U=>`${U}u`).join(\",\")});\n  ${Ah(O.length)}\n  ${Ih(w)}\n\n  ${k.mainStart()}\n    ${k.guardAgainstOutOfBoundsWorkgroupSizes(d)}\n\n    var indices = ${_.offsetToIndices(\"global_idx\")};\n    let outputNumber = calculateOutputIndex(${R});\n    if (outputNumber != 0) {\n        ${R} -= sizeInConcatAxis[outputNumber - 1u];\n    }\n    writeBufferData(outputNumber, indices, global_idx);\n  }`;return{name:\"Split\",shaderCache:{hint:r.cacheKey},getShaderSource:T,getRunData:()=>({outputs:j,dispatchGroup:{x:Math.ceil(d/64)}})}},Xl=(t,r)=>{Sh(t.inputs);let e=t.inputs.length===1?r:_h(t.inputs,r);t.compute(Th(t.inputs,e),{inputs:[0]})},Ql=t=>{let r=t.axis,e=t.splitSizes,d=t.numOutputs<0?e.length:t.numOutputs;if(d!==e.length)throw new Error(\"numOutputs and splitSizes lengh must be equal\");return ye({axis:r,numOutputs:d,splitSizes:e})}});var Zl,Oh,Eh,Ph,ec,tc=oe(()=>{\"use strict\";Xe();Ae();Pe();Zl=t=>Array.from(t.getBigInt64Array(),Number),Oh=t=>{if(!t||t.length!==2)throw new Error(\"Tile requires 2 inputs.\");if(t[0].dataType!==1&&t[0].dataType!==6&&t[0].dataType!==12)throw new Error(\"Tile only support float, int32, and uint32 data types\");if(t[1].dataType!==7)throw new Error(\"Tile `repeats` input should be of int64 data type\");if(t[1].dims.length!==1)throw new Error(\"Tile `repeats` input should be 1-D\");if(Zl(t[1]).length!==t[0].dims.length)throw new Error(\"Tile `repeats` input should have same number of elements as rank of input data tensor\")},Eh=(t,r)=>{let e=[];for(let d=0;d<t.length;++d)e.push(t[d]*r[d]);return e},Ph=t=>{let r=t[0].dims,e=Zl(t[1]),d=Eh(r,e),l=Y.size(d),m=t[0].dataType,h=ne(\"input\",m,r),u=fe(\"output\",m,d),w=_=>`\n      const inputShape = ${h.indices(...r)};\n      ${_.declareVariables(h,u)}\n      ${_.mainStart()}\n      ${_.guardAgainstOutOfBoundsWorkgroupSizes(l)}\n      let outputIndices = ${u.offsetToIndices(\"global_idx\")};\n      var inputIndices: ${h.type.indices};\n      for (var i = 0; i < ${r.length}; i++) {\n        let inputDimValue = ${u.indicesGet(\"outputIndices\",\"i\")}  % ${h.indicesGet(\"inputShape\",\"i\")};\n\n        ${h.indicesSet(\"inputIndices\",\"i\",\"inputDimValue\")}\n      }\n      ${u.setByOffset(\"global_idx\",h.getByIndices(\"inputIndices\"))}\n    }`;return{name:\"Tile\",shaderCache:{hint:`${e}`},getRunData:()=>({outputs:[{dims:d,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)}}),getShaderSource:w}},ec=t=>{Oh(t.inputs),t.compute(Ph(t.inputs),{inputs:[0]})}});var Rh,kh,rc,nc=oe(()=>{\"use strict\";Xe();Ae();Pe();Rh=(t,r,e,d,l)=>{let m=Y.size(e),h=Math.ceil(m/4),u=fe(\"outputData\",l,e,4),w=ne(\"aData\",r[1].dataType,r[1].dims,4),_=ne(\"bData\",r[2].dataType,r[2].dims,4),O=ne(\"cData\",r[0].dataType,r[0].dims,4),j,B=(P,R,T)=>`select(${R}, ${P}, ${T})`;if(!d)j=u.setByOffset(\"global_idx\",B(w.getByOffset(\"global_idx\"),_.getByOffset(\"global_idx\"),O.getByOffset(\"global_idx\")));else{let P=(R,T,k=\"\")=>{let U=`aData[indexA${T}][componentA${T}]`,K=`bData[indexB${T}][componentB${T}]`,Q=`bool(cData[indexC${T}] & ${4278190080>>>(3-T)*8}u)`;return`\n            let outputIndices${T} = ${u.offsetToIndices(`global_idx * 4u + ${T}u`)};\n            let offsetA${T} = ${w.broadcastedIndicesToOffset(`outputIndices${T}`,u)};\n            let offsetB${T} = ${_.broadcastedIndicesToOffset(`outputIndices${T}`,u)};\n            let offsetC${T} = ${O.broadcastedIndicesToOffset(`outputIndices${T}`,u)};\n            let indexA${T} = offsetA${T} / 4u;\n            let indexB${T} = offsetB${T} / 4u;\n            let indexC${T} = offsetC${T} / 4u;\n            let componentA${T} = offsetA${T} % 4u;\n            let componentB${T} = offsetB${T} % 4u;\n            ${R}[${T}] = ${k}(${B(U,K,Q)});\n          `};l===9?j=`\n            var data = vec4<u32>(0);\n            ${P(\"data\",0,\"u32\")}\n            ${P(\"data\",1,\"u32\")}\n            ${P(\"data\",2,\"u32\")}\n            ${P(\"data\",3,\"u32\")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:j=`\n            ${P(\"outputData[global_idx]\",0)}\n            ${P(\"outputData[global_idx]\",1)}\n            ${P(\"outputData[global_idx]\",2)}\n            ${P(\"outputData[global_idx]\",3)}\n          `}return`\n        ${t.declareVariables(O,w,_,u)}\n        ${t.mainStart()}\n        ${t.guardAgainstOutOfBoundsWorkgroupSizes(h)}\n        ${j}\n      }`},kh=t=>{let r=t[1].dims,e=t[2].dims,d=t[0].dims,l=t[1].dataType,m=!(Y.areEqual(r,e)&&Y.areEqual(e,d)),h=r,u=Y.size(r);if(m){let w=Ct.calcShape(Ct.calcShape(r,e,!1),d,!1);if(!w)throw new Error(\"Can't perform where op on the given tensors\");h=w,u=Y.size(h)}return{name:\"Where\",getShaderSource:w=>Rh(w,t,h,m,l),getRunData:()=>({outputs:[{dims:h,dataType:l}],dispatchGroup:{x:Math.ceil(u/64/4)}})}},rc=t=>{t.compute(kh(t.inputs))}});var ic,oc=oe(()=>{\"use strict\";hs();ys();Xs();su();cu();ki();Tu();Ru();Mu();Wu();Vu();Fu();Ku();Xu();Ju();tl();gl();jl();Ai();zl();Ul();Ll();Yl();Jl();tc();ei();Oi();nc();ic=new Map([[\"Abs\",[bs]],[\"Acos\",[vs]],[\"Acosh\",[ws]],[\"Add\",[Qs]],[\"ArgMax\",[ms,Ii]],[\"ArgMin\",[ps,Ii]],[\"Asin\",[Cs]],[\"Asinh\",[$s]],[\"Atan\",[xs]],[\"Atanh\",[Ss]],[\"AveragePool\",[sl,al]],[\"BiasAdd\",[gs]],[\"BiasSplitGelu\",[Ys]],[\"Cast\",[As,_s]],[\"Ceil\",[Ts]],[\"ClipV10\",[Ti]],[\"Clip\",[Is]],[\"Concat\",[uu,lu]],[\"Conv\",[Cu,wu]],[\"ConvTranspose\",[Iu,Au]],[\"Cos\",[Os]],[\"Cosh\",[Es]],[\"Div\",[Js]],[\"Einsum\",[Eu,Pu]],[\"Elu\",[Ps,Hn]],[\"Equal\",[Zs]],[\"Erf\",[Rs]],[\"Exp\",[ks]],[\"Expand\",[Bu]],[\"Floor\",[Bs]],[\"Gather\",[Du,ju]],[\"GatherElements\",[Gu,zu]],[\"Gelu\",[Ms]],[\"Gemm\",[Uu,Nu]],[\"GlobalAveragePool\",[cl,ll]],[\"GlobalMaxPool\",[hl,ml]],[\"Greater\",[nu]],[\"GreaterOrEqual\",[ou]],[\"InstanceNormalization\",[Lu,Hu]],[\"LayerNormalization\",[Yu,qu]],[\"LeakyRelu\",[js,Hn]],[\"Less\",[iu]],[\"LessOrEqual\",[au]],[\"Log\",[qs]],[\"MatMul\",[Qu]],[\"MaxPool\",[fl,pl]],[\"Mul\",[eu]],[\"Neg\",[Ws]],[\"Not\",[Ds]],[\"Pad\",[Zu,el]],[\"Pow\",[tu]],[\"Range\",[Ml]],[\"Reciprocal\",[zs]],[\"ReduceMin\",[ss,ht]],[\"ReduceMean\",[as,ht]],[\"ReduceMax\",[os,ht]],[\"ReduceSum\",[ls,ht]],[\"ReduceProd\",[us,ht]],[\"ReduceL1\",[rs,ht]],[\"ReduceL2\",[ns,ht]],[\"ReduceLogSum\",[ts,ht]],[\"ReduceLogSumExp\",[is,ht]],[\"ReduceSumSquare\",[cs,ht]],[\"Relu\",[Gs]],[\"Resize\",[Dl,Wl]],[\"Sigmoid\",[Vs]],[\"Sin\",[Us]],[\"Sinh\",[Ns]],[\"Slice\",[Fl,Hl]],[\"SkipLayerNormalization\",[Gl,Vl]],[\"Split\",[Xl,Ql]],[\"Sqrt\",[Fs]],[\"Softmax\",[Kl,ql]],[\"Sub\",[ru]],[\"Tan\",[Hs]],[\"Tanh\",[Ls]],[\"ThresholdedRelu\",[Ks,Hn]],[\"Tile\",[ec]],[\"Transpose\",[gu,yu]],[\"Where\",[rc]]])});var oi,ac=oe(()=>{\"use strict\";Xe();Tt();Pe();oi=class{constructor(r){this.backend=r;this.repo=new Map,this.attributesBound=!1}getArtifact(r){return this.repo.get(r)}setArtifact(r,e){this.repo.set(r,e)}run(r,e,d,l,m,h,u){let w=this.backend.device,_=this.backend.getComputePassEncoder(),O=this.backend.supportTimestampQuery&&this.backend.env.webgpu.profilingMode===\"default\";O&&_.writeTimestamp(this.backend.profilingQuerySet,0),_.setPipeline(r.computePipeline);let j=[];for(let P of l)j.push({binding:j.length,resource:{buffer:P.buffer}});for(let P of m)j.push({binding:j.length,resource:{buffer:P.buffer}});u&&j.push({binding:j.length,resource:u});let B=w.createBindGroup({layout:r.computePipeline.getBindGroupLayout(0),entries:j,label:r.programInfo.name});if(_.setBindGroup(0,B),_.dispatchWorkgroups(...h),this.backend.pendingDispatchNumber++,O){_.writeTimestamp(this.backend.profilingQuerySet,1),this.backend.profilingQueryData==null&&(this.backend.profilingQueryData=this.backend.gpuDataManager.create(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE));let P=this.backend.gpuDataManager.create(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.backend.endComputePass(),this.backend.getCommandEncoder().resolveQuerySet(this.backend.profilingQuerySet,0,2,this.backend.profilingQueryData.buffer,0),this.backend.getCommandEncoder().copyBufferToBuffer(this.backend.profilingQueryData.buffer,0,P.buffer,0,16),this.backend.flush();let R=this.backend.currentKernelId,T=this.backend.kernels.get(R),k=`[${T[0]}] ${T[1]}`;P.buffer.mapAsync(GPUMapMode.READ).then(()=>{let U=new BigUint64Array(P.buffer.getMappedRange()),K=U[0],Q=U[1];P.buffer.unmap(),typeof this.backend.profilingTimeBase>\"u\"&&(this.backend.profilingTimeBase=K);let L=Number(K-this.backend.profilingTimeBase),X=Number(Q-this.backend.profilingTimeBase);if(!Number.isSafeInteger(L)||!Number.isSafeInteger(X))throw new RangeError(\"incorrect timestamp range\");this.backend.gpuDataManager.release(P.id);let A=\"\";e.forEach((re,ie)=>{A+=`input[${ie}]: [${re.dims}] | ${tn(re.dataType)}, `});let Z=\"\";d.forEach((re,ie)=>{Z+=`output[${ie}]: [${re.dims}] | ${tn(re.dataType)}, `}),console.log(`[profiling] kernel \"${R}|${k}\" ${A}${Z}execution time: ${X-L} ns`)})}this.backend.pendingDispatchNumber>=16&&this.backend.flush()}dispose(){}build(r,e){let d=this.backend.device,l=[];d.features.has(\"shader-f16\")&&l.push(\"enable f16;\");let m=es(e),h=r.getShaderSource(m),u=`${l.join(`\n`)}\n${m.additionalImplementations}\n${h}`,w=d.createShaderModule({code:u,label:r.name});ze(\"verbose\",()=>`[WebGPU] shader code: ${u}`);let _=d.createComputePipeline({compute:{module:w,entryPoint:\"main\"},layout:\"auto\",label:r.name});return{programInfo:r,computePipeline:_}}normalizeDispatchGroupSize(r){let e=typeof r==\"number\"?r:r.x,d=typeof r==\"number\"?1:r.y||1,l=typeof r==\"number\"?1:r.z||1,m=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(e<=m&&d<=m&&l<=m)return[e,d,l];let h=e*d*l,u=Math.ceil(Math.sqrt(h));if(u>m){if(u=Math.ceil(Math.cbrt(h)),u>m)throw new Error(\"Total dispatch size exceeds WebGPU maximum.\");return[u,u,u]}else return[u,u,1]}}});var Bh,Mh,ai,sc=oe(()=>{\"use strict\";Tt();Ka();Qa();oc();ac();Bh=(t,r)=>{if(r.length!==t.length)throw new Error(`inputDependencies length ${r.length} is not equal to inputTensors length ${t.length}.`);let e=[];for(let d=0;d<t.length;++d){let l=t[d].dataType;switch(r[d]){case\"none\":{e.push(\"\");break}case\"type\":{e.push(`${l}`);break}case\"rank\":{let m=t[d].dims.length;e.push(`${l};${m}`);break}case\"dims\":{let m=t[d].dims.join(\",\");e.push(`${l};${m}`);break}default:throw new Error(`unsupported input dependency: ${r[d]}`)}}return e.join(\"|\")},Mh=(t,r)=>{let e=t.name;return t.shaderCache?.hint&&(e+=\"[\"+t.shaderCache.hint+\"]\"),e+=`:${Bh(r,t.shaderCache?.inputDependencies??new Array(r.length).fill(\"dims\"))}`,e},ai=class{constructor(){this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.pendingDispatchNumber=0;this.supportTimestampQuery=!1;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error(\"currentKernelCustomData(): currentKernelId is null. (should not happen)\");let r=this.kernelCustomData.get(this.currentKernelId);return r||(r={},this.kernelCustomData.set(this.currentKernelId,r)),r}async initialize(r){if(!navigator.gpu)throw new Error(\"WebGpuBackend: WebGPU is not available.\");let e=await navigator.gpu.requestAdapter();if(!e)throw new Error(\"WebGpuBackend: Failed to get GPU adapter.\");this.env=r;let d=[],l={requiredLimits:{maxComputeWorkgroupStorageSize:e.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:e.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:e.limits.maxStorageBufferBindingSize,maxBufferSize:e.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:e.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:e.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:e.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:e.limits.maxComputeWorkgroupSizeZ},requiredFeatures:d};e.features.has(\"timestamp-query-inside-passes\")&&(this.supportTimestampQuery=!0,d.push(\"timestamp-query-inside-passes\")),e.features.has(\"shader-f16\")&&d.push(\"shader-f16\"),this.device=await e.requestDevice(l),this.gpuDataManager=Xa(this),this.programManager=new oi(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Ha(r.logLevel,!!r.debug),this.device.onuncapturederror=m=>{m.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${m.error.message}`)},this.supportTimestampQuery&&(this.profilingQuerySet=this.device.createQuerySet({type:\"timestamp\",count:2})),Object.defineProperty(this.env.webgpu,\"device\",{value:this.device})}dispose(){}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){return this.computePassEncoder||(this.computePassEncoder=this.getCommandEncoder().beginComputePass()),this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){this.commandEncoder&&(this.endComputePass(),this.device.queue.submit([this.getCommandEncoder().finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0)}run(r,e,d,l,m){let h=[];for(let U=0;U<e.length;++U){let K=this.gpuDataManager.get(e[U].data);if(!K)throw new Error(`no GPU data for input: ${e[U].data}`);h[U]=K}let u=Mh(r,e),w=this.programManager.getArtifact(u),{outputs:_,dispatchGroup:O,programUniforms:j}=r.getRunData(e),B=d.length===0?_.map((U,K)=>K):d;if(B.length!==_.length)throw new Error(`Output size ${B.length} must be equal to ${_.length}.`);let P=[],R=[];for(let U=0;U<_.length;++U){if(!Number.isInteger(B[U])||B[U]<-3||B[U]>=_.length)throw new Error(`Invalid output index: ${B[U]}`);if(B[U]===-3)continue;let K=B[U]===-1,Q=B[U]===-2,L=K||Q?m(_[U].dataType,_[U].dims):l(B[U],_[U].dataType,_[U].dims),X=this.gpuDataManager.get(L.data);if(!X)throw new Error(`no GPU data for output: ${L.data}`);if(K&&this.temporaryData.push(X),Q){let A=this.kernelPersistentData.get(this.currentKernelId);A||(A=[],this.kernelPersistentData.set(this.currentKernelId,A)),A.push(X)}P.push(L),R.push(X)}let T;if(j){let U=0,K=0,Q=[],L=1;j.forEach(Z=>{let re=typeof Z.data==\"number\"?[Z.data]:Z.data,ie;switch(re.length){case 1:ie=4;break;case 2:ie=8;break;case 3:ie=16;break;case 4:ie=16;break;case 5:ie=16;break;case 6:ie=16;break;default:throw new Error(`unsupported data length: ${re.length}`)}(K===5||K===6)&&(ie=16),ie>L&&(L=ie),U=Math.ceil(U/ie)*ie,K=re.length,Q.push(U),U+=re.length*4}),U=Math.ceil(U/L)*L;let X=new ArrayBuffer(U);j.forEach((Z,re)=>{let ie=Q[re],Ce=typeof Z.data==\"number\"?[Z.data]:Z.data;Z.type===\"int32\"?new Int32Array(X,ie,Ce.length).set(Ce):Z.type===\"uint32\"?new Uint32Array(X,ie,Ce.length).set(Ce):new Float32Array(X,ie,Ce.length).set(Ce)});let A=this.gpuDataManager.create(U,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(A.buffer,0,X,0,U),this.gpuDataManager.release(A.id),T={offset:0,size:U,buffer:A.buffer}}let k=this.programManager.normalizeDispatchGroupSize(O);return w||(w=this.programManager.build(r,k),this.programManager.setArtifact(u,w)),ze(\"info\",()=>`[ProgramManager] run \"${r.name}\" (key=${u}) with ${k[0]}x${k[1]}x${k[2]}`),this.programManager.run(w,e,P,h,R,k,T),P}upload(r,e){this.gpuDataManager.upload(r,e)}memcpy(r,e){this.gpuDataManager.memcpy(r,e)}async download(r,e){await this.gpuDataManager.download(r,e)}alloc(r){return this.gpuDataManager.create(r).id}free(r){return this.gpuDataManager.release(r)}createKernel(r,e,d,l){let m=ic.get(r);if(!m)throw new Error(`kernel not implemented: ${r}`);this.kernels.set(e,[r,l,m[0],[m[1],d]])}releaseKernel(r){let e=this.kernelPersistentData.get(r);if(e){for(let d of e)this.gpuDataManager.release(d.id);this.kernelPersistentData.delete(r)}this.kernelCustomData.delete(r),this.kernels.delete(r)}computeKernel(r,e,d){let l=this.kernels.get(r);if(!l)throw new Error(`kernel not created: ${r}`);let[m,h,u,w]=l;if(this.currentKernelId!==null)throw new Error(`kernel \"[${m}] ${h}\" is not allowed to be called recursively`);this.currentKernelId=r,w[0]&&(w[1]=w[0](w[1]),w[0]=void 0),ze(\"info\",()=>`[WebGPU] Start to run kernel \"[${m}] ${h}\"...`);let _=this.env.debug;this.temporaryData=[];try{return _&&this.device.pushErrorScope(\"validation\"),u(e,w[1]),0}catch(O){return d.push(Promise.resolve(`[WebGPU] Kernel \"[${m}] ${h}\" failed. ${O}`)),1}finally{_&&d.push(this.device.popErrorScope().then(O=>O?`GPU validation error for kernel \"[${m}] ${h}\": ${O.message}`:null));for(let O of this.temporaryData)this.gpuDataManager.release(O.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(r,e,d,l){let m=this.sessionExternalDataMapping.get(r);m||(m=new Map,this.sessionExternalDataMapping.set(r,m));let h=m.get(e),u=this.gpuDataManager.registerExternalBuffer(d,l,h?.[1]);return m.set(e,[u,d]),u}unregisterBuffers(r){let e=this.sessionExternalDataMapping.get(r);e&&(e.forEach(d=>this.gpuDataManager.unregisterExternalBuffer(d[1])),this.sessionExternalDataMapping.delete(r))}getBuffer(r){let e=this.gpuDataManager.get(r);if(!e)throw new Error(`no GPU data for buffer: ${r}`);return e.buffer}createDownloader(r,e,d){return async()=>{let l=await wi(this,r,e);return La(l.buffer,d)}}}});var uc={};Dn(uc,{init:()=>jh});var ln,Vi,jh,lc=oe(()=>{\"use strict\";Xe();sc();Tt();Ae();ln=class t{constructor(r,e,d,l){this.module=r;this.dataType=e;this.data=d;this.dims=l}getFloat32Array(){if(this.dataType!==1)throw new Error(\"Invalid data type\");let r=Y.size(this.dims);return r===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,r)}getBigInt64Array(){if(this.dataType!==7)throw new Error(\"Invalid data type\");let r=Y.size(this.dims);return r===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,r)}getInt32Array(){if(this.dataType!==6)throw new Error(\"Invalid data type\");let r=Y.size(this.dims);return r===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,r)}reshape(r){if(Y.size(r)!==Y.size(this.dims))throw new Error(\"Invalid new shape\");return new t(this.module,this.dataType,this.data,r)}},Vi=class{constructor(r,e,d){this.module=r;this.backend=e;this.customDataOffset=0;this.customDataSize=0;let l=r.HEAPU32,m=d>>2;this.opKernelContext=l[m++];let h=l[m++];this.outputCount=l[m++],this.customDataOffset=l[m++],this.customDataSize=l[m++];let u=[];for(let w=0;w<h;w++){let _=l[m++],O=l[m++],j=l[m++],B=[];for(let P=0;P<j;P++)B.push(l[m++]);u.push(new ln(r,_,O,B))}this.inputs=u}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(r,e){let d=e?.inputs?.map(u=>typeof u==\"number\"?this.inputs[u]:u)??this.inputs,l=e?.outputs??[],m=(u,w,_)=>new ln(this.module,w,this.output(u,_),_),h=(u,w)=>{let _=rn(u);if(!_)throw new Error(`Unsupported data type: ${u}`);let O=_*Y.size(w);return new ln(this.module,u,this.backend.gpuDataManager.create(O).id,w)};return this.backend.run(r,d,l,m,h)}output(r,e){let d=this.module.stackSave();try{let l=this.module.stackAlloc((1+e.length)*4),m=l>>2;this.module.HEAPU32[m++]=e.length;for(let h=0;h<e.length;h++)this.module.HEAPU32[m++]=e[h];return this.module._JsepOutput(this.opKernelContext,r,l)}catch(l){throw new Error(`Failed to generate kernel's output[${r}] with dims [${e}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${l}`)}finally{this.module.stackRestore(d)}}},jh=async(t,r)=>{let e=t.jsepInit;if(e&&navigator.gpu){if(!r.wasm.simd)throw new Error(\"Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using WebGPU EP\");let d=new ai;await d.initialize(r),e(d,l=>d.alloc(l),l=>d.free(l),(l,m,h,u=!1)=>{if(u)ze(\"verbose\",()=>`[WebGPU] jsepCopyGpuToGpu: src=${l}, dst=${m}, size=${h}`),d.memcpy(l,m);else{ze(\"verbose\",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${l}, gpuDataId=${m}, size=${h}`);let w=t.HEAPU8.subarray(l,l+h);d.upload(m,w)}},async(l,m,h)=>{ze(\"verbose\",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${l}, dataOffset=${m}, size=${h}`),await d.download(l,()=>t.HEAPU8.subarray(m,m+h))},(l,m,h)=>d.createKernel(l,m,h,r.debug||r.webgpu.profilingMode===\"default\"?t.UTF8ToString(t._JsepGetNodeName(m)):`${m}`),l=>d.releaseKernel(l),(l,m,h,u)=>{ze(\"verbose\",()=>`[WebGPU] jsepRun: sessionHandle=${h}, kernel=${l}, contextDataOffset=${m}`);let w=new Vi(t,d,m);return d.computeKernel(l,w,u)})}}});var Wa;Wa=Ta();var Tp=Ma(),hi,gi=!1,Wn=!1,Da=!1,Op=()=>{try{return typeof SharedArrayBuffer>\"u\"?!1:(typeof MessageChannel<\"u\"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch{return!1}},Ep=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Pp=(t,r)=>t?r?\"ort-wasm-simd-threaded.wasm\":\"ort-wasm-simd.wasm\":r?\"ort-wasm-threaded.wasm\":\"ort-wasm.wasm\",za=async t=>{if(gi)return Promise.resolve();if(Wn)throw new Error(\"multiple calls to 'initializeWebAssembly()' detected.\");if(Da)throw new Error(\"previous call to 'initializeWebAssembly()' failed.\");Wn=!0;let r=t.initTimeout,e=t.numThreads,d=t.simd,l=e>1&&Op(),m=d&&Ep(),h=t.wasmPaths,u=typeof h==\"string\"?h:void 0,w=Pp(m,l),_=typeof h==\"object\"?h[w]:void 0,O=!1,j=[];if(r>0&&j.push(new Promise(B=>{setTimeout(()=>{O=!0,B()},r)})),j.push(new Promise((B,P)=>{let R=l?Tp:Wa,T={locateFile:(k,U)=>{if(l&&k.endsWith(\".worker.js\")&&typeof Blob<\"u\")return URL.createObjectURL(new Blob([ja()],{type:\"text/javascript\"}));if(k.endsWith(\".wasm\")){if(_)return _;let K=u??U;return w===\"ort-wasm-simd.wasm\"?K+\"ort-wasm-simd.jsep.wasm\":w===\"ort-wasm-simd-threaded.wasm\"?K+\"ort-wasm-simd-threaded.jsep.wasm\":K+w}return U+k}};if(l)if(typeof Blob>\"u\")T.mainScriptUrlOrBlob=(void 0)(__dirname,\"ort-wasm-threaded.js\");else{let k=`var ortWasmThreaded=${R.toString()};`;T.mainScriptUrlOrBlob=new Blob([k],{type:\"text/javascript\"})}R(T).then(k=>{Wn=!1,gi=!0,hi=k,B()},k=>{Wn=!1,Da=!0,P(k)})})),await Promise.race(j),O)throw new Error(`WebAssembly backend initializing failed due to timeout: ${r}ms`)},Ue=()=>{if(gi&&hi)return hi;throw new Error(\"WebAssembly is not initialized yet.\")};var Ke=(t,r)=>{let e=Ue(),d=e.lengthBytesUTF8(t)+1,l=e._malloc(d);return e.stringToUTF8(t,l,d),r.push(l),l},en=(t,r,e,d)=>{if(typeof t==\"object\"&&t!==null){if(e.has(t))throw new Error(\"Circular reference in options\");e.add(t)}Object.entries(t).forEach(([l,m])=>{let h=r?r+l:l;if(typeof m==\"object\")en(m,h+\".\",e,d);else if(typeof m==\"string\"||typeof m==\"number\")d(h,m.toString());else if(typeof m==\"boolean\")d(h,m?\"1\":\"0\");else throw new Error(`Can't handle extra config type: ${typeof m}`)})},We=t=>{let r=Ue(),e=r.stackSave();try{let d=r.stackAlloc(8);r._OrtGetLastError(d,d+4);let l=r.HEAP32[d/4],m=r.HEAPU32[d/4+1],h=m?r.UTF8ToString(m):\"\";throw new Error(`${t} ERROR_CODE: ${l}, ERROR_MESSAGE: ${h}`)}finally{r.stackRestore(e)}};var Ga=t=>{let r=Ue(),e=0,d=[],l=t||{};try{if(t?.logSeverityLevel===void 0)l.logSeverityLevel=2;else if(typeof t.logSeverityLevel!=\"number\"||!Number.isInteger(t.logSeverityLevel)||t.logSeverityLevel<0||t.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${t.logSeverityLevel}`);if(t?.logVerbosityLevel===void 0)l.logVerbosityLevel=0;else if(typeof t.logVerbosityLevel!=\"number\"||!Number.isInteger(t.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${t.logVerbosityLevel}`);t?.terminate===void 0&&(l.terminate=!1);let m=0;return t?.tag!==void 0&&(m=Ke(t.tag,d)),e=r._OrtCreateRunOptions(l.logSeverityLevel,l.logVerbosityLevel,!!l.terminate,m),e===0&&We(\"Can't create run options.\"),t?.extra!==void 0&&en(t.extra,\"\",new WeakSet,(h,u)=>{let w=Ke(h,d),_=Ke(u,d);r._OrtAddRunConfigEntry(e,w,_)!==0&&We(`Can't set a run config entry: ${h} - ${u}.`)}),[e,d]}catch(m){throw e!==0&&r._OrtReleaseRunOptions(e),d.forEach(h=>r._free(h)),m}};var Rp=t=>{switch(t){case\"disabled\":return 0;case\"basic\":return 1;case\"extended\":return 2;case\"all\":return 99;default:throw new Error(`unsupported graph optimization level: ${t}`)}},kp=t=>{switch(t){case\"sequential\":return 0;case\"parallel\":return 1;default:throw new Error(`unsupported execution mode: ${t}`)}},Bp=t=>{t.extra||(t.extra={}),t.extra.session||(t.extra.session={});let r=t.extra.session;r.use_ort_model_bytes_directly||(r.use_ort_model_bytes_directly=\"1\"),t.executionProviders&&t.executionProviders.some(e=>(typeof e==\"string\"?e:e.name)===\"webgpu\")&&(t.enableMemPattern=!1)},Mp=(t,r,e)=>{for(let d of r){let l=typeof d==\"string\"?d:d.name;switch(l){case\"xnnpack\":l=\"XNNPACK\";break;case\"webnn\":if(l=\"WEBNN\",typeof d!=\"string\"){let h=d;if(h?.deviceType){let u=Ke(\"deviceType\",e),w=Ke(h.deviceType,e);Ue()._OrtAddSessionConfigEntry(t,u,w)!==0&&We(`Can't set a session config entry: 'deviceType' - ${h.deviceType}.`)}if(h?.powerPreference){let u=Ke(\"powerPreference\",e),w=Ke(h.powerPreference,e);Ue()._OrtAddSessionConfigEntry(t,u,w)!==0&&We(`Can't set a session config entry: 'powerPreference' - ${h.powerPreference}.`)}}break;case\"webgpu\":if(l=\"JS\",typeof d!=\"string\"){let h=d;if(h?.preferredLayout){if(h.preferredLayout!==\"NCHW\"&&h.preferredLayout!==\"NHWC\")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${h.preferredLayout}`);let u=Ke(\"preferredLayout\",e),w=Ke(h.preferredLayout,e);Ue()._OrtAddSessionConfigEntry(t,u,w)!==0&&We(`Can't set a session config entry: 'preferredLayout' - ${h.preferredLayout}.`)}}break;case\"wasm\":case\"cpu\":continue;default:throw new Error(`not supported execution provider: ${l}`)}let m=Ke(l,e);Ue()._OrtAppendExecutionProvider(t,m)!==0&&We(`Can't append execution provider: ${l}.`)}},Va=t=>{let r=Ue(),e=0,d=[],l=t||{};Bp(l);try{let m=Rp(l.graphOptimizationLevel??\"all\"),h=kp(l.executionMode??\"sequential\"),u=typeof l.logId==\"string\"?Ke(l.logId,d):0,w=l.logSeverityLevel??2;if(!Number.isInteger(w)||w<0||w>4)throw new Error(`log serverity level is not valid: ${w}`);let _=l.logVerbosityLevel??0;if(!Number.isInteger(_)||_<0||_>4)throw new Error(`log verbosity level is not valid: ${_}`);let O=typeof l.optimizedModelFilePath==\"string\"?Ke(l.optimizedModelFilePath,d):0;if(e=r._OrtCreateSessionOptions(m,!!l.enableCpuMemArena,!!l.enableMemPattern,h,!!l.enableProfiling,0,u,w,_,O),e===0&&We(\"Can't create session options.\"),l.executionProviders&&Mp(e,l.executionProviders,d),l.freeDimensionOverrides)for(let[j,B]of Object.entries(l.freeDimensionOverrides)){if(typeof j!=\"string\")throw new Error(`free dimension override name must be a string: ${j}`);if(typeof B!=\"number\"||!Number.isInteger(B)||B<0)throw new Error(`free dimension override value must be a non-negative integer: ${B}`);let P=Ke(j,d);r._OrtAddFreeDimensionOverride(e,P,B)!==0&&We(`Can't set a free dimension override: ${j} - ${B}.`)}return l.extra!==void 0&&en(l.extra,\"\",new WeakSet,(j,B)=>{let P=Ke(j,d),R=Ke(B,d);r._OrtAddSessionConfigEntry(e,P,R)!==0&&We(`Can't set a session config entry: ${j} - ${B}.`)}),[e,d]}catch(m){throw e!==0&&r._OrtReleaseSessionOptions(e),d.forEach(h=>r._free(h)),m}};Xe();var Dh=t=>{let r=Ue(),e=r.stackSave();try{let d=r.stackAlloc(8);return r._OrtGetInputOutputCount(t,d,d+4)!==0&&We(\"Can't get session input/output count.\"),[r.HEAP32[d/4],r.HEAP32[d/4+1]]}finally{r.stackRestore(e)}},Wh=(t,r)=>{Ue()._OrtInit(t,r)!==0&&We(\"Can't initialize onnxruntime.\")},dc=async t=>{Wh(t.wasm.numThreads,nn(t.logLevel));{let r=(lc(),cr(uc)).init;await r(Ue(),t)}},cn=new Map,Ui=t=>{let r=Ue(),e=r._malloc(t.byteLength);if(e===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${t.byteLength}.`);return r.HEAPU8.set(t,e),[e,t.byteLength]},Ni=(t,r)=>{let e=Ue(),d=0,l=0,m=0,h=[],u=[],w=[];try{[l,h]=Va(r),d=e._OrtCreateSession(t[0],t[1],l),d===0&&We(\"Can't create a session.\");let[_,O]=Dh(d),j=[],B=[],P=[];for(let T=0;T<_;T++){let k=e._OrtGetInputName(d,T);k===0&&We(\"Can't get an input name.\"),u.push(k),j.push(e.UTF8ToString(k))}for(let T=0;T<O;T++){let k=e._OrtGetOutputName(d,T);k===0&&We(\"Can't get an output name.\"),w.push(k);let U=e.UTF8ToString(k);B.push(U);{let K=typeof r?.preferredOutputLocation==\"string\"?r.preferredOutputLocation:r?.preferredOutputLocation?.[U]??\"cpu\";if(K!==\"cpu\"&&K!==\"cpu-pinned\"&&K!==\"gpu-buffer\")throw new Error(`Not supported preferred output location: ${K}.`);P.push(K)}}let R=null;return P.some(T=>T===\"gpu-buffer\")&&(m=e._OrtCreateBinding(d),m===0&&We(\"Can't create IO binding.\"),R={handle:m,outputPreferredLocations:P,outputPreferredLocationsEncoded:P.map(T=>bi(T))}),cn.set(d,[d,u,w,R]),[d,j,B]}catch(_){throw u.forEach(O=>e._OrtFree(O)),w.forEach(O=>e._OrtFree(O)),m!==0&&e._OrtReleaseBinding(m),d!==0&&e._OrtReleaseSession(d),_}finally{e._free(t[0]),l!==0&&e._OrtReleaseSessionOptions(l),h.forEach(_=>e._free(_))}},fc=(t,r)=>{let e=Ui(t);return Ni(e,r)},pc=t=>{let r=Ue(),e=cn.get(t);if(!e)throw new Error(`cannot release session. invalid session id: ${t}`);let[d,l,m,h]=e;h&&r._OrtReleaseBinding(h.handle),r.jsepUnregisterBuffers?.(t),l.forEach(u=>r._OrtFree(u)),m.forEach(u=>r._OrtFree(u)),r._OrtReleaseSession(d),cn.delete(t)},cc=(t,r,e,d,l)=>{if(!t){r.push(0);return}let m=Ue(),h=t[0],u=t[1],w=t[3],_,O;if(h===\"string\"&&w===\"gpu-buffer\")throw new Error(\"String tensor is not supported on GPU.\");if(w===\"gpu-buffer\"){let P=t[2].gpuBuffer,R=rn(yi(h));O=u.reduce((T,k)=>T*k,1)*R,_=m.jsepRegisterBuffer(d,l,P,O)}else{let P=t[2];if(Array.isArray(P)){O=4*P.length,_=m._malloc(O),e.push(_);let R=_/4;for(let T=0;T<P.length;T++){if(typeof P[T]!=\"string\")throw new TypeError(`tensor data at index ${T} is not a string`);m.HEAPU32[R++]=Ke(P[T],e)}}else O=P.byteLength,_=m._malloc(O),e.push(_),m.HEAPU8.set(new Uint8Array(P.buffer,P.byteOffset,O),_)}let j=m.stackSave(),B=m.stackAlloc(4*u.length);try{let P=B/4;u.forEach(T=>m.HEAP32[P++]=T);let R=m._OrtCreateTensor(yi(h),_,O,B,u.length,bi(w));R===0&&We(`Can't create tensor for input/output. session=${d}, index=${l}.`),r.push(R)}finally{m.stackRestore(j)}},mc=async(t,r,e,d,l,m)=>{let h=Ue(),u=cn.get(t);if(!u)throw new Error(`cannot run inference. invalid session id: ${t}`);let[w,_,O,j]=u,B=r.length,P=d.length,R=0,T=[],k=[],U=[],K=[],Q=h.stackSave(),L=h.stackAlloc(B*4),X=h.stackAlloc(B*4),A=h.stackAlloc(P*4),Z=h.stackAlloc(P*4);try{[R,T]=Ga(m);for(let ue=0;ue<B;ue++)cc(e[ue],k,K,t,r[ue]);for(let ue=0;ue<P;ue++)cc(l[ue],U,K,t,B+d[ue]);let re=L/4,ie=X/4,Ce=A/4,H=Z/4;for(let ue=0;ue<B;ue++)h.HEAPU32[re++]=k[ue],h.HEAPU32[ie++]=_[r[ue]];for(let ue=0;ue<P;ue++)h.HEAPU32[Ce++]=U[ue],h.HEAPU32[H++]=O[d[ue]];if(j){let{handle:ue,outputPreferredLocations:ae,outputPreferredLocationsEncoded:Ze}=j;if(_.length!==B)throw new Error(`input count from feeds (${B}) is expected to be always equal to model's input count (${_.length}).`);for(let Ie=0;Ie<B;Ie++){let He=r[Ie];await h._OrtBindInput(ue,_[He],k[Ie])!==0&&We(`Can't bind input[${Ie}] for session=${t}.`)}for(let Ie=0;Ie<P;Ie++){let He=d[Ie];l[Ie]?.[3]?h._OrtBindOutput(ue,O[He],U[Ie],0)!==0&&We(`Can't bind pre-allocated output[${Ie}] for session=${t}.`):h._OrtBindOutput(ue,O[He],0,Ze[He])!==0&&We(`Can't bind output[${Ie}] to ${ae[Ie]} for session=${t}.`)}}let le;j?le=await h._OrtRunWithBinding(w,j.handle,P,A,R):le=await h._OrtRun(w,X,L,B,Z,P,A,R),le!==0&&We(\"failed to call OrtRun().\");let Be=[];for(let ue=0;ue<P;ue++){let ae=h.HEAPU32[A/4+ue];if(ae===U[ue]){Be.push(l[ue]);continue}let Ze=h.stackSave(),Ie=h.stackAlloc(4*4),He=!1,Ee,qe=0;try{h._OrtGetTensorData(ae,Ie,Ie+4,Ie+8,Ie+12)!==0&&We(`Can't access output tensor data on index ${ue}.`);let Je=Ie/4,_t=h.HEAPU32[Je++];qe=h.HEAPU32[Je++];let ee=h.HEAPU32[Je++],$e=h.HEAPU32[Je++],Oe=[];for(let Ge=0;Ge<$e;Ge++)Oe.push(h.HEAPU32[ee/4+Ge]);h._OrtFree(ee);let et=Oe.reduce((Ge,Me)=>Ge*Me,1);Ee=tn(_t);let tt=j?.outputPreferredLocations[d[ue]];if(Ee===\"string\"){if(tt===\"gpu-buffer\")throw new Error(\"String tensor is not supported on GPU.\");let Ge=[],Me=qe/4;for(let rt=0;rt<et;rt++){let yt=h.HEAPU32[Me++],ut=rt===et-1?void 0:h.HEAPU32[Me]-yt;Ge.push(h.UTF8ToString(yt,ut))}Be.push([Ee,Oe,Ge,\"cpu\"])}else if(tt===\"gpu-buffer\"&&et>0){let Ge=h.jsepGetBuffer(qe),Me=rn(_t);if(Me===void 0||!Ua(Ee))throw new Error(`Unsupported data type: ${Ee}`);He=!0,Be.push([Ee,Oe,{gpuBuffer:Ge,download:h.jsepCreateDownloader(Ge,et*Me,Ee),dispose:()=>{h._OrtReleaseTensor(ae)}},\"gpu-buffer\"])}else{let Ge=zn(Ee),Me=new Ge(et);new Uint8Array(Me.buffer,Me.byteOffset,Me.byteLength).set(h.HEAPU8.subarray(qe,qe+Me.byteLength)),Be.push([Ee,Oe,Me,\"cpu\"])}}finally{h.stackRestore(Ze),Ee===\"string\"&&qe&&h._free(qe),He||h._OrtReleaseTensor(ae)}}return j&&h._OrtClearBoundOutputs(j.handle),Be}finally{h.stackRestore(Q),k.forEach(re=>h._OrtReleaseTensor(re)),U.forEach(re=>h._OrtReleaseTensor(re)),K.forEach(re=>h._free(re)),R!==0&&h._OrtReleaseRunOptions(R),T.forEach(re=>h._free(re))}},hc=t=>{let r=Ue(),e=cn.get(t);if(!e)throw new Error(\"invalid session id\");let d=e[0],l=r._OrtEndProfiling(d);l===0&&We(\"Can't get an profile file name.\"),r._OrtFree(l)},gc=t=>{let r=[];for(let e of t){let d=e[2];!Array.isArray(d)&&\"buffer\"in d&&r.push(d.buffer)}return r};self.onmessage=t=>{switch(t.data.type){case\"init-wasm\":try{za(t.data.in).then(()=>postMessage({type:\"init-wasm\"}),r=>postMessage({type:\"init-wasm\",err:r}))}catch(r){postMessage({type:\"init-wasm\",err:r})}break;case\"init-ort\":try{dc(t.data.in).then(()=>postMessage({type:\"init-ort\"}),r=>postMessage({type:\"init-ort\",err:r}))}catch(r){postMessage({type:\"init-ort\",err:r})}break;case\"create_allocate\":try{let{model:r}=t.data.in,e=Ui(r);postMessage({type:\"create_allocate\",out:e})}catch(r){postMessage({type:\"create_allocate\",err:r})}break;case\"create_finalize\":try{let{modeldata:r,options:e}=t.data.in,d=Ni(r,e);postMessage({type:\"create_finalize\",out:d})}catch(r){postMessage({type:\"create_finalize\",err:r})}break;case\"create\":try{let{model:r,options:e}=t.data.in,d=fc(r,e);postMessage({type:\"create\",out:d})}catch(r){postMessage({type:\"create\",err:r})}break;case\"release\":try{let r=t.data.in;pc(r),postMessage({type:\"release\"})}catch(r){postMessage({type:\"release\",err:r})}break;case\"run\":try{let{sessionId:r,inputIndices:e,inputs:d,outputIndices:l,options:m}=t.data.in;mc(r,e,d,l,m).then(h=>{postMessage({type:\"run\",out:h},gc(h))},h=>{postMessage({type:\"run\",err:h})})}catch(r){postMessage({type:\"run\",err:r})}break;case\"end-profiling\":try{let r=t.data.in;hc(r),postMessage({type:\"end-profiling\"})}catch(r){postMessage({type:\"end-profiling\",err:r})}break;default:}};})();\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env, env, InferenceSession} from 'onnxruntime-common';\n\nimport {OrtWasmMessage, SerializableModeldata, SerializableSessionMetadata, SerializableTensorMetadata, TensorMetadata} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\n// resolve; reject\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\n\nlet initWasmCallbacks: PromiseCallbacks;\nlet initOrtCallbacks: PromiseCallbacks;\nconst createSessionAllocateCallbacks: Array<PromiseCallbacks<SerializableModeldata>> = [];\nconst createSessionFinalizeCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensorMetadata[]>> = [];\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ort':\n      if (ev.data.err) {\n        initOrtCallbacks[1](ev.data.err);\n      } else {\n        initOrtCallbacks[0]();\n      }\n      break;\n    case 'create_allocate':\n      if (ev.data.err) {\n        createSessionAllocateCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionAllocateCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create_finalize':\n      if (ev.data.err) {\n        createSessionFinalizeCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionFinalizeCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create':\n      if (ev.data.err) {\n        createSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'release':\n      if (ev.data.err) {\n        releaseSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        releaseSessionCallbacks.shift()![0]();\n      }\n      break;\n    case 'run':\n      if (ev.data.err) {\n        runCallbacks.shift()![1](ev.data.err);\n      } else {\n        runCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'end-profiling':\n      if (ev.data.err) {\n        endProfilingCallbacks.shift()![1](ev.data.err);\n      } else {\n        endProfilingCallbacks.shift()![0]();\n      }\n      break;\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initializeWebAssemblyInstance = async(): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    if (initialized) {\n      return;\n    }\n    if (initializing) {\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\n    }\n    if (aborted) {\n      throw new Error('previous call to \\'initWasm()\\' failed.');\n    }\n\n    initializing = true;\n\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, +(scriptSrc).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n\n      const workerUrl = URL.createObjectURL(new Blob(\n          [\n            // This require() function is handled by esbuild plugin to load file content as string.\n            // eslint-disable-next-line @typescript-eslint/no-require-imports\n            require('./proxy-worker/main')\n          ],\n          {type: 'text/javascript'}));\n      proxyWorker = new Worker(workerUrl, {name: 'ort-wasm-proxy-worker'});\n      proxyWorker.onerror = (ev: ErrorEvent) => reject(ev);\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      URL.revokeObjectURL(workerUrl);\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    return initializeWebAssembly(env.wasm);\n  }\n};\n\nexport const initializeRuntime = async(env: Env): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      initOrtCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-ort', in : env};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    await core.initRuntime(env);\n  }\n};\n\nexport const createSessionAllocate = async(model: Uint8Array): Promise<SerializableModeldata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableModeldata>((resolve, reject) => {\n      createSessionAllocateCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create_allocate', in : {model}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSessionAllocate(model);\n  }\n};\n\nexport const createSessionFinalize = async(modeldata: SerializableModeldata, options?: InferenceSession.SessionOptions):\n    Promise<SerializableSessionMetadata> => {\n      if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n        ensureWorker();\n        return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n          createSessionFinalizeCallbacks.push([resolve, reject]);\n          const message: OrtWasmMessage = {type: 'create_finalize', in : {modeldata, options}};\n          proxyWorker!.postMessage(message);\n        });\n      } else {\n        return core.createSessionFinalize(modeldata, options);\n      }\n    };\n\nexport const createSession =\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    // check unsupported options\n    if (options?.preferredOutputLocation) {\n      throw new Error('session option \"preferredOutputLocation\" is not supported for proxy.');\n    }\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      createSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      releaseSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: TensorMetadata[], outputIndices: number[],\n    outputs: Array<TensorMetadata|null>, options: InferenceSession.RunOptions): Promise<TensorMetadata[]> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    // check inputs location\n    if (inputs.some(t => t[3] !== 'cpu')) {\n      throw new Error('input tensor on GPU is not supported for proxy.');\n    }\n    // check outputs location\n    if (outputs.some(t => t)) {\n      throw new Error('pre-allocated output tensor is not supported for proxy.');\n    }\n    ensureWorker();\n    return new Promise<SerializableTensorMetadata[]>((resolve, reject) => {\n      runCallbacks.push([resolve, reject]);\n      const serializableInputs = inputs as SerializableTensorMetadata[];  // every input is on CPU.\n      const message: OrtWasmMessage =\n          {type: 'run', in : {sessionId, inputIndices, inputs: serializableInputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(serializableInputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, outputs, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      endProfilingCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'node:fs/promises';\nimport {env, InferenceSession, InferenceSessionHandler, SessionHandler, Tensor} from 'onnxruntime-common';\n\nimport {SerializableModeldata, TensorMetadata} from './proxy-messages';\nimport {createSession, createSessionAllocate, createSessionFinalize, endProfiling, initializeRuntime, releaseSession, run} from './proxy-wrapper';\nimport {isGpuBufferSupportedType} from './wasm-common';\n\nlet runtimeInitialized: boolean;\nlet runtimeInitializationPromise: Promise<void>|undefined;\n\nconst encodeTensorMetadata = (tensor: Tensor, getName: () => string): TensorMetadata => {\n  switch (tensor.location) {\n    case 'cpu':\n      return [tensor.type, tensor.dims, tensor.data, 'cpu'];\n    case 'gpu-buffer':\n      return [tensor.type, tensor.dims, {gpuBuffer: tensor.gpuBuffer}, 'gpu-buffer'];\n    default:\n      throw new Error(`invalid data location: ${tensor.location} for ${getName()}`);\n  }\n};\n\nconst decodeTensorMetadata = (tensor: TensorMetadata): Tensor => {\n  switch (tensor[3]) {\n    case 'cpu':\n      return new Tensor(tensor[0], tensor[2], tensor[1]);\n    case 'gpu-buffer': {\n      const dataType = tensor[0];\n      if (!isGpuBufferSupportedType(dataType)) {\n        throw new Error(`not supported data type: ${dataType} for deserializing GPU tensor`);\n      }\n      const {gpuBuffer, download, dispose} = tensor[2];\n      return Tensor.fromGpuBuffer(gpuBuffer, {dataType, dims: tensor[1], download, dispose});\n    }\n    default:\n      throw new Error(`invalid data location: ${tensor[3]}`);\n  }\n};\n\nexport class OnnxruntimeWebAssemblySessionHandler implements InferenceSessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async createSessionAllocate(path: string): Promise<SerializableModeldata> {\n    // fetch model from url and move to wasm heap. The arraybufffer that held the http\n    // response is freed once we return\n    const response = await fetch(path);\n    if (response.status !== 200) {\n      throw new Error(`failed to load model: ${path}`);\n    }\n    const arrayBuffer = await response.arrayBuffer();\n    return createSessionAllocate(new Uint8Array(arrayBuffer));\n  }\n\n  async loadModel(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    if (!runtimeInitialized) {\n      if (!runtimeInitializationPromise) {\n        runtimeInitializationPromise = initializeRuntime(env);\n      }\n      await runtimeInitializationPromise;\n      runtimeInitializationPromise = undefined;\n      runtimeInitialized = true;\n    }\n\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof process !== 'undefined' && process.versions && process.versions.node) {\n        // node\n        const model = await readFile(pathOrBuffer);\n        [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n      } else {\n        // browser\n        // fetch model and move to wasm heap.\n        const modelData: SerializableModeldata = await this.createSessionAllocate(pathOrBuffer);\n        // create the session\n        [this.sessionId, this.inputNames, this.outputNames] = await createSessionFinalize(modelData, options);\n      }\n    } else {\n      [this.sessionId, this.inputNames, this.outputNames] = await createSession(pathOrBuffer, options);\n    }\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputArray: Array<Tensor|null> = [];\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputArray.push(tensor);\n      outputIndices.push(index);\n    });\n\n    const inputs =\n        inputArray.map((t, i) => encodeTensorMetadata(t, () => `input \"${this.inputNames[inputIndices[i]]}\"`));\n    const outputs = outputArray.map(\n        (t, i) => t ? encodeTensorMetadata(t, () => `output \"${this.outputNames[outputIndices[i]]}\"`) : null);\n\n    const results = await run(this.sessionId, inputIndices, inputs, outputIndices, outputs, options);\n\n    const resultMap: SessionHandler.ReturnType = {};\n    for (let i = 0; i < results.length; i++) {\n      resultMap[this.outputNames[outputIndices[i]]] = outputArray[i] ?? decodeTensorMetadata(results[i]);\n    }\n    return resultMap;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {cpus} from 'node:os';\nimport {Backend, env, InferenceSession, InferenceSessionHandler} from 'onnxruntime-common';\n\nimport {initializeWebAssemblyInstance} from './wasm/proxy-wrapper';\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nexport class OnnxruntimeWebAssemblyBackend implements Backend {\n  async init(): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initializeWebAssemblyInstance();\n  }\n  createInferenceSessionHandler(path: string, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSessionHandler>;\n  createInferenceSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSessionHandler>;\n  async createInferenceSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSessionHandler> {\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(pathOrBuffer, options);\n    return Promise.resolve(handler);\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OnnxruntimeWebAssemblyBackend} from './backend-wasm';\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports */\n// We use \"require\" instead of \"import\" here because import statement must be put in top level. Our current code does\n// not allow bundler to tree-shaking code as expected because some codes are treated as having side effects.\n// So we import code inside the if-clause to allow bundler remove the code safely.\n\nexport * from 'onnxruntime-common';\nimport {registerBackend, env} from 'onnxruntime-common';\nimport {version} from './version';\n\nif (!BUILD_DEFS.DISABLE_WEBGL) {\n  const onnxjsBackend = require('./backend-onnxjs').onnxjsBackend;\n  registerBackend('webgl', onnxjsBackend, -10);\n}\n\nif (!BUILD_DEFS.DISABLE_WASM) {\n  const wasmBackend = BUILD_DEFS.DISABLE_TRAINING ? require('./backend-wasm-inference').wasmBackend :\n                                                    require('./backend-wasm-training').wasmBackend;\n  if (!BUILD_DEFS.DISABLE_WEBGPU && typeof navigator !== 'undefined' && navigator.gpu) {\n    registerBackend('webgpu', wasmBackend, 5);\n  }\n  registerBackend('cpu', wasmBackend, 10);\n  registerBackend('wasm', wasmBackend, 10);\n  if (BUILD_DEFS.DISABLE_TRAINING) {\n    registerBackend('xnnpack', wasmBackend, 9);\n    registerBackend('webnn', wasmBackend, 9);\n  }\n}\n\nObject.defineProperty(env.versions, 'web', {value: version, enumerable: true});\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// This file is generated by /js/scripts/update-version.ts\n// Do not modify file content manually.\n\nexport const version = '1.17.0';\n"],
  "mappings": "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",
  "names": ["backends", "backendsSortedByPriority", "registerBackend", "resolveBackend", "init_backend_impl", "__esmMin", "name", "backend", "priority", "currentBackend", "i", "backendHints", "backendNames", "errors", "backendName", "backendInfo", "isInitializing", "e", "init_backend", "__esmMin", "init_backend_impl", "version", "init_version", "__esmMin", "logLevelValue", "env", "init_env_impl", "__esmMin", "init_version", "version", "value", "env", "init_env", "__esmMin", "init_env_impl", "tensorToDataURL", "tensorToImageData", "init_tensor_conversion_impl", "__esmMin", "tensor", "options", "canvas", "pixels2DContext", "width", "height", "inputformat", "norm", "normMean", "normBias", "stride", "rTensorPointer", "gTensorPointer", "bTensorPointer", "aTensorPointer", "i", "j", "R", "G", "B", "A", "image", "channels", "step", "rImagePointer", "gImagePointer", "bImagePointer", "aImagePointer", "bufferToTensor", "tensorFromImage", "tensorFromTexture", "tensorFromGpuBuffer", "tensorFromPinnedBuffer", "init_tensor_factory_impl", "__esmMin", "init_tensor_impl", "buffer", "options", "height", "width", "norm", "normMean", "normBias", "inputformat", "outputformat", "stride", "float32Data", "step", "rImagePointer", "gImagePointer", "bImagePointer", "aImagePointer", "rTensorPointer", "gTensorPointer", "bTensorPointer", "aTensorPointer", "i", "Tensor", "image", "isHTMLImageEle", "isImageDataEle", "isImageBitmap", "isString", "data", "bufferToTensorOptions", "canvas", "pixels2DContext", "tempCanvas", "resolve", "reject", "context", "newImage", "img", "texture", "download", "dispose", "dims", "gpuBuffer", "dataType", "type", "NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP", "NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP", "isBigIntChecked", "checkBigInt", "init_tensor_impl_type_mapping", "__esmMin", "isBigInt64ArrayAvailable", "isBigUint64ArrayAvailable", "calculateSize", "tensorReshape", "init_tensor_utils_impl", "__esmMin", "init_tensor_impl", "dims", "size", "i", "dim", "tensor", "Tensor", "Tensor", "init_tensor_impl", "__esmMin", "init_tensor_conversion_impl", "init_tensor_factory_impl", "init_tensor_impl_type_mapping", "init_tensor_utils_impl", "arg0", "arg1", "arg2", "checkBigInt", "type", "dims", "expectedTypedArrayConstructor", "NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP", "data", "maybeDims", "typedArrayConstructor", "firstElementType", "mappedType", "NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP", "size", "calculateSize", "image", "options", "tensorFromImage", "texture", "tensorFromTexture", "gpuBuffer", "tensorFromGpuBuffer", "buffer", "tensorFromPinnedBuffer", "tensorToDataURL", "tensorToImageData", "releaseData", "tensorReshape", "Tensor", "init_tensor", "__esmMin", "init_tensor_impl", "InferenceSession", "init_inference_session_impl", "__esmMin", "init_backend_impl", "init_tensor", "_InferenceSession", "handler", "feeds", "arg1", "arg2", "fetches", "options", "Tensor", "isFetchesEmpty", "name", "isFetches", "arg1Keys", "v", "results", "returnValue", "key", "result", "arg0", "arg3", "filePathOrUint8Array", "buffer", "byteOffset", "byteLength", "backendHints", "i", "resolveBackend", "InferenceSession", "init_inference_session", "__esmMin", "init_inference_session_impl", "init_onnx_value", "__esmMin", "TrainingSession", "init_training_session_impl", "__esmMin", "handler", "_trainingOptions", "_sessionOptions", "_array", "_trainableOnly", "_feeds", "_fetches", "_options", "TrainingSession", "init_training_session", "__esmMin", "init_training_session_impl", "init_esm", "__esmMin", "init_backend", "init_env", "init_inference_session", "init_tensor", "init_onnx_value", "init_training_session", "fs_exports", "__export", "readFile", "init_fs", "__esmMin", "path_exports", "__export", "join", "init_path", "__esmMin", "require_ort_wasm_simd_jsep", "__commonJSMin", "exports", "module", "ortWasm", "_scriptDir", "moduleArg", "h", "aa", "ba", "a", "b", "c", "d", "e", "g", "k", "l", "m", "n", "q", "r", "u", "p", "t", "ca", "da", "ea", "fa", "ha", "ia", "ja", "w", "ka", "la", "ma", "fs", "na", "oa", "pa", "qa", "noExitRuntime", "x", "ra", "y", "B", "sa", "K", "M", "P", "Q", "ta", "ua", "va", "wa", "xa", "ya", "R", "za", "Aa", "Ba", "Ca", "Da", "Ea", "Fa", "Ga", "Ha", "Ia", "Ja", "v", "S", "Ka", "La", "Ma", "Na", "T", "Oa", "Pa", "Sa", "Qa", "Ra", "Ta", "Ua", "Va", "Wa", "Xa", "Ya", "Za", "ab", "$a", "bb", "cb", "db", "fb", "eb", "gb", "hb", "ib", "jb", "kb", "A", "z", "lb", "mb", "nb", "U", "ob", "pb", "qb", "rb", "sb", "tb", "ub", "vb", "wb", "xb", "yb", "zb", "Ab", "Bb", "Je", "Cb", "V", "Db", "Eb", "Fb", "Gb", "Hb", "Ib", "Jb", "Kb", "Lb", "Mb", "Nb", "Ob", "Pb", "Qb", "Rb", "Sb", "Tb", "Ub", "Vb", "Wb", "Xb", "Yb", "Zb", "$b", "ac", "bc", "cc", "dc", "ec", "fc", "gc", "hc", "ic", "jc", "kc", "lc", "mc", "nc", "oc", "pc", "qc", "rc", "sc", "tc", "uc", "vc", "wc", "xc", "yc", "zc", "Ac", "Bc", "Cc", "Dc", "Ec", "Fc", "Gc", "Hc", "Ic", "Jc", "Kc", "Lc", "Mc", "Nc", "Oc", "Pc", "Qc", "Rc", "Sc", "Tc", "Uc", "Vc", "Wc", "Xc", "Yc", "Zc", "$c", "ad", "bd", "cd", "dd", "ed", "fd", "gd", "hd", "jd", "kd", "ld", "md", "nd", "od", "pd", "qd", "rd", "sd", "td", "ud", "vd", "wd", "xd", "yd", "zd", "Ad", "Bd", "Cd", "Dd", "Ed", "Fd", "Gd", "Hd", "Id", "Jd", "Kd", "Ld", "Md", "Nd", "Od", "Pd", "Qd", "Rd", "Sd", "Td", "Ud", "Vd", "Wd", "Xd", "Yd", "Zd", "$d", "ae", "be", "ce", "de", "ee", "fe", "ge", "he", "ie", "je", "ke", "le", "me", "ne", "oe", "pe", "qe", "re", "se", "te", "ue", "ve", "we", "xe", "ye", "ze", "Ae", "Be", "Ce", "De", "Ee", "Fe", "Ge", "He", "Ie", "Ke", "W", "X", "Le", "dynCall_vi", "dynCall_vii", "Me", "dynCall_iii", "Ne", "Oe", "dynCall_v", "Pe", "Qe", "Re", "Se", "Te", "Ue", "Ve", "We", "Xe", "Ye", "Ze", "$e", "af", "bf", "cf", "df", "ef", "ff", "gf", "hf", "jf", "kf", "lf", "mf", "nf", "of", "pf", "qf", "rf", "sf", "tf", "uf", "vf", "wf", "xf", "yf", "zf", "Af", "Bf", "Cf", "Df", "Ef", "Ff", "Gf", "Hf", "If", "C", "D", "E", "F", "G", "H", "I", "J", "L", "N", "O", "Jf", "Kf", "Lf", "Mf", "Nf", "Of", "Pf", "Qf", "Rf", "Sf", "Tf", "Uf", "Vf", "Wf", "Xf", "Yf", "Zf", "$f", "ag", "bg", "cg", "dg", "eg", "fg", "gg", "hg", "ig", "jg", "kg", "lg", "mg", "ng", "og", "pg", "qg", "rg", "sg", "tg", "ug", "vg", "wg", "xg", "yg", "zg", "Ag", "Bg", "Cg", "Dg", "Eg", "Fg", "Gg", "Hg", "Ig", "Jg", "Kg", "Lg", "Mg", "Ng", "Og", "Pg", "Qg", "Rg", "Sg", "Tg", "Ug", "Vg", "Wg", "Xg", "Yg", "Zg", "$g", "ah", "bh", "ch", "dh", "eh", "fh", "gh", "hh", "ih", "jh", "kh", "lh", "mh", "nh", "oh", "ph", "qh", "rh", "sh", "th", "uh", "vh", "wh", "xh", "yh", "zh", "Ah", "Bh", "Ch", "Dh", "Eh", "Fh", "Gh", "Hh", "Ih", "Jh", "Kh", "Lh", "Mh", "Y", "Z", "Nh", "Oh", "Ph", "require_worker_threads", "__commonJSMin", "require_perf_hooks", "__commonJSMin", "os_exports", "__export", "cpus", "init_os", "__esmMin", "require_ort_wasm_simd_threaded_jsep", "__commonJSMin", "exports", "module", "ortWasmThreaded", "_scriptDir", "moduleArg", "d", "l", "p", "t", "v", "aa", "z", "ba", "A", "ca", "da", "ea", "B", "fa", "C", "a", "c", "e", "f", "h", "k", "q", "n", "m", "r", "w", "x", "D", "g", "u", "ha", "ia", "ja", "E", "ka", "F", "G", "H", "I", "la", "ma", "J", "na", "fs", "oa", "pa", "qa", "ra", "K", "L", "noExitRuntime", "M", "N", "sa", "P", "Q", "ta", "ua", "va", "wa", "xa", "ya", "R", "za", "S", "Aa", "Ba", "Ca", "T", "Da", "Ea", "Fa", "Ga", "U", "Ha", "y", "V", "Ia", "Ja", "Ka", "W", "La", "Ma", "Na", "Oa", "X", "Qa", "Pa", "Ra", "Sa", "Ta", "Ua", "Va", "Wa", "Xa", "Ya", "Za", "$a", "ab", "bb", "cb", "db", "eb", "fb", "gb", "hb", "ib", "jb", "kb", "lb", "mb", "nb", "ob", "pb", "qb", "rb", "sb", "tb", "ub", "vb", "Y", "wb", "xb", "yb", "zb", "Bb", "Ab", "Cb", "Db", "Fb", "Eb", "Gb", "Hb", "Ib", "Jb", "Lb", "Kb", "Mb", "Nb", "Ob", "Pb", "Qb", "Rb", "Tb", "Ub", "Vb", "Wb", "Xb", "Yb", "Sb", "O", "Zb", "$b", "ac", "Z", "bc", "cc", "dc", "ec", "fc", "gc", "hc", "ic", "jc", "kc", "lc", "mc", "nc", "oc", "pc", "qc", "tc", "rc", "sc", "uc", "vc", "wc", "xc", "require_ort_wasm_threaded_worker", "__commonJSMin", "exports", "module", "ortWasmFactory", "ortWasmFactoryThreaded", "wasm", "initialized", "initializing", "aborted", "isMultiThreadSupported", "isSimdSupported", "getWasmFileName", "initializeWebAssembly", "getInstance", "init_wasm_factory", "__esmMin", "useSimd", "useThreads", "flags", "timeout", "numThreads", "simd", "wasmPaths", "wasmPrefixOverride", "wasmFileName", "wasmPathOverride", "isTimeout", "tasks", "resolve", "reject", "factory", "config", "fileName", "scriptDirectory", "prefix", "scriptSourceCode", "module", "what", "allocWasmString", "iterateExtraOptions", "checkLastError", "init_wasm_utils", "__esmMin", "init_wasm_factory", "data", "allocs", "wasm", "getInstance", "dataLength", "dataOffset", "options", "prefix", "seen", "handler", "key", "value", "name", "message", "stack", "paramsOffset", "errorCode", "errorMessagePointer", "errorMessage", "setRunOptions", "init_run_options", "__esmMin", "init_wasm_factory", "init_wasm_utils", "options", "wasm", "getInstance", "runOptionsHandle", "allocs", "runOptions", "tagDataOffset", "allocWasmString", "checkLastError", "iterateExtraOptions", "key", "value", "keyDataOffset", "valueDataOffset", "e", "alloc", "getGraphOptimzationLevel", "getExecutionMode", "appendDefaultOptions", "setExecutionProviders", "setSessionOptions", "init_session_options", "__esmMin", "init_wasm_factory", "init_wasm_utils", "graphOptimizationLevel", "executionMode", "options", "session", "ep", "sessionOptionsHandle", "executionProviders", "allocs", "epName", "webnnOptions", "keyDataOffset", "allocWasmString", "valueDataOffset", "getInstance", "checkLastError", "webgpuOptions", "epNameDataOffset", "wasm", "sessionOptions", "logIdDataOffset", "logSeverityLevel", "logVerbosityLevel", "optimizedModelFilePathOffset", "name", "value", "nameOffset", "iterateExtraOptions", "key", "e", "alloc", "tensorDataTypeStringToEnum", "tensorDataTypeEnumToString", "getTensorElementSize", "tensorTypeToTypedArrayConstructor", "logLevelStringToEnum", "isGpuBufferSupportedType", "dataLocationStringToEnum", "init_wasm_common", "__esmMin", "type", "typeProto", "dateType", "logLevel", "location", "logLevelPrefix", "doLog", "configLogLevel", "debug", "configureLogger", "LOG", "LOG_DEBUG", "init_log", "__esmMin", "init_wasm_common", "level", "message", "$configLogLevel", "$debug", "logLevel", "msg", "messageLevel", "logLevelStringToEnum", "configLevel", "args", "createView", "init_tensor_view", "__esmMin", "init_wasm_common", "dataBuffer", "type", "tensorTypeToTypedArrayConstructor", "init_types", "__esmMin", "calcNormalizedBufferSize", "guid", "createNewGpuDataId", "downloadGpuData", "GpuDataManagerImpl", "createGpuDataManager", "init_gpu_data_manager", "__esmMin", "init_log", "init_types", "size", "backend", "gpuBuffer", "originalSize", "getTargetBuffer", "bufferSize", "gpuReadBuffer", "commandEncoder", "arrayBuffer", "targetBuffer", "id", "data", "srcArrayBuffer", "srcOffset", "srcLength", "gpuDataCache", "gpuBufferForUploading", "LOG_DEBUG", "sourceId", "destinationId", "sourceGpuDataCache", "destinationGpuDataCache", "buffer", "previousBuffer", "usage", "isStorage", "isUniform", "freeBuffers", "buffers", "gpuData", "cachedData", "storage", "args", "AttributeWithCacheKeyImpl", "createAttributeWithCacheKey", "init_attribute_with_cache_key", "__esmMin", "attribute", "name", "MatMulUtil", "BroadcastUtil", "ShapeUtil", "PoolConvUtil", "GemmUtil", "MIN_CLIP", "MAX_CLIP", "init_util", "__esmMin", "a", "b", "adims", "bdims", "isMatMul", "arank", "brank", "crank", "cdims", "cShapeMatMul", "i", "aLen", "bLen", "shape", "finalShape", "inputRank", "finalRank", "_ShapeUtil", "dims", "axis", "start", "end", "size", "rank", "strides", "tensorRank", "axes", "x", "perm", "v", "pad", "shape1", "shape2", "_PoolConvUtil", "isGlobalOperator", "inputDims", "kernelShape", "dilations", "pads", "dim", "isChannelLast", "autoPad", "outputDims", "filterDims", "inSize", "stride", "dilation", "kernel", "padHeadIndex", "padTailIndex", "dkernel", "padNeeded", "leftShape", "transLeft", "rightShape", "transRight", "biasShape", "M", "K", "N", "kDim", "WORKGROUP_SIZE", "getWgslMappedType", "tensorTypeToWsglStorageType", "createTensorShapeVariables", "getMaxComponents", "fillVector", "castToF32", "sumVector", "createIndicesHelper", "inputVariable", "outputVariable", "ShaderHelperImpl", "createShaderHelper", "getBroadcastDims", "init_common", "__esmMin", "init_wasm_common", "init_util", "type", "components", "mappedType", "dims", "ShapeUtil", "size", "dataType", "value", "name", "tensorType", "shapeOrRank", "isInput", "useUniform", "rank", "rankIdentity", "indicesType", "valueType", "storageType", "normalizeDim", "dim", "implementationUsed", "uniformPrefix", "shape", "strides", "o2iSnippet", "i", "offsetToIndicesImplementation", "offsetToIndices", "varOffset", "offsets", "indicesToOffsetImplementation", "indicesToOffset", "varIndices", "indices", "init", "indicesGet", "idx", "indicesSet", "broadcastedIndicesToOffsetImplementation", "broadcastedIndicesToOffset", "output", "implKey", "setByOffset", "offset", "getByOffset", "getByIndicesImplementation", "getImplementation", "functionParams", "dimsParams", "get", "normalizedIndices", "getByIndices", "setByIndicesImplementation", "setImplementation", "impls", "impl", "indicesAndValue", "normalizedDispatchGroup", "workgroupSize", "workgroupSizeX", "workgroupSizeY", "workgroupSizeZ", "is1DimensionDispatch", "paramList", "globalIdxDefinition", "variable", "bindingIndex", "access", "variables", "v", "uniformSnippets", "dispatchGroup", "inShape", "outShape", "inRank", "a", "validateInputs", "noOp", "createReduceProgramInfo", "createReduceAttributesFromInputs", "runReduceProgram", "reduceLogSum", "reduceL1", "reduceL2", "reduceLogSumExp", "reduceMax", "reduceMean", "reduceMin", "reduceProd", "reduceSum", "reduceSumSquare", "parseReduceAttributes", "init_reduce", "__esmMin", "init_util", "init_attribute_with_cache_key", "init_common", "inputs", "input", "name", "shaderCache", "reduceOp", "axesInput", "outputDataType", "keepDims", "noopWithEmptyAxes", "outputShape", "inputShape", "axes", "ShapeUtil", "reduceOnAllAxes", "d", "i", "idxCopy", "inputVariable", "output", "outputVariable", "ops", "inputOffsetAssignment", "initinputOffsetLet", "initinputOffsetVar", "initinputOffset", "reduceOps", "k", "l", "outputSize", "shaderHelper", "attributes", "v", "createAttributeWithCacheKey", "context", "updatedAttributes", "_output", "idxZero", "size", "validateInputs", "createArgMinMaxAttributesFromInputs", "argMin", "argMax", "parseArgMinMaxAttributes", "init_argminmax", "__esmMin", "init_wasm_common", "init_attribute_with_cache_key", "init_reduce", "inputs", "attributes", "createAttributeWithCacheKey", "context", "argMinMaxOp", "input", "output", "axes", "idxZero", "k", "updatedAttributes", "createReduceProgramInfo", "validateInputs", "createBiasAddProgramInfo", "biasAdd", "init_bias_add", "__esmMin", "init_util", "init_common", "inputs", "outputShape", "channels", "outputSize", "ShapeUtil", "dataType", "input", "inputVariable", "bias", "residual", "output", "outputVariable", "shaderHelper", "context", "createElementwiseProgramShader", "createElementwiseProgramInfo", "abs", "acos", "acosh", "asin", "asinh", "atan", "atanh", "parseCastAttributes", "cast", "clipV10", "generateClipAttributesFromInputs", "clip", "ceil", "cos", "cosh", "parseAlphaAttributes", "elu", "erfImpl", "erf", "exp", "floor", "gelu", "leakyRelu", "not", "neg", "reciprocal", "relu", "sigmoid", "sin", "sinh", "sqrt", "tan", "tanh", "thresholdedRelu", "log", "init_unary_op", "__esmMin", "init_wasm_common", "init_util", "init_attribute_with_cache_key", "init_common", "shaderHelper", "datasize", "inputDataType", "outputDataType", "funcCall", "additionalImplementation", "vecSize", "expression", "input", "inputVariable", "output", "outputVariable", "name", "cacheKey", "ShapeUtil", "inputTensors", "context", "attributes", "createAttributeWithCacheKey", "func", "dataType", "tensorTypeToWsglStorageType", "a", "inputs", "min", "MIN_CLIP", "max", "MAX_CLIP", "varType", "validateInputs", "createBiasSplitGeluProgramInfo", "biasSplitGelu", "init_bias_split_gelu", "__esmMin", "init_util", "init_common", "init_unary_op", "inputs", "outputShape", "input", "inputVariable", "bias", "output", "outputVariable", "outputSize", "ShapeUtil", "shaderHelper", "erfImpl", "context", "createBinaryOpProgramShader", "createBinaryOpProgramInfo", "runBinaryOp", "add", "div", "equal", "mul", "pow", "sub", "greater", "less", "greaterOrEqual", "lessOrEqual", "init_binary_op", "__esmMin", "init_wasm_common", "init_util", "init_common", "shaderHelper", "dimsA", "dimsB", "dimsOutput", "vectorize", "doBroadcast", "funcCall", "typeA", "typeB", "typeOutput", "additionalImplementation", "outputSize", "ShapeUtil", "vecSize", "expressionScalar", "expressionVector", "a", "b", "broadcastImpl", "output", "outputVariable", "inputVariable", "calcOffsetImpl", "dims", "strides", "offsets", "i", "idx", "assignment", "isAOneElement", "isBOneElement", "singleAssignment", "resStr", "x", "typeCast", "expressionA", "expressionB", "name", "cacheKey", "outputDataType", "isBroadcast", "outputShape", "calculatedShape", "BroadcastUtil", "sharedDimension", "dimA", "dimB", "context", "type", "validateInputs", "calculateInputIndexImpl", "assignOutputData", "createConcatProgramInfo", "concat", "parseConcatAttributes", "init_concat", "__esmMin", "init_util", "init_attribute_with_cache_key", "init_common", "inputs", "inputType", "inputDimensionality", "input", "numberOfTensors", "output", "codeLines", "i", "returnSnippet", "axis", "inputShape", "adjustedAxis", "outputShape", "dataNShape", "axisIndex", "outputSize", "ShapeUtil", "sizeInConcatAxis", "inputVars", "dataType", "previousSum", "inputVariable", "outputVariable", "indicesAxis", "getShaderSource", "shaderHelper", "context", "attributes", "createAttributeWithCacheKey", "typeSnippet", "activationFnSnippet", "biasActivationSnippet", "init_activation_util", "__esmMin", "component", "dataType", "activation", "_hasPreluActivationWeights", "_packed", "_coordsLength", "hasBias", "utilFunctions", "init_conv_util", "__esmMin", "getActicationSnippet", "parseInternalActivationAttributes", "init_fuse_utils", "__esmMin", "init_util", "attributes", "activation", "clipMin", "clipMax", "MIN_CLIP", "MAX_CLIP", "writeDataToSubAVec4Snippet", "calculateResultSnippet", "makeMatMulPackedVec4Source", "writeDataToSubASnippet", "readDataFromSubASnippet", "makeMatMulPackedSource", "matMulReadWriteFnSource", "createMatmulProgramInfo", "init_matmul_packed_webgpu", "__esmMin", "init_util", "init_common", "init_fuse_utils", "init_activation_util", "transpose", "batchDims", "transposeA", "innerElementSize", "workPerThread", "workgroupSize", "type", "tileInner", "splitK", "splitedDimInner", "tileAOuter", "tileBOuter", "tileAWidth", "tileAHight", "rowPerThreadB", "sequentialAccessByThreads", "rowPerThreadA", "colPerThreadA", "matmulSnippet", "component", "hasBias", "applyActivation", "variables", "batchShapes", "isChannelsLast", "batchAShape", "batchBShape", "batchShape", "batchVariable", "aVariable", "bVariable", "outputVariable", "broadCastADims", "getBroadcastDims", "broadCastBDims", "dataType", "tensorTypeToWsglStorageType", "getAIndices", "aRank", "batchRank", "resStr", "i", "j", "getBIndices", "bRank", "typeSnippet", "inputs", "activationAttributes", "outputShape", "reshapedOutputShape", "aShape", "bShape", "outerDimsA", "outerDimsB", "outerDims", "inputVariable", "batchSize", "ShapeUtil", "dimAOuter", "dimInner", "dimBOuter", "isVec4", "activationFunction", "getActicationSnippet", "elementsPerThread", "dispatch", "components", "A", "B", "output", "inputVariables", "declareFunctions", "biasComponents", "getShaderSource", "shaderHelper", "conv2dCommonSnippet", "createConv2DMatMulProgramInfo", "init_conv2d_mm_webgpu", "__esmMin", "init_log", "init_util", "init_common", "init_activation_util", "init_conv_util", "init_matmul_packed_webgpu", "isChannelsLast", "fitAOuter", "fitBOuter", "fitInner", "addBias", "activation", "hasPreluActivationWeights", "innerElementSizeX", "innerElementSizeW", "innerElementSize", "dataType", "getXSnippet", "getWSnippet", "coordASnippet", "coordResSnippet", "xHeight", "xWidth", "row", "col", "readXSnippet", "typeSnippet", "sampleX", "sampleW", "resType", "aType", "bType", "activationFnSnippet", "biasActivationSnippet", "inputs", "attributes", "outputShape", "dimAOuter", "dimBOuter", "dimInner", "hasBias", "sequentialAccessByThreads", "inChannels", "batchSize", "outWidth", "outHeight", "outChannels", "isVec4", "dispatchX", "dispatchY", "workGroupSize", "elementsPerThread", "dispatch", "LOG_DEBUG", "tileAOuter", "tileBOuter", "tileInner", "elementsSize", "t", "tensorTypeToWsglStorageType", "declareInputs", "declareFunctions", "utilFunctions", "ShapeUtil", "makeMatMulPackedVec4Source", "makeMatMulPackedSource", "createGroupedConvProgramInfo", "init_conv_grouped", "__esmMin", "init_util", "init_common", "init_conv", "init_fuse_utils", "inputs", "attributes", "squeezeOutputShapeFunction", "hasBias", "processBias", "xShape", "wShape", "outputChannelsPerGroup", "activationFunction", "applyActivation", "getActicationSnippet", "isChannelLast", "outputShape", "calculateOutputShape", "outputSize", "ShapeUtil", "output", "outputVariable", "x", "inputVariable", "w", "inputVars", "getShaderSource", "shaderHelper", "validateInputs", "getAdjustedPerm", "getOutputShape", "permFunctionBody", "createTransposeProgramInfo", "transpose", "parseTransposeAttributes", "init_transpose", "__esmMin", "init_util", "init_attribute_with_cache_key", "init_common", "inputs", "inputRank", "perm", "inputShape", "ShapeUtil", "rank", "input", "output", "reverseFunc", "i", "inputDataType", "permAttr", "outputVariable", "inputVariable", "getShaderSource", "shaderHelper", "outputShape", "outputSize", "createTensorShapeVariables", "context", "attributes", "createAttributeWithCacheKey", "calculateOutputShape", "weightTransposeAttribute", "validateInputs", "getAdjustedConvAttributes", "parseConvAttributes", "conv2d", "conv1d", "conv", "init_conv", "__esmMin", "init_util", "init_attribute_with_cache_key", "init_conv2d_mm_webgpu", "init_matmul_packed_webgpu", "init_conv_grouped", "init_fuse_utils", "init_transpose", "inputShape", "kernelShape", "dilations", "adjustPads", "strides", "isChannelLast", "batchSize", "inputSpatialShape", "spatialRank", "outChannels", "dilatedKernelShape", "v", "i", "outputShape", "inputs", "attributes", "dataChannel", "filterInChannel", "pads", "PoolConvUtil", "newAttributes", "activationAttributes", "parseInternalActivationAttributes", "format", "autoPad", "group", "wIsConst", "createAttributeWithCacheKey", "context", "adjustedAttributes", "createGroupedConvProgramInfo", "isChannelsLast", "hasBias", "inputHeight", "inputWidth", "inputChannels", "weightHeight", "weightWidth", "outHeight", "outWidth", "sameSize", "batch", "xReshaped", "wReshaped", "matmulOutputShape", "matmulInputs", "transposedWeight", "createTransposeProgramInfo", "sharedDim", "createMatmulProgramInfo", "sequentialAccessByThreads", "convInputs", "dimAOuter", "dimBOuter", "dimInner", "createConv2DMatMulProgramInfo", "conv2dTransposeCommonSnippet", "createConv2DTransposeMatMulProgramInfo", "init_conv_backprop_mm_webgpu", "__esmMin", "init_log", "init_util", "init_activation_util", "init_conv_util", "init_matmul_packed_webgpu", "isChannelsLast", "addBias", "activation", "hasPreluActivationWeights", "innerElementSize", "type", "typeSnippet", "getWSnippet", "coordASnippet", "coordResSnippet", "xHeight", "xWidth", "row", "col", "readASnippet", "sampleA", "sampleW", "activationFnSnippet", "biasActivationSnippet", "inputs", "attributes", "outputShape", "dimAOuter", "dimBOuter", "dimInner", "hasBias", "sequentialAccessByThreads", "inChannels", "batchSize", "outWidth", "outHeight", "outChannels", "isVec4", "dispatchX", "dispatchY", "workGroupSize", "elementsPerThread", "dispatch", "LOG_DEBUG", "tileInner", "declareInputs", "declareFunctions", "utilFunctions", "ShapeUtil", "makeMatMulPackedVec4Source", "makeMatMulPackedSource", "createConvTranspose2DOpProgramShaderSource", "createConvTranspose2DProgramInfo", "init_conv_backprop_webgpu", "__esmMin", "init_log", "init_util", "init_common", "shaderHelper", "inputs", "attributes", "outputShape", "hasBias", "is1DimensionDispatch", "isVec4", "dataType", "isChannelsLast", "rowDim", "colDim", "channelDim", "outputSize", "ShapeUtil", "workPerThread", "group", "wShape", "inputChannelsPerGroup", "outputChannelsPerGroup", "declareFunctions", "components", "w", "inputVariable", "dy", "inputVariables", "output", "outputVariable", "codeSnippet4", "codeSnippet", "squeezeOutputShapeFunction", "dispatch", "LOG_DEBUG", "tensorTypeToWsglStorageType", "computeTotalPad", "distributePadding", "calculateOutputShapeAndPads", "getAdjustedConvTransposeAttributes", "parseConvTransposeAttributes", "validateInputs", "weightTransposePerm", "convTranspose2d", "convTranspose1d", "convTranspose", "init_conv_transpose", "__esmMin", "init_attribute_with_cache_key", "init_conv_backprop_mm_webgpu", "init_conv_backprop_webgpu", "init_fuse_utils", "init_transpose", "inDim", "stride", "adj", "kernel", "dilation", "outSize", "totalPad", "autoPad", "pads", "head", "tail", "smallPad", "inputShape", "kernelShape", "dilations", "group", "strides", "isChannelLast", "outputPadding", "outputShape", "spatialRank", "updateOutputShape", "i", "batchSize", "outChannels", "j", "inSize", "attributes", "inputs", "a", "b", "isChannelsLast", "newAttributes", "cacheKey", "activationAttributes", "parseInternalActivationAttributes", "format", "wIsConst", "createAttributeWithCacheKey", "dataChannel", "filterInChannel", "featureMaps", "context", "adjustedAttributes", "hasBias", "createConvTranspose2DProgramInfo", "outHeight", "outWidth", "weightHeight", "weightWidth", "inputChannels", "dimAOuter", "dimBOuter", "dimInner", "sequentialAccessByThreads", "transposedWeight", "createTransposeProgramInfo", "convTransposeInputs", "createConv2DTransposeMatMulProgramInfo", "symbolPattern", "termPattern", "termPatternOnly", "lhsPattern", "lhsPatternOnly", "EinsumTerm", "EinsumEquation", "createEinsumProgramInfo", "einsum", "parseEinsumAttributes", "init_einsum", "__esmMin", "init_util", "init_attribute_with_cache_key", "init_common", "inputIndex", "symbol", "index", "value", "inputs", "equation", "lhs", "rhs", "inputTerm", "dims", "einsumTerm", "sym", "info", "dimValue", "term", "isInput", "rank", "ellipsis", "ellipsisDims", "nextDim", "indexSymbols", "i", "ellipsisDimLength", "einsumEquation", "dataType", "inputVars", "inputVariable", "outputShape", "outputSize", "ShapeUtil", "output", "outputVariable", "idxCopy", "rhsSymbols", "initProd", "initSum", "updateSum", "reduceOpsSetIndices", "reduceOpsLoopHeaders", "reduceOpsLoopFooters", "reduceOpCompute", "isReduceOpsWithoutLoop", "outputIndex", "indices", "reduceOps", "inputVar", "getShaderSource", "shaderHelper", "context", "attributes", "createAttributeWithCacheKey", "validateInputs", "getAdjustedShape", "calculateOutputShape", "createExpandProgramInfo", "expand", "init_expand", "__esmMin", "init_util", "init_common", "inputs", "inputShape", "shape", "shapeIndex", "inputShapeIndex", "shape1", "shape2", "diff", "i", "outputShape", "outputSize", "ShapeUtil", "dataType", "input", "inputVariable", "output", "outputVariable", "getShaderSource", "shaderHelper", "context", "validateInputs", "createGatherProgramInfo", "parseGatherAttributes", "gather", "init_gather", "__esmMin", "init_util", "init_attribute_with_cache_key", "init_common", "inputs", "attributes", "inputShape", "indicesShape", "inputRank", "axis", "ShapeUtil", "outputShape", "axisDimLimit", "outputSize", "data", "inputVariable", "indices", "output", "outputVariable", "calcDataIndices", "indicesRank", "calcStr", "i", "j", "getShaderSource", "shaderHelper", "createAttributeWithCacheKey", "context", "validateInputs", "createGatherElementsProgramInfo", "parseGatherElementsAttributes", "gatherElements", "init_gather_elements", "__esmMin", "init_util", "init_attribute_with_cache_key", "init_common", "inputs", "attributes", "inputShape", "inputOutputDataType", "inputRank", "inputStrides", "ShapeUtil", "inputSize", "indicesShape", "indicesDataType", "indicesSize", "axis", "axisDimLimit", "outputShape", "outputSize", "input", "inputVariable", "indices", "output", "outputVariable", "getShaderSource", "shaderHelper", "i", "createAttributeWithCacheKey", "context", "validateInputs", "offsetC", "createGemmProgramInfo", "gemm", "parseGemmAttributes", "init_gemm", "__esmMin", "init_util", "init_attribute_with_cache_key", "init_common", "inputs", "m", "n", "dims", "broadcastM", "broadcastN", "offset", "attributes", "aShape", "bShape", "M", "N", "K", "GemmUtil", "outputShape", "outputSize", "ShapeUtil", "line", "dataType", "tensorTypeToWsglStorageType", "calculateAlpha", "calculateC", "inputStorageBuffersDeclarations", "getShaderSource", "shaderHelper", "context", "createAttributeWithCacheKey", "metadata", "createInstanceNormProgramInfo", "computeMean", "createInstanceNormNHWCProgramInfo", "parseInstanceNormAttributes", "instanceNorm", "init_instance_norm", "__esmMin", "init_wasm_common", "init_util", "init_attribute_with_cache_key", "init_common", "inputs", "attributes", "xShape", "outputShape", "axis", "normCount", "ShapeUtil", "normSize", "C", "x", "inputVariable", "scale", "bias", "output", "outputVariable", "variables", "dataType", "workgroupSize", "getShaderSource", "shaderHelper", "context", "input", "n", "c", "epsilon", "components", "getMaxComponents", "inputHelper", "scaleHelper", "biasHelper", "WG", "outputType", "sumCastType", "setOutputValue", "var1", "var2", "unitsOfWork", "wgSize", "getMeanShaderSource", "fillVector", "meanValues", "N", "H", "outputSize", "outputHelper", "tensorTypeToWsglStorageType", "scaleType", "scaleCastType", "channelScaleShift", "createAttributeWithCacheKey", "validateInputs", "createLayerNormProgramInfo", "parseLayerNormAttributes", "layerNorm", "init_layer_norm", "__esmMin", "init_wasm_common", "init_util", "init_attribute_with_cache_key", "init_common", "inputs", "attributes", "outputCount", "xShape", "scale", "bias", "outputShape", "axis", "ShapeUtil", "normCount", "normSize", "scaleSize", "biasSize", "meanInvStdDevDim", "i", "components", "getMaxComponents", "dataType", "tensorTypeToWsglStorageType", "variables", "inputVariable", "outputVariable", "hasMeanDataOutput", "hasInvStdOutput", "getShaderSource", "shaderHelper", "fillVector", "castToF32", "sumVector", "outputs", "createAttributeWithCacheKey", "context", "validateInputs", "matMul", "init_matmul", "__esmMin", "init_util", "init_matmul_packed_webgpu", "inputs", "context", "outputShape", "BroadcastUtil", "createMatmulProgramInfo", "validateInputs", "getPadConstant", "getPadReflect", "getPadEdge", "getPadWrap", "getPadSnippet", "generatePadCode", "createPadProgramInfo", "createPadAttributesFromInputs", "pad", "parsePadAttributes", "init_pad", "__esmMin", "init_wasm_common", "init_util", "init_attribute_with_cache_key", "init_common", "inputs", "validPads", "output", "outputDims", "inputDims", "inputStrides", "pads", "dataType", "constantValue", "inputRank", "block", "i", "attributes", "shaderHelper", "ShapeUtil", "outputSize", "outputVariable", "input", "inputVariable", "padSnippet", "outputShape", "bigInt64Pads", "value", "updatePads", "axes", "v", "createAttributeWithCacheKey", "context", "updatedAttributes", "mode", "validateInputs", "getAdjustedPoolAttributesAndOutputShape", "generatePoolingCode", "parsePoolCommonAttributes", "createAveragePoolProgramInfo", "parseAveragePoolAttributes", "averagePool", "globalPoolAttributes", "parseGlobalAveragePoolAttributes", "globalAveragePool", "createMaxPoolProgramInfo", "maxPool", "parseMaxPoolAttributes", "parseGlobalMaxPoolAttributes", "globalMaxPool", "init_pool", "__esmMin", "init_util", "init_attribute_with_cache_key", "init_common", "inputs", "input", "attributes", "isGlobalOperator", "isChannelsLast", "inputShapeAsChannelFirst", "hasDilations", "kernelShape", "strides", "dilations", "pads", "PoolConvUtil", "outputShapeAsChannelFirst", "newAttributes", "shaderHelper", "x", "xShape", "outputShape", "op1", "op2", "start", "inputDims", "dataType", "rank", "outputSize", "ShapeUtil", "output", "outputVariable", "kw", "sw", "pwStart", "pwEnd", "dimIdxW", "codeW", "codeH", "codeHEnd", "kh", "sh", "phStart", "phEnd", "dimIdxH", "dimH", "kernelSize", "kernelStrides", "stridesRank", "padsRank", "hasPads", "sum", "cur", "padCode", "i", "name", "adjustedAttributes", "inputVariable", "countIncludePad", "attr", "createAttributeWithCacheKey", "context", "format", "storageOrder", "validateInputsContent", "createRangeProgramInfo", "range", "init_range", "__esmMin", "init_esm", "init_wasm_common", "init_common", "start", "limit", "delta", "sameStartLimit", "increasingRangeNegativeStep", "decreasingRangePositiveStep", "dataType", "numElements", "outputShape", "outputSize", "output", "outputVariable", "wgslType", "getShaderSource", "shaderHelper", "x", "context", "env", "validateScales", "updateScales", "validateInputs", "getOriginalCoordinateFromResizedCoordinate", "getNearestPixelFromOriginal", "updateRoI", "initOutputShape", "adjustOutputShape", "calculateOriginalIndicesFromOutputIndices", "calculateInputIndicesFromOutputIndices", "checkInputIndices", "bilinearInterpolation", "bicubicInterpolation", "createResizeProgramInfo", "getOpsetVersionFromCustomDataBuffer", "resize", "parseResizeAttributes", "init_resize", "__esmMin", "init_util", "init_attribute_with_cache_key", "init_common", "scales", "attributes", "value", "axes", "rank", "newScales", "index", "inputs", "opsetVersion", "sizes", "roi", "roiInputIndex", "scalesInputIndex", "sizesInputIndex", "coordinateTransferMode", "nearestMode", "roiTmp", "roiLocal", "v", "i", "inputShape", "outputShape", "scaleInPolicy", "adjustedOutputShape", "output", "input", "useExtrapolation", "extrapolationValue", "batchIdx", "heightIdx", "widthIdx", "channelIdx", "cubicCoeffA", "excludeOutside", "createCubicInterpolationFunction", "idx", "direction", "inputTensor", "scalesInput", "roiInput", "outputVariable", "inputVariable", "outputSize", "ShapeUtil", "noScale", "d", "getShaderSource", "shaderHelper", "context", "customDataBuffer", "antialias", "coordinateTransformMode", "keepAspectRatioPolicy", "mode", "createAttributeWithCacheKey", "validateInputs", "createSkipLayerNormProgramInfo", "skipLayerNorm", "parseSkipLayerNormAttributes", "init_skip_layer_norm", "__esmMin", "init_wasm_common", "init_util", "init_attribute_with_cache_key", "init_common", "inputs", "input", "skip", "gamma", "hiddenSize", "sequenceLength", "beta", "bias", "attributes", "outputCount", "isTraining", "inputShape", "inputSize", "ShapeUtil", "outputShape", "outputSize", "meanInvStdDevDim", "hasBetaInput", "hasBiasInput", "hasMeanOutput", "hasInvStdDevOutput", "hasInputSkipBiasSumOutput", "components", "getMaxComponents", "variables", "inputVariable", "outputVariable", "dataType", "tensorTypeToWsglStorageType", "getShaderSource", "shaderHelper", "fillVector", "castToF32", "sumVector", "outputs", "context", "epsilon", "createAttributeWithCacheKey", "validateInputs", "readInput", "createSliceAttributesFromInputs", "fixStartEndValues", "calculateInputIndicesImpl", "createSliceProgramInfo", "slice", "parseSliceAttributes", "init_slice", "__esmMin", "init_wasm_common", "init_util", "init_attribute_with_cache_key", "init_common", "inputs", "attributes", "_", "idx", "input", "v", "starts", "ends", "axes", "createAttributeWithCacheKey", "value", "index", "inputShape", "steps", "newValue", "output", "outputShape", "inputSize", "ShapeUtil", "step", "start", "i", "end", "signs", "array", "numSteps", "newEnd", "newStart", "axis", "outputTensorInfo", "outputVariable", "inputVariable", "outputSize", "getShaderSource", "shaderHelper", "context", "updatedAttributes", "validateInputs", "createSoftmaxProgramInfo", "softmax", "parseSoftmaxAttributes", "init_softmax", "__esmMin", "init_util", "init_attribute_with_cache_key", "init_common", "inputs", "input", "attributes", "dataType", "tensorTypeToWsglStorageType", "shape", "outputSize", "ShapeUtil", "WG", "axis", "cols", "rows", "threadMaxDecl", "_shaderHelper", "context", "createAttributeWithCacheKey", "validateInputs", "createSplitAttributesFromInputs", "calculateOutputIndexImpl", "writeBufferDataImpl", "createSplitProgramInfo", "split", "parseSplitAttributes", "init_split", "__esmMin", "init_util", "init_attribute_with_cache_key", "init_common", "inputs", "attributes", "splitSizes", "numOutputs", "v", "createAttributeWithCacheKey", "numberOfTensors", "outputs", "codeLines", "i", "returnSnippet", "inputShape", "inputSize", "ShapeUtil", "dataType", "rank", "axis", "adjustedAxis", "input", "inputVariable", "sizeInConcatAxis", "outputsTensorInfo", "outputShapes", "previousSum", "outputShape", "outputVariable", "indicesAxis", "getShaderSource", "shaderHelper", "context", "updatedAttributes", "getRepeats", "validateInputs", "getOutputShape", "createTileProgramInfo", "tile", "init_tile", "__esmMin", "init_wasm_common", "init_util", "init_common", "repeatsTensorView", "inputs", "inputShape", "repeats", "outputShape", "i", "outputSize", "ShapeUtil", "dataType", "input", "inputVariable", "output", "outputVariable", "getShaderSource", "shaderHelper", "context", "createWhereOpProgramShader", "createWhereOpProgramInfo", "where", "init_where", "__esmMin", "init_wasm_common", "init_util", "init_common", "shaderHelper", "inputs", "dimsOutput", "isBroadcast", "typeOutput", "outputSize", "ShapeUtil", "vecSize", "output", "outputVariable", "a", "inputVariable", "b", "c", "assignment", "expression", "singleAssignment", "resStr", "x", "typeCast", "expressionA", "expressionB", "expressionC", "dimsA", "dimsB", "dimsC", "outputDataType", "outputShape", "calculatedShape", "BroadcastUtil", "context", "WEBGPU_OP_RESOLVE_RULES", "init_op_resolve_rules", "__esmMin", "init_argminmax", "init_bias_add", "init_bias_split_gelu", "init_binary_op", "init_concat", "init_conv", "init_conv_transpose", "init_einsum", "init_expand", "init_gather", "init_gather_elements", "init_gemm", "init_instance_norm", "init_layer_norm", "init_matmul", "init_pad", "init_pool", "init_range", "init_reduce", "init_resize", "init_skip_layer_norm", "init_slice", "init_softmax", "init_split", "init_tile", "init_transpose", "init_unary_op", "init_where", "abs", "acos", "acosh", "add", "argMax", "parseArgMinMaxAttributes", "argMin", "asin", "asinh", "atan", "atanh", "averagePool", "parseAveragePoolAttributes", "biasAdd", "biasSplitGelu", "cast", "parseCastAttributes", "ceil", "clipV10", "clip", "concat", "parseConcatAttributes", "conv", "parseConvAttributes", "convTranspose", "parseConvTransposeAttributes", "cos", "cosh", "div", "einsum", "parseEinsumAttributes", "elu", "parseAlphaAttributes", "equal", "erf", "exp", "expand", "floor", "gather", "parseGatherAttributes", "gatherElements", "parseGatherElementsAttributes", "gelu", "gemm", "parseGemmAttributes", "globalAveragePool", "parseGlobalAveragePoolAttributes", "globalMaxPool", "parseGlobalMaxPoolAttributes", "greater", "greaterOrEqual", "instanceNorm", "parseInstanceNormAttributes", "layerNorm", "parseLayerNormAttributes", "leakyRelu", "less", "lessOrEqual", "log", "matMul", "maxPool", "parseMaxPoolAttributes", "mul", "neg", "not", "pad", "parsePadAttributes", "pow", "range", "reciprocal", "reduceMin", "parseReduceAttributes", "reduceMean", "reduceMax", "reduceSum", "reduceProd", "reduceL1", "reduceL2", "reduceLogSum", "reduceLogSumExp", "reduceSumSquare", "relu", "resize", "parseResizeAttributes", "sigmoid", "sin", "sinh", "slice", "parseSliceAttributes", "skipLayerNorm", "parseSkipLayerNormAttributes", "split", "parseSplitAttributes", "sqrt", "softmax", "parseSoftmaxAttributes", "sub", "tan", "tanh", "thresholdedRelu", "tile", "transpose", "parseTransposeAttributes", "where", "ProgramManager", "init_program_manager", "__esmMin", "init_wasm_common", "init_log", "init_common", "backend", "key", "artifact", "buildArtifact", "inputTensorViews", "outputTensorViews", "inputs", "outputs", "dispatchGroup", "uniformBufferBinding", "device", "computePassEncoder", "profilingEnabled", "entries", "input", "output", "bindGroup", "syncData", "kernelId", "kernelInfo", "kernelName", "mappedData", "startTimeU64", "endTimeU64", "startTime", "endTime", "inputShapes", "value", "i", "tensorDataTypeEnumToString", "outputShapes", "programInfo", "normalizedDispatchGroupSize", "extensions", "shaderHelper", "createShaderHelper", "userCode", "code", "shaderModule", "LOG_DEBUG", "computePipeline", "x", "y", "z", "limitPerDimension", "size", "dispatchAverage", "getProgramInputTensorInfoDependencyKey", "getProgramInfoUniqueKey", "WebGpuBackend", "init_backend_webgpu", "__esmMin", "init_log", "init_tensor_view", "init_gpu_data_manager", "init_op_resolve_rules", "init_program_manager", "inputTensors", "inputDependencies", "inputInfos", "i", "type", "rank", "dims", "programInfo", "key", "data", "env", "adapter", "requiredFeatures", "deviceDescriptor", "createGpuDataManager", "ProgramManager", "configureLogger", "ev", "program", "inputTensorViews", "outputIndices", "createKernelOutput", "createIntermediateOutput", "inputDatas", "gpuData", "artifact", "outputs", "dispatchGroup", "programUniforms", "validatedOutputIndices", "_", "outputTensorViews", "outputDatas", "isTemporary", "isPersistent", "tensorView", "persistentData", "uniformBufferBinding", "currentOffset", "preLength", "offsets", "maxAlignmentOfField", "v", "baseAlignment", "arrayBuffer", "offset", "uniformBufferData", "normalizedDispatchGroup", "LOG_DEBUG", "gpuDataId", "src", "dst", "getTargetBuffer", "size", "ptr", "opType", "kernelId", "attribute", "nodeName", "op", "WEBGPU_OP_RESOLVE_RULES", "context", "errors", "kernel", "kernelEntry", "attributes", "useErrorScope", "e", "err", "sessionId", "index", "buffer", "sessionInputOutputMapping", "previousBuffer", "id", "bufferInfo", "gpuBuffer", "downloadGpuData", "createView", "init_exports", "__export", "init", "TensorViewImpl", "ComputeContextImpl", "init_init", "__esmMin", "init_wasm_common", "init_backend_webgpu", "init_log", "init_util", "_TensorViewImpl", "module", "dataType", "data", "dims", "elementCount", "ShapeUtil", "newDims", "backend", "contextDataOffset", "heapU32", "dataIndex", "inputCount", "inputs", "i", "dim", "d", "program", "inputsOutputsMapping", "mappedInputs", "outputIndices", "createKernelOutput", "index", "createTemporaryOutput", "elementSize", "getTensorElementSize", "bufferSize", "stack", "offset", "e", "env", "WebGpuBackend", "size", "ptr", "src", "dst", "isSourceGpu", "LOG_DEBUG", "gpuDataId", "dataOffset", "name", "kernel", "attribute", "sessionHandle", "errors", "context", "getSessionInputOutputCount", "initOrt", "initRuntime", "activeSessions", "createSessionAllocate", "createSessionFinalize", "createSession", "releaseSession", "prepareInputOutputTensor", "run", "endProfiling", "extractTransferableBuffers", "init_wasm_core_impl", "__esmMin", "init_run_options", "init_session_options", "init_wasm_common", "init_wasm_factory", "init_wasm_utils", "sessionHandle", "wasm", "getInstance", "stack", "dataOffset", "checkLastError", "numThreads", "loggingLevel", "env", "logLevelStringToEnum", "initJsep", "model", "modelDataOffset", "modelData", "options", "sessionOptionsHandle", "ioBindingHandle", "allocs", "inputNamesUTF8Encoded", "outputNamesUTF8Encoded", "setSessionOptions", "inputCount", "outputCount", "inputNames", "outputNames", "outputPreferredLocations", "i", "name", "nameString", "location", "bindingState", "l", "dataLocationStringToEnum", "e", "buf", "alloc", "sessionId", "session", "ioBindingState", "tensor", "tensorHandles", "index", "dataType", "dims", "rawData", "dataByteLength", "gpuBuffer", "elementSizeInBytes", "getTensorElementSize", "tensorDataTypeStringToEnum", "a", "b", "data", "dataIndex", "allocWasmString", "dimsOffset", "dimIndex", "d", "inputIndices", "inputTensors", "outputIndices", "outputTensors", "runOptionsHandle", "runOptionsAllocs", "inputTensorHandles", "outputTensorHandles", "inputOutputAllocs", "beforeRunStack", "inputValuesOffset", "inputNamesOffset", "outputValuesOffset", "outputNamesOffset", "setRunOptions", "inputValuesIndex", "inputNamesIndex", "outputValuesIndex", "outputNamesIndex", "handle", "outputPreferredLocationsEncoded", "errorCode", "output", "beforeGetTensorDataStack", "tensorDataOffset", "keepOutputTensor", "type", "tensorDataIndex", "dimsLength", "size", "tensorDataTypeEnumToString", "preferredLocation", "stringData", "offset", "maxBytesToRead", "elementSize", "isGpuBufferSupportedType", "typedArrayConstructor", "tensorTypeToTypedArrayConstructor", "v", "p", "profileFileName", "tensors", "buffers", "require_main", "__commonJSMin", "exports", "module", "isProxy", "proxyWorker", "initializing", "initialized", "aborted", "initWasmCallbacks", "initOrtCallbacks", "createSessionAllocateCallbacks", "createSessionFinalizeCallbacks", "createSessionCallbacks", "releaseSessionCallbacks", "runCallbacks", "endProfilingCallbacks", "ensureWorker", "onProxyWorkerMessage", "scriptSrc", "initializeWebAssemblyInstance", "initializeRuntime", "createSessionAllocate", "createSessionFinalize", "createSession", "releaseSession", "run", "endProfiling", "init_proxy_wrapper", "__esmMin", "init_esm", "init_wasm_core_impl", "init_wasm_factory", "env", "ev", "resolve", "reject", "workerUrl", "message", "initializeWebAssembly", "initRuntime", "model", "modeldata", "options", "sessionId", "inputIndices", "inputs", "outputIndices", "outputs", "t", "serializableInputs", "extractTransferableBuffers", "runtimeInitialized", "runtimeInitializationPromise", "encodeTensorMetadata", "decodeTensorMetadata", "OnnxruntimeWebAssemblySessionHandler", "init_session_handler", "__esmMin", "init_esm", "init_proxy_wrapper", "init_wasm_common", "tensor", "getName", "Tensor", "dataType", "isGpuBufferSupportedType", "gpuBuffer", "download", "dispose", "path", "response", "arrayBuffer", "createSessionAllocate", "pathOrBuffer", "options", "initializeRuntime", "env", "model", "createSession", "modelData", "createSessionFinalize", "releaseSession", "feeds", "fetches", "inputArray", "inputIndices", "kvp", "name", "index", "outputArray", "outputIndices", "inputs", "t", "i", "outputs", "results", "run", "resultMap", "endProfiling", "initializeFlags", "OnnxruntimeWebAssemblyBackend", "init_backend_wasm", "__esmMin", "init_esm", "init_proxy_wrapper", "init_session_handler", "env", "numCpuLogicalCores", "initializeWebAssemblyInstance", "pathOrBuffer", "options", "handler", "OnnxruntimeWebAssemblySessionHandler", "backend_wasm_inference_exports", "__export", "wasmBackend", "init_backend_wasm_inference", "__esmMin", "init_backend_wasm", "OnnxruntimeWebAssemblyBackend", "init_esm", "version", "wasmBackend", "registerBackend", "env", "version"]
}
