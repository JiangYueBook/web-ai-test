/*!
 * ONNX Runtime Web v1.17.0
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
"use strict";var kn=Object.defineProperty;var kl=Object.getOwnPropertyDescriptor;var Ml=Object.getOwnPropertyNames;var Bl=Object.prototype.hasOwnProperty;var L=(e,t)=>()=>(e&&(t=e(e=0)),t);var Yt=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),zt=(e,t)=>{for(var r in t)kn(e,r,{get:t[r],enumerable:!0})},Dl=(e,t,r,a)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of Ml(t))!Bl.call(e,n)&&n!==r&&kn(e,n,{get:()=>t[n],enumerable:!(a=kl(t,n))||a.enumerable});return e};var St=e=>Dl(kn({},"__esModule",{value:!0}),e);var Gr,Wt,yt,Fr,Lr=L(()=>{Gr=new Map,Wt=[],yt=(e,t,r)=>{if(t&&typeof t.init=="function"&&typeof t.createInferenceSessionHandler=="function"){let a=Gr.get(e);if(a===void 0)Gr.set(e,{backend:t,priority:r});else{if(a.priority>r)return;if(a.priority===r&&a.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${r}`)}if(r>=0){let n=Wt.indexOf(e);n!==-1&&Wt.splice(n,1);for(let s=0;s<Wt.length;s++)if(Gr.get(Wt[s]).priority<=r){Wt.splice(s,0,e);return}Wt.push(e)}return}throw new TypeError("not a valid backend")},Fr=async e=>{let t=e.length===0?Wt:e,r=[];for(let a of t){let n=Gr.get(a);if(n){if(n.initialized)return n.backend;if(n.aborted)continue;let s=!!n.initPromise;try{return s||(n.initPromise=n.backend.init()),await n.initPromise,n.initialized=!0,n.backend}catch(u){s||r.push({name:a,err:u}),n.aborted=!0}finally{delete n.initPromise}}}throw new Error(`no available backend found. ERR: ${r.map(a=>`[${a.name}] ${a.err}`).join(", ")}`)}});var ja=L(()=>{Lr()});var qa,Ka=L(()=>{qa="1.17.0"});var Ya,Mn,Xa=L(()=>{Ka();Ya="warning",Mn={wasm:{},webgl:{},webgpu:{},versions:{common:qa},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Ya=e}},get logLevel(){return Ya}};Object.defineProperty(Mn,"logLevel",{enumerable:!0})});var Ce,Ja=L(()=>{Xa();Ce=Mn});var Qa,Za,eo=L(()=>{Qa=(e,t)=>{let r=document.createElement("canvas");r.width=e.dims[3],r.height=e.dims[2];let a=r.getContext("2d");if(a!=null){let n,s;t?.tensorLayout!==void 0&&t.tensorLayout==="NHWC"?(n=e.dims[2],s=e.dims[3]):(n=e.dims[3],s=e.dims[2]);let u=t?.format!==void 0?t.format:"RGB",l=t?.norm,o,p;l===void 0||l.mean===void 0?o=[255,255,255,255]:typeof l.mean=="number"?o=[l.mean,l.mean,l.mean,l.mean]:(o=[l.mean[0],l.mean[1],l.mean[2],0],l.mean[3]!==void 0&&(o[3]=l.mean[3])),l===void 0||l.bias===void 0?p=[0,0,0,0]:typeof l.bias=="number"?p=[l.bias,l.bias,l.bias,l.bias]:(p=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(p[3]=l.bias[3]));let m=s*n,b=0,g=m,v=m*2,$=-1;u==="RGBA"?(b=0,g=m,v=m*2,$=m*3):u==="RGB"?(b=0,g=m,v=m*2):u==="RBG"&&(b=0,v=m,g=m*2);for(let w=0;w<s;w++)for(let C=0;C<n;C++){let I=(e.data[b++]-p[0])*o[0],R=(e.data[g++]-p[1])*o[1],M=(e.data[v++]-p[2])*o[2],P=$===-1?255:(e.data[$++]-p[3])*o[3];a.fillStyle="rgba("+I+","+R+","+M+","+P+")",a.fillRect(C,w,1,1)}return r.toDataURL()}else throw new Error("Can not access image data")},Za=(e,t)=>{let r=document.createElement("canvas").getContext("2d"),a;if(r!=null){let n,s,u;t?.tensorLayout!==void 0&&t.tensorLayout==="NHWC"?(n=e.dims[2],s=e.dims[1],u=e.dims[3]):(n=e.dims[3],s=e.dims[2],u=e.dims[1]);let l=t!==void 0&&t.format!==void 0?t.format:"RGB",o=t?.norm,p,m;o===void 0||o.mean===void 0?p=[255,255,255,255]:typeof o.mean=="number"?p=[o.mean,o.mean,o.mean,o.mean]:(p=[o.mean[0],o.mean[1],o.mean[2],255],o.mean[3]!==void 0&&(p[3]=o.mean[3])),o===void 0||o.bias===void 0?m=[0,0,0,0]:typeof o.bias=="number"?m=[o.bias,o.bias,o.bias,o.bias]:(m=[o.bias[0],o.bias[1],o.bias[2],0],o.bias[3]!==void 0&&(m[3]=o.bias[3]));let b=s*n;if(t!==void 0&&(t.format!==void 0&&u===4&&t.format!=="RGBA"||u===3&&t.format!=="RGB"&&t.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let g=4,v=0,$=1,w=2,C=3,I=0,R=b,M=b*2,P=-1;l==="RGBA"?(I=0,R=b,M=b*2,P=b*3):l==="RGB"?(I=0,R=b,M=b*2):l==="RBG"&&(I=0,M=b,R=b*2),a=r.createImageData(n,s);for(let B=0;B<s*n;v+=g,$+=g,w+=g,C+=g,B++)a.data[v]=(e.data[I++]-m[0])*p[0],a.data[$]=(e.data[R++]-m[1])*p[1],a.data[w]=(e.data[M++]-m[2])*p[2],a.data[C]=P===-1?255:(e.data[P++]-m[3])*p[3]}else throw new Error("Can not access image data");return a}});var Bn,to,ro,no,ao,oo=L(()=>{Hr();Bn=(e,t)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(t.height===void 0||t.width===void 0)throw new Error("Image height and width must be defined");if(t.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:r,width:a}=t,n=t.norm??{mean:255,bias:0},s,u;typeof n.mean=="number"?s=[n.mean,n.mean,n.mean,n.mean]:s=[n.mean[0],n.mean[1],n.mean[2],n.mean[3]??255],typeof n.bias=="number"?u=[n.bias,n.bias,n.bias,n.bias]:u=[n.bias[0],n.bias[1],n.bias[2],n.bias[3]??0];let l=t.format!==void 0?t.format:"RGBA",o=t.tensorFormat!==void 0&&t.tensorFormat!==void 0?t.tensorFormat:"RGB",p=r*a,m=o==="RGBA"?new Float32Array(p*4):new Float32Array(p*3),b=4,g=0,v=1,$=2,w=3,C=0,I=p,R=p*2,M=-1;l==="RGB"&&(b=3,g=0,v=1,$=2,w=-1),o==="RGBA"?M=p*3:o==="RBG"?(C=0,R=p,I=p*2):o==="BGR"&&(R=0,I=p,C=p*2);for(let B=0;B<p;B++,g+=b,$+=b,v+=b,w+=b)m[C++]=(e[g]+u[0])/s[0],m[I++]=(e[v]+u[1])/s[1],m[R++]=(e[$]+u[2])/s[2],M!==-1&&w!==-1&&(m[M++]=(e[w]+u[3])/s[3]);return o==="RGBA"?new Fe("float32",m,[1,4,r,a]):new Fe("float32",m,[1,3,r,a])},to=async(e,t)=>{let r=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,a=typeof ImageData<"u"&&e instanceof ImageData,n=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,s=typeof e=="string",u,l=t??{};if(r){let o=document.createElement("canvas");o.width=e.width,o.height=e.height;let p=o.getContext("2d");if(p!=null){let m=e.height,b=e.width;if(t!==void 0&&t.resizedHeight!==void 0&&t.resizedWidth!==void 0&&(m=t.resizedHeight,b=t.resizedWidth),t!==void 0){if(l=t,t.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");l.tensorFormat="RGBA",l.height=m,l.width=b}else l.tensorFormat="RGBA",l.height=m,l.width=b;p.drawImage(e,0,0),u=p.getImageData(0,0,b,m).data}else throw new Error("Can not access image data")}else if(a){let o,p;if(t!==void 0&&t.resizedWidth!==void 0&&t.resizedHeight!==void 0?(o=t.resizedHeight,p=t.resizedWidth):(o=e.height,p=e.width),t!==void 0&&(l=t),l.format="RGBA",l.height=o,l.width=p,t!==void 0){let m=document.createElement("canvas");m.width=p,m.height=o;let b=m.getContext("2d");if(b!=null)b.putImageData(e,0,0),u=b.getImageData(0,0,p,o).data;else throw new Error("Can not access image data")}else u=e.data}else if(n){if(t===void 0)throw new Error("Please provide image config with format for Imagebitmap");let o=document.createElement("canvas");o.width=e.width,o.height=e.height;let p=o.getContext("2d");if(p!=null){let m=e.height,b=e.width;return p.drawImage(e,0,0,b,m),u=p.getImageData(0,0,b,m).data,l.height=m,l.width=b,Bn(u,l)}else throw new Error("Can not access image data")}else{if(s)return new Promise((o,p)=>{let m=document.createElement("canvas"),b=m.getContext("2d");if(!e||!b)return p();let g=new Image;g.crossOrigin="Anonymous",g.src=e,g.onload=()=>{m.width=g.width,m.height=g.height,b.drawImage(g,0,0,m.width,m.height);let v=b.getImageData(0,0,m.width,m.height);l.height=m.height,l.width=m.width,o(Bn(v.data,l))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(u!==void 0)return Bn(u,l);throw new Error("Input data provided is not supported - aborted tensor creation")},ro=(e,t)=>{let{width:r,height:a,download:n,dispose:s}=t,u=[1,a,r,4];return new Fe({location:"texture",type:"float32",texture:e,dims:u,download:n,dispose:s})},no=(e,t)=>{let{dataType:r,dims:a,download:n,dispose:s}=t;return new Fe({location:"gpu-buffer",type:r??"float32",gpuBuffer:e,dims:a,download:n,dispose:s})},ao=(e,t,r)=>new Fe({location:"cpu-pinned",type:e,data:t,dims:r??[t.length]})});var yr,jr,io,so,uo=L(()=>{yr=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["float16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),jr=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),io=!1,so=()=>{if(!io){io=!0;let e=typeof BigInt64Array<"u"&&typeof BigInt64Array.from=="function",t=typeof BigUint64Array<"u"&&typeof BigUint64Array.from=="function";e&&(yr.set("int64",BigInt64Array),jr.set(BigInt64Array,"int64")),t&&(yr.set("uint64",BigUint64Array),jr.set(BigUint64Array,"uint64"))}}});var lo,co,po=L(()=>{Hr();lo=e=>{let t=1;for(let r=0;r<e.length;r++){let a=e[r];if(typeof a!="number"||!Number.isSafeInteger(a))throw new TypeError(`dims[${r}] must be an integer, got: ${a}`);if(a<0)throw new RangeError(`dims[${r}] must be a non-negative integer, got: ${a}`);t*=a}return t},co=(e,t)=>{switch(e.location){case"cpu":return new Fe(e.type,e.data,t);case"cpu-pinned":return new Fe({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new Fe({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new Fe({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}});var Fe,Hr=L(()=>{eo();oo();uo();po();Fe=class{constructor(t,r,a){so();let n,s;if(typeof t=="object"&&"location"in t)switch(this.dataLocation=t.location,n=t.type,s=t.dims,t.location){case"cpu-pinned":{let l=yr.get(n);if(!l)throw new TypeError(`unsupported type "${n}" to create tensor from pinned buffer`);if(!(t.data instanceof l))throw new TypeError(`buffer should be of type ${l.name}`);this.cpuData=t.data;break}case"texture":{if(n!=="float32")throw new TypeError(`unsupported type "${n}" to create tensor from texture`);this.gpuTextureData=t.texture,this.downloader=t.download,this.disposer=t.dispose;break}case"gpu-buffer":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="bool")throw new TypeError(`unsupported type "${n}" to create tensor from gpu buffer`);this.gpuBufferData=t.gpuBuffer,this.downloader=t.download,this.disposer=t.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let l,o;if(typeof t=="string")if(n=t,o=a,t==="string"){if(!Array.isArray(r))throw new TypeError("A string tensor's data must be a string array.");l=r}else{let p=yr.get(t);if(p===void 0)throw new TypeError(`Unsupported tensor type: ${t}.`);if(Array.isArray(r)){if(t==="float16")throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");t==="uint64"||t==="int64"?l=p.from(r,BigInt):l=p.from(r)}else if(r instanceof p)l=r;else throw new TypeError(`A ${n} tensor's data must be type of ${p}`)}else if(o=r,Array.isArray(t)){if(t.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let p=typeof t[0];if(p==="string")n="string",l=t;else if(p==="boolean")n="bool",l=Uint8Array.from(t);else throw new TypeError(`Invalid element type of data array: ${p}.`)}else{let p=jr.get(t.constructor);if(p===void 0)throw new TypeError(`Unsupported type for tensor data: ${t.constructor}.`);n=p,l=t}if(o===void 0)o=[l.length];else if(!Array.isArray(o))throw new TypeError("A tensor's dims must be a number array");s=o,this.cpuData=l,this.dataLocation="cpu"}let u=lo(s);if(this.cpuData&&u!==this.cpuData.length)throw new Error(`Tensor's size(${u}) does not match data length(${this.cpuData.length}).`);this.type=n,this.dims=s,this.size=u}static async fromImage(t,r){return to(t,r)}static fromTexture(t,r){return ro(t,r)}static fromGpuBuffer(t,r){return no(t,r)}static fromPinnedBuffer(t,r,a){return ao(t,r,a)}toDataURL(t){return Qa(this,t)}toImageData(t){return Za(this,t)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(t){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,t&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(t){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return co(this,t)}}});var Ve,qr=L(()=>{Hr();Ve=Fe});var Kr,fo=L(()=>{Lr();qr();Kr=class e{constructor(t){this.handler=t}async run(t,r,a){let n={},s={};if(typeof t!="object"||t===null||t instanceof Ve||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let u=!0;if(typeof r=="object"){if(r===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof Ve)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(r.length===0)throw new TypeError("'fetches' cannot be an empty array.");u=!1;for(let p of r){if(typeof p!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(p)===-1)throw new RangeError(`'fetches' contains invalid output name: ${p}.`);n[p]=null}if(typeof a=="object"&&a!==null)s=a;else if(typeof a<"u")throw new TypeError("'options' must be an object.")}else{let p=!1,m=Object.getOwnPropertyNames(r);for(let b of this.outputNames)if(m.indexOf(b)!==-1){let g=r[b];(g===null||g instanceof Ve)&&(p=!0,u=!1,n[b]=g)}if(p){if(typeof a=="object"&&a!==null)s=a;else if(typeof a<"u")throw new TypeError("'options' must be an object.")}else s=r}}else if(typeof r<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let p of this.inputNames)if(typeof t[p]>"u")throw new Error(`input '${p}' is missing in 'feeds'.`);if(u)for(let p of this.outputNames)n[p]=null;let l=await this.handler.run(t,n,s),o={};for(let p in l)if(Object.hasOwnProperty.call(l,p)){let m=l[p];m instanceof Ve?o[p]=m:o[p]=new Ve(m.type,m.data,m.dims)}return o}async release(){return this.handler.dispose()}static async create(t,r,a,n){let s,u={};if(typeof t=="string"){if(s=t,typeof r=="object"&&r!==null)u=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(s=t,typeof r=="object"&&r!==null)u=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer){let b=t,g=0,v=t.byteLength;if(typeof r=="object"&&r!==null)u=r;else if(typeof r=="number"){if(g=r,!Number.isSafeInteger(g))throw new RangeError("'byteOffset' must be an integer.");if(g<0||g>=b.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${b.byteLength}).`);if(v=t.byteLength-g,typeof a=="number"){if(v=a,!Number.isSafeInteger(v))throw new RangeError("'byteLength' must be an integer.");if(v<=0||g+v>b.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${b.byteLength-g}].`);if(typeof n=="object"&&n!==null)u=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(typeof a<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof r<"u")throw new TypeError("'options' must be an object.");s=new Uint8Array(b,g,v)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let o=(u.executionProviders||[]).map(b=>typeof b=="string"?b:b.name),m=await(await Fr(o)).createInferenceSessionHandler(s,u);return new e(m)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}});var mo,ho=L(()=>{fo();mo=Kr});var go=L(()=>{});var zl,Yr,yo=L(()=>{Lr();qr();zl="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",Yr=class e{constructor(t){this.handler=t}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}static async create(t,r){let a=t.evalModel||"",n=t.optimizerModel||"",s=r||{},l=(s.executionProviders||[]).map(p=>typeof p=="string"?p:p.name),o=await Fr(l);if(o.createTrainingSessionHandler){let p=await o.createTrainingSessionHandler(t.checkpointState,t.trainModel,a,n,s);return new e(p)}else throw new Error(zl)}typeNarrowingForRunStep(t,r,a){let n={},s={};if(typeof t!="object"||t===null||t instanceof Ve||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let u=!0;if(typeof r=="object"){if(r===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof Ve)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(r.length===0)throw new TypeError("'fetches' cannot be an empty array.");u=!1;for(let l of r){if(typeof l!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(l)===-1)throw new RangeError(`'fetches' contains invalid output name: ${l}.`);n[l]=null}if(typeof a=="object"&&a!==null)s=a;else if(typeof a<"u")throw new TypeError("'options' must be an object.")}else{let l=!1,o=Object.getOwnPropertyNames(r);for(let p of this.outputNames)if(o.indexOf(p)!==-1){let m=r[p];(m===null||m instanceof Ve)&&(l=!0,u=!1,n[p]=m)}if(l){if(typeof a=="object"&&a!==null)s=a;else if(typeof a<"u")throw new TypeError("'options' must be an object.")}else s=r}}else if(typeof r<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let l of this.inputNames)if(typeof t[l]>"u")throw new Error(`input '${l}' is missing in 'feeds'.`);if(u)for(let l of this.outputNames)n[l]=null;return[n,s]}convertHandlerReturnTypeToMapOfTensors(t){let r={};for(let a in t)if(Object.hasOwnProperty.call(t,a)){let n=t[a];n instanceof Ve?r[a]=n:r[a]=new Ve(n.type,n.data,n.dims)}return r}async runTrainStep(t,r,a){let[n,s]=this.typeNarrowingForRunStep(t,r,a),u=await this.handler.runTrainStep(t,n,s);return this.convertHandlerReturnTypeToMapOfTensors(u)}async loadParametersBuffer(t,r){throw new Error("Method not implemented.")}async getContiguousParameters(t){throw new Error("Method not implemented.")}async release(){return this.handler.dispose()}}});var bo,wo=L(()=>{yo();bo=Yr});var Dn={};zt(Dn,{InferenceSession:()=>mo,Tensor:()=>Ve,TrainingSession:()=>bo,env:()=>Ce,registerBackend:()=>yt});var Ct=L(()=>{ja();Ja();ho();qr();go();wo()});var zn={};zt(zn,{readFile:()=>Wl});var Wl,Wn=L(()=>{Wl=void 0});var Nn={};zt(Nn,{join:()=>Nl});var Nl,Vn=L(()=>{Nl=void 0});var So=Yt((xo,Un)=>{"use strict";var $o=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){var r=t,a,n;r.ready=new Promise((d,f)=>{a=d,n=f}),r.jsepInit=(d,f,y,S,A,N,G,J)=>{r.ab=d,r.Ra=f,r.Ta=y,r.La=S,r.Sa=A,r.xa=N,r.Ua=G,r.Va=J,f=(Y,ee,Q)=>(...pe)=>{let fe=Xe,_=ee?.();pe=Y(...pe);let re=ee?.();return _!==re&&(Y=re,Q(_),ee=Q=null),Xe!=fe?Rr():pe},y=Y=>async(...ee)=>{try{if(r.Fa)throw Error("Session already started");let Q=r.Fa={Wa:ee[0],errors:[]},pe=await Y(...ee);if(r.Fa!==Q)throw Error("Session mismatch");d.flush();let fe=Q.errors;if(0<fe.length){let _=await Promise.all(fe);if(_=_.filter(re=>re),0<_.length)throw Error(_.join(`
`))}return pe}finally{r.Fa=null}},r._OrtRun=y(f(r._OrtRun,()=>r._OrtRun,Y=>r._OrtRun=Y)),r._OrtRunWithBinding=y(f(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,Y=>r._OrtRunWithBinding=Y)),r._OrtBindInput=f(r._OrtBindInput,()=>r._OrtBindInput,Y=>r._OrtBindInput=Y),r.jsepRegisterBuffer=(Y,ee,Q,pe)=>d.registerBuffer(Y,ee,Q,pe),r.jsepUnregisterBuffers=Y=>{d.unregisterBuffers(Y)},r.jsepGetBuffer=Y=>d.getBuffer(Y),r.jsepCreateDownloader=(Y,ee,Q)=>d.createDownloader(Y,ee,Q)};var s=Object.assign({},r),u="./this.program",l=(d,f)=>{throw f},o=typeof window=="object",p=typeof importScripts=="function",m=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",b="",g,v,$;if(m){var w=(Wn(),St(zn)),C=(Vn(),St(Nn));b=p?C.dirname(b)+"/":__dirname+"/",g=(d,f)=>(d=d.startsWith("file://")?new URL(d):C.normalize(d),w.readFileSync(d,f?void 0:"utf8")),$=d=>(d=g(d,!0),d.buffer||(d=new Uint8Array(d)),d),v=(d,f,y,S=!0)=>{d=d.startsWith("file://")?new URL(d):C.normalize(d),w.readFile(d,S?void 0:"utf8",(A,N)=>{A?y(A):f(S?N.buffer:N)})},!r.thisProgram&&1<process.argv.length&&(u=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),l=(d,f)=>{throw process.exitCode=d,f},r.inspect=()=>"[Emscripten Module object]"}else(o||p)&&(p?b=self.location.href:typeof document<"u"&&document.currentScript&&(b=document.currentScript.src),e&&(b=e),b.indexOf("blob:")!==0?b=b.substr(0,b.replace(/[?#].*/,"").lastIndexOf("/")+1):b="",g=d=>{var f=new XMLHttpRequest;return f.open("GET",d,!1),f.send(null),f.responseText},p&&($=d=>{var f=new XMLHttpRequest;return f.open("GET",d,!1),f.responseType="arraybuffer",f.send(null),new Uint8Array(f.response)}),v=(d,f,y)=>{var S=new XMLHttpRequest;S.open("GET",d,!0),S.responseType="arraybuffer",S.onload=()=>{S.status==200||S.status==0&&S.response?f(S.response):y()},S.onerror=y,S.send(null)});var I=r.print||console.log.bind(console),R=r.printErr||console.error.bind(console);Object.assign(r,s),s=null,r.thisProgram&&(u=r.thisProgram),r.quit&&(l=r.quit);var M;r.wasmBinary&&(M=r.wasmBinary);var P=r.noExitRuntime||!0;typeof WebAssembly!="object"&&U("no native wasm support detected");var B,T,W=!1,H,K,le,D,q,xe,oe;function we(){var d=B.buffer;r.HEAP8=K=new Int8Array(d),r.HEAP16=new Int16Array(d),r.HEAP32=D=new Int32Array(d),r.HEAPU8=le=new Uint8Array(d),r.HEAPU16=new Uint16Array(d),r.HEAPU32=q=new Uint32Array(d),r.HEAPF32=xe=new Float32Array(d),r.HEAPF64=oe=new Float64Array(d)}var j,Se=[],Oe=[],Ae=[];function _e(){var d=r.preRun.shift();Se.unshift(d)}var je=0,qe=null,Ke=null;function U(d){throw r.onAbort&&r.onAbort(d),d="Aborted("+d+")",R(d),W=!0,H=1,d=new WebAssembly.RuntimeError(d+". Build with -sASSERTIONS for more info."),n(d),d}function ce(d){return d.startsWith("data:application/octet-stream;base64,")}var de;if(de="ort-wasm-simd.wasm",!ce(de)){var We=de;de=r.locateFile?r.locateFile(We,b):b+We}function Ge(d){if(d==de&&M)return new Uint8Array(M);if($)return $(d);throw"both async and sync fetching of the wasm failed"}function Te(d){if(!M&&(o||p)){if(typeof fetch=="function"&&!d.startsWith("file://"))return fetch(d,{credentials:"same-origin"}).then(f=>{if(!f.ok)throw"failed to load wasm binary file at '"+d+"'";return f.arrayBuffer()}).catch(()=>Ge(d));if(v)return new Promise((f,y)=>{v(d,S=>f(new Uint8Array(S)),y)})}return Promise.resolve().then(()=>Ge(d))}function Me(d,f,y){return Te(d).then(S=>WebAssembly.instantiate(S,f)).then(S=>S).then(y,S=>{R("failed to asynchronously prepare wasm: "+S),U(S)})}function tt(d,f){var y=de;return M||typeof WebAssembly.instantiateStreaming!="function"||ce(y)||y.startsWith("file://")||m||typeof fetch!="function"?Me(y,d,f):fetch(y,{credentials:"same-origin"}).then(S=>WebAssembly.instantiateStreaming(S,d).then(f,function(A){return R("wasm streaming compile failed: "+A),R("falling back to ArrayBuffer instantiation"),Me(y,d,f)}))}var Le,Ye={915968:d=>{r.xa("Abs",d,void 0)},916019:d=>{r.xa("Neg",d,void 0)},916070:d=>{r.xa("Floor",d,void 0)},916123:d=>{r.xa("Ceil",d,void 0)},916175:d=>{r.xa("Reciprocal",d,void 0)},916233:d=>{r.xa("Sqrt",d,void 0)},916285:d=>{r.xa("Exp",d,void 0)},916336:d=>{r.xa("Erf",d,void 0)},916387:d=>{r.xa("Sigmoid",d,void 0)},916442:d=>{r.xa("Log",d,void 0)},916493:d=>{r.xa("Sin",d,void 0)},916544:d=>{r.xa("Cos",d,void 0)},916595:d=>{r.xa("Tan",d,void 0)},916646:d=>{r.xa("Asin",d,void 0)},916698:d=>{r.xa("Acos",d,void 0)},916750:d=>{r.xa("Atan",d,void 0)},916802:d=>{r.xa("Sinh",d,void 0)},916854:d=>{r.xa("Cosh",d,void 0)},916906:d=>{r.xa("Asinh",d,void 0)},916959:d=>{r.xa("Acosh",d,void 0)},917012:d=>{r.xa("Atanh",d,void 0)},917065:d=>{r.xa("Tanh",d,void 0)},917117:d=>{r.xa("Not",d,void 0)},917168:(d,f,y)=>{r.xa("ClipV10",d,{min:f,max:y})},917240:d=>{r.xa("Clip",d,void 0)},917292:(d,f)=>{r.xa("Elu",d,{alpha:f})},917350:d=>{r.xa("Relu",d,void 0)},917402:(d,f)=>{r.xa("LeakyRelu",d,{alpha:f})},917466:(d,f)=>{r.xa("ThresholdedRelu",d,{alpha:f})},917536:(d,f)=>{r.xa("Cast",d,{to:f})},917594:d=>{r.xa("Add",d,void 0)},917645:d=>{r.xa("Sub",d,void 0)},917696:d=>{r.xa("Mul",d,void 0)},917747:d=>{r.xa("Div",d,void 0)},917798:d=>{r.xa("Pow",d,void 0)},917849:d=>{r.xa("Equal",d,void 0)},917902:d=>{r.xa("Greater",d,void 0)},917957:d=>{r.xa("GreaterOrEqual",d,void 0)},918019:d=>{r.xa("Less",d,void 0)},918071:d=>{r.xa("LessOrEqual",d,void 0)},918130:(d,f,y,S,A)=>{r.xa("ReduceMean",d,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:S?Array.from(D.subarray(A>>>0,A+S>>>0)):[]})},918294:(d,f,y,S,A)=>{r.xa("ReduceMax",d,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:S?Array.from(D.subarray(A>>>0,A+S>>>0)):[]})},918457:(d,f,y,S,A)=>{r.xa("ReduceMin",d,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:S?Array.from(D.subarray(A>>>0,A+S>>>0)):[]})},918620:(d,f,y,S,A)=>{r.xa("ReduceProd",d,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:S?Array.from(D.subarray(A>>>0,A+S>>>0)):[]})},918784:(d,f,y,S,A)=>{r.xa("ReduceSum",d,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:S?Array.from(D.subarray(A>>>0,A+S>>>0)):[]})},918947:(d,f,y,S,A)=>{r.xa("ReduceL1",d,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:S?Array.from(D.subarray(A>>>0,A+S>>>0)):[]})},919109:(d,f,y,S,A)=>{r.xa("ReduceL2",d,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:S?Array.from(D.subarray(A>>>0,A+S>>>0)):[]})},919271:(d,f,y,S,A)=>{r.xa("ReduceLogSum",d,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:S?Array.from(D.subarray(A>>>0,A+S>>>0)):[]})},919437:(d,f,y,S,A)=>{r.xa("ReduceSumSquare",d,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:S?Array.from(D.subarray(A>>>0,A+S>>>0)):[]})},919606:(d,f,y,S,A)=>{r.xa("ReduceLogSumExp",d,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:S?Array.from(D.subarray(A>>>0,A+S>>>0)):[]})},919775:d=>{r.xa("Where",d,void 0)},919828:(d,f,y)=>{r.xa("Transpose",d,{perm:f?Array.from(D.subarray(y>>>0,y+f>>>0)):[]})},919941:(d,f,y,S,A,N,G,J,Y,ee,Q,pe,fe,_,re)=>{r.xa("ConvTranspose",d,{format:Y?"NHWC":"NCHW",autoPad:f,dilations:[y],group:S,kernel_shape:[A],pads:[N,G],strides:[J],wIsConst:()=>!!K[ee>>>0],outputPadding:Q?Array.from(D.subarray(pe>>>0,pe+Q>>>0)):[],outputShape:fe?Array.from(D.subarray(_>>>0,_+fe>>>0)):[],activation:Ne(re)})},920355:(d,f,y,S,A,N,G,J,Y,ee,Q,pe,fe,_)=>{r.xa("ConvTranspose",d,{format:J?"NHWC":"NCHW",autoPad:f,dilations:Array.from(D.subarray(y>>>0,y+2>>>0)),group:S,kernelShape:Array.from(D.subarray(A>>>0,A+2>>>0)),pads:Array.from(D.subarray(N>>>0,N+4>>>0)),strides:Array.from(D.subarray(G>>>0,G+2>>>0)),wIsConst:()=>!!K[Y>>>0],outputPadding:0<ee?Array.from(D.subarray(Q>>>0,Q+ee>>>0)):[],outputShape:0<pe?Array.from(D.subarray(fe>>>0,fe+pe>>>0)):[],activation:Ne(_)})},920912:(d,f,y,S,A,N,G,J,Y,ee,Q,pe,fe,_,re)=>{r.xa("ConvTranspose",d,{format:Y?"NHWC":"NCHW",autoPad:f,dilations:[y],group:S,kernel_shape:[A],pads:[N,G],strides:[J],wIsConst:()=>!!K[ee>>>0],outputPadding:Q?Array.from(D.subarray(pe>>>0,pe+Q>>>0)):[],outputShape:fe?Array.from(D.subarray(_>>>0,_+fe>>>0)):[],activation:Ne(re)})},921326:(d,f,y,S,A,N,G,J,Y,ee,Q,pe,fe,_)=>{r.xa("ConvTranspose",d,{format:J?"NHWC":"NCHW",autoPad:f,dilations:Array.from(D.subarray(y>>>0,y+2>>>0)),group:S,kernelShape:Array.from(D.subarray(A>>>0,A+2>>>0)),pads:Array.from(D.subarray(N>>>0,N+4>>>0)),strides:Array.from(D.subarray(G>>>0,G+2>>>0)),wIsConst:()=>!!K[Y>>>0],outputPadding:0<ee?Array.from(D.subarray(Q>>>0,Q+ee>>>0)):[],outputShape:0<pe?Array.from(D.subarray(fe>>>0,fe+pe>>>0)):[],activation:Ne(_)})},921883:(d,f)=>{r.xa("GlobalAveragePool",d,{format:f?"NHWC":"NCHW"})},921974:(d,f,y,S,A,N,G,J,Y,ee,Q,pe,fe,_,re,me)=>{r.xa("AveragePool",d,{format:me?"NHWC":"NCHW",auto_pad:f,ceil_mode:y,count_include_pad:S,storage_order:A,dilations:[N,G],kernel_shape:[J,Y],pads:[ee,Q,pe,fe],strides:[_,re]})},922258:(d,f)=>{r.xa("GlobalAveragePool",d,{format:f?"NHWC":"NCHW"})},922349:(d,f,y,S,A,N,G,J,Y,ee,Q,pe,fe,_,re,me)=>{r.xa("AveragePool",d,{format:me?"NHWC":"NCHW",auto_pad:f,ceil_mode:y,count_include_pad:S,storage_order:A,dilations:[N,G],kernel_shape:[J,Y],pads:[ee,Q,pe,fe],strides:[_,re]})},922633:(d,f)=>{r.xa("GlobalMaxPool",d,{format:f?"NHWC":"NCHW"})},922720:(d,f,y,S,A,N,G,J,Y,ee,Q,pe,fe,_,re,me)=>{r.xa("MaxPool",d,{format:me?"NHWC":"NCHW",auto_pad:f,ceil_mode:y,count_include_pad:S,storage_order:A,dilations:[N,G],kernel_shape:[J,Y],pads:[ee,Q,pe,fe],strides:[_,re]})},923e3:(d,f)=>{r.xa("GlobalMaxPool",d,{format:f?"NHWC":"NCHW"})},923087:(d,f,y,S,A,N,G,J,Y,ee,Q,pe,fe,_,re,me)=>{r.xa("MaxPool",d,{format:me?"NHWC":"NCHW",auto_pad:f,ceil_mode:y,count_include_pad:S,storage_order:A,dilations:[N,G],kernel_shape:[J,Y],pads:[ee,Q,pe,fe],strides:[_,re]})},923367:(d,f,y,S,A)=>{r.xa("Gemm",d,{alpha:f,beta:y,transA:S,transB:A})},923471:d=>{r.xa("MatMul",d,void 0)},923525:(d,f,y,S)=>{r.xa("ArgMax",d,{keepDims:!!f,selectLastIndex:!!y,axis:S})},923633:(d,f,y,S)=>{r.xa("ArgMin",d,{keepDims:!!f,selectLastIndex:!!y,axis:S})},923741:(d,f)=>{r.xa("Softmax",d,{axis:f})},923804:(d,f)=>{r.xa("Concat",d,{axis:f})},923864:(d,f,y,S,A)=>{r.xa("Split",d,{axis:f,numOutputs:y,splitSizes:S?Array.from(D.subarray(A>>>0,A+S>>>0)):[]})},924009:d=>{r.xa("Expand",d,void 0)},924063:(d,f)=>{r.xa("Gather",d,{axis:Number(f)})},924134:(d,f)=>{r.xa("GatherElements",d,{axis:Number(f)})},924213:(d,f,y,S,A,N,G,J,Y,ee,Q)=>{r.xa("Resize",d,{antialias:f,axes:y?Array.from(D.subarray(S>>>0,S+y>>>0)):[],coordinateTransformMode:Ne(A),cubicCoeffA:N,excludeOutside:G,extrapolationValue:J,keepAspectRatioPolicy:Ne(Y),mode:Ne(ee),nearestMode:Ne(Q)})},924564:(d,f,y,S,A,N,G)=>{r.xa("Slice",d,{starts:f?Array.from(D.subarray(y>>>0,y+f>>>0)):[],ends:S?Array.from(D.subarray(A>>>0,A+S>>>0)):[],axes:N?Array.from(D.subarray(G>>>0,G+N>>>0)):[]})},924795:d=>{r.xa("Tile",d,void 0)},924847:(d,f,y)=>{r.xa("LayerNormalization",d,{axis:Number(f),epsilon:Number(y)})},924954:(d,f,y)=>{r.xa("InstanceNormalization",d,{epsilon:f,format:y?"NHWC":"NCHW"})},925068:(d,f,y)=>{r.xa("InstanceNormalization",d,{epsilon:f,format:y?"NHWC":"NCHW"})},925182:d=>{r.xa("Range",d,void 0)},925235:(d,f)=>{r.xa("Einsum",d,{equation:Ne(f)})},925316:(d,f,y,S,A)=>{r.xa("Pad",d,{mode:f,value:y,pads:S?Array.from(D.subarray(A>>>0,A+S>>>0)):[]})},925448:d=>{r.xa("Gelu",d,void 0)},925500:d=>{r.xa("BiasAdd",d,void 0)},925555:d=>{r.xa("BiasSplitGelu",d,void 0)},925616:(d,f)=>{r.xa("SkipLayerNormalization",d,{epsilon:f})},925697:(d,f,y,S,A,N,G,J,Y,ee,Q,pe,fe)=>{r.xa("Conv",d,{format:Y?"NHWC":"NCHW",auto_pad:f,dilations:[y],group:S,kernel_shape:[A],pads:N?Array.from(D.subarray(G>>>0,G+N>>>0)):[],strides:[J],w_is_const:()=>!!K[ee>>>0],activation:Ne(Q),activation_params:pe?Array.from(xe.subarray(fe>>>0,fe+pe>>>0)):[]})},926078:(d,f,y,S,A,N,G,J,Y,ee,Q,pe,fe,_,re,me)=>{r.xa("Conv",d,{format:pe?"NHWC":"NCHW",auto_pad:f,dilations:[y,S],group:A,kernel_shape:[N,G],pads:J?Array.from(D.subarray(Y>>>0,Y+J>>>0)):[],strides:[ee,Q],w_is_const:()=>!!K[fe>>>0],activation:Ne(_),activation_params:re?Array.from(xe.subarray(me>>>0,me+re>>>0)):[]})},926480:d=>{r.Ua(d)},926514:(d,f)=>r.Va(d,f,r.Fa.Wa,r.Fa.errors),926626:d=>r.Ra(d),926659:d=>r.Ta(d),926691:(d,f,y)=>{r.La(d,f,y,!0)},926730:(d,f,y)=>{r.La(d,f,y)}};function Ot(d){this.name="ExitStatus",this.message=`Program terminated with exit(${d})`,this.status=d}var dt=d=>{for(;0<d.length;)d.shift()(r)};function Or(d){this.Ka=d-24,this.Pa=function(f){q[this.Ka+4>>2>>>0]=f},this.Oa=function(f){q[this.Ka+8>>2>>>0]=f},this.Ma=function(f,y){this.Na(),this.Pa(f),this.Oa(y)},this.Na=function(){q[this.Ka+16>>2>>>0]=0}}var Jt=0,rt=0,Qt=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,ct=(d,f,y)=>{f>>>=0;var S=f+y;for(y=f;d[y]&&!(y>=S);)++y;if(16<y-f&&d.buffer&&Qt)return Qt.decode(d.subarray(f,y));for(S="";f<y;){var A=d[f++];if(A&128){var N=d[f++]&63;if((A&224)==192)S+=String.fromCharCode((A&31)<<6|N);else{var G=d[f++]&63;A=(A&240)==224?(A&15)<<12|N<<6|G:(A&7)<<18|N<<12|G<<6|d[f++]&63,65536>A?S+=String.fromCharCode(A):(A-=65536,S+=String.fromCharCode(55296|A>>10,56320|A&1023))}}else S+=String.fromCharCode(A)}return S},Ne=(d,f)=>(d>>>=0)?ct(le,d,f):"",Zt=d=>{for(var f=0,y=0;y<d.length;++y){var S=d.charCodeAt(y);127>=S?f++:2047>=S?f+=2:55296<=S&&57343>=S?(f+=4,++y):f+=3}return f},Ut=(d,f,y,S)=>{if(y>>>=0,!(0<S))return 0;var A=y;S=y+S-1;for(var N=0;N<d.length;++N){var G=d.charCodeAt(N);if(55296<=G&&57343>=G){var J=d.charCodeAt(++N);G=65536+((G&1023)<<10)|J&1023}if(127>=G){if(y>=S)break;f[y++>>>0]=G}else{if(2047>=G){if(y+1>=S)break;f[y++>>>0]=192|G>>6}else{if(65535>=G){if(y+2>=S)break;f[y++>>>0]=224|G>>12}else{if(y+3>=S)break;f[y++>>>0]=240|G>>18,f[y++>>>0]=128|G>>12&63}f[y++>>>0]=128|G>>6&63}f[y++>>>0]=128|G&63}}return f[y>>>0]=0,y-A},vt=d=>d%4===0&&(d%100!==0||d%400===0),pt=[0,31,60,91,121,152,182,213,244,274,305,335],Gt=[0,31,59,90,120,151,181,212,243,273,304,334],Tt=d=>{var f=Zt(d)+1,y=qt(f);return y&&Ut(d,le,y,f),y},Rt=[],er=(d,f)=>{Rt.length=0;var y;for(f>>=2;y=le[d++>>>0];)f+=y!=105&f,Rt.push(y==105?D[f>>>0]:oe[f++>>>1]),++f;return Rt},Ft={},tr=()=>{if(!Lt){var d={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:u||"./this.program"},f;for(f in Ft)Ft[f]===void 0?delete d[f]:d[f]=Ft[f];var y=[];for(f in d)y.push(`${f}=${d[f]}`);Lt=y}return Lt},Lt,Ue=[null,[],[]],rr=[31,29,31,30,31,30,31,31,30,31,30,31],Ht=[31,28,31,30,31,30,31,31,30,31,30,31];function ie(d){var f=Array(Zt(d)+1);return Ut(d,f,0,f.length),f}function Pt(d,f,y,S){function A(_,re,me){for(_=typeof _=="number"?_.toString():_||"";_.length<re;)_=me[0]+_;return _}function N(_,re){return A(_,re,"0")}function G(_,re){function me(gr){return 0>gr?-1:0<gr?1:0}var gt;return(gt=me(_.getFullYear()-re.getFullYear()))===0&&(gt=me(_.getMonth()-re.getMonth()))===0&&(gt=me(_.getDate()-re.getDate())),gt}function J(_){switch(_.getDay()){case 0:return new Date(_.getFullYear()-1,11,29);case 1:return _;case 2:return new Date(_.getFullYear(),0,3);case 3:return new Date(_.getFullYear(),0,2);case 4:return new Date(_.getFullYear(),0,1);case 5:return new Date(_.getFullYear()-1,11,31);case 6:return new Date(_.getFullYear()-1,11,30)}}function Y(_){var re=_.Da;for(_=new Date(new Date(_.Ea+1900,0,1).getTime());0<re;){var me=_.getMonth(),gt=(vt(_.getFullYear())?rr:Ht)[me];if(re>gt-_.getDate())re-=gt-_.getDate()+1,_.setDate(1),11>me?_.setMonth(me+1):(_.setMonth(0),_.setFullYear(_.getFullYear()+1));else{_.setDate(_.getDate()+re);break}}return me=new Date(_.getFullYear()+1,0,4),re=J(new Date(_.getFullYear(),0,4)),me=J(me),0>=G(re,_)?0>=G(me,_)?_.getFullYear()+1:_.getFullYear():_.getFullYear()-1}d>>>=0,f>>>=0,y>>>=0,S>>>=0;var ee=D[S+40>>2>>>0];S={Za:D[S>>2>>>0],Ya:D[S+4>>2>>>0],Ga:D[S+8>>2>>>0],Ja:D[S+12>>2>>>0],Ha:D[S+16>>2>>>0],Ea:D[S+20>>2>>>0],Ca:D[S+24>>2>>>0],Da:D[S+28>>2>>>0],bb:D[S+32>>2>>>0],Xa:D[S+36>>2>>>0],$a:ee?Ne(ee):""},y=Ne(y),ee={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var Q in ee)y=y.replace(new RegExp(Q,"g"),ee[Q]);var pe="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),fe="January February March April May June July August September October November December".split(" ");ee={"%a":_=>pe[_.Ca].substring(0,3),"%A":_=>pe[_.Ca],"%b":_=>fe[_.Ha].substring(0,3),"%B":_=>fe[_.Ha],"%C":_=>N((_.Ea+1900)/100|0,2),"%d":_=>N(_.Ja,2),"%e":_=>A(_.Ja,2," "),"%g":_=>Y(_).toString().substring(2),"%G":_=>Y(_),"%H":_=>N(_.Ga,2),"%I":_=>(_=_.Ga,_==0?_=12:12<_&&(_-=12),N(_,2)),"%j":_=>{for(var re=0,me=0;me<=_.Ha-1;re+=(vt(_.Ea+1900)?rr:Ht)[me++]);return N(_.Ja+re,3)},"%m":_=>N(_.Ha+1,2),"%M":_=>N(_.Ya,2),"%n":()=>`
`,"%p":_=>0<=_.Ga&&12>_.Ga?"AM":"PM","%S":_=>N(_.Za,2),"%t":()=>"	","%u":_=>_.Ca||7,"%U":_=>N(Math.floor((_.Da+7-_.Ca)/7),2),"%V":_=>{var re=Math.floor((_.Da+7-(_.Ca+6)%7)/7);if(2>=(_.Ca+371-_.Da-2)%7&&re++,re)re==53&&(me=(_.Ca+371-_.Da)%7,me==4||me==3&&vt(_.Ea)||(re=1));else{re=52;var me=(_.Ca+7-_.Da-1)%7;(me==4||me==5&&vt(_.Ea%400-1))&&re++}return N(re,2)},"%w":_=>_.Ca,"%W":_=>N(Math.floor((_.Da+7-(_.Ca+6)%7)/7),2),"%y":_=>(_.Ea+1900).toString().substring(2),"%Y":_=>_.Ea+1900,"%z":_=>{_=_.Xa;var re=0<=_;return _=Math.abs(_)/60,(re?"+":"-")+("0000"+(_/60*100+_%60)).slice(-4)},"%Z":_=>_.$a,"%%":()=>"%"},y=y.replace(/%%/g,"\0\0");for(Q in ee)y.includes(Q)&&(y=y.replace(new RegExp(Q,"g"),ee[Q](S)));return y=y.replace(/\0\0/g,"%"),Q=ie(y),Q.length>f?0:(K.set(Q,d>>>0),Q.length-1)}function kt(d){try{d()}catch(f){U(f)}}function An(d){var f={},y;for(y in d)(function(S){var A=d[S];f[S]=typeof A=="function"?function(){Mt.push(S);try{return A.apply(null,arguments)}finally{W||(Mt.pop()===S||U(),Xe&&Qe===1&&Mt.length===0&&(Qe=0,kt(pr),typeof Fibers<"u"&&Fibers.cb()))}}:A})(y);return f}var Qe=0,Xe=null,nr=0,Mt=[],ar={},or={},ir=0,jt=null,Tr=[];function Rr(){return new Promise((d,f)=>{jt={resolve:d,reject:f}})}function Pr(){var d=qt(65548),f=d+12;q[d>>2>>>0]=f,q[d+4>>2>>>0]=f+65536,f=Mt[0];var y=ar[f];return y===void 0&&(y=ir++,ar[f]=y,or[y]=f),D[d+8>>2>>>0]=y,d}function kr(d){if(!W){if(Qe===0){var f=!1,y=!1;d((S=0)=>{if(!W&&(nr=S,f=!0,y)){Qe=2,kt(()=>fr(Xe)),typeof Browser<"u"&&Browser.Ia.Qa&&Browser.Ia.resume(),S=!1;try{var A=(0,T[or[D[Xe+8>>2>>>0]]])()}catch(J){A=J,S=!0}var N=!1;if(!Xe){var G=jt;G&&(jt=null,(S?G.reject:G.resolve)(A),N=!0)}if(S&&!N)throw A}}),y=!0,f||(Qe=1,Xe=Pr(),typeof Browser<"u"&&Browser.Ia.Qa&&Browser.Ia.pause(),kt(()=>cr(Xe)))}else Qe===2?(Qe=0,kt(mr),lr(Xe),Xe=null,Tr.forEach(S=>{if(!W)try{if(S(),!P)try{H=H=S=H,P||(r.onExit&&r.onExit(S),W=!0),l(S,new Ot(S))}catch(A){A instanceof Ot||A=="unwind"||l(1,A)}}catch(A){A instanceof Ot||A=="unwind"||l(1,A)}})):U(`invalid state: ${Qe}`);return nr}}function Mr(d){return kr(f=>{d().then(f)})}var ft=[],mt=void 0,sr=[];function ur(d,f){if(!mt){mt=new WeakMap;var y=j.length;if(mt)for(var S=0;S<0+y;S++){var A=S,N=ft[A];N||(A>=ft.length&&(ft.length=A+1),ft[A]=N=j.get(A)),(A=N)&&mt.set(A,S)}}if(y=mt.get(d)||0)return y;if(sr.length)y=sr.pop();else{try{j.grow(1)}catch(J){throw J instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":J}y=j.length-1}try{S=y,j.set(S,d),ft[S]=j.get(S)}catch(J){if(!(J instanceof TypeError))throw J;if(typeof WebAssembly.Function=="function"){S=WebAssembly.Function,A={i:"i32",j:"i64",f:"f32",d:"f64",p:"i32"},N={parameters:[],results:f[0]=="v"?[]:[A[f[0]]]};for(var G=1;G<f.length;++G)N.parameters.push(A[f[G]]);f=new S(N,d)}else{for(S=[1],A=f.slice(0,1),f=f.slice(1),N={i:127,p:127,j:126,f:125,d:124},S.push(96),G=f.length,128>G?S.push(G):S.push(G%128|128,G>>7),G=0;G<f.length;++G)S.push(N[f[G]]);A=="v"?S.push(0):S.push(1,N[A]),f=[0,97,115,109,1,0,0,0,1],A=S.length,128>A?f.push(A):f.push(A%128|128,A>>7),f.push.apply(f,S),f.push(2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0),f=new WebAssembly.Module(new Uint8Array(f)),f=new WebAssembly.Instance(f,{e:{f:d}}).exports.f}S=y,j.set(S,f),ft[S]=j.get(S)}return mt.set(d,y),y}var Br={n:function(d,f,y){return Mr(async()=>{await r.Sa(d,f,y)})},a:function(d,f,y){throw d>>>=0,new Or(d).Ma(f>>>0,y>>>0),Jt=d,rt++,Jt},g:function(){return 0},J:function(){},z:function(){},B:function(){},L:function(){return 0},H:function(){},C:function(){},F:function(){},m:function(){},A:function(){},x:function(){},I:function(){},y:function(){},M:()=>!0,q:function(d,f,y){d=f+2097152>>>0<4194305-!!d?(d>>>0)+4294967296*f:NaN,y>>>=0,d=new Date(1e3*d),D[y>>2>>>0]=d.getUTCSeconds(),D[y+4>>2>>>0]=d.getUTCMinutes(),D[y+8>>2>>>0]=d.getUTCHours(),D[y+12>>2>>>0]=d.getUTCDate(),D[y+16>>2>>>0]=d.getUTCMonth(),D[y+20>>2>>>0]=d.getUTCFullYear()-1900,D[y+24>>2>>>0]=d.getUTCDay(),D[y+28>>2>>>0]=(d.getTime()-Date.UTC(d.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},r:function(d,f,y){d=f+2097152>>>0<4194305-!!d?(d>>>0)+4294967296*f:NaN,y>>>=0,d=new Date(1e3*d),D[y>>2>>>0]=d.getSeconds(),D[y+4>>2>>>0]=d.getMinutes(),D[y+8>>2>>>0]=d.getHours(),D[y+12>>2>>>0]=d.getDate(),D[y+16>>2>>>0]=d.getMonth(),D[y+20>>2>>>0]=d.getFullYear()-1900,D[y+24>>2>>>0]=d.getDay(),D[y+28>>2>>>0]=(vt(d.getFullYear())?pt:Gt)[d.getMonth()]+d.getDate()-1|0,D[y+36>>2>>>0]=-(60*d.getTimezoneOffset()),f=new Date(d.getFullYear(),6,1).getTimezoneOffset();var S=new Date(d.getFullYear(),0,1).getTimezoneOffset();D[y+32>>2>>>0]=(f!=S&&d.getTimezoneOffset()==Math.min(S,f))|0},s:function(d){d>>>=0;var f=new Date(D[d+20>>2>>>0]+1900,D[d+16>>2>>>0],D[d+12>>2>>>0],D[d+8>>2>>>0],D[d+4>>2>>>0],D[d>>2>>>0],0),y=D[d+32>>2>>>0],S=f.getTimezoneOffset(),A=new Date(f.getFullYear(),6,1).getTimezoneOffset(),N=new Date(f.getFullYear(),0,1).getTimezoneOffset(),G=Math.min(N,A);return 0>y?D[d+32>>2>>>0]=+(A!=N&&G==S):0<y!=(G==S)&&(A=Math.max(N,A),f.setTime(f.getTime()+6e4*((0<y?G:A)-S))),D[d+24>>2>>>0]=f.getDay(),D[d+28>>2>>>0]=(vt(f.getFullYear())?pt:Gt)[f.getMonth()]+f.getDate()-1|0,D[d>>2>>>0]=f.getSeconds(),D[d+4>>2>>>0]=f.getMinutes(),D[d+8>>2>>>0]=f.getHours(),D[d+12>>2>>>0]=f.getDate(),D[d+16>>2>>>0]=f.getMonth(),D[d+20>>2>>>0]=f.getYear(),d=f.getTime()/1e3,dr((Le=d,1<=+Math.abs(Le)?0<Le?+Math.floor(Le/4294967296)>>>0:~~+Math.ceil((Le-+(~~Le>>>0))/4294967296)>>>0:0)),d>>>0},o:function(){return-52},p:function(){},v:function(d,f,y){function S(Y){return(Y=Y.toTimeString().match(/\(([A-Za-z ]+)\)$/))?Y[1]:"GMT"}y>>>=0;var A=new Date().getFullYear(),N=new Date(A,0,1),G=new Date(A,6,1);A=N.getTimezoneOffset();var J=G.getTimezoneOffset();q[d>>>0>>2>>>0]=60*Math.max(A,J),D[f>>>0>>2>>>0]=+(A!=J),d=S(N),f=S(G),d=Tt(d),f=Tt(f),J<A?(q[y>>2>>>0]=d,q[y+4>>2>>>0]=f):(q[y>>2>>>0]=f,q[y+4>>2>>>0]=d)},e:()=>{U("")},b:function(d,f,y){return d>>>=0,f=er(f>>>0,y>>>0),Ye[d].apply(null,f)},j:function(d,f,y){return d>>>=0,f=er(f>>>0,y>>>0),Ye[d].apply(null,f)},h:function(){return Date.now()},w:function(){return 4294901760},c:()=>performance.now(),K:function(d,f,y){return f>>>=0,le.copyWithin(d>>>0>>>0,f>>>0,f+(y>>>0)>>>0)},u:function(d){d>>>=0;var f=le.length;if(4294901760<d)return!1;for(var y=1;4>=y;y*=2){var S=f*(1+.2/y);S=Math.min(S,d+100663296);var A=Math;S=Math.max(d,S);e:{A=A.min.call(A,4294901760,S+(65536-S%65536)%65536)-B.buffer.byteLength+65535>>>16;try{B.grow(A),we();var N=1;break e}catch{}N=void 0}if(N)return!0}return!1},D:function(d,f){d>>>=0,f>>>=0;var y=0;return tr().forEach(function(S,A){var N=f+y;for(A=q[d+4*A>>2>>>0]=N,N=0;N<S.length;++N)K[A++>>0>>>0]=S.charCodeAt(N);K[A>>0>>>0]=0,y+=S.length+1}),0},E:function(d,f){d>>>=0,f>>>=0;var y=tr();q[d>>2>>>0]=y.length;var S=0;return y.forEach(function(A){S+=A.length+1}),q[f>>2>>>0]=S,0},f:()=>52,l:function(){return 52},t:function(){return 70},k:function(d,f,y,S){f>>>=0,y>>>=0,S>>>=0;for(var A=0,N=0;N<y;N++){var G=q[f>>2>>>0],J=q[f+4>>2>>>0];f+=8;for(var Y=0;Y<J;Y++){var ee=le[G+Y>>>0],Q=Ue[d];ee===0||ee===10?((d===1?I:R)(ct(Q,0)),Q.length=0):Q.push(ee)}A+=J}return q[S>>2>>>0]=A,0},G:Pt,d:function(d,f,y,S){return Pt(d>>>0,f>>>0,y>>>0,S>>>0)},i:function(d,f,y,S){let A=j.length;d=new Uint8Array(le.slice(d+f,d+y));try{var N=new WebAssembly.Module(d),G=new WebAssembly.Instance(N,{env:{memory:B}}),J;for(J in G.exports)ur(G.exports[J]);return A<j.length?A:S}catch(Y){return console.log(Y),S}}};(function(){function d(y){if(y=y.exports,y=An(y),T=y=Dr(y),B=T.N,we(),j=T.sa,Oe.unshift(T.O),je--,r.monitorRunDependencies&&r.monitorRunDependencies(je),je==0&&(qe!==null&&(clearInterval(qe),qe=null),Ke)){var S=Ke;Ke=null,S()}return y}var f={a:Br};if(je++,r.monitorRunDependencies&&r.monitorRunDependencies(je),r.instantiateWasm)try{return r.instantiateWasm(f,d)}catch(y){R("Module.instantiateWasm callback failed with error: "+y),n(y)}return tt(f,function(y){d(y.instance)}).catch(n),{}})(),r._OrtInit=(d,f)=>(r._OrtInit=T.P)(d,f),r._OrtGetLastError=(d,f)=>(r._OrtGetLastError=T.Q)(d,f),r._OrtCreateSessionOptions=(d,f,y,S,A,N,G,J,Y,ee)=>(r._OrtCreateSessionOptions=T.R)(d,f,y,S,A,N,G,J,Y,ee),r._OrtAppendExecutionProvider=(d,f)=>(r._OrtAppendExecutionProvider=T.S)(d,f),r._OrtAddFreeDimensionOverride=(d,f,y)=>(r._OrtAddFreeDimensionOverride=T.T)(d,f,y),r._OrtAddSessionConfigEntry=(d,f,y)=>(r._OrtAddSessionConfigEntry=T.U)(d,f,y),r._OrtReleaseSessionOptions=d=>(r._OrtReleaseSessionOptions=T.V)(d),r._OrtCreateSession=(d,f,y)=>(r._OrtCreateSession=T.W)(d,f,y),r._OrtReleaseSession=d=>(r._OrtReleaseSession=T.X)(d),r._OrtGetInputOutputCount=(d,f,y)=>(r._OrtGetInputOutputCount=T.Y)(d,f,y),r._OrtGetInputName=(d,f)=>(r._OrtGetInputName=T.Z)(d,f),r._OrtGetOutputName=(d,f)=>(r._OrtGetOutputName=T._)(d,f),r._OrtFree=d=>(r._OrtFree=T.$)(d),r._OrtCreateTensor=(d,f,y,S,A,N)=>(r._OrtCreateTensor=T.aa)(d,f,y,S,A,N),r._OrtGetTensorData=(d,f,y,S,A)=>(r._OrtGetTensorData=T.ba)(d,f,y,S,A),r._OrtReleaseTensor=d=>(r._OrtReleaseTensor=T.ca)(d),r._OrtCreateRunOptions=(d,f,y,S)=>(r._OrtCreateRunOptions=T.da)(d,f,y,S),r._OrtAddRunConfigEntry=(d,f,y)=>(r._OrtAddRunConfigEntry=T.ea)(d,f,y),r._OrtReleaseRunOptions=d=>(r._OrtReleaseRunOptions=T.fa)(d),r._OrtCreateBinding=d=>(r._OrtCreateBinding=T.ga)(d),r._OrtBindInput=(d,f,y)=>(r._OrtBindInput=T.ha)(d,f,y),r._OrtBindOutput=(d,f,y,S)=>(r._OrtBindOutput=T.ia)(d,f,y,S),r._OrtClearBoundOutputs=d=>(r._OrtClearBoundOutputs=T.ja)(d),r._OrtReleaseBinding=d=>(r._OrtReleaseBinding=T.ka)(d),r._OrtRunWithBinding=(d,f,y,S,A)=>(r._OrtRunWithBinding=T.la)(d,f,y,S,A),r._OrtRun=(d,f,y,S,A,N,G,J)=>(r._OrtRun=T.ma)(d,f,y,S,A,N,G,J),r._OrtEndProfiling=d=>(r._OrtEndProfiling=T.na)(d),r._JsepOutput=(d,f,y)=>(r._JsepOutput=T.oa)(d,f,y),r._JsepGetNodeName=d=>(r._JsepGetNodeName=T.pa)(d);var qt=r._malloc=d=>(qt=r._malloc=T.qa)(d),lr=r._free=d=>(lr=r._free=T.ra)(d),dr=d=>(dr=T.ta)(d),Kt=()=>(Kt=T.ua)(),Bt=d=>(Bt=T.va)(d),ht=d=>(ht=T.wa)(d),cr=d=>(cr=T.ya)(d),pr=()=>(pr=T.za)(),fr=d=>(fr=T.Aa)(d),mr=()=>(mr=T.Ba)();r.___start_em_js=926763,r.___stop_em_js=927536;function Dr(d){d=Object.assign({},d);var f=S=>()=>S()>>>0,y=S=>A=>S(A)>>>0;return d.__errno_location=f(d.__errno_location),d.malloc=y(d.malloc),d.stackSave=f(d.stackSave),d.stackAlloc=y(d.stackAlloc),d}r.stackAlloc=ht,r.stackSave=Kt,r.stackRestore=Bt,r.addFunction=ur,r.UTF8ToString=Ne,r.stringToUTF8=(d,f,y)=>Ut(d,le,f,y),r.lengthBytesUTF8=Zt;var $t;Ke=function d(){$t||hr(),$t||(Ke=d)};function hr(){function d(){if(!$t&&($t=!0,r.calledRun=!0,!W)){if(dt(Oe),a(r),r.onRuntimeInitialized&&r.onRuntimeInitialized(),r.postRun)for(typeof r.postRun=="function"&&(r.postRun=[r.postRun]);r.postRun.length;){var f=r.postRun.shift();Ae.unshift(f)}dt(Ae)}}if(!(0<je)){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;)_e();dt(Se),0<je||(r.setStatus?(r.setStatus("Running..."),setTimeout(function(){setTimeout(function(){r.setStatus("")},1),d()},1)):d())}}if(r.preInit)for(typeof r.preInit=="function"&&(r.preInit=[r.preInit]);0<r.preInit.length;)r.preInit.pop()();return hr(),t.ready}})();typeof xo=="object"&&typeof Un=="object"?Un.exports=$o:typeof define=="function"&&define.amd&&define([],()=>$o)});var Co=Yt(()=>{});var Io=Yt(()=>{});var Ao={};zt(Ao,{cpus:()=>Vl});var Vl,Eo=L(()=>{Vl=void 0});var To=Yt((Oo,Gn)=>{"use strict";var _o=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){function r(){return we.buffer!=_e.buffer&&de(),_e}function a(){return we.buffer!=_e.buffer&&de(),je}function n(){return we.buffer!=_e.buffer&&de(),qe}function s(){return we.buffer!=_e.buffer&&de(),Ke}function u(){return we.buffer!=_e.buffer&&de(),U}function l(){return we.buffer!=_e.buffer&&de(),ce}var o=t,p,m;o.ready=new Promise((i,c)=>{p=i,m=c}),o.jsepInit=(i,c,h,x,E,k,V,ae)=>{o.Qb=i,o.wb=c,o.yb=h,o.jb=x,o.xb=E,o.Ea=k,o.zb=V,o.Ab=ae,c=(te,Z,ne)=>(...he)=>{let be=nt,O=Z?.();he=te(...he);let ue=Z?.();return O!==ue&&(te=ue,ne(O),Z=ne=null),nt!=be?Il():he},h=te=>async(...Z)=>{try{if(o.bb)throw Error("Session already started");let ne=o.bb={Fb:Z[0],errors:[]},he=await te(...Z);if(o.bb!==ne)throw Error("Session mismatch");i.flush();let be=ne.errors;if(0<be.length){let O=await Promise.all(be);if(O=O.filter(ue=>ue),0<O.length)throw Error(O.join(`
`))}return he}finally{o.bb=null}},o._OrtRun=h(c(o._OrtRun,()=>o._OrtRun,te=>o._OrtRun=te)),o._OrtRunWithBinding=h(c(o._OrtRunWithBinding,()=>o._OrtRunWithBinding,te=>o._OrtRunWithBinding=te)),o._OrtBindInput=c(o._OrtBindInput,()=>o._OrtBindInput,te=>o._OrtBindInput=te),o.jsepRegisterBuffer=(te,Z,ne,he)=>i.registerBuffer(te,Z,ne,he),o.jsepUnregisterBuffers=te=>{i.unregisterBuffers(te)},o.jsepGetBuffer=te=>i.getBuffer(te),o.jsepCreateDownloader=(te,Z,ne)=>i.createDownloader(te,Z,ne)};var b=Object.assign({},o),g="./this.program",v=(i,c)=>{throw c},$=typeof window=="object",w=typeof importScripts=="function",C=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",I=o.ENVIRONMENT_IS_PTHREAD||!1,R="";function M(i){return o.locateFile?o.locateFile(i,R):R+i}var P,B,T;if(C){var W=(Wn(),St(zn)),H=(Vn(),St(Nn));R=w?H.dirname(R)+"/":__dirname+"/",P=(c,h)=>(c=c.startsWith("file://")?new URL(c):H.normalize(c),W.readFileSync(c,h?void 0:"utf8")),T=c=>(c=P(c,!0),c.buffer||(c=new Uint8Array(c)),c),B=(c,h,x,E=!0)=>{c=c.startsWith("file://")?new URL(c):H.normalize(c),W.readFile(c,E?void 0:"utf8",(k,V)=>{k?x(k):h(E?V.buffer:V)})},!o.thisProgram&&1<process.argv.length&&(g=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),v=(c,h)=>{throw process.exitCode=c,h},o.inspect=()=>"[Emscripten Module object]";let i;try{i=Co()}catch(c){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),c}global.Worker=i.Worker}else($||w)&&(w?R=self.location.href:typeof document<"u"&&document.currentScript&&(R=document.currentScript.src),typeof e<"u"&&e&&(R=e),R.indexOf("blob:")!==0?R=R.substr(0,R.replace(/[?#].*/,"").lastIndexOf("/")+1):R="",C||(P=i=>{var c=new XMLHttpRequest;return c.open("GET",i,!1),c.send(null),c.responseText},w&&(T=i=>{var c=new XMLHttpRequest;return c.open("GET",i,!1),c.responseType="arraybuffer",c.send(null),new Uint8Array(c.response)}),B=(i,c,h)=>{var x=new XMLHttpRequest;x.open("GET",i,!0),x.responseType="arraybuffer",x.onload=()=>{x.status==200||x.status==0&&x.response?c(x.response):h()},x.onerror=h,x.send(null)}));C&&typeof performance>"u"&&(global.performance=Io().performance);var K=console.log.bind(console),le=console.error.bind(console);C&&(K=(...i)=>W.writeSync(1,i.join(" ")+`
`),le=(...i)=>W.writeSync(2,i.join(" ")+`
`));var D=o.print||K,q=o.printErr||le;Object.assign(o,b),b=null,o.thisProgram&&(g=o.thisProgram),o.quit&&(v=o.quit);var xe;o.wasmBinary&&(xe=o.wasmBinary);var oe=o.noExitRuntime||!0;typeof WebAssembly!="object"&&rt("no native wasm support detected");var we,j,Se,Oe=!1,Ae,_e,je,qe,Ke,U,ce;function de(){var i=we.buffer;o.HEAP8=_e=new Int8Array(i),o.HEAP16=new Int16Array(i),o.HEAP32=qe=new Int32Array(i),o.HEAPU8=je=new Uint8Array(i),o.HEAPU16=new Uint16Array(i),o.HEAPU32=Ke=new Uint32Array(i),o.HEAPF32=U=new Float32Array(i),o.HEAPF64=ce=new Float64Array(i)}var We=o.INITIAL_MEMORY||16777216;if(5242880<=We||rt("INITIAL_MEMORY should be larger than STACK_SIZE, was "+We+"! (STACK_SIZE=5242880)"),I)we=o.wasmMemory;else if(o.wasmMemory)we=o.wasmMemory;else if(we=new WebAssembly.Memory({initial:We/65536,maximum:65536,shared:!0}),!(we.buffer instanceof SharedArrayBuffer))throw q("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),C&&q("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");de(),We=we.buffer.byteLength;var Ge=[],Te=[],Me=[],tt=0;function Le(){return oe||0<tt}var Ye=0,Ot=null,dt=null;function Or(){Ye++,o.monitorRunDependencies&&o.monitorRunDependencies(Ye)}function Jt(){if(Ye--,o.monitorRunDependencies&&o.monitorRunDependencies(Ye),Ye==0&&(Ot!==null&&(clearInterval(Ot),Ot=null),dt)){var i=dt;dt=null,i()}}function rt(i){throw o.onAbort&&o.onAbort(i),i="Aborted("+i+")",q(i),Oe=!0,Ae=1,i=new WebAssembly.RuntimeError(i+". Build with -sASSERTIONS for more info."),m(i),i}function Qt(i){return i.startsWith("data:application/octet-stream;base64,")}var ct;ct="ort-wasm-simd-threaded.wasm",Qt(ct)||(ct=M(ct));function Ne(i){if(i==ct&&xe)return new Uint8Array(xe);if(T)return T(i);throw"both async and sync fetching of the wasm failed"}function Zt(i){if(!xe&&($||w)){if(typeof fetch=="function"&&!i.startsWith("file://"))return fetch(i,{credentials:"same-origin"}).then(c=>{if(!c.ok)throw"failed to load wasm binary file at '"+i+"'";return c.arrayBuffer()}).catch(()=>Ne(i));if(B)return new Promise((c,h)=>{B(i,x=>c(new Uint8Array(x)),h)})}return Promise.resolve().then(()=>Ne(i))}function Ut(i,c,h){return Zt(i).then(x=>WebAssembly.instantiate(x,c)).then(x=>x).then(h,x=>{q("failed to asynchronously prepare wasm: "+x),rt(x)})}function vt(i,c){var h=ct;return xe||typeof WebAssembly.instantiateStreaming!="function"||Qt(h)||h.startsWith("file://")||C||typeof fetch!="function"?Ut(h,i,c):fetch(h,{credentials:"same-origin"}).then(x=>WebAssembly.instantiateStreaming(x,i).then(c,function(E){return q("wasm streaming compile failed: "+E),q("falling back to ArrayBuffer instantiation"),Ut(h,i,c)}))}var pt,Gt={1421856:i=>{o.Ea("Abs",i,void 0)},1421907:i=>{o.Ea("Neg",i,void 0)},1421958:i=>{o.Ea("Floor",i,void 0)},1422011:i=>{o.Ea("Ceil",i,void 0)},1422063:i=>{o.Ea("Reciprocal",i,void 0)},1422121:i=>{o.Ea("Sqrt",i,void 0)},1422173:i=>{o.Ea("Exp",i,void 0)},1422224:i=>{o.Ea("Erf",i,void 0)},1422275:i=>{o.Ea("Sigmoid",i,void 0)},1422330:i=>{o.Ea("Log",i,void 0)},1422381:i=>{o.Ea("Sin",i,void 0)},1422432:i=>{o.Ea("Cos",i,void 0)},1422483:i=>{o.Ea("Tan",i,void 0)},1422534:i=>{o.Ea("Asin",i,void 0)},1422586:i=>{o.Ea("Acos",i,void 0)},1422638:i=>{o.Ea("Atan",i,void 0)},1422690:i=>{o.Ea("Sinh",i,void 0)},1422742:i=>{o.Ea("Cosh",i,void 0)},1422794:i=>{o.Ea("Asinh",i,void 0)},1422847:i=>{o.Ea("Acosh",i,void 0)},1422900:i=>{o.Ea("Atanh",i,void 0)},1422953:i=>{o.Ea("Tanh",i,void 0)},1423005:i=>{o.Ea("Not",i,void 0)},1423056:(i,c,h)=>{o.Ea("ClipV10",i,{min:c,max:h})},1423128:i=>{o.Ea("Clip",i,void 0)},1423180:(i,c)=>{o.Ea("Elu",i,{alpha:c})},1423238:i=>{o.Ea("Relu",i,void 0)},1423290:(i,c)=>{o.Ea("LeakyRelu",i,{alpha:c})},1423354:(i,c)=>{o.Ea("ThresholdedRelu",i,{alpha:c})},1423424:i=>{o.zb(i)},1423458:(i,c)=>o.Ab(i,c,o.bb.Fb,o.bb.errors),1423570:(i,c)=>{o.Ea("Cast",i,{to:c})},1423628:i=>{o.Ea("Add",i,void 0)},1423679:i=>{o.Ea("Sub",i,void 0)},1423730:i=>{o.Ea("Mul",i,void 0)},1423781:i=>{o.Ea("Div",i,void 0)},1423832:i=>{o.Ea("Pow",i,void 0)},1423883:i=>{o.Ea("Equal",i,void 0)},1423936:i=>{o.Ea("Greater",i,void 0)},1423991:i=>{o.Ea("GreaterOrEqual",i,void 0)},1424053:i=>{o.Ea("Less",i,void 0)},1424105:i=>{o.Ea("LessOrEqual",i,void 0)},1424164:(i,c,h,x,E)=>{o.Ea("ReduceMean",i,{keepDims:!!c,noopWithEmptyAxes:!!h,axes:x?Array.from(n().subarray(E>>>0,E+x>>>0)):[]})},1424328:(i,c,h,x,E)=>{o.Ea("ReduceMax",i,{keepDims:!!c,noopWithEmptyAxes:!!h,axes:x?Array.from(n().subarray(E>>>0,E+x>>>0)):[]})},1424491:(i,c,h,x,E)=>{o.Ea("ReduceMin",i,{keepDims:!!c,noopWithEmptyAxes:!!h,axes:x?Array.from(n().subarray(E>>>0,E+x>>>0)):[]})},1424654:(i,c,h,x,E)=>{o.Ea("ReduceProd",i,{keepDims:!!c,noopWithEmptyAxes:!!h,axes:x?Array.from(n().subarray(E>>>0,E+x>>>0)):[]})},1424818:(i,c,h,x,E)=>{o.Ea("ReduceSum",i,{keepDims:!!c,noopWithEmptyAxes:!!h,axes:x?Array.from(n().subarray(E>>>0,E+x>>>0)):[]})},1424981:(i,c,h,x,E)=>{o.Ea("ReduceL1",i,{keepDims:!!c,noopWithEmptyAxes:!!h,axes:x?Array.from(n().subarray(E>>>0,E+x>>>0)):[]})},1425143:(i,c,h,x,E)=>{o.Ea("ReduceL2",i,{keepDims:!!c,noopWithEmptyAxes:!!h,axes:x?Array.from(n().subarray(E>>>0,E+x>>>0)):[]})},1425305:(i,c,h,x,E)=>{o.Ea("ReduceLogSum",i,{keepDims:!!c,noopWithEmptyAxes:!!h,axes:x?Array.from(n().subarray(E>>>0,E+x>>>0)):[]})},1425471:(i,c,h,x,E)=>{o.Ea("ReduceSumSquare",i,{keepDims:!!c,noopWithEmptyAxes:!!h,axes:x?Array.from(n().subarray(E>>>0,E+x>>>0)):[]})},1425640:(i,c,h,x,E)=>{o.Ea("ReduceLogSumExp",i,{keepDims:!!c,noopWithEmptyAxes:!!h,axes:x?Array.from(n().subarray(E>>>0,E+x>>>0)):[]})},1425809:i=>{o.Ea("Where",i,void 0)},1425862:(i,c,h)=>{o.Ea("Transpose",i,{perm:c?Array.from(n().subarray(h>>>0,h+c>>>0)):[]})},1425975:(i,c,h,x,E,k,V,ae,te,Z,ne,he,be)=>{o.Ea("Conv",i,{format:te?"NHWC":"NCHW",auto_pad:c,dilations:[h],group:x,kernel_shape:[E],pads:k?Array.from(n().subarray(V>>>0,V+k>>>0)):[],strides:[ae],w_is_const:()=>!!r()[Z>>>0],activation:Ue(ne),activation_params:he?Array.from(u().subarray(be>>>0,be+he>>>0)):[]})},1426356:(i,c,h,x,E,k,V,ae,te,Z,ne,he,be,O,ue,ye)=>{o.Ea("Conv",i,{format:he?"NHWC":"NCHW",auto_pad:c,dilations:[h,x],group:E,kernel_shape:[k,V],pads:ae?Array.from(n().subarray(te>>>0,te+ae>>>0)):[],strides:[Z,ne],w_is_const:()=>!!r()[be>>>0],activation:Ue(O),activation_params:ue?Array.from(u().subarray(ye>>>0,ye+ue>>>0)):[]})},1426758:(i,c,h,x,E,k,V,ae,te,Z,ne,he,be,O,ue)=>{o.Ea("ConvTranspose",i,{format:te?"NHWC":"NCHW",autoPad:c,dilations:[h],group:x,kernel_shape:[E],pads:[k,V],strides:[ae],wIsConst:()=>!!r()[Z>>>0],outputPadding:ne?Array.from(n().subarray(he>>>0,he+ne>>>0)):[],outputShape:be?Array.from(n().subarray(O>>>0,O+be>>>0)):[],activation:Ue(ue)})},1427172:(i,c,h,x,E,k,V,ae,te,Z,ne,he,be,O)=>{o.Ea("ConvTranspose",i,{format:ae?"NHWC":"NCHW",autoPad:c,dilations:Array.from(n().subarray(h>>>0,h+2>>>0)),group:x,kernelShape:Array.from(n().subarray(E>>>0,E+2>>>0)),pads:Array.from(n().subarray(k>>>0,k+4>>>0)),strides:Array.from(n().subarray(V>>>0,V+2>>>0)),wIsConst:()=>!!r()[te>>>0],outputPadding:0<Z?Array.from(n().subarray(ne>>>0,ne+Z>>>0)):[],outputShape:0<he?Array.from(n().subarray(be>>>0,be+he>>>0)):[],activation:Ue(O)})},1427729:(i,c,h,x,E,k,V,ae,te,Z,ne,he,be,O,ue)=>{o.Ea("ConvTranspose",i,{format:te?"NHWC":"NCHW",autoPad:c,dilations:[h],group:x,kernel_shape:[E],pads:[k,V],strides:[ae],wIsConst:()=>!!r()[Z>>>0],outputPadding:ne?Array.from(n().subarray(he>>>0,he+ne>>>0)):[],outputShape:be?Array.from(n().subarray(O>>>0,O+be>>>0)):[],activation:Ue(ue)})},1428143:(i,c,h,x,E,k,V,ae,te,Z,ne,he,be,O)=>{o.Ea("ConvTranspose",i,{format:ae?"NHWC":"NCHW",autoPad:c,dilations:Array.from(n().subarray(h>>>0,h+2>>>0)),group:x,kernelShape:Array.from(n().subarray(E>>>0,E+2>>>0)),pads:Array.from(n().subarray(k>>>0,k+4>>>0)),strides:Array.from(n().subarray(V>>>0,V+2>>>0)),wIsConst:()=>!!r()[te>>>0],outputPadding:0<Z?Array.from(n().subarray(ne>>>0,ne+Z>>>0)):[],outputShape:0<he?Array.from(n().subarray(be>>>0,be+he>>>0)):[],activation:Ue(O)})},1428700:(i,c)=>{o.Ea("GlobalAveragePool",i,{format:c?"NHWC":"NCHW"})},1428791:(i,c,h,x,E,k,V,ae,te,Z,ne,he,be,O,ue,ye)=>{o.Ea("AveragePool",i,{format:ye?"NHWC":"NCHW",auto_pad:c,ceil_mode:h,count_include_pad:x,storage_order:E,dilations:[k,V],kernel_shape:[ae,te],pads:[Z,ne,he,be],strides:[O,ue]})},1429075:(i,c)=>{o.Ea("GlobalAveragePool",i,{format:c?"NHWC":"NCHW"})},1429166:(i,c,h,x,E,k,V,ae,te,Z,ne,he,be,O,ue,ye)=>{o.Ea("AveragePool",i,{format:ye?"NHWC":"NCHW",auto_pad:c,ceil_mode:h,count_include_pad:x,storage_order:E,dilations:[k,V],kernel_shape:[ae,te],pads:[Z,ne,he,be],strides:[O,ue]})},1429450:(i,c)=>{o.Ea("GlobalMaxPool",i,{format:c?"NHWC":"NCHW"})},1429537:(i,c,h,x,E,k,V,ae,te,Z,ne,he,be,O,ue,ye)=>{o.Ea("MaxPool",i,{format:ye?"NHWC":"NCHW",auto_pad:c,ceil_mode:h,count_include_pad:x,storage_order:E,dilations:[k,V],kernel_shape:[ae,te],pads:[Z,ne,he,be],strides:[O,ue]})},1429817:(i,c)=>{o.Ea("GlobalMaxPool",i,{format:c?"NHWC":"NCHW"})},1429904:(i,c,h,x,E,k,V,ae,te,Z,ne,he,be,O,ue,ye)=>{o.Ea("MaxPool",i,{format:ye?"NHWC":"NCHW",auto_pad:c,ceil_mode:h,count_include_pad:x,storage_order:E,dilations:[k,V],kernel_shape:[ae,te],pads:[Z,ne,he,be],strides:[O,ue]})},1430184:(i,c,h,x,E)=>{o.Ea("Gemm",i,{alpha:c,beta:h,transA:x,transB:E})},1430288:i=>{o.Ea("MatMul",i,void 0)},1430342:(i,c,h,x)=>{o.Ea("ArgMax",i,{keepDims:!!c,selectLastIndex:!!h,axis:x})},1430450:(i,c,h,x)=>{o.Ea("ArgMin",i,{keepDims:!!c,selectLastIndex:!!h,axis:x})},1430558:(i,c)=>{o.Ea("Softmax",i,{axis:c})},1430621:(i,c)=>{o.Ea("Concat",i,{axis:c})},1430681:(i,c,h,x,E)=>{o.Ea("Split",i,{axis:c,numOutputs:h,splitSizes:x?Array.from(n().subarray(E>>>0,E+x>>>0)):[]})},1430826:i=>{o.Ea("Expand",i,void 0)},1430880:(i,c)=>{o.Ea("Gather",i,{axis:Number(c)})},1430951:(i,c)=>{o.Ea("GatherElements",i,{axis:Number(c)})},1431030:(i,c,h,x,E,k,V,ae,te,Z,ne)=>{o.Ea("Resize",i,{antialias:c,axes:h?Array.from(n().subarray(x>>>0,x+h>>>0)):[],coordinateTransformMode:Ue(E),cubicCoeffA:k,excludeOutside:V,extrapolationValue:ae,keepAspectRatioPolicy:Ue(te),mode:Ue(Z),nearestMode:Ue(ne)})},1431381:(i,c,h,x,E,k,V)=>{o.Ea("Slice",i,{starts:c?Array.from(n().subarray(h>>>0,h+c>>>0)):[],ends:x?Array.from(n().subarray(E>>>0,E+x>>>0)):[],axes:k?Array.from(n().subarray(V>>>0,V+k>>>0)):[]})},1431612:i=>{o.Ea("Tile",i,void 0)},1431664:(i,c,h)=>{o.Ea("LayerNormalization",i,{axis:Number(c),epsilon:Number(h)})},1431771:(i,c,h)=>{o.Ea("InstanceNormalization",i,{epsilon:c,format:h?"NHWC":"NCHW"})},1431885:(i,c,h)=>{o.Ea("InstanceNormalization",i,{epsilon:c,format:h?"NHWC":"NCHW"})},1431999:i=>{o.Ea("Range",i,void 0)},1432052:(i,c)=>{o.Ea("Einsum",i,{equation:Ue(c)})},1432133:(i,c,h,x,E)=>{o.Ea("Pad",i,{mode:c,value:h,pads:x?Array.from(n().subarray(E>>>0,E+x>>>0)):[]})},1432265:i=>{o.Ea("Gelu",i,void 0)},1432317:i=>{o.Ea("BiasAdd",i,void 0)},1432372:i=>{o.Ea("BiasSplitGelu",i,void 0)},1432433:(i,c)=>{o.Ea("SkipLayerNormalization",i,{epsilon:c})},1432514:i=>o.wb(i),1432547:i=>o.yb(i),1432579:(i,c,h)=>{o.jb(i,c,h,!0)},1432618:(i,c,h)=>{o.jb(i,c,h)}};function Tt(i){this.name="ExitStatus",this.message=`Program terminated with exit(${i})`,this.status=i}function Rt(i){i.terminate(),i.onmessage=()=>{}}function er(i){(i=ie.Qa[i])||rt(),ie.Eb(i)}function Ft(i){var c=ie.tb();if(!c)return 6;ie.Ya.push(c),ie.Qa[i.Xa]=c,c.Xa=i.Xa;var h={cmd:"run",start_routine:i.Gb,arg:i.rb,pthread_ptr:i.Xa};return C&&c.unref(),c.postMessage(h,i.Mb),0}var tr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Lt=(i,c,h)=>{c>>>=0;var x=c+h;for(h=c;i[h]&&!(h>=x);)++h;if(16<h-c&&i.buffer&&tr)return tr.decode(i.buffer instanceof SharedArrayBuffer?i.slice(c,h):i.subarray(c,h));for(x="";c<h;){var E=i[c++];if(E&128){var k=i[c++]&63;if((E&224)==192)x+=String.fromCharCode((E&31)<<6|k);else{var V=i[c++]&63;E=(E&240)==224?(E&15)<<12|k<<6|V:(E&7)<<18|k<<12|V<<6|i[c++]&63,65536>E?x+=String.fromCharCode(E):(E-=65536,x+=String.fromCharCode(55296|E>>10,56320|E&1023))}}else x+=String.fromCharCode(E)}return x},Ue=(i,c)=>(i>>>=0)?Lt(a(),i,c):"";function rr(i){if(I)return f(1,1,i);Ae=i,Le()||(ie.Hb(),o.onExit&&o.onExit(i),Oe=!0),v(i,new Tt(i))}var Ht=i=>{if(Ae=i,I)throw kt(i),"unwind";rr(i)},ie={ab:[],Ya:[],mb:[],Qa:{},gb:function(){I?ie.vb():ie.ub()},ub:function(){Ge.unshift(()=>{Or(),ie.Bb(()=>Jt())})},vb:function(){ie.receiveObjectTransfer=ie.Db,ie.threadInitTLS=ie.lb,ie.setExitStatus=ie.kb,oe=!1},kb:function(i){Ae=i},Sb:["$terminateWorker"],Hb:function(){for(var i of ie.Ya)Rt(i);for(i of ie.ab)Rt(i);ie.ab=[],ie.Ya=[],ie.Qa=[]},Eb:function(i){var c=i.Xa;delete ie.Qa[c],ie.ab.push(i),ie.Ya.splice(ie.Ya.indexOf(i),1),i.Xa=0,On(c)},Db:function(){},lb:function(){ie.mb.forEach(i=>i())},Cb:i=>new Promise(c=>{i.onmessage=k=>{k=k.data;var V=k.cmd;if(k.targetThread&&k.targetThread!=Nr()){var ae=ie.Qa[k.Rb];ae?ae.postMessage(k,k.transferList):q('Internal error! Worker sent a message "'+V+'" to target pthread '+k.targetThread+", but that thread no longer exists!")}else V==="checkMailbox"?Bt():V==="spawnThread"?Ft(k):V==="cleanupThread"?er(k.thread):V==="killThread"?(k=k.thread,V=ie.Qa[k],delete ie.Qa[k],Rt(V),On(k),ie.Ya.splice(ie.Ya.indexOf(V),1),V.Xa=0):V==="cancelThread"?ie.Qa[k.thread].postMessage({cmd:"cancel"}):V==="loaded"?(i.loaded=!0,c(i)):V==="alert"?alert("Thread "+k.threadId+": "+k.text):k.target==="setimmediate"?i.postMessage(k):V==="callHandler"?o[k.handler](...k.args):V&&q("worker sent an unknown command "+V)},i.onerror=k=>{throw q("worker sent an error! "+k.filename+":"+k.lineno+": "+k.message),k},C&&(i.on("message",function(k){i.onmessage({data:k})}),i.on("error",function(k){i.onerror(k)}));var h=[],x=["onExit","onAbort","print","printErr"],E;for(E of x)o.hasOwnProperty(E)&&h.push(E);i.postMessage({cmd:"load",handlers:h,urlOrBlob:o.mainScriptUrlOrBlob||e,wasmMemory:we,wasmModule:Se})}),Bb:function(i){i()},qb:function(){var i=M("ort-wasm-simd-threaded.worker.js");i=new Worker(i),ie.ab.push(i)},tb:function(){return ie.ab.length==0&&(ie.qb(),ie.Cb(ie.ab[0])),ie.ab.pop()}};o.PThread=ie;var Pt=i=>{for(;0<i.length;)i.shift()(o)};o.establishStackSpace=function(){var i=Nr(),c=n()[i+52>>2>>>0];i=n()[i+56>>2>>>0],Wa(c,c-i),Vr(c)};function kt(i){if(I)return f(2,0,i);Ht(i)}o.invokeEntryPoint=function(i,c){i=Na.apply(null,[i,c]),Le()?ie.kb(i):Tn(i)};function An(i){this.fb=i-24,this.pb=function(c){s()[this.fb+4>>2>>>0]=c},this.ob=function(c){s()[this.fb+8>>2>>>0]=c},this.gb=function(c,h){this.nb(),this.pb(c),this.ob(h)},this.nb=function(){s()[this.fb+16>>2>>>0]=0}}var Qe=0,Xe=0;function nr(i,c,h,x){return I?f(3,1,i,c,h,x):Mt(i,c,h,x)}function Mt(i,c,h,x){if(i>>>=0,c>>>=0,h>>>=0,x>>>=0,typeof SharedArrayBuffer>"u")return q("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var E=[];return I&&E.length===0?nr(i,c,h,x):(i={Gb:h,Xa:i,rb:x,Mb:E},I?(i.Ob="spawnThread",postMessage(i,E),0):Ft(i))}function ar(i,c,h){return I?f(4,1,i,c,h):0}function or(i,c){if(I)return f(5,1,i,c)}var ir=i=>{for(var c=0,h=0;h<i.length;++h){var x=i.charCodeAt(h);127>=x?c++:2047>=x?c+=2:55296<=x&&57343>=x?(c+=4,++h):c+=3}return c},jt=(i,c,h,x)=>{if(h>>>=0,!(0<x))return 0;var E=h;x=h+x-1;for(var k=0;k<i.length;++k){var V=i.charCodeAt(k);if(55296<=V&&57343>=V){var ae=i.charCodeAt(++k);V=65536+((V&1023)<<10)|ae&1023}if(127>=V){if(h>=x)break;c[h++>>>0]=V}else{if(2047>=V){if(h+1>=x)break;c[h++>>>0]=192|V>>6}else{if(65535>=V){if(h+2>=x)break;c[h++>>>0]=224|V>>12}else{if(h+3>=x)break;c[h++>>>0]=240|V>>18,c[h++>>>0]=128|V>>12&63}c[h++>>>0]=128|V>>6&63}c[h++>>>0]=128|V&63}}return c[h>>>0]=0,h-E},Tr=(i,c,h)=>jt(i,a(),c,h);function Rr(i,c){if(I)return f(6,1,i,c)}function Pr(i,c,h){if(I)return f(7,1,i,c,h)}function kr(i,c,h){return I?f(8,1,i,c,h):0}function Mr(i,c){if(I)return f(9,1,i,c)}function ft(i,c,h){if(I)return f(10,1,i,c,h)}function mt(i,c,h,x){if(I)return f(11,1,i,c,h,x)}function sr(i,c,h,x){if(I)return f(12,1,i,c,h,x)}function ur(i,c,h,x){if(I)return f(13,1,i,c,h,x)}function Br(i){if(I)return f(14,1,i)}function qt(i,c){if(I)return f(15,1,i,c)}function lr(i,c,h){if(I)return f(16,1,i,c,h)}var dr=i=>{if(!Oe)try{if(i(),!Le())try{I?Tn(Ae):Ht(Ae)}catch(c){c instanceof Tt||c=="unwind"||v(1,c)}}catch(c){c instanceof Tt||c=="unwind"||v(1,c)}};function Kt(i){i>>>=0,typeof Atomics.Nb=="function"&&(Atomics.Nb(n(),i>>2,i).value.then(Bt),i+=128,Atomics.store(n(),i>>2,1))}o.__emscripten_thread_mailbox_await=Kt;function Bt(){var i=Nr();i&&(Kt(i),dr(()=>Da()))}o.checkMailbox=Bt;var ht=i=>i%4===0&&(i%100!==0||i%400===0),cr=[0,31,60,91,121,152,182,213,244,274,305,335],pr=[0,31,59,90,120,151,181,212,243,273,304,334];function fr(i,c,h,x,E,k,V,ae){return I?f(17,1,i,c,h,x,E,k,V,ae):-52}function mr(i,c,h,x,E,k,V){if(I)return f(18,1,i,c,h,x,E,k,V)}var Dr=i=>{var c=ir(i)+1,h=_n(c);return h&&Tr(i,h,c),h},$t=[],hr=(i,c)=>{$t.length=0;var h;for(c>>=2;h=a()[i++>>>0];)c+=h!=105&c,$t.push(h==105?n()[c>>>0]:l()[c++>>>1]),++c;return $t},d=i=>{var c=Rn();return i=i(),Vr(c),i};function f(i,c){var h=arguments.length-2,x=arguments;return d(()=>{for(var E=Pn(8*h),k=E>>3,V=0;V<h;V++){var ae=x[2+V];l()[k+V>>>0]=ae}return Ba(i,h,E,c)})}var y=[],S={},A=()=>{if(!N){var i={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:g||"./this.program"},c;for(c in S)S[c]===void 0?delete i[c]:i[c]=S[c];var h=[];for(c in i)h.push(`${c}=${i[c]}`);N=h}return N},N;function G(i,c){if(I)return f(19,1,i,c);i>>>=0,c>>>=0;var h=0;return A().forEach(function(x,E){var k=c+h;for(E=s()[i+4*E>>2>>>0]=k,k=0;k<x.length;++k)r()[E++>>0>>>0]=x.charCodeAt(k);r()[E>>0>>>0]=0,h+=x.length+1}),0}function J(i,c){if(I)return f(20,1,i,c);i>>>=0,c>>>=0;var h=A();s()[i>>2>>>0]=h.length;var x=0;return h.forEach(function(E){x+=E.length+1}),s()[c>>2>>>0]=x,0}function Y(i){return I?f(21,1,i):52}function ee(i,c,h,x){return I?f(22,1,i,c,h,x):52}function Q(i,c,h,x,E){return I?f(23,1,i,c,h,x,E):70}var pe=[null,[],[]];function fe(i,c,h,x){if(I)return f(24,1,i,c,h,x);c>>>=0,h>>>=0,x>>>=0;for(var E=0,k=0;k<h;k++){var V=s()[c>>2>>>0],ae=s()[c+4>>2>>>0];c+=8;for(var te=0;te<ae;te++){var Z=a()[V+te>>>0],ne=pe[i];Z===0||Z===10?((i===1?D:q)(Lt(ne,0)),ne.length=0):ne.push(Z)}E+=ae}return s()[x>>2>>>0]=E,0}var _=[31,29,31,30,31,30,31,31,30,31,30,31],re=[31,28,31,30,31,30,31,31,30,31,30,31];function me(i){var c=Array(ir(i)+1);return jt(i,c,0,c.length),c}var gt=(i,c)=>{r().set(i,c>>>0)};function gr(i,c,h,x){function E(O,ue,ye){for(O=typeof O=="number"?O.toString():O||"";O.length<ue;)O=ye[0]+O;return O}function k(O,ue){return E(O,ue,"0")}function V(O,ue){function ye(Ha){return 0>Ha?-1:0<Ha?1:0}var Dt;return(Dt=ye(O.getFullYear()-ue.getFullYear()))===0&&(Dt=ye(O.getMonth()-ue.getMonth()))===0&&(Dt=ye(O.getDate()-ue.getDate())),Dt}function ae(O){switch(O.getDay()){case 0:return new Date(O.getFullYear()-1,11,29);case 1:return O;case 2:return new Date(O.getFullYear(),0,3);case 3:return new Date(O.getFullYear(),0,2);case 4:return new Date(O.getFullYear(),0,1);case 5:return new Date(O.getFullYear()-1,11,31);case 6:return new Date(O.getFullYear()-1,11,30)}}function te(O){var ue=O.Za;for(O=new Date(new Date(O.$a+1900,0,1).getTime());0<ue;){var ye=O.getMonth(),Dt=(ht(O.getFullYear())?_:re)[ye];if(ue>Dt-O.getDate())ue-=Dt-O.getDate()+1,O.setDate(1),11>ye?O.setMonth(ye+1):(O.setMonth(0),O.setFullYear(O.getFullYear()+1));else{O.setDate(O.getDate()+ue);break}}return ye=new Date(O.getFullYear()+1,0,4),ue=ae(new Date(O.getFullYear(),0,4)),ye=ae(ye),0>=V(ue,O)?0>=V(ye,O)?O.getFullYear()+1:O.getFullYear():O.getFullYear()-1}i>>>=0,c>>>=0,h>>>=0,x>>>=0;var Z=n()[x+40>>2>>>0];x={Kb:n()[x>>2>>>0],Jb:n()[x+4>>2>>>0],cb:n()[x+8>>2>>>0],ib:n()[x+12>>2>>>0],eb:n()[x+16>>2>>>0],$a:n()[x+20>>2>>>0],Wa:n()[x+24>>2>>>0],Za:n()[x+28>>2>>>0],Tb:n()[x+32>>2>>>0],Ib:n()[x+36>>2>>>0],Lb:Z?Ue(Z):""},h=Ue(h),Z={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ne in Z)h=h.replace(new RegExp(ne,"g"),Z[ne]);var he="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),be="January February March April May June July August September October November December".split(" ");Z={"%a":O=>he[O.Wa].substring(0,3),"%A":O=>he[O.Wa],"%b":O=>be[O.eb].substring(0,3),"%B":O=>be[O.eb],"%C":O=>k((O.$a+1900)/100|0,2),"%d":O=>k(O.ib,2),"%e":O=>E(O.ib,2," "),"%g":O=>te(O).toString().substring(2),"%G":O=>te(O),"%H":O=>k(O.cb,2),"%I":O=>(O=O.cb,O==0?O=12:12<O&&(O-=12),k(O,2)),"%j":O=>{for(var ue=0,ye=0;ye<=O.eb-1;ue+=(ht(O.$a+1900)?_:re)[ye++]);return k(O.ib+ue,3)},"%m":O=>k(O.eb+1,2),"%M":O=>k(O.Jb,2),"%n":()=>`
`,"%p":O=>0<=O.cb&&12>O.cb?"AM":"PM","%S":O=>k(O.Kb,2),"%t":()=>"	","%u":O=>O.Wa||7,"%U":O=>k(Math.floor((O.Za+7-O.Wa)/7),2),"%V":O=>{var ue=Math.floor((O.Za+7-(O.Wa+6)%7)/7);if(2>=(O.Wa+371-O.Za-2)%7&&ue++,ue)ue==53&&(ye=(O.Wa+371-O.Za)%7,ye==4||ye==3&&ht(O.$a)||(ue=1));else{ue=52;var ye=(O.Wa+7-O.Za-1)%7;(ye==4||ye==5&&ht(O.$a%400-1))&&ue++}return k(ue,2)},"%w":O=>O.Wa,"%W":O=>k(Math.floor((O.Za+7-(O.Wa+6)%7)/7),2),"%y":O=>(O.$a+1900).toString().substring(2),"%Y":O=>O.$a+1900,"%z":O=>{O=O.Ib;var ue=0<=O;return O=Math.abs(O)/60,(ue?"+":"-")+("0000"+(O/60*100+O%60)).slice(-4)},"%Z":O=>O.Lb,"%%":()=>"%"},h=h.replace(/%%/g,"\0\0");for(ne in Z)h.includes(ne)&&(h=h.replace(new RegExp(ne,"g"),Z[ne](x)));return h=h.replace(/\0\0/g,"%"),ne=me(h),ne.length>c?0:(gt(ne,i),ne.length-1)}function zr(i){try{i()}catch(c){rt(c)}}function xl(i){var c={},h;for(h in i)(function(x){var E=i[x];c[x]=typeof E=="function"?function(){Wr.push(x);try{return E.apply(null,arguments)}finally{Oe||(Wr.pop()===x||rt(),nt&&xt===1&&Wr.length===0&&(xt=0,tt+=1,zr(Ua),typeof Fibers<"u"&&Fibers.Ub()))}}:E})(h);return c}var xt=0,nt=null,Ta=0,Wr=[],Ra={},Pa={},Sl=0,En=null,Cl=[];function Il(){return new Promise((i,c)=>{En={resolve:i,reject:c}})}function Al(){var i=_n(65548),c=i+12;s()[i>>2>>>0]=c,s()[i+4>>2>>>0]=c+65536,c=Wr[0];var h=Ra[c];return h===void 0&&(h=Sl++,Ra[c]=h,Pa[h]=c),c=h,n()[i+8>>2>>>0]=c,i}function El(){var i=n()[nt+8>>2>>>0];return i=j[Pa[i]],--tt,i()}function _l(i){if(!Oe){if(xt===0){var c=!1,h=!1;i((x=0)=>{if(!Oe&&(Ta=x,c=!0,h)){xt=2,zr(()=>Ga(nt)),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.resume(),x=!1;try{var E=El()}catch(ae){E=ae,x=!0}var k=!1;if(!nt){var V=En;V&&(En=null,(x?V.reject:V.resolve)(E),k=!0)}if(x&&!k)throw E}}),h=!0,c||(xt=1,nt=Al(),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.pause(),zr(()=>Va(nt)))}else xt===2?(xt=0,zr(Fa),ka(nt),nt=null,Cl.forEach(x=>dr(x))):rt(`invalid state: ${xt}`);return Ta}}function Ol(i){return _l(c=>{i().then(c)})}ie.gb();var Tl=[null,rr,kt,nr,ar,or,Rr,Pr,kr,Mr,ft,mt,sr,ur,Br,qt,lr,fr,mr,G,J,Y,ee,Q,fe],Rl={r:function(i,c,h){return Ol(async()=>{await o.xb(i,c,h)})},b:function(i,c,h){throw i>>>=0,new An(i).gb(c>>>0,h>>>0),Qe=i,Xe++,Qe},P:function(i){Ma(i>>>0,!w,1,!$,131072,!1),ie.lb()},n:function(i){i>>>=0,I?postMessage({cmd:"cleanupThread",thread:i}):er(i)},K:Mt,g:ar,V:or,F:Rr,H:Pr,y:kr,T:Mr,L:ft,S:mt,p:sr,G:ur,D:Br,U:qt,E:lr,q:()=>!0,B:function(i,c){i>>>=0,i==c>>>0?setTimeout(()=>Bt()):I?postMessage({targetThread:i,cmd:"checkMailbox"}):(i=ie.Qa[i])&&i.postMessage({cmd:"checkMailbox"})},N:function(){return-1},O:Kt,X:function(i){C&&ie.Qa[i>>>0].ref()},u:function(i,c,h){i=c+2097152>>>0<4194305-!!i?(i>>>0)+4294967296*c:NaN,h>>>=0,i=new Date(1e3*i),n()[h>>2>>>0]=i.getUTCSeconds(),n()[h+4>>2>>>0]=i.getUTCMinutes(),n()[h+8>>2>>>0]=i.getUTCHours(),n()[h+12>>2>>>0]=i.getUTCDate(),n()[h+16>>2>>>0]=i.getUTCMonth(),n()[h+20>>2>>>0]=i.getUTCFullYear()-1900,n()[h+24>>2>>>0]=i.getUTCDay(),i=(i.getTime()-Date.UTC(i.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,n()[h+28>>2>>>0]=i},v:function(i,c,h){i=c+2097152>>>0<4194305-!!i?(i>>>0)+4294967296*c:NaN,h>>>=0,i=new Date(1e3*i),n()[h>>2>>>0]=i.getSeconds(),n()[h+4>>2>>>0]=i.getMinutes(),n()[h+8>>2>>>0]=i.getHours(),n()[h+12>>2>>>0]=i.getDate(),n()[h+16>>2>>>0]=i.getMonth(),n()[h+20>>2>>>0]=i.getFullYear()-1900,n()[h+24>>2>>>0]=i.getDay(),c=(ht(i.getFullYear())?cr:pr)[i.getMonth()]+i.getDate()-1|0,n()[h+28>>2>>>0]=c,n()[h+36>>2>>>0]=-(60*i.getTimezoneOffset()),c=new Date(i.getFullYear(),6,1).getTimezoneOffset();var x=new Date(i.getFullYear(),0,1).getTimezoneOffset();i=(c!=x&&i.getTimezoneOffset()==Math.min(x,c))|0,n()[h+32>>2>>>0]=i},w:function(i){i>>>=0;var c=new Date(n()[i+20>>2>>>0]+1900,n()[i+16>>2>>>0],n()[i+12>>2>>>0],n()[i+8>>2>>>0],n()[i+4>>2>>>0],n()[i>>2>>>0],0),h=n()[i+32>>2>>>0],x=c.getTimezoneOffset(),E=new Date(c.getFullYear(),6,1).getTimezoneOffset(),k=new Date(c.getFullYear(),0,1).getTimezoneOffset(),V=Math.min(k,E);return 0>h?n()[i+32>>2>>>0]=+(E!=k&&V==x):0<h!=(V==x)&&(E=Math.max(k,E),c.setTime(c.getTime()+6e4*((0<h?V:E)-x))),n()[i+24>>2>>>0]=c.getDay(),h=(ht(c.getFullYear())?cr:pr)[c.getMonth()]+c.getDate()-1|0,n()[i+28>>2>>>0]=h,n()[i>>2>>>0]=c.getSeconds(),n()[i+4>>2>>>0]=c.getMinutes(),n()[i+8>>2>>>0]=c.getHours(),n()[i+12>>2>>>0]=c.getDate(),n()[i+16>>2>>>0]=c.getMonth(),n()[i+20>>2>>>0]=c.getYear(),i=c.getTime()/1e3,za((pt=i,1<=+Math.abs(pt)?0<pt?+Math.floor(pt/4294967296)>>>0:~~+Math.ceil((pt-+(~~pt>>>0))/4294967296)>>>0:0)),i>>>0},s:fr,t:mr,A:function(i,c,h){function x(Z){return(Z=Z.toTimeString().match(/\(([A-Za-z ]+)\)$/))?Z[1]:"GMT"}i>>>=0,c>>>=0,h>>>=0;var E=new Date().getFullYear(),k=new Date(E,0,1),V=new Date(E,6,1);E=k.getTimezoneOffset();var ae=V.getTimezoneOffset(),te=Math.max(E,ae);s()[i>>2>>>0]=60*te,n()[c>>2>>>0]=+(E!=ae),i=x(k),c=x(V),i=Dr(i),c=Dr(c),ae<E?(s()[h>>2>>>0]=i,s()[h+4>>2>>>0]=c):(s()[h>>2>>>0]=c,s()[h+4>>2>>>0]=i)},e:()=>{rt("")},c:function(i,c,h){return i>>>=0,c=hr(c>>>0,h>>>0),Gt[i].apply(null,c)},l:function(i,c,h){return i>>>=0,c=hr(c>>>0,h>>>0),Gt[i].apply(null,c)},o:function(){},k:function(){return Date.now()},W:()=>{throw tt+=1,"unwind"},C:function(){return 4294901760},d:()=>performance.timeOrigin+performance.now(),i:function(){return C?(Eo(),St(Ao)).cpus().length:navigator.hardwareConcurrency},M:function(i,c,h,x){for(ie.Pb=c>>>0,y.length=h,c=x>>>0>>3,x=0;x<h;x++)y[x]=l()[c+x>>>0];return(0>i?Gt[-i-1]:Tl[i]).apply(null,y)},z:function(i){i>>>=0;var c=a().length;if(i<=c||4294901760<i)return!1;for(var h=1;4>=h;h*=2){var x=c*(1+.2/h);x=Math.min(x,i+100663296);var E=Math;x=Math.max(i,x);e:{E=E.min.call(E,4294901760,x+(65536-x%65536)%65536)-we.buffer.byteLength+65535>>>16;try{we.grow(E),de();var k=1;break e}catch{}k=void 0}if(k)return!0}return!1},Q:G,R:J,J:Ht,h:Y,m:ee,x:Q,j:fe,a:we||o.wasmMemory,I:gr,f:function(i,c,h,x){return gr(i>>>0,c>>>0,h>>>0,x>>>0)}};(function(){function i(h,x){return h=h.exports,h=xl(h),j=h=Pl(h),ie.mb.push(j.Da),Te.unshift(j.Y),Se=x,Jt(),h}var c={a:Rl};if(Or(),o.instantiateWasm)try{return o.instantiateWasm(c,i)}catch(h){q("Module.instantiateWasm callback failed with error: "+h),m(h)}return vt(c,function(h){i(h.instance,h.module)}).catch(m),{}})(),o._OrtInit=(i,c)=>(o._OrtInit=j.Z)(i,c),o._OrtGetLastError=(i,c)=>(o._OrtGetLastError=j._)(i,c),o._OrtCreateSessionOptions=(i,c,h,x,E,k,V,ae,te,Z)=>(o._OrtCreateSessionOptions=j.$)(i,c,h,x,E,k,V,ae,te,Z),o._OrtAppendExecutionProvider=(i,c)=>(o._OrtAppendExecutionProvider=j.aa)(i,c),o._OrtAddFreeDimensionOverride=(i,c,h)=>(o._OrtAddFreeDimensionOverride=j.ba)(i,c,h),o._OrtAddSessionConfigEntry=(i,c,h)=>(o._OrtAddSessionConfigEntry=j.ca)(i,c,h),o._OrtReleaseSessionOptions=i=>(o._OrtReleaseSessionOptions=j.da)(i),o._OrtCreateSession=(i,c,h)=>(o._OrtCreateSession=j.ea)(i,c,h),o._OrtReleaseSession=i=>(o._OrtReleaseSession=j.fa)(i),o._OrtGetInputOutputCount=(i,c,h)=>(o._OrtGetInputOutputCount=j.ga)(i,c,h),o._OrtGetInputName=(i,c)=>(o._OrtGetInputName=j.ha)(i,c),o._OrtGetOutputName=(i,c)=>(o._OrtGetOutputName=j.ia)(i,c),o._OrtFree=i=>(o._OrtFree=j.ja)(i),o._OrtCreateTensor=(i,c,h,x,E,k)=>(o._OrtCreateTensor=j.ka)(i,c,h,x,E,k),o._OrtGetTensorData=(i,c,h,x,E)=>(o._OrtGetTensorData=j.la)(i,c,h,x,E),o._OrtReleaseTensor=i=>(o._OrtReleaseTensor=j.ma)(i),o._OrtCreateRunOptions=(i,c,h,x)=>(o._OrtCreateRunOptions=j.na)(i,c,h,x),o._OrtAddRunConfigEntry=(i,c,h)=>(o._OrtAddRunConfigEntry=j.oa)(i,c,h),o._OrtReleaseRunOptions=i=>(o._OrtReleaseRunOptions=j.pa)(i),o._OrtCreateBinding=i=>(o._OrtCreateBinding=j.qa)(i),o._OrtBindInput=(i,c,h)=>(o._OrtBindInput=j.ra)(i,c,h),o._OrtBindOutput=(i,c,h,x)=>(o._OrtBindOutput=j.sa)(i,c,h,x),o._OrtClearBoundOutputs=i=>(o._OrtClearBoundOutputs=j.ta)(i),o._OrtReleaseBinding=i=>(o._OrtReleaseBinding=j.ua)(i),o._OrtRunWithBinding=(i,c,h,x,E)=>(o._OrtRunWithBinding=j.va)(i,c,h,x,E),o._OrtRun=(i,c,h,x,E,k,V,ae)=>(o._OrtRun=j.wa)(i,c,h,x,E,k,V,ae),o._OrtEndProfiling=i=>(o._OrtEndProfiling=j.xa)(i),o._JsepOutput=(i,c,h)=>(o._JsepOutput=j.ya)(i,c,h),o._JsepGetNodeName=i=>(o._JsepGetNodeName=j.za)(i);var Nr=o._pthread_self=()=>(Nr=o._pthread_self=j.Aa)(),_n=o._malloc=i=>(_n=o._malloc=j.Ba)(i),ka=o._free=i=>(ka=o._free=j.Ca)(i);o.__emscripten_tls_init=()=>(o.__emscripten_tls_init=j.Da)();var Ma=o.__emscripten_thread_init=(i,c,h,x,E,k)=>(Ma=o.__emscripten_thread_init=j.Fa)(i,c,h,x,E,k);o.__emscripten_thread_crashed=()=>(o.__emscripten_thread_crashed=j.Ga)();var Ba=(i,c,h,x)=>(Ba=j.Ha)(i,c,h,x),On=i=>(On=j.Ia)(i),Tn=o.__emscripten_thread_exit=i=>(Tn=o.__emscripten_thread_exit=j.Ja)(i),Da=o.__emscripten_check_mailbox=()=>(Da=o.__emscripten_check_mailbox=j.Ka)(),za=i=>(za=j.La)(i),Wa=(i,c)=>(Wa=j.Ma)(i,c),Rn=()=>(Rn=j.Na)(),Vr=i=>(Vr=j.Oa)(i),Pn=i=>(Pn=j.Pa)(i),Na=o.dynCall_ii=(i,c)=>(Na=o.dynCall_ii=j.Ra)(i,c),Va=i=>(Va=j.Sa)(i),Ua=()=>(Ua=j.Ta)(),Ga=i=>(Ga=j.Ua)(i),Fa=()=>(Fa=j.Va)();o.___start_em_js=1432651,o.___stop_em_js=1432812;function Pl(i){i=Object.assign({},i);var c=x=>()=>x()>>>0,h=x=>E=>x(E)>>>0;return i.__errno_location=c(i.__errno_location),i.pthread_self=c(i.pthread_self),i.malloc=h(i.malloc),i.stackSave=c(i.stackSave),i.stackAlloc=h(i.stackAlloc),i}o.keepRuntimeAlive=Le,o.wasmMemory=we,o.stackAlloc=Pn,o.stackSave=Rn,o.stackRestore=Vr,o.UTF8ToString=Ue,o.stringToUTF8=Tr,o.lengthBytesUTF8=ir,o.ExitStatus=Tt,o.PThread=ie;var Ur;dt=function i(){Ur||La(),Ur||(dt=i)};function La(){function i(){if(!Ur&&(Ur=!0,o.calledRun=!0,!Oe)&&(I||Pt(Te),p(o),o.onRuntimeInitialized&&o.onRuntimeInitialized(),!I)){if(o.postRun)for(typeof o.postRun=="function"&&(o.postRun=[o.postRun]);o.postRun.length;){var c=o.postRun.shift();Me.unshift(c)}Pt(Me)}}if(!(0<Ye))if(I)p(o),I||Pt(Te),startWorker(o);else{if(o.preRun)for(typeof o.preRun=="function"&&(o.preRun=[o.preRun]);o.preRun.length;)Ge.unshift(o.preRun.shift());Pt(Ge),0<Ye||(o.setStatus?(o.setStatus("Running..."),setTimeout(function(){setTimeout(function(){o.setStatus("")},1),i()},1)):i())}}if(o.preInit)for(typeof o.preInit=="function"&&(o.preInit=[o.preInit]);0<o.preInit.length;)o.preInit.pop()();return La(),t.ready}})();typeof Oo=="object"&&typeof Gn=="object"?Gn.exports=_o:typeof define=="function"&&define.amd&&define([],()=>_o)});var Ro=Yt((gf,Ul)=>{Ul.exports='"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>(0,eval)(fs.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason??e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err("worker.js received unknown command "+e.data.cmd),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed&&Module.__emscripten_thread_crashed(),a}}self.onmessage=handleMessage;\n'});var ko,Gl,Fn,Ln,Xr,Po,Fl,Ll,Hl,Mo,Re,Xt=L(()=>{"use strict";ko=So();Gl=To(),Ln=!1,Xr=!1,Po=!1,Fl=()=>{try{return typeof SharedArrayBuffer>"u"?!1:(typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch{return!1}},Ll=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Hl=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Mo=async e=>{if(Ln)return Promise.resolve();if(Xr)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Po)throw new Error("previous call to 'initializeWebAssembly()' failed.");Xr=!0;let t=e.initTimeout,r=e.numThreads,a=e.simd,n=r>1&&Fl(),s=a&&Ll(),u=e.wasmPaths,l=typeof u=="string"?u:void 0,o=Hl(s,n),p=typeof u=="object"?u[o]:void 0,m=!1,b=[];if(t>0&&b.push(new Promise(g=>{setTimeout(()=>{m=!0,g()},t)})),b.push(new Promise((g,v)=>{let $=n?Gl:ko,w={locateFile:(C,I)=>{if(n&&C.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Ro()],{type:"text/javascript"}));if(C.endsWith(".wasm")){if(p)return p;let R=l??I;return o==="ort-wasm-simd.wasm"?R+"ort-wasm-simd.jsep.wasm":o==="ort-wasm-simd-threaded.wasm"?R+"ort-wasm-simd-threaded.jsep.wasm":R+o}return I+C}};if(n)if(typeof Blob>"u")w.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let C=`var ortWasmThreaded=${$.toString()};`;w.mainScriptUrlOrBlob=new Blob([C],{type:"text/javascript"})}$(w).then(C=>{Xr=!1,Ln=!0,Fn=C,g()},C=>{Xr=!1,Po=!0,v(C)})})),await Promise.race(b),m)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Re=()=>{if(Ln&&Fn)return Fn;throw new Error("WebAssembly is not initialized yet.")}});var Be,br,Ie,Jr=L(()=>{"use strict";Xt();Be=(e,t)=>{let r=Re(),a=r.lengthBytesUTF8(e)+1,n=r._malloc(a);return r.stringToUTF8(e,n,a),t.push(n),n},br=(e,t,r,a)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([n,s])=>{let u=t?t+n:n;if(typeof s=="object")br(s,u+".",r,a);else if(typeof s=="string"||typeof s=="number")a(u,s.toString());else if(typeof s=="boolean")a(u,s?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof s}`)})},Ie=e=>{let t=Re(),r=t.stackSave();try{let a=t.stackAlloc(8);t._OrtGetLastError(a,a+4);let n=t.HEAP32[a/4],s=t.HEAPU32[a/4+1],u=s?t.UTF8ToString(s):"";throw new Error(`${e} ERROR_CODE: ${n}, ERROR_MESSAGE: ${u}`)}finally{t.stackRestore(r)}}});var Bo,Do=L(()=>{"use strict";Xt();Jr();Bo=e=>{let t=Re(),r=0,a=[],n=e||{};try{if(e?.logSeverityLevel===void 0)n.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)n.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(n.terminate=!1);let s=0;return e?.tag!==void 0&&(s=Be(e.tag,a)),r=t._OrtCreateRunOptions(n.logSeverityLevel,n.logVerbosityLevel,!!n.terminate,s),r===0&&Ie("Can't create run options."),e?.extra!==void 0&&br(e.extra,"",new WeakSet,(u,l)=>{let o=Be(u,a),p=Be(l,a);t._OrtAddRunConfigEntry(r,o,p)!==0&&Ie(`Can't set a run config entry: ${u} - ${l}.`)}),[r,a]}catch(s){throw r!==0&&t._OrtReleaseRunOptions(r),a.forEach(u=>t._free(u)),s}}});var jl,ql,Kl,Yl,zo,Wo=L(()=>{"use strict";Xt();Jr();jl=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},ql=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Kl=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},Yl=(e,t,r)=>{for(let a of t){let n=typeof a=="string"?a:a.name;switch(n){case"xnnpack":n="XNNPACK";break;case"webnn":if(n="WEBNN",typeof a!="string"){let u=a;if(u?.deviceType){let l=Be("deviceType",r),o=Be(u.deviceType,r);Re()._OrtAddSessionConfigEntry(e,l,o)!==0&&Ie(`Can't set a session config entry: 'deviceType' - ${u.deviceType}.`)}if(u?.powerPreference){let l=Be("powerPreference",r),o=Be(u.powerPreference,r);Re()._OrtAddSessionConfigEntry(e,l,o)!==0&&Ie(`Can't set a session config entry: 'powerPreference' - ${u.powerPreference}.`)}}break;case"webgpu":if(n="JS",typeof a!="string"){let u=a;if(u?.preferredLayout){if(u.preferredLayout!=="NCHW"&&u.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${u.preferredLayout}`);let l=Be("preferredLayout",r),o=Be(u.preferredLayout,r);Re()._OrtAddSessionConfigEntry(e,l,o)!==0&&Ie(`Can't set a session config entry: 'preferredLayout' - ${u.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${n}`)}let s=Be(n,r);Re()._OrtAppendExecutionProvider(e,s)!==0&&Ie(`Can't append execution provider: ${n}.`)}},zo=e=>{let t=Re(),r=0,a=[],n=e||{};Kl(n);try{let s=jl(n.graphOptimizationLevel??"all"),u=ql(n.executionMode??"sequential"),l=typeof n.logId=="string"?Be(n.logId,a):0,o=n.logSeverityLevel??2;if(!Number.isInteger(o)||o<0||o>4)throw new Error(`log serverity level is not valid: ${o}`);let p=n.logVerbosityLevel??0;if(!Number.isInteger(p)||p<0||p>4)throw new Error(`log verbosity level is not valid: ${p}`);let m=typeof n.optimizedModelFilePath=="string"?Be(n.optimizedModelFilePath,a):0;if(r=t._OrtCreateSessionOptions(s,!!n.enableCpuMemArena,!!n.enableMemPattern,u,!!n.enableProfiling,0,l,o,p,m),r===0&&Ie("Can't create session options."),n.executionProviders&&Yl(r,n.executionProviders,a),n.freeDimensionOverrides)for(let[b,g]of Object.entries(n.freeDimensionOverrides)){if(typeof b!="string")throw new Error(`free dimension override name must be a string: ${b}`);if(typeof g!="number"||!Number.isInteger(g)||g<0)throw new Error(`free dimension override value must be a non-negative integer: ${g}`);let v=Be(b,a);t._OrtAddFreeDimensionOverride(r,v,g)!==0&&Ie(`Can't set a free dimension override: ${b} - ${g}.`)}return n.extra!==void 0&&br(n.extra,"",new WeakSet,(b,g)=>{let v=Be(b,a),$=Be(g,a);t._OrtAddSessionConfigEntry(r,v,$)!==0&&Ie(`Can't set a session config entry: ${b} - ${g}.`)}),[r,a]}catch(s){throw r!==0&&t._OrtReleaseSessionOptions(r),a.forEach(u=>t._free(u)),s}}});var Hn,wr,vr,Qr,$r,Zr,jn,De=L(()=>{"use strict";Hn=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},wr=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},vr=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],Qr=e=>{switch(e){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},$r=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Zr=e=>e==="float32"||e==="int32"||e==="int64"||e==="bool"||e==="float16"||e==="uint32",jn=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var Xl,Jl,No,Vo,Uo,Ql,Ee,It=L(()=>{"use strict";De();Xl=["V","I","W","E","F"],Jl=(e,t)=>{console.log(`[${Xl[e]},${new Date().toISOString()}]${t}`)},Uo=(e,t)=>{No=e,Vo=t},Ql=(e,t)=>{let r=$r(e),a=$r(No);r>=a&&Jl(r,typeof t=="function"?t():t)},Ee=(...e)=>{Vo&&Ql(...e)}});var Go,Fo=L(()=>{"use strict";De();Go=(e,t)=>new(Qr(t))(e)});var Lo=L(()=>{"use strict"});var en,Zl,Ho,Kn,qn,jo,qo=L(()=>{"use strict";It();Lo();en=e=>Math.ceil(e/16)*16,Zl=1,Ho=()=>Zl++,Kn=async(e,t,r,a)=>{let n=en(r),s=e.device.createBuffer({size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let u=e.getCommandEncoder();e.endComputePass(),u.copyBufferToBuffer(t,0,s,0,n),e.flush(),await s.mapAsync(GPUMapMode.READ);let l=s.getMappedRange();if(a){let o=a();return o.set(new Uint8Array(l,0,r)),o}else return new Uint8Array(l.slice(0,r))}finally{s.destroy()}},qn=class{constructor(t){this.backend=t;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map}upload(t,r){let a=r.buffer,n=r.byteOffset,s=r.byteLength,u=en(s),l=this.storageCache.get(t);if(!l)throw new Error("gpu data for uploading does not exist");if(l.originalSize!==s)throw new Error(`inconsistent data size. gpu data size=${l.originalSize}, data size=${s}`);let o=this.backend.device.createBuffer({mappedAtCreation:!0,size:u,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),p=o.getMappedRange();new Uint8Array(p).set(new Uint8Array(a,n,s)),o.unmap();let m=this.backend.getCommandEncoder();this.backend.endComputePass(),m.copyBufferToBuffer(o,0,l.gpuData.buffer,0,u),Ee("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(o)}memcpy(t,r){let a=this.storageCache.get(t);if(!a)throw new Error("source gpu data for memcpy does not exist");let n=this.storageCache.get(r);if(!n)throw new Error("destination gpu data for memcpy does not exist");if(a.originalSize!==n.originalSize)throw new Error("inconsistent source and destination gpu data size");let s=en(a.originalSize),u=this.backend.getCommandEncoder();this.backend.endComputePass(),u.copyBufferToBuffer(a.gpuData.buffer,0,n.gpuData.buffer,0,s)}registerExternalBuffer(t,r,a){let n;if(a){if(n=this.externalBuffers.get(a),n===void 0)throw new Error("previous buffer is not registered");if(t===a)return Ee("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${n}, buffer is the same, skip.`),n;this.externalBuffers.delete(a)}else n=Ho();return this.storageCache.set(n,{gpuData:{id:n,type:0,buffer:t},originalSize:r}),this.externalBuffers.set(t,n),Ee("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${n}, registered.`),n}unregisterExternalBuffer(t){let r=this.externalBuffers.get(t);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(t),Ee("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let a=en(t),n,s=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,u=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(s||u){let o=s?this.freeBuffers:this.freeUniformBuffers,p=o.get(a);p||(p=[],o.set(a,p)),p.length>0?n=p.pop():n=this.backend.device.createBuffer({size:a,usage:r})}else n=this.backend.device.createBuffer({size:a,usage:r});let l={id:Ho(),type:0,buffer:n};return this.storageCache.set(l.id,{gpuData:l,originalSize:t}),Ee("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${l.id}`),l}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r=this.storageCache.get(t);if(!r)throw new Error("releasing data does not exist");return Ee("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(t,r){let a=this.storageCache.get(t);if(!a)throw new Error("data does not exist");await Kn(this.backend,a.gpuData.buffer,a.originalSize,r)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();this.buffersForUploadingPending=[];for(let t of this.buffersPending)(t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(t.size).push(t):(t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(t.size).push(t):t.destroy();this.buffersPending=[]}dispose(){this.freeBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map}},jo=(...e)=>new qn(...e)});var Yn,se,Pe=L(()=>{"use strict";Yn=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this._cacheKey||(this._cacheKey=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this._cacheKey}},se=e=>new Yn(e)});var Xn,at,z,Nt,tn,rn,nn,ge=L(()=>{"use strict";Xn=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},at=class{static calcShape(t,r,a=!1){let n=t.length,s=r.length;if(n===0)return r;if(s===0)return t;let u=Math.max(t.length,r.length),l=new Array(u);if(a){if(n<2||s<2)return;let o=Xn.calcMatMulShape([t[n-2],t[n-1]],[r[s-2],r[s-1]]);if(o===void 0)return;[l[u-2],l[u-1]]=o}for(let o=a?3:1;o<=u;o++){let p=n-o<0?1:t[n-o],m=s-o<0?1:r[s-o];if(p!==m&&p>1&&m>1)return;l[u-o]=Math.max(p,m)}return l}static isValidBroadcast(t,r){let a=t.length,n=r.length;if(a>n)return!1;for(let s=1;s<=a;s++)if(t[a-s]!==1&&t[a-s]!==r[n-s])return!1;return!0}},z=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,a){let n=1;for(let s=r;s<a;s++){if(t[s]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");n*=t[s]}return n}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let a=new Array(r);a[r-1]=1,a[r-2]=t[r-1];for(let n=r-3;n>=0;--n)a[n]=a[n+1]*t[n+1];return a}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(a=>this.normalizeAxis(a,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(a=>t[a]):t.slice().reverse()}static padShape(t,r){let a=t.length;return t.map((n,s)=>n+r[s]+r[s+a])}static areEqual(t,r){return t.length!==r.length?!1:t.every((a,n)=>a===r[n])}},Nt=class e{static adjustPoolAttributes(t,r,a,n,s,u){if(!t&&a.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let l=0;l<r.length-2;l++)l>=a.length?a.push(r[l+2]):a[l]=r[l+2];for(let l=0;l<a.length;l++)if(l<n.length){if(n[l]<0)throw new Error("strides should be greater than or equal to 1")}else n.push(1);for(let l=0;l<a.length;l++)if(l<s.length){if(s[l]<0)throw new Error("dilations should be greater than or equal to 1")}else s.push(1);for(let l=0;l<a.length*2;l++)if(l<u.length){if(u[l]<0)throw new Error("pad should be greater than or equal to 1")}else u.push(0);for(let l=0;l<a.length;l++){if(a[l]<=0)throw new Error("kernel shapes need to be greater than 0");if(u[l]>=a[l]||u[l+a.length]>=a[l])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,a,n,s,u,l){if(l){if(s.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(n.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let o=0;o<t.length-2;o++)e.adjustPadAndReturnShape(t[o+(u?1:2)],r[o],a[o],n[o],s,o,o+t.length-2,l)}}static computePoolOutputShape(t,r,a,n,s,u,l){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let o=[r[0],r[1]];return e.computeShapeHelper(t,r,o,a,n,s,u,l),o}static computeConvOutputShape(t,r,a,n,s,u,l){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let o=[t[0],r[0]];return e.computeShapeHelper(!1,t,o,a,n,s,u,l),o}static computeShapeHelper(t,r,a,n,s,u,l,o){if(t)for(let p=0;p<r.length-2;p++)a.push(1);else for(let p=0;p<r.length-2;p++)a.push(e.adjustPadAndReturnShape(r[p+2],n[p],s[p],u[p],l,p,p+r.length-2,o))}static adjustPadAndReturnShape(t,r,a,n,s,u,l,o){let p=a*(n-1)+1;if(o&&o!=="NOTSET")switch(o){case"VALID":return s[u]=0,s[l]=0,Math.floor((t-p)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(a!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let b=((t+r-1)/r-1)*r+n-t;return s[u]=Math.floor(o==="SAME_LOWER"?(b+1)/2:b/2),s[l]=b-s[u],Math.floor((t+b-n)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+s[u]+s[l]-p)/r+1)}},tn=class{static getShapeOfGemmResult(t,r,a,n,s){if(t.length!==2||a.length!==2)throw new Error("shape need to be of size 2");let u,l,o;r?(u=t[1],l=t[0]):(u=t[0],l=t[1]);let p=-1;if(n?(o=a[0],p=1):(o=a[1],p=0),a[p]!==l)throw new Error("dimension mismatch");if(u<=0||o<=0||l<=0)throw new Error("invalid shape specified");if(s&&!at.isValidBroadcast(s,[u,o]))throw new Error("gemm: invalid bias shape for broadcast");return[u,o,l]}},rn=-34028234663852886e22,nn=34028234663852886e22});var ed,Ko,ke,Qn,bt,Ze,Vt,At,Yo,F,X,Jn,Xo,Zn,Jo,ve=L(()=>{"use strict";De();ge();ed=64,Ko=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},ke=(e,t=1)=>{let r=Ko(e,t);return typeof r=="string"?r:r[0]},Qn=e=>[{type:"uint32",data:e},{type:"uint32",data:z.computeStrides(e)}],bt=e=>e%4===0?4:e%2===0?2:1,Ze=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,Vt=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}f(${r})`,At=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,Yo=(e,t,r,a,n)=>{let s=typeof r=="number",u=s?r:r.length,l=[...new Array(u).keys()],o=u<2?"u32":u<=4?`vec${u}<u32>`:`array<u32, ${u}>`,p=Ko(t,n),m=typeof p=="string"?p:p[1],b=typeof p=="string"?p:p[0],g={indices:o,value:m,storage:b,tensor:t},v=U=>typeof U=="string"?U:`${U}u`,$={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},w=s?"uniforms.":"",C=`${w}${e}_shape`,I=`${w}${e}_strides`,R="";for(let U=0;U<u-1;U++)R+=`
    let dim${U} = current / ${I}[${U}];
    let rest${U} = current % ${I}[${U}];
    indices[${U}] = dim${U};
    current = rest${U};
    `;R+=`indices[${u-1}] = current;`;let M=u<2?"":`
  fn o2i_${e}(offset: u32) -> ${g.indices} {
    var indices: ${g.indices};
    var current = offset;
    ${R}
    return indices;
  }`,P=U=>($.offsetToIndices=!0,u<2?U:`o2i_${e}(${U})`),B=[];if(u>=2)for(let U=u-1;U>=0;U--)B.push(`${I}[${U}] * (indices[${U}])`);let T=u<2?"":`
  fn i2o_${e}(indices: ${g.indices}) -> u32 {
    return ${B.join("+")};
  }`,W=U=>($.indicesToOffset=!0,u<2?U:`i2o_${e}(${U})`),H=(...U)=>u===0?"0u":`${g.indices}(${U.map(v).join(",")})`,K=(U,ce)=>u<2?`${U}`:`${U}[${ce}]`,le=(U,ce,de)=>u<2?`${U}=${de};`:`${U}[${ce}]=${de};`,D={},q=(U,ce)=>{$.broadcastedIndicesToOffset=!0;let de=`${ce.name}broadcastedIndicesTo${e}Offset`;if(de in D)return`${de}(${U})`;let We=[];for(let Ge=u-1;Ge>=0;Ge--){let Te=ce.indicesGet("outputIndices",Ge+ce.rank-u);We.push(`${K(I,Ge)} * (${Te} % ${K(C,Ge)})`)}return D[de]=`fn ${de}(outputIndices: ${ce.type.indices}) -> u32 {
             return ${We.length>0?We.join("+"):"0u"};
           }`,`${de}(${U})`},xe=(U,ce)=>(()=>{if(g.storage===g.value)return`${e}[${U}]=${ce};`;if(g.storage==="vec2<u32>"&&g.value==="i32")return`${e}[${U}]=vec2<u32>(u32(${ce}), select(0u, 0xFFFFFFFFu, ${ce} < 0));`;if(g.storage==="vec2<u32>"&&g.value==="u32")return`${e}[${U}]=vec2<u32>(u32(${ce}), 0u);`;if(g.storage==="u32"&&g.value==="vec4<bool>")return`${e}[${U}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ce}));`;throw new Error(`not supported combination of storage type ${g.storage} and value type ${g.value} yet`)})(),oe=U=>(()=>{if(g.storage===g.value)return`${e}[${U}]`;if(g.storage==="vec2<u32>"&&g.value==="i32")return`i32(${e}[${U}].x)`;if(g.storage==="vec2<u32>"&&g.value==="u32")return`u32(${e}[${U}].x)`;if(g.storage==="u32"&&g.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${U}] & 0xFFu), bool(${e}[${U}] & 0xFF00u), bool(${e}[${U}] & 0xFF0000u), bool(${e}[${U}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${g.storage} and value type ${g.value} yet`)})(),we=u<2?"":`
  fn get_${e}ByIndices(indices: ${g.indices}) -> ${m} {
    return ${oe(`i2o_${e}(indices)`)};
  }`,j=u<2?"":(()=>{let U=l.map(de=>`d${de}: u32`).join(", "),ce=l.map(de=>`d${de}`).join(", ");return`
  fn get_${e}(${U}) -> ${m} {
    return get_${e}ByIndices(${H(ce)});
  }`})(),Se=(...U)=>{if(U.length!==u)throw new Error(`indices length must be ${u}`);let ce=U.map(v).join(",");return u===0?oe("0u"):u===1?oe(ce[0]):($.get=!0,$.getByIndices=!0,$.indicesToOffset=!0,`get_${e}(${ce})`)},Oe=U=>u<2?oe(U):($.getByIndices=!0,$.indicesToOffset=!0,`get_${e}ByIndices(${U})`),Ae=u<2?"":`
  fn set_${e}ByIndices(indices: ${g.indices}, value: ${m}) {
    ${xe(`i2o_${e}(indices)`,"value")}
  }`,_e=u<2?"":(()=>{let U=l.map(de=>`d${de}: u32`).join(", "),ce=l.map(de=>`d${de}`).join(", ");return`
  fn set_${e}(${U}, value: ${m}) {
    set_${e}ByIndices(${H(ce)}, value);
  }`})();return{impl:()=>{let U=[];return s||(U.push(`const ${C} = ${g.indices}(${r.join(",")});`),U.push(`const ${I} = ${g.indices}(${z.computeStrides(r).join(",")});`)),$.offsetToIndices&&U.push(M),$.indicesToOffset&&U.push(T),$.broadcastedIndicesToOffset&&Object.values(D).forEach(ce=>U.push(ce)),$.set&&U.push(_e),$.setByIndices&&U.push(Ae),$.get&&U.push(j),$.getByIndices&&U.push(we),U.join(`
`)},type:g,offsetToIndices:P,indicesToOffset:W,broadcastedIndicesToOffset:q,indices:H,indicesGet:K,indicesSet:le,set:(...U)=>{if(U.length!==u+1)throw new Error(`indices length must be ${u}`);let ce=U[u];if(typeof ce!="string")throw new Error("value must be string");let de=U.slice(0,u).map(v).join(",");return u===0?xe("0u",ce):u===1?xe(de[0],ce):($.set=!0,$.setByIndices=!0,$.indicesToOffset=!0,`set_${e}(${de}, ${ce})`)},setByOffset:xe,setByIndices:(U,ce)=>u<2?xe(U,ce):($.setByIndices=!0,$.indicesToOffset=!0,`set_${e}ByIndices(${U}, ${ce});`),get:Se,getByOffset:oe,getByIndices:Oe,usage:a?"input":"output",name:e,strides:I,shape:C,rank:u}},F=(e,t,r,a=1)=>Yo(e,t,r,!0,a),X=(e,t,r,a=1)=>Yo(e,t,r,!1,a),Jn=class{constructor(t){this.normalizedDispatchGroup=t;this.indicesHelpers=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=ed){let r=typeof t=="number"?t:t[0],a=typeof t=="number"?1:t[1],n=typeof t=="number"?1:t[2],s=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,u=s?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_index) local_index : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>`,l=s?"let global_idx = global_id.x;":`let global_idx = (workgroup_id.z * ${this.normalizedDispatchGroup[0]*this.normalizedDispatchGroup[1]}u +
          workgroup_id.y * ${this.normalizedDispatchGroup[0]}u + workgroup_id.x) * ${r*a*n}u + local_index;`;return`@compute @workgroup_size(${r}, ${a}, ${n})
  fn main(${u}) {
    ${l}
  `}declareVariable(t,r){this.indicesHelpers.push(t),t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:t.type.indices}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:t.type.indices});let a=t.usage==="input"?"read":"read_write",n=t.type.storage;return`@group(0) @binding(${r}) var<storage, ${a}> ${t.name}: array<${n}>;`}declareVariables(...t){return t.map(r=>this.declareVariable(r,this.variableIndex++)).join(`
`)}registerUniform(t,r){return this.uniforms.push({name:t,type:r}),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:r,type:a}of this.uniforms)t.push(`${r}:${a}`);return`
      struct Uniforms { ${t.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.indicesHelpers.map(t=>t.impl()).join(`
`)}},Xo=e=>new Jn(e),Zn=(e,t)=>{let r=e.length,a=[];for(let n=0;n<r;n++){let s=r-1-n,u=e[s]||1;(t[t.length-1-n]||1)>1&&u===1&&a.unshift(s)}return a},Jo=e=>e<=4});var td,Qo,rd,nd,Et,Zo,ei,xr=L(()=>{"use strict";ge();Pe();ve();td=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},Qo=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,rd=(e,t)=>z.sortBasedOnPerm(e,Qo(e.length,t)),nd=(e,t,r,a)=>{let n=[];n.push(`fn perm(i: ${a.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`);for(let s=0;s<t;++s)n.push(r.indicesSet("a",e[s],`i[${s}]`));return n.push("return a;}"),n.join(`
`)},Et=(e,t)=>{let r=e.dataType,a=e.dims.length,n=Qo(a,t),s=Jo(a),u=rd(e.dims,n),l=s?u.length:u,o=s?a:e.dims,p=X("output",r,l),m=F("a",r,o),b=g=>`
  ${g.registerUniform("output_size","u32").declareVariables(m,p)}

  ${nd(n,a,m,p)}

  ${g.mainStart()}
    ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${p.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${p.setByOffset("global_idx",m.getByIndices("aIndices"))}
  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:s?["rank"]:["dims"]},getRunData:g=>{let v=z.size(u);return{outputs:[{dims:u,dataType:g[0].dataType}],dispatchGroup:{x:Math.ceil(v/64)},programUniforms:s?[{type:"uint32",data:v},...Qn(g[0].dims),...Qn(u)]:[{type:"uint32",data:v}]}},getShaderSource:b}},Zo=(e,t)=>{td(e.inputs),e.compute(Et(e.inputs[0],t.perm))},ei=e=>se({perm:e.perm})});var ad,od,id,sd,ud,ld,dd,cd,pd,fd,ot,ti,ri,ni,ai,oi,ii,si,ui,li,di,ci=L(()=>{"use strict";ge();ve();an();xr();ad={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},od={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},id={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},sd={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},ud=(e,t)=>{let r=[];for(let a=t-e;a<t;++a)r.push(a);return r},ld=(e,t)=>{let r=[],a=e.length;for(let s=0;s<a;s++)t.indexOf(s)===-1&&r.push(e[s]);let n=t.map(s=>e[s]);return[r,n]},dd=(e,t)=>{let r=e.length+t.length,a=[],n=0;for(let s=0;s<r;s++)t.indexOf(s)===-1?a.push(e[n++]):a.push(1);return a},cd=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},pd=(e,t)=>{let r=[];if(!cd(e,t)){for(let a=0;a<t;++a)e.indexOf(a)===-1&&r.push(a);e.forEach(a=>r.push(a))}return r},fd=(e,t,r,a,n,s,u)=>{let l=r[0].dims,o=z.size(s),p=z.size(u),m=F("_A",r[0].dataType,l),b=X("output",n,s),g=32,v=`
          var<workgroup> aBestValues : array<${b.type.storage}, ${g}>;
       `;return{name:e,shaderCache:t,getShaderSource:w=>`
        ${w.registerUniform("reduceSize","u32").declareVariables(m,b)}
        ${v}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${w.mainStart(g)}
          let local_idx = local_id.x;

          let outputIndex = global_idx / ${g};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = ${b.type.storage}(${id[a]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${g}) {
           let candidate = ${b.type.storage}(${m.getByOffset("offset + k")});
           bestValue = ${ad[a]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${g}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${od[a]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${b.setByOffset("outputIndex",`${a==="mean"?`bestValue / ${b.type.storage}(uniforms.reduceSize)`:`${sd[a]}`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:s,dataType:n}],dispatchGroup:{x:o},programUniforms:[{type:"uint32",data:p}]})}},ot=(e,t,r,a)=>{let n=e.inputs.length===1?r:ea(e.inputs,r),s=n.axes;s.length===0&&!n.noopWithEmptyAxes&&(s=e.inputs[0].dims.map((v,$)=>$));let u=z.normalizeAxes(s,e.inputs[0].dims.length),l=u,o=e.inputs[0],p=pd(l,e.inputs[0].dims.length);p.length>0&&(o=e.compute(Et(e.inputs[0],p),{inputs:[0],outputs:[-1]})[0],l=ud(l.length,o.dims.length));let[m,b]=ld(o.dims,l),g=m;n.keepDims&&(g=dd(m,u)),e.compute(fd(t,{hint:n.cacheKey,inputDependencies:["type"]},[o],a,e.inputs[0].dataType,g,b),{inputs:[o]})},ti=(e,t)=>{ot(e,"ReduceMeanShared",t,"mean")},ri=(e,t)=>{ot(e,"ReduceL1Shared",t,"l1")},ni=(e,t)=>{ot(e,"ReduceL2Shared",t,"l2")},ai=(e,t)=>{ot(e,"ReduceLogSumExpShared",t,"logSumExp")},oi=(e,t)=>{ot(e,"ReduceMaxShared",t,"max")},ii=(e,t)=>{ot(e,"ReduceMinShared",t,"min")},si=(e,t)=>{ot(e,"ReduceProdShared",t,"prod")},ui=(e,t)=>{ot(e,"ReduceSumShared",t,"sum")},li=(e,t)=>{ot(e,"ReduceSumSquareShared",t,"sumSquare")},di=(e,t)=>{ot(e,"ReduceLogSumShared",t,"logSum")}});var it,md,on,ea,st,hd,gd,yd,bd,wd,vd,$d,xd,Sd,Cd,ut,pi,fi,mi,hi,gi,yi,bi,wi,vi,$i,et,an=L(()=>{"use strict";ge();Pe();ve();ci();it=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},md=e=>["","",`var value = ${e.getByOffset("inputOffset")};`,""],on=(e,t,r,a,n,s,u=!1,l=!1)=>{let o=[],p=r[0].dims,m=z.normalizeAxes(n,r[0].dims.length),b=!l&&m.length===0;p.forEach((W,H)=>{b||m.indexOf(H)>=0?u&&o.push(1):o.push(W)});let g=[],v=F("_A",r[0].dataType,p),$=X("output",s,o),w=a(v,$,m),C=`inputOffset = ${v.indicesToOffset("inputIndices")};`,I=`let ${C};`,R=`var ${C};`,M=w[1]===""?"":R,P=(w[1]===""?I:C)+`
`+w[2];for(let W=0,H=0;W<r[0].dims.length;W++)b||m.indexOf(W)>=0?(u&&H++,P=`for(var j${W}: u32 = 0; j${W} < ${r[0].dims[W]}; j${W}++) {
                ${w[2].includes("lastIndex")?`let lastIndex = j${W};`:""}
                ${v.indicesSet("inputIndices",W,`j${W}`)}
                ${P}
              }`):(g.push(`${v.indicesSet("inputIndices",W,$.indicesGet("outputIndices",H))};`),H++);let B=z.size(o);return{name:e,shaderCache:t,getShaderSource:W=>`
        ${W.declareVariables(v,$)}

        ${W.mainStart()}
          ${W.guardAgainstOutOfBoundsWorkgroupSizes(B)}
          var inputIndices: ${v.type.indices};
          let outputIndices = ${$.offsetToIndices("global_idx")};

          ${g.join(`
`)}
          ${w[0]}       // init ops for reduce max/min
          ${M}
          ${w[1]}
          ${P}
          ${w[3]}
          ${w.length===4?$.setByOffset("global_idx","value"):w.slice(4).join(`
`)}
        }`,getRunData:()=>({outputs:[{dims:o,dataType:s}],dispatchGroup:{x:Math.ceil(B/64)}})}},ea=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(a=>r.push(Number(a))),se({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},st=(e,t,r,a)=>{let n=e.inputs,s=n.length===1?r:ea(n,r);e.compute(on(t,{hint:s.cacheKey},[n[0]],s.noopWithEmptyAxes&&s.axes.length===0?md:a,s.axes,n[0].dataType,s.keepDims,s.noopWithEmptyAxes),{inputs:[0]})},hd=(e,t)=>{it(e.inputs),st(e,"ReduceLogSum",t,(a,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${a.getByOffset("inputOffset")};`,"value = log(value);"])},gd=(e,t)=>{it(e.inputs),st(e,"ReduceL1",t,(a,n)=>[`var value = ${n.type.storage}(0);`,"",`value += abs(${a.getByOffset("inputOffset")});`,""])},yd=(e,t)=>{it(e.inputs),st(e,"ReduceL2",t,(a,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${a.getByOffset("inputOffset")}; value += (t * t);`,"value = sqrt(value);"])},bd=(e,t)=>{it(e.inputs),st(e,"ReduceLogSumExp",t,(a,n)=>[`var value = ${n.type.storage}(0);`,"",`value += exp(${a.getByOffset("inputOffset")});`,"value = log(value);"])},wd=(e,t)=>{it(e.inputs),st(e,"ReduceMax",t,(a,n,s)=>{let u=[];for(let l=0;l<a.rank;l++)(s.indexOf(l)>=0||s.length===0)&&u.push(a.indicesSet("inputIndices",l,0));return[`${u.join(`
`)}`,`var value = ${a.getByOffset("inputOffset")};`,`value = max(value, ${a.getByOffset("inputOffset")});`,""]})},vd=(e,t)=>{it(e.inputs),st(e,"ReduceMean",t,(a,n,s)=>{let u=1;for(let l=0;l<a.rank;l++)(s.indexOf(l)>=0||s.length===0)&&(u*=e.inputs[0].dims[l]);return["var sum = f32(0);","",`sum += f32(${a.getByOffset("inputOffset")});`,`let value = ${n.type.value}(sum / ${u});`]})},$d=(e,t)=>{it(e.inputs),st(e,"ReduceMin",t,(a,n,s)=>{let u=[];for(let l=0;l<a.rank;l++)(s.indexOf(l)>=0||s.length===0)&&u.push(`inputIndices[${l}] = 0;`);return[`${u.join(`
`)}`,`var value = ${a.getByOffset("inputOffset")};`,`value = min(value, ${a.getByOffset("inputOffset")});`,""]})},xd=(e,t)=>{it(e.inputs),st(e,"ReduceProd",t,(a,n)=>[`var value = ${n.type.storage}(1);`,"",`value *= ${a.getByOffset("inputOffset")};`,""])},Sd=(e,t)=>{it(e.inputs),st(e,"ReduceSum",t,(a,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${a.getByOffset("inputOffset")};`,""])},Cd=(e,t)=>{it(e.inputs),st(e,"ReduceSumSquare",t,(a,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${a.getByOffset("inputOffset")}; value += t * t;`,""])},ut=(e,t,r)=>{if(t.length===0)return!!r;let a=1,n=1;for(let s=0;s<t.length;s++)t.indexOf(s)===-1?a*=e[s]:n*=e[s];return n<32&&a>1024},pi=(e,t)=>{ut(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?vd(e,t):ti(e,t)},fi=(e,t)=>{ut(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?gd(e,t):ri(e,t)},mi=(e,t)=>{ut(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?yd(e,t):ni(e,t)},hi=(e,t)=>{ut(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?bd(e,t):ai(e,t)},gi=(e,t)=>{ut(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?wd(e,t):oi(e,t)},yi=(e,t)=>{ut(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?$d(e,t):ii(e,t)},bi=(e,t)=>{ut(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?xd(e,t):si(e,t)},wi=(e,t)=>{ut(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Sd(e,t):ui(e,t)},vi=(e,t)=>{ut(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Cd(e,t):li(e,t)},$i=(e,t)=>{ut(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?hd(e,t):di(e,t)},et=e=>se(e)});var xi,Si,Ci,Ii,ta,Ai=L(()=>{"use strict";De();Pe();an();xi=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},Si=(e,t)=>se({axis:t.axis,keepDims:t.keepDims,selectLastIndex:t.selectLastIndex}),Ci=(e,t)=>{xi(e.inputs);let r=(n,s,u)=>{let l=[];for(let o=0;o<n.rank;o++)(u.indexOf(o)>=0||u.length===0)&&l.push(`inputIndices[${o}] = 0;`);return[`${l.join(`
`)}`,`var value = ${n.getByOffset("inputOffset")};
var bestIndex : i32 = 0;`,`if (${n.getByOffset("inputOffset")} ${t.selectLastIndex>0?"<=":"<"} value) {
         value = ${n.getByOffset("inputOffset")};
         bestIndex = i32(lastIndex);
       }`,"",s.setByOffset("global_idx","bestIndex")]},a=e.inputs.length===1?t:Si(e.inputs,t);e.compute(on("ArgMin",{hint:a.cacheKey},[e.inputs[0]],r,[a.axis],7,a.keepDims),{inputs:[0]})},Ii=(e,t)=>{xi(e.inputs);let r=(n,s,u)=>{let l=[];for(let o=0;o<n.rank;o++)(u.indexOf(o)>=0||u.length===0)&&l.push(`inputIndices[${o}] = 0;`);return[`${l.join(`
`)}`,`var value = ${n.getByOffset("inputOffset")};
var bestIndex : i32 = 0;`,`if (${n.getByOffset("inputOffset")} ${t.selectLastIndex>0?">=":">"} value) {
         value = ${n.getByOffset("inputOffset")};
         bestIndex = i32(lastIndex);
       }`,"",s.setByOffset("global_idx","bestIndex")]},a=e.inputs.length===1?t:Si(e.inputs,t);e.compute(on("argMax",{hint:a.cacheKey},[e.inputs[0]],r,[a.axis],7,a.keepDims),{inputs:[0]})},ta=e=>se(e)});var Id,Ad,Ei,_i=L(()=>{"use strict";ge();ve();Id=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Ad=e=>{let t=e[0].dims,r=e[0].dims[2],a=z.size(t)/4,n=e[0].dataType,s=F("input",n,t,4),u=F("bias",n,[r],4),l=F("residual",n,t,4),o=X("output",n,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:m=>`
  const channels = ${r}u / 4;
  ${m.declareVariables(s,u,l,o)}

  ${m.mainStart()}
    ${m.guardAgainstOutOfBoundsWorkgroupSizes(a)}
    let value = ${s.getByOffset("global_idx")}
      + ${u.getByOffset("global_idx % channels")} + ${l.getByOffset("global_idx")};
    ${o.setByOffset("global_idx","value")}
  }`}},Ei=e=>{Id(e.inputs),e.compute(Ad(e.inputs))}});var Ed,$e,Oi,Ti,Ri,Pi,ki,Mi,Bi,Di,zi,ra,_d,Wi,Ni,Vi,Ui,sn,Gi,un,Fi,Li,Hi,ji,qi,Ki,Yi,Xi,Ji,Qi,Zi,es,ts,rs,ns,as,os,na=L(()=>{"use strict";De();ge();Pe();ve();Ed=(e,t,r,a,n,s)=>{let u=Math.ceil(t/4),l="";typeof n=="string"?l=`${n}(a)`:l=n("a");let o=F("inputData",r,[u],4),p=X("outputData",a,[u],4);return`
      ${e.registerUniform("vec_size","u32").declareVariables(o,p)}

  ${s??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${o.getByOffset("global_idx")};
    ${p.setByOffset("global_idx",l)}
  }`},$e=(e,t,r,a,n,s=e.dataType)=>({name:t,shaderCache:{hint:n,inputDependencies:["type"]},getShaderSource:u=>Ed(u,z.size(e.dims),e.dataType,s,r,a),getRunData:u=>({outputs:[{dims:e.dims,dataType:s}],dispatchGroup:{x:Math.ceil(z.size(u[0].dims)/64/4)},programUniforms:[{type:"uint32",data:Math.ceil(z.size(e.dims)/4)}]})}),Oi=e=>{e.compute($e(e.inputs[0],"Abs","abs"))},Ti=e=>{e.compute($e(e.inputs[0],"Acos","acos"))},Ri=e=>{e.compute($e(e.inputs[0],"Acosh","acosh"))},Pi=e=>{e.compute($e(e.inputs[0],"Asin","asin"))},ki=e=>{e.compute($e(e.inputs[0],"Asinh","asinh"))},Mi=e=>{e.compute($e(e.inputs[0],"Atan","atan"))},Bi=e=>{e.compute($e(e.inputs[0],"Atanh","atanh"))},Di=e=>se(e),zi=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute($e(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},ra=(e,t)=>{let r=ke(e.inputs[0].dataType);e.compute($e(e.inputs[0],"Clip",a=>`clamp(${a}, clip_min_, clip_max_)`,`
    const clip_min_: vec4<${r}> = vec4(${r}(${t.min}));
    const clip_max_: vec4<${r}> = vec4(${r}(${t.max}));
`,t.cacheKey),{inputs:[0]})},_d=e=>{let t=e.length>=2?e[1].getFloat32Array()[0]:rn,r=e.length>=3?e[2].getFloat32Array()[0]:nn;return se({min:t,max:r})},Wi=e=>{let t=_d(e.inputs);ra(e,t)},Ni=e=>{e.compute($e(e.inputs[0],"Ceil","ceil"))},Vi=e=>{e.compute($e(e.inputs[0],"Cos","cos"))},Ui=e=>{e.compute($e(e.inputs[0],"Cosh","cosh"))},sn=e=>se(e),Gi=(e,t)=>{e.compute($e(e.inputs[0],"Elu",r=>`elu_vf32(${r})`,`
  const elu_alpha_: f32 = f32(${t.alpha});

  fn elu_f32(a: f32) -> f32 {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<f32>) -> vec4<f32> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,t.cacheKey))},un=(e,t="f32")=>`
const r0: ${t} = 0.3275911;
const r1: ${t} = 0.254829592;
const r2: ${t} = -0.284496736;
const r3: ${t} = 1.421413741;
const r4: ${t} = -1.453152027;
const r5: ${t} = 1.061405429;

fn erf_vf32(v: ${e}) -> ${e} {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,Fi=e=>{let t=ke(e.inputs[0].dataType);e.compute($e(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,un(`vec4<${t}>`,t)))},Li=e=>{e.compute($e(e.inputs[0],"Exp","exp"))},Hi=e=>{e.compute($e(e.inputs[0],"Floor","floor"))},ji=e=>{let t=ke(e.inputs[0].dataType);e.compute($e(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,un(`vec4<${t}>`,t)))},qi=(e,t)=>{e.compute($e(e.inputs[0],"LeakyRelu",r=>`select(leaky_relu_alpha_ * ${r}, ${r}, ${r} >= vec4<f32>(0.0))`,`const leaky_relu_alpha_: f32 = f32(${t.alpha});`,t.cacheKey))},Ki=e=>{e.compute($e(e.inputs[0],"Not",t=>`!${t}`))},Yi=e=>{e.compute($e(e.inputs[0],"Neg",t=>`-${t}`))},Xi=e=>{e.compute($e(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},Ji=e=>{e.compute($e(e.inputs[0],"Relu",t=>`select(vec4<f32>(0.0), ${t}, ${t} > vec4<f32>(0.0))`))},Qi=e=>{e.compute($e(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},Zi=e=>{e.compute($e(e.inputs[0],"Sin","sin"))},es=e=>{e.compute($e(e.inputs[0],"Sinh","sinh"))},ts=e=>{e.compute($e(e.inputs[0],"Sqrt","sqrt"))},rs=e=>{e.compute($e(e.inputs[0],"Tan","tan"))},ns=e=>{e.compute($e(e.inputs[0],"Tanh","tanh"))},as=(e,t)=>(e.compute($e(e.inputs[0],"ThresholdedRelu",r=>`select(vec4<f32>(0.0), ${r}, ${r} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_: vec4<f32> = vec4<f32>(${t.alpha});`,t.cacheKey)),0),os=e=>{e.compute($e(e.inputs[0],"Log","log"))}});var Td,Rd,is,ss=L(()=>{"use strict";ge();ve();na();Td=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Rd=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=F("input",e[0].dataType,e[0].dims,4),a=F("bias",e[0].dataType,[e[0].dims[2]],4),n=X("output",e[0].dataType,t,4),s=z.size(t)/4;return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:l=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${l.declareVariables(r,a,n)}

  ${un("vec4f")}

  ${l.mainStart()}
    ${l.guardAgainstOutOfBoundsWorkgroupSizes(s)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${n.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},is=e=>{Td(e.inputs),e.compute(Rd(e.inputs))}});var Pd,kd,lt,us,ls,ds,cs,ps,fs,ms,hs,gs,ys,bs=L(()=>{"use strict";De();ge();ve();Pd=(e,t,r,a,n,s,u,l,o,p,m)=>{let b=z.size(a),g=Math.ceil(b/4),v,$;typeof u=="string"?v=$=(P,B)=>`${u}((${P}),(${B}))`:typeof u=="function"?v=$=u:(v=u.scalar,$=u.vector);let w="",C=X("outputData",p,a,4),I=F("aData",l,t,4),R=F("bData",o,r,4);if(s){let P=B=>{let T=z.computeStrides(B),W=[];for(let H=B.length-1;H>=0;H--){let K=C.indicesGet("outputIndices",H+a.length-B.length);W.push(`${T[H]}u * (${K} % ${B[H]}u)`)}return W.length>0?W.join("+"):"0u"};w=`
          fn calcOffsetA(outputIndices: ${C.type.indices}) -> u32 {
            return ${P(t)};
          }

          fn calcOffsetB(outputIndices: ${C.type.indices}) -> u32 {
            return ${P(r)};
          }
        `}let M;if(n)if(s){let P=z.size(t)===1,B=z.size(r)===1;P||B?M=C.setByOffset("global_idx",$(P?`${I.type.value}(${I.getByOffset("0")}.x)`:I.getByOffset("global_idx"),B?`${R.type.value}(${R.getByOffset("0")}.x)`:R.getByOffset("global_idx"))):M=`
            let outputIndices = ${C.offsetToIndices("global_idx * 4u")};
            let offsetA = calcOffsetA(outputIndices);
            let offsetB = calcOffsetB(outputIndices);
            ${C.setByOffset("global_idx",$(I.getByOffset("offsetA / 4u"),R.getByOffset("offsetB / 4u")))}
          `}else M=C.setByOffset("global_idx",$(I.getByOffset("global_idx"),R.getByOffset("global_idx")));else{if(!s)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let P=(B,T,W="")=>{let H=`aData[indexA${T}][componentA${T}]`,K=`bData[indexB${T}][componentB${T}]`;return`
            let outputIndices${T} = ${C.offsetToIndices(`global_idx * 4u + ${T}u`)};
            let offsetA${T} = calcOffsetA(outputIndices${T});
            let offsetB${T} = calcOffsetB(outputIndices${T});
            let indexA${T} = offsetA${T} / 4u;
            let indexB${T} = offsetB${T} / 4u;
            let componentA${T} = offsetA${T} % 4u;
            let componentB${T} = offsetB${T} % 4u;
            ${B}[${T}] = ${W}(${v(H,K)});
          `};p===9?M=`
            var data = vec4<u32>(0);
            ${P("data",0,"u32")}
            ${P("data",1,"u32")}
            ${P("data",2,"u32")}
            ${P("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:M=`
            ${P("outputData[global_idx]",0)}
            ${P("outputData[global_idx]",1)}
            ${P("outputData[global_idx]",2)}
            ${P("outputData[global_idx]",3)}
          `}return`
        ${e.declareVariables(I,R,C)}

        ${m??""}
        ${w}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes(g)}
        ${M}
      }`},kd=(e,t,r,a,n,s,u=r.dataType)=>{let l=!z.areEqual(r.dims,a.dims),o=r.dims,p=z.size(r.dims),m=!1;if(l){let b=at.calcShape(r.dims,a.dims,!1);if(!b)throw new Error("Can't perform binary op on the given tensors");o=b,p=z.size(o);let g=z.size(r.dims)===1,v=z.size(a.dims)===1,$=1;for(let w=1;w<o.length;w++){let C=r.dims[r.dims.length-w]??1,I=a.dims[a.dims.length-w]??1;if(C===I)$*=C;else break}($%4===0||g||v)&&(m=!0)}else m=!0;return{name:e,shaderCache:{hint:t},getShaderSource:b=>Pd(b,r.dims,a.dims,o,m,l,n,r.dataType,a.dataType,u,s),getRunData:()=>({outputs:[{dims:o,dataType:u}],dispatchGroup:{x:Math.ceil(p/64/4)}})}},lt=(e,t,r,a,n,s)=>{e.compute(kd(t,n??"",e.inputs[0],e.inputs[1],r,a,s))},us=e=>{lt(e,"Add",(t,r)=>`${t}+${r}`)},ls=e=>{lt(e,"Div",(t,r)=>`${t}/${r}`)},ds=e=>{lt(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},cs=e=>{lt(e,"Mul",(t,r)=>`${t}*${r}`)},ps=e=>{let t=F("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;lt(e,"Pow",{scalar:(a,n)=>`pow_custom(${a},${n})`,vector:(a,n)=>`pow_vector_custom(${a},${n})`},`
    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {
      if (b == ${t}(0.0)) {
        return ${t}(1.0);
      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {
        return ${t}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {
      // TODO: implement vectorized pow
      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},fs=e=>{lt(e,"Sub",(t,r)=>`${t}-${r}`)},ms=e=>{lt(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},hs=e=>{lt(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},gs=e=>{lt(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},ys=e=>{lt(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}});var Bd,Dd,zd,Wd,ws,vs,$s=L(()=>{"use strict";ge();Pe();ve();Bd=e=>{if(!e||e.length<1)throw new Error("too few inputs");let t=e[0].dataType,r=e[0].dims.length;for(let a of e){if(a.dataType!==t)throw new Error("input tensors should be one type");if(a.dims.length!==r)throw new Error("input tensors should have the same shape")}},Dd=e=>`
  fn calculateInputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,zd=(e,t)=>{let r=e.length,a=[];for(let n=0;n<r;++n){let s=t.setByOffset("global_idx",e[n].getByIndices("indices"));r===1?a.push(s):n===0?a.push(`if (inputIndex == ${n}u) { ${s} }`):n===r-1?a.push(`else { ${s} }`):a.push(`else if (inputIndex == ${n}) { ${s} }`)}return a.join(`
`)},Wd=(e,t)=>{let r=e[0].dims.slice();if(t>=r.length||t<-1*r.length)throw new Error("axis specified for concat doesn't match input dimensionality");let a=t<0?r.length+t:t,n=r.slice(0);for(let v=1;v<e.length;v++){let $=e[v].dims.slice();for(let w=0;w<r.length;w++)if(w===a)n[a]+=$[w];else if(r[w]!==$[w])throw new Error("non concat dimensions must match")}let s=z.size(n),u=new Array(e.length),l=new Array(e.length),o=e[0].dataType,p=0;for(let v=0;v<e.length;++v)p+=e[v].dims[a],u[v]=p,l[v]=F(`input${v}`,o,e[v].dims);let m=X("output",o,n),b=m.indicesGet("indices",a),g=v=>`
  ${v.declareVariables(...l,m)}

  const sizeInConcatAxis = array<u32, ${u.length}>(${u.map($=>`${$}u`).join(",")});
  ${Dd(u.length)}

  ${v.mainStart()}
    ${v.guardAgainstOutOfBoundsWorkgroupSizes(s)}

    var indices = ${m.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${b});
    if (inputIndex != 0u) {
      ${b} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${zd(l,m)}
  }`;return{name:"Concat",shaderCache:{hint:`${t}`},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:g}},ws=(e,t)=>{Bd(e.inputs),e.compute(Wd(e.inputs,t.axis))},vs=e=>se({axis:e.axis})});var ze,ln,dn,cn=L(()=>{"use strict";ze=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},ln=(e,t=!1,r=!1,a=3)=>"",dn=(e,t)=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      // TODO uncomment the following line when activation is supported above.
      // ${t?"value = activation(value, coords);":""}
      `});var pn,aa=L(()=>{"use strict";pn=`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    outShapeStrides.x, outShapeStrides.y, outShapeStrides.z, 1));
}
`});var fn,mn,Sr=L(()=>{"use strict";ge();fn=(e,t=!1)=>{switch(e.activation){case"Relu":return{activationFunction:"",applyActivation:"value = max(value, 0.0);"};case"Sigmoid":return{activationFunction:"",applyActivation:"value = (1.0 / (1.0 + exp(-value)));"};case"Clip":return{activationFunction:`const clip_min_=f32(${e.clipMin});const clip_max_=f32(${e.clipMax});`,applyActivation:t?"value = clamp(value, vec4(clip_min_), vec4(clip_max_));":"value = clamp(value, clip_min_, clip_max_);"};default:return{activationFunction:"",applyActivation:""}}},mn=e=>{let t=e?.activation||"";if(t==="Clip"){let[r,a]=e?.activation_params||[rn,nn];return{activation:t,clipMax:a,clipMin:r,activationCacheKey:`${t}:${r},${a}`}}return{activation:t,activationCacheKey:t}}});var Nd,Vd,Cr,xs,Ud,Ir,Gd,hn,Ar=L(()=>{"use strict";ge();ve();Sr();cn();Nd=(e,t)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${t?", batchIndices":""});
        `,Vd=(e,t)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,Cr=(e,t,r="f32",a,n=!1,s=32,u=!1,l=32)=>{let o=t[1]*e[1],p=t[0]*e[0],m=n?o:s,b=n?s:o,g=m/t[0],v=s/t[1];if(!((n&&g===4&&e[1]===4||!n&&(g===3||g===4))&&m%t[0]===0&&s%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${n} is true, innerElementSize ${g} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${g} must be 3 or 4.
  tileAWidth ${m} must be divisible by workgroupSize[0]${t[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${g}<${r}>, ${m/g}>, ${b}>;
var<workgroup> mm_Bsub: array<array<vec4<${r}>, ${p/e[0]}>, ${s}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${g};
const tileInner = ${s};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${u?"0":"i32(globalId.z)"};
  ${a?`let batchIndices = ${a.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${o};

  let numTiles = ${u?`${Math.ceil(l/s)}`:"(dimInner - 1) / tileInner + 1"};
  var kStart = ${u?`i32(globalId.z) * ${l}`:"0"};

  var acc: array<vec4<${r}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${v};
  for (var t = 0; t < numTiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${Nd(n,a)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${v}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${a?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${g===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${Vd(n,g)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},xs=(e,t)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${t?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${t?", batchIndices":""});
            `,Ud=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Ir=(e,t,r="f32",a,n=!1,s=32,u=!1,l=32,o=!1)=>{let p=e[1]*t[1],m=e[0]*t[0],b=n?p:s,g=n?s:p;if(!(g%t[1]===0&&b%t[0]===0&&s%t[1]===0))throw new Error(`tileAHight ${g} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${b} must be divisible by workgroupSize[0]${t[0]}, tileInner ${s} must be divisible by workgroupSize[1]${t[1]}`);let v=g/t[1],$=b/t[0],w=s/t[1],C=o?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${p};
    let globalColStart = i32(workgroupId.x) * ${m};

    // Loop over shared dimension.
    for (var t = 0; t < numTiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${g}; inputRow = inputRow + ${t[1]}) {
        for (var inputCol = localCol; inputCol < ${b}; inputCol = inputCol + ${t[0]}) {
          ${xs(n,a)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${t[1]}) {
            for (var inputCol = localCol; inputCol < ${m}; inputCol = inputCol + ${t[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${a?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${r}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${t[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${t[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${p};

let tileRowA = i32(localId.y) * ${v};
let tileColA = i32(localId.x) * ${$};
let tileRowB = i32(localId.y) * ${w};
// Loop over shared dimension.
for (var t = 0; t < numTiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${v}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${$}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${xs(n,a)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${w}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${a?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${r}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${Ud(n)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${r}, ${b}>, ${g}>;
  var<workgroup> mm_Bsub : array<array<${r}, ${m}>, ${s}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${s};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${u?"0":"i32(globalId.z)"};
    ${a?`let batchIndices = ${a.offsetToIndices("u32(batch)")};`:""}
    let numTiles = ${u?`${Math.ceil(l/s)}`:"(dimInner - 1) / tileInner + 1"};
    var kStart = ${u?`i32(globalId.z) * ${l}`:"0"};

    var acc : array<array<${r}, colPerThread>, rowPerThread>;

    // Without this initialization strange values show up in acc.
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = 0.0;
      }
    }
    ${C}
  }
`},Gd=(e,t,r,a,n,s=!1)=>{let u=n[0],l=n[1],o=n[2],p=a[0],m=a[1],b=a[2],g=a[3],v=Zn(u,o),$=Zn(l,o),w=ke(a[0].type.tensor),C=()=>{let M=m.rank,P=p.rank,B=`var aIndices: ${m.type.indices};`;for(let T=M-2-1,W=P-1;T>=0;T--,W--)B+=`
aIndices[${T}] = ${P>1?`batchIndices[${W}]`:"batchIndices"};`;return v.forEach(T=>{B+=`
aIndices[${T}] = 0;`}),B+=`
aIndices[${M-2}] = u32(row);
                   aIndices[${M-1}] = u32(colIn);`,B},I=()=>{let M=b.rank,P=p.rank,B=`var bIndices: ${b.type.indices};`;for(let T=M-2-1,W=P-1;T>=0;T--,W--)B+=`
bIndices[${T}] = ${P>1?`batchIndices[${W}]`:"batchIndices"};`;return $.forEach(T=>{B+=`
bIndices[${T}] = 0;`}),B+=`
bIndices[${M-2}] = u32(row);
                   bIndices[${M-1}] = u32(colIn);`,B};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${p.type.indices}) -> ${ze(e,w)} {
      var value = ${ze(e,w)}(0.0);
      let col = colIn * ${e};
      if(row < dimAOuter && col < dimInner)
      {
        ${C()}
        value = ${m.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${p.type.indices}) -> ${ze(e,w)} {
      var value = ${ze(e,w)}(0.0);
      let col = colIn * ${e};
      if(row < dimInner && col < dimBOuter)
      {
        ${I()}
        value = ${b.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${ze(e,w)}) {
      let col = colIn * ${e};
      if (row < dimAOuter && col < dimBOuter) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${t?`value = value + ${s?"bias[colIn]":`${ze(e,w)}(bias[row])`};`:""}
        ${r}
        ${g.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},hn=(e,t,r,a,n=!1)=>{let s=e[0].dims,u=e[1].dims,l=s.slice(0,-2),o=u.slice(0,-2),p=a?a.slice(0,-2):r.slice(0,-2),m=F("batchDims",e[0].dataType,p),b=[m],g=[l,o,p],v=z.size(p),$=s[s.length-2],w=s[s.length-1],C=u[u.length-1],I=w%4===0&&C%4===0,{activationFunction:R,applyActivation:M}=fn(t,I),P=$<=8?[4,1,1]:[4,4,1],B=[8,8,1],T=[Math.ceil(C/B[0]/P[0]),Math.ceil($/B[1]/P[1]),Math.ceil(v/B[2]/P[2])],W=ke(e[0].dataType),H=I?4:1,K=F("a",e[0].dataType,[...l,$,w/H],H),le=F("b",e[1].dataType,[...o,w,C/H],H),D=X("result",e[0].dataType,[v,$,C/H],H);b.push(K),b.push(le),b.push(D);let q=[K,le],xe=e.length>2,oe=Gd(H,xe,M,b,g,n);if(xe){let j=n?H:1;q.push(F("bias",e[2].dataType,e[2].dims,j))}let we=j=>`
  const dimAOuter: i32 = ${$};
  const dimBOuter: i32 = ${C};
  const dimInner: i32 = ${w};
  ${j.declareVariables(...q,D)}
  ${R}
  ${oe}
  ${I?Cr(P,B,W,m):Ir(P,B,W,m)}
                   ${m.impl()}`;return{name:"MatMul",shaderCache:{hint:t.activationCacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:T[0],y:T[1],z:T[2]}}),getShaderSource:we}}});var Fd,Ss,Cs=L(()=>{"use strict";It();ge();ve();cn();aa();Ar();Fd=(e,t,r,a,n=!1,s,u=!1,l=4,o=4,p=4,m="f32")=>{let b=le=>{switch(le){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${m}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${le} is not supported.`)}},g=le=>{switch(le){case 1:return"return w[row * wShape[3] + colIn];";case 4:return"return w[row * wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${le} is not supported.`)}},v=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,$=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,w=e?"xShape[1]":"xShape[2]",C=e?"xShape[2]":"xShape[3]",I=e?"row":"col",R=e?"col":"row",M=`
    let inChannels = wShape[2];
    let outWidth = ${e?"outShape[2]":"outShape[3]"};
    let outRow = ${I} / outWidth;
    let outCol = ${I} % outWidth;

    let WRow = ${R} / (filterDims[1] * inChannels);
    let WCol = ${R} / inChannels % filterDims[1];
    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];
    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];
    let xCh = ${R} % inChannels;
    var resData = ${ze(l,m)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${w} && xCol >= 0 && xCol < ${C}) {
      ${v}
      let xIndex = getIndexFromCoords4D(coord, xShape);
      ${b(l)}
    }
    return resData;`,P=e?t&&a?`
    let col = colIn * ${l};
    ${M}`:`
    let col = colIn * ${l};
    if (row < dimAOuter && col < dimInner) {
      ${M}
    }
    return ${ze(l,m)}(0.0);`:a&&r?`
    let col = colIn * ${l};
    ${M}`:`
    let col = colIn * ${l};
    if (row < dimInner && col < dimBOuter) {
      ${M}
    }
    return ${ze(l,m)}(0.0);`,B=`${g(o)}`,T=ze(p,m),W=e?ze(l,m):ze(o,m),H=e?ze(o,m):ze(l,m);return`
    ${ln(s,u,p===4,4)}
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${W} {
      ${e?P:B}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${H} {
      ${e?B:P}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${T}) {
      let col = colIn * ${p};
      if (row < dimAOuter && col < dimBOuter)
      {
      var value = valueIn;
      let outWidth = ${e?"outShape[2]":"outShape[3]"};
      ${$}
      ${dn(n,s)}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},Ss=(e,t,r,a,n,s,u,l)=>{let o=t.format==="NHWC",p=o?e[0].dims[3]:e[0].dims[1],m=r[0],b=o?r[2]:r[3],g=o?r[1]:r[2],v=o?r[3]:r[1],$=o&&(p%4===0||p%3===0)&&v%4===0,w=o?v:b*g,C=o?b*g:v,I=[8,8,1],R=a<=8?[4,1,1]:[4,4,1],M=[Math.ceil(w/I[0]/R[0]),Math.ceil(C/I[1]/R[1]),Math.ceil(m/I[2]/R[2])];Ee("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${M}`);let P=$?o&&p%4!==0?3:4:R[0],B=I[1]*R[1],T=I[0]*R[0],W=Math.max(I[0]*P,I[1]),H=a%B===0,K=n%T===0,le=s%W===0,D=$?[P,4,4]:[1,1,1],q=ke(e[0].dataType),xe=[`@group(0) @binding(0) var<storage, read> x: array<${$&&P===4?`vec4<${q}>`:q}>;`,`@group(0) @binding(1) var<storage, read> w: array<${$?`vec4<${q}>`:q}>;`],oe=`
      fn setOutputAtIndex(flatIndex : i32, value : ${$?`vec4<${q}>`:q}) {
        result[flatIndex] = ${$?`vec4<${q}>`:q}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${$?`vec4<${q}>`:q}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${$?"/ 4":""}, value);
      }`;return u&&(xe.push(`@group(0) @binding(2) var<storage, read> bias: array<${$?`vec4<${q}>`:q}>;`),oe+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${$?`vec4<${q}>`:q} {
          return bias[coords.${o?"w":"y"}${$?"/ 4":""}];
        }`),{name:"Conv2DMatMul",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:M[0],y:M[1],z:M[2]}}),getShaderSource:()=>`
        ${pn}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${xe.join("")}
        @group(0) @binding(${xe.length}) var<storage, read_write> result: array<${$?`vec4<${q}>`:q}>;
        //@group(0) @binding(${xe.length+1}) var<uniform> uniforms: Uniforms;

        const xShape : vec4<i32> = vec4<i32>(${e[0].dims.join(",")});
        const wShape : vec4<i32> = vec4<i32>(${e[1].dims.join(",")});
        const outShape : vec4<i32> = vec4<i32>(${r.join(",")});
        const outShapeStrides : vec3<i32> = vec3<i32>(${z.computeStrides(r).slice(0,3).join(",")});
        const filterDims : vec2<i32> = vec2<i32>(${t.kernelShape[0]}, ${t.kernelShape[1]});
        const pad : vec2<i32> = vec2<i32>(${t.pads[0]}, ${t.pads[1]});
        const stride : vec2<i32> = vec2<i32>(${t.strides[0]}, ${t.strides[1]});
        const dilation : vec2<i32> = vec2<i32>(${t.dilations[0]}, ${t.dilations[1]});
        const dimAOuter : i32 = ${a};
        const dimBOuter : i32 = ${n};
        const dimInner : i32 = ${s};
        ${oe}
        ${Fd(o,H,K,le,u,t.activation.toLowerCase(),!1,D[0],D[1],D[2],q)}
            ${$?Cr(R,I,q,void 0,!o,W):Ir(R,I,q,void 0,!o,W,!1,void 0,l)}`}}});var oa,Is=L(()=>{"use strict";ge();ve();sa();Sr();oa=(e,t,r)=>{let a=e.length>2,n=a?"value += b[output_channel];":"",s=e[0].dims,u=e[1].dims,l=u[0]/t.group,{activationFunction:o,applyActivation:p}=fn(t),m=t.format==="NHWC",b=ia(s,u,t.dilations,t.pads,t.strides,m),g=z.size(b),v=X("output",e[0].dataType,b),$=F("x",e[0].dataType,s),w=F("w",e[1].dataType,u),C=[$,w];a&&C.push(F("b",e[2].dataType,e[2].dims));let I=R=>`
  const strides: vec2<u32> = vec2(${t.strides[0]}u, ${t.strides[1]}u);
  const pads: vec2<u32> = vec2(${t.pads[0]}u, ${t.pads[1]}u);

  ${R.declareVariables(...C,v)}

  ${o}

  ${R.mainStart()}
    ${R.guardAgainstOutOfBoundsWorkgroupSizes(g)}

    let outputIndices = ${v.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${m?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${m?1:2}], outputIndices[${m?2:3}]) * strides - pads;
    let group_id: u32 = output_channel / ${l}u;

    var value: ${v.type.value} = ${v.type.value}(0);
    for (var wInChannel: u32 = 0u; wInChannel < ${u[1]}u; wInChannel++) {
      let input_channel = group_id * ${u[1]}u + wInChannel;
      for (var wHeight: u32 = 0u; wHeight < ${u[2]}u; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * ${t.dilations[0]}u;

        if (xHeight < 0u || xHeight >= ${s[m?1:2]}u) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < ${u[3]}u; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * ${t.dilations[1]}u;
          if (xWidth < 0u || xWidth >= ${s[m?2:3]}u) {
            continue;
          }

          let xVal = ${m?$.get("batch","xHeight","xWidth","input_channel"):$.get("batch","input_channel","xHeight","xWidth")};
          let wVal = ${w.get("output_channel","wInChannel","wHeight","wWidth")};
          value += xVal*wVal;
        }
      }
    }
    ${n}
    ${p}
    ${v.setByOffset("global_idx","value")}
  }`;return{name:"GroupedConv",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r?r(b):b,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(g/64)}}),getShaderSource:I}}});var ia,As,Ld,Es,ua,Hd,jd,la,sa=L(()=>{"use strict";ge();Pe();Cs();Ar();Is();Sr();xr();ia=(e,t,r,a,n,s)=>{let u=e[0],l=e.slice(s?1:2,s?3:4),o=l.length,p=t[0],b=t.slice(2).map(($,w)=>$+($-1)*(r[w]-1)),v=l.map(($,w)=>$+a[w]+a[w+o]).map(($,w)=>Math.floor(($-b[w]+n[w])/n[w]));return v.splice(0,0,u),v.splice(s?3:1,0,p),v},As=[2,3,1,0],Ld=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],a=e[1].dims[1]*t.group;if(r!==a)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==n*2)throw new Error(`pads should be ${n*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},Es=(e,t)=>{let r=e.kernelShape.slice();for(let s=2;s<t[1].dims.length;++s)r[s-2]===0&&(r[s-2]=t[1].dims[s]);let a=e.pads.slice();Nt.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,a,e.format==="NHWC",e.autoPad);let n=Object.assign({},e);return Object.assign(n,{kernelShape:r,pads:a,cacheKey:e.cacheKey}),n},ua=e=>{let t=mn(e),r=e.format,a=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],n=e.dilations,s=e.group,u=e.kernel_shape,l=e.pads,o=e.strides,p=e.w_is_const();return se({autoPad:a,format:r,dilations:n,group:s,kernelShape:u,pads:l,strides:o,wIsConst:p,...t})},Hd=(e,t,r)=>{let a=Es(r,t);if(r.group!==1){e.compute(oa(t,a));return}let n=r.format==="NHWC",s=t.length===3,u=t[0].dims[n?1:2],l=t[0].dims[n?2:3],o=t[0].dims[n?3:1],p=t[1].dims[2],m=t[1].dims[3],b=ia(t[0].dims,t[1].dims,r.dilations,a.pads,r.strides,n),g=b[n?1:2],v=b[n?2:3],$=b[n?3:1],w=n&&p===u&&m===l&&r.pads[0]===0&&r.pads[1]===0;if(w||p===1&&m===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let T=b[0],W,H,K,le=[];if(n){let D=e.kernelCustomData.wT??e.compute(Et(t[1],As),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=D),w){let q=u*l*o;W=t[0].reshape([1,T,q]),H=D.reshape([1,q,$]),K=[1,T,$]}else W=t[0].reshape([T,u*l,o]),H=D.reshape([1,o,$]),K=[T,g*v,$];le.push(W),le.push(H)}else W=t[0].reshape([T,o,u*l]),H=t[1].reshape([1,$,o]),K=[T,$,g*v],le.push(H),le.push(W);s&&le.push(t[2]),e.compute(hn(le,a,b,K,n),{inputs:le});return}let C=!0,I=e.kernelCustomData.wT??e.compute(Et(t[1],As),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=I);let R=[t[0],I];s&&R.push(t[2]);let M=n?g*v:$,P=n?$:g*v,B=p*m*o;e.compute(Ss(R,a,b,M,P,B,s,C),{inputs:R})},jd=(e,t)=>{let r=t.format==="NHWC",a=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&a.push(e.inputs[2]);let n=[0,t.pads[0],0,t.pads[1]],s=[1].concat(t.strides),u=[1].concat(t.dilations),l=[1].concat(t.kernelShape),o=Es({...t,pads:n,strides:s,dilations:u,kernelShape:l},a);e.compute(oa(a,o,p=>r?[p[0],p[2],p[3]]:[]))},la=(e,t)=>{Ld(e.inputs,t),e.inputs[0].dims.length===3?jd(e,t):Hd(e,e.inputs,t)}});var qd,_s,Os=L(()=>{"use strict";It();ge();cn();aa();Ar();qd=(e,t=!1,r,a=!1,n=4)=>{let s=ze(n,"f32"),u=I=>{switch(I){case 1:return"return W[getIndexFromCoords4D(coord, wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${I} is not supported.`)}},l=e?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,o=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,p=e?"outBackprop[1]":"outBackprop[2]",m=e?"outBackprop[2]":"outBackprop[3]",b=e?"row":"col",g=e?"col":"row",v=`
      let inChannels = ${e?"outBackprop[3]":"outBackprop[1]"};
      let outWidth = ${e?"outShape[2]":"outShape[3]"};
      let outRow = ${b} / outWidth;
      let outCol = ${b} % outWidth;

      let WRow = ${g} / (filterDims[1] * inChannels);
      let WCol = ${g} / inChannels % filterDims[1];
      let xR = f32(outRow - pads[0] + dilation[0] * WRow) / f32(strides[0]);
      let xC = f32(outCol - pads[1] + dilation[1] * WCol) / f32(strides[1]);
      if (xR < 0.0 || xR >= f32(${p}) || fract(xR) > 0.0) {
        return ${s}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${m}) || fract(xC) > 0.0) {
        return ${s}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${g} % inChannels;
      ${l}
      return x[getIndexFromCoords4D(coord, xShape)/${n}];`,$=e?`
      let col = colIn * ${n};
      if (row < dimAOuter && col < dimInner) {
        ${v}
      }
      return ${s}(0.0);`:`
      let col = colIn * ${n};
      if (row < dimInner && col < dimBOuter) {
        ${v}
      }
      return ${s}(0.0);`,w=`
      let col = colIn * ${n};
      let inChannels = ${e?"outBackprop[3]":"outBackprop[1]"};
      let coordX = filterDims.x - 1 - row / (filterDims[1] * inChannels);
      let coordY = filterDims.y - 1 - (row / inChannels) % filterDims[1];
      if (${e?"row < dimInner && col < dimBOuter":"row < dimInner && col < dimAOuter"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${u(n)}
      }
      return ${s}(0.0);
      `;return`
  ${ln(r,a,n===4,4)}
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${s} {
    ${e?$:w}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${s} {
    ${e?w:$}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${s}) {
    let col = colIn * ${n};
    if (row < dimAOuter && col < dimBOuter) {
      var value = valueInput;
      let outWidth = ${e?"outShape[2]":"outShape[3]"};
      ${o}
      ${dn(t,r)}
      result[getIndexFromCoords4D(coords, outShape)/${n}] = value;
    }
  }`},_s=(e,t,r,a,n,s,u,l)=>{let o=t.format==="NHWC",p=o?e[0].dims[3]:e[0].dims[1],m=r[0],b=o?r[2]:r[3],g=o?r[1]:r[2],v=o?r[3]:r[1],$=o?p%4===0&&v%4===0:b%4===0&&v%4===0,w=o?v:b*g,C=o?b*g:v,I=$?[8,8,1]:[w<=4||C<=4?4:16,w>4&&C<=4?4:16,1],R=$?[4,4,1]:[w<=4?1:4,w>4&&C<=4?1:4,1],M=[Math.ceil(w/I[0]/R[0]),Math.ceil(C/I[1]/R[1]),Math.ceil(m/I[2]/R[2])];Ee("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${M}`);let P=$?4:1,B=Math.max(I[0]*P,I[1]),T=[`@group(0) @binding(0) var<storage, read> x: array<${$?"vec4<f32>":"f32"}>;`,"@group(0) @binding(1) var<storage, read> W: array<f32>;"],W="";return u&&(T.push(`@group(0) @binding(2) var<storage, read> bias: array<${$?"vec4<f32>":"f32"}>;`),W+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${$?"vec4<f32>":"f32"} {
          return bias[coords.${o?"w":"y"}${$?"/ 4":""}];
        }`),{name:"Conv2DTransposeMatMul",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:M[0],y:M[1],z:M[2]}}),getShaderSource:()=>`
        ${pn}
        ${T.join(`
`)}
        @group(0) @binding(${T.length}) var<storage, read_write> result: array<${$?"vec4<f32>":"f32"}>;
        const outBackprop : vec4<i32> = vec4<i32>(${e[0].dims.join(",")});
        const xShape : vec4<i32> = vec4<i32>(${e[0].dims.join(",")});
        const wShape : vec4<i32> = vec4<i32>(${e[1].dims.join(",")});
        const outShape : vec4<i32> = vec4<i32>(${r.join(",")});
        const outShapeStrides : vec3<i32> = vec3<i32>(${z.computeStrides(r).slice(0,3).join(",")});
        const filterDims : vec2<i32> = vec2<i32>(${t.kernelShape[o?1:2]}, ${t.kernelShape[o?2:3]});
        const effectiveFilterDims : vec2<i32> = filterDims + vec2<i32>(
              ${t.dilations[0]<=1?0:(t.kernelShape[o?1:2]-1)*(t.dilations[0]-1)},
              ${t.dilations[1]<=1?0:(t.kernelShape[o?2:3]-1)*(t.dilations[1]-1)});
        const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${t.pads[0]+t.pads[2]})/2,
                                         i32(effectiveFilterDims[1]) - 1 - (${t.pads[1]+t.pads[3]})/2);
        const strides : vec2<i32> = vec2<i32>(${t.strides[0]}, ${t.strides[1]});
        const dilation : vec2<i32> = vec2<i32>(${t.dilations[0]}, ${t.dilations[1]});
        const dimAOuter : i32 = ${a};
        const dimBOuter : i32 = ${n};
        const dimInner : i32 = ${s};
        ${W}
        ${qd(o,u,t.activation.toLowerCase(),!1,P)}
        ${$?Cr(R,I,"f32",void 0,!o,B):Ir(R,I,"f32",void 0,!o,B,!1,void 0,l)}`}}});var Kd,da,Ts=L(()=>{"use strict";It();ge();ve();Kd=(e,t,r,a,n,s,u=!1,l)=>{let o=r.format==="NHWC",p=o?1:2,m=o?2:3,b=o?3:1,g=z.size(a),v=u?2:1,$=r.group,w=t[1].dims,C=w[0]/$,I=w[1],R=`
  fn setOutputAtIndex(flatIndex : u32, value : ${u?`vec4<${l}>`:l}) {
    result[flatIndex] = ${u?`vec4<${l}>`:l}(value);
  }`;n&&(R+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${u?`vec4<${l}>`:l} {
      return bias[coords.${o?"w":"y"}${u?"/ 4":""}];
    }`);let M=u?4:1,P=F("W",t[1].dataType,t[1].dims,M),B=F("Dy",t[0].dataType,t[0].dims,M),T=[B,P];n&&T.push(F("bias",t[2].dataType,[a[b]],M));let W=X("result",t[0].dataType,a,M),H=`{
        let batch: u32 = ${s?"global_id.z":"workgroup_id.z"} / outShape[1];
        let r = ${s?"global_id.z":"workgroup_id.z"} % outShape[1];
        let c = ${s?"global_id.y":"workgroup_id.y"} * ${v};
        let d1: u32 = ${s?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${l}>, ${v}>;
        for (var i = 0; i < ${v}; i++) {
          dotProd[i] = vec4<${l}>(0.0);
        }
        for (var wR: u32 = 0; wR < filterDims[0]; wR = wR + 1) {
          var dyR = (${l}(dyCorner.x) + ${l}(wR)) / ${l}(strides.x);
          let wRPerm = filterDims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${l}(outBackprop[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < filterDims[1]; wC = wC + 1) {
            let dyC = (${l}(dyCorner.y) + ${l}(wC)) / ${l}(strides.y);
            let dyC2 = (${l}(dyCorner.y) + 1.0 + ${l}(wC)) / ${l}(strides.y);
            let wCPerm = filterDims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${l}(outBackprop[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${l}(outBackprop[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = outBackprop[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${B.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${l}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${B.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${l}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = outBackprop[${b}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${B.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${l}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = outBackprop[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${B.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${l}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${v}; i = i + 1) {
          let value = dotProd[i] + ${n?"bias[c+i]":"0.0"};
          ${W.set("batch","r","c + i","d1","value")};
        }
      }`,K=`
          let outputIndices = ${W.offsetToIndices("global_idx")};
          let batch = ${W.indicesGet("outputIndices",0)};
          let d1 = ${W.indicesGet("outputIndices",b)};
          let r = ${W.indicesGet("outputIndices",p)};
          let c = ${W.indicesGet("outputIndices",m)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / ${I};
          let wOutChannel = d1 - groupId * ${I};
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = 0.0;
          for (var wR: u32 = 0; wR < effectiveFilterDims.x; wR = wR + 1) {
            if (wR % dilations.x != 0) {
              continue;
            }
            let dyR = (${l}(dyRCorner) + ${l}(wR)) / ${l}(strides[0]);
            let wRPerm = filterDims.x - 1 - wR / dilations.x;
            if (dyR < 0.0 || dyR >= ${l}(outBackprop[${p}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < effectiveFilterDims.y; wC = wC + 1) {
              if (wC % dilations.y != 0) {
                continue;
              }
              let dyC = (${l}(dyCCorner) + ${l}(wC)) / ${l}(strides.y);
              let wCPerm = filterDims.y - 1 - wC / dilations.y;
              if (dyC < 0.0 || dyC >= ${l}(outBackprop[${m}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * ${C};
              for (var d2: u32 = 0; d2 < ${C}; d2 = d2 + 1) {
                let xValue = ${o?B.get("batch","idyR","idyC","inputChannel"):B.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${P.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${n?"bias[d1]":"0.0"};
          ${W.setByOffset("global_idx","value")};
        `;return`
  ${e.declareVariables(...T,W)}
  ${R}
  const outShape : vec4<u32> = vec4<u32>(${a.join(",")});
  const outBackprop : vec4<u32> = vec4<u32>(${t[0].dims.join(",")});
  const strides : vec2<u32> = vec2<u32>(${r.strides[0]}, ${r.strides[1]});
  const filterDims : vec2<u32> = vec2<u32>(${r.kernelShape[o?1:2]}, ${r.kernelShape[o?2:3]});
  const dilations : vec2<u32> = vec2<u32>(${r.dilations[0]}, ${r.dilations[1]});
  const effectiveFilterDims : vec2<u32> = filterDims + vec2<u32>(
          ${r.dilations[0]<=1?0:(r.kernelShape[o?1:2]-1)*(r.dilations[0]-1)},
          ${r.dilations[1]<=1?0:(r.kernelShape[o?2:3]-1)*(r.dilations[1]-1)});
  const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${r.pads[0]+r.pads[2]})/2,
                                     i32(effectiveFilterDims[1]) - 1 - (${r.pads[1]+r.pads[3]})/2);
    ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes(g)};
  ${u?H:K}}`},da=(e,t,r)=>{let a=e.length>2,n=t.outputShape,s=z.size(n),u=[Math.ceil(s/64),1,1];Ee("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${u}`);let l=ke(e[0].dataType);return{name:"ConvTranspose2D",shaderCache:{hint:t.cacheKey},getRunData:()=>({dispatchGroup:{x:u[0],y:u[1],z:u[2]},outputs:[{dims:r?r(n):n,dataType:e[0].dataType}]}),getShaderSource:o=>Kd(o,e,t,n,a,u[1]===1&&u[2]===1,!1,l)}}});var Yd,Xd,Jd,Rs,Ps,Qd,Zd,ec,tc,ks,Ms=L(()=>{"use strict";Pe();Os();Ts();Sr();xr();Yd=(e,t,r,a,n,s)=>(e-1)*t+r+(a-1)*n+1-s,Xd=(e,t,r,a,n)=>{let s=Math.floor(e/2);t==="SAME_UPPER"?(r[a]=s,r[n]=e-s):t==="SAME_LOWER"&&(r[a]=e-s,r[n]=s)},Jd=(e,t,r,a,n,s,u,l,o,p)=>{let m=e.length-2,b=p.length===0;if(o.length===0)for(let $=0;$<m;++$)o.push(0);let g=e[0],v=t[l?3:1]*n;for(let $=0,w=e.length-m-(l?1:0);$<m;++$,++w){let C=e[w],I=b?C*u[$]:p[$],R=Yd(C,u[$],s[$],t[w],r[$],I);Xd(R,a,s,$,$+m),b&&p.push(u[$]*(C-1)+o[$]+(t[w]-1)*r[$]+1-s[$]-s[$+m])}p.splice(0,0,g),p.splice(l?3:1,0,v)},Rs=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((g,v)=>g*v,1)===0){r.length=0;for(let g=2;g<t[1].dims.length;++g)r.push(t[1].dims[g])}let a=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(a?3:1,0,t[1].dims[1]);let n=e.pads.slice(),s=e.outputShape.slice(),u=e.outputPadding.slice(),l=t[0].dims,o=e.dilations.slice();if(o.reduce((g,v)=>g+v,0)===0){let g=t[0].dims.length-2;o=new Array(g).fill(1)}let p=e.strides.slice();if(p.reduce((g,v)=>g+v,0)===0){let g=t[0].dims.length-2;p=new Array(g).fill(1)}Jd(l,r,o,e.autoPad,e.group,n,p,a,u,s);let m=Object.assign({},e),b=e.cacheKey+[r.join("n,"),n.join(","),p.join(","),u.join(","),s.join(","),o.join(",")].join("_");return Object.assign(m,{kernelShape:r,pads:n,outputPadding:u,outputShape:s,dilations:o,strides:p,cacheKey:b}),m},Ps=e=>{let t=mn(e),r=e.format,a=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],n=e.dilations,s=e.group,u=e.kernelShape,l=e.pads,o=e.strides,p=e.wIsConst(),m=e.outputPadding,b=e.outputShape;return se({autoPad:a,format:r,dilations:n,group:s,kernelShape:u,outputPadding:m,outputShape:b,pads:l,strides:o,wIsConst:p,...t})},Qd=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],a=e[1].dims[0];if(r!==a)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let n=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==n))throw new Error("invalid bias");let s=e[0].dims.length-2;if(t.dilations.reduce((m,b)=>m+b,0)>0&&t.dilations.length!==s)throw new Error(`dilations should be ${s}D`);if(t.strides.reduce((m,b)=>m+b,0)>0&&t.strides.length!==s)throw new Error(`strides should be ${s}D`);if(t.pads.reduce((m,b)=>m+b,0)>0&&t.pads.length!==s*2)throw new Error(`pads should be ${s*2}D`);if(t.outputPadding.length!==s&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${s}D`);if(t.kernelShape.reduce((m,b)=>m+b,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},Zd=[2,3,1,0],ec=(e,t,r)=>{let a=Rs(r,t),n=r.format==="NHWC",s=t.length===3;if(a.group!==1){e.compute(da(t,a));return}let u=a.outputShape,l=u[n?1:2],o=u[n?2:3],p=u[n?3:1],m=t[1].dims[2],b=t[1].dims[3],g=t[0].dims[n?3:1],v=n?l*o:p,$=n?p:l*o,w=m*b*g,C=!0,I=e.kernelCustomData.wT??e.compute(Et(t[1],Zd),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=I);let R=[t[0],I];s&&(!n&&t[2].dims.length===1?R.push(t[2].reshape([t[2].dims[0],1,1])):R.push(t[2])),e.compute(_s(R,a,u,v,$,w,s,C),{inputs:R})},tc=(e,t)=>{let r=t.format==="NHWC",a=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];a.length===3&&a.push(e.inputs[2]);let n=t.kernelShape;(n.length===0||n[0]===0)&&(n=[e.inputs[1].dims[2]]);let s=t.dilations;(s.length===0||s[0]===0)&&(s=[1]);let u=t.strides;(u.length===0||u[0]===0)&&(u=[1]);let l=t.pads;l.length===0&&(l=[0,0]),l=[0,l[0],0,l[1]],u=[1].concat(u),s=[1].concat(s),n=[1].concat(n);let o=Rs({...t,pads:l,strides:u,dilations:s,kernelShape:n},a);e.compute(da(a,o,p=>r?[p[0],p[2],p[3]]:[p[0],p[1],p[3]]))},ks=(e,t)=>{Qd(e.inputs,t),e.inputs[0].dims.length===3?tc(e,t):ec(e,e.inputs,t)}});var ca,gn,Bs,rc,nc,pa,fa,ac,Ds,zs,Ws=L(()=>{"use strict";ge();Pe();ve();ca="[a-zA-Z]|\\.\\.\\.",gn="("+ca+")+",Bs="^"+gn+"$",rc="("+gn+",)*"+gn,nc="^"+rc+"$",pa=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let a=this.symbolToIndices.get(t);a===void 0?a=[r]:a.push(r),this.symbolToIndices.set(t,a)}},fa=class{constructor(t,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[a,n]=r.includes("->")?r.split("->",2):[r,""];if(!a.match(RegExp(nc)))throw new Error("Invalid LHS term");if(a.split(",").forEach((l,o)=>{let p=t[o].dims.slice();if(!l.match(RegExp(Bs)))throw new Error("Invalid LHS term");let m=this.processTerm(l,!0,p,o);this.lhs.push(m)}),n==="")n+=[...this.symbolToInfo.entries()].filter(([l,o])=>o.count===1||l==="...").map(([l])=>l).join("");else if(!n.match(RegExp(gn)))throw new Error("Invalid RHS");n.match(RegExp(ca,"g"))?.forEach(l=>{if(l==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let o=this.symbolToInfo.get(l);if(o===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(o.dimValue)}}),this.rhs=this.processTerm(n,!0,this.outputDims)}addSymbol(t,r,a){let n=this.symbolToInfo.get(t);if(n!==void 0){if(n.dimValue!==r&&n.count!==1)throw new Error("Dimension mismatch");n.count++,n.inputIndices.push(a)}else n={count:1,dimValue:r,inputIndices:[a]};this.symbolToInfo.set(t,n)}processTerm(t,r,a,n=-1){let s=a.length,u=!1,l=[],o=0;if(!t.match(RegExp(Bs))&&!r&&t!=="")throw new Error("Invalid LHS term");let p=t.match(RegExp(ca,"g")),m=new pa(n);return p?.forEach((b,g)=>{if(b==="..."){if(u)throw new Error("Only one ellipsis is allowed per input term");u=!0;let v=s-p.length+1;if(v<0)throw new Error("Ellipsis out of bounds");if(l=a.slice(o,o+v),this.hasEllipsis){if(this.ellipsisDims.length!==l.length||this.ellipsisDims.toString()!==l.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=l;else throw new Error("Ellipsis must be specified in the LHS");for(let $=0;$<l.length;$++){let w=String.fromCharCode("0".charCodeAt(0)+g);m.addSymbol(w,g+$),this.addSymbol(w,a[o++],n)}}else m.addSymbol(b,g),this.addSymbol(b,a[o++],n)}),m}},ac=(e,t)=>{let r=e[0].dataType,a=new Array(e.length);for(let M=0;M<e.length;++M)a[M]=F(`input${M}`,r,e[M].dims);let n=t.outputDims,s=z.size(n),u=X("output",r,n),l=[],o=Array.from(t.rhs.symbolToIndices.keys()),p="var prod = 1.0;",m="var sum = 0.0;",b="sum += prod;",g=[],v=[],$=[],w=[],C=t.symbolToInfo.size===o.length;t.symbolToInfo.forEach((M,P)=>{if(o.includes(P)){let B=o.indexOf(P);t.lhs.forEach((T,W)=>{if(M.inputIndices.includes(W)){let H=T.symbolToIndices.get(P);if(H===void 0)throw new Error("Invalid symbol error");H.forEach(K=>{l.push(`${a[W].indicesSet(`input${W}Indices`,K,u.indicesGet("outputIndices",B))}`)})}})}else t.lhs.forEach((B,T)=>{let W=t.symbolToInfo.get(P);if(W===void 0)throw new Error("Invalid symbol error");if(W.inputIndices.includes(T)){let H=B.symbolToIndices.get(P);if(H===void 0)throw new Error("Invalid symbol error");H.forEach(K=>{g.push(`${a[T].indicesSet(`input${T}Indices`,K,`${P}`)}`)}),w.push(`prod *= ${a[T].getByIndices(`input${T}Indices`)};`)}}),v.push(`for(var ${P}: u32 = 0; ${P} < ${t.symbolToInfo.get(P)?.dimValue}; ${P}++) {`),$.push("}")});let I=C?[...l,`let sum = ${a.map((M,P)=>M.getByIndices(`input${P}Indices`)).join(" * ")};`]:[...l,m,...v,...g,p,...w,b,...$],R=M=>`
      ${M.declareVariables(...a,u)}

      ${M.mainStart()}
        ${M.guardAgainstOutOfBoundsWorkgroupSizes(s)}
        var outputIndices = ${u.offsetToIndices("global_idx")};
        ${a.map((P,B)=>`var input${B}Indices: ${a[B].type.indices};`).join(`
`)}
        ${I.join(`
`)};
        ${u.setByOffset("global_idx","sum")};
      }`;return{name:"Einsum",shaderCache:{hint:t.equation},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:R}},Ds=(e,t)=>{let r=new fa(e.inputs,t.equation);e.compute(ac(e.inputs,r))},zs=e=>{let t=e.equation.replace(/\s+/g,"");return se({equation:t})}});var oc,Ns,ic,sc,Vs,Us=L(()=>{"use strict";ge();ve();oc=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),a=r.length<t.length?0:r.length-t.length,n=t.length<r.length?0:t.length-r.length;for(;a<r.length&&n<t.length;++a,++n)if(r[a]!==t[n]&&r[a]!==1&&t[n]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Ns=(e,t)=>{let r=e.length-t.length,a=[];for(let n=0;n<r;++n)a.push(e[n]);for(let n=0;n<t.length;++n)a.push(t[n]===1?e[n+r]:t[n]);return a},ic=(e,t)=>e.length>t.length?Ns(e,t):Ns(t,e),sc=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),a=ic(t,r),n=z.size(a),s=e[0].dataType,u=F("input",s,t),l=X("output",s,a),o=p=>`
  const inputShape = ${u.indices(...t)};
  ${p.declareVariables(u,l)}
  ${p.mainStart()}
  ${p.guardAgainstOutOfBoundsWorkgroupSizes(n)}
    let outputIndices = ${l.offsetToIndices("global_idx")};
    var inputIndices: ${u.type.indices};
    for (var i = 0; i < ${t.length}; i++) {
      if (${u.indicesGet("inputShape","i")} == 1) {
        ${u.indicesSet("inputIndices","i",0)}
      } else {
        ${u.indicesSet("inputIndices","i",l.indicesGet("outputIndices",`i + ${a.length-t.length}`))}
      }
    }
    ${l.setByOffset("global_idx",u.getByIndices("inputIndices"))}
  }`;return{name:"Expand",shaderCache:{hint:`${a}`},getShaderSource:o,getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}})}},Vs=e=>{oc(e.inputs),e.compute(sc(e.inputs),{inputs:[0]})}});var uc,lc,Gs,Fs,Ls=L(()=>{"use strict";ge();Pe();ve();uc=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},lc=(e,t)=>{let r=e[0].dims,a=e[1].dims,n=r.length,s=z.normalizeAxis(t.axis,n),u=r.slice(0);u.splice(s,1,...a);let l=r[s],o=z.size(u),p=F("data",e[0].dataType,e[0].dims),m=F("inputIndices",e[1].dataType,e[1].dims),b=X("output",e[0].dataType,u),g=()=>{let $=a.length,w=`var indicesIndices  = ${m.type.indices}(0);`;for(let C=0;C<$;C++)w+=`${$>1?`indicesIndices[${C}]`:"indicesIndices"} = ${u.length>1?`outputIndices[${s+C}]`:"outputIndices"};`;w+=`
        var idx = ${m.getByIndices("indicesIndices")};
        if (idx < 0) {
          idx = idx + ${l};
        }
        var dataIndices = ${p.type.indices}(0);
      `;for(let C=0,I=0;C<n;C++)C===s?(w+=`${n>1?`dataIndices[${C}]`:"dataIndices"} = u32(idx);`,I+=$):(w+=`${n>1?`dataIndices[${C}]`:"dataIndices"} = ${u.length>1?`outputIndices[${I}]`:"outputIndices"};`,I++);return w},v=$=>`
      ${$.declareVariables(p,m,b)}
      ${$.mainStart()}
        ${$.guardAgainstOutOfBoundsWorkgroupSizes(o)}
        let outputIndices = ${b.offsetToIndices("global_idx")};
        ${g()};
        let value = ${p.getByIndices("dataIndices")};
        ${b.setByOffset("global_idx","value")};
      }`;return{name:"Gather",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:v}},Gs=e=>se({axis:e.axis}),Fs=(e,t)=>{let r=e.inputs;uc(r),e.compute(lc(e.inputs,t))}});var dc,cc,Hs,js,qs=L(()=>{"use strict";ge();Pe();ve();dc=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},cc=(e,t)=>{let r=e[0].dims,a=e[0].dataType,n=r.length,s=z.computeStrides(r),u=z.size(r),l=e[1].dims,o=e[1].dataType,p=z.size(l),m=z.normalizeAxis(t.axis,n),b=r[m],g=l.slice(0),v=z.size(g),$=F("input",a,r),w=F("indices",o,[p]),C=X("output",a,g),I=R=>`
      const inputStrides = array<u32, ${s.length}>(${s.map(M=>`${M}u`).join(",")});
      ${R.declareVariables($,w,C)}
      ${R.mainStart()}
      ${R.guardAgainstOutOfBoundsWorkgroupSizes(v)}

      let outputIndices = ${C.offsetToIndices("global_idx")};

      var idx = ${w.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + ${b};
      }

      var srcOffset = u32(0);

      for (var i = 0; i < ${r.length}; i++) {
        if (i == ${m}) {
          srcOffset +=  u32(idx) * inputStrides[i];
        } else {
          srcOffset += ${C.indicesGet("outputIndices","i")} * inputStrides[i];
        }
      }

      // Should never hit this with valid values in indices
      // This is a guard against malicious data in the indices input
      if (srcOffset < 0 || srcOffset >= ${u}) {
        return;
      }

      output[global_idx] = input[srcOffset];
  }`;return{name:"GatherElements",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:g,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(v/64)}}),getShaderSource:I}},Hs=e=>se({axis:e.axis}),js=(e,t)=>{let r=e.inputs;dc(r),e.compute(cc(e.inputs,t))}});var pc,fc,mc,Ks,Ys,Xs=L(()=>{"use strict";ge();Pe();ve();pc=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},fc=(e,t,r)=>{if(r.length===0)return"0u";let a=r.length===1&&e!==1||r.length===2&&r[0]!==e,n=r[r.length-1]!==t,s="0u";return a||(s+=`+ m * ${r[r.length-1]}u`),n||(s+="+n"),s},mc=(e,t)=>{let r=e[0].dims.slice(),a=e[1].dims.slice(),[n,s,u]=tn.getShapeOfGemmResult(r,t.transA,a,t.transB,e.length===3?e[2].dims:void 0),l=[n,s];if(!l)throw new Error("Can't use gemm on the given tensors");let o=z.size(l),p="";t.transA&&t.transB?p="value += a[k * M + m] * b[n * K + k];":t.transA&&!t.transB?p="value += a[k * M + m] * b[k * N + n];":!t.transA&&t.transB?p="value += a[m * K + k] * b[n * K + k];":!t.transA&&!t.transB&&(p="value += a[m * K + k] * b[k * N + n];");let m=ke(e[0].dataType),b=t.alpha===1?"":"value *= alpha;",g=e.length===3?`value += beta * c[${fc(n,s,e[2].dims)}];`:"",v=[`@group(0) @binding(0) var<storage, read> a : array<${m}>;`,`@group(0) @binding(1) var<storage, read> b : array<${m}>;`];e.length===3&&v.push(`@group(0) @binding(2) var<storage, read> c : array<${m}>;`);let $=w=>`
  const M: u32 = ${n}u;
  const N: u32 = ${s}u;
  const K: u32 = ${u}u;
  const alpha = ${m}(${t.alpha});
  const beta = ${m}(${t.beta});

  ${v.join(`
`)}
  @group(0) @binding(${e.length}) var<storage, read_write> output : array<${m}>;

  ${w.mainStart()}
    ${w.guardAgainstOutOfBoundsWorkgroupSizes(o)}

    let m = global_id.x / N;
    let n = global_id.x % N;

    var value = ${m}(0);
    for (var k: u32 = 0u; k<${u}u; k++) {
      ${p}
    }

    ${b}
    ${g}
    output[global_id.x] = value;

  }`;return{name:"Gemm",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:l,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:$}},Ks=(e,t)=>{pc(e.inputs),e.compute(mc(e.inputs,t))},Ys=e=>se(e)});var hc,gc,yc,bc,Js,Qs,Zs=L(()=>{"use strict";De();ge();Pe();ve();hc={name:"InstanceNormalization"},gc=(e,t)=>{let r=e[0].dims,a=r,n=2,s=z.sizeToDimension(r,n),u=z.sizeFromDimension(r,n),l=r[1],o=F("x",e[0].dataType,[r[0],r[1],u]),p=F("scale",e[1].dataType,e[1].dims),m=F("bias",e[2].dataType,e[2].dims),b=X("output",e[0].dataType,[r[0],r[1],u]),g=[o,p,m,b],v=o.type.value,$=64,w=C=>`

  const C: u32 = ${l};
  const normSize: u32 = ${u};
  const epsilon: f32 = ${t.epsilon};
  var<workgroup> meanShared : ${v};
  var<workgroup> squaredNormShared : ${v};
  var<workgroup> workgroupShared : array<${v}, ${$}>;
  const workgroupSize = ${$}u;
  ${C.declareVariables(...g)}
  ${C.mainStart($)}
    let norm = global_idx / workgroupSize;
    let batch = norm / C;
    let channel = norm % C;
    let localIndex = local_id.x;

    // initialize workgroup memory
    var initial: ${v} = 0;
    for (var h = localIndex; h < normSize; h += workgroupSize) {
      initial = initial + ${o.get("batch","channel","h")};
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the mean of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      meanShared = workgroupShared[0] / ${v}(normSize);
    }
    workgroupBarrier();

    // reinitialize workgroup memory.
    initial = 0;
    for (var h = localIndex; h < normSize; h += workgroupSize) {
      let deviation =  ${o.get("batch","channel","h")} - meanShared;
      initial = initial + deviation * deviation;
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the sum of square of deviation of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      squaredNormShared = workgroupShared[0];
    }
    workgroupBarrier();

    let invStdDev = 1 / sqrt(squaredNormShared / ${v}(normSize) + epsilon);
    let channelScale = invStdDev * ${p.getByOffset("channel")};
    let channelShift = ${m.getByOffset("channel")} - meanShared * channelScale;
    for (var h = localIndex; h < normSize; h += workgroupSize) {
      let value = ${o.get("batch","channel","h")} * channelScale + channelShift;
      ${b.set("batch","channel","h","value")};
    }
  }`;return{...hc,shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:s}}),getShaderSource:w}},yc=(e,t,r,a,n,s,u,l)=>{let o=bt(u),p=F("input",t.dataType,t.dims,o),m=F("scale",r.dataType,r.dims,o),b=F("bias",a.dataType,a.dims,o),g=64,v=o===1?"vec2f":`mat2x${o}f`,$=o===1?"f32":`vec${o}f`,w=(B,T)=>`${v}(${B}, ${T})`,C=n*u/o,I=Math.ceil(s/g),R=B=>`
  const H: u32 = ${s};
  const C: u32 = ${u/o};
  const imageSize: u32 = ${s*u/o};

  ${B.declareVariables(p)}
  @group(0) @binding(1) var<storage, read_write> output : array<${v}>;

  ${B.mainStart(g)}
    let currentImageNumber = global_idx / ${g} / C;
    let currentChannelNumber = (global_idx / ${g}) % C;
    let wgId = global_idx % ${g};
    let wgOffset = wgId * ${I};
    if (wgOffset >= H) {
        return;
    }
    let wgMax = min(wgOffset + ${I}, H);

    let offset = currentImageNumber * imageSize + currentChannelNumber;
    var sum = ${Ze("f32",o)};
    var squaredSum = ${Ze("f32",o)};
    for (var i: u32 = wgOffset; i < wgMax; i++) {
        let value = ${$}(input[offset + i * C]);
        sum += value;
        squaredSum += value * value;
    }
    output[global_idx] = ${w("sum","squaredSum")};
  }`,M=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:JSON.stringify({components:o,n,h:s,c:u})},getRunData:()=>({outputs:[{dims:[n,u,g,2],dataType:1}],dispatchGroup:{x:n*u/o}}),getShaderSource:R},{inputs:[t],outputs:[-1]})[0],P=B=>`
  const H: u32 = ${s};
  const C: u32 = ${u/o};
  const imageSize: u32 = ${g*u/o};
  const epsilon: f32 = ${l};

  @group(0) @binding(0) var<storage, read> input : array<${v}>;
  @group(0) @binding(1) var<storage, read> scale : array<${m.type.storage}>;
  @group(0) @binding(2) var<storage, read> bias : array<${b.type.storage}>;
  @group(0) @binding(3) var<storage, read_write> output : array<${v}>;

  ${B.mainStart()}
    ${B.guardAgainstOutOfBoundsWorkgroupSizes(C)}
    let currentImageNumber = global_idx / C;
    let currentChannelNumber = global_idx % C;

    let offset = currentImageNumber * imageSize;
    var sum = ${Ze("f32",o)};
    var squaredSum = ${Ze("f32",o)};
    for (var i: u32 = 0; i < ${g}; i++) {
        let value = input[offset + i + currentChannelNumber * ${g}];
        sum += value[0];
        squaredSum += value[1];
    }
    sum = sum / f32(H);
    squaredSum = squaredSum / f32(H);
    let invStdDev = 1 / sqrt(squaredSum - sum * sum + epsilon);
    let channelScale = invStdDev * ${$}(scale[currentChannelNumber]);
    let channelShift = ${$}(bias[currentChannelNumber]) - sum * channelScale;

    output[global_idx] = ${w("channelScale","channelShift")};
  }`;return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:JSON.stringify({components:o,n,h:s,c:u,epsilon:l})},getRunData:()=>({outputs:[{dims:[n,u,2],dataType:1}],dispatchGroup:{x:Math.ceil(C/64)}}),getShaderSource:P},{inputs:[M,r,a],outputs:[-1]})[0]},bc=(e,t,r)=>{let a=t[0].dims,n=a,s=a[0],u=a[a.length-1],l=z.sizeFromDimension(a,1)/u,o=bt(u),p=z.size(n)/o,m=F("input",t[0].dataType,t[0].dims,o),b=X("output",t[0].dataType,n,o),g=ke(t[0].dataType),v=o===1?"vec2f":`mat2x${o}f`,$=o===1?g:`vec${o}<${g}>`,w=yc(e,t[0],t[1],t[2],s,l,u,r.epsilon),C=I=>`
  const H: u32 = ${l};
  const C: u32 = ${u/o};

  @group(0) @binding(0) var<storage, read> input : array<${m.type.storage}>;
  @group(0) @binding(1) var<storage, read> scaleInput : array<${v}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${b.type.storage}>;

  ${I.mainStart()}
    let currentImageNumber = global_idx / (C * H);
    let currentChannelNumber = global_idx % C;

    let scaleOffset = currentImageNumber * C + currentChannelNumber;
    let scale = scaleInput[scaleOffset];
    output[global_idx] = fma(input[global_idx], ${$}(scale[0]), ${$}(scale[1]));
  }`;e.compute({name:"InstanceNormalization",shaderCache:{hint:`${r.cacheKey}`},getRunData:()=>({outputs:[{dims:n,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)}}),getShaderSource:C},{inputs:[t[0],w]})},Js=e=>se({epsilon:e.epsilon,format:e.format}),Qs=(e,t)=>{t.format==="NHWC"?bc(e,e.inputs,t):e.compute(gc(e.inputs,t))}});var wc,vc,eu,tu,ru=L(()=>{"use strict";De();ge();Pe();ve();wc=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},vc=(e,t,r)=>{let a=e[0].dims,n=e[1],s=e[2],u=a,l=z.normalizeAxis(t.axis,a.length),o=z.sizeToDimension(a,l),p=z.sizeFromDimension(a,l),m=z.size(n.dims),b=s?z.size(s.dims):0;if(m!==p||s&&b!==p)throw new Error(`Size of X.shape()[axis:] == ${p}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${m} and bias size of ${b}`);let g=[];for(let P=0;P<a.length;++P)P<l?g.push(a[P]):g.push(1);let v=bt(p),$=ke(e[0].dataType),w=[F("x",e[0].dataType,e[0].dims,v),F("scale",n.dataType,n.dims,v)];s&&w.push(F("bias",s.dataType,s.dims,v)),w.push(X("output",e[0].dataType,u,v));let C=r>1,I=r>2;C&&w.push(X("meanDataOutput",1,g)),I&&w.push(X("invStdOutput",1,g));let R=P=>`
  const normSize: f32 = ${p};
  const normSizeVectorized: u32 = ${p/v};
  const epsilon: f32 = ${t.epsilon};

  ${P.declareVariables(...w)}
  ${P.mainStart()}
    ${P.guardAgainstOutOfBoundsWorkgroupSizes(o)}
    let offset = global_idx * normSizeVectorized;
    var meanVector = ${Ze("f32",v)};
    var meanSquareVector = ${Ze("f32",v)};

    for (var h: u32 = 0u; h < normSizeVectorized; h++) {
      let value = ${Vt($,v,"x[h + offset]")};
      meanVector += value;
      meanSquareVector += value * value;
    }
    let mean = ${At("meanVector",v)} / normSize;
    let meanSquare = sqrt(${At("meanSquareVector",v)} 
      / normSize - mean * mean + epsilon);

    for (var j: u32 = 0; j < normSizeVectorized; j++) {
      let f32input = ${Vt($,v,"x[j + offset]")};
      let f32scale = ${Vt($,v,"scale[j]")};
      output[j + offset] = ${w[0].type.value}((f32input - mean) / meanSquare * f32scale
        ${s?`+ ${Vt($,v,"bias[j]")}`:""}
      );
    }

    ${C?"meanDataOutput[global_idx] = mean":""};
    ${I?"invStdOutput[global_idx] = 1 / meanSquare":""};
  }`,M=[{dims:u,dataType:e[0].dataType}];return C&&M.push({dims:g,dataType:1}),I&&M.push({dims:g,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${t.cacheKey}|${r}|${e.length}`},getRunData:()=>({outputs:M,dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:R}},eu=e=>se({axis:e.axis,epsilon:e.epsilon}),tu=(e,t)=>{wc(e.inputs),e.compute(vc(e.inputs,t,e.outputCount))}});var $c,nu,au=L(()=>{"use strict";ge();Ar();$c=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},nu=e=>{$c(e.inputs);let t=at.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can't use matmul on the given tensors");e.compute(hn(e.inputs,{activation:"",activationCacheKey:""},t))}});var xc,Sc,Cc,Ic,Ac,Ec,_c,Oc,Tc,ou,iu,su=L(()=>{"use strict";De();ge();Pe();ve();xc=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1)throw new Error("Input type must be float.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Sc=(e,t,r,a,n,s,u)=>{let l=r.length,o="";for(let p=l-1;p>=0;--p)o+=`
            k = i32(${e.indicesGet("indices",p)}) - ${n[p]};
            if (k < 0) {
              break;
            }
            if (k >= ${r[p]}) {
              break;
            }
            offset += k * ${a[p]};
        `;return`
          value = ${s}(${u});
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${o}
            value = x[offset];
          }
      `},Cc=(e,t,r,a,n)=>{let s=r.length,u="";for(let l=s-1;l>=0;--l)u+=`
                k = i32(${e.indicesGet("indices",l)}) - ${n[l]};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = ${2*(r[l]-1)};
                  k = k % _2n_1;
                  if(k >= ${r[l]}) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * ${a[l]};
            `;return`
              var offset = 0;
              var k = 0;
              ${u}
              value = x[offset];
          `},Ic=(e,t,r,a,n)=>{let s=r.length,u="";for(let l=s-1;l>=0;--l)u+=`
                k = i32(${e.indicesGet("indices",l)}) - ${n[l]};
                if (k < 0) {
                  k = 0;
                }
                if (k >= ${r[l]}) {
                  k = ${r[l]-1};
                }
                offset += k * ${a[l]};
            `;return`
              var offset = 0;
              var k = 0;
              ${u}
              value = x[offset];
          `},Ac=(e,t,r,a,n)=>{let s=r.length,u="";for(let l=s-1;l>=0;--l)u+=`
                k = i32(${e.indicesGet("indices",l)}) - ${n[l]};
                if (k < 0)  {
                  k += ${r[l]};
                }
                if (k >= ${r[l]}) {
                  k -= ${r[l]};
                }
                offset += k * ${a[l]};
            `;return`
              var offset = 0;
              var k = 0;
              ${u}
              value = x[offset];
          `},Ec=(e,t,r,a,n,s)=>{switch(n.mode){case 0:return Sc(e,t,r,a,n.pads,s,n.value);case 1:return Cc(e,t,r,a,n.pads);case 2:return Ic(e,t,r,a,n.pads);case 3:return Ac(e,t,r,a,n.pads);default:throw new Error("Invalid mode")}},_c=(e,t,r,a)=>{let n=t[0].dims,s=z.padShape(n.slice(),r.pads),u=z.size(s),l=z.computeStrides(n),o=X("output",t[0].dataType,s),p=F("x",t[0].dataType,n),m=Ec(o,s,n,l,r,a);return`
              ${e.declareVariables(p,o)}
              ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes(u)}

              let indices = ${o.offsetToIndices("global_idx")};

              var value = ${a}(0);
              ${m}
              output[global_idx] = value;
          }`},Oc=(e,t)=>{let r=z.padShape(e[0].dims.slice(),t.pads);return{name:"Pad",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(z.size(r)/64)}}),getShaderSource:a=>_c(a,e,t,"f32")}},Tc=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),a=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,n=e[0].dims.length,s=new Int32Array(2*n).fill(0);if(e.length>=4){let l=e[3].getBigInt64Array();for(let o=0;o<l.length;o++)s[Number(l[o])]=Number(r[o]),s[Number(l[o])+n]=Number(r[o+l.length])}else r.forEach((l,o)=>s[Number(o)]=Number(l));let u=[];return s.forEach(l=>u.push(l)),se({mode:t.mode,value:a,pads:u})}else return t},ou=(e,t)=>{xc(e.inputs);let r=Tc(e.inputs,t);e.compute(Oc(e.inputs,r),{inputs:[0]})},iu=e=>{let t=e.mode,r=e.value,a=e.pads;return se({mode:t,value:r,pads:a})}});var yn,uu,lu,du,cu,pu,fu,mu,hu,gu,yu,bu,wu,vu,$u,xu=L(()=>{"use strict";ge();Pe();ve();yn=e=>{if(!e||e.length!==1)throw new Error("Pool ops requires 1 input.");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("Pool ops supports 1-D or 2-D inputs only for now.")},uu=(e,t,r)=>{let a=t.format==="NHWC",n=e.dims.slice();a&&n.splice(1,0,n.pop());let s=Object.hasOwnProperty.call(t,"dilations"),u=t.kernelShape.slice(),l=t.strides.slice(),o=s?t.dilations.slice():[],p=t.pads.slice();Nt.adjustPoolAttributes(r,n,u,l,o,p);let m=Nt.computePoolOutputShape(r,n,l,o,u,p,t.autoPad),b=Object.assign({},t);s?Object.assign(b,{kernelShape:u,strides:l,pads:p,dilations:o,cacheKey:t.cacheKey}):Object.assign(b,{kernelShape:u,strides:l,pads:p,cacheKey:t.cacheKey});let g=m.slice();return g.push(g.splice(1,1)[0]),[b,a?g:m]},lu=(e,t,r,a,n,s,u,l)=>{let o=n.format==="NHWC",p=r,m=t.type.value,b=p.length,g=z.size(a),v=X("output",t.type.tensor,a);if(n.kernelShape.length<=2){let $=n.kernelShape[n.kernelShape.length-1],w=n.strides[n.strides.length-1],C=n.pads[n.pads.length/2-1],I=n.pads[n.pads.length-1],R=b-(o?2:1),M="",P="",B="";if(C+I!==0?M=`
                for (var i: u32 = 0u; i < ${$}u; i++) {
                  xIndices[${R}] = indices[${R}] * ${w} - ${C} + i;
                  if (xIndices[${R}] < 0 || xIndices[${R}] >= ${p[R]}) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${s}
                }`:M=`
                for (var i: u32 = 0u; i < ${$}u; i++) {
                  xIndices[${R}] = indices[${R}] * ${w} - ${C} + i;
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${s}
                }`,n.kernelShape.length===2){let W=n.kernelShape[n.kernelShape.length-2],H=n.strides[n.strides.length-2],K=n.pads[n.pads.length/2-2],le=n.pads[n.pads.length-2],D=b-(o?3:2),q=p[D];K+le!==0?P=`
                for (var j: u32 = 0u; j < ${W}u; j++) {
                  xIndices[${D}] = indices[${D}] * ${H} - ${K} + j;
                  if (xIndices[${D}] < 0 || xIndices[${D}] >= ${q}) {
                    pad+= ${$};
                    continue;
                  }
              `:P=`
                for (var j: u32 = 0u; j < ${W}u; j++) {
                  xIndices[${D}] = indices[${D}] * ${H} - ${K} + j;
                `,B=`
              }
            `}return`
            ${e.declareVariables(t,v)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes(g)}

              let indices = ${v.offsetToIndices("global_idx")};
              var xIndices = ${v.offsetToIndices("global_idx")};

              var value: ${m} = ${m}(${l});
              var pad = 0;
              ${P}
              ${M}
              ${B}
              ${u}

              output[global_idx] = value;
            }`}else{if(o)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let $=z.size(n.kernelShape),w=z.computeStrides(n.kernelShape),C=w.length,I=n.pads.length,R=n.pads.reduce((B,T)=>B+T),M="";return R?M=`
                if (xIndices[j] >= inputDims[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${t.indicesToOffset("xIndices")}];
                ${s}
              }`:M=`
              }
              let x_val = x[${t.indicesToOffset("xIndices")}];
              ${s}
            `,`
            ${e.declareVariables(t,v)}

            const pads = array<u32, ${I}>(${n.pads.map(B=>`${B}u`).join(",")});
            const inputDims = array<u32, ${b}>(${p.map(B=>`${B}u`).join(",")});
            const kernelStrides = array<u32, ${C}>(${w.map(B=>`${B}u`).join(",")});
            const strides = array<u32, ${C}>(${n.strides.map(B=>`${B}u`).join(",")});

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes(g)}

              let indices = ${v.offsetToIndices("global_idx")};
              let xIndices = ${v.offsetToIndices("global_idx")};

              var offsets: array<u32, ${C}>;

              var value = ${v.type.value}(${l});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < ${$}u; i++) {
                var offset = i;
                for (var j = 0u; j < ${C-1}u; j++) {
                  offsets[j] = offset / kernelStrides[j];
                  offset -= offsets[j] * kernelStrides[j];
                }
                offsets[${C-1}] = offset;

                isPad = false;
                for (var j = ${b-C}u; j < ${b}u; j++) {
                  xIndices[j] = indices[j] * strides[j - ${b-C}u]
                    + offsets[j - ${b-C}u] - pads[j - 2u];
                  ${M}
              }
              ${u}

              output[global_idx] = value;
            }`}},du=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),cu=(e,t,r,a)=>{let[n,s]=uu(t,a,r),u=z.size(n.kernelShape),l=F("x",t.dataType,t.dims),o=l.type.value,p="value += x_val;",m="";return n.countIncludePad?m+=`value /= ${o}(${u});`:m+=`value /= ${o}(${u} - pad);`,{name:e,shaderCache:{hint:a.cacheKey},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(z.size(s)/64)}}),getShaderSource:b=>lu(b,l,t.dims,s,n,p,m,"0.0")}},pu=e=>{let t=e.count_include_pad!==0,r=du(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return se({countIncludePad:t,...r})},fu=(e,t)=>{yn(e.inputs),e.compute(cu("AveragePool",e.inputs[0],!1,t))},mu={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},hu=e=>{let t=e.format;return{format:t,...mu,cacheKey:t}},gu=(e,t)=>{yn(e.inputs),e.compute(cu("GlobalAveragePool",e.inputs[0],!0,t))},yu=(e,t,r,a)=>{let[n,s]=uu(t,a,r),u=`
      value = max(x_val, value);
    `,l="",o=F("x",t.dataType,t.dims);return{name:e,shaderCache:{hint:a.cacheKey},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(z.size(s)/64)}}),getShaderSource:p=>lu(p,o,t.dims,s,n,u,l,"-1e5")}},bu=(e,t)=>{yn(e.inputs),e.compute(yu("MaxPool",e.inputs[0],!1,t))},wu=e=>{let t=e.storage_order,r=e.dilations,a=du(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(a.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return se({storageOrder:t,dilations:r,...a})},vu=e=>{let t=e.format;return{format:t,...mu,cacheKey:t}},$u=(e,t)=>{yn(e.inputs),e.compute(yu("GlobalMaxPool",e.inputs[0],!0,t))}});var Pc,kc,Su,Cu=L(()=>{"use strict";Ct();De();ve();Pc=(e,t,r)=>{let a=e===t,n=e<t&&r<0,s=e>t&&r>0;if(a||n||s)throw new Error("Range these inputs' contents are invalid.")},kc=(e,t,r,a)=>{let n=Math.abs(Math.ceil((t-e)/r)),s=[n],u=n,l=X("output",a,s),o=l.type.storage,p=m=>`
        ${m.declareVariables(l)}
        ${m.mainStart()}
        ${m.guardAgainstOutOfBoundsWorkgroupSizes(u)}
        output[global_idx] = ${o}(${e}) + ${o}(global_idx) * ${o}(${r});
      }`;return{name:"Range",shaderCache:{hint:[e,t,r].map(m=>m.toString()).join("_")},getShaderSource:p,getRunData:()=>({outputs:[{dims:s,dataType:a}],dispatchGroup:{x:Math.ceil(u/64)}})}},Su=e=>{let t=0,r=0,a=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],a=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],a=e.inputs[2].getFloat32Array()[0]),Ce.webgpu.validateInputContent&&Pc(t,r,a),e.compute(kc(t,r,a,e.inputs[0].dataType),{inputs:[]})}});var Mc,Bc,Dc,zc,Wc,Nc,Vc,Uc,Gc,Fc,Lc,Hc,jc,qc,Kc,Iu,Au,Eu=L(()=>{"use strict";ge();Pe();ve();Mc=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for linear mode")}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Bc=(e,t,r)=>{t.every(n=>n>=0&&n<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let a=new Array(r).fill(1);return t.forEach((n,s)=>a[n]=e[s]),a},Dc=(e,t,r,a,n,s)=>{let[u,l,o]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],p=e[0].dims.length;if(u>0&&e.length>u&&e[u].dims.length>0)e[u].getFloat32Array().forEach(m=>s.push(m));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(l>0&&e.length>l&&e[l].dims.length>0){if(e[l].getFloat32Array().forEach(m=>a.push(m)),a.length!==0&&a.length!==p&&r>=18&&a.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Mc(a,t),t.axes.length>0&&Bc(a,t.axes,p).forEach((m,b)=>a[b]=m)}if(o>0&&e.length>o&&(e[o].getBigInt64Array().forEach(m=>n.push(Number(m))),n.length!==p||r>=18&&n.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(a.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(n.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof a<"u"&&typeof n<"u"&&a.length>0&&n.length>p)throw new Error("Resize requires only of scales or sizes to be specified")},zc=e=>"fn getOriginalCoordinateFromResizedCoordinate(xResized: f32, xScale: f32, lengthResized: f32,    lengthOriginal: f32, roiStart: f32, roiEnd: f32) -> f32 { "+(()=>{switch(e){case"asymmetric":return"return xResized / xScale;";case"pytorch_half_pixel":return"if (lengthResized > 1) {                     return (xResized + 0.5) / xScale - 0.5;                   } else {                     return 0.0;                   }";case"tf_half_pixel_for_nn":return"return (xResized + 0.5) / xScale;";case"align_corners":return"if (lengthResized == 1) {                     return 0.0;                   } else {                     return xResized * (lengthOriginal - 1) / (lengthResized - 1);                   }";case"tf_crop_and_resize":return"if (lengthResized > 1) {                     return roiStart * (lengthOriginal - 1) +                           (xResized * (roiEnd - roiStart) * (lengthOriginal - 1)) / (lengthResized - 1);                   } else {                     return 0.5 * (roiStart + roiEnd) * f32(lengthOriginal - 1);                   }";case"half_pixel_symmetric":return["const outputWidth = xScale * lengthResized;","const adjustment = lengthResized / outputWidth;","const center = lengthOriginal / 2;","const offset = center * (1 - adjustment);","return offset + ((xResized + 0.5) / xScale) - 0.5;"].join(`
`);case"half_pixel":return"return ((xResized + 0.5) / xScale) - 0.5;";default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Wc=(e,t)=>"fn getNearestPixelFromOriginal(xOriginal: f32, isDownSample: bool) -> f32 {"+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Nc=(e,t,r)=>{let a=new Array(r).fill(0).concat(new Array(r).fill(1)),n=e.length===0?a:e.slice();return t.length>0?(t.forEach((s,u)=>{a[s]=n[u],a[u+r]=n[t.length+u]}),a):n},Vc=(e,t,r,a)=>{let n=[];if(r.length>0)if(a.length>0){if(e.forEach(s=>n.push(s)),Math.max(...a)>e.length)throw new Error("axes is out of bound");a.forEach((s,u)=>n[s]=r[u])}else r.forEach(s=>n.push(s));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");n=e.map((s,u)=>Math.round(s*t[u]))}return n},Uc=(e,t,r,a)=>{let n=(()=>{switch(a.keepAspectRatioPolicy){case"not_larger":return a.axes.length>0?Math.min(...a.axes.map(u=>r[u]),Number.MAX_VALUE):Math.min(...r,Number.MAX_VALUE);case"not_smaller":return a.axes.length>0?Math.max(...a.axes.map(u=>r[u]),Number.MIN_VALUE):Math.max(...r,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${a.keepAspectRatioPolicy} is not supported`)}})();r.fill(1,0,r.length);let s=e.slice();return a.axes.length>0?(a.axes.forEach(u=>r[u]=n),a.axes.forEach(u=>s[u]=Math.round(e[u]*r[u]))):(r.fill(n,0,r.length),s.forEach((u,l)=>s[l]=Math.round(u*r[l]))),s},Gc=(e,t,r,a,n)=>`
    fn calculateOriginalIndicesFromOutputIndices(outputIndices: ${e.type.indices}) -> array<f32, ${r.length}> {
      const inputShape = array<u32, ${t.length}>(${t.map(s=>`${s}u`).join(",")});
      const outputShape = array<u32, ${r.length}>(${r.map(s=>`${s}u`).join(",")});
      const scales = array<f32, ${a.length}>(${a.map(s=>`${s}f`).join(",")});
      const roi = array<f32, ${n.length}>(${n.map(s=>`${s}f`).join(",")});
      var originalIndices: array<f32, ${r.length}>;
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var outputIndex = ${r.length===1?"outputIndices":"outputIndices[i]"};
        if (scales[i] == 1.0) {
          originalIndices[i] = f32(outputIndex);
        } else {
          originalIndices[i] = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],
                f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${t.length}]);
        }
      }
      return originalIndices;
    }`,Fc=(e,t,r,a,n,s,u)=>`
    fn calculateInputIndicesFromOutputIndices(outputIndices: ${t.type.indices}) -> ${e.type.indices} {
        const inputShape = array<u32, ${r.length}>(${r.map(l=>`${l}u`).join(",")});
        const outputShape = array<u32, ${a.length}>(${a.map(l=>`${l}u`).join(",")});
        const scales = array<f32, ${n.length}>(${n.map(l=>`${l}f`).join(",")});
        const roi = array<f32, ${s.length}>(${s.map(l=>`${l}f`).join(",")});
        var inputIndices: ${e.type.indices};
        for (var i:u32 = 0; i < ${a.length}; i++) {
          var outputIndex = ${a.length===1?"outputIndices":"outputIndices[i]"};
          var inputIndex: u32;
          if (scales[i] == 1.0) {
            inputIndex = outputIndex;
          } else {
            var original_idx = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],
                    f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${r.length}]);
            if (!${u} || (original_idx >= 0 && original_idx < f32(inputShape[i]))) {
              if (original_idx < 0) {
                inputIndex = 0;
              } else if (original_idx > (f32(inputShape[i]) - 1)) {
                inputIndex = inputShape[i] - 1;
              } else {
                inputIndex = u32(getNearestPixelFromOriginal(original_idx, scales[i] < 1));
              }
            } else {
              inputIndex = u32(original_idx);
            }
          }
          ${e.indicesSet("inputIndices","i","inputIndex")}
        }
        return inputIndices;
    }`,Lc=(e,t)=>`
    fn checkInputIndices(inputIndices: ${e.type.indices}) -> bool {
      const inputShape = array<u32, ${t.length}>(${t.map(r=>`${r}u`).join(",")});
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var inputIndex = ${t.length===1?"inputIndices":"inputIndices[i]"};
        if (inputIndex < 0 || inputIndex >= inputShape[i]) {
          return false;
        }
      }
      return true;
    }`,Hc=(e,t,r,a,n,s,u)=>{let[l,o,p,m]=r.length===2?[-1,0,1,-1]:n[1]===1?[0,2,3,1]:[0,1,2,3];return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> f32 {
      var inputIndices: ${e.type.indices};
      inputIndices[${o}] = max(0, min(row, ${r[o]} - 1));
      inputIndices[${p}] = max(0, min(col, ${r[p]} - 1));
      if (${r.length} > 2) {
        inputIndices[${m}] = channel;
        inputIndices[${l}] = batch;
      };
      return input[${e.indicesToOffset("inputIndices")}];
    }

    fn bilinearInterpolation(outputIndices: ${t.type.indices}) -> f32 {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(outputIndices);
      var row:f32 = originalIndices[${o}];
      var col:f32 = originalIndices[${p}];
      if (${s} && (row < 0 || row > (${r[o]} - 1) || col < 0 || col > ${r[p]} - 1)) {
        return ${u};
      }
      row = max(0, min(row, ${r[o]} - 1));
      col = max(0, min(col, ${r[p]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = 0;
      var batch: u32 = 0;
      if (${r.length>2}) {
        channel = u32(originalIndices[${m}]);
        batch = u32(originalIndices[${l}]);
      }
      var x11: f32 = getInputValue(batch, channel, row1, col1);
      var x12: f32 = getInputValue(batch, channel, row1, col2);
      var x21: f32 = getInputValue(batch, channel, row2, col1);
      var x22: f32 = getInputValue(batch, channel, row2, col2);
      var dx1: f32 = row - f32(row1);
      var dx2: f32 = f32(row2 ) - row;
      var dy1 = col - f32(col1);
      var dy2 = f32(col2) - col;
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},jc=(e,t,r,a,n,s,u,l,o,p)=>{let[m,b]=r.length===2?[0,1]:n[1]===1?[2,3]:[1,2],g=v=>{let $=v===m?"row":"col";return`
      fn ${$}CubicInterpolation(inputIndices: ${e.type.indices}, outputIndices: ${t.type.indices}) -> f32 {
        var outputIndex = ${a.length===1?"outputIndices":`outputIndices[${v}]`};
        var originalIdx: f32 = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), ${n[v]},
        f32(${a[v]}), f32(${r[v]}), ${s[v]}, ${s[v]} + ${r.length});
        var fractOriginalIdx: f32 = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${l} && (originalIdx < 0 || originalIdx > (${r[v]} - 1))) {
          return ${o};
        }
        var data: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${$}: f32 = originalIdx + f32(i);
          if (${$} < 0 || ${$} >= ${r[v]}) {
            if (${p}) {
              coefs[i + 1] = 0.0;
              continue;
            } else if (${l}) {
              return ${o};
            } else {
              ${$} = max(0, min(${$}, ${r[v]} - 1));
            }
          }
          var inputIndicesCopy: ${e.type.indices} = inputIndices;
          inputIndicesCopy[${v}] = u32(${$});
          data[i + 1] = ${v===m?`input[${e.indicesToOffset("inputIndicesCopy")}];`:`
                                               rowCubicInterpolation(inputIndicesCopy, outputIndices);`}
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${g(m)};
    ${g(b)};
  fn getCubicInterpolationCoefs(s: f32) -> array<f32, 4> {
    var absS = abs(s);
    var coeffs: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: f32 = 1.0 - absS;
    var twoMinusAbsS: f32 = 2.0 - absS;
    var onePlusAbsS: f32 = 1.0 + absS;
    coeffs[0] = ((${u} * onePlusAbsS - 5 * ${u}) * onePlusAbsS + 8 * ${u}) * onePlusAbsS - 4 * ${u};
    coeffs[1] = ((${u} + 2) * absS - (${u} + 3)) * absS * absS + 1;
    coeffs[2] = ((${u} + 2) * oneMinusAbsS - (${u} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${u} * twoMinusAbsS - 5 * ${u}) * twoMinusAbsS + 8 * ${u}) * twoMinusAbsS - 4 * ${u};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<f32, 4>, coefs: array<f32, 4>) -> f32 {
    var coefsSum: f32 = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(outputIndices: ${t.type.indices}) -> f32 {
    var inputIndices: ${e.type.indices} = outputIndices;
    return colCubicInterpolation(inputIndices, outputIndices);
  }
    `},qc=(e,t,r,a,n,s)=>{let u=e.dims,l=Nc(s,t.axes,u.length),o=Vc(u,a,n,t.axes),p=a.slice();a.length===0&&(p=u.map((C,I)=>C===0?1:o[I]/C),t.keepAspectRatioPolicy!=="stretch"&&(o=Uc(u,o,p,t)));let m=X("output",e.dataType,o),b=F("input",e.dataType,u),g=z.size(o),v=u.length===o.length&&u.every((C,I)=>C===o[I]),$=t.coordinateTransformMode==="tf_crop_and_resize",w=C=>`
      ${zc(t.coordinateTransformMode)};
      ${(()=>{switch(t.mode){case"nearest":return`
              ${Lc(b,u)};
              ${Wc(t.nearestMode,r)};
              ${Fc(b,m,u,o,p,l,$)};
              `;case"linear":return`
              ${Gc(m,u,o,p,l)};
              ${Hc(b,m,u,o,p,$,t.extrapolationValue)};
              `;case"cubic":return`
            ${jc(b,m,u,o,p,l,t.cubicCoeffA,$,t.extrapolationValue,t.excludeOutside)};
            `;default:throw Error("Invalid resize mode")}})()};
      ${C.declareVariables(b,m)}
      ${C.mainStart()}
        ${C.guardAgainstOutOfBoundsWorkgroupSizes(g)}
        if (${v}) {
          output[global_idx] = input[global_idx];
        } else {
          let outputIndices = ${m.offsetToIndices("global_idx")};
          var inputIndices: ${b.type.indices};
          ${(()=>{switch(t.mode){case"nearest":return`inputIndices = calculateInputIndicesFromOutputIndices(outputIndices);
                  if (checkInputIndices(inputIndices)) {
                    output[global_idx] = input[${b.indicesToOffset("inputIndices")}];
                  } else {
                    output[global_idx] = ${t.extrapolationValue};
                  }`;case"linear":return"output[global_idx] = bilinearInterpolation(outputIndices);";case"cubic":return"output[global_idx] = bicubicInterpolation(outputIndices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};
        }
      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${p.length>0?p:""}|${n.length>0?n:""}`},getShaderSource:w,getRunData:()=>({outputs:[{dims:o,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(g/64)}})}},Kc=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Iu=(e,t)=>{let r=[],a=[],n=[],s=Kc(e);Dc(e.inputs,t,s,r,a,n),e.compute(qc(e.inputs[0],t,s,r,a,n),{inputs:[0]})},Au=e=>{let t=e.antialias,r=e.axes,a=e.coordinateTransformMode,n=e.cubicCoeffA,s=e.excludeOutside!==0,u=e.extrapolationValue,l=e.keepAspectRatioPolicy,o=e.mode,p=e.nearestMode===""?"simple":e.nearestMode;return se({antialias:t,axes:r,coordinateTransformMode:a,cubicCoeffA:n,excludeOutside:s,extrapolationValue:u,keepAspectRatioPolicy:l,mode:o,nearestMode:p})}});var Yc,Xc,_u,Ou,Tu=L(()=>{"use strict";De();ge();Pe();ve();Yc=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],a=e[2];if(t.dataType!==r.dataType||t.dataType!==a.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let n=t.dims[t.dims.length-1],s=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==n)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==s)throw new Error("Skip must have the same sequence length as input");if(a.dims.length!==1)throw new Error("Gamma must be 1D");if(a.dims[a.dims.length-1]!==n)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let u=e[3];if(u.dims.length!==1)throw new Error("Beta must be 1D");if(u.dims[u.dims.length-1]!==n)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let u=e[4];if(u.dims.length!==1)throw new Error("Bias must be 1D");if(u.dims[u.dims.length-1]!==n)throw new Error("Bias must have the same hidden size as input")}},Xc=(e,t,r,a)=>{let n=e[0].dims,s=z.size(n),u=n,l=s,o=n.slice(-1)[0],p=a?n.slice(0,-1).concat(1):[],m=e.length>3,b=e.length>4,g=a&&r>1,v=a&&r>2,$=r>3,w=bt(o),C=[F("x",e[0].dataType,e[0].dims,w),F("skip",e[1].dataType,e[1].dims,w),F("gamma",e[2].dataType,e[2].dims,w)];m&&C.push(F("beta",e[3].dataType,e[3].dims,w)),b&&C.push(F("bias",e[4].dataType,e[4].dims,w)),C.push(X("output",e[0].dataType,u,w)),g&&C.push(X("meanOutput",1,p)),v&&C.push(X("invStdOutput",1,p)),$&&C.push(X("inputSkipBiasSum",e[0].dataType,u,w));let I=ke(e[0].dataType),R=P=>`
      const hiddenSize: f32 = ${o};
      const hiddenSizeVectorized: u32 = ${o/w};
      const epsilon: f32 = ${t.epsilon};

      ${P.declareVariables(...C)}

      ${P.mainStart()}
        ${P.guardAgainstOutOfBoundsWorkgroupSizes(l/o)}
        let offset = global_idx * hiddenSizeVectorized;
        var sum = ${Ze("f32",w)};
        var squareSum = ${Ze("f32",w)};
        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {
          let skipValue = skip[offset + i];
          let biasValue = ${b?"bias[i]":"0.0"};
          let inputValue = x[offset + i];
          let value = inputValue + skipValue + biasValue;
          ${$?"inputSkipBiasSum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32Value = ${Vt(I,w,"value")};
          sum += f32Value;
          squareSum += f32Value * f32Value;
        }
        let mean = ${At("sum",w)} / hiddenSize;
        let variance = sqrt(${At("squareSum",w)} / hiddenSize - mean * mean + epsilon);
        ${g?"meanOutput[global_idx] = mean;":""}
        ${v?"invStdOutput[global_idx] = 1.0 / variance;":""}
        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {
          output[offset + i] = (output[offset + i] - ${I}(mean)) / ${I}(variance) * gamma[i]
           + ${m?"beta[i]":"0.0"};
        }
      }`,M=[{dims:u,dataType:e[0].dataType}];return r>1&&M.push({dims:p,dataType:1}),r>2&&M.push({dims:p,dataType:1}),r>3&&M.push({dims:n,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:t.cacheKey},getShaderSource:R,getRunData:()=>({outputs:M,dispatchGroup:{x:Math.ceil(l/o/64)}})}},_u=(e,t)=>{Yc(e.inputs);let a=[0];e.outputCount>1&&a.push(-3),e.outputCount>2&&a.push(-3),e.outputCount>3&&a.push(3),e.compute(Xc(e.inputs,t,e.outputCount,!1),{outputs:a})},Ou=e=>{let t=e.epsilon;return se({epsilon:t})}});var Jc,bn,Qc,Ru,Zc,ep,Pu,ku,Mu=L(()=>{"use strict";De();ge();Pe();ve();Jc=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,a)=>{if(e[a+1].dataType!==6&&e[a+1].dataType!==7)throw new Error(`Input ${a} must be an array of int32 or int64`)})},bn=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(a=>r.push(Number(a)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(a=>r.push(Number(a)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},Qc=(e,t)=>{if(e.length>1){let r=bn(e,1),a=bn(e,2),n=bn(e,3);return n.length===0&&(n=[...Array(e[0].dims.length).keys()]),se({starts:r,ends:a,axes:n})}else return t},Ru=(e,t,r,a,n)=>{let s=e;return e<0&&(s+=r[a[t]]),n[t]<0?Math.max(0,Math.min(s,r[a[t]]-1)):Math.max(0,Math.min(s,r[a[t]]))},Zc=(e,t,r,a)=>`fn calculateInputIndices(outputIndices: ${t.type.indices}) -> ${e.type.indices} {
          var inputIndices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${r.length}; i >= 0; i--) {
            var outputIndex = ${a.length===1?"outputIndices":"outputIndices[i]"};
            var inputIndex = outputIndex * steps[i] + starts[i] + carry;
            carry = inputIndex / inputShape[i];
            inputIndex = inputIndex % inputShape[i];
            if (signs[i] < 0) {
              inputIndex = inputShape[i] - inputIndex - 1u + starts[i];
            }
            ${r.length===1?"inputIndices":"inputIndices[i]"} = inputIndex;
          }
          return inputIndices;
      }`,ep=(e,t)=>{let r=e[0].dims,a=z.size(r),n=t.axes.length>0?z.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],s=bn(e,4);s.forEach(w=>w!==0||(()=>{throw new Error("step cannot be 0")})),s.length===0&&(s=Array(n.length).fill(1));let u=t.starts.map((w,C)=>Ru(w,C,r,n,s)),l=t.ends.map((w,C)=>Ru(w,C,r,n,s));if(n.length!==r.length)for(let w=0;w<r.length;++w)n.includes(w)||(u.splice(w,0,0),l.splice(w,0,r[w]),s.splice(w,0,1));let o=s.map(w=>Math.sign(w));s.forEach((w,C,I)=>{if(w<0){let R=(l[C]-u[C])/w,M=u[C],P=M+R*s[C];u[C]=P,l[C]=M,I[C]=-w}});let p=r.slice(0);n.forEach((w,C)=>{p[w]=Math.ceil((l[w]-u[w])/s[w])});let m={dims:p,dataType:e[0].dataType},b=X("output",e[0].dataType,p),g=F("input",e[0].dataType,r),v=z.size(p),$=w=>`
      ${w.declareVariables(g,b)}
        const signs = array<i32, ${o.length}>(${o.map(C=>`${C}i`).join(",")});
        const starts = array<u32, ${u.length}>(${u.map(C=>`${C}u`).join(",")});
        const ends = array<u32, ${l.length}>(${l.map(C=>`${C}u`).join(",")});
        const steps = array<u32, ${s.length}>(${s.map(C=>`${C}u`).join(",")});
        const inputShape = array<u32, ${r.length}>(${r.map(C=>`${C}u`).join(",")});

        ${Zc(g,b,r,p)}
        ${w.mainStart()}
          ${w.guardAgainstOutOfBoundsWorkgroupSizes(v)}
          let outputIndices = ${b.offsetToIndices("global_idx")};
          let inputIndices = calculateInputIndices(outputIndices);
          ${b.setByOffset("global_idx",g.getByIndices("inputIndices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${t.cacheKey}|${e[4]?.dims??""}`},getShaderSource:$,getRunData:()=>({outputs:[m],dispatchGroup:{x:Math.ceil(a/64)}})}},Pu=(e,t)=>{Jc(e.inputs,t);let r=Qc(e.inputs,t);e.compute(ep(e.inputs,r),{inputs:[0]})},ku=e=>{let t=e.starts,r=e.ends,a=e.axes;return se({starts:t,ends:r,axes:a})}});var tp,rp,Bu,Du,zu=L(()=>{"use strict";ge();Pe();ve();tp=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},rp=(e,t)=>{let r=ke(e.dataType),a=e.dims,n=z.size(a),s=64,u=t.axis;if(u<0&&(u=a.length+u),u<a.length-1)throw new Error("softmax only supports last axis for now.");let l=a[u],o=n/l,p=bt(l),m=l/p,b=p===1?r:`vec${p}<${r}>`,g=(w,C)=>C===4?`max(max(${w}.x, ${w}.y), max(${w}.z, ${w}.w))`:C===2?`max(${w}.x, ${w}.y)`:C===3?`max(max(${w}.x, ${w}.y), ${w}.z)`:w,v=r==="f32"?`var threadMax = ${b}(-3.402823e+38f);`:`var threadMax = ${b}(-65504.0h);`;return{name:"Softmax",getRunData:()=>({outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:o}}),getShaderSource:w=>`
      var<workgroup> rowMaxShared : ${b};
      var<workgroup> rowSumShared : ${b};
      var<workgroup> threadShared : array<${b}, ${s}>;

      @group(0) @binding(0) var<storage, read> x : array<${b}>;
      @group(0) @binding(1) var<storage, read_write> result : array<${b}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${b} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${b}) {
        let index = row * row_stride + col;
        result[index] = value;
      }

      @compute @workgroup_size(${s}, 1, 1)
      fn main(@builtin(local_invocation_id) local_id : vec3<u32>, @builtin(global_invocation_id) global_id : vec3u) {
        let gindex = i32(global_id.x);
        let lindex = i32(local_id.x);
        const wg = ${s};
        let row = gindex / wg;
        let cols = ${m};
        let row_stride : i32 = ${m};

        // find the rows max
        ${v}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${b}(${g("threadShared[0]",p)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${b}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${b}(${At("threadShared[0]",p)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`}},Bu=(e,t)=>{tp(e.inputs),e.compute(rp(e.inputs[0],t))},Du=e=>se({axis:e.axis})});var np,ap,op,ip,sp,Wu,Nu,Vu=L(()=>{"use strict";ge();Pe();ve();np=e=>{if(!e||e.length<1)throw new Error("too few inputs")},ap=(e,t)=>{let r=[],a=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(n=>r.push(Number(n))),a=r.length),se({numOutputs:a,axis:t.axis,splitSizes:r})},op=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < sizeInConcatAxis[i]) {
        return i;
    }
    }
    return ${e}u;
}`,ip=e=>{let t=e.length,r=[];for(let a=0;a<t;++a){let n=e[a].setByIndices("indices","input[global_idx]");t===1?r.push(n):a===0?r.push(`if (outputNumber == ${a}u) { ${n} }`):a===t-1?r.push(`else { ${n} }`):r.push(`else if (outputNumber == ${a}) { ${n} }`)}return`
      fn writeBufferData(outputNumber: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${r.join(`
`)}
      }`},sp=(e,t)=>{let r=e[0].dims,a=z.size(r),n=e[0].dataType,s=r.length,u=t.axis,l=u<0?r.length+u:u,o=new Array(t.numOutputs),p=F("input",n,r),m=new Array(t.numOutputs),b=[],g=[],v=0;for(let C=0;C<t.numOutputs;C++){v+=t.splitSizes[C],m[C]=v;let I=r.slice();I[t.axis]=t.splitSizes[C],g.push(I),o[C]=X(`output${C}`,n,g[C]),b.push({dims:g[C],dataType:e[0].dataType})}let $=s<2?"indices":`indices[${l}]`,w=C=>`
  ${C.declareVariables(p,...o)}
  const sizeInConcatAxis = array<u32, ${m.length}>(${m.map(I=>`${I}u`).join(",")});
  ${op(m.length)}
  ${ip(o)}

  ${C.mainStart()}
    ${C.guardAgainstOutOfBoundsWorkgroupSizes(a)}

    var indices = ${p.offsetToIndices("global_idx")};
    let outputNumber = calculateOutputIndex(${$});
    if (outputNumber != 0) {
        ${$} -= sizeInConcatAxis[outputNumber - 1u];
    }
    writeBufferData(outputNumber, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:t.cacheKey},getShaderSource:w,getRunData:()=>({outputs:b,dispatchGroup:{x:Math.ceil(a/64)}})}},Wu=(e,t)=>{np(e.inputs);let r=e.inputs.length===1?t:ap(e.inputs,t);e.compute(sp(e.inputs,r),{inputs:[0]})},Nu=e=>{let t=e.axis,r=e.splitSizes,a=e.numOutputs<0?r.length:e.numOutputs;if(a!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return se({axis:t,numOutputs:a,splitSizes:r})}});var Uu,up,lp,dp,Gu,Fu=L(()=>{"use strict";De();ge();ve();Uu=e=>Array.from(e.getBigInt64Array(),Number),up=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Uu(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},lp=(e,t)=>{let r=[];for(let a=0;a<e.length;++a)r.push(e[a]*t[a]);return r},dp=e=>{let t=e[0].dims,r=Uu(e[1]),a=lp(t,r),n=z.size(a),s=e[0].dataType,u=F("input",s,t),l=X("output",s,a),o=p=>`
      const inputShape = ${u.indices(...t)};
      ${p.declareVariables(u,l)}
      ${p.mainStart()}
      ${p.guardAgainstOutOfBoundsWorkgroupSizes(n)}
      let outputIndices = ${l.offsetToIndices("global_idx")};
      var inputIndices: ${u.type.indices};
      for (var i = 0; i < ${t.length}; i++) {
        let inputDimValue = ${l.indicesGet("outputIndices","i")}  % ${u.indicesGet("inputShape","i")};

        ${u.indicesSet("inputIndices","i","inputDimValue")}
      }
      ${l.setByOffset("global_idx",u.getByIndices("inputIndices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${r}`},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:o}},Gu=e=>{up(e.inputs),e.compute(dp(e.inputs),{inputs:[0]})}});var cp,pp,Lu,Hu=L(()=>{"use strict";De();ge();ve();cp=(e,t,r,a,n)=>{let s=z.size(r),u=Math.ceil(s/4),l=X("outputData",n,r,4),o=F("aData",t[1].dataType,t[1].dims,4),p=F("bData",t[2].dataType,t[2].dims,4),m=F("cData",t[0].dataType,t[0].dims,4),b,g=(v,$,w)=>`select(${$}, ${v}, ${w})`;if(!a)b=l.setByOffset("global_idx",g(o.getByOffset("global_idx"),p.getByOffset("global_idx"),m.getByOffset("global_idx")));else{let v=($,w,C="")=>{let I=`aData[indexA${w}][componentA${w}]`,R=`bData[indexB${w}][componentB${w}]`,M=`bool(cData[indexC${w}] & ${4278190080>>>(3-w)*8}u)`;return`
            let outputIndices${w} = ${l.offsetToIndices(`global_idx * 4u + ${w}u`)};
            let offsetA${w} = ${o.broadcastedIndicesToOffset(`outputIndices${w}`,l)};
            let offsetB${w} = ${p.broadcastedIndicesToOffset(`outputIndices${w}`,l)};
            let offsetC${w} = ${m.broadcastedIndicesToOffset(`outputIndices${w}`,l)};
            let indexA${w} = offsetA${w} / 4u;
            let indexB${w} = offsetB${w} / 4u;
            let indexC${w} = offsetC${w} / 4u;
            let componentA${w} = offsetA${w} % 4u;
            let componentB${w} = offsetB${w} % 4u;
            ${$}[${w}] = ${C}(${g(I,R,M)});
          `};n===9?b=`
            var data = vec4<u32>(0);
            ${v("data",0,"u32")}
            ${v("data",1,"u32")}
            ${v("data",2,"u32")}
            ${v("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:b=`
            ${v("outputData[global_idx]",0)}
            ${v("outputData[global_idx]",1)}
            ${v("outputData[global_idx]",2)}
            ${v("outputData[global_idx]",3)}
          `}return`
        ${e.declareVariables(m,o,p,l)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes(u)}
        ${b}
      }`},pp=e=>{let t=e[1].dims,r=e[2].dims,a=e[0].dims,n=e[1].dataType,s=!(z.areEqual(t,r)&&z.areEqual(r,a)),u=t,l=z.size(t);if(s){let o=at.calcShape(at.calcShape(t,r,!1),a,!1);if(!o)throw new Error("Can't perform where op on the given tensors");u=o,l=z.size(u)}return{name:"Where",getShaderSource:o=>cp(o,e,u,s,n),getRunData:()=>({outputs:[{dims:u,dataType:n}],dispatchGroup:{x:Math.ceil(l/64/4)}})}},Lu=e=>{e.compute(pp(e.inputs))}});var ju,qu=L(()=>{"use strict";Ai();_i();ss();bs();$s();sa();Ms();Ws();Us();Ls();qs();Xs();Zs();ru();au();su();xu();Cu();an();Eu();Tu();Mu();zu();Vu();Fu();xr();na();Hu();ju=new Map([["Abs",[Oi]],["Acos",[Ti]],["Acosh",[Ri]],["Add",[us]],["ArgMax",[Ii,ta]],["ArgMin",[Ci,ta]],["Asin",[Pi]],["Asinh",[ki]],["Atan",[Mi]],["Atanh",[Bi]],["AveragePool",[fu,pu]],["BiasAdd",[Ei]],["BiasSplitGelu",[is]],["Cast",[zi,Di]],["Ceil",[Ni]],["ClipV10",[ra]],["Clip",[Wi]],["Concat",[ws,vs]],["Conv",[la,ua]],["ConvTranspose",[ks,Ps]],["Cos",[Vi]],["Cosh",[Ui]],["Div",[ls]],["Einsum",[Ds,zs]],["Elu",[Gi,sn]],["Equal",[ds]],["Erf",[Fi]],["Exp",[Li]],["Expand",[Vs]],["Floor",[Hi]],["FusedConv",[la,ua]],["Gather",[Fs,Gs]],["GatherElements",[js,Hs]],["Gelu",[ji]],["Gemm",[Ks,Ys]],["GlobalAveragePool",[gu,hu]],["GlobalMaxPool",[$u,vu]],["Greater",[ms]],["GreaterOrEqual",[gs]],["InstanceNormalization",[Qs,Js]],["LayerNormalization",[tu,eu]],["LeakyRelu",[qi,sn]],["Less",[hs]],["LessOrEqual",[ys]],["Log",[os]],["MatMul",[nu]],["MaxPool",[bu,wu]],["Mul",[cs]],["Neg",[Yi]],["Not",[Ki]],["Pad",[ou,iu]],["Pow",[ps]],["Range",[Su]],["Reciprocal",[Xi]],["ReduceMin",[yi,et]],["ReduceMean",[pi,et]],["ReduceMax",[gi,et]],["ReduceSum",[wi,et]],["ReduceProd",[bi,et]],["ReduceL1",[fi,et]],["ReduceL2",[mi,et]],["ReduceLogSum",[$i,et]],["ReduceLogSumExp",[hi,et]],["ReduceSumSquare",[vi,et]],["Relu",[Ji]],["Resize",[Iu,Au]],["Sigmoid",[Qi]],["Sin",[Zi]],["Sinh",[es]],["Slice",[Pu,ku]],["SkipLayerNormalization",[_u,Ou]],["Split",[Wu,Nu]],["Sqrt",[ts]],["Softmax",[Bu,Du]],["Sub",[fs]],["Tan",[rs]],["Tanh",[ns]],["ThresholdedRelu",[as,sn]],["Tile",[Gu]],["Transpose",[Zo,ei]],["Where",[Lu]]])});var wn,Ku=L(()=>{"use strict";De();It();ve();wn=class{constructor(t){this.backend=t;this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,a,n,s,u,l){let o=this.backend.device,p=this.backend.getComputePassEncoder();p.setPipeline(t.computePipeline);let m=[];for(let g of n)m.push({binding:m.length,resource:{buffer:g.buffer}});for(let g of s)m.push({binding:m.length,resource:{buffer:g.buffer}});l&&m.push({binding:m.length,resource:l});let b=o.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:m,label:t.programInfo.name});if(p.setBindGroup(0,b),p.dispatchWorkgroups(...u),this.backend.pendingDispatchNumber++,this.backend.isQueryEnabled()){typeof this.backend.queryData>"u"&&(this.backend.queryData=this.backend.gpuDataManager.create(this.backend.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE));let g=this.backend.gpuDataManager.create(this.backend.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.backend.endComputePass(),this.backend.getCommandEncoder().resolveQuerySet(this.backend.querySet,0,2,this.backend.queryData.buffer,0),this.backend.getCommandEncoder().copyBufferToBuffer(this.backend.queryData.buffer,0,g.buffer,0,this.backend.querySetCount*8),this.backend.flush();let v=this.backend.currentKernelId,$=this.backend.kernels.get(v),w=`[${$[0]}] ${$[1]}`;g.buffer.mapAsync(GPUMapMode.READ).then(()=>{let C=new BigUint64Array(g.buffer.getMappedRange()),I=C[0],R=C[1];g.buffer.unmap(),typeof this.backend.queryTimeBase>"u"&&(this.backend.queryTimeBase=I);let M=Number(I-this.backend.queryTimeBase),P=Number(R-this.backend.queryTimeBase);if(!Number.isSafeInteger(M)||!Number.isSafeInteger(P))throw new RangeError("incorrect timestamp range");this.backend.gpuDataManager.release(g.id);let B="";r.forEach((W,H)=>{B+=`input[${H}]: [${W.dims}] | ${wr(W.dataType)}, `});let T="";a.forEach((W,H)=>{T+=`output[${H}]: [${W.dims}] | ${wr(W.dataType)}, `}),console.log(`[profiling] kernel "${v}|${w}" ${B}${T}execution time: ${P-M} ns`)})}this.backend.pendingDispatchNumber>=16&&this.backend.flush()}dispose(){}build(t,r){let a=this.backend.device,n=[];a.features.has("shader-f16")&&n.push("enable f16;");let s=Xo(r),u=t.getShaderSource(s),l=`${n.join(`
`)}
${s.additionalImplementations}
${u}`,o=a.createShaderModule({code:l,label:t.name});Ee("verbose",()=>`[WebGPU] shader code: ${l}`);let p=a.createComputePipeline({compute:{module:o,entryPoint:"main"},layout:"auto",label:t.name});return{programInfo:t,computePipeline:p}}normalizeDispatchGroupSize(t){let r=typeof t=="number"?t:t.x,a=typeof t=="number"?1:t.y||1,n=typeof t=="number"?1:t.z||1,s=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=s&&a<=s&&n<=s)return[r,a,n];let u=r*a*n,l=Math.ceil(Math.sqrt(u));if(l>s){if(l=Math.ceil(Math.cbrt(u)),l>s)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[l,l,l]}else return[l,l,1]}}});var fp,mp,vn,Yu=L(()=>{"use strict";It();Fo();qo();qu();Ku();fp=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let a=0;a<e.length;++a){let n=e[a].dataType;switch(t[a]){case"none":{r.push("");break}case"type":{r.push(`${n}`);break}case"rank":{let s=e[a].dims.length;r.push(`${n};${s}`);break}case"dims":{let s=e[a].dims.join(",");r.push(`${n};${s}`);break}default:throw new Error(`unsupported input dependency: ${t[a]}`)}}return r.join("|")},mp=(e,t)=>{let r=e.name;return e.shaderCache?.hint&&(r+="["+e.shaderCache.hint+"]"),r+=`:${fp(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,r},vn=class{constructor(){this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.pendingDispatchNumber=0;this.querySetCount=2;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t){if(!navigator.gpu)throw new Error("WebGpuBackend: WebGPU is not available.");let r=await navigator.gpu.requestAdapter();if(!r)throw new Error("WebGpuBackend: Failed to get GPU adapter.");this.env=t;let a=[],n={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:a};r.features.has("timestamp-query")&&a.push("timestamp-query"),r.features.has("shader-f16")&&a.push("shader-f16"),this.device=await r.requestDevice(n),this.gpuDataManager=jo(this),this.programManager=new wn(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Uo(t.logLevel,!!t.debug),this.device.onuncapturederror=s=>{s.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${s.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device})}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t={};this.isQueryEnabled()&&(typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1}),this.computePassEncoder=this.getCommandEncoder().beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){this.commandEncoder&&(this.endComputePass(),this.device.queue.submit([this.getCommandEncoder().finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0)}isQueryEnabled(){return!!(this.device.features.has("timestamp-query")&&this.env.webgpu.profilingMode==="default")}run(t,r,a,n,s){let u=[];for(let I=0;I<r.length;++I){let R=this.gpuDataManager.get(r[I].data);if(!R)throw new Error(`no GPU data for input: ${r[I].data}`);u[I]=R}let l=mp(t,r),o=this.programManager.getArtifact(l),{outputs:p,dispatchGroup:m,programUniforms:b}=t.getRunData(r),g=a.length===0?p.map((I,R)=>R):a;if(g.length!==p.length)throw new Error(`Output size ${g.length} must be equal to ${p.length}.`);let v=[],$=[];for(let I=0;I<p.length;++I){if(!Number.isInteger(g[I])||g[I]<-3||g[I]>=p.length)throw new Error(`Invalid output index: ${g[I]}`);if(g[I]===-3)continue;let R=g[I]===-1,M=g[I]===-2,P=R||M?s(p[I].dataType,p[I].dims):n(g[I],p[I].dataType,p[I].dims),B=this.gpuDataManager.get(P.data);if(!B)throw new Error(`no GPU data for output: ${P.data}`);if(R&&this.temporaryData.push(B),M){let T=this.kernelPersistentData.get(this.currentKernelId);T||(T=[],this.kernelPersistentData.set(this.currentKernelId,T)),T.push(B)}v.push(P),$.push(B)}let w;if(b){let I=0,R=0,M=[],P=1;b.forEach(W=>{let H=typeof W.data=="number"?[W.data]:W.data,K;switch(H.length){case 1:K=4;break;case 2:K=8;break;case 3:K=16;break;case 4:K=16;break;case 5:K=16;break;case 6:K=16;break;default:throw new Error(`unsupported data length: ${H.length}`)}(R===5||R===6)&&(K=16),K>P&&(P=K),I=Math.ceil(I/K)*K,R=H.length,M.push(I),I+=H.length*4}),I=Math.ceil(I/P)*P;let B=new ArrayBuffer(I);b.forEach((W,H)=>{let K=M[H],le=typeof W.data=="number"?[W.data]:W.data;W.type==="int32"?new Int32Array(B,K,le.length).set(le):W.type==="uint32"?new Uint32Array(B,K,le.length).set(le):new Float32Array(B,K,le.length).set(le)});let T=this.gpuDataManager.create(I,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(T.buffer,0,B,0,I),this.gpuDataManager.release(T.id),w={offset:0,size:I,buffer:T.buffer}}let C=this.programManager.normalizeDispatchGroupSize(m);return o||(o=this.programManager.build(t,C),this.programManager.setArtifact(l,o)),Ee("info",()=>`[ProgramManager] run "${t.name}" (key=${l}) with ${C[0]}x${C[1]}x${C[2]}`),this.programManager.run(o,r,v,u,$,C,w),v}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,a,n){let s=ju.get(t);if(!s)throw new Error(`kernel not implemented: ${t}`);this.kernels.set(r,[t,n,s[0],[s[1],a]])}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let a of r)this.gpuDataManager.release(a.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,a){let n=this.kernels.get(t);if(!n)throw new Error(`kernel not created: ${t}`);let[s,u,l,o]=n;if(this.currentKernelId!==null)throw new Error(`kernel "[${s}] ${u}" is not allowed to be called recursively`);this.currentKernelId=t,o[0]&&(o[1]=o[0](o[1]),o[0]=void 0),Ee("info",()=>`[WebGPU] Start to run kernel "[${s}] ${u}"...`);let p=this.env.debug;this.temporaryData=[];try{return p&&this.device.pushErrorScope("validation"),l(r,o[1]),0}catch(m){return a.push(Promise.resolve(`[WebGPU] Kernel "[${s}] ${u}" failed. ${m}`)),1}finally{p&&a.push(this.device.popErrorScope().then(m=>m?`GPU validation error for kernel "[${s}] ${u}": ${m.message}`:null));for(let m of this.temporaryData)this.gpuDataManager.release(m.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,a,n){let s=this.sessionExternalDataMapping.get(t);s||(s=new Map,this.sessionExternalDataMapping.set(t,s));let u=s.get(r),l=this.gpuDataManager.registerExternalBuffer(a,n,u?.[1]);return s.set(r,[l,a]),l}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(a=>this.gpuDataManager.unregisterExternalBuffer(a[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw new Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,a){return async()=>{let n=await Kn(this,t,r);return Go(n.buffer,a)}}}});var Xu={};zt(Xu,{init:()=>hp});var Er,ma,hp,Ju=L(()=>{"use strict";De();Yu();It();ge();Er=class e{constructor(t,r,a,n){this.module=t;this.dataType=r;this.data=a;this.dims=n}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=z.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=z.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=z.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(z.size(t)!==z.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},ma=class{constructor(t,r,a){this.module=t;this.backend=r;this.customDataOffset=0;this.customDataSize=0;let n=t.HEAPU32,s=a>>2;this.opKernelContext=n[s++];let u=n[s++];this.outputCount=n[s++],this.customDataOffset=n[s++],this.customDataSize=n[s++];let l=[];for(let o=0;o<u;o++){let p=n[s++],m=n[s++],b=n[s++],g=[];for(let v=0;v<b;v++)g.push(n[s++]);l.push(new Er(t,p,m,g))}this.inputs=l}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(t,r){let a=r?.inputs?.map(l=>typeof l=="number"?this.inputs[l]:l)??this.inputs,n=r?.outputs??[],s=(l,o,p)=>new Er(this.module,o,this.output(l,p),p),u=(l,o)=>{let p=vr(l);if(!p)throw new Error(`Unsupported data type: ${l}`);let m=p*z.size(o);return new Er(this.module,l,this.backend.gpuDataManager.create(m).id,o)};return this.backend.run(t,a,n,s,u)}output(t,r){let a=this.module.stackSave();try{let n=this.module.stackAlloc((1+r.length)*4),s=n>>2;this.module.HEAPU32[s++]=r.length;for(let u=0;u<r.length;u++)this.module.HEAPU32[s++]=r[u];return this.module._JsepOutput(this.opKernelContext,t,n)}catch(n){throw new Error(`Failed to generate kernel's output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(a)}}},hp=async(e,t)=>{let r=e.jsepInit;if(r&&navigator.gpu){if(!t.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using WebGPU EP");let a=new vn;await a.initialize(t),r(a,n=>a.alloc(n),n=>a.free(n),(n,s,u,l=!1)=>{if(l)Ee("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${n}, dst=${s}, size=${u}`),a.memcpy(n,s);else{Ee("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${n}, gpuDataId=${s}, size=${u}`);let o=e.HEAPU8.subarray(n,n+u);a.upload(s,o)}},async(n,s,u)=>{Ee("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${n}, dataOffset=${s}, size=${u}`),await a.download(n,()=>e.HEAPU8.subarray(s,s+u))},(n,s,u)=>a.createKernel(n,s,u,t.debug||t.webgpu.profilingMode==="default"?e.UTF8ToString(e._JsepGetNodeName(s)):`${s}`),n=>a.releaseKernel(n),(n,s,u,l)=>{Ee("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${u}, kernel=${n}, contextDataOffset=${s}`);let o=new ma(e,a,s);return a.computeKernel(n,o,l)})}}});var Zu,gp,yp,el,_r,tl,ha,ga,rl,nl,Qu,al,ol,il,sl=L(()=>{"use strict";Do();Wo();De();Xt();Jr();Zu=!1,gp=e=>{let t=Re(),r=t.stackSave();try{let a=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,a,a+4)!==0&&Ie("Can't get session input/output count."),[t.HEAP32[a/4],t.HEAP32[a/4+1]]}finally{t.stackRestore(r)}},yp=(e,t)=>{Re()._OrtInit(e,t)!==0&&Ie("Can't initialize onnxruntime.")},el=async e=>{yp(e.wasm.numThreads,$r(e.logLevel));{let t=(Ju(),St(Xu)).init;await t(Re(),e)}Zu=!0},_r=new Map,tl=()=>Zu,ha=e=>{let t=Re(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},ga=(e,t)=>{let r=Re(),a=0,n=0,s=0,u=[],l=[],o=[];try{[n,u]=zo(t),a=r._OrtCreateSession(e[0],e[1],n),a===0&&Ie("Can't create a session.");let[p,m]=gp(a),b=[],g=[],v=[];for(let w=0;w<p;w++){let C=r._OrtGetInputName(a,w);C===0&&Ie("Can't get an input name."),l.push(C),b.push(r.UTF8ToString(C))}for(let w=0;w<m;w++){let C=r._OrtGetOutputName(a,w);C===0&&Ie("Can't get an output name."),o.push(C);let I=r.UTF8ToString(C);g.push(I);{let R=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[I]??"cpu";if(R!=="cpu"&&R!=="cpu-pinned"&&R!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${R}.`);v.push(R)}}let $=null;return v.some(w=>w==="gpu-buffer")&&(s=r._OrtCreateBinding(a),s===0&&Ie("Can't create IO binding."),$={handle:s,outputPreferredLocations:v,outputPreferredLocationsEncoded:v.map(w=>jn(w))}),_r.set(a,[a,l,o,$]),[a,b,g]}catch(p){throw l.forEach(m=>r._OrtFree(m)),o.forEach(m=>r._OrtFree(m)),s!==0&&r._OrtReleaseBinding(s),a!==0&&r._OrtReleaseSession(a),p}finally{r._free(e[0]),n!==0&&r._OrtReleaseSessionOptions(n),u.forEach(p=>r._free(p))}},rl=(e,t)=>{let r=ha(e);return ga(r,t)},nl=e=>{let t=Re(),r=_r.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[a,n,s,u]=r;u&&t._OrtReleaseBinding(u.handle),t.jsepUnregisterBuffers?.(e),n.forEach(l=>t._OrtFree(l)),s.forEach(l=>t._OrtFree(l)),t._OrtReleaseSession(a),_r.delete(e)},Qu=(e,t,r,a,n)=>{if(!e){t.push(0);return}let s=Re(),u=e[0],l=e[1],o=e[3],p,m;if(u==="string"&&o==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(o==="gpu-buffer"){let v=e[2].gpuBuffer,$=vr(Hn(u));m=l.reduce((w,C)=>w*C,1)*$,p=s.jsepRegisterBuffer(a,n,v,m)}else{let v=e[2];if(Array.isArray(v)){m=4*v.length,p=s._malloc(m),r.push(p);let $=p/4;for(let w=0;w<v.length;w++){if(typeof v[w]!="string")throw new TypeError(`tensor data at index ${w} is not a string`);s.HEAPU32[$++]=Be(v[w],r)}}else m=v.byteLength,p=s._malloc(m),r.push(p),s.HEAPU8.set(new Uint8Array(v.buffer,v.byteOffset,m),p)}let b=s.stackSave(),g=s.stackAlloc(4*l.length);try{let v=g/4;l.forEach(w=>s.HEAP32[v++]=w);let $=s._OrtCreateTensor(Hn(u),p,m,g,l.length,jn(o));$===0&&Ie(`Can't create tensor for input/output. session=${a}, index=${n}.`),t.push($)}finally{s.stackRestore(b)}},al=async(e,t,r,a,n,s)=>{let u=Re(),l=_r.get(e);if(!l)throw new Error(`cannot run inference. invalid session id: ${e}`);let[o,p,m,b]=l,g=t.length,v=a.length,$=0,w=[],C=[],I=[],R=[],M=u.stackSave(),P=u.stackAlloc(g*4),B=u.stackAlloc(g*4),T=u.stackAlloc(v*4),W=u.stackAlloc(v*4);try{[$,w]=Bo(s);for(let oe=0;oe<g;oe++)Qu(r[oe],C,R,e,t[oe]);for(let oe=0;oe<v;oe++)Qu(n[oe],I,R,e,g+a[oe]);let H=P/4,K=B/4,le=T/4,D=W/4;for(let oe=0;oe<g;oe++)u.HEAPU32[H++]=C[oe],u.HEAPU32[K++]=p[t[oe]];for(let oe=0;oe<v;oe++)u.HEAPU32[le++]=I[oe],u.HEAPU32[D++]=m[a[oe]];if(b){let{handle:oe,outputPreferredLocations:we,outputPreferredLocationsEncoded:j}=b;if(p.length!==g)throw new Error(`input count from feeds (${g}) is expected to be always equal to model's input count (${p.length}).`);for(let Se=0;Se<g;Se++){let Oe=t[Se];await u._OrtBindInput(oe,p[Oe],C[Se])!==0&&Ie(`Can't bind input[${Se}] for session=${e}.`)}for(let Se=0;Se<v;Se++){let Oe=a[Se];n[Se]?.[3]?u._OrtBindOutput(oe,m[Oe],I[Se],0)!==0&&Ie(`Can't bind pre-allocated output[${Se}] for session=${e}.`):u._OrtBindOutput(oe,m[Oe],0,j[Oe])!==0&&Ie(`Can't bind output[${Se}] to ${we[Se]} for session=${e}.`)}}let q;b?q=await u._OrtRunWithBinding(o,b.handle,v,T,$):q=await u._OrtRun(o,B,P,g,W,v,T,$),q!==0&&Ie("failed to call OrtRun().");let xe=[];for(let oe=0;oe<v;oe++){let we=u.HEAPU32[T/4+oe];if(we===I[oe]){xe.push(n[oe]);continue}let j=u.stackSave(),Se=u.stackAlloc(4*4),Oe=!1,Ae,_e=0;try{u._OrtGetTensorData(we,Se,Se+4,Se+8,Se+12)!==0&&Ie(`Can't access output tensor data on index ${oe}.`);let qe=Se/4,Ke=u.HEAPU32[qe++];_e=u.HEAPU32[qe++];let U=u.HEAPU32[qe++],ce=u.HEAPU32[qe++],de=[];for(let Te=0;Te<ce;Te++)de.push(u.HEAPU32[U/4+Te]);u._OrtFree(U);let We=de.reduce((Te,Me)=>Te*Me,1);Ae=wr(Ke);let Ge=b?.outputPreferredLocations[a[oe]];if(Ae==="string"){if(Ge==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let Te=[],Me=_e/4;for(let tt=0;tt<We;tt++){let Le=u.HEAPU32[Me++],Ye=tt===We-1?void 0:u.HEAPU32[Me]-Le;Te.push(u.UTF8ToString(Le,Ye))}xe.push([Ae,de,Te,"cpu"])}else if(Ge==="gpu-buffer"&&We>0){let Te=u.jsepGetBuffer(_e),Me=vr(Ke);if(Me===void 0||!Zr(Ae))throw new Error(`Unsupported data type: ${Ae}`);Oe=!0,xe.push([Ae,de,{gpuBuffer:Te,download:u.jsepCreateDownloader(Te,We*Me,Ae),dispose:()=>{u._OrtReleaseTensor(we)}},"gpu-buffer"])}else{let Te=Qr(Ae),Me=new Te(We);new Uint8Array(Me.buffer,Me.byteOffset,Me.byteLength).set(u.HEAPU8.subarray(_e,_e+Me.byteLength)),xe.push([Ae,de,Me,"cpu"])}}finally{u.stackRestore(j),Ae==="string"&&_e&&u._free(_e),Oe||u._OrtReleaseTensor(we)}}return b&&u._OrtClearBoundOutputs(b.handle),xe}finally{u.stackRestore(M),C.forEach(H=>u._OrtReleaseTensor(H)),I.forEach(H=>u._OrtReleaseTensor(H)),R.forEach(H=>u._free(H)),$!==0&&u._OrtReleaseRunOptions($),w.forEach(H=>u._free(H))}},ol=e=>{let t=Re(),r=_r.get(e);if(!r)throw new Error("invalid session id");let a=r[0],n=t._OrtEndProfiling(a);n===0&&Ie("Can't get an profile file name."),t._OrtFree(n)},il=e=>{let t=[];for(let r of e){let a=r[2];!Array.isArray(a)&&"buffer"in a&&t.push(a.buffer)}return t}});var ul=Yt((Uy,wp)=>{wp.exports='/*!\n * ONNX Runtime Web v1.17.0\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n"use strict";(()=>{var dn=Object.defineProperty;var Su=Object.getOwnPropertyDescriptor;var Cu=Object.getOwnPropertyNames;var Au=Object.prototype.hasOwnProperty;var j=(e,t)=>()=>(e&&(t=e(e=0)),t);var ar=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),_r=(e,t)=>{for(var r in t)dn(e,r,{get:t[r],enumerable:!0})},Iu=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of Cu(t))!Au.call(e,n)&&n!==r&&dn(e,n,{get:()=>t[n],enumerable:!(o=Su(t,n))||o.enumerable});return e};var zt=e=>Iu(dn({},"__esModule",{value:!0}),e);var cn={};_r(cn,{readFile:()=>Eu});var Eu,pn=j(()=>{Eu=void 0});var fn={};_r(fn,{join:()=>Tu});var Tu,mn=j(()=>{Tu=void 0});var co=ar((lo,hn)=>{"use strict";var uo=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){var r=t,o,n;r.ready=new Promise((l,p)=>{o=l,n=p}),r.jsepInit=(l,p,h,x,I,V,N,J)=>{r.ab=l,r.Ra=p,r.Ta=h,r.La=x,r.Sa=I,r.xa=V,r.Ua=N,r.Va=J,p=(Y,ee,Z)=>(...pe)=>{let fe=je,T=ee?.();pe=Y(...pe);let re=ee?.();return T!==re&&(Y=re,Z(T),ee=Z=null),je!=fe?wr():pe},h=Y=>async(...ee)=>{try{if(r.Fa)throw Error("Session already started");let Z=r.Fa={Wa:ee[0],errors:[]},pe=await Y(...ee);if(r.Fa!==Z)throw Error("Session mismatch");l.flush();let fe=Z.errors;if(0<fe.length){let T=await Promise.all(fe);if(T=T.filter(re=>re),0<T.length)throw Error(T.join(`\n`))}return pe}finally{r.Fa=null}},r._OrtRun=h(p(r._OrtRun,()=>r._OrtRun,Y=>r._OrtRun=Y)),r._OrtRunWithBinding=h(p(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,Y=>r._OrtRunWithBinding=Y)),r._OrtBindInput=p(r._OrtBindInput,()=>r._OrtBindInput,Y=>r._OrtBindInput=Y),r.jsepRegisterBuffer=(Y,ee,Z,pe)=>l.registerBuffer(Y,ee,Z,pe),r.jsepUnregisterBuffers=Y=>{l.unregisterBuffers(Y)},r.jsepGetBuffer=Y=>l.getBuffer(Y),r.jsepCreateDownloader=(Y,ee,Z)=>l.createDownloader(Y,ee,Z)};var s=Object.assign({},r),u="./this.program",d=(l,p)=>{throw p},a=typeof window=="object",m=typeof importScripts=="function",g=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",S="",b,w,v;if(g){var y=(pn(),zt(cn)),C=(mn(),zt(fn));S=m?C.dirname(S)+"/":__dirname+"/",b=(l,p)=>(l=l.startsWith("file://")?new URL(l):C.normalize(l),y.readFileSync(l,p?void 0:"utf8")),v=l=>(l=b(l,!0),l.buffer||(l=new Uint8Array(l)),l),w=(l,p,h,x=!0)=>{l=l.startsWith("file://")?new URL(l):C.normalize(l),y.readFile(l,x?void 0:"utf8",(I,V)=>{I?h(I):p(x?V.buffer:V)})},!r.thisProgram&&1<process.argv.length&&(u=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),d=(l,p)=>{throw process.exitCode=l,p},r.inspect=()=>"[Emscripten Module object]"}else(a||m)&&(m?S=self.location.href:typeof document<"u"&&document.currentScript&&(S=document.currentScript.src),e&&(S=e),S.indexOf("blob:")!==0?S=S.substr(0,S.replace(/[?#].*/,"").lastIndexOf("/")+1):S="",b=l=>{var p=new XMLHttpRequest;return p.open("GET",l,!1),p.send(null),p.responseText},m&&(v=l=>{var p=new XMLHttpRequest;return p.open("GET",l,!1),p.responseType="arraybuffer",p.send(null),new Uint8Array(p.response)}),w=(l,p,h)=>{var x=new XMLHttpRequest;x.open("GET",l,!0),x.responseType="arraybuffer",x.onload=()=>{x.status==200||x.status==0&&x.response?p(x.response):h()},x.onerror=h,x.send(null)});var A=r.print||console.log.bind(console),R=r.printErr||console.error.bind(console);Object.assign(r,s),s=null,r.thisProgram&&(u=r.thisProgram),r.quit&&(d=r.quit);var W;r.wasmBinary&&(W=r.wasmBinary);var M=r.noExitRuntime||!0;typeof WebAssembly!="object"&&U("no native wasm support detected");var D,_,z=!1,F,q,le,B,K,xe,ae;function we(){var l=D.buffer;r.HEAP8=q=new Int8Array(l),r.HEAP16=new Int16Array(l),r.HEAP32=B=new Int32Array(l),r.HEAPU8=le=new Uint8Array(l),r.HEAPU16=new Uint16Array(l),r.HEAPU32=K=new Uint32Array(l),r.HEAPF32=xe=new Float32Array(l),r.HEAPF64=ae=new Float64Array(l)}var H,Se=[],Te=[],Ae=[];function Ee(){var l=r.preRun.shift();Se.unshift(l)}var Ne=0,Le=null,Fe=null;function U(l){throw r.onAbort&&r.onAbort(l),l="Aborted("+l+")",R(l),z=!0,F=1,l=new WebAssembly.RuntimeError(l+". Build with -sASSERTIONS for more info."),n(l),l}function ce(l){return l.startsWith("data:application/octet-stream;base64,")}var de;if(de="ort-wasm-simd.wasm",!ce(de)){var We=de;de=r.locateFile?r.locateFile(We,S):S+We}function Ge(l){if(l==de&&W)return new Uint8Array(W);if(v)return v(l);throw"both async and sync fetching of the wasm failed"}function Oe(l){if(!W&&(a||m)){if(typeof fetch=="function"&&!l.startsWith("file://"))return fetch(l,{credentials:"same-origin"}).then(p=>{if(!p.ok)throw"failed to load wasm binary file at \'"+l+"\'";return p.arrayBuffer()}).catch(()=>Ge(l));if(w)return new Promise((p,h)=>{w(l,x=>p(new Uint8Array(x)),h)})}return Promise.resolve().then(()=>Ge(l))}function Me(l,p,h){return Oe(l).then(x=>WebAssembly.instantiate(x,p)).then(x=>x).then(h,x=>{R("failed to asynchronously prepare wasm: "+x),U(x)})}function Je(l,p){var h=de;return W||typeof WebAssembly.instantiateStreaming!="function"||ce(h)||h.startsWith("file://")||g||typeof fetch!="function"?Me(h,l,p):fetch(h,{credentials:"same-origin"}).then(x=>WebAssembly.instantiateStreaming(x,l).then(p,function(I){return R("wasm streaming compile failed: "+I),R("falling back to ArrayBuffer instantiation"),Me(h,l,p)}))}var Ue,He={915968:l=>{r.xa("Abs",l,void 0)},916019:l=>{r.xa("Neg",l,void 0)},916070:l=>{r.xa("Floor",l,void 0)},916123:l=>{r.xa("Ceil",l,void 0)},916175:l=>{r.xa("Reciprocal",l,void 0)},916233:l=>{r.xa("Sqrt",l,void 0)},916285:l=>{r.xa("Exp",l,void 0)},916336:l=>{r.xa("Erf",l,void 0)},916387:l=>{r.xa("Sigmoid",l,void 0)},916442:l=>{r.xa("Log",l,void 0)},916493:l=>{r.xa("Sin",l,void 0)},916544:l=>{r.xa("Cos",l,void 0)},916595:l=>{r.xa("Tan",l,void 0)},916646:l=>{r.xa("Asin",l,void 0)},916698:l=>{r.xa("Acos",l,void 0)},916750:l=>{r.xa("Atan",l,void 0)},916802:l=>{r.xa("Sinh",l,void 0)},916854:l=>{r.xa("Cosh",l,void 0)},916906:l=>{r.xa("Asinh",l,void 0)},916959:l=>{r.xa("Acosh",l,void 0)},917012:l=>{r.xa("Atanh",l,void 0)},917065:l=>{r.xa("Tanh",l,void 0)},917117:l=>{r.xa("Not",l,void 0)},917168:(l,p,h)=>{r.xa("ClipV10",l,{min:p,max:h})},917240:l=>{r.xa("Clip",l,void 0)},917292:(l,p)=>{r.xa("Elu",l,{alpha:p})},917350:l=>{r.xa("Relu",l,void 0)},917402:(l,p)=>{r.xa("LeakyRelu",l,{alpha:p})},917466:(l,p)=>{r.xa("ThresholdedRelu",l,{alpha:p})},917536:(l,p)=>{r.xa("Cast",l,{to:p})},917594:l=>{r.xa("Add",l,void 0)},917645:l=>{r.xa("Sub",l,void 0)},917696:l=>{r.xa("Mul",l,void 0)},917747:l=>{r.xa("Div",l,void 0)},917798:l=>{r.xa("Pow",l,void 0)},917849:l=>{r.xa("Equal",l,void 0)},917902:l=>{r.xa("Greater",l,void 0)},917957:l=>{r.xa("GreaterOrEqual",l,void 0)},918019:l=>{r.xa("Less",l,void 0)},918071:l=>{r.xa("LessOrEqual",l,void 0)},918130:(l,p,h,x,I)=>{r.xa("ReduceMean",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(B.subarray(I>>>0,I+x>>>0)):[]})},918294:(l,p,h,x,I)=>{r.xa("ReduceMax",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(B.subarray(I>>>0,I+x>>>0)):[]})},918457:(l,p,h,x,I)=>{r.xa("ReduceMin",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(B.subarray(I>>>0,I+x>>>0)):[]})},918620:(l,p,h,x,I)=>{r.xa("ReduceProd",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(B.subarray(I>>>0,I+x>>>0)):[]})},918784:(l,p,h,x,I)=>{r.xa("ReduceSum",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(B.subarray(I>>>0,I+x>>>0)):[]})},918947:(l,p,h,x,I)=>{r.xa("ReduceL1",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(B.subarray(I>>>0,I+x>>>0)):[]})},919109:(l,p,h,x,I)=>{r.xa("ReduceL2",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(B.subarray(I>>>0,I+x>>>0)):[]})},919271:(l,p,h,x,I)=>{r.xa("ReduceLogSum",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(B.subarray(I>>>0,I+x>>>0)):[]})},919437:(l,p,h,x,I)=>{r.xa("ReduceSumSquare",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(B.subarray(I>>>0,I+x>>>0)):[]})},919606:(l,p,h,x,I)=>{r.xa("ReduceLogSumExp",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(B.subarray(I>>>0,I+x>>>0)):[]})},919775:l=>{r.xa("Where",l,void 0)},919828:(l,p,h)=>{r.xa("Transpose",l,{perm:p?Array.from(B.subarray(h>>>0,h+p>>>0)):[]})},919941:(l,p,h,x,I,V,N,J,Y,ee,Z,pe,fe,T,re)=>{r.xa("ConvTranspose",l,{format:Y?"NHWC":"NCHW",autoPad:p,dilations:[h],group:x,kernel_shape:[I],pads:[V,N],strides:[J],wIsConst:()=>!!q[ee>>>0],outputPadding:Z?Array.from(B.subarray(pe>>>0,pe+Z>>>0)):[],outputShape:fe?Array.from(B.subarray(T>>>0,T+fe>>>0)):[],activation:ze(re)})},920355:(l,p,h,x,I,V,N,J,Y,ee,Z,pe,fe,T)=>{r.xa("ConvTranspose",l,{format:J?"NHWC":"NCHW",autoPad:p,dilations:Array.from(B.subarray(h>>>0,h+2>>>0)),group:x,kernelShape:Array.from(B.subarray(I>>>0,I+2>>>0)),pads:Array.from(B.subarray(V>>>0,V+4>>>0)),strides:Array.from(B.subarray(N>>>0,N+2>>>0)),wIsConst:()=>!!q[Y>>>0],outputPadding:0<ee?Array.from(B.subarray(Z>>>0,Z+ee>>>0)):[],outputShape:0<pe?Array.from(B.subarray(fe>>>0,fe+pe>>>0)):[],activation:ze(T)})},920912:(l,p,h,x,I,V,N,J,Y,ee,Z,pe,fe,T,re)=>{r.xa("ConvTranspose",l,{format:Y?"NHWC":"NCHW",autoPad:p,dilations:[h],group:x,kernel_shape:[I],pads:[V,N],strides:[J],wIsConst:()=>!!q[ee>>>0],outputPadding:Z?Array.from(B.subarray(pe>>>0,pe+Z>>>0)):[],outputShape:fe?Array.from(B.subarray(T>>>0,T+fe>>>0)):[],activation:ze(re)})},921326:(l,p,h,x,I,V,N,J,Y,ee,Z,pe,fe,T)=>{r.xa("ConvTranspose",l,{format:J?"NHWC":"NCHW",autoPad:p,dilations:Array.from(B.subarray(h>>>0,h+2>>>0)),group:x,kernelShape:Array.from(B.subarray(I>>>0,I+2>>>0)),pads:Array.from(B.subarray(V>>>0,V+4>>>0)),strides:Array.from(B.subarray(N>>>0,N+2>>>0)),wIsConst:()=>!!q[Y>>>0],outputPadding:0<ee?Array.from(B.subarray(Z>>>0,Z+ee>>>0)):[],outputShape:0<pe?Array.from(B.subarray(fe>>>0,fe+pe>>>0)):[],activation:ze(T)})},921883:(l,p)=>{r.xa("GlobalAveragePool",l,{format:p?"NHWC":"NCHW"})},921974:(l,p,h,x,I,V,N,J,Y,ee,Z,pe,fe,T,re,me)=>{r.xa("AveragePool",l,{format:me?"NHWC":"NCHW",auto_pad:p,ceil_mode:h,count_include_pad:x,storage_order:I,dilations:[V,N],kernel_shape:[J,Y],pads:[ee,Z,pe,fe],strides:[T,re]})},922258:(l,p)=>{r.xa("GlobalAveragePool",l,{format:p?"NHWC":"NCHW"})},922349:(l,p,h,x,I,V,N,J,Y,ee,Z,pe,fe,T,re,me)=>{r.xa("AveragePool",l,{format:me?"NHWC":"NCHW",auto_pad:p,ceil_mode:h,count_include_pad:x,storage_order:I,dilations:[V,N],kernel_shape:[J,Y],pads:[ee,Z,pe,fe],strides:[T,re]})},922633:(l,p)=>{r.xa("GlobalMaxPool",l,{format:p?"NHWC":"NCHW"})},922720:(l,p,h,x,I,V,N,J,Y,ee,Z,pe,fe,T,re,me)=>{r.xa("MaxPool",l,{format:me?"NHWC":"NCHW",auto_pad:p,ceil_mode:h,count_include_pad:x,storage_order:I,dilations:[V,N],kernel_shape:[J,Y],pads:[ee,Z,pe,fe],strides:[T,re]})},923e3:(l,p)=>{r.xa("GlobalMaxPool",l,{format:p?"NHWC":"NCHW"})},923087:(l,p,h,x,I,V,N,J,Y,ee,Z,pe,fe,T,re,me)=>{r.xa("MaxPool",l,{format:me?"NHWC":"NCHW",auto_pad:p,ceil_mode:h,count_include_pad:x,storage_order:I,dilations:[V,N],kernel_shape:[J,Y],pads:[ee,Z,pe,fe],strides:[T,re]})},923367:(l,p,h,x,I)=>{r.xa("Gemm",l,{alpha:p,beta:h,transA:x,transB:I})},923471:l=>{r.xa("MatMul",l,void 0)},923525:(l,p,h,x)=>{r.xa("ArgMax",l,{keepDims:!!p,selectLastIndex:!!h,axis:x})},923633:(l,p,h,x)=>{r.xa("ArgMin",l,{keepDims:!!p,selectLastIndex:!!h,axis:x})},923741:(l,p)=>{r.xa("Softmax",l,{axis:p})},923804:(l,p)=>{r.xa("Concat",l,{axis:p})},923864:(l,p,h,x,I)=>{r.xa("Split",l,{axis:p,numOutputs:h,splitSizes:x?Array.from(B.subarray(I>>>0,I+x>>>0)):[]})},924009:l=>{r.xa("Expand",l,void 0)},924063:(l,p)=>{r.xa("Gather",l,{axis:Number(p)})},924134:(l,p)=>{r.xa("GatherElements",l,{axis:Number(p)})},924213:(l,p,h,x,I,V,N,J,Y,ee,Z)=>{r.xa("Resize",l,{antialias:p,axes:h?Array.from(B.subarray(x>>>0,x+h>>>0)):[],coordinateTransformMode:ze(I),cubicCoeffA:V,excludeOutside:N,extrapolationValue:J,keepAspectRatioPolicy:ze(Y),mode:ze(ee),nearestMode:ze(Z)})},924564:(l,p,h,x,I,V,N)=>{r.xa("Slice",l,{starts:p?Array.from(B.subarray(h>>>0,h+p>>>0)):[],ends:x?Array.from(B.subarray(I>>>0,I+x>>>0)):[],axes:V?Array.from(B.subarray(N>>>0,N+V>>>0)):[]})},924795:l=>{r.xa("Tile",l,void 0)},924847:(l,p,h)=>{r.xa("LayerNormalization",l,{axis:Number(p),epsilon:Number(h)})},924954:(l,p,h)=>{r.xa("InstanceNormalization",l,{epsilon:p,format:h?"NHWC":"NCHW"})},925068:(l,p,h)=>{r.xa("InstanceNormalization",l,{epsilon:p,format:h?"NHWC":"NCHW"})},925182:l=>{r.xa("Range",l,void 0)},925235:(l,p)=>{r.xa("Einsum",l,{equation:ze(p)})},925316:(l,p,h,x,I)=>{r.xa("Pad",l,{mode:p,value:h,pads:x?Array.from(B.subarray(I>>>0,I+x>>>0)):[]})},925448:l=>{r.xa("Gelu",l,void 0)},925500:l=>{r.xa("BiasAdd",l,void 0)},925555:l=>{r.xa("BiasSplitGelu",l,void 0)},925616:(l,p)=>{r.xa("SkipLayerNormalization",l,{epsilon:p})},925697:(l,p,h,x,I,V,N,J,Y,ee,Z,pe,fe)=>{r.xa("Conv",l,{format:Y?"NHWC":"NCHW",auto_pad:p,dilations:[h],group:x,kernel_shape:[I],pads:V?Array.from(B.subarray(N>>>0,N+V>>>0)):[],strides:[J],w_is_const:()=>!!q[ee>>>0],activation:ze(Z),activation_params:pe?Array.from(xe.subarray(fe>>>0,fe+pe>>>0)):[]})},926078:(l,p,h,x,I,V,N,J,Y,ee,Z,pe,fe,T,re,me)=>{r.xa("Conv",l,{format:pe?"NHWC":"NCHW",auto_pad:p,dilations:[h,x],group:I,kernel_shape:[V,N],pads:J?Array.from(B.subarray(Y>>>0,Y+J>>>0)):[],strides:[ee,Z],w_is_const:()=>!!q[fe>>>0],activation:ze(T),activation_params:re?Array.from(xe.subarray(me>>>0,me+re>>>0)):[]})},926480:l=>{r.Ua(l)},926514:(l,p)=>r.Va(l,p,r.Fa.Wa,r.Fa.errors),926626:l=>r.Ra(l),926659:l=>r.Ta(l),926691:(l,p,h)=>{r.La(l,p,h,!0)},926730:(l,p,h)=>{r.La(l,p,h)}};function vt(l){this.name="ExitStatus",this.message=`Program terminated with exit(${l})`,this.status=l}var it=l=>{for(;0<l.length;)l.shift()(r)};function yr(l){this.Ka=l-24,this.Pa=function(p){K[this.Ka+4>>2>>>0]=p},this.Oa=function(p){K[this.Ka+8>>2>>>0]=p},this.Ma=function(p,h){this.Na(),this.Pa(p),this.Oa(h)},this.Na=function(){K[this.Ka+16>>2>>>0]=0}}var Vt=0,Ze=0,Gt=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,st=(l,p,h)=>{p>>>=0;var x=p+h;for(h=p;l[h]&&!(h>=x);)++h;if(16<h-p&&l.buffer&&Gt)return Gt.decode(l.subarray(p,h));for(x="";p<h;){var I=l[p++];if(I&128){var V=l[p++]&63;if((I&224)==192)x+=String.fromCharCode((I&31)<<6|V);else{var N=l[p++]&63;I=(I&240)==224?(I&15)<<12|V<<6|N:(I&7)<<18|V<<12|N<<6|l[p++]&63,65536>I?x+=String.fromCharCode(I):(I-=65536,x+=String.fromCharCode(55296|I>>10,56320|I&1023))}}else x+=String.fromCharCode(I)}return x},ze=(l,p)=>(l>>>=0)?st(le,l,p):"",Ut=l=>{for(var p=0,h=0;h<l.length;++h){var x=l.charCodeAt(h);127>=x?p++:2047>=x?p+=2:55296<=x&&57343>=x?(p+=4,++h):p+=3}return p},_t=(l,p,h,x)=>{if(h>>>=0,!(0<x))return 0;var I=h;x=h+x-1;for(var V=0;V<l.length;++V){var N=l.charCodeAt(V);if(55296<=N&&57343>=N){var J=l.charCodeAt(++V);N=65536+((N&1023)<<10)|J&1023}if(127>=N){if(h>=x)break;p[h++>>>0]=N}else{if(2047>=N){if(h+1>=x)break;p[h++>>>0]=192|N>>6}else{if(65535>=N){if(h+2>=x)break;p[h++>>>0]=224|N>>12}else{if(h+3>=x)break;p[h++>>>0]=240|N>>18,p[h++>>>0]=128|N>>12&63}p[h++>>>0]=128|N>>6&63}p[h++>>>0]=128|N&63}}return p[h>>>0]=0,h-I},mt=l=>l%4===0&&(l%100!==0||l%400===0),ut=[0,31,60,91,121,152,182,213,244,274,305,335],Rt=[0,31,59,90,120,151,181,212,243,273,304,334],$t=l=>{var p=Ut(l)+1,h=Dt(p);return h&&_t(l,le,h,p),h},xt=[],Nt=(l,p)=>{xt.length=0;var h;for(p>>=2;h=le[l++>>>0];)p+=h!=105&p,xt.push(h==105?B[p>>>0]:ae[p++>>>1]),++p;return xt},Pt={},Lt=()=>{if(!Mt){var l={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:u||"./this.program"},p;for(p in Pt)Pt[p]===void 0?delete l[p]:l[p]=Pt[p];var h=[];for(p in l)h.push(`${p}=${l[p]}`);Mt=h}return Mt},Mt,Ve=[null,[],[]],Ft=[31,29,31,30,31,30,31,31,30,31,30,31],Bt=[31,28,31,30,31,30,31,31,30,31,30,31];function ie(l){var p=Array(Ut(l)+1);return _t(l,p,0,p.length),p}function St(l,p,h,x){function I(T,re,me){for(T=typeof T=="number"?T.toString():T||"";T.length<re;)T=me[0]+T;return T}function V(T,re){return I(T,re,"0")}function N(T,re){function me(or){return 0>or?-1:0<or?1:0}var pt;return(pt=me(T.getFullYear()-re.getFullYear()))===0&&(pt=me(T.getMonth()-re.getMonth()))===0&&(pt=me(T.getDate()-re.getDate())),pt}function J(T){switch(T.getDay()){case 0:return new Date(T.getFullYear()-1,11,29);case 1:return T;case 2:return new Date(T.getFullYear(),0,3);case 3:return new Date(T.getFullYear(),0,2);case 4:return new Date(T.getFullYear(),0,1);case 5:return new Date(T.getFullYear()-1,11,31);case 6:return new Date(T.getFullYear()-1,11,30)}}function Y(T){var re=T.Da;for(T=new Date(new Date(T.Ea+1900,0,1).getTime());0<re;){var me=T.getMonth(),pt=(mt(T.getFullYear())?Ft:Bt)[me];if(re>pt-T.getDate())re-=pt-T.getDate()+1,T.setDate(1),11>me?T.setMonth(me+1):(T.setMonth(0),T.setFullYear(T.getFullYear()+1));else{T.setDate(T.getDate()+re);break}}return me=new Date(T.getFullYear()+1,0,4),re=J(new Date(T.getFullYear(),0,4)),me=J(me),0>=N(re,T)?0>=N(me,T)?T.getFullYear()+1:T.getFullYear():T.getFullYear()-1}l>>>=0,p>>>=0,h>>>=0,x>>>=0;var ee=B[x+40>>2>>>0];x={Za:B[x>>2>>>0],Ya:B[x+4>>2>>>0],Ga:B[x+8>>2>>>0],Ja:B[x+12>>2>>>0],Ha:B[x+16>>2>>>0],Ea:B[x+20>>2>>>0],Ca:B[x+24>>2>>>0],Da:B[x+28>>2>>>0],bb:B[x+32>>2>>>0],Xa:B[x+36>>2>>>0],$a:ee?ze(ee):""},h=ze(h),ee={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var Z in ee)h=h.replace(new RegExp(Z,"g"),ee[Z]);var pe="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),fe="January February March April May June July August September October November December".split(" ");ee={"%a":T=>pe[T.Ca].substring(0,3),"%A":T=>pe[T.Ca],"%b":T=>fe[T.Ha].substring(0,3),"%B":T=>fe[T.Ha],"%C":T=>V((T.Ea+1900)/100|0,2),"%d":T=>V(T.Ja,2),"%e":T=>I(T.Ja,2," "),"%g":T=>Y(T).toString().substring(2),"%G":T=>Y(T),"%H":T=>V(T.Ga,2),"%I":T=>(T=T.Ga,T==0?T=12:12<T&&(T-=12),V(T,2)),"%j":T=>{for(var re=0,me=0;me<=T.Ha-1;re+=(mt(T.Ea+1900)?Ft:Bt)[me++]);return V(T.Ja+re,3)},"%m":T=>V(T.Ha+1,2),"%M":T=>V(T.Ya,2),"%n":()=>`\n`,"%p":T=>0<=T.Ga&&12>T.Ga?"AM":"PM","%S":T=>V(T.Za,2),"%t":()=>"	","%u":T=>T.Ca||7,"%U":T=>V(Math.floor((T.Da+7-T.Ca)/7),2),"%V":T=>{var re=Math.floor((T.Da+7-(T.Ca+6)%7)/7);if(2>=(T.Ca+371-T.Da-2)%7&&re++,re)re==53&&(me=(T.Ca+371-T.Da)%7,me==4||me==3&&mt(T.Ea)||(re=1));else{re=52;var me=(T.Ca+7-T.Da-1)%7;(me==4||me==5&&mt(T.Ea%400-1))&&re++}return V(re,2)},"%w":T=>T.Ca,"%W":T=>V(Math.floor((T.Da+7-(T.Ca+6)%7)/7),2),"%y":T=>(T.Ea+1900).toString().substring(2),"%Y":T=>T.Ea+1900,"%z":T=>{T=T.Xa;var re=0<=T;return T=Math.abs(T)/60,(re?"+":"-")+("0000"+(T/60*100+T%60)).slice(-4)},"%Z":T=>T.$a,"%%":()=>"%"},h=h.replace(/%%/g,"\\0\\0");for(Z in ee)h.includes(Z)&&(h=h.replace(new RegExp(Z,"g"),ee[Z](x)));return h=h.replace(/\\0\\0/g,"%"),Z=ie(h),Z.length>p?0:(q.set(Z,l>>>0),Z.length-1)}function Ct(l){try{l()}catch(p){U(p)}}function rn(l){var p={},h;for(h in l)(function(x){var I=l[x];p[x]=typeof I=="function"?function(){At.push(x);try{return I.apply(null,arguments)}finally{z||(At.pop()===x||U(),je&&qe===1&&At.length===0&&(qe=0,Ct(er),typeof Fibers<"u"&&Fibers.cb()))}}:I})(h);return p}var qe=0,je=null,Ht=0,At=[],jt={},Kt={},qt=0,kt=null,br=[];function wr(){return new Promise((l,p)=>{kt={resolve:l,reject:p}})}function vr(){var l=Dt(65548),p=l+12;K[l>>2>>>0]=p,K[l+4>>2>>>0]=p+65536,p=At[0];var h=jt[p];return h===void 0&&(h=qt++,jt[p]=h,Kt[h]=p),B[l+8>>2>>>0]=h,l}function $r(l){if(!z){if(qe===0){var p=!1,h=!1;l((x=0)=>{if(!z&&(Ht=x,p=!0,h)){qe=2,Ct(()=>tr(je)),typeof Browser<"u"&&Browser.Ia.Qa&&Browser.Ia.resume(),x=!1;try{var I=(0,_[Kt[B[je+8>>2>>>0]]])()}catch(J){I=J,x=!0}var V=!1;if(!je){var N=kt;N&&(kt=null,(x?N.reject:N.resolve)(I),V=!0)}if(x&&!V)throw I}}),h=!0,p||(qe=1,je=vr(),typeof Browser<"u"&&Browser.Ia.Qa&&Browser.Ia.pause(),Ct(()=>Qt(je)))}else qe===2?(qe=0,Ct(rr),Jt(je),je=null,br.forEach(x=>{if(!z)try{if(x(),!M)try{F=F=x=F,M||(r.onExit&&r.onExit(x),z=!0),d(x,new vt(x))}catch(I){I instanceof vt||I=="unwind"||d(1,I)}}catch(I){I instanceof vt||I=="unwind"||d(1,I)}})):U(`invalid state: ${qe}`);return Ht}}function xr(l){return $r(p=>{l().then(p)})}var lt=[],dt=void 0,Yt=[];function Xt(l,p){if(!dt){dt=new WeakMap;var h=H.length;if(dt)for(var x=0;x<0+h;x++){var I=x,V=lt[I];V||(I>=lt.length&&(lt.length=I+1),lt[I]=V=H.get(I)),(I=V)&&dt.set(I,x)}}if(h=dt.get(l)||0)return h;if(Yt.length)h=Yt.pop();else{try{H.grow(1)}catch(J){throw J instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":J}h=H.length-1}try{x=h,H.set(x,l),lt[x]=H.get(x)}catch(J){if(!(J instanceof TypeError))throw J;if(typeof WebAssembly.Function=="function"){x=WebAssembly.Function,I={i:"i32",j:"i64",f:"f32",d:"f64",p:"i32"},V={parameters:[],results:p[0]=="v"?[]:[I[p[0]]]};for(var N=1;N<p.length;++N)V.parameters.push(I[p[N]]);p=new x(V,l)}else{for(x=[1],I=p.slice(0,1),p=p.slice(1),V={i:127,p:127,j:126,f:125,d:124},x.push(96),N=p.length,128>N?x.push(N):x.push(N%128|128,N>>7),N=0;N<p.length;++N)x.push(V[p[N]]);I=="v"?x.push(0):x.push(1,V[I]),p=[0,97,115,109,1,0,0,0,1],I=x.length,128>I?p.push(I):p.push(I%128|128,I>>7),p.push.apply(p,x),p.push(2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0),p=new WebAssembly.Module(new Uint8Array(p)),p=new WebAssembly.Instance(p,{e:{f:l}}).exports.f}x=h,H.set(x,p),lt[x]=H.get(x)}return dt.set(l,h),h}var Sr={n:function(l,p,h){return xr(async()=>{await r.Sa(l,p,h)})},a:function(l,p,h){throw l>>>=0,new yr(l).Ma(p>>>0,h>>>0),Vt=l,Ze++,Vt},g:function(){return 0},J:function(){},z:function(){},B:function(){},L:function(){return 0},H:function(){},C:function(){},F:function(){},m:function(){},A:function(){},x:function(){},I:function(){},y:function(){},M:()=>!0,q:function(l,p,h){l=p+2097152>>>0<4194305-!!l?(l>>>0)+4294967296*p:NaN,h>>>=0,l=new Date(1e3*l),B[h>>2>>>0]=l.getUTCSeconds(),B[h+4>>2>>>0]=l.getUTCMinutes(),B[h+8>>2>>>0]=l.getUTCHours(),B[h+12>>2>>>0]=l.getUTCDate(),B[h+16>>2>>>0]=l.getUTCMonth(),B[h+20>>2>>>0]=l.getUTCFullYear()-1900,B[h+24>>2>>>0]=l.getUTCDay(),B[h+28>>2>>>0]=(l.getTime()-Date.UTC(l.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},r:function(l,p,h){l=p+2097152>>>0<4194305-!!l?(l>>>0)+4294967296*p:NaN,h>>>=0,l=new Date(1e3*l),B[h>>2>>>0]=l.getSeconds(),B[h+4>>2>>>0]=l.getMinutes(),B[h+8>>2>>>0]=l.getHours(),B[h+12>>2>>>0]=l.getDate(),B[h+16>>2>>>0]=l.getMonth(),B[h+20>>2>>>0]=l.getFullYear()-1900,B[h+24>>2>>>0]=l.getDay(),B[h+28>>2>>>0]=(mt(l.getFullYear())?ut:Rt)[l.getMonth()]+l.getDate()-1|0,B[h+36>>2>>>0]=-(60*l.getTimezoneOffset()),p=new Date(l.getFullYear(),6,1).getTimezoneOffset();var x=new Date(l.getFullYear(),0,1).getTimezoneOffset();B[h+32>>2>>>0]=(p!=x&&l.getTimezoneOffset()==Math.min(x,p))|0},s:function(l){l>>>=0;var p=new Date(B[l+20>>2>>>0]+1900,B[l+16>>2>>>0],B[l+12>>2>>>0],B[l+8>>2>>>0],B[l+4>>2>>>0],B[l>>2>>>0],0),h=B[l+32>>2>>>0],x=p.getTimezoneOffset(),I=new Date(p.getFullYear(),6,1).getTimezoneOffset(),V=new Date(p.getFullYear(),0,1).getTimezoneOffset(),N=Math.min(V,I);return 0>h?B[l+32>>2>>>0]=+(I!=V&&N==x):0<h!=(N==x)&&(I=Math.max(V,I),p.setTime(p.getTime()+6e4*((0<h?N:I)-x))),B[l+24>>2>>>0]=p.getDay(),B[l+28>>2>>>0]=(mt(p.getFullYear())?ut:Rt)[p.getMonth()]+p.getDate()-1|0,B[l>>2>>>0]=p.getSeconds(),B[l+4>>2>>>0]=p.getMinutes(),B[l+8>>2>>>0]=p.getHours(),B[l+12>>2>>>0]=p.getDate(),B[l+16>>2>>>0]=p.getMonth(),B[l+20>>2>>>0]=p.getYear(),l=p.getTime()/1e3,Zt((Ue=l,1<=+Math.abs(Ue)?0<Ue?+Math.floor(Ue/4294967296)>>>0:~~+Math.ceil((Ue-+(~~Ue>>>0))/4294967296)>>>0:0)),l>>>0},o:function(){return-52},p:function(){},v:function(l,p,h){function x(Y){return(Y=Y.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?Y[1]:"GMT"}h>>>=0;var I=new Date().getFullYear(),V=new Date(I,0,1),N=new Date(I,6,1);I=V.getTimezoneOffset();var J=N.getTimezoneOffset();K[l>>>0>>2>>>0]=60*Math.max(I,J),B[p>>>0>>2>>>0]=+(I!=J),l=x(V),p=x(N),l=$t(l),p=$t(p),J<I?(K[h>>2>>>0]=l,K[h+4>>2>>>0]=p):(K[h>>2>>>0]=p,K[h+4>>2>>>0]=l)},e:()=>{U("")},b:function(l,p,h){return l>>>=0,p=Nt(p>>>0,h>>>0),He[l].apply(null,p)},j:function(l,p,h){return l>>>=0,p=Nt(p>>>0,h>>>0),He[l].apply(null,p)},h:function(){return Date.now()},w:function(){return 4294901760},c:()=>performance.now(),K:function(l,p,h){return p>>>=0,le.copyWithin(l>>>0>>>0,p>>>0,p+(h>>>0)>>>0)},u:function(l){l>>>=0;var p=le.length;if(4294901760<l)return!1;for(var h=1;4>=h;h*=2){var x=p*(1+.2/h);x=Math.min(x,l+100663296);var I=Math;x=Math.max(l,x);e:{I=I.min.call(I,4294901760,x+(65536-x%65536)%65536)-D.buffer.byteLength+65535>>>16;try{D.grow(I),we();var V=1;break e}catch{}V=void 0}if(V)return!0}return!1},D:function(l,p){l>>>=0,p>>>=0;var h=0;return Lt().forEach(function(x,I){var V=p+h;for(I=K[l+4*I>>2>>>0]=V,V=0;V<x.length;++V)q[I++>>0>>>0]=x.charCodeAt(V);q[I>>0>>>0]=0,h+=x.length+1}),0},E:function(l,p){l>>>=0,p>>>=0;var h=Lt();K[l>>2>>>0]=h.length;var x=0;return h.forEach(function(I){x+=I.length+1}),K[p>>2>>>0]=x,0},f:()=>52,l:function(){return 52},t:function(){return 70},k:function(l,p,h,x){p>>>=0,h>>>=0,x>>>=0;for(var I=0,V=0;V<h;V++){var N=K[p>>2>>>0],J=K[p+4>>2>>>0];p+=8;for(var Y=0;Y<J;Y++){var ee=le[N+Y>>>0],Z=Ve[l];ee===0||ee===10?((l===1?A:R)(st(Z,0)),Z.length=0):Z.push(ee)}I+=J}return K[x>>2>>>0]=I,0},G:St,d:function(l,p,h,x){return St(l>>>0,p>>>0,h>>>0,x>>>0)},i:function(l,p,h,x){let I=H.length;l=new Uint8Array(le.slice(l+p,l+h));try{var V=new WebAssembly.Module(l),N=new WebAssembly.Instance(V,{env:{memory:D}}),J;for(J in N.exports)Xt(N.exports[J]);return I<H.length?I:x}catch(Y){return console.log(Y),x}}};(function(){function l(h){if(h=h.exports,h=rn(h),_=h=Cr(h),D=_.N,we(),H=_.sa,Te.unshift(_.O),Ne--,r.monitorRunDependencies&&r.monitorRunDependencies(Ne),Ne==0&&(Le!==null&&(clearInterval(Le),Le=null),Fe)){var x=Fe;Fe=null,x()}return h}var p={a:Sr};if(Ne++,r.monitorRunDependencies&&r.monitorRunDependencies(Ne),r.instantiateWasm)try{return r.instantiateWasm(p,l)}catch(h){R("Module.instantiateWasm callback failed with error: "+h),n(h)}return Je(p,function(h){l(h.instance)}).catch(n),{}})(),r._OrtInit=(l,p)=>(r._OrtInit=_.P)(l,p),r._OrtGetLastError=(l,p)=>(r._OrtGetLastError=_.Q)(l,p),r._OrtCreateSessionOptions=(l,p,h,x,I,V,N,J,Y,ee)=>(r._OrtCreateSessionOptions=_.R)(l,p,h,x,I,V,N,J,Y,ee),r._OrtAppendExecutionProvider=(l,p)=>(r._OrtAppendExecutionProvider=_.S)(l,p),r._OrtAddFreeDimensionOverride=(l,p,h)=>(r._OrtAddFreeDimensionOverride=_.T)(l,p,h),r._OrtAddSessionConfigEntry=(l,p,h)=>(r._OrtAddSessionConfigEntry=_.U)(l,p,h),r._OrtReleaseSessionOptions=l=>(r._OrtReleaseSessionOptions=_.V)(l),r._OrtCreateSession=(l,p,h)=>(r._OrtCreateSession=_.W)(l,p,h),r._OrtReleaseSession=l=>(r._OrtReleaseSession=_.X)(l),r._OrtGetInputOutputCount=(l,p,h)=>(r._OrtGetInputOutputCount=_.Y)(l,p,h),r._OrtGetInputName=(l,p)=>(r._OrtGetInputName=_.Z)(l,p),r._OrtGetOutputName=(l,p)=>(r._OrtGetOutputName=_._)(l,p),r._OrtFree=l=>(r._OrtFree=_.$)(l),r._OrtCreateTensor=(l,p,h,x,I,V)=>(r._OrtCreateTensor=_.aa)(l,p,h,x,I,V),r._OrtGetTensorData=(l,p,h,x,I)=>(r._OrtGetTensorData=_.ba)(l,p,h,x,I),r._OrtReleaseTensor=l=>(r._OrtReleaseTensor=_.ca)(l),r._OrtCreateRunOptions=(l,p,h,x)=>(r._OrtCreateRunOptions=_.da)(l,p,h,x),r._OrtAddRunConfigEntry=(l,p,h)=>(r._OrtAddRunConfigEntry=_.ea)(l,p,h),r._OrtReleaseRunOptions=l=>(r._OrtReleaseRunOptions=_.fa)(l),r._OrtCreateBinding=l=>(r._OrtCreateBinding=_.ga)(l),r._OrtBindInput=(l,p,h)=>(r._OrtBindInput=_.ha)(l,p,h),r._OrtBindOutput=(l,p,h,x)=>(r._OrtBindOutput=_.ia)(l,p,h,x),r._OrtClearBoundOutputs=l=>(r._OrtClearBoundOutputs=_.ja)(l),r._OrtReleaseBinding=l=>(r._OrtReleaseBinding=_.ka)(l),r._OrtRunWithBinding=(l,p,h,x,I)=>(r._OrtRunWithBinding=_.la)(l,p,h,x,I),r._OrtRun=(l,p,h,x,I,V,N,J)=>(r._OrtRun=_.ma)(l,p,h,x,I,V,N,J),r._OrtEndProfiling=l=>(r._OrtEndProfiling=_.na)(l),r._JsepOutput=(l,p,h)=>(r._JsepOutput=_.oa)(l,p,h),r._JsepGetNodeName=l=>(r._JsepGetNodeName=_.pa)(l);var Dt=r._malloc=l=>(Dt=r._malloc=_.qa)(l),Jt=r._free=l=>(Jt=r._free=_.ra)(l),Zt=l=>(Zt=_.ta)(l),Wt=()=>(Wt=_.ua)(),It=l=>(It=_.va)(l),ct=l=>(ct=_.wa)(l),Qt=l=>(Qt=_.ya)(l),er=()=>(er=_.za)(),tr=l=>(tr=_.Aa)(l),rr=()=>(rr=_.Ba)();r.___start_em_js=926763,r.___stop_em_js=927536;function Cr(l){l=Object.assign({},l);var p=x=>()=>x()>>>0,h=x=>I=>x(I)>>>0;return l.__errno_location=p(l.__errno_location),l.malloc=h(l.malloc),l.stackSave=p(l.stackSave),l.stackAlloc=h(l.stackAlloc),l}r.stackAlloc=ct,r.stackSave=Wt,r.stackRestore=It,r.addFunction=Xt,r.UTF8ToString=ze,r.stringToUTF8=(l,p,h)=>_t(l,le,p,h),r.lengthBytesUTF8=Ut;var ht;Fe=function l(){ht||nr(),ht||(Fe=l)};function nr(){function l(){if(!ht&&(ht=!0,r.calledRun=!0,!z)){if(it(Te),o(r),r.onRuntimeInitialized&&r.onRuntimeInitialized(),r.postRun)for(typeof r.postRun=="function"&&(r.postRun=[r.postRun]);r.postRun.length;){var p=r.postRun.shift();Ae.unshift(p)}it(Ae)}}if(!(0<Ne)){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;)Ee();it(Se),0<Ne||(r.setStatus?(r.setStatus("Running..."),setTimeout(function(){setTimeout(function(){r.setStatus("")},1),l()},1)):l())}}if(r.preInit)for(typeof r.preInit=="function"&&(r.preInit=[r.preInit]);0<r.preInit.length;)r.preInit.pop()();return nr(),t.ready}})();typeof lo=="object"&&typeof hn=="object"?hn.exports=uo:typeof define=="function"&&define.amd&&define([],()=>uo)});var po=ar(()=>{});var fo=ar(()=>{});var mo={};_r(mo,{cpus:()=>Ou});var Ou,ho=j(()=>{Ou=void 0});var bo=ar((yo,gn)=>{"use strict";var go=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){function r(){return we.buffer!=Ee.buffer&&de(),Ee}function o(){return we.buffer!=Ee.buffer&&de(),Ne}function n(){return we.buffer!=Ee.buffer&&de(),Le}function s(){return we.buffer!=Ee.buffer&&de(),Fe}function u(){return we.buffer!=Ee.buffer&&de(),U}function d(){return we.buffer!=Ee.buffer&&de(),ce}var a=t,m,g;a.ready=new Promise((i,c)=>{m=i,g=c}),a.jsepInit=(i,c,f,$,E,P,G,oe)=>{a.Qb=i,a.wb=c,a.yb=f,a.jb=$,a.xb=E,a.Ea=P,a.zb=G,a.Ab=oe,c=(te,Q,ne)=>(...he)=>{let be=Qe,O=Q?.();he=te(...he);let ue=Q?.();return O!==ue&&(te=ue,ne(O),Q=ne=null),Qe!=be?hu():he},f=te=>async(...Q)=>{try{if(a.bb)throw Error("Session already started");let ne=a.bb={Fb:Q[0],errors:[]},he=await te(...Q);if(a.bb!==ne)throw Error("Session mismatch");i.flush();let be=ne.errors;if(0<be.length){let O=await Promise.all(be);if(O=O.filter(ue=>ue),0<O.length)throw Error(O.join(`\n`))}return he}finally{a.bb=null}},a._OrtRun=f(c(a._OrtRun,()=>a._OrtRun,te=>a._OrtRun=te)),a._OrtRunWithBinding=f(c(a._OrtRunWithBinding,()=>a._OrtRunWithBinding,te=>a._OrtRunWithBinding=te)),a._OrtBindInput=c(a._OrtBindInput,()=>a._OrtBindInput,te=>a._OrtBindInput=te),a.jsepRegisterBuffer=(te,Q,ne,he)=>i.registerBuffer(te,Q,ne,he),a.jsepUnregisterBuffers=te=>{i.unregisterBuffers(te)},a.jsepGetBuffer=te=>i.getBuffer(te),a.jsepCreateDownloader=(te,Q,ne)=>i.createDownloader(te,Q,ne)};var S=Object.assign({},a),b="./this.program",w=(i,c)=>{throw c},v=typeof window=="object",y=typeof importScripts=="function",C=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",A=a.ENVIRONMENT_IS_PTHREAD||!1,R="";function W(i){return a.locateFile?a.locateFile(i,R):R+i}var M,D,_;if(C){var z=(pn(),zt(cn)),F=(mn(),zt(fn));R=y?F.dirname(R)+"/":__dirname+"/",M=(c,f)=>(c=c.startsWith("file://")?new URL(c):F.normalize(c),z.readFileSync(c,f?void 0:"utf8")),_=c=>(c=M(c,!0),c.buffer||(c=new Uint8Array(c)),c),D=(c,f,$,E=!0)=>{c=c.startsWith("file://")?new URL(c):F.normalize(c),z.readFile(c,E?void 0:"utf8",(P,G)=>{P?$(P):f(E?G.buffer:G)})},!a.thisProgram&&1<process.argv.length&&(b=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),w=(c,f)=>{throw process.exitCode=c,f},a.inspect=()=>"[Emscripten Module object]";let i;try{i=po()}catch(c){throw console.error(\'The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?\'),c}global.Worker=i.Worker}else(v||y)&&(y?R=self.location.href:typeof document<"u"&&document.currentScript&&(R=document.currentScript.src),typeof e<"u"&&e&&(R=e),R.indexOf("blob:")!==0?R=R.substr(0,R.replace(/[?#].*/,"").lastIndexOf("/")+1):R="",C||(M=i=>{var c=new XMLHttpRequest;return c.open("GET",i,!1),c.send(null),c.responseText},y&&(_=i=>{var c=new XMLHttpRequest;return c.open("GET",i,!1),c.responseType="arraybuffer",c.send(null),new Uint8Array(c.response)}),D=(i,c,f)=>{var $=new XMLHttpRequest;$.open("GET",i,!0),$.responseType="arraybuffer",$.onload=()=>{$.status==200||$.status==0&&$.response?c($.response):f()},$.onerror=f,$.send(null)}));C&&typeof performance>"u"&&(global.performance=fo().performance);var q=console.log.bind(console),le=console.error.bind(console);C&&(q=(...i)=>z.writeSync(1,i.join(" ")+`\n`),le=(...i)=>z.writeSync(2,i.join(" ")+`\n`));var B=a.print||q,K=a.printErr||le;Object.assign(a,S),S=null,a.thisProgram&&(b=a.thisProgram),a.quit&&(w=a.quit);var xe;a.wasmBinary&&(xe=a.wasmBinary);var ae=a.noExitRuntime||!0;typeof WebAssembly!="object"&&Ze("no native wasm support detected");var we,H,Se,Te=!1,Ae,Ee,Ne,Le,Fe,U,ce;function de(){var i=we.buffer;a.HEAP8=Ee=new Int8Array(i),a.HEAP16=new Int16Array(i),a.HEAP32=Le=new Int32Array(i),a.HEAPU8=Ne=new Uint8Array(i),a.HEAPU16=new Uint16Array(i),a.HEAPU32=Fe=new Uint32Array(i),a.HEAPF32=U=new Float32Array(i),a.HEAPF64=ce=new Float64Array(i)}var We=a.INITIAL_MEMORY||16777216;if(5242880<=We||Ze("INITIAL_MEMORY should be larger than STACK_SIZE, was "+We+"! (STACK_SIZE=5242880)"),A)we=a.wasmMemory;else if(a.wasmMemory)we=a.wasmMemory;else if(we=new WebAssembly.Memory({initial:We/65536,maximum:65536,shared:!0}),!(we.buffer instanceof SharedArrayBuffer))throw K("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),C&&K("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");de(),We=we.buffer.byteLength;var Ge=[],Oe=[],Me=[],Je=0;function Ue(){return ae||0<Je}var He=0,vt=null,it=null;function yr(){He++,a.monitorRunDependencies&&a.monitorRunDependencies(He)}function Vt(){if(He--,a.monitorRunDependencies&&a.monitorRunDependencies(He),He==0&&(vt!==null&&(clearInterval(vt),vt=null),it)){var i=it;it=null,i()}}function Ze(i){throw a.onAbort&&a.onAbort(i),i="Aborted("+i+")",K(i),Te=!0,Ae=1,i=new WebAssembly.RuntimeError(i+". Build with -sASSERTIONS for more info."),g(i),i}function Gt(i){return i.startsWith("data:application/octet-stream;base64,")}var st;st="ort-wasm-simd-threaded.wasm",Gt(st)||(st=W(st));function ze(i){if(i==st&&xe)return new Uint8Array(xe);if(_)return _(i);throw"both async and sync fetching of the wasm failed"}function Ut(i){if(!xe&&(v||y)){if(typeof fetch=="function"&&!i.startsWith("file://"))return fetch(i,{credentials:"same-origin"}).then(c=>{if(!c.ok)throw"failed to load wasm binary file at \'"+i+"\'";return c.arrayBuffer()}).catch(()=>ze(i));if(D)return new Promise((c,f)=>{D(i,$=>c(new Uint8Array($)),f)})}return Promise.resolve().then(()=>ze(i))}function _t(i,c,f){return Ut(i).then($=>WebAssembly.instantiate($,c)).then($=>$).then(f,$=>{K("failed to asynchronously prepare wasm: "+$),Ze($)})}function mt(i,c){var f=st;return xe||typeof WebAssembly.instantiateStreaming!="function"||Gt(f)||f.startsWith("file://")||C||typeof fetch!="function"?_t(f,i,c):fetch(f,{credentials:"same-origin"}).then($=>WebAssembly.instantiateStreaming($,i).then(c,function(E){return K("wasm streaming compile failed: "+E),K("falling back to ArrayBuffer instantiation"),_t(f,i,c)}))}var ut,Rt={1421856:i=>{a.Ea("Abs",i,void 0)},1421907:i=>{a.Ea("Neg",i,void 0)},1421958:i=>{a.Ea("Floor",i,void 0)},1422011:i=>{a.Ea("Ceil",i,void 0)},1422063:i=>{a.Ea("Reciprocal",i,void 0)},1422121:i=>{a.Ea("Sqrt",i,void 0)},1422173:i=>{a.Ea("Exp",i,void 0)},1422224:i=>{a.Ea("Erf",i,void 0)},1422275:i=>{a.Ea("Sigmoid",i,void 0)},1422330:i=>{a.Ea("Log",i,void 0)},1422381:i=>{a.Ea("Sin",i,void 0)},1422432:i=>{a.Ea("Cos",i,void 0)},1422483:i=>{a.Ea("Tan",i,void 0)},1422534:i=>{a.Ea("Asin",i,void 0)},1422586:i=>{a.Ea("Acos",i,void 0)},1422638:i=>{a.Ea("Atan",i,void 0)},1422690:i=>{a.Ea("Sinh",i,void 0)},1422742:i=>{a.Ea("Cosh",i,void 0)},1422794:i=>{a.Ea("Asinh",i,void 0)},1422847:i=>{a.Ea("Acosh",i,void 0)},1422900:i=>{a.Ea("Atanh",i,void 0)},1422953:i=>{a.Ea("Tanh",i,void 0)},1423005:i=>{a.Ea("Not",i,void 0)},1423056:(i,c,f)=>{a.Ea("ClipV10",i,{min:c,max:f})},1423128:i=>{a.Ea("Clip",i,void 0)},1423180:(i,c)=>{a.Ea("Elu",i,{alpha:c})},1423238:i=>{a.Ea("Relu",i,void 0)},1423290:(i,c)=>{a.Ea("LeakyRelu",i,{alpha:c})},1423354:(i,c)=>{a.Ea("ThresholdedRelu",i,{alpha:c})},1423424:i=>{a.zb(i)},1423458:(i,c)=>a.Ab(i,c,a.bb.Fb,a.bb.errors),1423570:(i,c)=>{a.Ea("Cast",i,{to:c})},1423628:i=>{a.Ea("Add",i,void 0)},1423679:i=>{a.Ea("Sub",i,void 0)},1423730:i=>{a.Ea("Mul",i,void 0)},1423781:i=>{a.Ea("Div",i,void 0)},1423832:i=>{a.Ea("Pow",i,void 0)},1423883:i=>{a.Ea("Equal",i,void 0)},1423936:i=>{a.Ea("Greater",i,void 0)},1423991:i=>{a.Ea("GreaterOrEqual",i,void 0)},1424053:i=>{a.Ea("Less",i,void 0)},1424105:i=>{a.Ea("LessOrEqual",i,void 0)},1424164:(i,c,f,$,E)=>{a.Ea("ReduceMean",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(E>>>0,E+$>>>0)):[]})},1424328:(i,c,f,$,E)=>{a.Ea("ReduceMax",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(E>>>0,E+$>>>0)):[]})},1424491:(i,c,f,$,E)=>{a.Ea("ReduceMin",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(E>>>0,E+$>>>0)):[]})},1424654:(i,c,f,$,E)=>{a.Ea("ReduceProd",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(E>>>0,E+$>>>0)):[]})},1424818:(i,c,f,$,E)=>{a.Ea("ReduceSum",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(E>>>0,E+$>>>0)):[]})},1424981:(i,c,f,$,E)=>{a.Ea("ReduceL1",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(E>>>0,E+$>>>0)):[]})},1425143:(i,c,f,$,E)=>{a.Ea("ReduceL2",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(E>>>0,E+$>>>0)):[]})},1425305:(i,c,f,$,E)=>{a.Ea("ReduceLogSum",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(E>>>0,E+$>>>0)):[]})},1425471:(i,c,f,$,E)=>{a.Ea("ReduceSumSquare",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(E>>>0,E+$>>>0)):[]})},1425640:(i,c,f,$,E)=>{a.Ea("ReduceLogSumExp",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(E>>>0,E+$>>>0)):[]})},1425809:i=>{a.Ea("Where",i,void 0)},1425862:(i,c,f)=>{a.Ea("Transpose",i,{perm:c?Array.from(n().subarray(f>>>0,f+c>>>0)):[]})},1425975:(i,c,f,$,E,P,G,oe,te,Q,ne,he,be)=>{a.Ea("Conv",i,{format:te?"NHWC":"NCHW",auto_pad:c,dilations:[f],group:$,kernel_shape:[E],pads:P?Array.from(n().subarray(G>>>0,G+P>>>0)):[],strides:[oe],w_is_const:()=>!!r()[Q>>>0],activation:Ve(ne),activation_params:he?Array.from(u().subarray(be>>>0,be+he>>>0)):[]})},1426356:(i,c,f,$,E,P,G,oe,te,Q,ne,he,be,O,ue,ye)=>{a.Ea("Conv",i,{format:he?"NHWC":"NCHW",auto_pad:c,dilations:[f,$],group:E,kernel_shape:[P,G],pads:oe?Array.from(n().subarray(te>>>0,te+oe>>>0)):[],strides:[Q,ne],w_is_const:()=>!!r()[be>>>0],activation:Ve(O),activation_params:ue?Array.from(u().subarray(ye>>>0,ye+ue>>>0)):[]})},1426758:(i,c,f,$,E,P,G,oe,te,Q,ne,he,be,O,ue)=>{a.Ea("ConvTranspose",i,{format:te?"NHWC":"NCHW",autoPad:c,dilations:[f],group:$,kernel_shape:[E],pads:[P,G],strides:[oe],wIsConst:()=>!!r()[Q>>>0],outputPadding:ne?Array.from(n().subarray(he>>>0,he+ne>>>0)):[],outputShape:be?Array.from(n().subarray(O>>>0,O+be>>>0)):[],activation:Ve(ue)})},1427172:(i,c,f,$,E,P,G,oe,te,Q,ne,he,be,O)=>{a.Ea("ConvTranspose",i,{format:oe?"NHWC":"NCHW",autoPad:c,dilations:Array.from(n().subarray(f>>>0,f+2>>>0)),group:$,kernelShape:Array.from(n().subarray(E>>>0,E+2>>>0)),pads:Array.from(n().subarray(P>>>0,P+4>>>0)),strides:Array.from(n().subarray(G>>>0,G+2>>>0)),wIsConst:()=>!!r()[te>>>0],outputPadding:0<Q?Array.from(n().subarray(ne>>>0,ne+Q>>>0)):[],outputShape:0<he?Array.from(n().subarray(be>>>0,be+he>>>0)):[],activation:Ve(O)})},1427729:(i,c,f,$,E,P,G,oe,te,Q,ne,he,be,O,ue)=>{a.Ea("ConvTranspose",i,{format:te?"NHWC":"NCHW",autoPad:c,dilations:[f],group:$,kernel_shape:[E],pads:[P,G],strides:[oe],wIsConst:()=>!!r()[Q>>>0],outputPadding:ne?Array.from(n().subarray(he>>>0,he+ne>>>0)):[],outputShape:be?Array.from(n().subarray(O>>>0,O+be>>>0)):[],activation:Ve(ue)})},1428143:(i,c,f,$,E,P,G,oe,te,Q,ne,he,be,O)=>{a.Ea("ConvTranspose",i,{format:oe?"NHWC":"NCHW",autoPad:c,dilations:Array.from(n().subarray(f>>>0,f+2>>>0)),group:$,kernelShape:Array.from(n().subarray(E>>>0,E+2>>>0)),pads:Array.from(n().subarray(P>>>0,P+4>>>0)),strides:Array.from(n().subarray(G>>>0,G+2>>>0)),wIsConst:()=>!!r()[te>>>0],outputPadding:0<Q?Array.from(n().subarray(ne>>>0,ne+Q>>>0)):[],outputShape:0<he?Array.from(n().subarray(be>>>0,be+he>>>0)):[],activation:Ve(O)})},1428700:(i,c)=>{a.Ea("GlobalAveragePool",i,{format:c?"NHWC":"NCHW"})},1428791:(i,c,f,$,E,P,G,oe,te,Q,ne,he,be,O,ue,ye)=>{a.Ea("AveragePool",i,{format:ye?"NHWC":"NCHW",auto_pad:c,ceil_mode:f,count_include_pad:$,storage_order:E,dilations:[P,G],kernel_shape:[oe,te],pads:[Q,ne,he,be],strides:[O,ue]})},1429075:(i,c)=>{a.Ea("GlobalAveragePool",i,{format:c?"NHWC":"NCHW"})},1429166:(i,c,f,$,E,P,G,oe,te,Q,ne,he,be,O,ue,ye)=>{a.Ea("AveragePool",i,{format:ye?"NHWC":"NCHW",auto_pad:c,ceil_mode:f,count_include_pad:$,storage_order:E,dilations:[P,G],kernel_shape:[oe,te],pads:[Q,ne,he,be],strides:[O,ue]})},1429450:(i,c)=>{a.Ea("GlobalMaxPool",i,{format:c?"NHWC":"NCHW"})},1429537:(i,c,f,$,E,P,G,oe,te,Q,ne,he,be,O,ue,ye)=>{a.Ea("MaxPool",i,{format:ye?"NHWC":"NCHW",auto_pad:c,ceil_mode:f,count_include_pad:$,storage_order:E,dilations:[P,G],kernel_shape:[oe,te],pads:[Q,ne,he,be],strides:[O,ue]})},1429817:(i,c)=>{a.Ea("GlobalMaxPool",i,{format:c?"NHWC":"NCHW"})},1429904:(i,c,f,$,E,P,G,oe,te,Q,ne,he,be,O,ue,ye)=>{a.Ea("MaxPool",i,{format:ye?"NHWC":"NCHW",auto_pad:c,ceil_mode:f,count_include_pad:$,storage_order:E,dilations:[P,G],kernel_shape:[oe,te],pads:[Q,ne,he,be],strides:[O,ue]})},1430184:(i,c,f,$,E)=>{a.Ea("Gemm",i,{alpha:c,beta:f,transA:$,transB:E})},1430288:i=>{a.Ea("MatMul",i,void 0)},1430342:(i,c,f,$)=>{a.Ea("ArgMax",i,{keepDims:!!c,selectLastIndex:!!f,axis:$})},1430450:(i,c,f,$)=>{a.Ea("ArgMin",i,{keepDims:!!c,selectLastIndex:!!f,axis:$})},1430558:(i,c)=>{a.Ea("Softmax",i,{axis:c})},1430621:(i,c)=>{a.Ea("Concat",i,{axis:c})},1430681:(i,c,f,$,E)=>{a.Ea("Split",i,{axis:c,numOutputs:f,splitSizes:$?Array.from(n().subarray(E>>>0,E+$>>>0)):[]})},1430826:i=>{a.Ea("Expand",i,void 0)},1430880:(i,c)=>{a.Ea("Gather",i,{axis:Number(c)})},1430951:(i,c)=>{a.Ea("GatherElements",i,{axis:Number(c)})},1431030:(i,c,f,$,E,P,G,oe,te,Q,ne)=>{a.Ea("Resize",i,{antialias:c,axes:f?Array.from(n().subarray($>>>0,$+f>>>0)):[],coordinateTransformMode:Ve(E),cubicCoeffA:P,excludeOutside:G,extrapolationValue:oe,keepAspectRatioPolicy:Ve(te),mode:Ve(Q),nearestMode:Ve(ne)})},1431381:(i,c,f,$,E,P,G)=>{a.Ea("Slice",i,{starts:c?Array.from(n().subarray(f>>>0,f+c>>>0)):[],ends:$?Array.from(n().subarray(E>>>0,E+$>>>0)):[],axes:P?Array.from(n().subarray(G>>>0,G+P>>>0)):[]})},1431612:i=>{a.Ea("Tile",i,void 0)},1431664:(i,c,f)=>{a.Ea("LayerNormalization",i,{axis:Number(c),epsilon:Number(f)})},1431771:(i,c,f)=>{a.Ea("InstanceNormalization",i,{epsilon:c,format:f?"NHWC":"NCHW"})},1431885:(i,c,f)=>{a.Ea("InstanceNormalization",i,{epsilon:c,format:f?"NHWC":"NCHW"})},1431999:i=>{a.Ea("Range",i,void 0)},1432052:(i,c)=>{a.Ea("Einsum",i,{equation:Ve(c)})},1432133:(i,c,f,$,E)=>{a.Ea("Pad",i,{mode:c,value:f,pads:$?Array.from(n().subarray(E>>>0,E+$>>>0)):[]})},1432265:i=>{a.Ea("Gelu",i,void 0)},1432317:i=>{a.Ea("BiasAdd",i,void 0)},1432372:i=>{a.Ea("BiasSplitGelu",i,void 0)},1432433:(i,c)=>{a.Ea("SkipLayerNormalization",i,{epsilon:c})},1432514:i=>a.wb(i),1432547:i=>a.yb(i),1432579:(i,c,f)=>{a.jb(i,c,f,!0)},1432618:(i,c,f)=>{a.jb(i,c,f)}};function $t(i){this.name="ExitStatus",this.message=`Program terminated with exit(${i})`,this.status=i}function xt(i){i.terminate(),i.onmessage=()=>{}}function Nt(i){(i=ie.Qa[i])||Ze(),ie.Eb(i)}function Pt(i){var c=ie.tb();if(!c)return 6;ie.Ya.push(c),ie.Qa[i.Xa]=c,c.Xa=i.Xa;var f={cmd:"run",start_routine:i.Gb,arg:i.rb,pthread_ptr:i.Xa};return C&&c.unref(),c.postMessage(f,i.Mb),0}var Lt=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Mt=(i,c,f)=>{c>>>=0;var $=c+f;for(f=c;i[f]&&!(f>=$);)++f;if(16<f-c&&i.buffer&&Lt)return Lt.decode(i.buffer instanceof SharedArrayBuffer?i.slice(c,f):i.subarray(c,f));for($="";c<f;){var E=i[c++];if(E&128){var P=i[c++]&63;if((E&224)==192)$+=String.fromCharCode((E&31)<<6|P);else{var G=i[c++]&63;E=(E&240)==224?(E&15)<<12|P<<6|G:(E&7)<<18|P<<12|G<<6|i[c++]&63,65536>E?$+=String.fromCharCode(E):(E-=65536,$+=String.fromCharCode(55296|E>>10,56320|E&1023))}}else $+=String.fromCharCode(E)}return $},Ve=(i,c)=>(i>>>=0)?Mt(o(),i,c):"";function Ft(i){if(A)return p(1,1,i);Ae=i,Ue()||(ie.Hb(),a.onExit&&a.onExit(i),Te=!0),w(i,new $t(i))}var Bt=i=>{if(Ae=i,A)throw Ct(i),"unwind";Ft(i)},ie={ab:[],Ya:[],mb:[],Qa:{},gb:function(){A?ie.vb():ie.ub()},ub:function(){Ge.unshift(()=>{yr(),ie.Bb(()=>Vt())})},vb:function(){ie.receiveObjectTransfer=ie.Db,ie.threadInitTLS=ie.lb,ie.setExitStatus=ie.kb,ae=!1},kb:function(i){Ae=i},Sb:["$terminateWorker"],Hb:function(){for(var i of ie.Ya)xt(i);for(i of ie.ab)xt(i);ie.ab=[],ie.Ya=[],ie.Qa=[]},Eb:function(i){var c=i.Xa;delete ie.Qa[c],ie.ab.push(i),ie.Ya.splice(ie.Ya.indexOf(i),1),i.Xa=0,an(c)},Db:function(){},lb:function(){ie.mb.forEach(i=>i())},Cb:i=>new Promise(c=>{i.onmessage=P=>{P=P.data;var G=P.cmd;if(P.targetThread&&P.targetThread!=Er()){var oe=ie.Qa[P.Rb];oe?oe.postMessage(P,P.transferList):K(\'Internal error! Worker sent a message "\'+G+\'" to target pthread \'+P.targetThread+", but that thread no longer exists!")}else G==="checkMailbox"?It():G==="spawnThread"?Pt(P):G==="cleanupThread"?Nt(P.thread):G==="killThread"?(P=P.thread,G=ie.Qa[P],delete ie.Qa[P],xt(G),an(P),ie.Ya.splice(ie.Ya.indexOf(G),1),G.Xa=0):G==="cancelThread"?ie.Qa[P.thread].postMessage({cmd:"cancel"}):G==="loaded"?(i.loaded=!0,c(i)):G==="alert"?alert("Thread "+P.threadId+": "+P.text):P.target==="setimmediate"?i.postMessage(P):G==="callHandler"?a[P.handler](...P.args):G&&K("worker sent an unknown command "+G)},i.onerror=P=>{throw K("worker sent an error! "+P.filename+":"+P.lineno+": "+P.message),P},C&&(i.on("message",function(P){i.onmessage({data:P})}),i.on("error",function(P){i.onerror(P)}));var f=[],$=["onExit","onAbort","print","printErr"],E;for(E of $)a.hasOwnProperty(E)&&f.push(E);i.postMessage({cmd:"load",handlers:f,urlOrBlob:a.mainScriptUrlOrBlob||e,wasmMemory:we,wasmModule:Se})}),Bb:function(i){i()},qb:function(){var i=W("ort-wasm-simd-threaded.worker.js");i=new Worker(i),ie.ab.push(i)},tb:function(){return ie.ab.length==0&&(ie.qb(),ie.Cb(ie.ab[0])),ie.ab.pop()}};a.PThread=ie;var St=i=>{for(;0<i.length;)i.shift()(a)};a.establishStackSpace=function(){var i=Er(),c=n()[i+52>>2>>>0];i=n()[i+56>>2>>>0],eo(c,c-i),Tr(c)};function Ct(i){if(A)return p(2,0,i);Bt(i)}a.invokeEntryPoint=function(i,c){i=to.apply(null,[i,c]),Ue()?ie.kb(i):sn(i)};function rn(i){this.fb=i-24,this.pb=function(c){s()[this.fb+4>>2>>>0]=c},this.ob=function(c){s()[this.fb+8>>2>>>0]=c},this.gb=function(c,f){this.nb(),this.pb(c),this.ob(f)},this.nb=function(){s()[this.fb+16>>2>>>0]=0}}var qe=0,je=0;function Ht(i,c,f,$){return A?p(3,1,i,c,f,$):At(i,c,f,$)}function At(i,c,f,$){if(i>>>=0,c>>>=0,f>>>=0,$>>>=0,typeof SharedArrayBuffer>"u")return K("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var E=[];return A&&E.length===0?Ht(i,c,f,$):(i={Gb:f,Xa:i,rb:$,Mb:E},A?(i.Ob="spawnThread",postMessage(i,E),0):Pt(i))}function jt(i,c,f){return A?p(4,1,i,c,f):0}function Kt(i,c){if(A)return p(5,1,i,c)}var qt=i=>{for(var c=0,f=0;f<i.length;++f){var $=i.charCodeAt(f);127>=$?c++:2047>=$?c+=2:55296<=$&&57343>=$?(c+=4,++f):c+=3}return c},kt=(i,c,f,$)=>{if(f>>>=0,!(0<$))return 0;var E=f;$=f+$-1;for(var P=0;P<i.length;++P){var G=i.charCodeAt(P);if(55296<=G&&57343>=G){var oe=i.charCodeAt(++P);G=65536+((G&1023)<<10)|oe&1023}if(127>=G){if(f>=$)break;c[f++>>>0]=G}else{if(2047>=G){if(f+1>=$)break;c[f++>>>0]=192|G>>6}else{if(65535>=G){if(f+2>=$)break;c[f++>>>0]=224|G>>12}else{if(f+3>=$)break;c[f++>>>0]=240|G>>18,c[f++>>>0]=128|G>>12&63}c[f++>>>0]=128|G>>6&63}c[f++>>>0]=128|G&63}}return c[f>>>0]=0,f-E},br=(i,c,f)=>kt(i,o(),c,f);function wr(i,c){if(A)return p(6,1,i,c)}function vr(i,c,f){if(A)return p(7,1,i,c,f)}function $r(i,c,f){return A?p(8,1,i,c,f):0}function xr(i,c){if(A)return p(9,1,i,c)}function lt(i,c,f){if(A)return p(10,1,i,c,f)}function dt(i,c,f,$){if(A)return p(11,1,i,c,f,$)}function Yt(i,c,f,$){if(A)return p(12,1,i,c,f,$)}function Xt(i,c,f,$){if(A)return p(13,1,i,c,f,$)}function Sr(i){if(A)return p(14,1,i)}function Dt(i,c){if(A)return p(15,1,i,c)}function Jt(i,c,f){if(A)return p(16,1,i,c,f)}var Zt=i=>{if(!Te)try{if(i(),!Ue())try{A?sn(Ae):Bt(Ae)}catch(c){c instanceof $t||c=="unwind"||w(1,c)}}catch(c){c instanceof $t||c=="unwind"||w(1,c)}};function Wt(i){i>>>=0,typeof Atomics.Nb=="function"&&(Atomics.Nb(n(),i>>2,i).value.then(It),i+=128,Atomics.store(n(),i>>2,1))}a.__emscripten_thread_mailbox_await=Wt;function It(){var i=Er();i&&(Wt(i),Zt(()=>Zn()))}a.checkMailbox=It;var ct=i=>i%4===0&&(i%100!==0||i%400===0),Qt=[0,31,60,91,121,152,182,213,244,274,305,335],er=[0,31,59,90,120,151,181,212,243,273,304,334];function tr(i,c,f,$,E,P,G,oe){return A?p(17,1,i,c,f,$,E,P,G,oe):-52}function rr(i,c,f,$,E,P,G){if(A)return p(18,1,i,c,f,$,E,P,G)}var Cr=i=>{var c=qt(i)+1,f=on(c);return f&&br(i,f,c),f},ht=[],nr=(i,c)=>{ht.length=0;var f;for(c>>=2;f=o()[i++>>>0];)c+=f!=105&c,ht.push(f==105?n()[c>>>0]:d()[c++>>>1]),++c;return ht},l=i=>{var c=un();return i=i(),Tr(c),i};function p(i,c){var f=arguments.length-2,$=arguments;return l(()=>{for(var E=ln(8*f),P=E>>3,G=0;G<f;G++){var oe=$[2+G];d()[P+G>>>0]=oe}return Jn(i,f,E,c)})}var h=[],x={},I=()=>{if(!V){var i={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:b||"./this.program"},c;for(c in x)x[c]===void 0?delete i[c]:i[c]=x[c];var f=[];for(c in i)f.push(`${c}=${i[c]}`);V=f}return V},V;function N(i,c){if(A)return p(19,1,i,c);i>>>=0,c>>>=0;var f=0;return I().forEach(function($,E){var P=c+f;for(E=s()[i+4*E>>2>>>0]=P,P=0;P<$.length;++P)r()[E++>>0>>>0]=$.charCodeAt(P);r()[E>>0>>>0]=0,f+=$.length+1}),0}function J(i,c){if(A)return p(20,1,i,c);i>>>=0,c>>>=0;var f=I();s()[i>>2>>>0]=f.length;var $=0;return f.forEach(function(E){$+=E.length+1}),s()[c>>2>>>0]=$,0}function Y(i){return A?p(21,1,i):52}function ee(i,c,f,$){return A?p(22,1,i,c,f,$):52}function Z(i,c,f,$,E){return A?p(23,1,i,c,f,$,E):70}var pe=[null,[],[]];function fe(i,c,f,$){if(A)return p(24,1,i,c,f,$);c>>>=0,f>>>=0,$>>>=0;for(var E=0,P=0;P<f;P++){var G=s()[c>>2>>>0],oe=s()[c+4>>2>>>0];c+=8;for(var te=0;te<oe;te++){var Q=o()[G+te>>>0],ne=pe[i];Q===0||Q===10?((i===1?B:K)(Mt(ne,0)),ne.length=0):ne.push(Q)}E+=oe}return s()[$>>2>>>0]=E,0}var T=[31,29,31,30,31,30,31,31,30,31,30,31],re=[31,28,31,30,31,30,31,31,30,31,30,31];function me(i){var c=Array(qt(i)+1);return kt(i,c,0,c.length),c}var pt=(i,c)=>{r().set(i,c>>>0)};function or(i,c,f,$){function E(O,ue,ye){for(O=typeof O=="number"?O.toString():O||"";O.length<ue;)O=ye[0]+O;return O}function P(O,ue){return E(O,ue,"0")}function G(O,ue){function ye(so){return 0>so?-1:0<so?1:0}var Et;return(Et=ye(O.getFullYear()-ue.getFullYear()))===0&&(Et=ye(O.getMonth()-ue.getMonth()))===0&&(Et=ye(O.getDate()-ue.getDate())),Et}function oe(O){switch(O.getDay()){case 0:return new Date(O.getFullYear()-1,11,29);case 1:return O;case 2:return new Date(O.getFullYear(),0,3);case 3:return new Date(O.getFullYear(),0,2);case 4:return new Date(O.getFullYear(),0,1);case 5:return new Date(O.getFullYear()-1,11,31);case 6:return new Date(O.getFullYear()-1,11,30)}}function te(O){var ue=O.Za;for(O=new Date(new Date(O.$a+1900,0,1).getTime());0<ue;){var ye=O.getMonth(),Et=(ct(O.getFullYear())?T:re)[ye];if(ue>Et-O.getDate())ue-=Et-O.getDate()+1,O.setDate(1),11>ye?O.setMonth(ye+1):(O.setMonth(0),O.setFullYear(O.getFullYear()+1));else{O.setDate(O.getDate()+ue);break}}return ye=new Date(O.getFullYear()+1,0,4),ue=oe(new Date(O.getFullYear(),0,4)),ye=oe(ye),0>=G(ue,O)?0>=G(ye,O)?O.getFullYear()+1:O.getFullYear():O.getFullYear()-1}i>>>=0,c>>>=0,f>>>=0,$>>>=0;var Q=n()[$+40>>2>>>0];$={Kb:n()[$>>2>>>0],Jb:n()[$+4>>2>>>0],cb:n()[$+8>>2>>>0],ib:n()[$+12>>2>>>0],eb:n()[$+16>>2>>>0],$a:n()[$+20>>2>>>0],Wa:n()[$+24>>2>>>0],Za:n()[$+28>>2>>>0],Tb:n()[$+32>>2>>>0],Ib:n()[$+36>>2>>>0],Lb:Q?Ve(Q):""},f=Ve(f),Q={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ne in Q)f=f.replace(new RegExp(ne,"g"),Q[ne]);var he="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),be="January February March April May June July August September October November December".split(" ");Q={"%a":O=>he[O.Wa].substring(0,3),"%A":O=>he[O.Wa],"%b":O=>be[O.eb].substring(0,3),"%B":O=>be[O.eb],"%C":O=>P((O.$a+1900)/100|0,2),"%d":O=>P(O.ib,2),"%e":O=>E(O.ib,2," "),"%g":O=>te(O).toString().substring(2),"%G":O=>te(O),"%H":O=>P(O.cb,2),"%I":O=>(O=O.cb,O==0?O=12:12<O&&(O-=12),P(O,2)),"%j":O=>{for(var ue=0,ye=0;ye<=O.eb-1;ue+=(ct(O.$a+1900)?T:re)[ye++]);return P(O.ib+ue,3)},"%m":O=>P(O.eb+1,2),"%M":O=>P(O.Jb,2),"%n":()=>`\n`,"%p":O=>0<=O.cb&&12>O.cb?"AM":"PM","%S":O=>P(O.Kb,2),"%t":()=>"	","%u":O=>O.Wa||7,"%U":O=>P(Math.floor((O.Za+7-O.Wa)/7),2),"%V":O=>{var ue=Math.floor((O.Za+7-(O.Wa+6)%7)/7);if(2>=(O.Wa+371-O.Za-2)%7&&ue++,ue)ue==53&&(ye=(O.Wa+371-O.Za)%7,ye==4||ye==3&&ct(O.$a)||(ue=1));else{ue=52;var ye=(O.Wa+7-O.Za-1)%7;(ye==4||ye==5&&ct(O.$a%400-1))&&ue++}return P(ue,2)},"%w":O=>O.Wa,"%W":O=>P(Math.floor((O.Za+7-(O.Wa+6)%7)/7),2),"%y":O=>(O.$a+1900).toString().substring(2),"%Y":O=>O.$a+1900,"%z":O=>{O=O.Ib;var ue=0<=O;return O=Math.abs(O)/60,(ue?"+":"-")+("0000"+(O/60*100+O%60)).slice(-4)},"%Z":O=>O.Lb,"%%":()=>"%"},f=f.replace(/%%/g,"\\0\\0");for(ne in Q)f.includes(ne)&&(f=f.replace(new RegExp(ne,"g"),Q[ne]($)));return f=f.replace(/\\0\\0/g,"%"),ne=me(f),ne.length>c?0:(pt(ne,i),ne.length-1)}function Ar(i){try{i()}catch(c){Ze(c)}}function pu(i){var c={},f;for(f in i)(function($){var E=i[$];c[$]=typeof E=="function"?function(){Ir.push($);try{return E.apply(null,arguments)}finally{Te||(Ir.pop()===$||Ze(),Qe&&gt===1&&Ir.length===0&&(gt=0,Je+=1,Ar(no),typeof Fibers<"u"&&Fibers.Ub()))}}:E})(f);return c}var gt=0,Qe=null,jn=0,Ir=[],Kn={},qn={},fu=0,nn=null,mu=[];function hu(){return new Promise((i,c)=>{nn={resolve:i,reject:c}})}function gu(){var i=on(65548),c=i+12;s()[i>>2>>>0]=c,s()[i+4>>2>>>0]=c+65536,c=Ir[0];var f=Kn[c];return f===void 0&&(f=fu++,Kn[c]=f,qn[f]=c),c=f,n()[i+8>>2>>>0]=c,i}function yu(){var i=n()[Qe+8>>2>>>0];return i=H[qn[i]],--Je,i()}function bu(i){if(!Te){if(gt===0){var c=!1,f=!1;i(($=0)=>{if(!Te&&(jn=$,c=!0,f)){gt=2,Ar(()=>oo(Qe)),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.resume(),$=!1;try{var E=yu()}catch(oe){E=oe,$=!0}var P=!1;if(!Qe){var G=nn;G&&(nn=null,($?G.reject:G.resolve)(E),P=!0)}if($&&!P)throw E}}),f=!0,c||(gt=1,Qe=gu(),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.pause(),Ar(()=>ro(Qe)))}else gt===2?(gt=0,Ar(ao),Yn(Qe),Qe=null,mu.forEach($=>Zt($))):Ze(`invalid state: ${gt}`);return jn}}function wu(i){return bu(c=>{i().then(c)})}ie.gb();var vu=[null,Ft,Ct,Ht,jt,Kt,wr,vr,$r,xr,lt,dt,Yt,Xt,Sr,Dt,Jt,tr,rr,N,J,Y,ee,Z,fe],$u={r:function(i,c,f){return wu(async()=>{await a.xb(i,c,f)})},b:function(i,c,f){throw i>>>=0,new rn(i).gb(c>>>0,f>>>0),qe=i,je++,qe},P:function(i){Xn(i>>>0,!y,1,!v,131072,!1),ie.lb()},n:function(i){i>>>=0,A?postMessage({cmd:"cleanupThread",thread:i}):Nt(i)},K:At,g:jt,V:Kt,F:wr,H:vr,y:$r,T:xr,L:lt,S:dt,p:Yt,G:Xt,D:Sr,U:Dt,E:Jt,q:()=>!0,B:function(i,c){i>>>=0,i==c>>>0?setTimeout(()=>It()):A?postMessage({targetThread:i,cmd:"checkMailbox"}):(i=ie.Qa[i])&&i.postMessage({cmd:"checkMailbox"})},N:function(){return-1},O:Wt,X:function(i){C&&ie.Qa[i>>>0].ref()},u:function(i,c,f){i=c+2097152>>>0<4194305-!!i?(i>>>0)+4294967296*c:NaN,f>>>=0,i=new Date(1e3*i),n()[f>>2>>>0]=i.getUTCSeconds(),n()[f+4>>2>>>0]=i.getUTCMinutes(),n()[f+8>>2>>>0]=i.getUTCHours(),n()[f+12>>2>>>0]=i.getUTCDate(),n()[f+16>>2>>>0]=i.getUTCMonth(),n()[f+20>>2>>>0]=i.getUTCFullYear()-1900,n()[f+24>>2>>>0]=i.getUTCDay(),i=(i.getTime()-Date.UTC(i.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,n()[f+28>>2>>>0]=i},v:function(i,c,f){i=c+2097152>>>0<4194305-!!i?(i>>>0)+4294967296*c:NaN,f>>>=0,i=new Date(1e3*i),n()[f>>2>>>0]=i.getSeconds(),n()[f+4>>2>>>0]=i.getMinutes(),n()[f+8>>2>>>0]=i.getHours(),n()[f+12>>2>>>0]=i.getDate(),n()[f+16>>2>>>0]=i.getMonth(),n()[f+20>>2>>>0]=i.getFullYear()-1900,n()[f+24>>2>>>0]=i.getDay(),c=(ct(i.getFullYear())?Qt:er)[i.getMonth()]+i.getDate()-1|0,n()[f+28>>2>>>0]=c,n()[f+36>>2>>>0]=-(60*i.getTimezoneOffset()),c=new Date(i.getFullYear(),6,1).getTimezoneOffset();var $=new Date(i.getFullYear(),0,1).getTimezoneOffset();i=(c!=$&&i.getTimezoneOffset()==Math.min($,c))|0,n()[f+32>>2>>>0]=i},w:function(i){i>>>=0;var c=new Date(n()[i+20>>2>>>0]+1900,n()[i+16>>2>>>0],n()[i+12>>2>>>0],n()[i+8>>2>>>0],n()[i+4>>2>>>0],n()[i>>2>>>0],0),f=n()[i+32>>2>>>0],$=c.getTimezoneOffset(),E=new Date(c.getFullYear(),6,1).getTimezoneOffset(),P=new Date(c.getFullYear(),0,1).getTimezoneOffset(),G=Math.min(P,E);return 0>f?n()[i+32>>2>>>0]=+(E!=P&&G==$):0<f!=(G==$)&&(E=Math.max(P,E),c.setTime(c.getTime()+6e4*((0<f?G:E)-$))),n()[i+24>>2>>>0]=c.getDay(),f=(ct(c.getFullYear())?Qt:er)[c.getMonth()]+c.getDate()-1|0,n()[i+28>>2>>>0]=f,n()[i>>2>>>0]=c.getSeconds(),n()[i+4>>2>>>0]=c.getMinutes(),n()[i+8>>2>>>0]=c.getHours(),n()[i+12>>2>>>0]=c.getDate(),n()[i+16>>2>>>0]=c.getMonth(),n()[i+20>>2>>>0]=c.getYear(),i=c.getTime()/1e3,Qn((ut=i,1<=+Math.abs(ut)?0<ut?+Math.floor(ut/4294967296)>>>0:~~+Math.ceil((ut-+(~~ut>>>0))/4294967296)>>>0:0)),i>>>0},s:tr,t:rr,A:function(i,c,f){function $(Q){return(Q=Q.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?Q[1]:"GMT"}i>>>=0,c>>>=0,f>>>=0;var E=new Date().getFullYear(),P=new Date(E,0,1),G=new Date(E,6,1);E=P.getTimezoneOffset();var oe=G.getTimezoneOffset(),te=Math.max(E,oe);s()[i>>2>>>0]=60*te,n()[c>>2>>>0]=+(E!=oe),i=$(P),c=$(G),i=Cr(i),c=Cr(c),oe<E?(s()[f>>2>>>0]=i,s()[f+4>>2>>>0]=c):(s()[f>>2>>>0]=c,s()[f+4>>2>>>0]=i)},e:()=>{Ze("")},c:function(i,c,f){return i>>>=0,c=nr(c>>>0,f>>>0),Rt[i].apply(null,c)},l:function(i,c,f){return i>>>=0,c=nr(c>>>0,f>>>0),Rt[i].apply(null,c)},o:function(){},k:function(){return Date.now()},W:()=>{throw Je+=1,"unwind"},C:function(){return 4294901760},d:()=>performance.timeOrigin+performance.now(),i:function(){return C?(ho(),zt(mo)).cpus().length:navigator.hardwareConcurrency},M:function(i,c,f,$){for(ie.Pb=c>>>0,h.length=f,c=$>>>0>>3,$=0;$<f;$++)h[$]=d()[c+$>>>0];return(0>i?Rt[-i-1]:vu[i]).apply(null,h)},z:function(i){i>>>=0;var c=o().length;if(i<=c||4294901760<i)return!1;for(var f=1;4>=f;f*=2){var $=c*(1+.2/f);$=Math.min($,i+100663296);var E=Math;$=Math.max(i,$);e:{E=E.min.call(E,4294901760,$+(65536-$%65536)%65536)-we.buffer.byteLength+65535>>>16;try{we.grow(E),de();var P=1;break e}catch{}P=void 0}if(P)return!0}return!1},Q:N,R:J,J:Bt,h:Y,m:ee,x:Z,j:fe,a:we||a.wasmMemory,I:or,f:function(i,c,f,$){return or(i>>>0,c>>>0,f>>>0,$>>>0)}};(function(){function i(f,$){return f=f.exports,f=pu(f),H=f=xu(f),ie.mb.push(H.Da),Oe.unshift(H.Y),Se=$,Vt(),f}var c={a:$u};if(yr(),a.instantiateWasm)try{return a.instantiateWasm(c,i)}catch(f){K("Module.instantiateWasm callback failed with error: "+f),g(f)}return mt(c,function(f){i(f.instance,f.module)}).catch(g),{}})(),a._OrtInit=(i,c)=>(a._OrtInit=H.Z)(i,c),a._OrtGetLastError=(i,c)=>(a._OrtGetLastError=H._)(i,c),a._OrtCreateSessionOptions=(i,c,f,$,E,P,G,oe,te,Q)=>(a._OrtCreateSessionOptions=H.$)(i,c,f,$,E,P,G,oe,te,Q),a._OrtAppendExecutionProvider=(i,c)=>(a._OrtAppendExecutionProvider=H.aa)(i,c),a._OrtAddFreeDimensionOverride=(i,c,f)=>(a._OrtAddFreeDimensionOverride=H.ba)(i,c,f),a._OrtAddSessionConfigEntry=(i,c,f)=>(a._OrtAddSessionConfigEntry=H.ca)(i,c,f),a._OrtReleaseSessionOptions=i=>(a._OrtReleaseSessionOptions=H.da)(i),a._OrtCreateSession=(i,c,f)=>(a._OrtCreateSession=H.ea)(i,c,f),a._OrtReleaseSession=i=>(a._OrtReleaseSession=H.fa)(i),a._OrtGetInputOutputCount=(i,c,f)=>(a._OrtGetInputOutputCount=H.ga)(i,c,f),a._OrtGetInputName=(i,c)=>(a._OrtGetInputName=H.ha)(i,c),a._OrtGetOutputName=(i,c)=>(a._OrtGetOutputName=H.ia)(i,c),a._OrtFree=i=>(a._OrtFree=H.ja)(i),a._OrtCreateTensor=(i,c,f,$,E,P)=>(a._OrtCreateTensor=H.ka)(i,c,f,$,E,P),a._OrtGetTensorData=(i,c,f,$,E)=>(a._OrtGetTensorData=H.la)(i,c,f,$,E),a._OrtReleaseTensor=i=>(a._OrtReleaseTensor=H.ma)(i),a._OrtCreateRunOptions=(i,c,f,$)=>(a._OrtCreateRunOptions=H.na)(i,c,f,$),a._OrtAddRunConfigEntry=(i,c,f)=>(a._OrtAddRunConfigEntry=H.oa)(i,c,f),a._OrtReleaseRunOptions=i=>(a._OrtReleaseRunOptions=H.pa)(i),a._OrtCreateBinding=i=>(a._OrtCreateBinding=H.qa)(i),a._OrtBindInput=(i,c,f)=>(a._OrtBindInput=H.ra)(i,c,f),a._OrtBindOutput=(i,c,f,$)=>(a._OrtBindOutput=H.sa)(i,c,f,$),a._OrtClearBoundOutputs=i=>(a._OrtClearBoundOutputs=H.ta)(i),a._OrtReleaseBinding=i=>(a._OrtReleaseBinding=H.ua)(i),a._OrtRunWithBinding=(i,c,f,$,E)=>(a._OrtRunWithBinding=H.va)(i,c,f,$,E),a._OrtRun=(i,c,f,$,E,P,G,oe)=>(a._OrtRun=H.wa)(i,c,f,$,E,P,G,oe),a._OrtEndProfiling=i=>(a._OrtEndProfiling=H.xa)(i),a._JsepOutput=(i,c,f)=>(a._JsepOutput=H.ya)(i,c,f),a._JsepGetNodeName=i=>(a._JsepGetNodeName=H.za)(i);var Er=a._pthread_self=()=>(Er=a._pthread_self=H.Aa)(),on=a._malloc=i=>(on=a._malloc=H.Ba)(i),Yn=a._free=i=>(Yn=a._free=H.Ca)(i);a.__emscripten_tls_init=()=>(a.__emscripten_tls_init=H.Da)();var Xn=a.__emscripten_thread_init=(i,c,f,$,E,P)=>(Xn=a.__emscripten_thread_init=H.Fa)(i,c,f,$,E,P);a.__emscripten_thread_crashed=()=>(a.__emscripten_thread_crashed=H.Ga)();var Jn=(i,c,f,$)=>(Jn=H.Ha)(i,c,f,$),an=i=>(an=H.Ia)(i),sn=a.__emscripten_thread_exit=i=>(sn=a.__emscripten_thread_exit=H.Ja)(i),Zn=a.__emscripten_check_mailbox=()=>(Zn=a.__emscripten_check_mailbox=H.Ka)(),Qn=i=>(Qn=H.La)(i),eo=(i,c)=>(eo=H.Ma)(i,c),un=()=>(un=H.Na)(),Tr=i=>(Tr=H.Oa)(i),ln=i=>(ln=H.Pa)(i),to=a.dynCall_ii=(i,c)=>(to=a.dynCall_ii=H.Ra)(i,c),ro=i=>(ro=H.Sa)(i),no=()=>(no=H.Ta)(),oo=i=>(oo=H.Ua)(i),ao=()=>(ao=H.Va)();a.___start_em_js=1432651,a.___stop_em_js=1432812;function xu(i){i=Object.assign({},i);var c=$=>()=>$()>>>0,f=$=>E=>$(E)>>>0;return i.__errno_location=c(i.__errno_location),i.pthread_self=c(i.pthread_self),i.malloc=f(i.malloc),i.stackSave=c(i.stackSave),i.stackAlloc=f(i.stackAlloc),i}a.keepRuntimeAlive=Ue,a.wasmMemory=we,a.stackAlloc=ln,a.stackSave=un,a.stackRestore=Tr,a.UTF8ToString=Ve,a.stringToUTF8=br,a.lengthBytesUTF8=qt,a.ExitStatus=$t,a.PThread=ie;var Or;it=function i(){Or||io(),Or||(it=i)};function io(){function i(){if(!Or&&(Or=!0,a.calledRun=!0,!Te)&&(A||St(Oe),m(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),!A)){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;){var c=a.postRun.shift();Me.unshift(c)}St(Me)}}if(!(0<He))if(A)m(a),A||St(Oe),startWorker(a);else{if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)Ge.unshift(a.preRun.shift());St(Ge),0<He||(a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),i()},1)):i())}}if(a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);0<a.preInit.length;)a.preInit.pop()();return io(),t.ready}})();typeof yo=="object"&&typeof gn=="object"?gn.exports=go:typeof define=="function"&&define.amd&&define([],()=>go)});var wo=ar((mc,_u)=>{_u.exports=\'"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>(0,eval)(fs.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason??e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err("worker.js received unknown command "+e.data.cmd),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed&&Module.__emscripten_thread_crashed(),a}}self.onmessage=handleMessage;\\n\'});var wn,sr,ur,Pr,lr,Ao,vn,ke=j(()=>{"use strict";wn=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},sr=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},ur=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],Pr=e=>{switch(e){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},lr=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Ao=e=>e==="float32"||e==="int32"||e==="int64"||e==="bool"||e==="float16"||e==="uint32",vn=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var Vu,Gu,Io,Eo,To,Uu,Ie,yt=j(()=>{"use strict";ke();Vu=["V","I","W","E","F"],Gu=(e,t)=>{console.log(`[${Vu[e]},${new Date().toISOString()}]${t}`)},To=(e,t)=>{Io=e,Eo=t},Uu=(e,t)=>{let r=lr(e),o=lr(Io);r>=o&&Gu(r,typeof t=="function"?t():t)},Ie=(...e)=>{Eo&&Uu(...e)}});var Oo,_o=j(()=>{"use strict";ke();Oo=(e,t)=>new(Pr(t))(e)});var Ro=j(()=>{"use strict"});var Mr,Nu,Po,xn,$n,Mo,Bo=j(()=>{"use strict";yt();Ro();Mr=e=>Math.ceil(e/16)*16,Nu=1,Po=()=>Nu++,xn=async(e,t,r,o)=>{let n=Mr(r),s=e.device.createBuffer({size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let u=e.getCommandEncoder();e.endComputePass(),u.copyBufferToBuffer(t,0,s,0,n),e.flush(),await s.mapAsync(GPUMapMode.READ);let d=s.getMappedRange();if(o){let a=o();return a.set(new Uint8Array(d,0,r)),a}else return new Uint8Array(d.slice(0,r))}finally{s.destroy()}},$n=class{constructor(t){this.backend=t;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map}upload(t,r){let o=r.buffer,n=r.byteOffset,s=r.byteLength,u=Mr(s),d=this.storageCache.get(t);if(!d)throw new Error("gpu data for uploading does not exist");if(d.originalSize!==s)throw new Error(`inconsistent data size. gpu data size=${d.originalSize}, data size=${s}`);let a=this.backend.device.createBuffer({mappedAtCreation:!0,size:u,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),m=a.getMappedRange();new Uint8Array(m).set(new Uint8Array(o,n,s)),a.unmap();let g=this.backend.getCommandEncoder();this.backend.endComputePass(),g.copyBufferToBuffer(a,0,d.gpuData.buffer,0,u),Ie("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(a)}memcpy(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("source gpu data for memcpy does not exist");let n=this.storageCache.get(r);if(!n)throw new Error("destination gpu data for memcpy does not exist");if(o.originalSize!==n.originalSize)throw new Error("inconsistent source and destination gpu data size");let s=Mr(o.originalSize),u=this.backend.getCommandEncoder();this.backend.endComputePass(),u.copyBufferToBuffer(o.gpuData.buffer,0,n.gpuData.buffer,0,s)}registerExternalBuffer(t,r,o){let n;if(o){if(n=this.externalBuffers.get(o),n===void 0)throw new Error("previous buffer is not registered");if(t===o)return Ie("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${n}, buffer is the same, skip.`),n;this.externalBuffers.delete(o)}else n=Po();return this.storageCache.set(n,{gpuData:{id:n,type:0,buffer:t},originalSize:r}),this.externalBuffers.set(t,n),Ie("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${n}, registered.`),n}unregisterExternalBuffer(t){let r=this.externalBuffers.get(t);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(t),Ie("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let o=Mr(t),n,s=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,u=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(s||u){let a=s?this.freeBuffers:this.freeUniformBuffers,m=a.get(o);m||(m=[],a.set(o,m)),m.length>0?n=m.pop():n=this.backend.device.createBuffer({size:o,usage:r})}else n=this.backend.device.createBuffer({size:o,usage:r});let d={id:Po(),type:0,buffer:n};return this.storageCache.set(d.id,{gpuData:d,originalSize:t}),Ie("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${d.id}`),d}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r=this.storageCache.get(t);if(!r)throw new Error("releasing data does not exist");return Ie("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("data does not exist");await xn(this.backend,o.gpuData.buffer,o.originalSize,r)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();this.buffersForUploadingPending=[];for(let t of this.buffersPending)(t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(t.size).push(t):(t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(t.size).push(t):t.destroy();this.buffersPending=[]}dispose(){this.freeBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map}},Mo=(...e)=>new $n(...e)});var Sn,se,Re=j(()=>{"use strict";Sn=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this._cacheKey||(this._cacheKey=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this._cacheKey}},se=e=>new Sn(e)});var Cn,et,k,Tt,Br,kr,Dr,ge=j(()=>{"use strict";Cn=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},et=class{static calcShape(t,r,o=!1){let n=t.length,s=r.length;if(n===0)return r;if(s===0)return t;let u=Math.max(t.length,r.length),d=new Array(u);if(o){if(n<2||s<2)return;let a=Cn.calcMatMulShape([t[n-2],t[n-1]],[r[s-2],r[s-1]]);if(a===void 0)return;[d[u-2],d[u-1]]=a}for(let a=o?3:1;a<=u;a++){let m=n-a<0?1:t[n-a],g=s-a<0?1:r[s-a];if(m!==g&&m>1&&g>1)return;d[u-a]=Math.max(m,g)}return d}static isValidBroadcast(t,r){let o=t.length,n=r.length;if(o>n)return!1;for(let s=1;s<=o;s++)if(t[o-s]!==1&&t[o-s]!==r[n-s])return!1;return!0}},k=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,o){let n=1;for(let s=r;s<o;s++){if(t[s]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");n*=t[s]}return n}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let o=new Array(r);o[r-1]=1,o[r-2]=t[r-1];for(let n=r-3;n>=0;--n)o[n]=o[n+1]*t[n+1];return o}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(o=>this.normalizeAxis(o,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(o=>t[o]):t.slice().reverse()}static padShape(t,r){let o=t.length;return t.map((n,s)=>n+r[s]+r[s+o])}static areEqual(t,r){return t.length!==r.length?!1:t.every((o,n)=>o===r[n])}},Tt=class e{static adjustPoolAttributes(t,r,o,n,s,u){if(!t&&o.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let d=0;d<r.length-2;d++)d>=o.length?o.push(r[d+2]):o[d]=r[d+2];for(let d=0;d<o.length;d++)if(d<n.length){if(n[d]<0)throw new Error("strides should be greater than or equal to 1")}else n.push(1);for(let d=0;d<o.length;d++)if(d<s.length){if(s[d]<0)throw new Error("dilations should be greater than or equal to 1")}else s.push(1);for(let d=0;d<o.length*2;d++)if(d<u.length){if(u[d]<0)throw new Error("pad should be greater than or equal to 1")}else u.push(0);for(let d=0;d<o.length;d++){if(o[d]<=0)throw new Error("kernel shapes need to be greater than 0");if(u[d]>=o[d]||u[d+o.length]>=o[d])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,o,n,s,u,d){if(d){if(s.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(n.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let a=0;a<t.length-2;a++)e.adjustPadAndReturnShape(t[a+(u?1:2)],r[a],o[a],n[a],s,a,a+t.length-2,d)}}static computePoolOutputShape(t,r,o,n,s,u,d){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let a=[r[0],r[1]];return e.computeShapeHelper(t,r,a,o,n,s,u,d),a}static computeConvOutputShape(t,r,o,n,s,u,d){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let a=[t[0],r[0]];return e.computeShapeHelper(!1,t,a,o,n,s,u,d),a}static computeShapeHelper(t,r,o,n,s,u,d,a){if(t)for(let m=0;m<r.length-2;m++)o.push(1);else for(let m=0;m<r.length-2;m++)o.push(e.adjustPadAndReturnShape(r[m+2],n[m],s[m],u[m],d,m,m+r.length-2,a))}static adjustPadAndReturnShape(t,r,o,n,s,u,d,a){let m=o*(n-1)+1;if(a&&a!=="NOTSET")switch(a){case"VALID":return s[u]=0,s[d]=0,Math.floor((t-m)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(o!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let S=((t+r-1)/r-1)*r+n-t;return s[u]=Math.floor(a==="SAME_LOWER"?(S+1)/2:S/2),s[d]=S-s[u],Math.floor((t+S-n)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+s[u]+s[d]-m)/r+1)}},Br=class{static getShapeOfGemmResult(t,r,o,n,s){if(t.length!==2||o.length!==2)throw new Error("shape need to be of size 2");let u,d,a;r?(u=t[1],d=t[0]):(u=t[0],d=t[1]);let m=-1;if(n?(a=o[0],m=1):(a=o[1],m=0),o[m]!==d)throw new Error("dimension mismatch");if(u<=0||a<=0||d<=0)throw new Error("invalid shape specified");if(s&&!et.isValidBroadcast(s,[u,a]))throw new Error("gemm: invalid bias shape for broadcast");return[u,a,d]}},kr=-34028234663852886e22,Dr=34028234663852886e22});var Lu,ko,Pe,In,ft,Ye,Ot,bt,Do,L,X,An,Wo,En,zo,ve=j(()=>{"use strict";ke();ge();Lu=64,ko=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},Pe=(e,t=1)=>{let r=ko(e,t);return typeof r=="string"?r:r[0]},In=e=>[{type:"uint32",data:e},{type:"uint32",data:k.computeStrides(e)}],ft=e=>e%4===0?4:e%2===0?2:1,Ye=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,Ot=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}f(${r})`,bt=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,Do=(e,t,r,o,n)=>{let s=typeof r=="number",u=s?r:r.length,d=[...new Array(u).keys()],a=u<2?"u32":u<=4?`vec${u}<u32>`:`array<u32, ${u}>`,m=ko(t,n),g=typeof m=="string"?m:m[1],S=typeof m=="string"?m:m[0],b={indices:a,value:g,storage:S,tensor:t},w=U=>typeof U=="string"?U:`${U}u`,v={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},y=s?"uniforms.":"",C=`${y}${e}_shape`,A=`${y}${e}_strides`,R="";for(let U=0;U<u-1;U++)R+=`\n    let dim${U} = current / ${A}[${U}];\n    let rest${U} = current % ${A}[${U}];\n    indices[${U}] = dim${U};\n    current = rest${U};\n    `;R+=`indices[${u-1}] = current;`;let W=u<2?"":`\n  fn o2i_${e}(offset: u32) -> ${b.indices} {\n    var indices: ${b.indices};\n    var current = offset;\n    ${R}\n    return indices;\n  }`,M=U=>(v.offsetToIndices=!0,u<2?U:`o2i_${e}(${U})`),D=[];if(u>=2)for(let U=u-1;U>=0;U--)D.push(`${A}[${U}] * (indices[${U}])`);let _=u<2?"":`\n  fn i2o_${e}(indices: ${b.indices}) -> u32 {\n    return ${D.join("+")};\n  }`,z=U=>(v.indicesToOffset=!0,u<2?U:`i2o_${e}(${U})`),F=(...U)=>u===0?"0u":`${b.indices}(${U.map(w).join(",")})`,q=(U,ce)=>u<2?`${U}`:`${U}[${ce}]`,le=(U,ce,de)=>u<2?`${U}=${de};`:`${U}[${ce}]=${de};`,B={},K=(U,ce)=>{v.broadcastedIndicesToOffset=!0;let de=`${ce.name}broadcastedIndicesTo${e}Offset`;if(de in B)return`${de}(${U})`;let We=[];for(let Ge=u-1;Ge>=0;Ge--){let Oe=ce.indicesGet("outputIndices",Ge+ce.rank-u);We.push(`${q(A,Ge)} * (${Oe} % ${q(C,Ge)})`)}return B[de]=`fn ${de}(outputIndices: ${ce.type.indices}) -> u32 {\n             return ${We.length>0?We.join("+"):"0u"};\n           }`,`${de}(${U})`},xe=(U,ce)=>(()=>{if(b.storage===b.value)return`${e}[${U}]=${ce};`;if(b.storage==="vec2<u32>"&&b.value==="i32")return`${e}[${U}]=vec2<u32>(u32(${ce}), select(0u, 0xFFFFFFFFu, ${ce} < 0));`;if(b.storage==="vec2<u32>"&&b.value==="u32")return`${e}[${U}]=vec2<u32>(u32(${ce}), 0u);`;if(b.storage==="u32"&&b.value==="vec4<bool>")return`${e}[${U}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ce}));`;throw new Error(`not supported combination of storage type ${b.storage} and value type ${b.value} yet`)})(),ae=U=>(()=>{if(b.storage===b.value)return`${e}[${U}]`;if(b.storage==="vec2<u32>"&&b.value==="i32")return`i32(${e}[${U}].x)`;if(b.storage==="vec2<u32>"&&b.value==="u32")return`u32(${e}[${U}].x)`;if(b.storage==="u32"&&b.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${U}] & 0xFFu), bool(${e}[${U}] & 0xFF00u), bool(${e}[${U}] & 0xFF0000u), bool(${e}[${U}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${b.storage} and value type ${b.value} yet`)})(),we=u<2?"":`\n  fn get_${e}ByIndices(indices: ${b.indices}) -> ${g} {\n    return ${ae(`i2o_${e}(indices)`)};\n  }`,H=u<2?"":(()=>{let U=d.map(de=>`d${de}: u32`).join(", "),ce=d.map(de=>`d${de}`).join(", ");return`\n  fn get_${e}(${U}) -> ${g} {\n    return get_${e}ByIndices(${F(ce)});\n  }`})(),Se=(...U)=>{if(U.length!==u)throw new Error(`indices length must be ${u}`);let ce=U.map(w).join(",");return u===0?ae("0u"):u===1?ae(ce[0]):(v.get=!0,v.getByIndices=!0,v.indicesToOffset=!0,`get_${e}(${ce})`)},Te=U=>u<2?ae(U):(v.getByIndices=!0,v.indicesToOffset=!0,`get_${e}ByIndices(${U})`),Ae=u<2?"":`\n  fn set_${e}ByIndices(indices: ${b.indices}, value: ${g}) {\n    ${xe(`i2o_${e}(indices)`,"value")}\n  }`,Ee=u<2?"":(()=>{let U=d.map(de=>`d${de}: u32`).join(", "),ce=d.map(de=>`d${de}`).join(", ");return`\n  fn set_${e}(${U}, value: ${g}) {\n    set_${e}ByIndices(${F(ce)}, value);\n  }`})();return{impl:()=>{let U=[];return s||(U.push(`const ${C} = ${b.indices}(${r.join(",")});`),U.push(`const ${A} = ${b.indices}(${k.computeStrides(r).join(",")});`)),v.offsetToIndices&&U.push(W),v.indicesToOffset&&U.push(_),v.broadcastedIndicesToOffset&&Object.values(B).forEach(ce=>U.push(ce)),v.set&&U.push(Ee),v.setByIndices&&U.push(Ae),v.get&&U.push(H),v.getByIndices&&U.push(we),U.join(`\n`)},type:b,offsetToIndices:M,indicesToOffset:z,broadcastedIndicesToOffset:K,indices:F,indicesGet:q,indicesSet:le,set:(...U)=>{if(U.length!==u+1)throw new Error(`indices length must be ${u}`);let ce=U[u];if(typeof ce!="string")throw new Error("value must be string");let de=U.slice(0,u).map(w).join(",");return u===0?xe("0u",ce):u===1?xe(de[0],ce):(v.set=!0,v.setByIndices=!0,v.indicesToOffset=!0,`set_${e}(${de}, ${ce})`)},setByOffset:xe,setByIndices:(U,ce)=>u<2?xe(U,ce):(v.setByIndices=!0,v.indicesToOffset=!0,`set_${e}ByIndices(${U}, ${ce});`),get:Se,getByOffset:ae,getByIndices:Te,usage:o?"input":"output",name:e,strides:A,shape:C,rank:u}},L=(e,t,r,o=1)=>Do(e,t,r,!0,o),X=(e,t,r,o=1)=>Do(e,t,r,!1,o),An=class{constructor(t){this.normalizedDispatchGroup=t;this.indicesHelpers=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=Lu){let r=typeof t=="number"?t:t[0],o=typeof t=="number"?1:t[1],n=typeof t=="number"?1:t[2],s=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,u=s?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_index) local_index : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>`,d=s?"let global_idx = global_id.x;":`let global_idx = (workgroup_id.z * ${this.normalizedDispatchGroup[0]*this.normalizedDispatchGroup[1]}u +\n          workgroup_id.y * ${this.normalizedDispatchGroup[0]}u + workgroup_id.x) * ${r*o*n}u + local_index;`;return`@compute @workgroup_size(${r}, ${o}, ${n})\n  fn main(${u}) {\n    ${d}\n  `}declareVariable(t,r){this.indicesHelpers.push(t),t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:t.type.indices}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:t.type.indices});let o=t.usage==="input"?"read":"read_write",n=t.type.storage;return`@group(0) @binding(${r}) var<storage, ${o}> ${t.name}: array<${n}>;`}declareVariables(...t){return t.map(r=>this.declareVariable(r,this.variableIndex++)).join(`\n`)}registerUniform(t,r){return this.uniforms.push({name:t,type:r}),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:r,type:o}of this.uniforms)t.push(`${r}:${o}`);return`\n      struct Uniforms { ${t.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.indicesHelpers.map(t=>t.impl()).join(`\n`)}},Wo=e=>new An(e),En=(e,t)=>{let r=e.length,o=[];for(let n=0;n<r;n++){let s=r-1-n,u=e[s]||1;(t[t.length-1-n]||1)>1&&u===1&&o.unshift(s)}return o},zo=e=>e<=4});var Fu,Vo,Hu,ju,wt,Go,Uo,dr=j(()=>{"use strict";ge();Re();ve();Fu=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},Vo=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,Hu=(e,t)=>k.sortBasedOnPerm(e,Vo(e.length,t)),ju=(e,t,r,o)=>{let n=[];n.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let s=0;s<t;++s)n.push(r.indicesSet("a",e[s],`i[${s}]`));return n.push("return a;}"),n.join(`\n`)},wt=(e,t)=>{let r=e.dataType,o=e.dims.length,n=Vo(o,t),s=zo(o),u=Hu(e.dims,n),d=s?u.length:u,a=s?o:e.dims,m=X("output",r,d),g=L("a",r,a),S=b=>`\n  ${b.registerUniform("output_size","u32").declareVariables(g,m)}\n\n  ${ju(n,o,g,m)}\n\n  ${b.mainStart()}\n    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${m.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${m.setByOffset("global_idx",g.getByIndices("aIndices"))}\n  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:s?["rank"]:["dims"]},getRunData:b=>{let w=k.size(u);return{outputs:[{dims:u,dataType:b[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:s?[{type:"uint32",data:w},...In(b[0].dims),...In(u)]:[{type:"uint32",data:w}]}},getShaderSource:S}},Go=(e,t)=>{Fu(e.inputs),e.compute(wt(e.inputs[0],t.perm))},Uo=e=>se({perm:e.perm})});var Ku,qu,Yu,Xu,Ju,Zu,Qu,el,tl,rl,tt,No,Lo,Fo,Ho,jo,Ko,qo,Yo,Xo,Jo,Zo=j(()=>{"use strict";ge();ve();Wr();dr();Ku={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},qu={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Yu={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Xu={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Ju=(e,t)=>{let r=[];for(let o=t-e;o<t;++o)r.push(o);return r},Zu=(e,t)=>{let r=[],o=e.length;for(let s=0;s<o;s++)t.indexOf(s)===-1&&r.push(e[s]);let n=t.map(s=>e[s]);return[r,n]},Qu=(e,t)=>{let r=e.length+t.length,o=[],n=0;for(let s=0;s<r;s++)t.indexOf(s)===-1?o.push(e[n++]):o.push(1);return o},el=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},tl=(e,t)=>{let r=[];if(!el(e,t)){for(let o=0;o<t;++o)e.indexOf(o)===-1&&r.push(o);e.forEach(o=>r.push(o))}return r},rl=(e,t,r,o,n,s,u)=>{let d=r[0].dims,a=k.size(s),m=k.size(u),g=L("_A",r[0].dataType,d),S=X("output",n,s),b=32,w=`\n          var<workgroup> aBestValues : array<${S.type.storage}, ${b}>;\n       `;return{name:e,shaderCache:t,getShaderSource:y=>`\n        ${y.registerUniform("reduceSize","u32").declareVariables(g,S)}\n        ${w}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${y.mainStart(b)}\n          let local_idx = local_id.x;\n\n          let outputIndex = global_idx / ${b};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = ${S.type.storage}(${Yu[o]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${b}) {\n           let candidate = ${S.type.storage}(${g.getByOffset("offset + k")});\n           bestValue = ${Ku[o]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${b}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${qu[o]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${S.setByOffset("outputIndex",`${o==="mean"?`bestValue / ${S.type.storage}(uniforms.reduceSize)`:`${Xu[o]}`}`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:s,dataType:n}],dispatchGroup:{x:a},programUniforms:[{type:"uint32",data:m}]})}},tt=(e,t,r,o)=>{let n=e.inputs.length===1?r:Tn(e.inputs,r),s=n.axes;s.length===0&&!n.noopWithEmptyAxes&&(s=e.inputs[0].dims.map((w,v)=>v));let u=k.normalizeAxes(s,e.inputs[0].dims.length),d=u,a=e.inputs[0],m=tl(d,e.inputs[0].dims.length);m.length>0&&(a=e.compute(wt(e.inputs[0],m),{inputs:[0],outputs:[-1]})[0],d=Ju(d.length,a.dims.length));let[g,S]=Zu(a.dims,d),b=g;n.keepDims&&(b=Qu(g,u)),e.compute(rl(t,{hint:n.cacheKey,inputDependencies:["type"]},[a],o,e.inputs[0].dataType,b,S),{inputs:[a]})},No=(e,t)=>{tt(e,"ReduceMeanShared",t,"mean")},Lo=(e,t)=>{tt(e,"ReduceL1Shared",t,"l1")},Fo=(e,t)=>{tt(e,"ReduceL2Shared",t,"l2")},Ho=(e,t)=>{tt(e,"ReduceLogSumExpShared",t,"logSumExp")},jo=(e,t)=>{tt(e,"ReduceMaxShared",t,"max")},Ko=(e,t)=>{tt(e,"ReduceMinShared",t,"min")},qo=(e,t)=>{tt(e,"ReduceProdShared",t,"prod")},Yo=(e,t)=>{tt(e,"ReduceSumShared",t,"sum")},Xo=(e,t)=>{tt(e,"ReduceSumSquareShared",t,"sumSquare")},Jo=(e,t)=>{tt(e,"ReduceLogSumShared",t,"logSum")}});var rt,nl,zr,Tn,nt,ol,al,il,sl,ul,ll,dl,cl,pl,fl,ot,Qo,ea,ta,ra,na,oa,aa,ia,sa,ua,Xe,Wr=j(()=>{"use strict";ge();Re();ve();Zo();rt=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},nl=e=>["","",`var value = ${e.getByOffset("inputOffset")};`,""],zr=(e,t,r,o,n,s,u=!1,d=!1)=>{let a=[],m=r[0].dims,g=k.normalizeAxes(n,r[0].dims.length),S=!d&&g.length===0;m.forEach((z,F)=>{S||g.indexOf(F)>=0?u&&a.push(1):a.push(z)});let b=[],w=L("_A",r[0].dataType,m),v=X("output",s,a),y=o(w,v,g),C=`inputOffset = ${w.indicesToOffset("inputIndices")};`,A=`let ${C};`,R=`var ${C};`,W=y[1]===""?"":R,M=(y[1]===""?A:C)+`\n`+y[2];for(let z=0,F=0;z<r[0].dims.length;z++)S||g.indexOf(z)>=0?(u&&F++,M=`for(var j${z}: u32 = 0; j${z} < ${r[0].dims[z]}; j${z}++) {\n                ${y[2].includes("lastIndex")?`let lastIndex = j${z};`:""}\n                ${w.indicesSet("inputIndices",z,`j${z}`)}\n                ${M}\n              }`):(b.push(`${w.indicesSet("inputIndices",z,v.indicesGet("outputIndices",F))};`),F++);let D=k.size(a);return{name:e,shaderCache:t,getShaderSource:z=>`\n        ${z.declareVariables(w,v)}\n\n        ${z.mainStart()}\n          ${z.guardAgainstOutOfBoundsWorkgroupSizes(D)}\n          var inputIndices: ${w.type.indices};\n          let outputIndices = ${v.offsetToIndices("global_idx")};\n\n          ${b.join(`\n`)}\n          ${y[0]}       // init ops for reduce max/min\n          ${W}\n          ${y[1]}\n          ${M}\n          ${y[3]}\n          ${y.length===4?v.setByOffset("global_idx","value"):y.slice(4).join(`\n`)}\n        }`,getRunData:()=>({outputs:[{dims:a,dataType:s}],dispatchGroup:{x:Math.ceil(D/64)}})}},Tn=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(o=>r.push(Number(o))),se({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},nt=(e,t,r,o)=>{let n=e.inputs,s=n.length===1?r:Tn(n,r);e.compute(zr(t,{hint:s.cacheKey},[n[0]],s.noopWithEmptyAxes&&s.axes.length===0?nl:o,s.axes,n[0].dataType,s.keepDims,s.noopWithEmptyAxes),{inputs:[0]})},ol=(e,t)=>{rt(e.inputs),nt(e,"ReduceLogSum",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${o.getByOffset("inputOffset")};`,"value = log(value);"])},al=(e,t)=>{rt(e.inputs),nt(e,"ReduceL1",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += abs(${o.getByOffset("inputOffset")});`,""])},il=(e,t)=>{rt(e.inputs),nt(e,"ReduceL2",t,(o,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${o.getByOffset("inputOffset")}; value += (t * t);`,"value = sqrt(value);"])},sl=(e,t)=>{rt(e.inputs),nt(e,"ReduceLogSumExp",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += exp(${o.getByOffset("inputOffset")});`,"value = log(value);"])},ul=(e,t)=>{rt(e.inputs),nt(e,"ReduceMax",t,(o,n,s)=>{let u=[];for(let d=0;d<o.rank;d++)(s.indexOf(d)>=0||s.length===0)&&u.push(o.indicesSet("inputIndices",d,0));return[`${u.join(`\n`)}`,`var value = ${o.getByOffset("inputOffset")};`,`value = max(value, ${o.getByOffset("inputOffset")});`,""]})},ll=(e,t)=>{rt(e.inputs),nt(e,"ReduceMean",t,(o,n,s)=>{let u=1;for(let d=0;d<o.rank;d++)(s.indexOf(d)>=0||s.length===0)&&(u*=e.inputs[0].dims[d]);return["var sum = f32(0);","",`sum += f32(${o.getByOffset("inputOffset")});`,`let value = ${n.type.value}(sum / ${u});`]})},dl=(e,t)=>{rt(e.inputs),nt(e,"ReduceMin",t,(o,n,s)=>{let u=[];for(let d=0;d<o.rank;d++)(s.indexOf(d)>=0||s.length===0)&&u.push(`inputIndices[${d}] = 0;`);return[`${u.join(`\n`)}`,`var value = ${o.getByOffset("inputOffset")};`,`value = min(value, ${o.getByOffset("inputOffset")});`,""]})},cl=(e,t)=>{rt(e.inputs),nt(e,"ReduceProd",t,(o,n)=>[`var value = ${n.type.storage}(1);`,"",`value *= ${o.getByOffset("inputOffset")};`,""])},pl=(e,t)=>{rt(e.inputs),nt(e,"ReduceSum",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${o.getByOffset("inputOffset")};`,""])},fl=(e,t)=>{rt(e.inputs),nt(e,"ReduceSumSquare",t,(o,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${o.getByOffset("inputOffset")}; value += t * t;`,""])},ot=(e,t,r)=>{if(t.length===0)return!!r;let o=1,n=1;for(let s=0;s<t.length;s++)t.indexOf(s)===-1?o*=e[s]:n*=e[s];return n<32&&o>1024},Qo=(e,t)=>{ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ll(e,t):No(e,t)},ea=(e,t)=>{ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?al(e,t):Lo(e,t)},ta=(e,t)=>{ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?il(e,t):Fo(e,t)},ra=(e,t)=>{ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?sl(e,t):Ho(e,t)},na=(e,t)=>{ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ul(e,t):jo(e,t)},oa=(e,t)=>{ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?dl(e,t):Ko(e,t)},aa=(e,t)=>{ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?cl(e,t):qo(e,t)},ia=(e,t)=>{ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?pl(e,t):Yo(e,t)},sa=(e,t)=>{ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?fl(e,t):Xo(e,t)},ua=(e,t)=>{ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ol(e,t):Jo(e,t)},Xe=e=>se(e)});var la,da,ca,pa,On,fa=j(()=>{"use strict";ke();Re();Wr();la=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},da=(e,t)=>se({axis:t.axis,keepDims:t.keepDims,selectLastIndex:t.selectLastIndex}),ca=(e,t)=>{la(e.inputs);let r=(n,s,u)=>{let d=[];for(let a=0;a<n.rank;a++)(u.indexOf(a)>=0||u.length===0)&&d.push(`inputIndices[${a}] = 0;`);return[`${d.join(`\n`)}`,`var value = ${n.getByOffset("inputOffset")};\nvar bestIndex : i32 = 0;`,`if (${n.getByOffset("inputOffset")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${n.getByOffset("inputOffset")};\n         bestIndex = i32(lastIndex);\n       }`,"",s.setByOffset("global_idx","bestIndex")]},o=e.inputs.length===1?t:da(e.inputs,t);e.compute(zr("ArgMin",{hint:o.cacheKey},[e.inputs[0]],r,[o.axis],7,o.keepDims),{inputs:[0]})},pa=(e,t)=>{la(e.inputs);let r=(n,s,u)=>{let d=[];for(let a=0;a<n.rank;a++)(u.indexOf(a)>=0||u.length===0)&&d.push(`inputIndices[${a}] = 0;`);return[`${d.join(`\n`)}`,`var value = ${n.getByOffset("inputOffset")};\nvar bestIndex : i32 = 0;`,`if (${n.getByOffset("inputOffset")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${n.getByOffset("inputOffset")};\n         bestIndex = i32(lastIndex);\n       }`,"",s.setByOffset("global_idx","bestIndex")]},o=e.inputs.length===1?t:da(e.inputs,t);e.compute(zr("argMax",{hint:o.cacheKey},[e.inputs[0]],r,[o.axis],7,o.keepDims),{inputs:[0]})},On=e=>se(e)});var ml,hl,ma,ha=j(()=>{"use strict";ge();ve();ml=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},hl=e=>{let t=e[0].dims,r=e[0].dims[2],o=k.size(t)/4,n=e[0].dataType,s=L("input",n,t,4),u=L("bias",n,[r],4),d=L("residual",n,t,4),a=X("output",n,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:g=>`\n  const channels = ${r}u / 4;\n  ${g.declareVariables(s,u,d,a)}\n\n  ${g.mainStart()}\n    ${g.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n    let value = ${s.getByOffset("global_idx")}\n      + ${u.getByOffset("global_idx % channels")} + ${d.getByOffset("global_idx")};\n    ${a.setByOffset("global_idx","value")}\n  }`}},ma=e=>{ml(e.inputs),e.compute(hl(e.inputs))}});var gl,$e,ga,ya,ba,wa,va,$a,xa,Sa,Ca,_n,yl,Aa,Ia,Ea,Ta,Vr,Oa,Gr,_a,Ra,Pa,Ma,Ba,ka,Da,Wa,za,Va,Ga,Ua,Na,La,Fa,Ha,ja,Rn=j(()=>{"use strict";ke();ge();Re();ve();gl=(e,t,r,o,n,s)=>{let u=Math.ceil(t/4),d="";typeof n=="string"?d=`${n}(a)`:d=n("a");let a=L("inputData",r,[u],4),m=X("outputData",o,[u],4);return`\n      ${e.registerUniform("vec_size","u32").declareVariables(a,m)}\n\n  ${s??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${a.getByOffset("global_idx")};\n    ${m.setByOffset("global_idx",d)}\n  }`},$e=(e,t,r,o,n,s=e.dataType)=>({name:t,shaderCache:{hint:n,inputDependencies:["type"]},getShaderSource:u=>gl(u,k.size(e.dims),e.dataType,s,r,o),getRunData:u=>({outputs:[{dims:e.dims,dataType:s}],dispatchGroup:{x:Math.ceil(k.size(u[0].dims)/64/4)},programUniforms:[{type:"uint32",data:Math.ceil(k.size(e.dims)/4)}]})}),ga=e=>{e.compute($e(e.inputs[0],"Abs","abs"))},ya=e=>{e.compute($e(e.inputs[0],"Acos","acos"))},ba=e=>{e.compute($e(e.inputs[0],"Acosh","acosh"))},wa=e=>{e.compute($e(e.inputs[0],"Asin","asin"))},va=e=>{e.compute($e(e.inputs[0],"Asinh","asinh"))},$a=e=>{e.compute($e(e.inputs[0],"Atan","atan"))},xa=e=>{e.compute($e(e.inputs[0],"Atanh","atanh"))},Sa=e=>se(e),Ca=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${t.to}`)}e.compute($e(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},_n=(e,t)=>{let r=Pe(e.inputs[0].dataType);e.compute($e(e.inputs[0],"Clip",o=>`clamp(${o}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${r}> = vec4(${r}(${t.min}));\n    const clip_max_: vec4<${r}> = vec4(${r}(${t.max}));\n`,t.cacheKey),{inputs:[0]})},yl=e=>{let t=e.length>=2?e[1].getFloat32Array()[0]:kr,r=e.length>=3?e[2].getFloat32Array()[0]:Dr;return se({min:t,max:r})},Aa=e=>{let t=yl(e.inputs);_n(e,t)},Ia=e=>{e.compute($e(e.inputs[0],"Ceil","ceil"))},Ea=e=>{e.compute($e(e.inputs[0],"Cos","cos"))},Ta=e=>{e.compute($e(e.inputs[0],"Cosh","cosh"))},Vr=e=>se(e),Oa=(e,t)=>{e.compute($e(e.inputs[0],"Elu",r=>`elu_vf32(${r})`,`\n  const elu_alpha_: f32 = f32(${t.alpha});\n\n  fn elu_f32(a: f32) -> f32 {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<f32>) -> vec4<f32> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},Gr=(e,t="f32")=>`\nconst r0: ${t} = 0.3275911;\nconst r1: ${t} = 0.254829592;\nconst r2: ${t} = -0.284496736;\nconst r3: ${t} = 1.421413741;\nconst r4: ${t} = -1.453152027;\nconst r5: ${t} = 1.061405429;\n\nfn erf_vf32(v: ${e}) -> ${e} {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,_a=e=>{let t=Pe(e.inputs[0].dataType);e.compute($e(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,Gr(`vec4<${t}>`,t)))},Ra=e=>{e.compute($e(e.inputs[0],"Exp","exp"))},Pa=e=>{e.compute($e(e.inputs[0],"Floor","floor"))},Ma=e=>{let t=Pe(e.inputs[0].dataType);e.compute($e(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,Gr(`vec4<${t}>`,t)))},Ba=(e,t)=>{e.compute($e(e.inputs[0],"LeakyRelu",r=>`select(leaky_relu_alpha_ * ${r}, ${r}, ${r} >= vec4<f32>(0.0))`,`const leaky_relu_alpha_: f32 = f32(${t.alpha});`,t.cacheKey))},ka=e=>{e.compute($e(e.inputs[0],"Not",t=>`!${t}`))},Da=e=>{e.compute($e(e.inputs[0],"Neg",t=>`-${t}`))},Wa=e=>{e.compute($e(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},za=e=>{e.compute($e(e.inputs[0],"Relu",t=>`select(vec4<f32>(0.0), ${t}, ${t} > vec4<f32>(0.0))`))},Va=e=>{e.compute($e(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},Ga=e=>{e.compute($e(e.inputs[0],"Sin","sin"))},Ua=e=>{e.compute($e(e.inputs[0],"Sinh","sinh"))},Na=e=>{e.compute($e(e.inputs[0],"Sqrt","sqrt"))},La=e=>{e.compute($e(e.inputs[0],"Tan","tan"))},Fa=e=>{e.compute($e(e.inputs[0],"Tanh","tanh"))},Ha=(e,t)=>(e.compute($e(e.inputs[0],"ThresholdedRelu",r=>`select(vec4<f32>(0.0), ${r}, ${r} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_: vec4<f32> = vec4<f32>(${t.alpha});`,t.cacheKey)),0),ja=e=>{e.compute($e(e.inputs[0],"Log","log"))}});var wl,vl,Ka,qa=j(()=>{"use strict";ge();ve();Rn();wl=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},vl=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=L("input",e[0].dataType,e[0].dims,4),o=L("bias",e[0].dataType,[e[0].dims[2]],4),n=X("output",e[0].dataType,t,4),s=k.size(t)/4;return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:d=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${d.declareVariables(r,o,n)}\n\n  ${Gr("vec4f")}\n\n  ${d.mainStart()}\n    ${d.guardAgainstOutOfBoundsWorkgroupSizes(s)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${n.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},Ka=e=>{wl(e.inputs),e.compute(vl(e.inputs))}});var $l,xl,at,Ya,Xa,Ja,Za,Qa,ei,ti,ri,ni,oi,ai=j(()=>{"use strict";ke();ge();ve();$l=(e,t,r,o,n,s,u,d,a,m,g)=>{let S=k.size(o),b=Math.ceil(S/4),w,v;typeof u=="string"?w=v=(M,D)=>`${u}((${M}),(${D}))`:typeof u=="function"?w=v=u:(w=u.scalar,v=u.vector);let y="",C=X("outputData",m,o,4),A=L("aData",d,t,4),R=L("bData",a,r,4);if(s){let M=D=>{let _=k.computeStrides(D),z=[];for(let F=D.length-1;F>=0;F--){let q=C.indicesGet("outputIndices",F+o.length-D.length);z.push(`${_[F]}u * (${q} % ${D[F]}u)`)}return z.length>0?z.join("+"):"0u"};y=`\n          fn calcOffsetA(outputIndices: ${C.type.indices}) -> u32 {\n            return ${M(t)};\n          }\n\n          fn calcOffsetB(outputIndices: ${C.type.indices}) -> u32 {\n            return ${M(r)};\n          }\n        `}let W;if(n)if(s){let M=k.size(t)===1,D=k.size(r)===1;M||D?W=C.setByOffset("global_idx",v(M?`${A.type.value}(${A.getByOffset("0")}.x)`:A.getByOffset("global_idx"),D?`${R.type.value}(${R.getByOffset("0")}.x)`:R.getByOffset("global_idx"))):W=`\n            let outputIndices = ${C.offsetToIndices("global_idx * 4u")};\n            let offsetA = calcOffsetA(outputIndices);\n            let offsetB = calcOffsetB(outputIndices);\n            ${C.setByOffset("global_idx",v(A.getByOffset("offsetA / 4u"),R.getByOffset("offsetB / 4u")))}\n          `}else W=C.setByOffset("global_idx",v(A.getByOffset("global_idx"),R.getByOffset("global_idx")));else{if(!s)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let M=(D,_,z="")=>{let F=`aData[indexA${_}][componentA${_}]`,q=`bData[indexB${_}][componentB${_}]`;return`\n            let outputIndices${_} = ${C.offsetToIndices(`global_idx * 4u + ${_}u`)};\n            let offsetA${_} = calcOffsetA(outputIndices${_});\n            let offsetB${_} = calcOffsetB(outputIndices${_});\n            let indexA${_} = offsetA${_} / 4u;\n            let indexB${_} = offsetB${_} / 4u;\n            let componentA${_} = offsetA${_} % 4u;\n            let componentB${_} = offsetB${_} % 4u;\n            ${D}[${_}] = ${z}(${w(F,q)});\n          `};m===9?W=`\n            var data = vec4<u32>(0);\n            ${M("data",0,"u32")}\n            ${M("data",1,"u32")}\n            ${M("data",2,"u32")}\n            ${M("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:W=`\n            ${M("outputData[global_idx]",0)}\n            ${M("outputData[global_idx]",1)}\n            ${M("outputData[global_idx]",2)}\n            ${M("outputData[global_idx]",3)}\n          `}return`\n        ${e.declareVariables(A,R,C)}\n\n        ${g??""}\n        ${y}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes(b)}\n        ${W}\n      }`},xl=(e,t,r,o,n,s,u=r.dataType)=>{let d=!k.areEqual(r.dims,o.dims),a=r.dims,m=k.size(r.dims),g=!1;if(d){let S=et.calcShape(r.dims,o.dims,!1);if(!S)throw new Error("Can\'t perform binary op on the given tensors");a=S,m=k.size(a);let b=k.size(r.dims)===1,w=k.size(o.dims)===1,v=1;for(let y=1;y<a.length;y++){let C=r.dims[r.dims.length-y]??1,A=o.dims[o.dims.length-y]??1;if(C===A)v*=C;else break}(v%4===0||b||w)&&(g=!0)}else g=!0;return{name:e,shaderCache:{hint:t},getShaderSource:S=>$l(S,r.dims,o.dims,a,g,d,n,r.dataType,o.dataType,u,s),getRunData:()=>({outputs:[{dims:a,dataType:u}],dispatchGroup:{x:Math.ceil(m/64/4)}})}},at=(e,t,r,o,n,s)=>{e.compute(xl(t,n??"",e.inputs[0],e.inputs[1],r,o,s))},Ya=e=>{at(e,"Add",(t,r)=>`${t}+${r}`)},Xa=e=>{at(e,"Div",(t,r)=>`${t}/${r}`)},Ja=e=>{at(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},Za=e=>{at(e,"Mul",(t,r)=>`${t}*${r}`)},Qa=e=>{let t=L("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;at(e,"Pow",{scalar:(o,n)=>`pow_custom(${o},${n})`,vector:(o,n)=>`pow_vector_custom(${o},${n})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},ei=e=>{at(e,"Sub",(t,r)=>`${t}-${r}`)},ti=e=>{at(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},ri=e=>{at(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},ni=e=>{at(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},oi=e=>{at(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}});var Cl,Al,Il,El,ii,si,ui=j(()=>{"use strict";ge();Re();ve();Cl=e=>{if(!e||e.length<1)throw new Error("too few inputs");let t=e[0].dataType,r=e[0].dims.length;for(let o of e){if(o.dataType!==t)throw new Error("input tensors should be one type");if(o.dims.length!==r)throw new Error("input tensors should have the same shape")}},Al=e=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,Il=(e,t)=>{let r=e.length,o=[];for(let n=0;n<r;++n){let s=t.setByOffset("global_idx",e[n].getByIndices("indices"));r===1?o.push(s):n===0?o.push(`if (inputIndex == ${n}u) { ${s} }`):n===r-1?o.push(`else { ${s} }`):o.push(`else if (inputIndex == ${n}) { ${s} }`)}return o.join(`\n`)},El=(e,t)=>{let r=e[0].dims.slice();if(t>=r.length||t<-1*r.length)throw new Error("axis specified for concat doesn\'t match input dimensionality");let o=t<0?r.length+t:t,n=r.slice(0);for(let w=1;w<e.length;w++){let v=e[w].dims.slice();for(let y=0;y<r.length;y++)if(y===o)n[o]+=v[y];else if(r[y]!==v[y])throw new Error("non concat dimensions must match")}let s=k.size(n),u=new Array(e.length),d=new Array(e.length),a=e[0].dataType,m=0;for(let w=0;w<e.length;++w)m+=e[w].dims[o],u[w]=m,d[w]=L(`input${w}`,a,e[w].dims);let g=X("output",a,n),S=g.indicesGet("indices",o),b=w=>`\n  ${w.declareVariables(...d,g)}\n\n  const sizeInConcatAxis = array<u32, ${u.length}>(${u.map(v=>`${v}u`).join(",")});\n  ${Al(u.length)}\n\n  ${w.mainStart()}\n    ${w.guardAgainstOutOfBoundsWorkgroupSizes(s)}\n\n    var indices = ${g.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${S});\n    if (inputIndex != 0u) {\n      ${S} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${Il(d,g)}\n  }`;return{name:"Concat",shaderCache:{hint:`${t}`},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:b}},ii=(e,t)=>{Cl(e.inputs),e.compute(El(e.inputs,t.axis))},si=e=>se({axis:e.axis})});var De,Ur,Nr,Lr=j(()=>{"use strict";De=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Ur=(e,t=!1,r=!1,o=3)=>"",Nr=(e,t)=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      // TODO uncomment the following line when activation is supported above.\n      // ${t?"value = activation(value, coords);":""}\n      `});var Fr,Pn=j(()=>{"use strict";Fr=`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    outShapeStrides.x, outShapeStrides.y, outShapeStrides.z, 1));\n}\n`});var Hr,jr,cr=j(()=>{"use strict";ge();Hr=(e,t=!1)=>{switch(e.activation){case"Relu":return{activationFunction:"",applyActivation:"value = max(value, 0.0);"};case"Sigmoid":return{activationFunction:"",applyActivation:"value = (1.0 / (1.0 + exp(-value)));"};case"Clip":return{activationFunction:`const clip_min_=f32(${e.clipMin});const clip_max_=f32(${e.clipMax});`,applyActivation:t?"value = clamp(value, vec4(clip_min_), vec4(clip_max_));":"value = clamp(value, clip_min_, clip_max_);"};default:return{activationFunction:"",applyActivation:""}}},jr=e=>{let t=e?.activation||"";if(t==="Clip"){let[r,o]=e?.activation_params||[kr,Dr];return{activation:t,clipMax:o,clipMin:r,activationCacheKey:`${t}:${r},${o}`}}return{activation:t,activationCacheKey:t}}});var Tl,Ol,pr,li,_l,fr,Rl,Kr,mr=j(()=>{"use strict";ge();ve();cr();Lr();Tl=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,Ol=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,pr=(e,t,r="f32",o,n=!1,s=32,u=!1,d=32)=>{let a=t[1]*e[1],m=t[0]*e[0],g=n?a:s,S=n?s:a,b=g/t[0],w=s/t[1];if(!((n&&b===4&&e[1]===4||!n&&(b===3||b===4))&&g%t[0]===0&&s%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${n} is true, innerElementSize ${b} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${b} must be 3 or 4.\n  tileAWidth ${g} must be divisible by workgroupSize[0]${t[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${b}<${r}>, ${g/b}>, ${S}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${r}>, ${m/e[0]}>, ${s}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${b};\nconst tileInner = ${s};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${u?"0":"i32(globalId.z)"};\n  ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${a};\n\n  let numTiles = ${u?`${Math.ceil(d/s)}`:"(dimInner - 1) / tileInner + 1"};\n  var kStart = ${u?`i32(globalId.z) * ${d}`:"0"};\n\n  var acc: array<vec4<${r}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${w};\n  for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${Tl(n,o)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${w}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${o?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${b===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${Ol(n,b)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},li=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,_l=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",fr=(e,t,r="f32",o,n=!1,s=32,u=!1,d=32,a=!1)=>{let m=e[1]*t[1],g=e[0]*t[0],S=n?m:s,b=n?s:m;if(!(b%t[1]===0&&S%t[0]===0&&s%t[1]===0))throw new Error(`tileAHight ${b} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${S} must be divisible by workgroupSize[0]${t[0]}, tileInner ${s} must be divisible by workgroupSize[1]${t[1]}`);let w=b/t[1],v=S/t[0],y=s/t[1],C=a?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${m};\n    let globalColStart = i32(workgroupId.x) * ${g};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${b}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${S}; inputCol = inputCol + ${t[0]}) {\n          ${li(n,o)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${g}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${o?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${r}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${m};\n\nlet tileRowA = i32(localId.y) * ${w};\nlet tileColA = i32(localId.x) * ${v};\nlet tileRowB = i32(localId.y) * ${y};\n// Loop over shared dimension.\nfor (var t = 0; t < numTiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${w}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${v}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${li(n,o)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${y}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${o?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${r}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${_l(n)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${r}, ${S}>, ${b}>;\n  var<workgroup> mm_Bsub : array<array<${r}, ${g}>, ${s}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${s};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${u?"0":"i32(globalId.z)"};\n    ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n    let numTiles = ${u?`${Math.ceil(d/s)}`:"(dimInner - 1) / tileInner + 1"};\n    var kStart = ${u?`i32(globalId.z) * ${d}`:"0"};\n\n    var acc : array<array<${r}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${C}\n  }\n`},Rl=(e,t,r,o,n,s=!1)=>{let u=n[0],d=n[1],a=n[2],m=o[0],g=o[1],S=o[2],b=o[3],w=En(u,a),v=En(d,a),y=Pe(o[0].type.tensor),C=()=>{let W=g.rank,M=m.rank,D=`var aIndices: ${g.type.indices};`;for(let _=W-2-1,z=M-1;_>=0;_--,z--)D+=`\naIndices[${_}] = ${M>1?`batchIndices[${z}]`:"batchIndices"};`;return w.forEach(_=>{D+=`\naIndices[${_}] = 0;`}),D+=`\naIndices[${W-2}] = u32(row);\n                   aIndices[${W-1}] = u32(colIn);`,D},A=()=>{let W=S.rank,M=m.rank,D=`var bIndices: ${S.type.indices};`;for(let _=W-2-1,z=M-1;_>=0;_--,z--)D+=`\nbIndices[${_}] = ${M>1?`batchIndices[${z}]`:"batchIndices"};`;return v.forEach(_=>{D+=`\nbIndices[${_}] = 0;`}),D+=`\nbIndices[${W-2}] = u32(row);\n                   bIndices[${W-1}] = u32(colIn);`,D};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${m.type.indices}) -> ${De(e,y)} {\n      var value = ${De(e,y)}(0.0);\n      let col = colIn * ${e};\n      if(row < dimAOuter && col < dimInner)\n      {\n        ${C()}\n        value = ${g.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${m.type.indices}) -> ${De(e,y)} {\n      var value = ${De(e,y)}(0.0);\n      let col = colIn * ${e};\n      if(row < dimInner && col < dimBOuter)\n      {\n        ${A()}\n        value = ${S.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${De(e,y)}) {\n      let col = colIn * ${e};\n      if (row < dimAOuter && col < dimBOuter) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${s?"bias[colIn]":`${De(e,y)}(bias[row])`};`:""}\n        ${r}\n        ${b.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},Kr=(e,t,r,o,n=!1)=>{let s=e[0].dims,u=e[1].dims,d=s.slice(0,-2),a=u.slice(0,-2),m=o?o.slice(0,-2):r.slice(0,-2),g=L("batchDims",e[0].dataType,m),S=[g],b=[d,a,m],w=k.size(m),v=s[s.length-2],y=s[s.length-1],C=u[u.length-1],A=y%4===0&&C%4===0,{activationFunction:R,applyActivation:W}=Hr(t,A),M=v<=8?[4,1,1]:[4,4,1],D=[8,8,1],_=[Math.ceil(C/D[0]/M[0]),Math.ceil(v/D[1]/M[1]),Math.ceil(w/D[2]/M[2])],z=Pe(e[0].dataType),F=A?4:1,q=L("a",e[0].dataType,[...d,v,y/F],F),le=L("b",e[1].dataType,[...a,y,C/F],F),B=X("result",e[0].dataType,[w,v,C/F],F);S.push(q),S.push(le),S.push(B);let K=[q,le],xe=e.length>2,ae=Rl(F,xe,W,S,b,n);if(xe){let H=n?F:1;K.push(L("bias",e[2].dataType,e[2].dims,H))}let we=H=>`\n  const dimAOuter: i32 = ${v};\n  const dimBOuter: i32 = ${C};\n  const dimInner: i32 = ${y};\n  ${H.declareVariables(...K,B)}\n  ${R}\n  ${ae}\n  ${A?pr(M,D,z,g):fr(M,D,z,g)}\n                   ${g.impl()}`;return{name:"MatMul",shaderCache:{hint:t.activationCacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:_[0],y:_[1],z:_[2]}}),getShaderSource:we}}});var Pl,di,ci=j(()=>{"use strict";yt();ge();ve();Lr();Pn();mr();Pl=(e,t,r,o,n=!1,s,u=!1,d=4,a=4,m=4,g="f32")=>{let S=le=>{switch(le){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${g}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${le} is not supported.`)}},b=le=>{switch(le){case 1:return"return w[row * wShape[3] + colIn];";case 4:return"return w[row * wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${le} is not supported.`)}},w=e?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,v=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,y=e?"xShape[1]":"xShape[2]",C=e?"xShape[2]":"xShape[3]",A=e?"row":"col",R=e?"col":"row",W=`\n    let inChannels = wShape[2];\n    let outWidth = ${e?"outShape[2]":"outShape[3]"};\n    let outRow = ${A} / outWidth;\n    let outCol = ${A} % outWidth;\n\n    let WRow = ${R} / (filterDims[1] * inChannels);\n    let WCol = ${R} / inChannels % filterDims[1];\n    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];\n    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];\n    let xCh = ${R} % inChannels;\n    var resData = ${De(d,g)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the \'same\' padding type.\n    if (xRow >= 0 && xRow < ${y} && xCol >= 0 && xCol < ${C}) {\n      ${w}\n      let xIndex = getIndexFromCoords4D(coord, xShape);\n      ${S(d)}\n    }\n    return resData;`,M=e?t&&o?`\n    let col = colIn * ${d};\n    ${W}`:`\n    let col = colIn * ${d};\n    if (row < dimAOuter && col < dimInner) {\n      ${W}\n    }\n    return ${De(d,g)}(0.0);`:o&&r?`\n    let col = colIn * ${d};\n    ${W}`:`\n    let col = colIn * ${d};\n    if (row < dimInner && col < dimBOuter) {\n      ${W}\n    }\n    return ${De(d,g)}(0.0);`,D=`${b(a)}`,_=De(m,g),z=e?De(d,g):De(a,g),F=e?De(a,g):De(d,g);return`\n    ${Ur(s,u,m===4,4)}\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${z} {\n      ${e?M:D}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${F} {\n      ${e?D:M}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${_}) {\n      let col = colIn * ${m};\n      if (row < dimAOuter && col < dimBOuter)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"outShape[2]":"outShape[3]"};\n      ${v}\n      ${Nr(n,s)}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},di=(e,t,r,o,n,s,u,d)=>{let a=t.format==="NHWC",m=a?e[0].dims[3]:e[0].dims[1],g=r[0],S=a?r[2]:r[3],b=a?r[1]:r[2],w=a?r[3]:r[1],v=a&&(m%4===0||m%3===0)&&w%4===0,y=a?w:S*b,C=a?S*b:w,A=[8,8,1],R=o<=8?[4,1,1]:[4,4,1],W=[Math.ceil(y/A[0]/R[0]),Math.ceil(C/A[1]/R[1]),Math.ceil(g/A[2]/R[2])];Ie("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${W}`);let M=v?a&&m%4!==0?3:4:R[0],D=A[1]*R[1],_=A[0]*R[0],z=Math.max(A[0]*M,A[1]),F=o%D===0,q=n%_===0,le=s%z===0,B=v?[M,4,4]:[1,1,1],K=Pe(e[0].dataType),xe=[`@group(0) @binding(0) var<storage, read> x: array<${v&&M===4?`vec4<${K}>`:K}>;`,`@group(0) @binding(1) var<storage, read> w: array<${v?`vec4<${K}>`:K}>;`],ae=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${v?`vec4<${K}>`:K}) {\n        result[flatIndex] = ${v?`vec4<${K}>`:K}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${v?`vec4<${K}>`:K}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${v?"/ 4":""}, value);\n      }`;return u&&(xe.push(`@group(0) @binding(2) var<storage, read> bias: array<${v?`vec4<${K}>`:K}>;`),ae+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${v?`vec4<${K}>`:K} {\n          return bias[coords.${a?"w":"y"}${v?"/ 4":""}];\n        }`),{name:"Conv2DMatMul",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:W[0],y:W[1],z:W[2]}}),getShaderSource:()=>`\n        ${Fr}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${xe.join("")}\n        @group(0) @binding(${xe.length}) var<storage, read_write> result: array<${v?`vec4<${K}>`:K}>;\n        //@group(0) @binding(${xe.length+1}) var<uniform> uniforms: Uniforms;\n\n        const xShape : vec4<i32> = vec4<i32>(${e[0].dims.join(",")});\n        const wShape : vec4<i32> = vec4<i32>(${e[1].dims.join(",")});\n        const outShape : vec4<i32> = vec4<i32>(${r.join(",")});\n        const outShapeStrides : vec3<i32> = vec3<i32>(${k.computeStrides(r).slice(0,3).join(",")});\n        const filterDims : vec2<i32> = vec2<i32>(${t.kernelShape[0]}, ${t.kernelShape[1]});\n        const pad : vec2<i32> = vec2<i32>(${t.pads[0]}, ${t.pads[1]});\n        const stride : vec2<i32> = vec2<i32>(${t.strides[0]}, ${t.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${t.dilations[0]}, ${t.dilations[1]});\n        const dimAOuter : i32 = ${o};\n        const dimBOuter : i32 = ${n};\n        const dimInner : i32 = ${s};\n        ${ae}\n        ${Pl(a,F,q,le,u,t.activation.toLowerCase(),!1,B[0],B[1],B[2],K)}\n            ${v?pr(R,A,K,void 0,!a,z):fr(R,A,K,void 0,!a,z,!1,void 0,d)}`}}});var Mn,pi=j(()=>{"use strict";ge();ve();kn();cr();Mn=(e,t,r)=>{let o=e.length>2,n=o?"value += b[output_channel];":"",s=e[0].dims,u=e[1].dims,d=u[0]/t.group,{activationFunction:a,applyActivation:m}=Hr(t),g=t.format==="NHWC",S=Bn(s,u,t.dilations,t.pads,t.strides,g),b=k.size(S),w=X("output",e[0].dataType,S),v=L("x",e[0].dataType,s),y=L("w",e[1].dataType,u),C=[v,y];o&&C.push(L("b",e[2].dataType,e[2].dims));let A=R=>`\n  const strides: vec2<u32> = vec2(${t.strides[0]}u, ${t.strides[1]}u);\n  const pads: vec2<u32> = vec2(${t.pads[0]}u, ${t.pads[1]}u);\n\n  ${R.declareVariables(...C,w)}\n\n  ${a}\n\n  ${R.mainStart()}\n    ${R.guardAgainstOutOfBoundsWorkgroupSizes(b)}\n\n    let outputIndices = ${w.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${g?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${g?1:2}], outputIndices[${g?2:3}]) * strides - pads;\n    let group_id: u32 = output_channel / ${d}u;\n\n    var value: ${w.type.value} = ${w.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < ${u[1]}u; wInChannel++) {\n      let input_channel = group_id * ${u[1]}u + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < ${u[2]}u; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * ${t.dilations[0]}u;\n\n        if (xHeight < 0u || xHeight >= ${s[g?1:2]}u) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < ${u[3]}u; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * ${t.dilations[1]}u;\n          if (xWidth < 0u || xWidth >= ${s[g?2:3]}u) {\n            continue;\n          }\n\n          let xVal = ${g?v.get("batch","xHeight","xWidth","input_channel"):v.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${y.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${n}\n    ${m}\n    ${w.setByOffset("global_idx","value")}\n  }`;return{name:"GroupedConv",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r?r(S):S,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(b/64)}}),getShaderSource:A}}});var Bn,fi,Ml,mi,Dn,Bl,kl,Wn,kn=j(()=>{"use strict";ge();Re();ci();mr();pi();cr();dr();Bn=(e,t,r,o,n,s)=>{let u=e[0],d=e.slice(s?1:2,s?3:4),a=d.length,m=t[0],S=t.slice(2).map((v,y)=>v+(v-1)*(r[y]-1)),w=d.map((v,y)=>v+o[y]+o[y+a]).map((v,y)=>Math.floor((v-S[y]+n[y])/n[y]));return w.splice(0,0,u),w.splice(s?3:1,0,m),w},fi=[2,3,1,0],Ml=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[1]*t.group;if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==n*2)throw new Error(`pads should be ${n*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},mi=(e,t)=>{let r=e.kernelShape.slice();for(let s=2;s<t[1].dims.length;++s)r[s-2]===0&&(r[s-2]=t[1].dims[s]);let o=e.pads.slice();Tt.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,o,e.format==="NHWC",e.autoPad);let n=Object.assign({},e);return Object.assign(n,{kernelShape:r,pads:o,cacheKey:e.cacheKey}),n},Dn=e=>{let t=jr(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],n=e.dilations,s=e.group,u=e.kernel_shape,d=e.pads,a=e.strides,m=e.w_is_const();return se({autoPad:o,format:r,dilations:n,group:s,kernelShape:u,pads:d,strides:a,wIsConst:m,...t})},Bl=(e,t,r)=>{let o=mi(r,t);if(r.group!==1){e.compute(Mn(t,o));return}let n=r.format==="NHWC",s=t.length===3,u=t[0].dims[n?1:2],d=t[0].dims[n?2:3],a=t[0].dims[n?3:1],m=t[1].dims[2],g=t[1].dims[3],S=Bn(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,n),b=S[n?1:2],w=S[n?2:3],v=S[n?3:1],y=n&&m===u&&g===d&&r.pads[0]===0&&r.pads[1]===0;if(y||m===1&&g===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let _=S[0],z,F,q,le=[];if(n){let B=e.kernelCustomData.wT??e.compute(wt(t[1],fi),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=B),y){let K=u*d*a;z=t[0].reshape([1,_,K]),F=B.reshape([1,K,v]),q=[1,_,v]}else z=t[0].reshape([_,u*d,a]),F=B.reshape([1,a,v]),q=[_,b*w,v];le.push(z),le.push(F)}else z=t[0].reshape([_,a,u*d]),F=t[1].reshape([1,v,a]),q=[_,v,b*w],le.push(F),le.push(z);s&&le.push(t[2]),e.compute(Kr(le,o,S,q,n),{inputs:le});return}let C=!0,A=e.kernelCustomData.wT??e.compute(wt(t[1],fi),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=A);let R=[t[0],A];s&&R.push(t[2]);let W=n?b*w:v,M=n?v:b*w,D=m*g*a;e.compute(di(R,o,S,W,M,D,s,C),{inputs:R})},kl=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let n=[0,t.pads[0],0,t.pads[1]],s=[1].concat(t.strides),u=[1].concat(t.dilations),d=[1].concat(t.kernelShape),a=mi({...t,pads:n,strides:s,dilations:u,kernelShape:d},o);e.compute(Mn(o,a,m=>r?[m[0],m[2],m[3]]:[]))},Wn=(e,t)=>{Ml(e.inputs,t),e.inputs[0].dims.length===3?kl(e,t):Bl(e,e.inputs,t)}});var Dl,hi,gi=j(()=>{"use strict";yt();ge();Lr();Pn();mr();Dl=(e,t=!1,r,o=!1,n=4)=>{let s=De(n,"f32"),u=A=>{switch(A){case 1:return"return W[getIndexFromCoords4D(coord, wShape)];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = W[getIndexFromCoords4D(coord, wShape)];\n            let v1 = W[getIndexFromCoords4D(coord1, wShape)];\n            let v2 = W[getIndexFromCoords4D(coord2, wShape)];\n            let v3 = W[getIndexFromCoords4D(coord3, wShape)];\n            return vec4<f32>(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${A} is not supported.`)}},d=e?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,a=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,m=e?"outBackprop[1]":"outBackprop[2]",g=e?"outBackprop[2]":"outBackprop[3]",S=e?"row":"col",b=e?"col":"row",w=`\n      let inChannels = ${e?"outBackprop[3]":"outBackprop[1]"};\n      let outWidth = ${e?"outShape[2]":"outShape[3]"};\n      let outRow = ${S} / outWidth;\n      let outCol = ${S} % outWidth;\n\n      let WRow = ${b} / (filterDims[1] * inChannels);\n      let WCol = ${b} / inChannels % filterDims[1];\n      let xR = f32(outRow - pads[0] + dilation[0] * WRow) / f32(strides[0]);\n      let xC = f32(outCol - pads[1] + dilation[1] * WCol) / f32(strides[1]);\n      if (xR < 0.0 || xR >= f32(${m}) || fract(xR) > 0.0) {\n        return ${s}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${g}) || fract(xC) > 0.0) {\n        return ${s}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${b} % inChannels;\n      ${d}\n      return x[getIndexFromCoords4D(coord, xShape)/${n}];`,v=e?`\n      let col = colIn * ${n};\n      if (row < dimAOuter && col < dimInner) {\n        ${w}\n      }\n      return ${s}(0.0);`:`\n      let col = colIn * ${n};\n      if (row < dimInner && col < dimBOuter) {\n        ${w}\n      }\n      return ${s}(0.0);`,y=`\n      let col = colIn * ${n};\n      let inChannels = ${e?"outBackprop[3]":"outBackprop[1]"};\n      let coordX = filterDims.x - 1 - row / (filterDims[1] * inChannels);\n      let coordY = filterDims.y - 1 - (row / inChannels) % filterDims[1];\n      if (${e?"row < dimInner && col < dimBOuter":"row < dimInner && col < dimAOuter"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${u(n)}\n      }\n      return ${s}(0.0);\n      `;return`\n  ${Ur(r,o,n===4,4)}\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${s} {\n    ${e?v:y}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${s} {\n    ${e?y:v}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${s}) {\n    let col = colIn * ${n};\n    if (row < dimAOuter && col < dimBOuter) {\n      var value = valueInput;\n      let outWidth = ${e?"outShape[2]":"outShape[3]"};\n      ${a}\n      ${Nr(t,r)}\n      result[getIndexFromCoords4D(coords, outShape)/${n}] = value;\n    }\n  }`},hi=(e,t,r,o,n,s,u,d)=>{let a=t.format==="NHWC",m=a?e[0].dims[3]:e[0].dims[1],g=r[0],S=a?r[2]:r[3],b=a?r[1]:r[2],w=a?r[3]:r[1],v=a?m%4===0&&w%4===0:S%4===0&&w%4===0,y=a?w:S*b,C=a?S*b:w,A=v?[8,8,1]:[y<=4||C<=4?4:16,y>4&&C<=4?4:16,1],R=v?[4,4,1]:[y<=4?1:4,y>4&&C<=4?1:4,1],W=[Math.ceil(y/A[0]/R[0]),Math.ceil(C/A[1]/R[1]),Math.ceil(g/A[2]/R[2])];Ie("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${W}`);let M=v?4:1,D=Math.max(A[0]*M,A[1]),_=[`@group(0) @binding(0) var<storage, read> x: array<${v?"vec4<f32>":"f32"}>;`,"@group(0) @binding(1) var<storage, read> W: array<f32>;"],z="";return u&&(_.push(`@group(0) @binding(2) var<storage, read> bias: array<${v?"vec4<f32>":"f32"}>;`),z+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${v?"vec4<f32>":"f32"} {\n          return bias[coords.${a?"w":"y"}${v?"/ 4":""}];\n        }`),{name:"Conv2DTransposeMatMul",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:W[0],y:W[1],z:W[2]}}),getShaderSource:()=>`\n        ${Fr}\n        ${_.join(`\n`)}\n        @group(0) @binding(${_.length}) var<storage, read_write> result: array<${v?"vec4<f32>":"f32"}>;\n        const outBackprop : vec4<i32> = vec4<i32>(${e[0].dims.join(",")});\n        const xShape : vec4<i32> = vec4<i32>(${e[0].dims.join(",")});\n        const wShape : vec4<i32> = vec4<i32>(${e[1].dims.join(",")});\n        const outShape : vec4<i32> = vec4<i32>(${r.join(",")});\n        const outShapeStrides : vec3<i32> = vec3<i32>(${k.computeStrides(r).slice(0,3).join(",")});\n        const filterDims : vec2<i32> = vec2<i32>(${t.kernelShape[a?1:2]}, ${t.kernelShape[a?2:3]});\n        const effectiveFilterDims : vec2<i32> = filterDims + vec2<i32>(\n              ${t.dilations[0]<=1?0:(t.kernelShape[a?1:2]-1)*(t.dilations[0]-1)},\n              ${t.dilations[1]<=1?0:(t.kernelShape[a?2:3]-1)*(t.dilations[1]-1)});\n        const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${t.pads[0]+t.pads[2]})/2,\n                                         i32(effectiveFilterDims[1]) - 1 - (${t.pads[1]+t.pads[3]})/2);\n        const strides : vec2<i32> = vec2<i32>(${t.strides[0]}, ${t.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${t.dilations[0]}, ${t.dilations[1]});\n        const dimAOuter : i32 = ${o};\n        const dimBOuter : i32 = ${n};\n        const dimInner : i32 = ${s};\n        ${z}\n        ${Dl(a,u,t.activation.toLowerCase(),!1,M)}\n        ${v?pr(R,A,"f32",void 0,!a,D):fr(R,A,"f32",void 0,!a,D,!1,void 0,d)}`}}});var Wl,zn,yi=j(()=>{"use strict";yt();ge();ve();Wl=(e,t,r,o,n,s,u=!1,d)=>{let a=r.format==="NHWC",m=a?1:2,g=a?2:3,S=a?3:1,b=k.size(o),w=u?2:1,v=r.group,y=t[1].dims,C=y[0]/v,A=y[1],R=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${u?`vec4<${d}>`:d}) {\n    result[flatIndex] = ${u?`vec4<${d}>`:d}(value);\n  }`;n&&(R+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${u?`vec4<${d}>`:d} {\n      return bias[coords.${a?"w":"y"}${u?"/ 4":""}];\n    }`);let W=u?4:1,M=L("W",t[1].dataType,t[1].dims,W),D=L("Dy",t[0].dataType,t[0].dims,W),_=[D,M];n&&_.push(L("bias",t[2].dataType,[o[S]],W));let z=X("result",t[0].dataType,o,W),F=`{\n        let batch: u32 = ${s?"global_id.z":"workgroup_id.z"} / outShape[1];\n        let r = ${s?"global_id.z":"workgroup_id.z"} % outShape[1];\n        let c = ${s?"global_id.y":"workgroup_id.y"} * ${w};\n        let d1: u32 = ${s?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${d}>, ${w}>;\n        for (var i = 0; i < ${w}; i++) {\n          dotProd[i] = vec4<${d}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < filterDims[0]; wR = wR + 1) {\n          var dyR = (${d}(dyCorner.x) + ${d}(wR)) / ${d}(strides.x);\n          let wRPerm = filterDims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${d}(outBackprop[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < filterDims[1]; wC = wC + 1) {\n            let dyC = (${d}(dyCorner.y) + ${d}(wC)) / ${d}(strides.y);\n            let dyC2 = (${d}(dyCorner.y) + 1.0 + ${d}(wC)) / ${d}(strides.y);\n            let wCPerm = filterDims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${d}(outBackprop[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${d}(outBackprop[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = outBackprop[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${D.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${d}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${D.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${d}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = outBackprop[${S}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${D.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${d}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = outBackprop[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${D.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${d}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${w}; i = i + 1) {\n          let value = dotProd[i] + ${n?"bias[c+i]":"0.0"};\n          ${z.set("batch","r","c + i","d1","value")};\n        }\n      }`,q=`\n          let outputIndices = ${z.offsetToIndices("global_idx")};\n          let batch = ${z.indicesGet("outputIndices",0)};\n          let d1 = ${z.indicesGet("outputIndices",S)};\n          let r = ${z.indicesGet("outputIndices",m)};\n          let c = ${z.indicesGet("outputIndices",g)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / ${A};\n          let wOutChannel = d1 - groupId * ${A};\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = 0.0;\n          for (var wR: u32 = 0; wR < effectiveFilterDims.x; wR = wR + 1) {\n            if (wR % dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${d}(dyRCorner) + ${d}(wR)) / ${d}(strides[0]);\n            let wRPerm = filterDims.x - 1 - wR / dilations.x;\n            if (dyR < 0.0 || dyR >= ${d}(outBackprop[${m}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < effectiveFilterDims.y; wC = wC + 1) {\n              if (wC % dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${d}(dyCCorner) + ${d}(wC)) / ${d}(strides.y);\n              let wCPerm = filterDims.y - 1 - wC / dilations.y;\n              if (dyC < 0.0 || dyC >= ${d}(outBackprop[${g}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * ${C};\n              for (var d2: u32 = 0; d2 < ${C}; d2 = d2 + 1) {\n                let xValue = ${a?D.get("batch","idyR","idyC","inputChannel"):D.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${M.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${n?"bias[d1]":"0.0"};\n          ${z.setByOffset("global_idx","value")};\n        `;return`\n  ${e.declareVariables(..._,z)}\n  ${R}\n  const outShape : vec4<u32> = vec4<u32>(${o.join(",")});\n  const outBackprop : vec4<u32> = vec4<u32>(${t[0].dims.join(",")});\n  const strides : vec2<u32> = vec2<u32>(${r.strides[0]}, ${r.strides[1]});\n  const filterDims : vec2<u32> = vec2<u32>(${r.kernelShape[a?1:2]}, ${r.kernelShape[a?2:3]});\n  const dilations : vec2<u32> = vec2<u32>(${r.dilations[0]}, ${r.dilations[1]});\n  const effectiveFilterDims : vec2<u32> = filterDims + vec2<u32>(\n          ${r.dilations[0]<=1?0:(r.kernelShape[a?1:2]-1)*(r.dilations[0]-1)},\n          ${r.dilations[1]<=1?0:(r.kernelShape[a?2:3]-1)*(r.dilations[1]-1)});\n  const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${r.pads[0]+r.pads[2]})/2,\n                                     i32(effectiveFilterDims[1]) - 1 - (${r.pads[1]+r.pads[3]})/2);\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(b)};\n  ${u?F:q}}`},zn=(e,t,r)=>{let o=e.length>2,n=t.outputShape,s=k.size(n),u=[Math.ceil(s/64),1,1];Ie("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${u}`);let d=Pe(e[0].dataType);return{name:"ConvTranspose2D",shaderCache:{hint:t.cacheKey},getRunData:()=>({dispatchGroup:{x:u[0],y:u[1],z:u[2]},outputs:[{dims:r?r(n):n,dataType:e[0].dataType}]}),getShaderSource:a=>Wl(a,e,t,n,o,u[1]===1&&u[2]===1,!1,d)}}});var zl,Vl,Gl,bi,wi,Ul,Nl,Ll,Fl,vi,$i=j(()=>{"use strict";Re();gi();yi();cr();dr();zl=(e,t,r,o,n,s)=>(e-1)*t+r+(o-1)*n+1-s,Vl=(e,t,r,o,n)=>{let s=Math.floor(e/2);t==="SAME_UPPER"?(r[o]=s,r[n]=e-s):t==="SAME_LOWER"&&(r[o]=e-s,r[n]=s)},Gl=(e,t,r,o,n,s,u,d,a,m)=>{let g=e.length-2,S=m.length===0;if(a.length===0)for(let v=0;v<g;++v)a.push(0);let b=e[0],w=t[d?3:1]*n;for(let v=0,y=e.length-g-(d?1:0);v<g;++v,++y){let C=e[y],A=S?C*u[v]:m[v],R=zl(C,u[v],s[v],t[y],r[v],A);Vl(R,o,s,v,v+g),S&&m.push(u[v]*(C-1)+a[v]+(t[y]-1)*r[v]+1-s[v]-s[v+g])}m.splice(0,0,b),m.splice(d?3:1,0,w)},bi=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((b,w)=>b*w,1)===0){r.length=0;for(let b=2;b<t[1].dims.length;++b)r.push(t[1].dims[b])}let o=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(o?3:1,0,t[1].dims[1]);let n=e.pads.slice(),s=e.outputShape.slice(),u=e.outputPadding.slice(),d=t[0].dims,a=e.dilations.slice();if(a.reduce((b,w)=>b+w,0)===0){let b=t[0].dims.length-2;a=new Array(b).fill(1)}let m=e.strides.slice();if(m.reduce((b,w)=>b+w,0)===0){let b=t[0].dims.length-2;m=new Array(b).fill(1)}Gl(d,r,a,e.autoPad,e.group,n,m,o,u,s);let g=Object.assign({},e),S=e.cacheKey+[r.join("n,"),n.join(","),m.join(","),u.join(","),s.join(","),a.join(",")].join("_");return Object.assign(g,{kernelShape:r,pads:n,outputPadding:u,outputShape:s,dilations:a,strides:m,cacheKey:S}),g},wi=e=>{let t=jr(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],n=e.dilations,s=e.group,u=e.kernelShape,d=e.pads,a=e.strides,m=e.wIsConst(),g=e.outputPadding,S=e.outputShape;return se({autoPad:o,format:r,dilations:n,group:s,kernelShape:u,outputPadding:g,outputShape:S,pads:d,strides:a,wIsConst:m,...t})},Ul=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[0];if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let n=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==n))throw new Error("invalid bias");let s=e[0].dims.length-2;if(t.dilations.reduce((g,S)=>g+S,0)>0&&t.dilations.length!==s)throw new Error(`dilations should be ${s}D`);if(t.strides.reduce((g,S)=>g+S,0)>0&&t.strides.length!==s)throw new Error(`strides should be ${s}D`);if(t.pads.reduce((g,S)=>g+S,0)>0&&t.pads.length!==s*2)throw new Error(`pads should be ${s*2}D`);if(t.outputPadding.length!==s&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${s}D`);if(t.kernelShape.reduce((g,S)=>g+S,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},Nl=[2,3,1,0],Ll=(e,t,r)=>{let o=bi(r,t),n=r.format==="NHWC",s=t.length===3;if(o.group!==1){e.compute(zn(t,o));return}let u=o.outputShape,d=u[n?1:2],a=u[n?2:3],m=u[n?3:1],g=t[1].dims[2],S=t[1].dims[3],b=t[0].dims[n?3:1],w=n?d*a:m,v=n?m:d*a,y=g*S*b,C=!0,A=e.kernelCustomData.wT??e.compute(wt(t[1],Nl),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=A);let R=[t[0],A];s&&(!n&&t[2].dims.length===1?R.push(t[2].reshape([t[2].dims[0],1,1])):R.push(t[2])),e.compute(hi(R,o,u,w,v,y,s,C),{inputs:R})},Fl=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];o.length===3&&o.push(e.inputs[2]);let n=t.kernelShape;(n.length===0||n[0]===0)&&(n=[e.inputs[1].dims[2]]);let s=t.dilations;(s.length===0||s[0]===0)&&(s=[1]);let u=t.strides;(u.length===0||u[0]===0)&&(u=[1]);let d=t.pads;d.length===0&&(d=[0,0]),d=[0,d[0],0,d[1]],u=[1].concat(u),s=[1].concat(s),n=[1].concat(n);let a=bi({...t,pads:d,strides:u,dilations:s,kernelShape:n},o);e.compute(zn(o,a,m=>r?[m[0],m[2],m[3]]:[m[0],m[1],m[3]]))},vi=(e,t)=>{Ul(e.inputs,t),e.inputs[0].dims.length===3?Fl(e,t):Ll(e,e.inputs,t)}});var Vn,qr,xi,Hl,jl,Gn,Un,Kl,Si,Ci,Ai=j(()=>{"use strict";ge();Re();ve();Vn="[a-zA-Z]|\\\\.\\\\.\\\\.",qr="("+Vn+")+",xi="^"+qr+"$",Hl="("+qr+",)*"+qr,jl="^"+Hl+"$",Gn=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let o=this.symbolToIndices.get(t);o===void 0?o=[r]:o.push(r),this.symbolToIndices.set(t,o)}},Un=class{constructor(t,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[o,n]=r.includes("->")?r.split("->",2):[r,""];if(!o.match(RegExp(jl)))throw new Error("Invalid LHS term");if(o.split(",").forEach((d,a)=>{let m=t[a].dims.slice();if(!d.match(RegExp(xi)))throw new Error("Invalid LHS term");let g=this.processTerm(d,!0,m,a);this.lhs.push(g)}),n==="")n+=[...this.symbolToInfo.entries()].filter(([d,a])=>a.count===1||d==="...").map(([d])=>d).join("");else if(!n.match(RegExp(qr)))throw new Error("Invalid RHS");n.match(RegExp(Vn,"g"))?.forEach(d=>{if(d==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let a=this.symbolToInfo.get(d);if(a===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(a.dimValue)}}),this.rhs=this.processTerm(n,!0,this.outputDims)}addSymbol(t,r,o){let n=this.symbolToInfo.get(t);if(n!==void 0){if(n.dimValue!==r&&n.count!==1)throw new Error("Dimension mismatch");n.count++,n.inputIndices.push(o)}else n={count:1,dimValue:r,inputIndices:[o]};this.symbolToInfo.set(t,n)}processTerm(t,r,o,n=-1){let s=o.length,u=!1,d=[],a=0;if(!t.match(RegExp(xi))&&!r&&t!=="")throw new Error("Invalid LHS term");let m=t.match(RegExp(Vn,"g")),g=new Gn(n);return m?.forEach((S,b)=>{if(S==="..."){if(u)throw new Error("Only one ellipsis is allowed per input term");u=!0;let w=s-m.length+1;if(w<0)throw new Error("Ellipsis out of bounds");if(d=o.slice(a,a+w),this.hasEllipsis){if(this.ellipsisDims.length!==d.length||this.ellipsisDims.toString()!==d.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=d;else throw new Error("Ellipsis must be specified in the LHS");for(let v=0;v<d.length;v++){let y=String.fromCharCode("0".charCodeAt(0)+b);g.addSymbol(y,b+v),this.addSymbol(y,o[a++],n)}}else g.addSymbol(S,b),this.addSymbol(S,o[a++],n)}),g}},Kl=(e,t)=>{let r=e[0].dataType,o=new Array(e.length);for(let W=0;W<e.length;++W)o[W]=L(`input${W}`,r,e[W].dims);let n=t.outputDims,s=k.size(n),u=X("output",r,n),d=[],a=Array.from(t.rhs.symbolToIndices.keys()),m="var prod = 1.0;",g="var sum = 0.0;",S="sum += prod;",b=[],w=[],v=[],y=[],C=t.symbolToInfo.size===a.length;t.symbolToInfo.forEach((W,M)=>{if(a.includes(M)){let D=a.indexOf(M);t.lhs.forEach((_,z)=>{if(W.inputIndices.includes(z)){let F=_.symbolToIndices.get(M);if(F===void 0)throw new Error("Invalid symbol error");F.forEach(q=>{d.push(`${o[z].indicesSet(`input${z}Indices`,q,u.indicesGet("outputIndices",D))}`)})}})}else t.lhs.forEach((D,_)=>{let z=t.symbolToInfo.get(M);if(z===void 0)throw new Error("Invalid symbol error");if(z.inputIndices.includes(_)){let F=D.symbolToIndices.get(M);if(F===void 0)throw new Error("Invalid symbol error");F.forEach(q=>{b.push(`${o[_].indicesSet(`input${_}Indices`,q,`${M}`)}`)}),y.push(`prod *= ${o[_].getByIndices(`input${_}Indices`)};`)}}),w.push(`for(var ${M}: u32 = 0; ${M} < ${t.symbolToInfo.get(M)?.dimValue}; ${M}++) {`),v.push("}")});let A=C?[...d,`let sum = ${o.map((W,M)=>W.getByIndices(`input${M}Indices`)).join(" * ")};`]:[...d,g,...w,...b,m,...y,S,...v],R=W=>`\n      ${W.declareVariables(...o,u)}\n\n      ${W.mainStart()}\n        ${W.guardAgainstOutOfBoundsWorkgroupSizes(s)}\n        var outputIndices = ${u.offsetToIndices("global_idx")};\n        ${o.map((M,D)=>`var input${D}Indices: ${o[D].type.indices};`).join(`\n`)}\n        ${A.join(`\n`)};\n        ${u.setByOffset("global_idx","sum")};\n      }`;return{name:"Einsum",shaderCache:{hint:t.equation},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:R}},Si=(e,t)=>{let r=new Un(e.inputs,t.equation);e.compute(Kl(e.inputs,r))},Ci=e=>{let t=e.equation.replace(/\\s+/g,"");return se({equation:t})}});var ql,Ii,Yl,Xl,Ei,Ti=j(()=>{"use strict";ge();ve();ql=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=r.length<t.length?0:r.length-t.length,n=t.length<r.length?0:t.length-r.length;for(;o<r.length&&n<t.length;++o,++n)if(r[o]!==t[n]&&r[o]!==1&&t[n]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Ii=(e,t)=>{let r=e.length-t.length,o=[];for(let n=0;n<r;++n)o.push(e[n]);for(let n=0;n<t.length;++n)o.push(t[n]===1?e[n+r]:t[n]);return o},Yl=(e,t)=>e.length>t.length?Ii(e,t):Ii(t,e),Xl=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=Yl(t,r),n=k.size(o),s=e[0].dataType,u=L("input",s,t),d=X("output",s,o),a=m=>`\n  const inputShape = ${u.indices(...t)};\n  ${m.declareVariables(u,d)}\n  ${m.mainStart()}\n  ${m.guardAgainstOutOfBoundsWorkgroupSizes(n)}\n    let outputIndices = ${d.offsetToIndices("global_idx")};\n    var inputIndices: ${u.type.indices};\n    for (var i = 0; i < ${t.length}; i++) {\n      if (${u.indicesGet("inputShape","i")} == 1) {\n        ${u.indicesSet("inputIndices","i",0)}\n      } else {\n        ${u.indicesSet("inputIndices","i",d.indicesGet("outputIndices",`i + ${o.length-t.length}`))}\n      }\n    }\n    ${d.setByOffset("global_idx",u.getByIndices("inputIndices"))}\n  }`;return{name:"Expand",shaderCache:{hint:`${o}`},getShaderSource:a,getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}})}},Ei=e=>{ql(e.inputs),e.compute(Xl(e.inputs),{inputs:[0]})}});var Jl,Zl,Oi,_i,Ri=j(()=>{"use strict";ge();Re();ve();Jl=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},Zl=(e,t)=>{let r=e[0].dims,o=e[1].dims,n=r.length,s=k.normalizeAxis(t.axis,n),u=r.slice(0);u.splice(s,1,...o);let d=r[s],a=k.size(u),m=L("data",e[0].dataType,e[0].dims),g=L("inputIndices",e[1].dataType,e[1].dims),S=X("output",e[0].dataType,u),b=()=>{let v=o.length,y=`var indicesIndices  = ${g.type.indices}(0);`;for(let C=0;C<v;C++)y+=`${v>1?`indicesIndices[${C}]`:"indicesIndices"} = ${u.length>1?`outputIndices[${s+C}]`:"outputIndices"};`;y+=`\n        var idx = ${g.getByIndices("indicesIndices")};\n        if (idx < 0) {\n          idx = idx + ${d};\n        }\n        var dataIndices = ${m.type.indices}(0);\n      `;for(let C=0,A=0;C<n;C++)C===s?(y+=`${n>1?`dataIndices[${C}]`:"dataIndices"} = u32(idx);`,A+=v):(y+=`${n>1?`dataIndices[${C}]`:"dataIndices"} = ${u.length>1?`outputIndices[${A}]`:"outputIndices"};`,A++);return y},w=v=>`\n      ${v.declareVariables(m,g,S)}\n      ${v.mainStart()}\n        ${v.guardAgainstOutOfBoundsWorkgroupSizes(a)}\n        let outputIndices = ${S.offsetToIndices("global_idx")};\n        ${b()};\n        let value = ${m.getByIndices("dataIndices")};\n        ${S.setByOffset("global_idx","value")};\n      }`;return{name:"Gather",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:w}},Oi=e=>se({axis:e.axis}),_i=(e,t)=>{let r=e.inputs;Jl(r),e.compute(Zl(e.inputs,t))}});var Ql,ed,Pi,Mi,Bi=j(()=>{"use strict";ge();Re();ve();Ql=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},ed=(e,t)=>{let r=e[0].dims,o=e[0].dataType,n=r.length,s=k.computeStrides(r),u=k.size(r),d=e[1].dims,a=e[1].dataType,m=k.size(d),g=k.normalizeAxis(t.axis,n),S=r[g],b=d.slice(0),w=k.size(b),v=L("input",o,r),y=L("indices",a,[m]),C=X("output",o,b),A=R=>`\n      const inputStrides = array<u32, ${s.length}>(${s.map(W=>`${W}u`).join(",")});\n      ${R.declareVariables(v,y,C)}\n      ${R.mainStart()}\n      ${R.guardAgainstOutOfBoundsWorkgroupSizes(w)}\n\n      let outputIndices = ${C.offsetToIndices("global_idx")};\n\n      var idx = ${y.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + ${S};\n      }\n\n      var srcOffset = u32(0);\n\n      for (var i = 0; i < ${r.length}; i++) {\n        if (i == ${g}) {\n          srcOffset +=  u32(idx) * inputStrides[i];\n        } else {\n          srcOffset += ${C.indicesGet("outputIndices","i")} * inputStrides[i];\n        }\n      }\n\n      // Should never hit this with valid values in indices\n      // This is a guard against malicious data in the indices input\n      if (srcOffset < 0 || srcOffset >= ${u}) {\n        return;\n      }\n\n      output[global_idx] = input[srcOffset];\n  }`;return{name:"GatherElements",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:b,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)}}),getShaderSource:A}},Pi=e=>se({axis:e.axis}),Mi=(e,t)=>{let r=e.inputs;Ql(r),e.compute(ed(e.inputs,t))}});var td,rd,nd,ki,Di,Wi=j(()=>{"use strict";ge();Re();ve();td=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},rd=(e,t,r)=>{if(r.length===0)return"0u";let o=r.length===1&&e!==1||r.length===2&&r[0]!==e,n=r[r.length-1]!==t,s="0u";return o||(s+=`+ m * ${r[r.length-1]}u`),n||(s+="+n"),s},nd=(e,t)=>{let r=e[0].dims.slice(),o=e[1].dims.slice(),[n,s,u]=Br.getShapeOfGemmResult(r,t.transA,o,t.transB,e.length===3?e[2].dims:void 0),d=[n,s];if(!d)throw new Error("Can\'t use gemm on the given tensors");let a=k.size(d),m="";t.transA&&t.transB?m="value += a[k * M + m] * b[n * K + k];":t.transA&&!t.transB?m="value += a[k * M + m] * b[k * N + n];":!t.transA&&t.transB?m="value += a[m * K + k] * b[n * K + k];":!t.transA&&!t.transB&&(m="value += a[m * K + k] * b[k * N + n];");let g=Pe(e[0].dataType),S=t.alpha===1?"":"value *= alpha;",b=e.length===3?`value += beta * c[${rd(n,s,e[2].dims)}];`:"",w=[`@group(0) @binding(0) var<storage, read> a : array<${g}>;`,`@group(0) @binding(1) var<storage, read> b : array<${g}>;`];e.length===3&&w.push(`@group(0) @binding(2) var<storage, read> c : array<${g}>;`);let v=y=>`\n  const M: u32 = ${n}u;\n  const N: u32 = ${s}u;\n  const K: u32 = ${u}u;\n  const alpha = ${g}(${t.alpha});\n  const beta = ${g}(${t.beta});\n\n  ${w.join(`\n`)}\n  @group(0) @binding(${e.length}) var<storage, read_write> output : array<${g}>;\n\n  ${y.mainStart()}\n    ${y.guardAgainstOutOfBoundsWorkgroupSizes(a)}\n\n    let m = global_id.x / N;\n    let n = global_id.x % N;\n\n    var value = ${g}(0);\n    for (var k: u32 = 0u; k<${u}u; k++) {\n      ${m}\n    }\n\n    ${S}\n    ${b}\n    output[global_id.x] = value;\n\n  }`;return{name:"Gemm",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:d,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:v}},ki=(e,t)=>{td(e.inputs),e.compute(nd(e.inputs,t))},Di=e=>se(e)});var od,ad,id,sd,zi,Vi,Gi=j(()=>{"use strict";ke();ge();Re();ve();od={name:"InstanceNormalization"},ad=(e,t)=>{let r=e[0].dims,o=r,n=2,s=k.sizeToDimension(r,n),u=k.sizeFromDimension(r,n),d=r[1],a=L("x",e[0].dataType,[r[0],r[1],u]),m=L("scale",e[1].dataType,e[1].dims),g=L("bias",e[2].dataType,e[2].dims),S=X("output",e[0].dataType,[r[0],r[1],u]),b=[a,m,g,S],w=a.type.value,v=64,y=C=>`\n\n  const C: u32 = ${d};\n  const normSize: u32 = ${u};\n  const epsilon: f32 = ${t.epsilon};\n  var<workgroup> meanShared : ${w};\n  var<workgroup> squaredNormShared : ${w};\n  var<workgroup> workgroupShared : array<${w}, ${v}>;\n  const workgroupSize = ${v}u;\n  ${C.declareVariables(...b)}\n  ${C.mainStart(v)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / C;\n    let channel = norm % C;\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial: ${w} = 0;\n    for (var h = localIndex; h < normSize; h += workgroupSize) {\n      initial = initial + ${a.get("batch","channel","h")};\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = workgroupShared[0] / ${w}(normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = 0;\n    for (var h = localIndex; h < normSize; h += workgroupSize) {\n      let deviation =  ${a.get("batch","channel","h")} - meanShared;\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = workgroupShared[0];\n    }\n    workgroupBarrier();\n\n    let invStdDev = 1 / sqrt(squaredNormShared / ${w}(normSize) + epsilon);\n    let channelScale = invStdDev * ${m.getByOffset("channel")};\n    let channelShift = ${g.getByOffset("channel")} - meanShared * channelScale;\n    for (var h = localIndex; h < normSize; h += workgroupSize) {\n      let value = ${a.get("batch","channel","h")} * channelScale + channelShift;\n      ${S.set("batch","channel","h","value")};\n    }\n  }`;return{...od,shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:s}}),getShaderSource:y}},id=(e,t,r,o,n,s,u,d)=>{let a=ft(u),m=L("input",t.dataType,t.dims,a),g=L("scale",r.dataType,r.dims,a),S=L("bias",o.dataType,o.dims,a),b=64,w=a===1?"vec2f":`mat2x${a}f`,v=a===1?"f32":`vec${a}f`,y=(D,_)=>`${w}(${D}, ${_})`,C=n*u/a,A=Math.ceil(s/b),R=D=>`\n  const H: u32 = ${s};\n  const C: u32 = ${u/a};\n  const imageSize: u32 = ${s*u/a};\n\n  ${D.declareVariables(m)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${w}>;\n\n  ${D.mainStart(b)}\n    let currentImageNumber = global_idx / ${b} / C;\n    let currentChannelNumber = (global_idx / ${b}) % C;\n    let wgId = global_idx % ${b};\n    let wgOffset = wgId * ${A};\n    if (wgOffset >= H) {\n        return;\n    }\n    let wgMax = min(wgOffset + ${A}, H);\n\n    let offset = currentImageNumber * imageSize + currentChannelNumber;\n    var sum = ${Ye("f32",a)};\n    var squaredSum = ${Ye("f32",a)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${v}(input[offset + i * C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${y("sum","squaredSum")};\n  }`,W=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:JSON.stringify({components:a,n,h:s,c:u})},getRunData:()=>({outputs:[{dims:[n,u,b,2],dataType:1}],dispatchGroup:{x:n*u/a}}),getShaderSource:R},{inputs:[t],outputs:[-1]})[0],M=D=>`\n  const H: u32 = ${s};\n  const C: u32 = ${u/a};\n  const imageSize: u32 = ${b*u/a};\n  const epsilon: f32 = ${d};\n\n  @group(0) @binding(0) var<storage, read> input : array<${w}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${g.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${S.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${w}>;\n\n  ${D.mainStart()}\n    ${D.guardAgainstOutOfBoundsWorkgroupSizes(C)}\n    let currentImageNumber = global_idx / C;\n    let currentChannelNumber = global_idx % C;\n\n    let offset = currentImageNumber * imageSize;\n    var sum = ${Ye("f32",a)};\n    var squaredSum = ${Ye("f32",a)};\n    for (var i: u32 = 0; i < ${b}; i++) {\n        let value = input[offset + i + currentChannelNumber * ${b}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(H);\n    squaredSum = squaredSum / f32(H);\n    let invStdDev = 1 / sqrt(squaredSum - sum * sum + epsilon);\n    let channelScale = invStdDev * ${v}(scale[currentChannelNumber]);\n    let channelShift = ${v}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${y("channelScale","channelShift")};\n  }`;return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:JSON.stringify({components:a,n,h:s,c:u,epsilon:d})},getRunData:()=>({outputs:[{dims:[n,u,2],dataType:1}],dispatchGroup:{x:Math.ceil(C/64)}}),getShaderSource:M},{inputs:[W,r,o],outputs:[-1]})[0]},sd=(e,t,r)=>{let o=t[0].dims,n=o,s=o[0],u=o[o.length-1],d=k.sizeFromDimension(o,1)/u,a=ft(u),m=k.size(n)/a,g=L("input",t[0].dataType,t[0].dims,a),S=X("output",t[0].dataType,n,a),b=Pe(t[0].dataType),w=a===1?"vec2f":`mat2x${a}f`,v=a===1?b:`vec${a}<${b}>`,y=id(e,t[0],t[1],t[2],s,d,u,r.epsilon),C=A=>`\n  const H: u32 = ${d};\n  const C: u32 = ${u/a};\n\n  @group(0) @binding(0) var<storage, read> input : array<${g.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${w}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${S.type.storage}>;\n\n  ${A.mainStart()}\n    let currentImageNumber = global_idx / (C * H);\n    let currentChannelNumber = global_idx % C;\n\n    let scaleOffset = currentImageNumber * C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${v}(scale[0]), ${v}(scale[1]));\n  }`;e.compute({name:"InstanceNormalization",shaderCache:{hint:`${r.cacheKey}`},getRunData:()=>({outputs:[{dims:n,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)}}),getShaderSource:C},{inputs:[t[0],y]})},zi=e=>se({epsilon:e.epsilon,format:e.format}),Vi=(e,t)=>{t.format==="NHWC"?sd(e,e.inputs,t):e.compute(ad(e.inputs,t))}});var ud,ld,Ui,Ni,Li=j(()=>{"use strict";ke();ge();Re();ve();ud=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},ld=(e,t,r)=>{let o=e[0].dims,n=e[1],s=e[2],u=o,d=k.normalizeAxis(t.axis,o.length),a=k.sizeToDimension(o,d),m=k.sizeFromDimension(o,d),g=k.size(n.dims),S=s?k.size(s.dims):0;if(g!==m||s&&S!==m)throw new Error(`Size of X.shape()[axis:] == ${m}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${g} and bias size of ${S}`);let b=[];for(let M=0;M<o.length;++M)M<d?b.push(o[M]):b.push(1);let w=ft(m),v=Pe(e[0].dataType),y=[L("x",e[0].dataType,e[0].dims,w),L("scale",n.dataType,n.dims,w)];s&&y.push(L("bias",s.dataType,s.dims,w)),y.push(X("output",e[0].dataType,u,w));let C=r>1,A=r>2;C&&y.push(X("meanDataOutput",1,b)),A&&y.push(X("invStdOutput",1,b));let R=M=>`\n  const normSize: f32 = ${m};\n  const normSizeVectorized: u32 = ${m/w};\n  const epsilon: f32 = ${t.epsilon};\n\n  ${M.declareVariables(...y)}\n  ${M.mainStart()}\n    ${M.guardAgainstOutOfBoundsWorkgroupSizes(a)}\n    let offset = global_idx * normSizeVectorized;\n    var meanVector = ${Ye("f32",w)};\n    var meanSquareVector = ${Ye("f32",w)};\n\n    for (var h: u32 = 0u; h < normSizeVectorized; h++) {\n      let value = ${Ot(v,w,"x[h + offset]")};\n      meanVector += value;\n      meanSquareVector += value * value;\n    }\n    let mean = ${bt("meanVector",w)} / normSize;\n    let meanSquare = sqrt(${bt("meanSquareVector",w)} \n      / normSize - mean * mean + epsilon);\n\n    for (var j: u32 = 0; j < normSizeVectorized; j++) {\n      let f32input = ${Ot(v,w,"x[j + offset]")};\n      let f32scale = ${Ot(v,w,"scale[j]")};\n      output[j + offset] = ${y[0].type.value}((f32input - mean) / meanSquare * f32scale\n        ${s?`+ ${Ot(v,w,"bias[j]")}`:""}\n      );\n    }\n\n    ${C?"meanDataOutput[global_idx] = mean":""};\n    ${A?"invStdOutput[global_idx] = 1 / meanSquare":""};\n  }`,W=[{dims:u,dataType:e[0].dataType}];return C&&W.push({dims:b,dataType:1}),A&&W.push({dims:b,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${t.cacheKey}|${r}|${e.length}`},getRunData:()=>({outputs:W,dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:R}},Ui=e=>se({axis:e.axis,epsilon:e.epsilon}),Ni=(e,t)=>{ud(e.inputs),e.compute(ld(e.inputs,t,e.outputCount))}});var dd,Fi,Hi=j(()=>{"use strict";ge();mr();dd=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Fi=e=>{dd(e.inputs);let t=et.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can\'t use matmul on the given tensors");e.compute(Kr(e.inputs,{activation:"",activationCacheKey:""},t))}});var cd,pd,fd,md,hd,gd,yd,bd,wd,ji,Ki,qi=j(()=>{"use strict";ke();ge();Re();ve();cd=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1)throw new Error("Input type must be float.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},pd=(e,t,r,o,n,s,u)=>{let d=r.length,a="";for(let m=d-1;m>=0;--m)a+=`\n            k = i32(${e.indicesGet("indices",m)}) - ${n[m]};\n            if (k < 0) {\n              break;\n            }\n            if (k >= ${r[m]}) {\n              break;\n            }\n            offset += k * ${o[m]};\n        `;return`\n          value = ${s}(${u});\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${a}\n            value = x[offset];\n          }\n      `},fd=(e,t,r,o,n)=>{let s=r.length,u="";for(let d=s-1;d>=0;--d)u+=`\n                k = i32(${e.indicesGet("indices",d)}) - ${n[d]};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = ${2*(r[d]-1)};\n                  k = k % _2n_1;\n                  if(k >= ${r[d]}) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * ${o[d]};\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${u}\n              value = x[offset];\n          `},md=(e,t,r,o,n)=>{let s=r.length,u="";for(let d=s-1;d>=0;--d)u+=`\n                k = i32(${e.indicesGet("indices",d)}) - ${n[d]};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= ${r[d]}) {\n                  k = ${r[d]-1};\n                }\n                offset += k * ${o[d]};\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${u}\n              value = x[offset];\n          `},hd=(e,t,r,o,n)=>{let s=r.length,u="";for(let d=s-1;d>=0;--d)u+=`\n                k = i32(${e.indicesGet("indices",d)}) - ${n[d]};\n                if (k < 0)  {\n                  k += ${r[d]};\n                }\n                if (k >= ${r[d]}) {\n                  k -= ${r[d]};\n                }\n                offset += k * ${o[d]};\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${u}\n              value = x[offset];\n          `},gd=(e,t,r,o,n,s)=>{switch(n.mode){case 0:return pd(e,t,r,o,n.pads,s,n.value);case 1:return fd(e,t,r,o,n.pads);case 2:return md(e,t,r,o,n.pads);case 3:return hd(e,t,r,o,n.pads);default:throw new Error("Invalid mode")}},yd=(e,t,r,o)=>{let n=t[0].dims,s=k.padShape(n.slice(),r.pads),u=k.size(s),d=k.computeStrides(n),a=X("output",t[0].dataType,s),m=L("x",t[0].dataType,n),g=gd(a,s,n,d,r,o);return`\n              ${e.declareVariables(m,a)}\n              ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n\n              let indices = ${a.offsetToIndices("global_idx")};\n\n              var value = ${o}(0);\n              ${g}\n              output[global_idx] = value;\n          }`},bd=(e,t)=>{let r=k.padShape(e[0].dims.slice(),t.pads);return{name:"Pad",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(k.size(r)/64)}}),getShaderSource:o=>yd(o,e,t,"f32")}},wd=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),o=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,n=e[0].dims.length,s=new Int32Array(2*n).fill(0);if(e.length>=4){let d=e[3].getBigInt64Array();for(let a=0;a<d.length;a++)s[Number(d[a])]=Number(r[a]),s[Number(d[a])+n]=Number(r[a+d.length])}else r.forEach((d,a)=>s[Number(a)]=Number(d));let u=[];return s.forEach(d=>u.push(d)),se({mode:t.mode,value:o,pads:u})}else return t},ji=(e,t)=>{cd(e.inputs);let r=wd(e.inputs,t);e.compute(bd(e.inputs,r),{inputs:[0]})},Ki=e=>{let t=e.mode,r=e.value,o=e.pads;return se({mode:t,value:r,pads:o})}});var Yr,Yi,Xi,Ji,Zi,Qi,es,ts,rs,ns,os,as,is,ss,us,ls=j(()=>{"use strict";ge();Re();ve();Yr=e=>{if(!e||e.length!==1)throw new Error("Pool ops requires 1 input.");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("Pool ops supports 1-D or 2-D inputs only for now.")},Yi=(e,t,r)=>{let o=t.format==="NHWC",n=e.dims.slice();o&&n.splice(1,0,n.pop());let s=Object.hasOwnProperty.call(t,"dilations"),u=t.kernelShape.slice(),d=t.strides.slice(),a=s?t.dilations.slice():[],m=t.pads.slice();Tt.adjustPoolAttributes(r,n,u,d,a,m);let g=Tt.computePoolOutputShape(r,n,d,a,u,m,t.autoPad),S=Object.assign({},t);s?Object.assign(S,{kernelShape:u,strides:d,pads:m,dilations:a,cacheKey:t.cacheKey}):Object.assign(S,{kernelShape:u,strides:d,pads:m,cacheKey:t.cacheKey});let b=g.slice();return b.push(b.splice(1,1)[0]),[S,o?b:g]},Xi=(e,t,r,o,n,s,u,d)=>{let a=n.format==="NHWC",m=r,g=t.type.value,S=m.length,b=k.size(o),w=X("output",t.type.tensor,o);if(n.kernelShape.length<=2){let v=n.kernelShape[n.kernelShape.length-1],y=n.strides[n.strides.length-1],C=n.pads[n.pads.length/2-1],A=n.pads[n.pads.length-1],R=S-(a?2:1),W="",M="",D="";if(C+A!==0?W=`\n                for (var i: u32 = 0u; i < ${v}u; i++) {\n                  xIndices[${R}] = indices[${R}] * ${y} - ${C} + i;\n                  if (xIndices[${R}] < 0 || xIndices[${R}] >= ${m[R]}) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${s}\n                }`:W=`\n                for (var i: u32 = 0u; i < ${v}u; i++) {\n                  xIndices[${R}] = indices[${R}] * ${y} - ${C} + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${s}\n                }`,n.kernelShape.length===2){let z=n.kernelShape[n.kernelShape.length-2],F=n.strides[n.strides.length-2],q=n.pads[n.pads.length/2-2],le=n.pads[n.pads.length-2],B=S-(a?3:2),K=m[B];q+le!==0?M=`\n                for (var j: u32 = 0u; j < ${z}u; j++) {\n                  xIndices[${B}] = indices[${B}] * ${F} - ${q} + j;\n                  if (xIndices[${B}] < 0 || xIndices[${B}] >= ${K}) {\n                    pad+= ${v};\n                    continue;\n                  }\n              `:M=`\n                for (var j: u32 = 0u; j < ${z}u; j++) {\n                  xIndices[${B}] = indices[${B}] * ${F} - ${q} + j;\n                `,D=`\n              }\n            `}return`\n            ${e.declareVariables(t,w)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(b)}\n\n              let indices = ${w.offsetToIndices("global_idx")};\n              var xIndices = ${w.offsetToIndices("global_idx")};\n\n              var value: ${g} = ${g}(${d});\n              var pad = 0;\n              ${M}\n              ${W}\n              ${D}\n              ${u}\n\n              output[global_idx] = value;\n            }`}else{if(a)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let v=k.size(n.kernelShape),y=k.computeStrides(n.kernelShape),C=y.length,A=n.pads.length,R=n.pads.reduce((D,_)=>D+_),W="";return R?W=`\n                if (xIndices[j] >= inputDims[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${s}\n              }`:W=`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${s}\n            `,`\n            ${e.declareVariables(t,w)}\n\n            const pads = array<u32, ${A}>(${n.pads.map(D=>`${D}u`).join(",")});\n            const inputDims = array<u32, ${S}>(${m.map(D=>`${D}u`).join(",")});\n            const kernelStrides = array<u32, ${C}>(${y.map(D=>`${D}u`).join(",")});\n            const strides = array<u32, ${C}>(${n.strides.map(D=>`${D}u`).join(",")});\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(b)}\n\n              let indices = ${w.offsetToIndices("global_idx")};\n              let xIndices = ${w.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${C}>;\n\n              var value = ${w.type.value}(${d});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < ${v}u; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${C-1}u; j++) {\n                  offsets[j] = offset / kernelStrides[j];\n                  offset -= offsets[j] * kernelStrides[j];\n                }\n                offsets[${C-1}] = offset;\n\n                isPad = false;\n                for (var j = ${S-C}u; j < ${S}u; j++) {\n                  xIndices[j] = indices[j] * strides[j - ${S-C}u]\n                    + offsets[j - ${S-C}u] - pads[j - 2u];\n                  ${W}\n              }\n              ${u}\n\n              output[global_idx] = value;\n            }`}},Ji=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Zi=(e,t,r,o)=>{let[n,s]=Yi(t,o,r),u=k.size(n.kernelShape),d=L("x",t.dataType,t.dims),a=d.type.value,m="value += x_val;",g="";return n.countIncludePad?g+=`value /= ${a}(${u});`:g+=`value /= ${a}(${u} - pad);`,{name:e,shaderCache:{hint:o.cacheKey},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(k.size(s)/64)}}),getShaderSource:S=>Xi(S,d,t.dims,s,n,m,g,"0.0")}},Qi=e=>{let t=e.count_include_pad!==0,r=Ji(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return se({countIncludePad:t,...r})},es=(e,t)=>{Yr(e.inputs),e.compute(Zi("AveragePool",e.inputs[0],!1,t))},ts={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},rs=e=>{let t=e.format;return{format:t,...ts,cacheKey:t}},ns=(e,t)=>{Yr(e.inputs),e.compute(Zi("GlobalAveragePool",e.inputs[0],!0,t))},os=(e,t,r,o)=>{let[n,s]=Yi(t,o,r),u=`\n      value = max(x_val, value);\n    `,d="",a=L("x",t.dataType,t.dims);return{name:e,shaderCache:{hint:o.cacheKey},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(k.size(s)/64)}}),getShaderSource:m=>Xi(m,a,t.dims,s,n,u,d,"-1e5")}},as=(e,t)=>{Yr(e.inputs),e.compute(os("MaxPool",e.inputs[0],!1,t))},is=e=>{let t=e.storage_order,r=e.dilations,o=Ji(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(o.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return se({storageOrder:t,dilations:r,...o})},ss=e=>{let t=e.format;return{format:t,...ts,cacheKey:t}},us=(e,t)=>{Yr(e.inputs),e.compute(os("GlobalMaxPool",e.inputs[0],!0,t))}});var Xr=j(()=>{});var ds=j(()=>{Xr()});var cs,ps=j(()=>{cs="1.17.0"});var fs,Nn,ms=j(()=>{ps();fs="warning",Nn={wasm:{},webgl:{},webgpu:{},versions:{common:cs},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);fs=e}},get logLevel(){return fs}};Object.defineProperty(Nn,"logLevel",{enumerable:!0})});var hs,gs=j(()=>{ms();hs=Nn});var ys=j(()=>{});var bs=j(()=>{Jr()});var vs=j(()=>{});var $s=j(()=>{Jr()});var Jr=j(()=>{ys();bs();vs();$s()});var Zr=j(()=>{Jr()});var xs=j(()=>{Xr();Zr()});var Ss=j(()=>{xs()});var Cs=j(()=>{});var As=j(()=>{Xr();Zr()});var Is=j(()=>{As()});var Es=j(()=>{ds();gs();Ss();Zr();Cs();Is()});var Sd,Cd,Ts,Os=j(()=>{"use strict";Es();ke();ve();Sd=(e,t,r)=>{let o=e===t,n=e<t&&r<0,s=e>t&&r>0;if(o||n||s)throw new Error("Range these inputs\' contents are invalid.")},Cd=(e,t,r,o)=>{let n=Math.abs(Math.ceil((t-e)/r)),s=[n],u=n,d=X("output",o,s),a=d.type.storage,m=g=>`\n        ${g.declareVariables(d)}\n        ${g.mainStart()}\n        ${g.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n        output[global_idx] = ${a}(${e}) + ${a}(global_idx) * ${a}(${r});\n      }`;return{name:"Range",shaderCache:{hint:[e,t,r].map(g=>g.toString()).join("_")},getShaderSource:m,getRunData:()=>({outputs:[{dims:s,dataType:o}],dispatchGroup:{x:Math.ceil(u/64)}})}},Ts=e=>{let t=0,r=0,o=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],o=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],o=e.inputs[2].getFloat32Array()[0]),hs.webgpu.validateInputContent&&Sd(t,r,o),e.compute(Cd(t,r,o,e.inputs[0].dataType),{inputs:[]})}});var Ad,Id,Ed,Td,Od,_d,Rd,Pd,Md,Bd,kd,Dd,Wd,zd,Vd,_s,Rs,Ps=j(()=>{"use strict";ge();Re();ve();Ad=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for linear mode")}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Id=(e,t,r)=>{t.every(n=>n>=0&&n<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let o=new Array(r).fill(1);return t.forEach((n,s)=>o[n]=e[s]),o},Ed=(e,t,r,o,n,s)=>{let[u,d,a]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],m=e[0].dims.length;if(u>0&&e.length>u&&e[u].dims.length>0)e[u].getFloat32Array().forEach(g=>s.push(g));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(d>0&&e.length>d&&e[d].dims.length>0){if(e[d].getFloat32Array().forEach(g=>o.push(g)),o.length!==0&&o.length!==m&&r>=18&&o.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Ad(o,t),t.axes.length>0&&Id(o,t.axes,m).forEach((g,S)=>o[S]=g)}if(a>0&&e.length>a&&(e[a].getBigInt64Array().forEach(g=>n.push(Number(g))),n.length!==m||r>=18&&n.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(o.length!==t.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(n.length!==t.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(typeof o<"u"&&typeof n<"u"&&o.length>0&&n.length>m)throw new Error("Resize requires only of scales or sizes to be specified")},Td=e=>"fn getOriginalCoordinateFromResizedCoordinate(xResized: f32, xScale: f32, lengthResized: f32,    lengthOriginal: f32, roiStart: f32, roiEnd: f32) -> f32 { "+(()=>{switch(e){case"asymmetric":return"return xResized / xScale;";case"pytorch_half_pixel":return"if (lengthResized > 1) {                     return (xResized + 0.5) / xScale - 0.5;                   } else {                     return 0.0;                   }";case"tf_half_pixel_for_nn":return"return (xResized + 0.5) / xScale;";case"align_corners":return"if (lengthResized == 1) {                     return 0.0;                   } else {                     return xResized * (lengthOriginal - 1) / (lengthResized - 1);                   }";case"tf_crop_and_resize":return"if (lengthResized > 1) {                     return roiStart * (lengthOriginal - 1) +                           (xResized * (roiEnd - roiStart) * (lengthOriginal - 1)) / (lengthResized - 1);                   } else {                     return 0.5 * (roiStart + roiEnd) * f32(lengthOriginal - 1);                   }";case"half_pixel_symmetric":return["const outputWidth = xScale * lengthResized;","const adjustment = lengthResized / outputWidth;","const center = lengthOriginal / 2;","const offset = center * (1 - adjustment);","return offset + ((xResized + 0.5) / xScale) - 0.5;"].join(`\n`);case"half_pixel":return"return ((xResized + 0.5) / xScale) - 0.5;";default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Od=(e,t)=>"fn getNearestPixelFromOriginal(xOriginal: f32, isDownSample: bool) -> f32 {"+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",_d=(e,t,r)=>{let o=new Array(r).fill(0).concat(new Array(r).fill(1)),n=e.length===0?o:e.slice();return t.length>0?(t.forEach((s,u)=>{o[s]=n[u],o[u+r]=n[t.length+u]}),o):n},Rd=(e,t,r,o)=>{let n=[];if(r.length>0)if(o.length>0){if(e.forEach(s=>n.push(s)),Math.max(...o)>e.length)throw new Error("axes is out of bound");o.forEach((s,u)=>n[s]=r[u])}else r.forEach(s=>n.push(s));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");n=e.map((s,u)=>Math.round(s*t[u]))}return n},Pd=(e,t,r,o)=>{let n=(()=>{switch(o.keepAspectRatioPolicy){case"not_larger":return o.axes.length>0?Math.min(...o.axes.map(u=>r[u]),Number.MAX_VALUE):Math.min(...r,Number.MAX_VALUE);case"not_smaller":return o.axes.length>0?Math.max(...o.axes.map(u=>r[u]),Number.MIN_VALUE):Math.max(...r,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${o.keepAspectRatioPolicy} is not supported`)}})();r.fill(1,0,r.length);let s=e.slice();return o.axes.length>0?(o.axes.forEach(u=>r[u]=n),o.axes.forEach(u=>s[u]=Math.round(e[u]*r[u]))):(r.fill(n,0,r.length),s.forEach((u,d)=>s[d]=Math.round(u*r[d]))),s},Md=(e,t,r,o,n)=>`\n    fn calculateOriginalIndicesFromOutputIndices(outputIndices: ${e.type.indices}) -> array<f32, ${r.length}> {\n      const inputShape = array<u32, ${t.length}>(${t.map(s=>`${s}u`).join(",")});\n      const outputShape = array<u32, ${r.length}>(${r.map(s=>`${s}u`).join(",")});\n      const scales = array<f32, ${o.length}>(${o.map(s=>`${s}f`).join(",")});\n      const roi = array<f32, ${n.length}>(${n.map(s=>`${s}f`).join(",")});\n      var originalIndices: array<f32, ${r.length}>;\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var outputIndex = ${r.length===1?"outputIndices":"outputIndices[i]"};\n        if (scales[i] == 1.0) {\n          originalIndices[i] = f32(outputIndex);\n        } else {\n          originalIndices[i] = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],\n                f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${t.length}]);\n        }\n      }\n      return originalIndices;\n    }`,Bd=(e,t,r,o,n,s,u)=>`\n    fn calculateInputIndicesFromOutputIndices(outputIndices: ${t.type.indices}) -> ${e.type.indices} {\n        const inputShape = array<u32, ${r.length}>(${r.map(d=>`${d}u`).join(",")});\n        const outputShape = array<u32, ${o.length}>(${o.map(d=>`${d}u`).join(",")});\n        const scales = array<f32, ${n.length}>(${n.map(d=>`${d}f`).join(",")});\n        const roi = array<f32, ${s.length}>(${s.map(d=>`${d}f`).join(",")});\n        var inputIndices: ${e.type.indices};\n        for (var i:u32 = 0; i < ${o.length}; i++) {\n          var outputIndex = ${o.length===1?"outputIndices":"outputIndices[i]"};\n          var inputIndex: u32;\n          if (scales[i] == 1.0) {\n            inputIndex = outputIndex;\n          } else {\n            var original_idx = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],\n                    f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${r.length}]);\n            if (!${u} || (original_idx >= 0 && original_idx < f32(inputShape[i]))) {\n              if (original_idx < 0) {\n                inputIndex = 0;\n              } else if (original_idx > (f32(inputShape[i]) - 1)) {\n                inputIndex = inputShape[i] - 1;\n              } else {\n                inputIndex = u32(getNearestPixelFromOriginal(original_idx, scales[i] < 1));\n              }\n            } else {\n              inputIndex = u32(original_idx);\n            }\n          }\n          ${e.indicesSet("inputIndices","i","inputIndex")}\n        }\n        return inputIndices;\n    }`,kd=(e,t)=>`\n    fn checkInputIndices(inputIndices: ${e.type.indices}) -> bool {\n      const inputShape = array<u32, ${t.length}>(${t.map(r=>`${r}u`).join(",")});\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var inputIndex = ${t.length===1?"inputIndices":"inputIndices[i]"};\n        if (inputIndex < 0 || inputIndex >= inputShape[i]) {\n          return false;\n        }\n      }\n      return true;\n    }`,Dd=(e,t,r,o,n,s,u)=>{let[d,a,m,g]=r.length===2?[-1,0,1,-1]:n[1]===1?[0,2,3,1]:[0,1,2,3];return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> f32 {\n      var inputIndices: ${e.type.indices};\n      inputIndices[${a}] = max(0, min(row, ${r[a]} - 1));\n      inputIndices[${m}] = max(0, min(col, ${r[m]} - 1));\n      if (${r.length} > 2) {\n        inputIndices[${g}] = channel;\n        inputIndices[${d}] = batch;\n      };\n      return input[${e.indicesToOffset("inputIndices")}];\n    }\n\n    fn bilinearInterpolation(outputIndices: ${t.type.indices}) -> f32 {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(outputIndices);\n      var row:f32 = originalIndices[${a}];\n      var col:f32 = originalIndices[${m}];\n      if (${s} && (row < 0 || row > (${r[a]} - 1) || col < 0 || col > ${r[m]} - 1)) {\n        return ${u};\n      }\n      row = max(0, min(row, ${r[a]} - 1));\n      col = max(0, min(col, ${r[m]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = 0;\n      var batch: u32 = 0;\n      if (${r.length>2}) {\n        channel = u32(originalIndices[${g}]);\n        batch = u32(originalIndices[${d}]);\n      }\n      var x11: f32 = getInputValue(batch, channel, row1, col1);\n      var x12: f32 = getInputValue(batch, channel, row1, col2);\n      var x21: f32 = getInputValue(batch, channel, row2, col1);\n      var x22: f32 = getInputValue(batch, channel, row2, col2);\n      var dx1: f32 = row - f32(row1);\n      var dx2: f32 = f32(row2 ) - row;\n      var dy1 = col - f32(col1);\n      var dy2 = f32(col2) - col;\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},Wd=(e,t,r,o,n,s,u,d,a,m)=>{let[g,S]=r.length===2?[0,1]:n[1]===1?[2,3]:[1,2],b=w=>{let v=w===g?"row":"col";return`\n      fn ${v}CubicInterpolation(inputIndices: ${e.type.indices}, outputIndices: ${t.type.indices}) -> f32 {\n        var outputIndex = ${o.length===1?"outputIndices":`outputIndices[${w}]`};\n        var originalIdx: f32 = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), ${n[w]},\n        f32(${o[w]}), f32(${r[w]}), ${s[w]}, ${s[w]} + ${r.length});\n        var fractOriginalIdx: f32 = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${d} && (originalIdx < 0 || originalIdx > (${r[w]} - 1))) {\n          return ${a};\n        }\n        var data: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${v}: f32 = originalIdx + f32(i);\n          if (${v} < 0 || ${v} >= ${r[w]}) {\n            if (${m}) {\n              coefs[i + 1] = 0.0;\n              continue;\n            } else if (${d}) {\n              return ${a};\n            } else {\n              ${v} = max(0, min(${v}, ${r[w]} - 1));\n            }\n          }\n          var inputIndicesCopy: ${e.type.indices} = inputIndices;\n          inputIndicesCopy[${w}] = u32(${v});\n          data[i + 1] = ${w===g?`input[${e.indicesToOffset("inputIndicesCopy")}];`:`\n                                               rowCubicInterpolation(inputIndicesCopy, outputIndices);`}\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${b(g)};\n    ${b(S)};\n  fn getCubicInterpolationCoefs(s: f32) -> array<f32, 4> {\n    var absS = abs(s);\n    var coeffs: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: f32 = 1.0 - absS;\n    var twoMinusAbsS: f32 = 2.0 - absS;\n    var onePlusAbsS: f32 = 1.0 + absS;\n    coeffs[0] = ((${u} * onePlusAbsS - 5 * ${u}) * onePlusAbsS + 8 * ${u}) * onePlusAbsS - 4 * ${u};\n    coeffs[1] = ((${u} + 2) * absS - (${u} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${u} + 2) * oneMinusAbsS - (${u} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${u} * twoMinusAbsS - 5 * ${u}) * twoMinusAbsS + 8 * ${u}) * twoMinusAbsS - 4 * ${u};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<f32, 4>, coefs: array<f32, 4>) -> f32 {\n    var coefsSum: f32 = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(outputIndices: ${t.type.indices}) -> f32 {\n    var inputIndices: ${e.type.indices} = outputIndices;\n    return colCubicInterpolation(inputIndices, outputIndices);\n  }\n    `},zd=(e,t,r,o,n,s)=>{let u=e.dims,d=_d(s,t.axes,u.length),a=Rd(u,o,n,t.axes),m=o.slice();o.length===0&&(m=u.map((C,A)=>C===0?1:a[A]/C),t.keepAspectRatioPolicy!=="stretch"&&(a=Pd(u,a,m,t)));let g=X("output",e.dataType,a),S=L("input",e.dataType,u),b=k.size(a),w=u.length===a.length&&u.every((C,A)=>C===a[A]),v=t.coordinateTransformMode==="tf_crop_and_resize",y=C=>`\n      ${Td(t.coordinateTransformMode)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${kd(S,u)};\n              ${Od(t.nearestMode,r)};\n              ${Bd(S,g,u,a,m,d,v)};\n              `;case"linear":return`\n              ${Md(g,u,a,m,d)};\n              ${Dd(S,g,u,a,m,v,t.extrapolationValue)};\n              `;case"cubic":return`\n            ${Wd(S,g,u,a,m,d,t.cubicCoeffA,v,t.extrapolationValue,t.excludeOutside)};\n            `;default:throw Error("Invalid resize mode")}})()};\n      ${C.declareVariables(S,g)}\n      ${C.mainStart()}\n        ${C.guardAgainstOutOfBoundsWorkgroupSizes(b)}\n        if (${w}) {\n          output[global_idx] = input[global_idx];\n        } else {\n          let outputIndices = ${g.offsetToIndices("global_idx")};\n          var inputIndices: ${S.type.indices};\n          ${(()=>{switch(t.mode){case"nearest":return`inputIndices = calculateInputIndicesFromOutputIndices(outputIndices);\n                  if (checkInputIndices(inputIndices)) {\n                    output[global_idx] = input[${S.indicesToOffset("inputIndices")}];\n                  } else {\n                    output[global_idx] = ${t.extrapolationValue};\n                  }`;case"linear":return"output[global_idx] = bilinearInterpolation(outputIndices);";case"cubic":return"output[global_idx] = bicubicInterpolation(outputIndices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n        }\n      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${m.length>0?m:""}|${n.length>0?n:""}`},getShaderSource:y,getRunData:()=>({outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(b/64)}})}},Vd=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},_s=(e,t)=>{let r=[],o=[],n=[],s=Vd(e);Ed(e.inputs,t,s,r,o,n),e.compute(zd(e.inputs[0],t,s,r,o,n),{inputs:[0]})},Rs=e=>{let t=e.antialias,r=e.axes,o=e.coordinateTransformMode,n=e.cubicCoeffA,s=e.excludeOutside!==0,u=e.extrapolationValue,d=e.keepAspectRatioPolicy,a=e.mode,m=e.nearestMode===""?"simple":e.nearestMode;return se({antialias:t,axes:r,coordinateTransformMode:o,cubicCoeffA:n,excludeOutside:s,extrapolationValue:u,keepAspectRatioPolicy:d,mode:a,nearestMode:m})}});var Gd,Ud,Ms,Bs,ks=j(()=>{"use strict";ke();ge();Re();ve();Gd=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],o=e[2];if(t.dataType!==r.dataType||t.dataType!==o.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let n=t.dims[t.dims.length-1],s=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==n)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==s)throw new Error("Skip must have the same sequence length as input");if(o.dims.length!==1)throw new Error("Gamma must be 1D");if(o.dims[o.dims.length-1]!==n)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let u=e[3];if(u.dims.length!==1)throw new Error("Beta must be 1D");if(u.dims[u.dims.length-1]!==n)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let u=e[4];if(u.dims.length!==1)throw new Error("Bias must be 1D");if(u.dims[u.dims.length-1]!==n)throw new Error("Bias must have the same hidden size as input")}},Ud=(e,t,r,o)=>{let n=e[0].dims,s=k.size(n),u=n,d=s,a=n.slice(-1)[0],m=o?n.slice(0,-1).concat(1):[],g=e.length>3,S=e.length>4,b=o&&r>1,w=o&&r>2,v=r>3,y=ft(a),C=[L("x",e[0].dataType,e[0].dims,y),L("skip",e[1].dataType,e[1].dims,y),L("gamma",e[2].dataType,e[2].dims,y)];g&&C.push(L("beta",e[3].dataType,e[3].dims,y)),S&&C.push(L("bias",e[4].dataType,e[4].dims,y)),C.push(X("output",e[0].dataType,u,y)),b&&C.push(X("meanOutput",1,m)),w&&C.push(X("invStdOutput",1,m)),v&&C.push(X("inputSkipBiasSum",e[0].dataType,u,y));let A=Pe(e[0].dataType),R=M=>`\n      const hiddenSize: f32 = ${a};\n      const hiddenSizeVectorized: u32 = ${a/y};\n      const epsilon: f32 = ${t.epsilon};\n\n      ${M.declareVariables(...C)}\n\n      ${M.mainStart()}\n        ${M.guardAgainstOutOfBoundsWorkgroupSizes(d/a)}\n        let offset = global_idx * hiddenSizeVectorized;\n        var sum = ${Ye("f32",y)};\n        var squareSum = ${Ye("f32",y)};\n        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {\n          let skipValue = skip[offset + i];\n          let biasValue = ${S?"bias[i]":"0.0"};\n          let inputValue = x[offset + i];\n          let value = inputValue + skipValue + biasValue;\n          ${v?"inputSkipBiasSum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32Value = ${Ot(A,y,"value")};\n          sum += f32Value;\n          squareSum += f32Value * f32Value;\n        }\n        let mean = ${bt("sum",y)} / hiddenSize;\n        let variance = sqrt(${bt("squareSum",y)} / hiddenSize - mean * mean + epsilon);\n        ${b?"meanOutput[global_idx] = mean;":""}\n        ${w?"invStdOutput[global_idx] = 1.0 / variance;":""}\n        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {\n          output[offset + i] = (output[offset + i] - ${A}(mean)) / ${A}(variance) * gamma[i]\n           + ${g?"beta[i]":"0.0"};\n        }\n      }`,W=[{dims:u,dataType:e[0].dataType}];return r>1&&W.push({dims:m,dataType:1}),r>2&&W.push({dims:m,dataType:1}),r>3&&W.push({dims:n,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:t.cacheKey},getShaderSource:R,getRunData:()=>({outputs:W,dispatchGroup:{x:Math.ceil(d/a/64)}})}},Ms=(e,t)=>{Gd(e.inputs);let o=[0];e.outputCount>1&&o.push(-3),e.outputCount>2&&o.push(-3),e.outputCount>3&&o.push(3),e.compute(Ud(e.inputs,t,e.outputCount,!1),{outputs:o})},Bs=e=>{let t=e.epsilon;return se({epsilon:t})}});var Nd,Qr,Ld,Ds,Fd,Hd,Ws,zs,Vs=j(()=>{"use strict";ke();ge();Re();ve();Nd=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,o)=>{if(e[o+1].dataType!==6&&e[o+1].dataType!==7)throw new Error(`Input ${o} must be an array of int32 or int64`)})},Qr=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(o=>r.push(Number(o)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(o=>r.push(Number(o)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},Ld=(e,t)=>{if(e.length>1){let r=Qr(e,1),o=Qr(e,2),n=Qr(e,3);return n.length===0&&(n=[...Array(e[0].dims.length).keys()]),se({starts:r,ends:o,axes:n})}else return t},Ds=(e,t,r,o,n)=>{let s=e;return e<0&&(s+=r[o[t]]),n[t]<0?Math.max(0,Math.min(s,r[o[t]]-1)):Math.max(0,Math.min(s,r[o[t]]))},Fd=(e,t,r,o)=>`fn calculateInputIndices(outputIndices: ${t.type.indices}) -> ${e.type.indices} {\n          var inputIndices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${r.length}; i >= 0; i--) {\n            var outputIndex = ${o.length===1?"outputIndices":"outputIndices[i]"};\n            var inputIndex = outputIndex * steps[i] + starts[i] + carry;\n            carry = inputIndex / inputShape[i];\n            inputIndex = inputIndex % inputShape[i];\n            if (signs[i] < 0) {\n              inputIndex = inputShape[i] - inputIndex - 1u + starts[i];\n            }\n            ${r.length===1?"inputIndices":"inputIndices[i]"} = inputIndex;\n          }\n          return inputIndices;\n      }`,Hd=(e,t)=>{let r=e[0].dims,o=k.size(r),n=t.axes.length>0?k.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],s=Qr(e,4);s.forEach(y=>y!==0||(()=>{throw new Error("step cannot be 0")})),s.length===0&&(s=Array(n.length).fill(1));let u=t.starts.map((y,C)=>Ds(y,C,r,n,s)),d=t.ends.map((y,C)=>Ds(y,C,r,n,s));if(n.length!==r.length)for(let y=0;y<r.length;++y)n.includes(y)||(u.splice(y,0,0),d.splice(y,0,r[y]),s.splice(y,0,1));let a=s.map(y=>Math.sign(y));s.forEach((y,C,A)=>{if(y<0){let R=(d[C]-u[C])/y,W=u[C],M=W+R*s[C];u[C]=M,d[C]=W,A[C]=-y}});let m=r.slice(0);n.forEach((y,C)=>{m[y]=Math.ceil((d[y]-u[y])/s[y])});let g={dims:m,dataType:e[0].dataType},S=X("output",e[0].dataType,m),b=L("input",e[0].dataType,r),w=k.size(m),v=y=>`\n      ${y.declareVariables(b,S)}\n        const signs = array<i32, ${a.length}>(${a.map(C=>`${C}i`).join(",")});\n        const starts = array<u32, ${u.length}>(${u.map(C=>`${C}u`).join(",")});\n        const ends = array<u32, ${d.length}>(${d.map(C=>`${C}u`).join(",")});\n        const steps = array<u32, ${s.length}>(${s.map(C=>`${C}u`).join(",")});\n        const inputShape = array<u32, ${r.length}>(${r.map(C=>`${C}u`).join(",")});\n\n        ${Fd(b,S,r,m)}\n        ${y.mainStart()}\n          ${y.guardAgainstOutOfBoundsWorkgroupSizes(w)}\n          let outputIndices = ${S.offsetToIndices("global_idx")};\n          let inputIndices = calculateInputIndices(outputIndices);\n          ${S.setByOffset("global_idx",b.getByIndices("inputIndices"))}\n      }`;return{name:"Slice",shaderCache:{hint:`${t.cacheKey}|${e[4]?.dims??""}`},getShaderSource:v,getRunData:()=>({outputs:[g],dispatchGroup:{x:Math.ceil(o/64)}})}},Ws=(e,t)=>{Nd(e.inputs,t);let r=Ld(e.inputs,t);e.compute(Hd(e.inputs,r),{inputs:[0]})},zs=e=>{let t=e.starts,r=e.ends,o=e.axes;return se({starts:t,ends:r,axes:o})}});var jd,Kd,Gs,Us,Ns=j(()=>{"use strict";ge();Re();ve();jd=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},Kd=(e,t)=>{let r=Pe(e.dataType),o=e.dims,n=k.size(o),s=64,u=t.axis;if(u<0&&(u=o.length+u),u<o.length-1)throw new Error("softmax only supports last axis for now.");let d=o[u],a=n/d,m=ft(d),g=d/m,S=m===1?r:`vec${m}<${r}>`,b=(y,C)=>C===4?`max(max(${y}.x, ${y}.y), max(${y}.z, ${y}.w))`:C===2?`max(${y}.x, ${y}.y)`:C===3?`max(max(${y}.x, ${y}.y), ${y}.z)`:y,w=r==="f32"?`var threadMax = ${S}(-3.402823e+38f);`:`var threadMax = ${S}(-65504.0h);`;return{name:"Softmax",getRunData:()=>({outputs:[{dims:o,dataType:e.dataType}],dispatchGroup:{x:a}}),getShaderSource:y=>`\n      var<workgroup> rowMaxShared : ${S};\n      var<workgroup> rowSumShared : ${S};\n      var<workgroup> threadShared : array<${S}, ${s}>;\n\n      @group(0) @binding(0) var<storage, read> x : array<${S}>;\n      @group(0) @binding(1) var<storage, read_write> result : array<${S}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${S} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${S}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n\n      @compute @workgroup_size(${s}, 1, 1)\n      fn main(@builtin(local_invocation_id) local_id : vec3<u32>, @builtin(global_invocation_id) global_id : vec3u) {\n        let gindex = i32(global_id.x);\n        let lindex = i32(local_id.x);\n        const wg = ${s};\n        let row = gindex / wg;\n        let cols = ${g};\n        let row_stride : i32 = ${g};\n\n        // find the rows max\n        ${w}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${S}(${b("threadShared[0]",m)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${S}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${S}(${bt("threadShared[0]",m)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`}},Gs=(e,t)=>{jd(e.inputs),e.compute(Kd(e.inputs[0],t))},Us=e=>se({axis:e.axis})});var qd,Yd,Xd,Jd,Zd,Ls,Fs,Hs=j(()=>{"use strict";ge();Re();ve();qd=e=>{if(!e||e.length<1)throw new Error("too few inputs")},Yd=(e,t)=>{let r=[],o=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(n=>r.push(Number(n))),o=r.length),se({numOutputs:o,axis:t.axis,splitSizes:r})},Xd=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < sizeInConcatAxis[i]) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,Jd=e=>{let t=e.length,r=[];for(let o=0;o<t;++o){let n=e[o].setByIndices("indices","input[global_idx]");t===1?r.push(n):o===0?r.push(`if (outputNumber == ${o}u) { ${n} }`):o===t-1?r.push(`else { ${n} }`):r.push(`else if (outputNumber == ${o}) { ${n} }`)}return`\n      fn writeBufferData(outputNumber: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${r.join(`\n`)}\n      }`},Zd=(e,t)=>{let r=e[0].dims,o=k.size(r),n=e[0].dataType,s=r.length,u=t.axis,d=u<0?r.length+u:u,a=new Array(t.numOutputs),m=L("input",n,r),g=new Array(t.numOutputs),S=[],b=[],w=0;for(let C=0;C<t.numOutputs;C++){w+=t.splitSizes[C],g[C]=w;let A=r.slice();A[t.axis]=t.splitSizes[C],b.push(A),a[C]=X(`output${C}`,n,b[C]),S.push({dims:b[C],dataType:e[0].dataType})}let v=s<2?"indices":`indices[${d}]`,y=C=>`\n  ${C.declareVariables(m,...a)}\n  const sizeInConcatAxis = array<u32, ${g.length}>(${g.map(A=>`${A}u`).join(",")});\n  ${Xd(g.length)}\n  ${Jd(a)}\n\n  ${C.mainStart()}\n    ${C.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n\n    var indices = ${m.offsetToIndices("global_idx")};\n    let outputNumber = calculateOutputIndex(${v});\n    if (outputNumber != 0) {\n        ${v} -= sizeInConcatAxis[outputNumber - 1u];\n    }\n    writeBufferData(outputNumber, indices, global_idx);\n  }`;return{name:"Split",shaderCache:{hint:t.cacheKey},getShaderSource:y,getRunData:()=>({outputs:S,dispatchGroup:{x:Math.ceil(o/64)}})}},Ls=(e,t)=>{qd(e.inputs);let r=e.inputs.length===1?t:Yd(e.inputs,t);e.compute(Zd(e.inputs,r),{inputs:[0]})},Fs=e=>{let t=e.axis,r=e.splitSizes,o=e.numOutputs<0?r.length:e.numOutputs;if(o!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return se({axis:t,numOutputs:o,splitSizes:r})}});var js,Qd,ec,tc,Ks,qs=j(()=>{"use strict";ke();ge();ve();js=e=>Array.from(e.getBigInt64Array(),Number),Qd=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(js(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},ec=(e,t)=>{let r=[];for(let o=0;o<e.length;++o)r.push(e[o]*t[o]);return r},tc=e=>{let t=e[0].dims,r=js(e[1]),o=ec(t,r),n=k.size(o),s=e[0].dataType,u=L("input",s,t),d=X("output",s,o),a=m=>`\n      const inputShape = ${u.indices(...t)};\n      ${m.declareVariables(u,d)}\n      ${m.mainStart()}\n      ${m.guardAgainstOutOfBoundsWorkgroupSizes(n)}\n      let outputIndices = ${d.offsetToIndices("global_idx")};\n      var inputIndices: ${u.type.indices};\n      for (var i = 0; i < ${t.length}; i++) {\n        let inputDimValue = ${d.indicesGet("outputIndices","i")}  % ${u.indicesGet("inputShape","i")};\n\n        ${u.indicesSet("inputIndices","i","inputDimValue")}\n      }\n      ${d.setByOffset("global_idx",u.getByIndices("inputIndices"))}\n    }`;return{name:"Tile",shaderCache:{hint:`${r}`},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:a}},Ks=e=>{Qd(e.inputs),e.compute(tc(e.inputs),{inputs:[0]})}});var rc,nc,Ys,Xs=j(()=>{"use strict";ke();ge();ve();rc=(e,t,r,o,n)=>{let s=k.size(r),u=Math.ceil(s/4),d=X("outputData",n,r,4),a=L("aData",t[1].dataType,t[1].dims,4),m=L("bData",t[2].dataType,t[2].dims,4),g=L("cData",t[0].dataType,t[0].dims,4),S,b=(w,v,y)=>`select(${v}, ${w}, ${y})`;if(!o)S=d.setByOffset("global_idx",b(a.getByOffset("global_idx"),m.getByOffset("global_idx"),g.getByOffset("global_idx")));else{let w=(v,y,C="")=>{let A=`aData[indexA${y}][componentA${y}]`,R=`bData[indexB${y}][componentB${y}]`,W=`bool(cData[indexC${y}] & ${4278190080>>>(3-y)*8}u)`;return`\n            let outputIndices${y} = ${d.offsetToIndices(`global_idx * 4u + ${y}u`)};\n            let offsetA${y} = ${a.broadcastedIndicesToOffset(`outputIndices${y}`,d)};\n            let offsetB${y} = ${m.broadcastedIndicesToOffset(`outputIndices${y}`,d)};\n            let offsetC${y} = ${g.broadcastedIndicesToOffset(`outputIndices${y}`,d)};\n            let indexA${y} = offsetA${y} / 4u;\n            let indexB${y} = offsetB${y} / 4u;\n            let indexC${y} = offsetC${y} / 4u;\n            let componentA${y} = offsetA${y} % 4u;\n            let componentB${y} = offsetB${y} % 4u;\n            ${v}[${y}] = ${C}(${b(A,R,W)});\n          `};n===9?S=`\n            var data = vec4<u32>(0);\n            ${w("data",0,"u32")}\n            ${w("data",1,"u32")}\n            ${w("data",2,"u32")}\n            ${w("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:S=`\n            ${w("outputData[global_idx]",0)}\n            ${w("outputData[global_idx]",1)}\n            ${w("outputData[global_idx]",2)}\n            ${w("outputData[global_idx]",3)}\n          `}return`\n        ${e.declareVariables(g,a,m,d)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n        ${S}\n      }`},nc=e=>{let t=e[1].dims,r=e[2].dims,o=e[0].dims,n=e[1].dataType,s=!(k.areEqual(t,r)&&k.areEqual(r,o)),u=t,d=k.size(t);if(s){let a=et.calcShape(et.calcShape(t,r,!1),o,!1);if(!a)throw new Error("Can\'t perform where op on the given tensors");u=a,d=k.size(u)}return{name:"Where",getShaderSource:a=>rc(a,e,u,s,n),getRunData:()=>({outputs:[{dims:u,dataType:n}],dispatchGroup:{x:Math.ceil(d/64/4)}})}},Ys=e=>{e.compute(nc(e.inputs))}});var Js,Zs=j(()=>{"use strict";fa();ha();qa();ai();ui();kn();$i();Ai();Ti();Ri();Bi();Wi();Gi();Li();Hi();qi();ls();Os();Wr();Ps();ks();Vs();Ns();Hs();qs();dr();Rn();Xs();Js=new Map([["Abs",[ga]],["Acos",[ya]],["Acosh",[ba]],["Add",[Ya]],["ArgMax",[pa,On]],["ArgMin",[ca,On]],["Asin",[wa]],["Asinh",[va]],["Atan",[$a]],["Atanh",[xa]],["AveragePool",[es,Qi]],["BiasAdd",[ma]],["BiasSplitGelu",[Ka]],["Cast",[Ca,Sa]],["Ceil",[Ia]],["ClipV10",[_n]],["Clip",[Aa]],["Concat",[ii,si]],["Conv",[Wn,Dn]],["ConvTranspose",[vi,wi]],["Cos",[Ea]],["Cosh",[Ta]],["Div",[Xa]],["Einsum",[Si,Ci]],["Elu",[Oa,Vr]],["Equal",[Ja]],["Erf",[_a]],["Exp",[Ra]],["Expand",[Ei]],["Floor",[Pa]],["FusedConv",[Wn,Dn]],["Gather",[_i,Oi]],["GatherElements",[Mi,Pi]],["Gelu",[Ma]],["Gemm",[ki,Di]],["GlobalAveragePool",[ns,rs]],["GlobalMaxPool",[us,ss]],["Greater",[ti]],["GreaterOrEqual",[ni]],["InstanceNormalization",[Vi,zi]],["LayerNormalization",[Ni,Ui]],["LeakyRelu",[Ba,Vr]],["Less",[ri]],["LessOrEqual",[oi]],["Log",[ja]],["MatMul",[Fi]],["MaxPool",[as,is]],["Mul",[Za]],["Neg",[Da]],["Not",[ka]],["Pad",[ji,Ki]],["Pow",[Qa]],["Range",[Ts]],["Reciprocal",[Wa]],["ReduceMin",[oa,Xe]],["ReduceMean",[Qo,Xe]],["ReduceMax",[na,Xe]],["ReduceSum",[ia,Xe]],["ReduceProd",[aa,Xe]],["ReduceL1",[ea,Xe]],["ReduceL2",[ta,Xe]],["ReduceLogSum",[ua,Xe]],["ReduceLogSumExp",[ra,Xe]],["ReduceSumSquare",[sa,Xe]],["Relu",[za]],["Resize",[_s,Rs]],["Sigmoid",[Va]],["Sin",[Ga]],["Sinh",[Ua]],["Slice",[Ws,zs]],["SkipLayerNormalization",[Ms,Bs]],["Split",[Ls,Fs]],["Sqrt",[Na]],["Softmax",[Gs,Us]],["Sub",[ei]],["Tan",[La]],["Tanh",[Fa]],["ThresholdedRelu",[Ha,Vr]],["Tile",[Ks]],["Transpose",[Go,Uo]],["Where",[Ys]]])});var en,Qs=j(()=>{"use strict";ke();yt();ve();en=class{constructor(t){this.backend=t;this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,o,n,s,u,d){let a=this.backend.device,m=this.backend.getComputePassEncoder();m.setPipeline(t.computePipeline);let g=[];for(let b of n)g.push({binding:g.length,resource:{buffer:b.buffer}});for(let b of s)g.push({binding:g.length,resource:{buffer:b.buffer}});d&&g.push({binding:g.length,resource:d});let S=a.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:g,label:t.programInfo.name});if(m.setBindGroup(0,S),m.dispatchWorkgroups(...u),this.backend.pendingDispatchNumber++,this.backend.isQueryEnabled()){typeof this.backend.queryData>"u"&&(this.backend.queryData=this.backend.gpuDataManager.create(this.backend.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE));let b=this.backend.gpuDataManager.create(this.backend.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.backend.endComputePass(),this.backend.getCommandEncoder().resolveQuerySet(this.backend.querySet,0,2,this.backend.queryData.buffer,0),this.backend.getCommandEncoder().copyBufferToBuffer(this.backend.queryData.buffer,0,b.buffer,0,this.backend.querySetCount*8),this.backend.flush();let w=this.backend.currentKernelId,v=this.backend.kernels.get(w),y=`[${v[0]}] ${v[1]}`;b.buffer.mapAsync(GPUMapMode.READ).then(()=>{let C=new BigUint64Array(b.buffer.getMappedRange()),A=C[0],R=C[1];b.buffer.unmap(),typeof this.backend.queryTimeBase>"u"&&(this.backend.queryTimeBase=A);let W=Number(A-this.backend.queryTimeBase),M=Number(R-this.backend.queryTimeBase);if(!Number.isSafeInteger(W)||!Number.isSafeInteger(M))throw new RangeError("incorrect timestamp range");this.backend.gpuDataManager.release(b.id);let D="";r.forEach((z,F)=>{D+=`input[${F}]: [${z.dims}] | ${sr(z.dataType)}, `});let _="";o.forEach((z,F)=>{_+=`output[${F}]: [${z.dims}] | ${sr(z.dataType)}, `}),console.log(`[profiling] kernel "${w}|${y}" ${D}${_}execution time: ${M-W} ns`)})}this.backend.pendingDispatchNumber>=16&&this.backend.flush()}dispose(){}build(t,r){let o=this.backend.device,n=[];o.features.has("shader-f16")&&n.push("enable f16;");let s=Wo(r),u=t.getShaderSource(s),d=`${n.join(`\n`)}\n${s.additionalImplementations}\n${u}`,a=o.createShaderModule({code:d,label:t.name});Ie("verbose",()=>`[WebGPU] shader code: ${d}`);let m=o.createComputePipeline({compute:{module:a,entryPoint:"main"},layout:"auto",label:t.name});return{programInfo:t,computePipeline:m}}normalizeDispatchGroupSize(t){let r=typeof t=="number"?t:t.x,o=typeof t=="number"?1:t.y||1,n=typeof t=="number"?1:t.z||1,s=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=s&&o<=s&&n<=s)return[r,o,n];let u=r*o*n,d=Math.ceil(Math.sqrt(u));if(d>s){if(d=Math.ceil(Math.cbrt(u)),d>s)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[d,d,d]}else return[d,d,1]}}});var oc,ac,tn,eu=j(()=>{"use strict";yt();_o();Bo();Zs();Qs();oc=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let o=0;o<e.length;++o){let n=e[o].dataType;switch(t[o]){case"none":{r.push("");break}case"type":{r.push(`${n}`);break}case"rank":{let s=e[o].dims.length;r.push(`${n};${s}`);break}case"dims":{let s=e[o].dims.join(",");r.push(`${n};${s}`);break}default:throw new Error(`unsupported input dependency: ${t[o]}`)}}return r.join("|")},ac=(e,t)=>{let r=e.name;return e.shaderCache?.hint&&(r+="["+e.shaderCache.hint+"]"),r+=`:${oc(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,r},tn=class{constructor(){this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.pendingDispatchNumber=0;this.querySetCount=2;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t){if(!navigator.gpu)throw new Error("WebGpuBackend: WebGPU is not available.");let r=await navigator.gpu.requestAdapter();if(!r)throw new Error("WebGpuBackend: Failed to get GPU adapter.");this.env=t;let o=[],n={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:o};r.features.has("timestamp-query")&&o.push("timestamp-query"),r.features.has("shader-f16")&&o.push("shader-f16"),this.device=await r.requestDevice(n),this.gpuDataManager=Mo(this),this.programManager=new en(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,To(t.logLevel,!!t.debug),this.device.onuncapturederror=s=>{s.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${s.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device})}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t={};this.isQueryEnabled()&&(typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1}),this.computePassEncoder=this.getCommandEncoder().beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){this.commandEncoder&&(this.endComputePass(),this.device.queue.submit([this.getCommandEncoder().finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0)}isQueryEnabled(){return!!(this.device.features.has("timestamp-query")&&this.env.webgpu.profilingMode==="default")}run(t,r,o,n,s){let u=[];for(let A=0;A<r.length;++A){let R=this.gpuDataManager.get(r[A].data);if(!R)throw new Error(`no GPU data for input: ${r[A].data}`);u[A]=R}let d=ac(t,r),a=this.programManager.getArtifact(d),{outputs:m,dispatchGroup:g,programUniforms:S}=t.getRunData(r),b=o.length===0?m.map((A,R)=>R):o;if(b.length!==m.length)throw new Error(`Output size ${b.length} must be equal to ${m.length}.`);let w=[],v=[];for(let A=0;A<m.length;++A){if(!Number.isInteger(b[A])||b[A]<-3||b[A]>=m.length)throw new Error(`Invalid output index: ${b[A]}`);if(b[A]===-3)continue;let R=b[A]===-1,W=b[A]===-2,M=R||W?s(m[A].dataType,m[A].dims):n(b[A],m[A].dataType,m[A].dims),D=this.gpuDataManager.get(M.data);if(!D)throw new Error(`no GPU data for output: ${M.data}`);if(R&&this.temporaryData.push(D),W){let _=this.kernelPersistentData.get(this.currentKernelId);_||(_=[],this.kernelPersistentData.set(this.currentKernelId,_)),_.push(D)}w.push(M),v.push(D)}let y;if(S){let A=0,R=0,W=[],M=1;S.forEach(z=>{let F=typeof z.data=="number"?[z.data]:z.data,q;switch(F.length){case 1:q=4;break;case 2:q=8;break;case 3:q=16;break;case 4:q=16;break;case 5:q=16;break;case 6:q=16;break;default:throw new Error(`unsupported data length: ${F.length}`)}(R===5||R===6)&&(q=16),q>M&&(M=q),A=Math.ceil(A/q)*q,R=F.length,W.push(A),A+=F.length*4}),A=Math.ceil(A/M)*M;let D=new ArrayBuffer(A);S.forEach((z,F)=>{let q=W[F],le=typeof z.data=="number"?[z.data]:z.data;z.type==="int32"?new Int32Array(D,q,le.length).set(le):z.type==="uint32"?new Uint32Array(D,q,le.length).set(le):new Float32Array(D,q,le.length).set(le)});let _=this.gpuDataManager.create(A,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(_.buffer,0,D,0,A),this.gpuDataManager.release(_.id),y={offset:0,size:A,buffer:_.buffer}}let C=this.programManager.normalizeDispatchGroupSize(g);return a||(a=this.programManager.build(t,C),this.programManager.setArtifact(d,a)),Ie("info",()=>`[ProgramManager] run "${t.name}" (key=${d}) with ${C[0]}x${C[1]}x${C[2]}`),this.programManager.run(a,r,w,u,v,C,y),w}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,o,n){let s=Js.get(t);if(!s)throw new Error(`kernel not implemented: ${t}`);this.kernels.set(r,[t,n,s[0],[s[1],o]])}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let o of r)this.gpuDataManager.release(o.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,o){let n=this.kernels.get(t);if(!n)throw new Error(`kernel not created: ${t}`);let[s,u,d,a]=n;if(this.currentKernelId!==null)throw new Error(`kernel "[${s}] ${u}" is not allowed to be called recursively`);this.currentKernelId=t,a[0]&&(a[1]=a[0](a[1]),a[0]=void 0),Ie("info",()=>`[WebGPU] Start to run kernel "[${s}] ${u}"...`);let m=this.env.debug;this.temporaryData=[];try{return m&&this.device.pushErrorScope("validation"),d(r,a[1]),0}catch(g){return o.push(Promise.resolve(`[WebGPU] Kernel "[${s}] ${u}" failed. ${g}`)),1}finally{m&&o.push(this.device.popErrorScope().then(g=>g?`GPU validation error for kernel "[${s}] ${u}": ${g.message}`:null));for(let g of this.temporaryData)this.gpuDataManager.release(g.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,o,n){let s=this.sessionExternalDataMapping.get(t);s||(s=new Map,this.sessionExternalDataMapping.set(t,s));let u=s.get(r),d=this.gpuDataManager.registerExternalBuffer(o,n,u?.[1]);return s.set(r,[d,o]),d}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(o=>this.gpuDataManager.unregisterExternalBuffer(o[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw new Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,o){return async()=>{let n=await xn(this,t,r);return Oo(n.buffer,o)}}}});var tu={};_r(tu,{init:()=>ic});var hr,Ln,ic,ru=j(()=>{"use strict";ke();eu();yt();ge();hr=class e{constructor(t,r,o,n){this.module=t;this.dataType=r;this.data=o;this.dims=n}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=k.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=k.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=k.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(k.size(t)!==k.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},Ln=class{constructor(t,r,o){this.module=t;this.backend=r;this.customDataOffset=0;this.customDataSize=0;let n=t.HEAPU32,s=o>>2;this.opKernelContext=n[s++];let u=n[s++];this.outputCount=n[s++],this.customDataOffset=n[s++],this.customDataSize=n[s++];let d=[];for(let a=0;a<u;a++){let m=n[s++],g=n[s++],S=n[s++],b=[];for(let w=0;w<S;w++)b.push(n[s++]);d.push(new hr(t,m,g,b))}this.inputs=d}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(t,r){let o=r?.inputs?.map(d=>typeof d=="number"?this.inputs[d]:d)??this.inputs,n=r?.outputs??[],s=(d,a,m)=>new hr(this.module,a,this.output(d,m),m),u=(d,a)=>{let m=ur(d);if(!m)throw new Error(`Unsupported data type: ${d}`);let g=m*k.size(a);return new hr(this.module,d,this.backend.gpuDataManager.create(g).id,a)};return this.backend.run(t,o,n,s,u)}output(t,r){let o=this.module.stackSave();try{let n=this.module.stackAlloc((1+r.length)*4),s=n>>2;this.module.HEAPU32[s++]=r.length;for(let u=0;u<r.length;u++)this.module.HEAPU32[s++]=r[u];return this.module._JsepOutput(this.opKernelContext,t,n)}catch(n){throw new Error(`Failed to generate kernel\'s output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(o)}}},ic=async(e,t)=>{let r=e.jsepInit;if(r&&navigator.gpu){if(!t.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using WebGPU EP");let o=new tn;await o.initialize(t),r(o,n=>o.alloc(n),n=>o.free(n),(n,s,u,d=!1)=>{if(d)Ie("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${n}, dst=${s}, size=${u}`),o.memcpy(n,s);else{Ie("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${n}, gpuDataId=${s}, size=${u}`);let a=e.HEAPU8.subarray(n,n+u);o.upload(s,a)}},async(n,s,u)=>{Ie("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${n}, dataOffset=${s}, size=${u}`),await o.download(n,()=>e.HEAPU8.subarray(s,s+u))},(n,s,u)=>o.createKernel(n,s,u,t.debug||t.webgpu.profilingMode==="default"?e.UTF8ToString(e._JsepGetNodeName(s)):`${s}`),n=>o.releaseKernel(n),(n,s,u,d)=>{Ie("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${u}, kernel=${n}, contextDataOffset=${s}`);let a=new Ln(e,o,s);return o.computeKernel(n,a,d)})}}});var $o;$o=co();var Ru=bo(),yn,bn=!1,Rr=!1,vo=!1,Pu=()=>{try{return typeof SharedArrayBuffer>"u"?!1:(typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch{return!1}},Mu=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Bu=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",xo=async e=>{if(bn)return Promise.resolve();if(Rr)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(vo)throw new Error("previous call to \'initializeWebAssembly()\' failed.");Rr=!0;let t=e.initTimeout,r=e.numThreads,o=e.simd,n=r>1&&Pu(),s=o&&Mu(),u=e.wasmPaths,d=typeof u=="string"?u:void 0,a=Bu(s,n),m=typeof u=="object"?u[a]:void 0,g=!1,S=[];if(t>0&&S.push(new Promise(b=>{setTimeout(()=>{g=!0,b()},t)})),S.push(new Promise((b,w)=>{let v=n?Ru:$o,y={locateFile:(C,A)=>{if(n&&C.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([wo()],{type:"text/javascript"}));if(C.endsWith(".wasm")){if(m)return m;let R=d??A;return a==="ort-wasm-simd.wasm"?R+"ort-wasm-simd.jsep.wasm":a==="ort-wasm-simd-threaded.wasm"?R+"ort-wasm-simd-threaded.jsep.wasm":R+a}return A+C}};if(n)if(typeof Blob>"u")y.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let C=`var ortWasmThreaded=${v.toString()};`;y.mainScriptUrlOrBlob=new Blob([C],{type:"text/javascript"})}v(y).then(C=>{Rr=!1,bn=!0,yn=C,b()},C=>{Rr=!1,vo=!0,w(C)})})),await Promise.race(S),g)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},_e=()=>{if(bn&&yn)return yn;throw new Error("WebAssembly is not initialized yet.")};var Be=(e,t)=>{let r=_e(),o=r.lengthBytesUTF8(e)+1,n=r._malloc(o);return r.stringToUTF8(e,n,o),t.push(n),n},ir=(e,t,r,o)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([n,s])=>{let u=t?t+n:n;if(typeof s=="object")ir(s,u+".",r,o);else if(typeof s=="string"||typeof s=="number")o(u,s.toString());else if(typeof s=="boolean")o(u,s?"1":"0");else throw new Error(`Can\'t handle extra config type: ${typeof s}`)})},Ce=e=>{let t=_e(),r=t.stackSave();try{let o=t.stackAlloc(8);t._OrtGetLastError(o,o+4);let n=t.HEAP32[o/4],s=t.HEAPU32[o/4+1],u=s?t.UTF8ToString(s):"";throw new Error(`${e} ERROR_CODE: ${n}, ERROR_MESSAGE: ${u}`)}finally{t.stackRestore(r)}};var So=e=>{let t=_e(),r=0,o=[],n=e||{};try{if(e?.logSeverityLevel===void 0)n.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)n.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(n.terminate=!1);let s=0;return e?.tag!==void 0&&(s=Be(e.tag,o)),r=t._OrtCreateRunOptions(n.logSeverityLevel,n.logVerbosityLevel,!!n.terminate,s),r===0&&Ce("Can\'t create run options."),e?.extra!==void 0&&ir(e.extra,"",new WeakSet,(u,d)=>{let a=Be(u,o),m=Be(d,o);t._OrtAddRunConfigEntry(r,a,m)!==0&&Ce(`Can\'t set a run config entry: ${u} - ${d}.`)}),[r,o]}catch(s){throw r!==0&&t._OrtReleaseRunOptions(r),o.forEach(u=>t._free(u)),s}};var ku=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Du=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Wu=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},zu=(e,t,r)=>{for(let o of t){let n=typeof o=="string"?o:o.name;switch(n){case"xnnpack":n="XNNPACK";break;case"webnn":if(n="WEBNN",typeof o!="string"){let u=o;if(u?.deviceType){let d=Be("deviceType",r),a=Be(u.deviceType,r);_e()._OrtAddSessionConfigEntry(e,d,a)!==0&&Ce(`Can\'t set a session config entry: \'deviceType\' - ${u.deviceType}.`)}if(u?.powerPreference){let d=Be("powerPreference",r),a=Be(u.powerPreference,r);_e()._OrtAddSessionConfigEntry(e,d,a)!==0&&Ce(`Can\'t set a session config entry: \'powerPreference\' - ${u.powerPreference}.`)}}break;case"webgpu":if(n="JS",typeof o!="string"){let u=o;if(u?.preferredLayout){if(u.preferredLayout!=="NCHW"&&u.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either \'NCHW\' or \'NHWC\': ${u.preferredLayout}`);let d=Be("preferredLayout",r),a=Be(u.preferredLayout,r);_e()._OrtAddSessionConfigEntry(e,d,a)!==0&&Ce(`Can\'t set a session config entry: \'preferredLayout\' - ${u.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${n}`)}let s=Be(n,r);_e()._OrtAppendExecutionProvider(e,s)!==0&&Ce(`Can\'t append execution provider: ${n}.`)}},Co=e=>{let t=_e(),r=0,o=[],n=e||{};Wu(n);try{let s=ku(n.graphOptimizationLevel??"all"),u=Du(n.executionMode??"sequential"),d=typeof n.logId=="string"?Be(n.logId,o):0,a=n.logSeverityLevel??2;if(!Number.isInteger(a)||a<0||a>4)throw new Error(`log serverity level is not valid: ${a}`);let m=n.logVerbosityLevel??0;if(!Number.isInteger(m)||m<0||m>4)throw new Error(`log verbosity level is not valid: ${m}`);let g=typeof n.optimizedModelFilePath=="string"?Be(n.optimizedModelFilePath,o):0;if(r=t._OrtCreateSessionOptions(s,!!n.enableCpuMemArena,!!n.enableMemPattern,u,!!n.enableProfiling,0,d,a,m,g),r===0&&Ce("Can\'t create session options."),n.executionProviders&&zu(r,n.executionProviders,o),n.freeDimensionOverrides)for(let[S,b]of Object.entries(n.freeDimensionOverrides)){if(typeof S!="string")throw new Error(`free dimension override name must be a string: ${S}`);if(typeof b!="number"||!Number.isInteger(b)||b<0)throw new Error(`free dimension override value must be a non-negative integer: ${b}`);let w=Be(S,o);t._OrtAddFreeDimensionOverride(r,w,b)!==0&&Ce(`Can\'t set a free dimension override: ${S} - ${b}.`)}return n.extra!==void 0&&ir(n.extra,"",new WeakSet,(S,b)=>{let w=Be(S,o),v=Be(b,o);t._OrtAddSessionConfigEntry(r,w,v)!==0&&Ce(`Can\'t set a session config entry: ${S} - ${b}.`)}),[r,o]}catch(s){throw r!==0&&t._OrtReleaseSessionOptions(r),o.forEach(u=>t._free(u)),s}};ke();var ou=!1,sc=e=>{let t=_e(),r=t.stackSave();try{let o=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,o,o+4)!==0&&Ce("Can\'t get session input/output count."),[t.HEAP32[o/4],t.HEAP32[o/4+1]]}finally{t.stackRestore(r)}},uc=(e,t)=>{_e()._OrtInit(e,t)!==0&&Ce("Can\'t initialize onnxruntime.")},au=async e=>{uc(e.wasm.numThreads,lr(e.logLevel));{let t=(ru(),zt(tu)).init;await t(_e(),e)}ou=!0},gr=new Map,iu=()=>ou,Fn=e=>{let t=_e(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},Hn=(e,t)=>{let r=_e(),o=0,n=0,s=0,u=[],d=[],a=[];try{[n,u]=Co(t),o=r._OrtCreateSession(e[0],e[1],n),o===0&&Ce("Can\'t create a session.");let[m,g]=sc(o),S=[],b=[],w=[];for(let y=0;y<m;y++){let C=r._OrtGetInputName(o,y);C===0&&Ce("Can\'t get an input name."),d.push(C),S.push(r.UTF8ToString(C))}for(let y=0;y<g;y++){let C=r._OrtGetOutputName(o,y);C===0&&Ce("Can\'t get an output name."),a.push(C);let A=r.UTF8ToString(C);b.push(A);{let R=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[A]??"cpu";if(R!=="cpu"&&R!=="cpu-pinned"&&R!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${R}.`);w.push(R)}}let v=null;return w.some(y=>y==="gpu-buffer")&&(s=r._OrtCreateBinding(o),s===0&&Ce("Can\'t create IO binding."),v={handle:s,outputPreferredLocations:w,outputPreferredLocationsEncoded:w.map(y=>vn(y))}),gr.set(o,[o,d,a,v]),[o,S,b]}catch(m){throw d.forEach(g=>r._OrtFree(g)),a.forEach(g=>r._OrtFree(g)),s!==0&&r._OrtReleaseBinding(s),o!==0&&r._OrtReleaseSession(o),m}finally{r._free(e[0]),n!==0&&r._OrtReleaseSessionOptions(n),u.forEach(m=>r._free(m))}},su=(e,t)=>{let r=Fn(e);return Hn(r,t)},uu=e=>{let t=_e(),r=gr.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[o,n,s,u]=r;u&&t._OrtReleaseBinding(u.handle),t.jsepUnregisterBuffers?.(e),n.forEach(d=>t._OrtFree(d)),s.forEach(d=>t._OrtFree(d)),t._OrtReleaseSession(o),gr.delete(e)},nu=(e,t,r,o,n)=>{if(!e){t.push(0);return}let s=_e(),u=e[0],d=e[1],a=e[3],m,g;if(u==="string"&&a==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(a==="gpu-buffer"){let w=e[2].gpuBuffer,v=ur(wn(u));g=d.reduce((y,C)=>y*C,1)*v,m=s.jsepRegisterBuffer(o,n,w,g)}else{let w=e[2];if(Array.isArray(w)){g=4*w.length,m=s._malloc(g),r.push(m);let v=m/4;for(let y=0;y<w.length;y++){if(typeof w[y]!="string")throw new TypeError(`tensor data at index ${y} is not a string`);s.HEAPU32[v++]=Be(w[y],r)}}else g=w.byteLength,m=s._malloc(g),r.push(m),s.HEAPU8.set(new Uint8Array(w.buffer,w.byteOffset,g),m)}let S=s.stackSave(),b=s.stackAlloc(4*d.length);try{let w=b/4;d.forEach(y=>s.HEAP32[w++]=y);let v=s._OrtCreateTensor(wn(u),m,g,b,d.length,vn(a));v===0&&Ce(`Can\'t create tensor for input/output. session=${o}, index=${n}.`),t.push(v)}finally{s.stackRestore(S)}},lu=async(e,t,r,o,n,s)=>{let u=_e(),d=gr.get(e);if(!d)throw new Error(`cannot run inference. invalid session id: ${e}`);let[a,m,g,S]=d,b=t.length,w=o.length,v=0,y=[],C=[],A=[],R=[],W=u.stackSave(),M=u.stackAlloc(b*4),D=u.stackAlloc(b*4),_=u.stackAlloc(w*4),z=u.stackAlloc(w*4);try{[v,y]=So(s);for(let ae=0;ae<b;ae++)nu(r[ae],C,R,e,t[ae]);for(let ae=0;ae<w;ae++)nu(n[ae],A,R,e,b+o[ae]);let F=M/4,q=D/4,le=_/4,B=z/4;for(let ae=0;ae<b;ae++)u.HEAPU32[F++]=C[ae],u.HEAPU32[q++]=m[t[ae]];for(let ae=0;ae<w;ae++)u.HEAPU32[le++]=A[ae],u.HEAPU32[B++]=g[o[ae]];if(S){let{handle:ae,outputPreferredLocations:we,outputPreferredLocationsEncoded:H}=S;if(m.length!==b)throw new Error(`input count from feeds (${b}) is expected to be always equal to model\'s input count (${m.length}).`);for(let Se=0;Se<b;Se++){let Te=t[Se];await u._OrtBindInput(ae,m[Te],C[Se])!==0&&Ce(`Can\'t bind input[${Se}] for session=${e}.`)}for(let Se=0;Se<w;Se++){let Te=o[Se];n[Se]?.[3]?u._OrtBindOutput(ae,g[Te],A[Se],0)!==0&&Ce(`Can\'t bind pre-allocated output[${Se}] for session=${e}.`):u._OrtBindOutput(ae,g[Te],0,H[Te])!==0&&Ce(`Can\'t bind output[${Se}] to ${we[Se]} for session=${e}.`)}}let K;S?K=await u._OrtRunWithBinding(a,S.handle,w,_,v):K=await u._OrtRun(a,D,M,b,z,w,_,v),K!==0&&Ce("failed to call OrtRun().");let xe=[];for(let ae=0;ae<w;ae++){let we=u.HEAPU32[_/4+ae];if(we===A[ae]){xe.push(n[ae]);continue}let H=u.stackSave(),Se=u.stackAlloc(4*4),Te=!1,Ae,Ee=0;try{u._OrtGetTensorData(we,Se,Se+4,Se+8,Se+12)!==0&&Ce(`Can\'t access output tensor data on index ${ae}.`);let Le=Se/4,Fe=u.HEAPU32[Le++];Ee=u.HEAPU32[Le++];let U=u.HEAPU32[Le++],ce=u.HEAPU32[Le++],de=[];for(let Oe=0;Oe<ce;Oe++)de.push(u.HEAPU32[U/4+Oe]);u._OrtFree(U);let We=de.reduce((Oe,Me)=>Oe*Me,1);Ae=sr(Fe);let Ge=S?.outputPreferredLocations[o[ae]];if(Ae==="string"){if(Ge==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let Oe=[],Me=Ee/4;for(let Je=0;Je<We;Je++){let Ue=u.HEAPU32[Me++],He=Je===We-1?void 0:u.HEAPU32[Me]-Ue;Oe.push(u.UTF8ToString(Ue,He))}xe.push([Ae,de,Oe,"cpu"])}else if(Ge==="gpu-buffer"&&We>0){let Oe=u.jsepGetBuffer(Ee),Me=ur(Fe);if(Me===void 0||!Ao(Ae))throw new Error(`Unsupported data type: ${Ae}`);Te=!0,xe.push([Ae,de,{gpuBuffer:Oe,download:u.jsepCreateDownloader(Oe,We*Me,Ae),dispose:()=>{u._OrtReleaseTensor(we)}},"gpu-buffer"])}else{let Oe=Pr(Ae),Me=new Oe(We);new Uint8Array(Me.buffer,Me.byteOffset,Me.byteLength).set(u.HEAPU8.subarray(Ee,Ee+Me.byteLength)),xe.push([Ae,de,Me,"cpu"])}}finally{u.stackRestore(H),Ae==="string"&&Ee&&u._free(Ee),Te||u._OrtReleaseTensor(we)}}return S&&u._OrtClearBoundOutputs(S.handle),xe}finally{u.stackRestore(W),C.forEach(F=>u._OrtReleaseTensor(F)),A.forEach(F=>u._OrtReleaseTensor(F)),R.forEach(F=>u._free(F)),v!==0&&u._OrtReleaseRunOptions(v),y.forEach(F=>u._free(F))}},du=e=>{let t=_e(),r=gr.get(e);if(!r)throw new Error("invalid session id");let o=r[0],n=t._OrtEndProfiling(o);n===0&&Ce("Can\'t get an profile file name."),t._OrtFree(n)},cu=e=>{let t=[];for(let r of e){let o=r[2];!Array.isArray(o)&&"buffer"in o&&t.push(o.buffer)}return t};self.onmessage=e=>{switch(e.data.type){case"init-wasm":try{xo(e.data.in).then(()=>postMessage({type:"init-wasm"}),t=>postMessage({type:"init-wasm",err:t}))}catch(t){postMessage({type:"init-wasm",err:t})}break;case"init-ort":try{au(e.data.in).then(()=>postMessage({type:"init-ort"}),t=>postMessage({type:"init-ort",err:t}))}catch(t){postMessage({type:"init-ort",err:t})}break;case"create_allocate":try{let{model:t}=e.data.in,r=Fn(t);postMessage({type:"create_allocate",out:r})}catch(t){postMessage({type:"create_allocate",err:t})}break;case"create_finalize":try{let{modeldata:t,options:r}=e.data.in,o=Hn(t,r);postMessage({type:"create_finalize",out:o})}catch(t){postMessage({type:"create_finalize",err:t})}break;case"create":try{let{model:t,options:r}=e.data.in,o=su(t,r);postMessage({type:"create",out:o})}catch(t){postMessage({type:"create",err:t})}break;case"release":try{let t=e.data.in;uu(t),postMessage({type:"release"})}catch(t){postMessage({type:"release",err:t})}break;case"run":try{let{sessionId:t,inputIndices:r,inputs:o,outputIndices:n,options:s}=e.data.in;lu(t,r,o,n,s).then(u=>{postMessage({type:"run",out:u},cu(u))},u=>{postMessage({type:"run",err:u})})}catch(t){postMessage({type:"run",err:t})}break;case"end-profiling":try{let t=e.data.in;du(t),postMessage({type:"end-profiling"})}catch(t){postMessage({type:"end-profiling",err:t})}break;case"is-ort-env-initialized":try{let t=iu();postMessage({type:"is-ort-env-initialized",out:t})}catch(t){postMessage({type:"is-ort-env-initialized",err:t})}break;default:}};})();\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n'});var wt,He,xn,Aa,Ea,ya,ba,wa,va,$a,xa,Sa,Ca,Ia,_t,vp,$n,ll,dl,cl,pl,_a,fl,ml,hl,gl,Oa=L(()=>{"use strict";Ct();sl();Xt();wt=()=>!!Ce.wasm.proxy&&typeof document<"u",xn=!1,Aa=!1,Ea=!1,wa=[],va=[],$a=[],xa=[],Sa=[],Ca=[],Ia=[],_t=()=>{if(xn||!Aa||Ea||!He)throw new Error("worker not ready")},vp=e=>{switch(e.data.type){case"init-wasm":xn=!1,e.data.err?(Ea=!0,ya[1](e.data.err)):(Aa=!0,ya[0]());break;case"init-ort":e.data.err?ba[1](e.data.err):ba[0]();break;case"create_allocate":e.data.err?wa.shift()[1](e.data.err):wa.shift()[0](e.data.out);break;case"create_finalize":e.data.err?va.shift()[1](e.data.err):va.shift()[0](e.data.out);break;case"create":e.data.err?$a.shift()[1](e.data.err):$a.shift()[0](e.data.out);break;case"release":e.data.err?xa.shift()[1](e.data.err):xa.shift()[0]();break;case"run":e.data.err?Sa.shift()[1](e.data.err):Sa.shift()[0](e.data.out);break;case"end-profiling":e.data.err?Ca.shift()[1](e.data.err):Ca.shift()[0]();break;case"is-ort-env-initialized":e.data.err?Ia.shift()[1](e.data.err):Ia.shift()[0](e.data.out);break;default:}},$n=typeof document<"u"?document?.currentScript?.src:void 0,ll=async()=>{if(wt()){if(Aa)return;if(xn)throw new Error("multiple calls to 'initWasm()' detected.");if(Ea)throw new Error("previous call to 'initWasm()' failed.");return xn=!0,Ce.wasm.wasmPaths===void 0&&$n&&$n.indexOf("blob:")!==0&&(Ce.wasm.wasmPaths=$n.substr(0,+$n.lastIndexOf("/")+1)),new Promise((e,t)=>{He?.terminate();let r=URL.createObjectURL(new Blob([ul()],{type:"text/javascript"}));He=new Worker(r,{name:"ort-wasm-proxy-worker"}),He.onerror=n=>t(n),He.onmessage=vp,URL.revokeObjectURL(r),ya=[e,t];let a={type:"init-wasm",in:Ce.wasm};He.postMessage(a)})}else return Mo(Ce.wasm)},dl=async e=>{if(wt())return _t(),new Promise((t,r)=>{ba=[t,r];let a={type:"init-ort",in:e};He.postMessage(a)});await el(e)},cl=async e=>wt()?(_t(),new Promise((t,r)=>{wa.push([t,r]);let a={type:"create_allocate",in:{model:e}};He.postMessage(a,[e.buffer])})):ha(e),pl=async(e,t)=>wt()?(_t(),new Promise((r,a)=>{va.push([r,a]);let n={type:"create_finalize",in:{modeldata:e,options:t}};He.postMessage(n)})):ga(e,t),_a=async(e,t)=>{if(wt()){if(t?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return _t(),new Promise((r,a)=>{$a.push([r,a]);let n={type:"create",in:{model:e,options:t}};He.postMessage(n,[e.buffer])})}else return rl(e,t)},fl=async e=>{if(wt())return _t(),new Promise((t,r)=>{xa.push([t,r]);let a={type:"release",in:e};He.postMessage(a)});nl(e)},ml=async(e,t,r,a,n,s)=>{if(wt()){if(r.some(u=>u[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(n.some(u=>u))throw new Error("pre-allocated output tensor is not supported for proxy.");return _t(),new Promise((u,l)=>{Sa.push([u,l]);let o=r,p={type:"run",in:{sessionId:e,inputIndices:t,inputs:o,outputIndices:a,options:s}};He.postMessage(p,il(o))})}else return al(e,t,r,a,n,s)},hl=async e=>{if(wt())return _t(),new Promise((t,r)=>{Ca.push([t,r]);let a={type:"end-profiling",in:e};He.postMessage(a)});ol(e)},gl=async()=>wt()?(_t(),new Promise((e,t)=>{Ia.push([e,t]);let r={type:"is-ort-env-initialized"};He.postMessage(r)})):tl()});var Sn,yl,$p,Cn,bl=L(()=>{"use strict";Ct();Oa();De();yl=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},$p=e=>{switch(e[3]){case"cpu":return new Ve(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!Zr(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:r,download:a,dispose:n}=e[2];return Ve.fromGpuBuffer(r,{dataType:t,dims:e[1],download:a,dispose:n})}default:throw new Error(`invalid data location: ${e[3]}`)}},Cn=class{async createSessionAllocate(t){let r=await fetch(t);if(r.status!==200)throw new Error(`failed to load model: ${t}`);let a=await r.arrayBuffer();return cl(new Uint8Array(a))}async loadModel(t,r){if(await gl()||(Sn||(Sn=dl(Ce)),await Sn,Sn=void 0),typeof t=="string")if(typeof process<"u"&&process.versions&&process.versions.node){let a=await(void 0)(t);[this.sessionId,this.inputNames,this.outputNames]=await _a(a,r)}else{let a=await this.createSessionAllocate(t);[this.sessionId,this.inputNames,this.outputNames]=await pl(a,r)}else[this.sessionId,this.inputNames,this.outputNames]=await _a(t,r)}async dispose(){return fl(this.sessionId)}async run(t,r,a){let n=[],s=[];Object.entries(t).forEach(g=>{let v=g[0],$=g[1],w=this.inputNames.indexOf(v);if(w===-1)throw new Error(`invalid input '${v}'`);n.push($),s.push(w)});let u=[],l=[];Object.entries(r).forEach(g=>{let v=g[0],$=g[1],w=this.outputNames.indexOf(v);if(w===-1)throw new Error(`invalid output '${v}'`);u.push($),l.push(w)});let o=n.map((g,v)=>yl(g,()=>`input "${this.inputNames[s[v]]}"`)),p=u.map((g,v)=>g?yl(g,()=>`output "${this.outputNames[l[v]]}"`):null),m=await ml(this.sessionId,s,o,l,p,a),b={};for(let g=0;g<m.length;g++)b[this.outputNames[l[g]]]=u[g]??$p(m[g]);return b}startProfiling(){}endProfiling(){hl(this.sessionId)}}});var xp,In,wl=L(()=>{"use strict";Ct();Oa();bl();xp=()=>{if((typeof Ce.wasm.initTimeout!="number"||Ce.wasm.initTimeout<0)&&(Ce.wasm.initTimeout=0),typeof Ce.wasm.simd!="boolean"&&(Ce.wasm.simd=!0),typeof Ce.wasm.proxy!="boolean"&&(Ce.wasm.proxy=!1),typeof Ce.wasm.numThreads!="number"||!Number.isInteger(Ce.wasm.numThreads)||Ce.wasm.numThreads<=0){let e=typeof navigator>"u"?(void 0)().length:navigator.hardwareConcurrency;Ce.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},In=class{async init(){xp(),await ll()}async createInferenceSessionHandler(t,r){let a=new Cn;return await a.loadModel(t,r),Promise.resolve(a)}}});var vl={};zt(vl,{wasmBackend:()=>Sp});var Sp,$l=L(()=>{"use strict";wl();Sp=new In});var Ip={};zt(Ip,{InferenceSession:()=>mo,Tensor:()=>Ve,TrainingSession:()=>bo,default:()=>Cp,env:()=>Ce,registerBackend:()=>yt});module.exports=St(Ip);Ct();Ct();Ct();var vo="1.17.0";var Cp=Dn;{let e=($l(),St(vl)).wasmBackend;typeof navigator<"u"&&navigator.gpu&&yt("webgpu",e,5),yt("cpu",e,10),yt("wasm",e,10),yt("xnnpack",e,9),yt("webnn",e,9)}Object.defineProperty(Ce.versions,"web",{value:vo,enumerable:!0});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
//# sourceMappingURL=ort.webgpu.min.js.map
