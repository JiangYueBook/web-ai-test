/*!
 * ONNX Runtime Web v1.17.0
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
"use strict";var ort=(()=>{var Ey=Object.create;var Fo=Object.defineProperty;var Cy=Object.getOwnPropertyDescriptor;var Py=Object.getOwnPropertyNames;var Dy=Object.getPrototypeOf,ky=Object.prototype.hasOwnProperty;var D=(r,e)=>()=>(r&&(e=r(r=0)),e);var Ue=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),Cr=(r,e)=>{for(var n in e)Fo(r,n,{get:e[n],enumerable:!0})},Lu=(r,e,n,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of Py(e))!ky.call(r,o)&&o!==n&&Fo(r,o,{get:()=>e[o],enumerable:!(t=Cy(e,o))||t.enumerable});return r};var xn=(r,e,n)=>(n=r!=null?Ey(Dy(r)):{},Lu(e||!r||!r.__esModule?Fo(n,"default",{value:r,enumerable:!0}):n,r)),wr=r=>Lu(Fo({},"__esModule",{value:!0}),r);var Go,Yr,tr,Wo,Vo=D(()=>{Go=new Map,Yr=[],tr=(r,e,n)=>{if(e&&typeof e.init=="function"&&typeof e.createInferenceSessionHandler=="function"){let t=Go.get(r);if(t===void 0)Go.set(r,{backend:e,priority:n});else{if(t.priority>n)return;if(t.priority===n&&t.backend!==e)throw new Error(`cannot register backend "${r}" using priority ${n}`)}if(n>=0){let o=Yr.indexOf(r);o!==-1&&Yr.splice(o,1);for(let i=0;i<Yr.length;i++)if(Go.get(Yr[i]).priority<=n){Yr.splice(i,0,r);return}Yr.push(r)}return}throw new TypeError("not a valid backend")},Wo=async r=>{let e=r.length===0?Yr:r,n=[];for(let t of e){let o=Go.get(t);if(o){if(o.initialized)return o.backend;if(o.aborted)continue;let i=!!o.initPromise;try{return i||(o.initPromise=o.backend.init()),await o.initPromise,o.initialized=!0,o.backend}catch(u){i||n.push({name:t,err:u}),o.aborted=!0}finally{delete o.initPromise}}}throw new Error(`no available backend found. ERR: ${n.map(t=>`[${t.name}] ${t.err}`).join(", ")}`)}});var Nu=D(()=>{Vo()});var zu,Fu=D(()=>{zu="1.17.0"});var Gu,va,Wu=D(()=>{Fu();Gu="warning",va={wasm:{},webgl:{},webgpu:{},versions:{common:zu},set logLevel(r){if(r!==void 0){if(typeof r!="string"||["verbose","info","warning","error","fatal"].indexOf(r)===-1)throw new Error(`Unsupported logging level: ${r}`);Gu=r}},get logLevel(){return Gu}};Object.defineProperty(va,"logLevel",{enumerable:!0})});var ve,Vu=D(()=>{Wu();ve=va});var Uu,Hu,ju=D(()=>{Uu=(r,e)=>{let n=document.createElement("canvas");n.width=r.dims[3],n.height=r.dims[2];let t=n.getContext("2d");if(t!=null){let o,i;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(o=r.dims[2],i=r.dims[3]):(o=r.dims[3],i=r.dims[2]);let u=e?.format!==void 0?e.format:"RGB",a=e?.norm,s,l;a===void 0||a.mean===void 0?s=[255,255,255,255]:typeof a.mean=="number"?s=[a.mean,a.mean,a.mean,a.mean]:(s=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(s[3]=a.mean[3])),a===void 0||a.bias===void 0?l=[0,0,0,0]:typeof a.bias=="number"?l=[a.bias,a.bias,a.bias,a.bias]:(l=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(l[3]=a.bias[3]));let c=i*o,p=0,h=c,g=c*2,x=-1;u==="RGBA"?(p=0,h=c,g=c*2,x=c*3):u==="RGB"?(p=0,h=c,g=c*2):u==="RBG"&&(p=0,g=c,h=c*2);for(let b=0;b<i;b++)for(let w=0;w<o;w++){let S=(r.data[p++]-l[0])*s[0],O=(r.data[h++]-l[1])*s[1],E=(r.data[g++]-l[2])*s[2],B=x===-1?255:(r.data[x++]-l[3])*s[3];t.fillStyle="rgba("+S+","+O+","+E+","+B+")",t.fillRect(w,b,1,1)}return n.toDataURL()}else throw new Error("Can not access image data")},Hu=(r,e)=>{let n=document.createElement("canvas").getContext("2d"),t;if(n!=null){let o,i,u;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(o=r.dims[2],i=r.dims[1],u=r.dims[3]):(o=r.dims[3],i=r.dims[2],u=r.dims[1]);let a=e!==void 0&&e.format!==void 0?e.format:"RGB",s=e?.norm,l,c;s===void 0||s.mean===void 0?l=[255,255,255,255]:typeof s.mean=="number"?l=[s.mean,s.mean,s.mean,s.mean]:(l=[s.mean[0],s.mean[1],s.mean[2],255],s.mean[3]!==void 0&&(l[3]=s.mean[3])),s===void 0||s.bias===void 0?c=[0,0,0,0]:typeof s.bias=="number"?c=[s.bias,s.bias,s.bias,s.bias]:(c=[s.bias[0],s.bias[1],s.bias[2],0],s.bias[3]!==void 0&&(c[3]=s.bias[3]));let p=i*o;if(e!==void 0&&(e.format!==void 0&&u===4&&e.format!=="RGBA"||u===3&&e.format!=="RGB"&&e.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let h=4,g=0,x=1,b=2,w=3,S=0,O=p,E=p*2,B=-1;a==="RGBA"?(S=0,O=p,E=p*2,B=p*3):a==="RGB"?(S=0,O=p,E=p*2):a==="RBG"&&(S=0,E=p,O=p*2),t=n.createImageData(o,i);for(let z=0;z<i*o;g+=h,x+=h,b+=h,w+=h,z++)t.data[g]=(r.data[S++]-c[0])*l[0],t.data[x]=(r.data[O++]-c[1])*l[1],t.data[b]=(r.data[E++]-c[2])*l[2],t.data[w]=B===-1?255:(r.data[B++]-c[3])*l[3]}else throw new Error("Can not access image data");return t}});var wa,qu,Ku,Yu,Xu,Ju=D(()=>{Uo();wa=(r,e)=>{if(r===void 0)throw new Error("Image buffer must be defined");if(e.height===void 0||e.width===void 0)throw new Error("Image height and width must be defined");if(e.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:n,width:t}=e,o=e.norm??{mean:255,bias:0},i,u;typeof o.mean=="number"?i=[o.mean,o.mean,o.mean,o.mean]:i=[o.mean[0],o.mean[1],o.mean[2],o.mean[3]??255],typeof o.bias=="number"?u=[o.bias,o.bias,o.bias,o.bias]:u=[o.bias[0],o.bias[1],o.bias[2],o.bias[3]??0];let a=e.format!==void 0?e.format:"RGBA",s=e.tensorFormat!==void 0&&e.tensorFormat!==void 0?e.tensorFormat:"RGB",l=n*t,c=s==="RGBA"?new Float32Array(l*4):new Float32Array(l*3),p=4,h=0,g=1,x=2,b=3,w=0,S=l,O=l*2,E=-1;a==="RGB"&&(p=3,h=0,g=1,x=2,b=-1),s==="RGBA"?E=l*3:s==="RBG"?(w=0,O=l,S=l*2):s==="BGR"&&(O=0,S=l,w=l*2);for(let z=0;z<l;z++,h+=p,x+=p,g+=p,b+=p)c[w++]=(r[h]+u[0])/i[0],c[S++]=(r[g]+u[1])/i[1],c[O++]=(r[x]+u[2])/i[2],E!==-1&&b!==-1&&(c[E++]=(r[b]+u[3])/i[3]);return s==="RGBA"?new wt("float32",c,[1,4,n,t]):new wt("float32",c,[1,3,n,t])},qu=async(r,e)=>{let n=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,t=typeof ImageData<"u"&&r instanceof ImageData,o=typeof ImageBitmap<"u"&&r instanceof ImageBitmap,i=typeof r=="string",u,a=e??{};if(n){let s=document.createElement("canvas");s.width=r.width,s.height=r.height;let l=s.getContext("2d");if(l!=null){let c=r.height,p=r.width;if(e!==void 0&&e.resizedHeight!==void 0&&e.resizedWidth!==void 0&&(c=e.resizedHeight,p=e.resizedWidth),e!==void 0){if(a=e,e.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=c,a.width=p}else a.tensorFormat="RGBA",a.height=c,a.width=p;l.drawImage(r,0,0),u=l.getImageData(0,0,p,c).data}else throw new Error("Can not access image data")}else if(t){let s,l;if(e!==void 0&&e.resizedWidth!==void 0&&e.resizedHeight!==void 0?(s=e.resizedHeight,l=e.resizedWidth):(s=r.height,l=r.width),e!==void 0&&(a=e),a.format="RGBA",a.height=s,a.width=l,e!==void 0){let c=document.createElement("canvas");c.width=l,c.height=s;let p=c.getContext("2d");if(p!=null)p.putImageData(r,0,0),u=p.getImageData(0,0,l,s).data;else throw new Error("Can not access image data")}else u=r.data}else if(o){if(e===void 0)throw new Error("Please provide image config with format for Imagebitmap");let s=document.createElement("canvas");s.width=r.width,s.height=r.height;let l=s.getContext("2d");if(l!=null){let c=r.height,p=r.width;return l.drawImage(r,0,0,p,c),u=l.getImageData(0,0,p,c).data,a.height=c,a.width=p,wa(u,a)}else throw new Error("Can not access image data")}else{if(i)return new Promise((s,l)=>{let c=document.createElement("canvas"),p=c.getContext("2d");if(!r||!p)return l();let h=new Image;h.crossOrigin="Anonymous",h.src=r,h.onload=()=>{c.width=h.width,c.height=h.height,p.drawImage(h,0,0,c.width,c.height);let g=p.getImageData(0,0,c.width,c.height);a.height=c.height,a.width=c.width,s(wa(g.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(u!==void 0)return wa(u,a);throw new Error("Input data provided is not supported - aborted tensor creation")},Ku=(r,e)=>{let{width:n,height:t,download:o,dispose:i}=e,u=[1,t,n,4];return new wt({location:"texture",type:"float32",texture:r,dims:u,download:o,dispose:i})},Yu=(r,e)=>{let{dataType:n,dims:t,download:o,dispose:i}=e;return new wt({location:"gpu-buffer",type:n??"float32",gpuBuffer:r,dims:t,download:o,dispose:i})},Xu=(r,e,n)=>new wt({location:"cpu-pinned",type:r,data:e,dims:n??[e.length]})});var Qn,Ho,Zu,Qu,el=D(()=>{Qn=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["float16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),Ho=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),Zu=!1,Qu=()=>{if(!Zu){Zu=!0;let r=typeof BigInt64Array<"u"&&typeof BigInt64Array.from=="function",e=typeof BigUint64Array<"u"&&typeof BigUint64Array.from=="function";r&&(Qn.set("int64",BigInt64Array),Ho.set(BigInt64Array,"int64")),e&&(Qn.set("uint64",BigUint64Array),Ho.set(BigUint64Array,"uint64"))}}});var tl,rl,nl=D(()=>{Uo();tl=r=>{let e=1;for(let n=0;n<r.length;n++){let t=r[n];if(typeof t!="number"||!Number.isSafeInteger(t))throw new TypeError(`dims[${n}] must be an integer, got: ${t}`);if(t<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${t}`);e*=t}return e},rl=(r,e)=>{switch(r.location){case"cpu":return new wt(r.type,r.data,e);case"cpu-pinned":return new wt({location:"cpu-pinned",data:r.data,type:r.type,dims:e});case"texture":return new wt({location:"texture",texture:r.texture,type:r.type,dims:e});case"gpu-buffer":return new wt({location:"gpu-buffer",gpuBuffer:r.gpuBuffer,type:r.type,dims:e});default:throw new Error(`tensorReshape: tensor location ${r.location} is not supported`)}}});var wt,Uo=D(()=>{ju();Ju();el();nl();wt=class{constructor(e,n,t){Qu();let o,i;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,o=e.type,i=e.dims,e.location){case"cpu-pinned":{let a=Qn.get(o);if(!a)throw new TypeError(`unsupported type "${o}" to create tensor from pinned buffer`);if(!(e.data instanceof a))throw new TypeError(`buffer should be of type ${a.name}`);this.cpuData=e.data;break}case"texture":{if(o!=="float32")throw new TypeError(`unsupported type "${o}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(o!=="float32"&&o!=="float16"&&o!=="int32"&&o!=="int64"&&o!=="uint32"&&o!=="bool")throw new TypeError(`unsupported type "${o}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,s;if(typeof e=="string")if(o=e,s=t,e==="string"){if(!Array.isArray(n))throw new TypeError("A string tensor's data must be a string array.");a=n}else{let l=Qn.get(e);if(l===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(n)){if(e==="float16")throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");e==="uint64"||e==="int64"?a=l.from(n,BigInt):a=l.from(n)}else if(n instanceof l)a=n;else throw new TypeError(`A ${o} tensor's data must be type of ${l}`)}else if(s=n,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let l=typeof e[0];if(l==="string")o="string",a=e;else if(l==="boolean")o="bool",a=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${l}.`)}else{let l=Ho.get(e.constructor);if(l===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);o=l,a=e}if(s===void 0)s=[a.length];else if(!Array.isArray(s))throw new TypeError("A tensor's dims must be a number array");i=s,this.cpuData=a,this.dataLocation="cpu"}let u=tl(i);if(this.cpuData&&u!==this.cpuData.length)throw new Error(`Tensor's size(${u}) does not match data length(${this.cpuData.length}).`);this.type=o,this.dims=i,this.size=u}static async fromImage(e,n){return qu(e,n)}static fromTexture(e,n){return Ku(e,n)}static fromGpuBuffer(e,n){return Yu(e,n)}static fromPinnedBuffer(e,n,t){return Xu(e,n,t)}toDataURL(e){return Uu(this,e)}toImageData(e){return Hu(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let n=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=n,e&&this.disposer&&(this.disposer(),this.disposer=void 0),n}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return rl(this,e)}}});var lt,jo=D(()=>{Uo();lt=wt});var qo,ol=D(()=>{Vo();jo();qo=class r{constructor(e){this.handler=e}async run(e,n,t){let o={},i={};if(typeof e!="object"||e===null||e instanceof lt||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let u=!0;if(typeof n=="object"){if(n===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(n instanceof lt)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(n)){if(n.length===0)throw new TypeError("'fetches' cannot be an empty array.");u=!1;for(let l of n){if(typeof l!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(l)===-1)throw new RangeError(`'fetches' contains invalid output name: ${l}.`);o[l]=null}if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else{let l=!1,c=Object.getOwnPropertyNames(n);for(let p of this.outputNames)if(c.indexOf(p)!==-1){let h=n[p];(h===null||h instanceof lt)&&(l=!0,u=!1,o[p]=h)}if(l){if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else i=n}}else if(typeof n<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let l of this.inputNames)if(typeof e[l]>"u")throw new Error(`input '${l}' is missing in 'feeds'.`);if(u)for(let l of this.outputNames)o[l]=null;let a=await this.handler.run(e,o,i),s={};for(let l in a)if(Object.hasOwnProperty.call(a,l)){let c=a[l];c instanceof lt?s[l]=c:s[l]=new lt(c.type,c.data,c.dims)}return s}async release(){return this.handler.dispose()}static async create(e,n,t,o){let i,u={};if(typeof e=="string"){if(i=e,typeof n=="object"&&n!==null)u=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof Uint8Array){if(i=e,typeof n=="object"&&n!==null)u=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&e instanceof SharedArrayBuffer){let p=e,h=0,g=e.byteLength;if(typeof n=="object"&&n!==null)u=n;else if(typeof n=="number"){if(h=n,!Number.isSafeInteger(h))throw new RangeError("'byteOffset' must be an integer.");if(h<0||h>=p.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${p.byteLength}).`);if(g=e.byteLength-h,typeof t=="number"){if(g=t,!Number.isSafeInteger(g))throw new RangeError("'byteLength' must be an integer.");if(g<=0||h+g>p.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${p.byteLength-h}].`);if(typeof o=="object"&&o!==null)u=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else if(typeof t<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof n<"u")throw new TypeError("'options' must be an object.");i=new Uint8Array(p,h,g)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let s=(u.executionProviders||[]).map(p=>typeof p=="string"?p:p.name),c=await(await Wo(s)).createInferenceSessionHandler(i,u);return new r(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}});var il,al=D(()=>{ol();il=qo});var sl=D(()=>{});var Ry,Ko,ul=D(()=>{Vo();jo();Ry="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",Ko=class r{constructor(e){this.handler=e}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}static async create(e,n){let t=e.evalModel||"",o=e.optimizerModel||"",i=n||{},a=(i.executionProviders||[]).map(l=>typeof l=="string"?l:l.name),s=await Wo(a);if(s.createTrainingSessionHandler){let l=await s.createTrainingSessionHandler(e.checkpointState,e.trainModel,t,o,i);return new r(l)}else throw new Error(Ry)}typeNarrowingForRunStep(e,n,t){let o={},i={};if(typeof e!="object"||e===null||e instanceof lt||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let u=!0;if(typeof n=="object"){if(n===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(n instanceof lt)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(n)){if(n.length===0)throw new TypeError("'fetches' cannot be an empty array.");u=!1;for(let a of n){if(typeof a!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(a)===-1)throw new RangeError(`'fetches' contains invalid output name: ${a}.`);o[a]=null}if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else{let a=!1,s=Object.getOwnPropertyNames(n);for(let l of this.outputNames)if(s.indexOf(l)!==-1){let c=n[l];(c===null||c instanceof lt)&&(a=!0,u=!1,o[l]=c)}if(a){if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else i=n}}else if(typeof n<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let a of this.inputNames)if(typeof e[a]>"u")throw new Error(`input '${a}' is missing in 'feeds'.`);if(u)for(let a of this.outputNames)o[a]=null;return[o,i]}convertHandlerReturnTypeToMapOfTensors(e){let n={};for(let t in e)if(Object.hasOwnProperty.call(e,t)){let o=e[t];o instanceof lt?n[t]=o:n[t]=new lt(o.type,o.data,o.dims)}return n}async runTrainStep(e,n,t){let[o,i]=this.typeNarrowingForRunStep(e,n,t),u=await this.handler.runTrainStep(e,o,i);return this.convertHandlerReturnTypeToMapOfTensors(u)}async loadParametersBuffer(e,n){throw new Error("Method not implemented.")}async getContiguousParameters(e){throw new Error("Method not implemented.")}async release(){return this.handler.dispose()}}});var ll,cl=D(()=>{ul();ll=Ko});var Ta={};Cr(Ta,{InferenceSession:()=>il,Tensor:()=>lt,TrainingSession:()=>ll,env:()=>ve,registerBackend:()=>tr});var Rt=D(()=>{Nu();Vu();al();jo();sl();cl()});function Pr(r,e,n,t){if(e===void 0)return My(r);if(n===void 0)Yo(r,e,1);else if(typeof n=="number"&&t===void 0)Yo(r,e,n);else if(typeof n=="string"&&t===void 0)Yo(r,n,1,e);else if(typeof n=="string"&&typeof t=="number")Yo(r,n,t,e);else throw new TypeError("input is valid")}function My(r){return{verbose:Pr.verbose.bind(null,r),info:Pr.info.bind(null,r),warning:Pr.warning.bind(null,r),error:Pr.error.bind(null,r),fatal:Pr.fatal.bind(null,r)}}function Yo(r,e,n,t){let o=eo[t||""]||eo[""];fl[r]<fl[o.minimalSeverity]||(o.logDateTime&&(e=`${new Date().toISOString()}|${e}`),o.logSourceLocation,By[o.provider].log(r,e,t))}var $a,Sa,fl,By,pl,eo,ze,Jo,Zo,Qo,Xo,Bt=D(()=>{"use strict";$a=class{log(e,n,t){}},Sa=class{log(e,n,t){console.log(`${this.color(e)} ${t?"\x1B[35m"+t+"\x1B[0m ":""}${n}`)}color(e){switch(e){case"verbose":return"\x1B[34;40mv\x1B[0m";case"info":return"\x1B[32mi\x1B[0m";case"warning":return"\x1B[30;43mw\x1B[0m";case"error":return"\x1B[31;40me\x1B[0m";case"fatal":return"\x1B[101mf\x1B[0m";default:throw new Error(`unsupported severity: ${e}`)}}},fl={verbose:1e3,info:2e3,warning:4e3,error:5e3,fatal:6e3},By={none:new $a,console:new Sa},pl={provider:"console",minimalSeverity:"warning",logDateTime:!0,logSourceLocation:!1},eo={"":pl};(s=>{function r(l,c){s("verbose",l,c)}s.verbose=r;function e(l,c){s("info",l,c)}s.info=e;function n(l,c){s("warning",l,c)}s.warning=n;function t(l,c){s("error",l,c)}s.error=t;function o(l,c){s("fatal",l,c)}s.fatal=o;function i(l){eo={},u("",l||{})}s.reset=i;function u(l,c){if(l==="*")i(c);else{let p=eo[l]||pl;eo[l]={provider:c.provider||p.provider,minimalSeverity:c.minimalSeverity||p.minimalSeverity,logDateTime:c.logDateTime===void 0?p.logDateTime:c.logDateTime,logSourceLocation:c.logSourceLocation===void 0?p.logSourceLocation:c.logSourceLocation}}}s.set=u;function a(l){let c={};l.logLevel&&(c.minimalSeverity=l.logLevel),u("",c)}s.setWithEnv=a})(Pr||={});ze=Pr,Jo=class{constructor(e,n,t,o,i,u){this.category=e;this.name=n;this.startTime=t;this.endCallback=o;this.timer=i;this.ctx=u}async end(){return this.endCallback(this)}async checkTimer(){if(this.ctx===void 0||this.timer===void 0)throw new Error("No webgl timer found");return this.ctx.endTimer(),this.ctx.waitForQueryAndGetTime(this.timer)}},Zo=class{constructor(e,n,t,o){this.category=e;this.name=n;this.startTime=t;this.endTime=o}},Qo=class{constructor(e,n,t){this._started=!1;this._flushPointer=0;this._started=!1,this._maxNumberEvents=e===void 0?1e4:e,this._flushBatchSize=n===void 0?10:n,this._flushIntervalInMilliseconds=t===void 0?5e3:t}static create(e){return e===void 0?new this:new this(e.maxNumberEvents,e.flushBatchSize,e.flushIntervalInMilliseconds)}start(){this._started=!0,this._timingEvents=[],this._flushTime=Xo(),this._flushPointer=0}stop(){for(this._started=!1;this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer])}event(e,n,t,o){let i=this._started?this.begin(e,n,o):void 0,u=!1,a=t();if(a&&typeof a.then=="function")return u=!0,new Promise((s,l)=>{a.then(async c=>{i&&await i.end(),s(c)},async c=>{i&&await i.end(),l(c)})});if(!u&&i){let s=i.end();if(s&&typeof s.then=="function")return new Promise((l,c)=>{s.then(()=>{l(a)},p=>{c(p)})})}return a}begin(e,n,t){if(!this._started)throw new Error("profiler is not started yet");if(t===void 0){let o=Xo();return this.flush(o),new Jo(e,n,o,i=>this.endSync(i))}else{let o=t.beginTimer();return new Jo(e,n,0,async i=>this.end(i),o,t)}}async end(e){let n=await e.checkTimer();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new Zo(e.category,e.name,e.startTime,n)),this.flush(n))}endSync(e){let n=Xo();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new Zo(e.category,e.name,e.startTime,n)),this.flush(n))}logOneEvent(e){ze.verbose(`Profiler.${e.category}`,`${(e.endTime-e.startTime).toFixed(2)}ms on event '${e.name}' at ${e.endTime.toFixed(2)}`)}flush(e){if(this._timingEvents.length-this._flushPointer>=this._flushBatchSize||e-this._flushTime>=this._flushIntervalInMilliseconds){for(let n=this._flushPointer;this._flushPointer<n+this._flushBatchSize&&this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer]);this._flushTime=Xo()}}get started(){return this._started}},Xo=typeof performance<"u"&&performance.now?()=>performance.now():Date.now});function hl(r,e,n){for(let t of n){let o=t[0],i=t[1],u=t[2],a=t[3],s=t[4];if(r.opType===o){for(let l of e)if((l.domain===i||l.domain==="ai.onnx"&&i==="")&&Ly(l.version,u))return{opImpl:a,opInit:s}}}throw new TypeError(`cannot resolve operator '${r.opType}' with opsets: ${e.map(t=>`${t.domain||"ai.onnx"} v${t.version}`).join(", ")}`)}function Ly(r,e){if(e.endsWith("+")){let n=Number.parseInt(e.substring(0,e.length-1),10);return!isNaN(n)&&n<=r}else if(e.split("-").length===2){let n=e.split("-"),t=Number.parseInt(n[0],10),o=Number.parseInt(n[1],10);return!isNaN(t)&&!isNaN(o)&&t<=r&&r<=o}else return Number.parseInt(e,10)===r}var ml=D(()=>{"use strict"});var gl=Ue(Ia=>{"use strict";Ia.__esModule=!0;var Ny=function(){function r(e){if(!e)throw new TypeError("Invalid argument; `value` has no value.");this.value=r.EMPTY,e&&r.isGuid(e)&&(this.value=e)}return r.isGuid=function(e){var n=e.toString();return e&&(e instanceof r||r.validator.test(n))},r.create=function(){return new r([r.gen(2),r.gen(1),r.gen(1),r.gen(1),r.gen(3)].join("-"))},r.createEmpty=function(){return new r("emptyguid")},r.parse=function(e){return new r(e)},r.raw=function(){return[r.gen(2),r.gen(1),r.gen(1),r.gen(1),r.gen(3)].join("-")},r.gen=function(e){for(var n="",t=0;t<e;t++)n+=((1+Math.random())*65536|0).toString(16).substring(1);return n},r.prototype.equals=function(e){return r.isGuid(e)&&this.value===e.toString()},r.prototype.isEmpty=function(){return this.value===r.EMPTY},r.prototype.toString=function(){return this.value},r.prototype.toJSON=function(){return{value:this.value}},r.validator=new RegExp("^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$","i"),r.EMPTY="00000000-0000-0000-0000-000000000000",r}();Ia.Guid=Ny});function He(r,e,n){this.low=r|0,this.high=e|0,this.unsigned=!!n}function xt(r){return(r&&r.__isLong__)===!0}function bl(r){var e=Math.clz32(r&-r);return r?31-e:e}function Xr(r,e){var n,t,o;return e?(r>>>=0,(o=0<=r&&r<256)&&(t=xl[r],t)?t:(n=Me(r,0,!0),o&&(xl[r]=n),n)):(r|=0,(o=-128<=r&&r<128)&&(t=yl[r],t)?t:(n=Me(r,r<0?-1:0,!1),o&&(yl[r]=n),n))}function Lt(r,e){if(isNaN(r))return e?Tr:Ht;if(e){if(r<0)return Tr;if(r>=$l)return _l}else{if(r<=-wl)return It;if(r+1>=wl)return Il}return r<0?Lt(-r,e).neg():Me(r%wn|0,r/wn|0,e)}function Me(r,e,n){return new He(r,e,n)}function Aa(r,e,n){if(r.length===0)throw Error("empty string");if(typeof e=="number"?(n=e,e=!1):e=!!e,r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return e?Tr:Ht;if(n=n||10,n<2||36<n)throw RangeError("radix");var t;if((t=r.indexOf("-"))>0)throw Error("interior hyphen");if(t===0)return Aa(r.substring(1),e,n).neg();for(var o=Lt(ei(n,8)),i=Ht,u=0;u<r.length;u+=8){var a=Math.min(8,r.length-u),s=parseInt(r.substring(u,u+a),n);if(a<8){var l=Lt(ei(n,a));i=i.mul(l).add(Lt(s))}else i=i.mul(o),i=i.add(Lt(s))}return i.unsigned=e,i}function jt(r,e){return typeof r=="number"?Lt(r,e):typeof r=="string"?Aa(r,e):Me(r.low,r.high,typeof e=="boolean"?e:r.unsigned)}var Mt,yl,xl,ei,vl,zy,wn,$l,wl,Tl,Ht,Tr,vn,Sl,_a,Il,_l,It,H,$r,Oa=D(()=>{Mt=null;try{Mt=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}He.prototype.__isLong__;Object.defineProperty(He.prototype,"__isLong__",{value:!0});He.isLong=xt;yl={},xl={};He.fromInt=Xr;He.fromNumber=Lt;He.fromBits=Me;ei=Math.pow;He.fromString=Aa;He.fromValue=jt;vl=65536,zy=1<<24,wn=vl*vl,$l=wn*wn,wl=$l/2,Tl=Xr(zy),Ht=Xr(0);He.ZERO=Ht;Tr=Xr(0,!0);He.UZERO=Tr;vn=Xr(1);He.ONE=vn;Sl=Xr(1,!0);He.UONE=Sl;_a=Xr(-1);He.NEG_ONE=_a;Il=Me(-1,2147483647,!1);He.MAX_VALUE=Il;_l=Me(-1,-1,!0);He.MAX_UNSIGNED_VALUE=_l;It=Me(0,-2147483648,!1);He.MIN_VALUE=It;H=He.prototype;H.toInt=function(){return this.unsigned?this.low>>>0:this.low};H.toNumber=function(){return this.unsigned?(this.high>>>0)*wn+(this.low>>>0):this.high*wn+(this.low>>>0)};H.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(It)){var n=Lt(e),t=this.div(n),o=t.mul(n).sub(this);return t.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var i=Lt(ei(e,6),this.unsigned),u=this,a="";;){var s=u.div(i),l=u.sub(s.mul(i)).toInt()>>>0,c=l.toString(e);if(u=s,u.isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}};H.getHighBits=function(){return this.high};H.getHighBitsUnsigned=function(){return this.high>>>0};H.getLowBits=function(){return this.low};H.getLowBitsUnsigned=function(){return this.low>>>0};H.getNumBitsAbs=function(){if(this.isNegative())return this.eq(It)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,n=31;n>0&&!(e&1<<n);n--);return this.high!=0?n+33:n+1};H.isZero=function(){return this.high===0&&this.low===0};H.eqz=H.isZero;H.isNegative=function(){return!this.unsigned&&this.high<0};H.isPositive=function(){return this.unsigned||this.high>=0};H.isOdd=function(){return(this.low&1)===1};H.isEven=function(){return(this.low&1)===0};H.equals=function(e){return xt(e)||(e=jt(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};H.eq=H.equals;H.notEquals=function(e){return!this.eq(e)};H.neq=H.notEquals;H.ne=H.notEquals;H.lessThan=function(e){return this.comp(e)<0};H.lt=H.lessThan;H.lessThanOrEqual=function(e){return this.comp(e)<=0};H.lte=H.lessThanOrEqual;H.le=H.lessThanOrEqual;H.greaterThan=function(e){return this.comp(e)>0};H.gt=H.greaterThan;H.greaterThanOrEqual=function(e){return this.comp(e)>=0};H.gte=H.greaterThanOrEqual;H.ge=H.greaterThanOrEqual;H.compare=function(e){if(xt(e)||(e=jt(e)),this.eq(e))return 0;var n=this.isNegative(),t=e.isNegative();return n&&!t?-1:!n&&t?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};H.comp=H.compare;H.negate=function(){return!this.unsigned&&this.eq(It)?It:this.not().add(vn)};H.neg=H.negate;H.add=function(e){xt(e)||(e=jt(e));var n=this.high>>>16,t=this.high&65535,o=this.low>>>16,i=this.low&65535,u=e.high>>>16,a=e.high&65535,s=e.low>>>16,l=e.low&65535,c=0,p=0,h=0,g=0;return g+=i+l,h+=g>>>16,g&=65535,h+=o+s,p+=h>>>16,h&=65535,p+=t+a,c+=p>>>16,p&=65535,c+=n+u,c&=65535,Me(h<<16|g,c<<16|p,this.unsigned)};H.subtract=function(e){return xt(e)||(e=jt(e)),this.add(e.neg())};H.sub=H.subtract;H.multiply=function(e){if(this.isZero())return this;if(xt(e)||(e=jt(e)),Mt){var n=Mt.mul(this.low,this.high,e.low,e.high);return Me(n,Mt.get_high(),this.unsigned)}if(e.isZero())return this.unsigned?Tr:Ht;if(this.eq(It))return e.isOdd()?It:Ht;if(e.eq(It))return this.isOdd()?It:Ht;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(Tl)&&e.lt(Tl))return Lt(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,o=this.high&65535,i=this.low>>>16,u=this.low&65535,a=e.high>>>16,s=e.high&65535,l=e.low>>>16,c=e.low&65535,p=0,h=0,g=0,x=0;return x+=u*c,g+=x>>>16,x&=65535,g+=i*c,h+=g>>>16,g&=65535,g+=u*l,h+=g>>>16,g&=65535,h+=o*c,p+=h>>>16,h&=65535,h+=i*l,p+=h>>>16,h&=65535,h+=u*s,p+=h>>>16,h&=65535,p+=t*c+o*l+i*s+u*a,p&=65535,Me(g<<16|x,p<<16|h,this.unsigned)};H.mul=H.multiply;H.divide=function(e){if(xt(e)||(e=jt(e)),e.isZero())throw Error("division by zero");if(Mt){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var n=(this.unsigned?Mt.div_u:Mt.div_s)(this.low,this.high,e.low,e.high);return Me(n,Mt.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Tr:Ht;var t,o,i;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Tr;if(e.gt(this.shru(1)))return Sl;i=Tr}else{if(this.eq(It)){if(e.eq(vn)||e.eq(_a))return It;if(e.eq(It))return vn;var u=this.shr(1);return t=u.div(e).shl(1),t.eq(Ht)?e.isNegative()?vn:_a:(o=this.sub(e.mul(t)),i=t.add(o.div(e)),i)}else if(e.eq(It))return this.unsigned?Tr:Ht;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=Ht}for(o=this;o.gte(e);){t=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(t)/Math.LN2),s=a<=48?1:ei(2,a-48),l=Lt(t),c=l.mul(e);c.isNegative()||c.gt(o);)t-=s,l=Lt(t,this.unsigned),c=l.mul(e);l.isZero()&&(l=vn),i=i.add(l),o=o.sub(c)}return i};H.div=H.divide;H.modulo=function(e){if(xt(e)||(e=jt(e)),Mt){var n=(this.unsigned?Mt.rem_u:Mt.rem_s)(this.low,this.high,e.low,e.high);return Me(n,Mt.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};H.mod=H.modulo;H.rem=H.modulo;H.not=function(){return Me(~this.low,~this.high,this.unsigned)};H.countLeadingZeros=function(){return this.high?Math.clz32(this.high):Math.clz32(this.low)+32};H.clz=H.countLeadingZeros;H.countTrailingZeros=function(){return this.low?bl(this.low):bl(this.high)+32};H.ctz=H.countTrailingZeros;H.and=function(e){return xt(e)||(e=jt(e)),Me(this.low&e.low,this.high&e.high,this.unsigned)};H.or=function(e){return xt(e)||(e=jt(e)),Me(this.low|e.low,this.high|e.high,this.unsigned)};H.xor=function(e){return xt(e)||(e=jt(e)),Me(this.low^e.low,this.high^e.high,this.unsigned)};H.shiftLeft=function(e){return xt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Me(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Me(0,this.low<<e-32,this.unsigned)};H.shl=H.shiftLeft;H.shiftRight=function(e){return xt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Me(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Me(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};H.shr=H.shiftRight;H.shiftRightUnsigned=function(e){return xt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Me(this.low>>>e|this.high<<32-e,this.high>>>e,this.unsigned):e===32?Me(this.high,0,this.unsigned):Me(this.high>>>e-32,0,this.unsigned)};H.shru=H.shiftRightUnsigned;H.shr_u=H.shiftRightUnsigned;H.rotateLeft=function(e){var n;return xt(e)&&(e=e.toInt()),(e&=63)===0?this:e===32?Me(this.high,this.low,this.unsigned):e<32?(n=32-e,Me(this.low<<e|this.high>>>n,this.high<<e|this.low>>>n,this.unsigned)):(e-=32,n=32-e,Me(this.high<<e|this.low>>>n,this.low<<e|this.high>>>n,this.unsigned))};H.rotl=H.rotateLeft;H.rotateRight=function(e){var n;return xt(e)&&(e=e.toInt()),(e&=63)===0?this:e===32?Me(this.high,this.low,this.unsigned):e<32?(n=32-e,Me(this.high<<n|this.low>>>e,this.low<<n|this.high>>>e,this.unsigned)):(e-=32,n=32-e,Me(this.low<<n|this.high>>>e,this.high<<n|this.low>>>e,this.unsigned))};H.rotr=H.rotateRight;H.toSigned=function(){return this.unsigned?Me(this.low,this.high,!1):this};H.toUnsigned=function(){return this.unsigned?this:Me(this.low,this.high,!0)};H.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};H.toBytesLE=function(){var e=this.high,n=this.low;return[n&255,n>>>8&255,n>>>16&255,n>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};H.toBytesBE=function(){var e=this.high,n=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,n>>>24,n>>>16&255,n>>>8&255,n&255]};He.fromBytes=function(e,n,t){return t?He.fromBytesLE(e,n):He.fromBytesBE(e,n)};He.fromBytesLE=function(e,n){return new He(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,n)};He.fromBytesBE=function(e,n){return new He(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],n)};$r=He});var P,ti=D(()=>{P={};P.Offset;P.Table;P.SIZEOF_SHORT=2;P.SIZEOF_INT=4;P.FILE_IDENTIFIER_LENGTH=4;P.SIZE_PREFIX_LENGTH=4;P.Encoding={UTF8_BYTES:1,UTF16_STRING:2};P.int32=new Int32Array(2);P.float32=new Float32Array(P.int32.buffer);P.float64=new Float64Array(P.int32.buffer);P.isLittleEndian=new Uint16Array(new Uint8Array([1,0]).buffer)[0]===1;P.Long=function(r,e){this.low=r|0,this.high=e|0};P.Long.create=function(r,e){return r==0&&e==0?P.Long.ZERO:new P.Long(r,e)};P.Long.prototype.toFloat64=function(){return(this.low>>>0)+this.high*4294967296};P.Long.prototype.equals=function(r){return this.low==r.low&&this.high==r.high};P.Long.ZERO=new P.Long(0,0);P.Builder=function(r){if(r)var e=r;else var e=1024;this.bb=P.ByteBuffer.allocate(e),this.space=e,this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1};P.Builder.prototype.clear=function(){this.bb.clear(),this.space=this.bb.capacity(),this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1};P.Builder.prototype.forceDefaults=function(r){this.force_defaults=r};P.Builder.prototype.dataBuffer=function(){return this.bb};P.Builder.prototype.asUint8Array=function(){return this.bb.bytes().subarray(this.bb.position(),this.bb.position()+this.offset())};P.Builder.prototype.prep=function(r,e){r>this.minalign&&(this.minalign=r);for(var n=~(this.bb.capacity()-this.space+e)+1&r-1;this.space<n+r+e;){var t=this.bb.capacity();this.bb=P.Builder.growByteBuffer(this.bb),this.space+=this.bb.capacity()-t}this.pad(n)};P.Builder.prototype.pad=function(r){for(var e=0;e<r;e++)this.bb.writeInt8(--this.space,0)};P.Builder.prototype.writeInt8=function(r){this.bb.writeInt8(this.space-=1,r)};P.Builder.prototype.writeInt16=function(r){this.bb.writeInt16(this.space-=2,r)};P.Builder.prototype.writeInt32=function(r){this.bb.writeInt32(this.space-=4,r)};P.Builder.prototype.writeInt64=function(r){this.bb.writeInt64(this.space-=8,r)};P.Builder.prototype.writeFloat32=function(r){this.bb.writeFloat32(this.space-=4,r)};P.Builder.prototype.writeFloat64=function(r){this.bb.writeFloat64(this.space-=8,r)};P.Builder.prototype.addInt8=function(r){this.prep(1,0),this.writeInt8(r)};P.Builder.prototype.addInt16=function(r){this.prep(2,0),this.writeInt16(r)};P.Builder.prototype.addInt32=function(r){this.prep(4,0),this.writeInt32(r)};P.Builder.prototype.addInt64=function(r){this.prep(8,0),this.writeInt64(r)};P.Builder.prototype.addFloat32=function(r){this.prep(4,0),this.writeFloat32(r)};P.Builder.prototype.addFloat64=function(r){this.prep(8,0),this.writeFloat64(r)};P.Builder.prototype.addFieldInt8=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt8(e),this.slot(r))};P.Builder.prototype.addFieldInt16=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt16(e),this.slot(r))};P.Builder.prototype.addFieldInt32=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt32(e),this.slot(r))};P.Builder.prototype.addFieldInt64=function(r,e,n){(this.force_defaults||!e.equals(n))&&(this.addInt64(e),this.slot(r))};P.Builder.prototype.addFieldFloat32=function(r,e,n){(this.force_defaults||e!=n)&&(this.addFloat32(e),this.slot(r))};P.Builder.prototype.addFieldFloat64=function(r,e,n){(this.force_defaults||e!=n)&&(this.addFloat64(e),this.slot(r))};P.Builder.prototype.addFieldOffset=function(r,e,n){(this.force_defaults||e!=n)&&(this.addOffset(e),this.slot(r))};P.Builder.prototype.addFieldStruct=function(r,e,n){e!=n&&(this.nested(e),this.slot(r))};P.Builder.prototype.nested=function(r){if(r!=this.offset())throw new Error("FlatBuffers: struct must be serialized inline.")};P.Builder.prototype.notNested=function(){if(this.isNested)throw new Error("FlatBuffers: object serialization must not be nested.")};P.Builder.prototype.slot=function(r){this.vtable[r]=this.offset()};P.Builder.prototype.offset=function(){return this.bb.capacity()-this.space};P.Builder.growByteBuffer=function(r){var e=r.capacity();if(e&3221225472)throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");var n=e<<1,t=P.ByteBuffer.allocate(n);return t.setPosition(n-e),t.bytes().set(r.bytes(),n-e),t};P.Builder.prototype.addOffset=function(r){this.prep(P.SIZEOF_INT,0),this.writeInt32(this.offset()-r+P.SIZEOF_INT)};P.Builder.prototype.startObject=function(r){this.notNested(),this.vtable==null&&(this.vtable=[]),this.vtable_in_use=r;for(var e=0;e<r;e++)this.vtable[e]=0;this.isNested=!0,this.object_start=this.offset()};P.Builder.prototype.endObject=function(){if(this.vtable==null||!this.isNested)throw new Error("FlatBuffers: endObject called without startObject");this.addInt32(0);for(var r=this.offset(),e=this.vtable_in_use-1;e>=0&&this.vtable[e]==0;e--);for(var n=e+1;e>=0;e--)this.addInt16(this.vtable[e]!=0?r-this.vtable[e]:0);var t=2;this.addInt16(r-this.object_start);var o=(n+t)*P.SIZEOF_SHORT;this.addInt16(o);var i=0,u=this.space;e:for(e=0;e<this.vtables.length;e++){var a=this.bb.capacity()-this.vtables[e];if(o==this.bb.readInt16(a)){for(var s=P.SIZEOF_SHORT;s<o;s+=P.SIZEOF_SHORT)if(this.bb.readInt16(u+s)!=this.bb.readInt16(a+s))continue e;i=this.vtables[e];break}}return i?(this.space=this.bb.capacity()-r,this.bb.writeInt32(this.space,i-r)):(this.vtables.push(this.offset()),this.bb.writeInt32(this.bb.capacity()-r,this.offset()-r)),this.isNested=!1,r};P.Builder.prototype.finish=function(r,e,n){var t=n?P.SIZE_PREFIX_LENGTH:0;if(e){var o=e;if(this.prep(this.minalign,P.SIZEOF_INT+P.FILE_IDENTIFIER_LENGTH+t),o.length!=P.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+P.FILE_IDENTIFIER_LENGTH);for(var i=P.FILE_IDENTIFIER_LENGTH-1;i>=0;i--)this.writeInt8(o.charCodeAt(i))}this.prep(this.minalign,P.SIZEOF_INT+t),this.addOffset(r),t&&this.addInt32(this.bb.capacity()-this.space),this.bb.setPosition(this.space)};P.Builder.prototype.finishSizePrefixed=function(r,e){this.finish(r,e,!0)};P.Builder.prototype.requiredField=function(r,e){var n=this.bb.capacity()-r,t=n-this.bb.readInt32(n),o=this.bb.readInt16(t+e)!=0;if(!o)throw new Error("FlatBuffers: field "+e+" must be set")};P.Builder.prototype.startVector=function(r,e,n){this.notNested(),this.vector_num_elems=e,this.prep(P.SIZEOF_INT,r*e),this.prep(n,r*e)};P.Builder.prototype.endVector=function(){return this.writeInt32(this.vector_num_elems),this.offset()};P.Builder.prototype.createString=function(r){if(r instanceof Uint8Array)var e=r;else for(var e=[],n=0;n<r.length;){var t,o=r.charCodeAt(n++);if(o<55296||o>=56320)t=o;else{var i=r.charCodeAt(n++);t=(o<<10)+i+(65536-56623104-56320)}t<128?e.push(t):(t<2048?e.push(t>>6&31|192):(t<65536?e.push(t>>12&15|224):e.push(t>>18&7|240,t>>12&63|128),e.push(t>>6&63|128)),e.push(t&63|128))}this.addInt8(0),this.startVector(1,e.length,1),this.bb.setPosition(this.space-=e.length);for(var n=0,u=this.space,a=this.bb.bytes();n<e.length;n++)a[u++]=e[n];return this.endVector()};P.Builder.prototype.createLong=function(r,e){return P.Long.create(r,e)};P.ByteBuffer=function(r){this.bytes_=r,this.position_=0};P.ByteBuffer.allocate=function(r){return new P.ByteBuffer(new Uint8Array(r))};P.ByteBuffer.prototype.clear=function(){this.position_=0};P.ByteBuffer.prototype.bytes=function(){return this.bytes_};P.ByteBuffer.prototype.position=function(){return this.position_};P.ByteBuffer.prototype.setPosition=function(r){this.position_=r};P.ByteBuffer.prototype.capacity=function(){return this.bytes_.length};P.ByteBuffer.prototype.readInt8=function(r){return this.readUint8(r)<<24>>24};P.ByteBuffer.prototype.readUint8=function(r){return this.bytes_[r]};P.ByteBuffer.prototype.readInt16=function(r){return this.readUint16(r)<<16>>16};P.ByteBuffer.prototype.readUint16=function(r){return this.bytes_[r]|this.bytes_[r+1]<<8};P.ByteBuffer.prototype.readInt32=function(r){return this.bytes_[r]|this.bytes_[r+1]<<8|this.bytes_[r+2]<<16|this.bytes_[r+3]<<24};P.ByteBuffer.prototype.readUint32=function(r){return this.readInt32(r)>>>0};P.ByteBuffer.prototype.readInt64=function(r){return new P.Long(this.readInt32(r),this.readInt32(r+4))};P.ByteBuffer.prototype.readUint64=function(r){return new P.Long(this.readUint32(r),this.readUint32(r+4))};P.ByteBuffer.prototype.readFloat32=function(r){return P.int32[0]=this.readInt32(r),P.float32[0]};P.ByteBuffer.prototype.readFloat64=function(r){return P.int32[P.isLittleEndian?0:1]=this.readInt32(r),P.int32[P.isLittleEndian?1:0]=this.readInt32(r+4),P.float64[0]};P.ByteBuffer.prototype.writeInt8=function(r,e){this.bytes_[r]=e};P.ByteBuffer.prototype.writeUint8=function(r,e){this.bytes_[r]=e};P.ByteBuffer.prototype.writeInt16=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8};P.ByteBuffer.prototype.writeUint16=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8};P.ByteBuffer.prototype.writeInt32=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8,this.bytes_[r+2]=e>>16,this.bytes_[r+3]=e>>24};P.ByteBuffer.prototype.writeUint32=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8,this.bytes_[r+2]=e>>16,this.bytes_[r+3]=e>>24};P.ByteBuffer.prototype.writeInt64=function(r,e){this.writeInt32(r,e.low),this.writeInt32(r+4,e.high)};P.ByteBuffer.prototype.writeUint64=function(r,e){this.writeUint32(r,e.low),this.writeUint32(r+4,e.high)};P.ByteBuffer.prototype.writeFloat32=function(r,e){P.float32[0]=e,this.writeInt32(r,P.int32[0])};P.ByteBuffer.prototype.writeFloat64=function(r,e){P.float64[0]=e,this.writeInt32(r,P.int32[P.isLittleEndian?0:1]),this.writeInt32(r+4,P.int32[P.isLittleEndian?1:0])};P.ByteBuffer.prototype.getBufferIdentifier=function(){if(this.bytes_.length<this.position_+P.SIZEOF_INT+P.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");for(var r="",e=0;e<P.FILE_IDENTIFIER_LENGTH;e++)r+=String.fromCharCode(this.readInt8(this.position_+P.SIZEOF_INT+e));return r};P.ByteBuffer.prototype.__offset=function(r,e){var n=r-this.readInt32(r);return e<this.readInt16(n)?this.readInt16(n+e):0};P.ByteBuffer.prototype.__union=function(r,e){return r.bb_pos=e+this.readInt32(e),r.bb=this,r};P.ByteBuffer.prototype.__string=function(r,e){r+=this.readInt32(r);var n=this.readInt32(r),t="",o=0;if(r+=P.SIZEOF_INT,e===P.Encoding.UTF8_BYTES)return this.bytes_.subarray(r,r+n);for(;o<n;){var i,u=this.readUint8(r+o++);if(u<192)i=u;else{var a=this.readUint8(r+o++);if(u<224)i=(u&31)<<6|a&63;else{var s=this.readUint8(r+o++);if(u<240)i=(u&15)<<12|(a&63)<<6|s&63;else{var l=this.readUint8(r+o++);i=(u&7)<<18|(a&63)<<12|(s&63)<<6|l&63}}}i<65536?t+=String.fromCharCode(i):(i-=65536,t+=String.fromCharCode((i>>10)+55296,(i&1024-1)+56320))}return t};P.ByteBuffer.prototype.__indirect=function(r){return r+this.readInt32(r)};P.ByteBuffer.prototype.__vector=function(r){return r+this.readInt32(r)+P.SIZEOF_INT};P.ByteBuffer.prototype.__vector_len=function(r){return this.readInt32(r+this.readInt32(r))};P.ByteBuffer.prototype.__has_identifier=function(r){if(r.length!=P.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+P.FILE_IDENTIFIER_LENGTH);for(var e=0;e<P.FILE_IDENTIFIER_LENGTH;e++)if(r.charCodeAt(e)!=this.readInt8(this.position_+P.SIZEOF_INT+e))return!1;return!0};P.ByteBuffer.prototype.createLong=function(r,e){return P.Long.create(r,e)}});var ne,to=D(()=>{"use strict";ti();(e=>{let r;(t=>{let n;(i=>{let o;(E=>(E[E.UNDEFINED=0]="UNDEFINED",E[E.FLOAT=1]="FLOAT",E[E.INT=2]="INT",E[E.STRING=3]="STRING",E[E.TENSOR=4]="TENSOR",E[E.GRAPH=5]="GRAPH",E[E.FLOATS=6]="FLOATS",E[E.INTS=7]="INTS",E[E.STRINGS=8]="STRINGS",E[E.TENSORS=9]="TENSORS",E[E.GRAPHS=10]="GRAPHS",E[E.SPARSE_TENSOR=11]="SPARSE_TENSOR",E[E.SPARSE_TENSORS=12]="SPARSE_TENSORS"))(o=i.AttributeType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ne||={});(e=>{let r;(t=>{let n;(i=>{let o;(l=>(l[l.UNKNOWN=0]="UNKNOWN",l[l.VALUE=1]="VALUE",l[l.PARAM=2]="PARAM"))(o=i.DimensionValueType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ne||={});(e=>{let r;(t=>{let n;(i=>{let o;(R=>(R[R.UNDEFINED=0]="UNDEFINED",R[R.FLOAT=1]="FLOAT",R[R.UINT8=2]="UINT8",R[R.INT8=3]="INT8",R[R.UINT16=4]="UINT16",R[R.INT16=5]="INT16",R[R.INT32=6]="INT32",R[R.INT64=7]="INT64",R[R.STRING=8]="STRING",R[R.BOOL=9]="BOOL",R[R.FLOAT16=10]="FLOAT16",R[R.DOUBLE=11]="DOUBLE",R[R.UINT32=12]="UINT32",R[R.UINT64=13]="UINT64",R[R.COMPLEX64=14]="COMPLEX64",R[R.COMPLEX128=15]="COMPLEX128",R[R.BFLOAT16=16]="BFLOAT16",R[R.FLOAT8E4M3FN=17]="FLOAT8E4M3FN",R[R.FLOAT8E4M3FNUZ=18]="FLOAT8E4M3FNUZ",R[R.FLOAT8E5M2=19]="FLOAT8E5M2",R[R.FLOAT8E5M2FNUZ=20]="FLOAT8E5M2FNUZ"))(o=i.TensorDataType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ne||={});(e=>{let r;(t=>{let n;(i=>{let o;(s=>(s[s.Primitive=0]="Primitive",s[s.Fused=1]="Fused"))(o=i.NodeType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ne||={});(e=>{let r;(t=>{let n;(i=>{let o;(c=>(c[c.NONE=0]="NONE",c[c.tensor_type=1]="tensor_type",c[c.sequence_type=2]="sequence_type",c[c.map_type=3]="map_type"))(o=i.TypeInfoValue||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ne||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsShape(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsShape(a,s){return a.setPosition(a.position()+P.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}dim(a,s){let l=this.bb.__offset(this.bb_pos,4);return l?(s||new e.experimental.fbs.Dimension).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}dimLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}static startShape(a){a.startObject(1)}static addDim(a,s){a.addFieldOffset(0,s,0)}static createDimVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startDimVector(a,s){a.startVector(4,s,4)}static endShape(a){return a.endObject()}static createShape(a,s){return o.startShape(a),o.addDim(a,s),o.endShape(a)}}i.Shape=o})(n=t.fbs||={})})(r=e.experimental||={})})(ne||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsDimension(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsDimension(a,s){return a.setPosition(a.position()+P.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}value(a){let s=this.bb.__offset(this.bb_pos,4);return s?(a||new e.experimental.fbs.DimensionValue).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}denotation(a){let s=this.bb.__offset(this.bb_pos,6);return s?this.bb.__string(this.bb_pos+s,a):null}static startDimension(a){a.startObject(2)}static addValue(a,s){a.addFieldOffset(0,s,0)}static addDenotation(a,s){a.addFieldOffset(1,s,0)}static endDimension(a){return a.endObject()}static createDimension(a,s,l){return o.startDimension(a),o.addValue(a,s),o.addDenotation(a,l),o.endDimension(a)}}i.Dimension=o})(n=t.fbs||={})})(r=e.experimental||={})})(ne||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsDimensionValue(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsDimensionValue(a,s){return a.setPosition(a.position()+P.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}dimType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt8(this.bb_pos+a):0}dimValue(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}dimParam(a){let s=this.bb.__offset(this.bb_pos,8);return s?this.bb.__string(this.bb_pos+s,a):null}static startDimensionValue(a){a.startObject(3)}static addDimType(a,s){a.addFieldInt8(0,s,0)}static addDimValue(a,s){a.addFieldInt64(1,s,a.createLong(0,0))}static addDimParam(a,s){a.addFieldOffset(2,s,0)}static endDimensionValue(a){return a.endObject()}static createDimensionValue(a,s,l,c){return o.startDimensionValue(a),o.addDimType(a,s),o.addDimValue(a,l),o.addDimParam(a,c),o.endDimensionValue(a)}}i.DimensionValue=o})(n=t.fbs||={})})(r=e.experimental||={})})(ne||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsTensorTypeAndShape(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTensorTypeAndShape(a,s){return a.setPosition(a.position()+P.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}elemType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt32(this.bb_pos+a):0}shape(a){let s=this.bb.__offset(this.bb_pos,6);return s?(a||new e.experimental.fbs.Shape).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}static startTensorTypeAndShape(a){a.startObject(2)}static addElemType(a,s){a.addFieldInt32(0,s,0)}static addShape(a,s){a.addFieldOffset(1,s,0)}static endTensorTypeAndShape(a){return a.endObject()}static createTensorTypeAndShape(a,s,l){return o.startTensorTypeAndShape(a),o.addElemType(a,s),o.addShape(a,l),o.endTensorTypeAndShape(a)}}i.TensorTypeAndShape=o})(n=t.fbs||={})})(r=e.experimental||={})})(ne||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsMapType(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsMapType(a,s){return a.setPosition(a.position()+P.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}keyType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt32(this.bb_pos+a):0}valueType(a){let s=this.bb.__offset(this.bb_pos,6);return s?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}static startMapType(a){a.startObject(2)}static addKeyType(a,s){a.addFieldInt32(0,s,0)}static addValueType(a,s){a.addFieldOffset(1,s,0)}static endMapType(a){return a.endObject()}static createMapType(a,s,l){return o.startMapType(a),o.addKeyType(a,s),o.addValueType(a,l),o.endMapType(a)}}i.MapType=o})(n=t.fbs||={})})(r=e.experimental||={})})(ne||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsSequenceType(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSequenceType(a,s){return a.setPosition(a.position()+P.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}elemType(a){let s=this.bb.__offset(this.bb_pos,4);return s?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}static startSequenceType(a){a.startObject(1)}static addElemType(a,s){a.addFieldOffset(0,s,0)}static endSequenceType(a){return a.endObject()}static createSequenceType(a,s){return o.startSequenceType(a),o.addElemType(a,s),o.endSequenceType(a)}}i.SequenceType=o})(n=t.fbs||={})})(r=e.experimental||={})})(ne||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}nodeIndex(){return this.bb.readUint32(this.bb_pos)}srcArgIndex(){return this.bb.readInt32(this.bb_pos+4)}dstArgIndex(){return this.bb.readInt32(this.bb_pos+8)}static createEdgeEnd(a,s,l,c){return a.prep(4,12),a.writeInt32(c),a.writeInt32(l),a.writeInt32(s),a.offset()}}i.EdgeEnd=o})(n=t.fbs||={})})(r=e.experimental||={})})(ne||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsNodeEdge(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsNodeEdge(a,s){return a.setPosition(a.position()+P.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}nodeIndex(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readUint32(this.bb_pos+a):0}inputEdges(a,s){let l=this.bb.__offset(this.bb_pos,6);return l?(s||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+l)+a*12,this.bb):null}inputEdgesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}outputEdges(a,s){let l=this.bb.__offset(this.bb_pos,8);return l?(s||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+l)+a*12,this.bb):null}outputEdgesLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}static startNodeEdge(a){a.startObject(3)}static addNodeIndex(a,s){a.addFieldInt32(0,s,0)}static addInputEdges(a,s){a.addFieldOffset(1,s,0)}static startInputEdgesVector(a,s){a.startVector(12,s,4)}static addOutputEdges(a,s){a.addFieldOffset(2,s,0)}static startOutputEdgesVector(a,s){a.startVector(12,s,4)}static endNodeEdge(a){return a.endObject()}static createNodeEdge(a,s,l,c){return o.startNodeEdge(a),o.addNodeIndex(a,s),o.addInputEdges(a,l),o.addOutputEdges(a,c),o.endNodeEdge(a)}}i.NodeEdge=o})(n=t.fbs||={})})(r=e.experimental||={})})(ne||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsNode(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsNode(a,s){return a.setPosition(a.position()+P.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}docString(a){let s=this.bb.__offset(this.bb_pos,6);return s?this.bb.__string(this.bb_pos+s,a):null}domain(a){let s=this.bb.__offset(this.bb_pos,8);return s?this.bb.__string(this.bb_pos+s,a):null}sinceVersion(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readInt32(this.bb_pos+a):0}index(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.readUint32(this.bb_pos+a):0}opType(a){let s=this.bb.__offset(this.bb_pos,14);return s?this.bb.__string(this.bb_pos+s,a):null}type(){let a=this.bb.__offset(this.bb_pos,16);return a?this.bb.readInt32(this.bb_pos+a):0}executionProviderType(a){let s=this.bb.__offset(this.bb_pos,18);return s?this.bb.__string(this.bb_pos+s,a):null}inputs(a,s){let l=this.bb.__offset(this.bb_pos,20);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}inputsLength(){let a=this.bb.__offset(this.bb_pos,20);return a?this.bb.__vector_len(this.bb_pos+a):0}outputs(a,s){let l=this.bb.__offset(this.bb_pos,22);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}outputsLength(){let a=this.bb.__offset(this.bb_pos,22);return a?this.bb.__vector_len(this.bb_pos+a):0}attributes(a,s){let l=this.bb.__offset(this.bb_pos,24);return l?(s||new e.experimental.fbs.Attribute).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}attributesLength(){let a=this.bb.__offset(this.bb_pos,24);return a?this.bb.__vector_len(this.bb_pos+a):0}inputArgCounts(a){let s=this.bb.__offset(this.bb_pos,26);return s?this.bb.readInt32(this.bb.__vector(this.bb_pos+s)+a*4):0}inputArgCountsLength(){let a=this.bb.__offset(this.bb_pos,26);return a?this.bb.__vector_len(this.bb_pos+a):0}inputArgCountsArray(){let a=this.bb.__offset(this.bb_pos,26);return a?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}implicitInputs(a,s){let l=this.bb.__offset(this.bb_pos,28);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}implicitInputsLength(){let a=this.bb.__offset(this.bb_pos,28);return a?this.bb.__vector_len(this.bb_pos+a):0}static startNode(a){a.startObject(13)}static addName(a,s){a.addFieldOffset(0,s,0)}static addDocString(a,s){a.addFieldOffset(1,s,0)}static addDomain(a,s){a.addFieldOffset(2,s,0)}static addSinceVersion(a,s){a.addFieldInt32(3,s,0)}static addIndex(a,s){a.addFieldInt32(4,s,0)}static addOpType(a,s){a.addFieldOffset(5,s,0)}static addType(a,s){a.addFieldInt32(6,s,0)}static addExecutionProviderType(a,s){a.addFieldOffset(7,s,0)}static addInputs(a,s){a.addFieldOffset(8,s,0)}static createInputsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startInputsVector(a,s){a.startVector(4,s,4)}static addOutputs(a,s){a.addFieldOffset(9,s,0)}static createOutputsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startOutputsVector(a,s){a.startVector(4,s,4)}static addAttributes(a,s){a.addFieldOffset(10,s,0)}static createAttributesVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startAttributesVector(a,s){a.startVector(4,s,4)}static addInputArgCounts(a,s){a.addFieldOffset(11,s,0)}static createInputArgCountsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addInt32(s[l]);return a.endVector()}static startInputArgCountsVector(a,s){a.startVector(4,s,4)}static addImplicitInputs(a,s){a.addFieldOffset(12,s,0)}static createImplicitInputsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startImplicitInputsVector(a,s){a.startVector(4,s,4)}static endNode(a){return a.endObject()}static createNode(a,s,l,c,p,h,g,x,b,w,S,O,E,B){return o.startNode(a),o.addName(a,s),o.addDocString(a,l),o.addDomain(a,c),o.addSinceVersion(a,p),o.addIndex(a,h),o.addOpType(a,g),o.addType(a,x),o.addExecutionProviderType(a,b),o.addInputs(a,w),o.addOutputs(a,S),o.addAttributes(a,O),o.addInputArgCounts(a,E),o.addImplicitInputs(a,B),o.endNode(a)}}i.Node=o})(n=t.fbs||={})})(r=e.experimental||={})})(ne||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsValueInfo(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsValueInfo(a,s){return a.setPosition(a.position()+P.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}docString(a){let s=this.bb.__offset(this.bb_pos,6);return s?this.bb.__string(this.bb_pos+s,a):null}type(a){let s=this.bb.__offset(this.bb_pos,8);return s?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}static startValueInfo(a){a.startObject(3)}static addName(a,s){a.addFieldOffset(0,s,0)}static addDocString(a,s){a.addFieldOffset(1,s,0)}static addType(a,s){a.addFieldOffset(2,s,0)}static endValueInfo(a){return a.endObject()}static createValueInfo(a,s,l,c){return o.startValueInfo(a),o.addName(a,s),o.addDocString(a,l),o.addType(a,c),o.endValueInfo(a)}}i.ValueInfo=o})(n=t.fbs||={})})(r=e.experimental||={})})(ne||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsTypeInfo(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTypeInfo(a,s){return a.setPosition(a.position()+P.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}denotation(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}valueType(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readUint8(this.bb_pos+a):0}value(a){let s=this.bb.__offset(this.bb_pos,8);return s?this.bb.__union(a,this.bb_pos+s):null}static startTypeInfo(a){a.startObject(3)}static addDenotation(a,s){a.addFieldOffset(0,s,0)}static addValueType(a,s){a.addFieldInt8(1,s,0)}static addValue(a,s){a.addFieldOffset(2,s,0)}static endTypeInfo(a){return a.endObject()}static createTypeInfo(a,s,l,c){return o.startTypeInfo(a),o.addDenotation(a,s),o.addValueType(a,l),o.addValue(a,c),o.endTypeInfo(a)}}i.TypeInfo=o})(n=t.fbs||={})})(r=e.experimental||={})})(ne||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsOperatorSetId(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsOperatorSetId(a,s){return a.setPosition(a.position()+P.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}domain(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}version(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}static startOperatorSetId(a){a.startObject(2)}static addDomain(a,s){a.addFieldOffset(0,s,0)}static addVersion(a,s){a.addFieldInt64(1,s,a.createLong(0,0))}static endOperatorSetId(a){return a.endObject()}static createOperatorSetId(a,s,l){return o.startOperatorSetId(a),o.addDomain(a,s),o.addVersion(a,l),o.endOperatorSetId(a)}}i.OperatorSetId=o})(n=t.fbs||={})})(r=e.experimental||={})})(ne||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsTensor(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTensor(a,s){return a.setPosition(a.position()+P.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}docString(a){let s=this.bb.__offset(this.bb_pos,6);return s?this.bb.__string(this.bb_pos+s,a):null}dims(a){let s=this.bb.__offset(this.bb_pos,8);return s?this.bb.readInt64(this.bb.__vector(this.bb_pos+s)+a*8):this.bb.createLong(0,0)}dimsLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}dataType(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readInt32(this.bb_pos+a):0}rawData(a){let s=this.bb.__offset(this.bb_pos,12);return s?this.bb.readUint8(this.bb.__vector(this.bb_pos+s)+a):0}rawDataLength(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.__vector_len(this.bb_pos+a):0}rawDataArray(){let a=this.bb.__offset(this.bb_pos,12);return a?new Uint8Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}stringData(a,s){let l=this.bb.__offset(this.bb_pos,14);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}stringDataLength(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.__vector_len(this.bb_pos+a):0}static startTensor(a){a.startObject(6)}static addName(a,s){a.addFieldOffset(0,s,0)}static addDocString(a,s){a.addFieldOffset(1,s,0)}static addDims(a,s){a.addFieldOffset(2,s,0)}static createDimsVector(a,s){a.startVector(8,s.length,8);for(let l=s.length-1;l>=0;l--)a.addInt64(s[l]);return a.endVector()}static startDimsVector(a,s){a.startVector(8,s,8)}static addDataType(a,s){a.addFieldInt32(3,s,0)}static addRawData(a,s){a.addFieldOffset(4,s,0)}static createRawDataVector(a,s){a.startVector(1,s.length,1);for(let l=s.length-1;l>=0;l--)a.addInt8(s[l]);return a.endVector()}static startRawDataVector(a,s){a.startVector(1,s,1)}static addStringData(a,s){a.addFieldOffset(5,s,0)}static createStringDataVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startStringDataVector(a,s){a.startVector(4,s,4)}static endTensor(a){return a.endObject()}static createTensor(a,s,l,c,p,h,g){return o.startTensor(a),o.addName(a,s),o.addDocString(a,l),o.addDims(a,c),o.addDataType(a,p),o.addRawData(a,h),o.addStringData(a,g),o.endTensor(a)}}i.Tensor=o})(n=t.fbs||={})})(r=e.experimental||={})})(ne||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsSparseTensor(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSparseTensor(a,s){return a.setPosition(a.position()+P.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}values(a){let s=this.bb.__offset(this.bb_pos,4);return s?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}indices(a){let s=this.bb.__offset(this.bb_pos,6);return s?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}dims(a){let s=this.bb.__offset(this.bb_pos,8);return s?this.bb.readInt64(this.bb.__vector(this.bb_pos+s)+a*8):this.bb.createLong(0,0)}dimsLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}static startSparseTensor(a){a.startObject(3)}static addValues(a,s){a.addFieldOffset(0,s,0)}static addIndices(a,s){a.addFieldOffset(1,s,0)}static addDims(a,s){a.addFieldOffset(2,s,0)}static createDimsVector(a,s){a.startVector(8,s.length,8);for(let l=s.length-1;l>=0;l--)a.addInt64(s[l]);return a.endVector()}static startDimsVector(a,s){a.startVector(8,s,8)}static endSparseTensor(a){return a.endObject()}static createSparseTensor(a,s,l,c){return o.startSparseTensor(a),o.addValues(a,s),o.addIndices(a,l),o.addDims(a,c),o.endSparseTensor(a)}}i.SparseTensor=o})(n=t.fbs||={})})(r=e.experimental||={})})(ne||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsAttribute(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsAttribute(a,s){return a.setPosition(a.position()+P.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}docString(a){let s=this.bb.__offset(this.bb_pos,6);return s?this.bb.__string(this.bb_pos+s,a):null}type(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.readInt32(this.bb_pos+a):0}f(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readFloat32(this.bb_pos+a):0}i(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}s(a){let s=this.bb.__offset(this.bb_pos,14);return s?this.bb.__string(this.bb_pos+s,a):null}t(a){let s=this.bb.__offset(this.bb_pos,16);return s?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}g(a){let s=this.bb.__offset(this.bb_pos,18);return s?(a||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}floats(a){let s=this.bb.__offset(this.bb_pos,20);return s?this.bb.readFloat32(this.bb.__vector(this.bb_pos+s)+a*4):0}floatsLength(){let a=this.bb.__offset(this.bb_pos,20);return a?this.bb.__vector_len(this.bb_pos+a):0}floatsArray(){let a=this.bb.__offset(this.bb_pos,20);return a?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}ints(a){let s=this.bb.__offset(this.bb_pos,22);return s?this.bb.readInt64(this.bb.__vector(this.bb_pos+s)+a*8):this.bb.createLong(0,0)}intsLength(){let a=this.bb.__offset(this.bb_pos,22);return a?this.bb.__vector_len(this.bb_pos+a):0}strings(a,s){let l=this.bb.__offset(this.bb_pos,24);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}stringsLength(){let a=this.bb.__offset(this.bb_pos,24);return a?this.bb.__vector_len(this.bb_pos+a):0}tensors(a,s){let l=this.bb.__offset(this.bb_pos,26);return l?(s||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}tensorsLength(){let a=this.bb.__offset(this.bb_pos,26);return a?this.bb.__vector_len(this.bb_pos+a):0}graphs(a,s){let l=this.bb.__offset(this.bb_pos,28);return l?(s||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}graphsLength(){let a=this.bb.__offset(this.bb_pos,28);return a?this.bb.__vector_len(this.bb_pos+a):0}static startAttribute(a){a.startObject(13)}static addName(a,s){a.addFieldOffset(0,s,0)}static addDocString(a,s){a.addFieldOffset(1,s,0)}static addType(a,s){a.addFieldInt32(2,s,0)}static addF(a,s){a.addFieldFloat32(3,s,0)}static addI(a,s){a.addFieldInt64(4,s,a.createLong(0,0))}static addS(a,s){a.addFieldOffset(5,s,0)}static addT(a,s){a.addFieldOffset(6,s,0)}static addG(a,s){a.addFieldOffset(7,s,0)}static addFloats(a,s){a.addFieldOffset(8,s,0)}static createFloatsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addFloat32(s[l]);return a.endVector()}static startFloatsVector(a,s){a.startVector(4,s,4)}static addInts(a,s){a.addFieldOffset(9,s,0)}static createIntsVector(a,s){a.startVector(8,s.length,8);for(let l=s.length-1;l>=0;l--)a.addInt64(s[l]);return a.endVector()}static startIntsVector(a,s){a.startVector(8,s,8)}static addStrings(a,s){a.addFieldOffset(10,s,0)}static createStringsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startStringsVector(a,s){a.startVector(4,s,4)}static addTensors(a,s){a.addFieldOffset(11,s,0)}static createTensorsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startTensorsVector(a,s){a.startVector(4,s,4)}static addGraphs(a,s){a.addFieldOffset(12,s,0)}static createGraphsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startGraphsVector(a,s){a.startVector(4,s,4)}static endAttribute(a){return a.endObject()}static createAttribute(a,s,l,c,p,h,g,x,b,w,S,O,E,B){return o.startAttribute(a),o.addName(a,s),o.addDocString(a,l),o.addType(a,c),o.addF(a,p),o.addI(a,h),o.addS(a,g),o.addT(a,x),o.addG(a,b),o.addFloats(a,w),o.addInts(a,S),o.addStrings(a,O),o.addTensors(a,E),o.addGraphs(a,B),o.endAttribute(a)}}i.Attribute=o})(n=t.fbs||={})})(r=e.experimental||={})})(ne||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsGraph(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsGraph(a,s){return a.setPosition(a.position()+P.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}initializers(a,s){let l=this.bb.__offset(this.bb_pos,4);return l?(s||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}initializersLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}nodeArgs(a,s){let l=this.bb.__offset(this.bb_pos,6);return l?(s||new e.experimental.fbs.ValueInfo).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodeArgsLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}nodes(a,s){let l=this.bb.__offset(this.bb_pos,8);return l?(s||new e.experimental.fbs.Node).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodesLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}maxNodeIndex(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readUint32(this.bb_pos+a):0}nodeEdges(a,s){let l=this.bb.__offset(this.bb_pos,12);return l?(s||new e.experimental.fbs.NodeEdge).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodeEdgesLength(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.__vector_len(this.bb_pos+a):0}inputs(a,s){let l=this.bb.__offset(this.bb_pos,14);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}inputsLength(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.__vector_len(this.bb_pos+a):0}outputs(a,s){let l=this.bb.__offset(this.bb_pos,16);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}outputsLength(){let a=this.bb.__offset(this.bb_pos,16);return a?this.bb.__vector_len(this.bb_pos+a):0}sparseInitializers(a,s){let l=this.bb.__offset(this.bb_pos,18);return l?(s||new e.experimental.fbs.SparseTensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}sparseInitializersLength(){let a=this.bb.__offset(this.bb_pos,18);return a?this.bb.__vector_len(this.bb_pos+a):0}static startGraph(a){a.startObject(8)}static addInitializers(a,s){a.addFieldOffset(0,s,0)}static createInitializersVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startInitializersVector(a,s){a.startVector(4,s,4)}static addNodeArgs(a,s){a.addFieldOffset(1,s,0)}static createNodeArgsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startNodeArgsVector(a,s){a.startVector(4,s,4)}static addNodes(a,s){a.addFieldOffset(2,s,0)}static createNodesVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startNodesVector(a,s){a.startVector(4,s,4)}static addMaxNodeIndex(a,s){a.addFieldInt32(3,s,0)}static addNodeEdges(a,s){a.addFieldOffset(4,s,0)}static createNodeEdgesVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startNodeEdgesVector(a,s){a.startVector(4,s,4)}static addInputs(a,s){a.addFieldOffset(5,s,0)}static createInputsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startInputsVector(a,s){a.startVector(4,s,4)}static addOutputs(a,s){a.addFieldOffset(6,s,0)}static createOutputsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startOutputsVector(a,s){a.startVector(4,s,4)}static addSparseInitializers(a,s){a.addFieldOffset(7,s,0)}static createSparseInitializersVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startSparseInitializersVector(a,s){a.startVector(4,s,4)}static endGraph(a){return a.endObject()}static createGraph(a,s,l,c,p,h,g,x,b){return o.startGraph(a),o.addInitializers(a,s),o.addNodeArgs(a,l),o.addNodes(a,c),o.addMaxNodeIndex(a,p),o.addNodeEdges(a,h),o.addInputs(a,g),o.addOutputs(a,x),o.addSparseInitializers(a,b),o.endGraph(a)}}i.Graph=o})(n=t.fbs||={})})(r=e.experimental||={})})(ne||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsModel(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsModel(a,s){return a.setPosition(a.position()+P.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}irVersion(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}opsetImport(a,s){let l=this.bb.__offset(this.bb_pos,6);return l?(s||new e.experimental.fbs.OperatorSetId).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}opsetImportLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}producerName(a){let s=this.bb.__offset(this.bb_pos,8);return s?this.bb.__string(this.bb_pos+s,a):null}producerVersion(a){let s=this.bb.__offset(this.bb_pos,10);return s?this.bb.__string(this.bb_pos+s,a):null}domain(a){let s=this.bb.__offset(this.bb_pos,12);return s?this.bb.__string(this.bb_pos+s,a):null}modelVersion(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}docString(a){let s=this.bb.__offset(this.bb_pos,16);return s?this.bb.__string(this.bb_pos+s,a):null}graph(a){let s=this.bb.__offset(this.bb_pos,18);return s?(a||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}graphDocString(a){let s=this.bb.__offset(this.bb_pos,20);return s?this.bb.__string(this.bb_pos+s,a):null}static startModel(a){a.startObject(9)}static addIrVersion(a,s){a.addFieldInt64(0,s,a.createLong(0,0))}static addOpsetImport(a,s){a.addFieldOffset(1,s,0)}static createOpsetImportVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startOpsetImportVector(a,s){a.startVector(4,s,4)}static addProducerName(a,s){a.addFieldOffset(2,s,0)}static addProducerVersion(a,s){a.addFieldOffset(3,s,0)}static addDomain(a,s){a.addFieldOffset(4,s,0)}static addModelVersion(a,s){a.addFieldInt64(5,s,a.createLong(0,0))}static addDocString(a,s){a.addFieldOffset(6,s,0)}static addGraph(a,s){a.addFieldOffset(7,s,0)}static addGraphDocString(a,s){a.addFieldOffset(8,s,0)}static endModel(a){return a.endObject()}static createModel(a,s,l,c,p,h,g,x,b,w){return o.startModel(a),o.addIrVersion(a,s),o.addOpsetImport(a,l),o.addProducerName(a,c),o.addProducerVersion(a,p),o.addDomain(a,h),o.addModelVersion(a,g),o.addDocString(a,x),o.addGraph(a,b),o.addGraphDocString(a,w),o.endModel(a)}}i.Model=o})(n=t.fbs||={})})(r=e.experimental||={})})(ne||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsKernelCreateInfos(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsKernelCreateInfos(a,s){return a.setPosition(a.position()+P.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}nodeIndices(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.readUint32(this.bb.__vector(this.bb_pos+s)+a*4):0}nodeIndicesLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}nodeIndicesArray(){let a=this.bb.__offset(this.bb_pos,4);return a?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}kernelDefHashes(a){let s=this.bb.__offset(this.bb_pos,6);return s?this.bb.readUint64(this.bb.__vector(this.bb_pos+s)+a*8):this.bb.createLong(0,0)}kernelDefHashesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}static startKernelCreateInfos(a){a.startObject(2)}static addNodeIndices(a,s){a.addFieldOffset(0,s,0)}static createNodeIndicesVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addInt32(s[l]);return a.endVector()}static startNodeIndicesVector(a,s){a.startVector(4,s,4)}static addKernelDefHashes(a,s){a.addFieldOffset(1,s,0)}static createKernelDefHashesVector(a,s){a.startVector(8,s.length,8);for(let l=s.length-1;l>=0;l--)a.addInt64(s[l]);return a.endVector()}static startKernelDefHashesVector(a,s){a.startVector(8,s,8)}static endKernelCreateInfos(a){return a.endObject()}static createKernelCreateInfos(a,s,l){return o.startKernelCreateInfos(a),o.addNodeIndices(a,s),o.addKernelDefHashes(a,l),o.endKernelCreateInfos(a)}}i.KernelCreateInfos=o})(n=t.fbs||={})})(r=e.experimental||={})})(ne||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsSubGraphSessionState(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSubGraphSessionState(a,s){return a.setPosition(a.position()+P.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}graphId(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}sessionState(a){let s=this.bb.__offset(this.bb_pos,6);return s?(a||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}static startSubGraphSessionState(a){a.startObject(2)}static addGraphId(a,s){a.addFieldOffset(0,s,0)}static addSessionState(a,s){a.addFieldOffset(1,s,0)}static endSubGraphSessionState(a){let s=a.endObject();return a.requiredField(s,4),s}static createSubGraphSessionState(a,s,l){return o.startSubGraphSessionState(a),o.addGraphId(a,s),o.addSessionState(a,l),o.endSubGraphSessionState(a)}}i.SubGraphSessionState=o})(n=t.fbs||={})})(r=e.experimental||={})})(ne||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsSessionState(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSessionState(a,s){return a.setPosition(a.position()+P.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}kernels(a){let s=this.bb.__offset(this.bb_pos,4);return s?(a||new e.experimental.fbs.KernelCreateInfos).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}subGraphSessionStates(a,s){let l=this.bb.__offset(this.bb_pos,6);return l?(s||new e.experimental.fbs.SubGraphSessionState).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}subGraphSessionStatesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}static startSessionState(a){a.startObject(2)}static addKernels(a,s){a.addFieldOffset(0,s,0)}static addSubGraphSessionStates(a,s){a.addFieldOffset(1,s,0)}static createSubGraphSessionStatesVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startSubGraphSessionStatesVector(a,s){a.startVector(4,s,4)}static endSessionState(a){return a.endObject()}static createSessionState(a,s,l){return o.startSessionState(a),o.addKernels(a,s),o.addSubGraphSessionStates(a,l),o.endSessionState(a)}}i.SessionState=o})(n=t.fbs||={})})(r=e.experimental||={})})(ne||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsInferenceSession(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsInferenceSession(a,s){return a.setPosition(a.position()+P.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static bufferHasIdentifier(a){return a.__has_identifier("ORTM")}ortVersion(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}model(a){let s=this.bb.__offset(this.bb_pos,6);return s?(a||new e.experimental.fbs.Model).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}sessionState(a){let s=this.bb.__offset(this.bb_pos,8);return s?(a||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}static startInferenceSession(a){a.startObject(3)}static addOrtVersion(a,s){a.addFieldOffset(0,s,0)}static addModel(a,s){a.addFieldOffset(1,s,0)}static addSessionState(a,s){a.addFieldOffset(2,s,0)}static endInferenceSession(a){return a.endObject()}static finishInferenceSessionBuffer(a,s){a.finish(s,"ORTM")}static finishSizePrefixedInferenceSessionBuffer(a,s){a.finish(s,"ORTM",!0)}static createInferenceSession(a,s,l,c){return o.startInferenceSession(a),o.addOrtVersion(a,s),o.addModel(a,l),o.addSessionState(a,c),o.endInferenceSession(a)}}i.InferenceSession=o})(n=t.fbs||={})})(r=e.experimental||={})})(ne||={})});var Ol=Ue((FT,Al)=>{"use strict";Al.exports=Fy;function Fy(r,e){for(var n=new Array(arguments.length-1),t=0,o=2,i=!0;o<arguments.length;)n[t++]=arguments[o++];return new Promise(function(a,s){n[t]=function(c){if(i)if(i=!1,c)s(c);else{for(var p=new Array(arguments.length-1),h=0;h<p.length;)p[h++]=arguments[h];a.apply(null,p)}};try{r.apply(e||null,n)}catch(l){i&&(i=!1,s(l))}})}});var Dl=Ue(Pl=>{"use strict";var ri=Pl;ri.length=function(e){var n=e.length;if(!n)return 0;for(var t=0;--n%4>1&&e.charAt(n)==="=";)++t;return Math.ceil(e.length*3)/4-t};var Tn=new Array(64),Cl=new Array(123);for(qt=0;qt<64;)Cl[Tn[qt]=qt<26?qt+65:qt<52?qt+71:qt<62?qt-4:qt-59|43]=qt++;var qt;ri.encode=function(e,n,t){for(var o=null,i=[],u=0,a=0,s;n<t;){var l=e[n++];switch(a){case 0:i[u++]=Tn[l>>2],s=(l&3)<<4,a=1;break;case 1:i[u++]=Tn[s|l>>4],s=(l&15)<<2,a=2;break;case 2:i[u++]=Tn[s|l>>6],i[u++]=Tn[l&63],a=0;break}u>8191&&((o||(o=[])).push(String.fromCharCode.apply(String,i)),u=0)}return a&&(i[u++]=Tn[s],i[u++]=61,a===1&&(i[u++]=61)),o?(u&&o.push(String.fromCharCode.apply(String,i.slice(0,u))),o.join("")):String.fromCharCode.apply(String,i.slice(0,u))};var El="invalid encoding";ri.decode=function(e,n,t){for(var o=t,i=0,u,a=0;a<e.length;){var s=e.charCodeAt(a++);if(s===61&&i>1)break;if((s=Cl[s])===void 0)throw Error(El);switch(i){case 0:u=s,i=1;break;case 1:n[t++]=u<<2|(s&48)>>4,u=s,i=2;break;case 2:n[t++]=(u&15)<<4|(s&60)>>2,u=s,i=3;break;case 3:n[t++]=(u&3)<<6|s,i=0;break}}if(i===1)throw Error(El);return t-o};ri.test=function(e){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e)}});var Rl=Ue((WT,kl)=>{"use strict";kl.exports=ni;function ni(){this._listeners={}}ni.prototype.on=function(e,n,t){return(this._listeners[e]||(this._listeners[e]=[])).push({fn:n,ctx:t||this}),this};ni.prototype.off=function(e,n){if(e===void 0)this._listeners={};else if(n===void 0)this._listeners[e]=[];else for(var t=this._listeners[e],o=0;o<t.length;)t[o].fn===n?t.splice(o,1):++o;return this};ni.prototype.emit=function(e){var n=this._listeners[e];if(n){for(var t=[],o=1;o<arguments.length;)t.push(arguments[o++]);for(o=0;o<n.length;)n[o].fn.apply(n[o++].ctx,t)}return this}});var Gl=Ue((VT,Fl)=>{"use strict";Fl.exports=Bl(Bl);function Bl(r){return typeof Float32Array<"u"?function(){var e=new Float32Array([-0]),n=new Uint8Array(e.buffer),t=n[3]===128;function o(s,l,c){e[0]=s,l[c]=n[0],l[c+1]=n[1],l[c+2]=n[2],l[c+3]=n[3]}function i(s,l,c){e[0]=s,l[c]=n[3],l[c+1]=n[2],l[c+2]=n[1],l[c+3]=n[0]}r.writeFloatLE=t?o:i,r.writeFloatBE=t?i:o;function u(s,l){return n[0]=s[l],n[1]=s[l+1],n[2]=s[l+2],n[3]=s[l+3],e[0]}function a(s,l){return n[3]=s[l],n[2]=s[l+1],n[1]=s[l+2],n[0]=s[l+3],e[0]}r.readFloatLE=t?u:a,r.readFloatBE=t?a:u}():function(){function e(t,o,i,u){var a=o<0?1:0;if(a&&(o=-o),o===0)t(1/o>0?0:2147483648,i,u);else if(isNaN(o))t(2143289344,i,u);else if(o>34028234663852886e22)t((a<<31|2139095040)>>>0,i,u);else if(o<11754943508222875e-54)t((a<<31|Math.round(o/1401298464324817e-60))>>>0,i,u);else{var s=Math.floor(Math.log(o)/Math.LN2),l=Math.round(o*Math.pow(2,-s)*8388608)&8388607;t((a<<31|s+127<<23|l)>>>0,i,u)}}r.writeFloatLE=e.bind(null,Ml),r.writeFloatBE=e.bind(null,Ll);function n(t,o,i){var u=t(o,i),a=(u>>31)*2+1,s=u>>>23&255,l=u&8388607;return s===255?l?NaN:a*(1/0):s===0?a*1401298464324817e-60*l:a*Math.pow(2,s-150)*(l+8388608)}r.readFloatLE=n.bind(null,Nl),r.readFloatBE=n.bind(null,zl)}(),typeof Float64Array<"u"?function(){var e=new Float64Array([-0]),n=new Uint8Array(e.buffer),t=n[7]===128;function o(s,l,c){e[0]=s,l[c]=n[0],l[c+1]=n[1],l[c+2]=n[2],l[c+3]=n[3],l[c+4]=n[4],l[c+5]=n[5],l[c+6]=n[6],l[c+7]=n[7]}function i(s,l,c){e[0]=s,l[c]=n[7],l[c+1]=n[6],l[c+2]=n[5],l[c+3]=n[4],l[c+4]=n[3],l[c+5]=n[2],l[c+6]=n[1],l[c+7]=n[0]}r.writeDoubleLE=t?o:i,r.writeDoubleBE=t?i:o;function u(s,l){return n[0]=s[l],n[1]=s[l+1],n[2]=s[l+2],n[3]=s[l+3],n[4]=s[l+4],n[5]=s[l+5],n[6]=s[l+6],n[7]=s[l+7],e[0]}function a(s,l){return n[7]=s[l],n[6]=s[l+1],n[5]=s[l+2],n[4]=s[l+3],n[3]=s[l+4],n[2]=s[l+5],n[1]=s[l+6],n[0]=s[l+7],e[0]}r.readDoubleLE=t?u:a,r.readDoubleBE=t?a:u}():function(){function e(t,o,i,u,a,s){var l=u<0?1:0;if(l&&(u=-u),u===0)t(0,a,s+o),t(1/u>0?0:2147483648,a,s+i);else if(isNaN(u))t(0,a,s+o),t(2146959360,a,s+i);else if(u>17976931348623157e292)t(0,a,s+o),t((l<<31|2146435072)>>>0,a,s+i);else{var c;if(u<22250738585072014e-324)c=u/5e-324,t(c>>>0,a,s+o),t((l<<31|c/4294967296)>>>0,a,s+i);else{var p=Math.floor(Math.log(u)/Math.LN2);p===1024&&(p=1023),c=u*Math.pow(2,-p),t(c*4503599627370496>>>0,a,s+o),t((l<<31|p+1023<<20|c*1048576&1048575)>>>0,a,s+i)}}}r.writeDoubleLE=e.bind(null,Ml,0,4),r.writeDoubleBE=e.bind(null,Ll,4,0);function n(t,o,i,u,a){var s=t(u,a+o),l=t(u,a+i),c=(l>>31)*2+1,p=l>>>20&2047,h=4294967296*(l&1048575)+s;return p===2047?h?NaN:c*(1/0):p===0?c*5e-324*h:c*Math.pow(2,p-1075)*(h+4503599627370496)}r.readDoubleLE=n.bind(null,Nl,0,4),r.readDoubleBE=n.bind(null,zl,4,0)}(),r}function Ml(r,e,n){e[n]=r&255,e[n+1]=r>>>8&255,e[n+2]=r>>>16&255,e[n+3]=r>>>24}function Ll(r,e,n){e[n]=r>>>24,e[n+1]=r>>>16&255,e[n+2]=r>>>8&255,e[n+3]=r&255}function Nl(r,e){return(r[e]|r[e+1]<<8|r[e+2]<<16|r[e+3]<<24)>>>0}function zl(r,e){return(r[e]<<24|r[e+1]<<16|r[e+2]<<8|r[e+3])>>>0}});var Wl=Ue((exports,module)=>{"use strict";module.exports=inquire;function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(r){}return null}});var Ul=Ue(Vl=>{"use strict";var Ea=Vl;Ea.length=function(e){for(var n=0,t=0,o=0;o<e.length;++o)t=e.charCodeAt(o),t<128?n+=1:t<2048?n+=2:(t&64512)===55296&&(e.charCodeAt(o+1)&64512)===56320?(++o,n+=4):n+=3;return n};Ea.read=function(e,n,t){var o=t-n;if(o<1)return"";for(var i=null,u=[],a=0,s;n<t;)s=e[n++],s<128?u[a++]=s:s>191&&s<224?u[a++]=(s&31)<<6|e[n++]&63:s>239&&s<365?(s=((s&7)<<18|(e[n++]&63)<<12|(e[n++]&63)<<6|e[n++]&63)-65536,u[a++]=55296+(s>>10),u[a++]=56320+(s&1023)):u[a++]=(s&15)<<12|(e[n++]&63)<<6|e[n++]&63,a>8191&&((i||(i=[])).push(String.fromCharCode.apply(String,u)),a=0);return i?(a&&i.push(String.fromCharCode.apply(String,u.slice(0,a))),i.join("")):String.fromCharCode.apply(String,u.slice(0,a))};Ea.write=function(e,n,t){for(var o=t,i,u,a=0;a<e.length;++a)i=e.charCodeAt(a),i<128?n[t++]=i:i<2048?(n[t++]=i>>6|192,n[t++]=i&63|128):(i&64512)===55296&&((u=e.charCodeAt(a+1))&64512)===56320?(i=65536+((i&1023)<<10)+(u&1023),++a,n[t++]=i>>18|240,n[t++]=i>>12&63|128,n[t++]=i>>6&63|128,n[t++]=i&63|128):(n[t++]=i>>12|224,n[t++]=i>>6&63|128,n[t++]=i&63|128);return t-o}});var jl=Ue((HT,Hl)=>{"use strict";Hl.exports=Gy;function Gy(r,e,n){var t=n||8192,o=t>>>1,i=null,u=t;return function(s){if(s<1||s>o)return r(s);u+s>t&&(i=r(t),u=0);var l=e.call(i,u,u+=s);return u&7&&(u=(u|7)+1),l}}});var Kl=Ue((jT,ql)=>{"use strict";ql.exports=ft;var ro=kr();function ft(r,e){this.lo=r>>>0,this.hi=e>>>0}var Jr=ft.zero=new ft(0,0);Jr.toNumber=function(){return 0};Jr.zzEncode=Jr.zzDecode=function(){return this};Jr.length=function(){return 1};var Wy=ft.zeroHash="\0\0\0\0\0\0\0\0";ft.fromNumber=function(e){if(e===0)return Jr;var n=e<0;n&&(e=-e);var t=e>>>0,o=(e-t)/4294967296>>>0;return n&&(o=~o>>>0,t=~t>>>0,++t>4294967295&&(t=0,++o>4294967295&&(o=0))),new ft(t,o)};ft.from=function(e){if(typeof e=="number")return ft.fromNumber(e);if(ro.isString(e))if(ro.Long)e=ro.Long.fromString(e);else return ft.fromNumber(parseInt(e,10));return e.low||e.high?new ft(e.low>>>0,e.high>>>0):Jr};ft.prototype.toNumber=function(e){if(!e&&this.hi>>>31){var n=~this.lo+1>>>0,t=~this.hi>>>0;return n||(t=t+1>>>0),-(n+t*4294967296)}return this.lo+this.hi*4294967296};ft.prototype.toLong=function(e){return ro.Long?new ro.Long(this.lo|0,this.hi|0,!!e):{low:this.lo|0,high:this.hi|0,unsigned:!!e}};var Dr=String.prototype.charCodeAt;ft.fromHash=function(e){return e===Wy?Jr:new ft((Dr.call(e,0)|Dr.call(e,1)<<8|Dr.call(e,2)<<16|Dr.call(e,3)<<24)>>>0,(Dr.call(e,4)|Dr.call(e,5)<<8|Dr.call(e,6)<<16|Dr.call(e,7)<<24)>>>0)};ft.prototype.toHash=function(){return String.fromCharCode(this.lo&255,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,this.hi&255,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)};ft.prototype.zzEncode=function(){var e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this};ft.prototype.zzDecode=function(){var e=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this};ft.prototype.length=function(){var e=this.lo,n=(this.lo>>>28|this.hi<<4)>>>0,t=this.hi>>>24;return t===0?n===0?e<16384?e<128?1:2:e<2097152?3:4:n<16384?n<128?5:6:n<2097152?7:8:t<128?9:10}});var kr=Ue(Ca=>{"use strict";var ie=Ca;ie.asPromise=Ol();ie.base64=Dl();ie.EventEmitter=Rl();ie.float=Gl();ie.inquire=Wl();ie.utf8=Ul();ie.pool=jl();ie.LongBits=Kl();ie.isNode=!!(typeof global<"u"&&global&&global.process&&global.process.versions&&global.process.versions.node);ie.global=ie.isNode&&global||typeof window<"u"&&window||typeof self<"u"&&self||Ca;ie.emptyArray=Object.freeze?Object.freeze([]):[];ie.emptyObject=Object.freeze?Object.freeze({}):{};ie.isInteger=Number.isInteger||function(e){return typeof e=="number"&&isFinite(e)&&Math.floor(e)===e};ie.isString=function(e){return typeof e=="string"||e instanceof String};ie.isObject=function(e){return e&&typeof e=="object"};ie.isset=ie.isSet=function(e,n){var t=e[n];return t!=null&&e.hasOwnProperty(n)?typeof t!="object"||(Array.isArray(t)?t.length:Object.keys(t).length)>0:!1};ie.Buffer=function(){try{var r=ie.inquire("buffer").Buffer;return r.prototype.utf8Write?r:null}catch{return null}}();ie._Buffer_from=null;ie._Buffer_allocUnsafe=null;ie.newBuffer=function(e){return typeof e=="number"?ie.Buffer?ie._Buffer_allocUnsafe(e):new ie.Array(e):ie.Buffer?ie._Buffer_from(e):typeof Uint8Array>"u"?e:new Uint8Array(e)};ie.Array=typeof Uint8Array<"u"?Uint8Array:Array;ie.Long=ie.global.dcodeIO&&ie.global.dcodeIO.Long||ie.global.Long||ie.inquire("long");ie.key2Re=/^true|false|0|1$/;ie.key32Re=/^-?(?:0|[1-9][0-9]*)$/;ie.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;ie.longToHash=function(e){return e?ie.LongBits.from(e).toHash():ie.LongBits.zeroHash};ie.longFromHash=function(e,n){var t=ie.LongBits.fromHash(e);return ie.Long?ie.Long.fromBits(t.lo,t.hi,n):t.toNumber(!!n)};function Yl(r,e,n){for(var t=Object.keys(e),o=0;o<t.length;++o)(r[t[o]]===void 0||!n)&&(r[t[o]]=e[t[o]]);return r}ie.merge=Yl;ie.lcFirst=function(e){return e.charAt(0).toLowerCase()+e.substring(1)};function Xl(r){function e(n,t){if(!(this instanceof e))return new e(n,t);Object.defineProperty(this,"message",{get:function(){return n}}),Error.captureStackTrace?Error.captureStackTrace(this,e):Object.defineProperty(this,"stack",{value:new Error().stack||""}),t&&Yl(this,t)}return e.prototype=Object.create(Error.prototype,{constructor:{value:e,writable:!0,enumerable:!1,configurable:!0},name:{get:function(){return r},set:void 0,enumerable:!1,configurable:!0},toString:{value:function(){return this.name+": "+this.message},writable:!0,enumerable:!1,configurable:!0}}),e}ie.newError=Xl;ie.ProtocolError=Xl("ProtocolError");ie.oneOfGetter=function(e){for(var n={},t=0;t<e.length;++t)n[e[t]]=1;return function(){for(var o=Object.keys(this),i=o.length-1;i>-1;--i)if(n[o[i]]===1&&this[o[i]]!==void 0&&this[o[i]]!==null)return o[i]}};ie.oneOfSetter=function(e){return function(n){for(var t=0;t<e.length;++t)e[t]!==n&&delete this[e[t]]}};ie.toJSONOptions={longs:String,enums:String,bytes:String,json:!0};ie._configure=function(){var r=ie.Buffer;if(!r){ie._Buffer_from=ie._Buffer_allocUnsafe=null;return}ie._Buffer_from=r.from!==Uint8Array.from&&r.from||function(n,t){return new r(n,t)},ie._Buffer_allocUnsafe=r.allocUnsafe||function(n){return new r(n)}}});var La=Ue((KT,ec)=>{"use strict";ec.exports=ke;var Nt=kr(),Pa,oi=Nt.LongBits,Jl=Nt.base64,Zl=Nt.utf8;function no(r,e,n){this.fn=r,this.len=e,this.next=void 0,this.val=n}function ka(){}function Vy(r){this.head=r.head,this.tail=r.tail,this.len=r.len,this.next=r.states}function ke(){this.len=0,this.head=new no(ka,0,0),this.tail=this.head,this.states=null}var Ql=function(){return Nt.Buffer?function(){return(ke.create=function(){return new Pa})()}:function(){return new ke}};ke.create=Ql();ke.alloc=function(e){return new Nt.Array(e)};Nt.Array!==Array&&(ke.alloc=Nt.pool(ke.alloc,Nt.Array.prototype.subarray));ke.prototype._push=function(e,n,t){return this.tail=this.tail.next=new no(e,n,t),this.len+=n,this};function Ra(r,e,n){e[n]=r&255}function Uy(r,e,n){for(;r>127;)e[n++]=r&127|128,r>>>=7;e[n]=r}function Ba(r,e){this.len=r,this.next=void 0,this.val=e}Ba.prototype=Object.create(no.prototype);Ba.prototype.fn=Uy;ke.prototype.uint32=function(e){return this.len+=(this.tail=this.tail.next=new Ba((e=e>>>0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this};ke.prototype.int32=function(e){return e<0?this._push(Ma,10,oi.fromNumber(e)):this.uint32(e)};ke.prototype.sint32=function(e){return this.uint32((e<<1^e>>31)>>>0)};function Ma(r,e,n){for(;r.hi;)e[n++]=r.lo&127|128,r.lo=(r.lo>>>7|r.hi<<25)>>>0,r.hi>>>=7;for(;r.lo>127;)e[n++]=r.lo&127|128,r.lo=r.lo>>>7;e[n++]=r.lo}ke.prototype.uint64=function(e){var n=oi.from(e);return this._push(Ma,n.length(),n)};ke.prototype.int64=ke.prototype.uint64;ke.prototype.sint64=function(e){var n=oi.from(e).zzEncode();return this._push(Ma,n.length(),n)};ke.prototype.bool=function(e){return this._push(Ra,1,e?1:0)};function Da(r,e,n){e[n]=r&255,e[n+1]=r>>>8&255,e[n+2]=r>>>16&255,e[n+3]=r>>>24}ke.prototype.fixed32=function(e){return this._push(Da,4,e>>>0)};ke.prototype.sfixed32=ke.prototype.fixed32;ke.prototype.fixed64=function(e){var n=oi.from(e);return this._push(Da,4,n.lo)._push(Da,4,n.hi)};ke.prototype.sfixed64=ke.prototype.fixed64;ke.prototype.float=function(e){return this._push(Nt.float.writeFloatLE,4,e)};ke.prototype.double=function(e){return this._push(Nt.float.writeDoubleLE,8,e)};var Hy=Nt.Array.prototype.set?function(e,n,t){n.set(e,t)}:function(e,n,t){for(var o=0;o<e.length;++o)n[t+o]=e[o]};ke.prototype.bytes=function(e){var n=e.length>>>0;if(!n)return this._push(Ra,1,0);if(Nt.isString(e)){var t=ke.alloc(n=Jl.length(e));Jl.decode(e,t,0),e=t}return this.uint32(n)._push(Hy,n,e)};ke.prototype.string=function(e){var n=Zl.length(e);return n?this.uint32(n)._push(Zl.write,n,e):this._push(Ra,1,0)};ke.prototype.fork=function(){return this.states=new Vy(this),this.head=this.tail=new no(ka,0,0),this.len=0,this};ke.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new no(ka,0,0),this.len=0),this};ke.prototype.ldelim=function(){var e=this.head,n=this.tail,t=this.len;return this.reset().uint32(t),t&&(this.tail.next=e.next,this.tail=n,this.len+=t),this};ke.prototype.finish=function(){for(var e=this.head.next,n=this.constructor.alloc(this.len),t=0;e;)e.fn(e.val,n,t),t+=e.len,e=e.next;return n};ke._configure=function(r){Pa=r,ke.create=Ql(),Pa._configure()}});var nc=Ue((YT,rc)=>{"use strict";rc.exports=rr;var tc=La();(rr.prototype=Object.create(tc.prototype)).constructor=rr;var Rr=kr();function rr(){tc.call(this)}rr._configure=function(){rr.alloc=Rr._Buffer_allocUnsafe,rr.writeBytesBuffer=Rr.Buffer&&Rr.Buffer.prototype instanceof Uint8Array&&Rr.Buffer.prototype.set.name==="set"?function(e,n,t){n.set(e,t)}:function(e,n,t){if(e.copy)e.copy(n,t,0,e.length);else for(var o=0;o<e.length;)n[t++]=e[o++]}};rr.prototype.bytes=function(e){Rr.isString(e)&&(e=Rr._Buffer_from(e,"base64"));var n=e.length>>>0;return this.uint32(n),n&&this._push(rr.writeBytesBuffer,n,e),this};function jy(r,e,n){r.length<40?Rr.utf8.write(r,e,n):e.utf8Write?e.utf8Write(r,n):e.write(r,n)}rr.prototype.string=function(e){var n=Rr.Buffer.byteLength(e);return this.uint32(n),n&&this._push(jy,n,e),this};rr._configure()});var Fa=Ue((XT,uc)=>{"use strict";uc.exports=tt;var nr=kr(),za,ac=nr.LongBits,qy=nr.utf8;function Kt(r,e){return RangeError("index out of range: "+r.pos+" + "+(e||1)+" > "+r.len)}function tt(r){this.buf=r,this.pos=0,this.len=r.length}var oc=typeof Uint8Array<"u"?function(e){if(e instanceof Uint8Array||Array.isArray(e))return new tt(e);throw Error("illegal buffer")}:function(e){if(Array.isArray(e))return new tt(e);throw Error("illegal buffer")},sc=function(){return nr.Buffer?function(n){return(tt.create=function(o){return nr.Buffer.isBuffer(o)?new za(o):oc(o)})(n)}:oc};tt.create=sc();tt.prototype._slice=nr.Array.prototype.subarray||nr.Array.prototype.slice;tt.prototype.uint32=function(){var e=4294967295;return function(){if(e=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(e=(e|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return e;if((this.pos+=5)>this.len)throw this.pos=this.len,Kt(this,10);return e}}();tt.prototype.int32=function(){return this.uint32()|0};tt.prototype.sint32=function(){var e=this.uint32();return e>>>1^-(e&1)|0};function Na(){var r=new ac(0,0),e=0;if(this.len-this.pos>4){for(;e<4;++e)if(r.lo=(r.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return r;if(r.lo=(r.lo|(this.buf[this.pos]&127)<<28)>>>0,r.hi=(r.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return r;e=0}else{for(;e<3;++e){if(this.pos>=this.len)throw Kt(this);if(r.lo=(r.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return r}return r.lo=(r.lo|(this.buf[this.pos++]&127)<<e*7)>>>0,r}if(this.len-this.pos>4){for(;e<5;++e)if(r.hi=(r.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return r}else for(;e<5;++e){if(this.pos>=this.len)throw Kt(this);if(r.hi=(r.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return r}throw Error("invalid varint encoding")}tt.prototype.bool=function(){return this.uint32()!==0};function ii(r,e){return(r[e-4]|r[e-3]<<8|r[e-2]<<16|r[e-1]<<24)>>>0}tt.prototype.fixed32=function(){if(this.pos+4>this.len)throw Kt(this,4);return ii(this.buf,this.pos+=4)};tt.prototype.sfixed32=function(){if(this.pos+4>this.len)throw Kt(this,4);return ii(this.buf,this.pos+=4)|0};function ic(){if(this.pos+8>this.len)throw Kt(this,8);return new ac(ii(this.buf,this.pos+=4),ii(this.buf,this.pos+=4))}tt.prototype.float=function(){if(this.pos+4>this.len)throw Kt(this,4);var e=nr.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e};tt.prototype.double=function(){if(this.pos+8>this.len)throw Kt(this,4);var e=nr.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e};tt.prototype.bytes=function(){var e=this.uint32(),n=this.pos,t=this.pos+e;if(t>this.len)throw Kt(this,e);return this.pos+=e,Array.isArray(this.buf)?this.buf.slice(n,t):n===t?new this.buf.constructor(0):this._slice.call(this.buf,n,t)};tt.prototype.string=function(){var e=this.bytes();return qy.read(e,0,e.length)};tt.prototype.skip=function(e){if(typeof e=="number"){if(this.pos+e>this.len)throw Kt(this,e);this.pos+=e}else do if(this.pos>=this.len)throw Kt(this);while(this.buf[this.pos++]&128);return this};tt.prototype.skipType=function(r){switch(r){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(r=this.uint32()&7)!==4;)this.skipType(r);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+r+" at offset "+this.pos)}return this};tt._configure=function(r){za=r,tt.create=sc(),za._configure();var e=nr.Long?"toLong":"toNumber";nr.merge(tt.prototype,{int64:function(){return Na.call(this)[e](!1)},uint64:function(){return Na.call(this)[e](!0)},sint64:function(){return Na.call(this).zzDecode()[e](!1)},fixed64:function(){return ic.call(this)[e](!0)},sfixed64:function(){return ic.call(this)[e](!1)}})}});var fc=Ue((JT,dc)=>{"use strict";dc.exports=Zr;var cc=Fa();(Zr.prototype=Object.create(cc.prototype)).constructor=Zr;var lc=kr();function Zr(r){cc.call(this,r)}Zr._configure=function(){lc.Buffer&&(Zr.prototype._slice=lc.Buffer.prototype.slice)};Zr.prototype.string=function(){var e=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+e,this.len))};Zr._configure()});var hc=Ue((ZT,pc)=>{"use strict";pc.exports=oo;var Ga=kr();(oo.prototype=Object.create(Ga.EventEmitter.prototype)).constructor=oo;function oo(r,e,n){if(typeof r!="function")throw TypeError("rpcImpl must be a function");Ga.EventEmitter.call(this),this.rpcImpl=r,this.requestDelimited=!!e,this.responseDelimited=!!n}oo.prototype.rpcCall=function r(e,n,t,o,i){if(!o)throw TypeError("request must be specified");var u=this;if(!i)return Ga.asPromise(r,u,e,n,t,o);if(!u.rpcImpl){setTimeout(function(){i(Error("already ended"))},0);return}try{return u.rpcImpl(e,n[u.requestDelimited?"encodeDelimited":"encode"](o).finish(),function(s,l){if(s)return u.emit("error",s,e),i(s);if(l===null){u.end(!0);return}if(!(l instanceof t))try{l=t[u.responseDelimited?"decodeDelimited":"decode"](l)}catch(c){return u.emit("error",c,e),i(c)}return u.emit("data",l,e),i(null,l)})}catch(a){u.emit("error",a,e),setTimeout(function(){i(a)},0);return}};oo.prototype.end=function(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this}});var gc=Ue(mc=>{"use strict";var Ky=mc;Ky.Service=hc()});var yc=Ue((e$,bc)=>{"use strict";bc.exports={}});var wc=Ue(vc=>{"use strict";var _t=vc;_t.build="minimal";_t.Writer=La();_t.BufferWriter=nc();_t.Reader=Fa();_t.BufferReader=fc();_t.util=kr();_t.rpc=gc();_t.roots=yc();_t.configure=xc;function xc(){_t.util._configure(),_t.Writer._configure(_t.BufferWriter),_t.Reader._configure(_t.BufferReader)}xc()});var $c=Ue((r$,Tc)=>{"use strict";Tc.exports=wc()});var $n=Ue((n$,Sc)=>{"use strict";var je=$c(),K=je.Reader,rt=je.Writer,A=je.util,T=je.roots.default||(je.roots.default={});T.onnx=function(){var r={};return r.Version=function(){var e={},n=Object.create(e);return n[e[0]="_START_VERSION"]=0,n[e[1]="IR_VERSION_2017_10_10"]=1,n[e[2]="IR_VERSION_2017_10_30"]=2,n[e[3]="IR_VERSION_2017_11_3"]=3,n[e[4]="IR_VERSION_2019_1_22"]=4,n[e[5]="IR_VERSION_2019_3_18"]=5,n[e[6]="IR_VERSION_2019_9_19"]=6,n[e[7]="IR_VERSION_2020_5_8"]=7,n[e[8]="IR_VERSION_2021_7_30"]=8,n[e[9]="IR_VERSION"]=9,n}(),r.AttributeProto=function(){function e(n){if(this.floats=[],this.ints=[],this.strings=[],this.tensors=[],this.graphs=[],this.sparseTensors=[],this.typeProtos=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.refAttrName="",e.prototype.docString="",e.prototype.type=0,e.prototype.f=0,e.prototype.i=A.Long?A.Long.fromBits(0,0,!1):0,e.prototype.s=A.newBuffer([]),e.prototype.t=null,e.prototype.g=null,e.prototype.sparseTensor=null,e.prototype.tp=null,e.prototype.floats=A.emptyArray,e.prototype.ints=A.emptyArray,e.prototype.strings=A.emptyArray,e.prototype.tensors=A.emptyArray,e.prototype.graphs=A.emptyArray,e.prototype.sparseTensors=A.emptyArray,e.prototype.typeProtos=A.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=rt.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.f!=null&&Object.hasOwnProperty.call(t,"f")&&o.uint32(21).float(t.f),t.i!=null&&Object.hasOwnProperty.call(t,"i")&&o.uint32(24).int64(t.i),t.s!=null&&Object.hasOwnProperty.call(t,"s")&&o.uint32(34).bytes(t.s),t.t!=null&&Object.hasOwnProperty.call(t,"t")&&T.onnx.TensorProto.encode(t.t,o.uint32(42).fork()).ldelim(),t.g!=null&&Object.hasOwnProperty.call(t,"g")&&T.onnx.GraphProto.encode(t.g,o.uint32(50).fork()).ldelim(),t.floats!=null&&t.floats.length){o.uint32(58).fork();for(var i=0;i<t.floats.length;++i)o.float(t.floats[i]);o.ldelim()}if(t.ints!=null&&t.ints.length){o.uint32(66).fork();for(var i=0;i<t.ints.length;++i)o.int64(t.ints[i]);o.ldelim()}if(t.strings!=null&&t.strings.length)for(var i=0;i<t.strings.length;++i)o.uint32(74).bytes(t.strings[i]);if(t.tensors!=null&&t.tensors.length)for(var i=0;i<t.tensors.length;++i)T.onnx.TensorProto.encode(t.tensors[i],o.uint32(82).fork()).ldelim();if(t.graphs!=null&&t.graphs.length)for(var i=0;i<t.graphs.length;++i)T.onnx.GraphProto.encode(t.graphs[i],o.uint32(90).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(106).string(t.docString),t.tp!=null&&Object.hasOwnProperty.call(t,"tp")&&T.onnx.TypeProto.encode(t.tp,o.uint32(114).fork()).ldelim(),t.typeProtos!=null&&t.typeProtos.length)for(var i=0;i<t.typeProtos.length;++i)T.onnx.TypeProto.encode(t.typeProtos[i],o.uint32(122).fork()).ldelim();if(t.type!=null&&Object.hasOwnProperty.call(t,"type")&&o.uint32(160).int32(t.type),t.refAttrName!=null&&Object.hasOwnProperty.call(t,"refAttrName")&&o.uint32(170).string(t.refAttrName),t.sparseTensor!=null&&Object.hasOwnProperty.call(t,"sparseTensor")&&T.onnx.SparseTensorProto.encode(t.sparseTensor,o.uint32(178).fork()).ldelim(),t.sparseTensors!=null&&t.sparseTensors.length)for(var i=0;i<t.sparseTensors.length;++i)T.onnx.SparseTensorProto.encode(t.sparseTensors[i],o.uint32(186).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof K||(t=K.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.AttributeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.name=t.string();break}case 21:{u.refAttrName=t.string();break}case 13:{u.docString=t.string();break}case 20:{u.type=t.int32();break}case 2:{u.f=t.float();break}case 3:{u.i=t.int64();break}case 4:{u.s=t.bytes();break}case 5:{u.t=T.onnx.TensorProto.decode(t,t.uint32());break}case 6:{u.g=T.onnx.GraphProto.decode(t,t.uint32());break}case 22:{u.sparseTensor=T.onnx.SparseTensorProto.decode(t,t.uint32());break}case 14:{u.tp=T.onnx.TypeProto.decode(t,t.uint32());break}case 7:{if(u.floats&&u.floats.length||(u.floats=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.floats.push(t.float());else u.floats.push(t.float());break}case 8:{if(u.ints&&u.ints.length||(u.ints=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.ints.push(t.int64());else u.ints.push(t.int64());break}case 9:{u.strings&&u.strings.length||(u.strings=[]),u.strings.push(t.bytes());break}case 10:{u.tensors&&u.tensors.length||(u.tensors=[]),u.tensors.push(T.onnx.TensorProto.decode(t,t.uint32()));break}case 11:{u.graphs&&u.graphs.length||(u.graphs=[]),u.graphs.push(T.onnx.GraphProto.decode(t,t.uint32()));break}case 23:{u.sparseTensors&&u.sparseTensors.length||(u.sparseTensors=[]),u.sparseTensors.push(T.onnx.SparseTensorProto.decode(t,t.uint32()));break}case 15:{u.typeProtos&&u.typeProtos.length||(u.typeProtos=[]),u.typeProtos.push(T.onnx.TypeProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof K||(t=new K(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!A.isString(t.name))return"name: string expected";if(t.refAttrName!=null&&t.hasOwnProperty("refAttrName")&&!A.isString(t.refAttrName))return"refAttrName: string expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!A.isString(t.docString))return"docString: string expected";if(t.type!=null&&t.hasOwnProperty("type"))switch(t.type){default:return"type: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 11:case 13:case 6:case 7:case 8:case 9:case 10:case 12:case 14:break}if(t.f!=null&&t.hasOwnProperty("f")&&typeof t.f!="number")return"f: number expected";if(t.i!=null&&t.hasOwnProperty("i")&&!A.isInteger(t.i)&&!(t.i&&A.isInteger(t.i.low)&&A.isInteger(t.i.high)))return"i: integer|Long expected";if(t.s!=null&&t.hasOwnProperty("s")&&!(t.s&&typeof t.s.length=="number"||A.isString(t.s)))return"s: buffer expected";if(t.t!=null&&t.hasOwnProperty("t")){var o=T.onnx.TensorProto.verify(t.t);if(o)return"t."+o}if(t.g!=null&&t.hasOwnProperty("g")){var o=T.onnx.GraphProto.verify(t.g);if(o)return"g."+o}if(t.sparseTensor!=null&&t.hasOwnProperty("sparseTensor")){var o=T.onnx.SparseTensorProto.verify(t.sparseTensor);if(o)return"sparseTensor."+o}if(t.tp!=null&&t.hasOwnProperty("tp")){var o=T.onnx.TypeProto.verify(t.tp);if(o)return"tp."+o}if(t.floats!=null&&t.hasOwnProperty("floats")){if(!Array.isArray(t.floats))return"floats: array expected";for(var i=0;i<t.floats.length;++i)if(typeof t.floats[i]!="number")return"floats: number[] expected"}if(t.ints!=null&&t.hasOwnProperty("ints")){if(!Array.isArray(t.ints))return"ints: array expected";for(var i=0;i<t.ints.length;++i)if(!A.isInteger(t.ints[i])&&!(t.ints[i]&&A.isInteger(t.ints[i].low)&&A.isInteger(t.ints[i].high)))return"ints: integer|Long[] expected"}if(t.strings!=null&&t.hasOwnProperty("strings")){if(!Array.isArray(t.strings))return"strings: array expected";for(var i=0;i<t.strings.length;++i)if(!(t.strings[i]&&typeof t.strings[i].length=="number"||A.isString(t.strings[i])))return"strings: buffer[] expected"}if(t.tensors!=null&&t.hasOwnProperty("tensors")){if(!Array.isArray(t.tensors))return"tensors: array expected";for(var i=0;i<t.tensors.length;++i){var o=T.onnx.TensorProto.verify(t.tensors[i]);if(o)return"tensors."+o}}if(t.graphs!=null&&t.hasOwnProperty("graphs")){if(!Array.isArray(t.graphs))return"graphs: array expected";for(var i=0;i<t.graphs.length;++i){var o=T.onnx.GraphProto.verify(t.graphs[i]);if(o)return"graphs."+o}}if(t.sparseTensors!=null&&t.hasOwnProperty("sparseTensors")){if(!Array.isArray(t.sparseTensors))return"sparseTensors: array expected";for(var i=0;i<t.sparseTensors.length;++i){var o=T.onnx.SparseTensorProto.verify(t.sparseTensors[i]);if(o)return"sparseTensors."+o}}if(t.typeProtos!=null&&t.hasOwnProperty("typeProtos")){if(!Array.isArray(t.typeProtos))return"typeProtos: array expected";for(var i=0;i<t.typeProtos.length;++i){var o=T.onnx.TypeProto.verify(t.typeProtos[i]);if(o)return"typeProtos."+o}}return null},e.fromObject=function(t){if(t instanceof T.onnx.AttributeProto)return t;var o=new T.onnx.AttributeProto;switch(t.name!=null&&(o.name=String(t.name)),t.refAttrName!=null&&(o.refAttrName=String(t.refAttrName)),t.docString!=null&&(o.docString=String(t.docString)),t.type){default:if(typeof t.type=="number"){o.type=t.type;break}break;case"UNDEFINED":case 0:o.type=0;break;case"FLOAT":case 1:o.type=1;break;case"INT":case 2:o.type=2;break;case"STRING":case 3:o.type=3;break;case"TENSOR":case 4:o.type=4;break;case"GRAPH":case 5:o.type=5;break;case"SPARSE_TENSOR":case 11:o.type=11;break;case"TYPE_PROTO":case 13:o.type=13;break;case"FLOATS":case 6:o.type=6;break;case"INTS":case 7:o.type=7;break;case"STRINGS":case 8:o.type=8;break;case"TENSORS":case 9:o.type=9;break;case"GRAPHS":case 10:o.type=10;break;case"SPARSE_TENSORS":case 12:o.type=12;break;case"TYPE_PROTOS":case 14:o.type=14;break}if(t.f!=null&&(o.f=Number(t.f)),t.i!=null&&(A.Long?(o.i=A.Long.fromValue(t.i)).unsigned=!1:typeof t.i=="string"?o.i=parseInt(t.i,10):typeof t.i=="number"?o.i=t.i:typeof t.i=="object"&&(o.i=new A.LongBits(t.i.low>>>0,t.i.high>>>0).toNumber())),t.s!=null&&(typeof t.s=="string"?A.base64.decode(t.s,o.s=A.newBuffer(A.base64.length(t.s)),0):t.s.length>=0&&(o.s=t.s)),t.t!=null){if(typeof t.t!="object")throw TypeError(".onnx.AttributeProto.t: object expected");o.t=T.onnx.TensorProto.fromObject(t.t)}if(t.g!=null){if(typeof t.g!="object")throw TypeError(".onnx.AttributeProto.g: object expected");o.g=T.onnx.GraphProto.fromObject(t.g)}if(t.sparseTensor!=null){if(typeof t.sparseTensor!="object")throw TypeError(".onnx.AttributeProto.sparseTensor: object expected");o.sparseTensor=T.onnx.SparseTensorProto.fromObject(t.sparseTensor)}if(t.tp!=null){if(typeof t.tp!="object")throw TypeError(".onnx.AttributeProto.tp: object expected");o.tp=T.onnx.TypeProto.fromObject(t.tp)}if(t.floats){if(!Array.isArray(t.floats))throw TypeError(".onnx.AttributeProto.floats: array expected");o.floats=[];for(var i=0;i<t.floats.length;++i)o.floats[i]=Number(t.floats[i])}if(t.ints){if(!Array.isArray(t.ints))throw TypeError(".onnx.AttributeProto.ints: array expected");o.ints=[];for(var i=0;i<t.ints.length;++i)A.Long?(o.ints[i]=A.Long.fromValue(t.ints[i])).unsigned=!1:typeof t.ints[i]=="string"?o.ints[i]=parseInt(t.ints[i],10):typeof t.ints[i]=="number"?o.ints[i]=t.ints[i]:typeof t.ints[i]=="object"&&(o.ints[i]=new A.LongBits(t.ints[i].low>>>0,t.ints[i].high>>>0).toNumber())}if(t.strings){if(!Array.isArray(t.strings))throw TypeError(".onnx.AttributeProto.strings: array expected");o.strings=[];for(var i=0;i<t.strings.length;++i)typeof t.strings[i]=="string"?A.base64.decode(t.strings[i],o.strings[i]=A.newBuffer(A.base64.length(t.strings[i])),0):t.strings[i].length>=0&&(o.strings[i]=t.strings[i])}if(t.tensors){if(!Array.isArray(t.tensors))throw TypeError(".onnx.AttributeProto.tensors: array expected");o.tensors=[];for(var i=0;i<t.tensors.length;++i){if(typeof t.tensors[i]!="object")throw TypeError(".onnx.AttributeProto.tensors: object expected");o.tensors[i]=T.onnx.TensorProto.fromObject(t.tensors[i])}}if(t.graphs){if(!Array.isArray(t.graphs))throw TypeError(".onnx.AttributeProto.graphs: array expected");o.graphs=[];for(var i=0;i<t.graphs.length;++i){if(typeof t.graphs[i]!="object")throw TypeError(".onnx.AttributeProto.graphs: object expected");o.graphs[i]=T.onnx.GraphProto.fromObject(t.graphs[i])}}if(t.sparseTensors){if(!Array.isArray(t.sparseTensors))throw TypeError(".onnx.AttributeProto.sparseTensors: array expected");o.sparseTensors=[];for(var i=0;i<t.sparseTensors.length;++i){if(typeof t.sparseTensors[i]!="object")throw TypeError(".onnx.AttributeProto.sparseTensors: object expected");o.sparseTensors[i]=T.onnx.SparseTensorProto.fromObject(t.sparseTensors[i])}}if(t.typeProtos){if(!Array.isArray(t.typeProtos))throw TypeError(".onnx.AttributeProto.typeProtos: array expected");o.typeProtos=[];for(var i=0;i<t.typeProtos.length;++i){if(typeof t.typeProtos[i]!="object")throw TypeError(".onnx.AttributeProto.typeProtos: object expected");o.typeProtos[i]=T.onnx.TypeProto.fromObject(t.typeProtos[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.floats=[],i.ints=[],i.strings=[],i.tensors=[],i.graphs=[],i.typeProtos=[],i.sparseTensors=[]),o.defaults){if(i.name="",i.f=0,A.Long){var u=new A.Long(0,0,!1);i.i=o.longs===String?u.toString():o.longs===Number?u.toNumber():u}else i.i=o.longs===String?"0":0;o.bytes===String?i.s="":(i.s=[],o.bytes!==Array&&(i.s=A.newBuffer(i.s))),i.t=null,i.g=null,i.docString="",i.tp=null,i.type=o.enums===String?"UNDEFINED":0,i.refAttrName="",i.sparseTensor=null}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.f!=null&&t.hasOwnProperty("f")&&(i.f=o.json&&!isFinite(t.f)?String(t.f):t.f),t.i!=null&&t.hasOwnProperty("i")&&(typeof t.i=="number"?i.i=o.longs===String?String(t.i):t.i:i.i=o.longs===String?A.Long.prototype.toString.call(t.i):o.longs===Number?new A.LongBits(t.i.low>>>0,t.i.high>>>0).toNumber():t.i),t.s!=null&&t.hasOwnProperty("s")&&(i.s=o.bytes===String?A.base64.encode(t.s,0,t.s.length):o.bytes===Array?Array.prototype.slice.call(t.s):t.s),t.t!=null&&t.hasOwnProperty("t")&&(i.t=T.onnx.TensorProto.toObject(t.t,o)),t.g!=null&&t.hasOwnProperty("g")&&(i.g=T.onnx.GraphProto.toObject(t.g,o)),t.floats&&t.floats.length){i.floats=[];for(var a=0;a<t.floats.length;++a)i.floats[a]=o.json&&!isFinite(t.floats[a])?String(t.floats[a]):t.floats[a]}if(t.ints&&t.ints.length){i.ints=[];for(var a=0;a<t.ints.length;++a)typeof t.ints[a]=="number"?i.ints[a]=o.longs===String?String(t.ints[a]):t.ints[a]:i.ints[a]=o.longs===String?A.Long.prototype.toString.call(t.ints[a]):o.longs===Number?new A.LongBits(t.ints[a].low>>>0,t.ints[a].high>>>0).toNumber():t.ints[a]}if(t.strings&&t.strings.length){i.strings=[];for(var a=0;a<t.strings.length;++a)i.strings[a]=o.bytes===String?A.base64.encode(t.strings[a],0,t.strings[a].length):o.bytes===Array?Array.prototype.slice.call(t.strings[a]):t.strings[a]}if(t.tensors&&t.tensors.length){i.tensors=[];for(var a=0;a<t.tensors.length;++a)i.tensors[a]=T.onnx.TensorProto.toObject(t.tensors[a],o)}if(t.graphs&&t.graphs.length){i.graphs=[];for(var a=0;a<t.graphs.length;++a)i.graphs[a]=T.onnx.GraphProto.toObject(t.graphs[a],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.tp!=null&&t.hasOwnProperty("tp")&&(i.tp=T.onnx.TypeProto.toObject(t.tp,o)),t.typeProtos&&t.typeProtos.length){i.typeProtos=[];for(var a=0;a<t.typeProtos.length;++a)i.typeProtos[a]=T.onnx.TypeProto.toObject(t.typeProtos[a],o)}if(t.type!=null&&t.hasOwnProperty("type")&&(i.type=o.enums===String?T.onnx.AttributeProto.AttributeType[t.type]===void 0?t.type:T.onnx.AttributeProto.AttributeType[t.type]:t.type),t.refAttrName!=null&&t.hasOwnProperty("refAttrName")&&(i.refAttrName=t.refAttrName),t.sparseTensor!=null&&t.hasOwnProperty("sparseTensor")&&(i.sparseTensor=T.onnx.SparseTensorProto.toObject(t.sparseTensor,o)),t.sparseTensors&&t.sparseTensors.length){i.sparseTensors=[];for(var a=0;a<t.sparseTensors.length;++a)i.sparseTensors[a]=T.onnx.SparseTensorProto.toObject(t.sparseTensors[a],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,je.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.AttributeProto"},e.AttributeType=function(){var n={},t=Object.create(n);return t[n[0]="UNDEFINED"]=0,t[n[1]="FLOAT"]=1,t[n[2]="INT"]=2,t[n[3]="STRING"]=3,t[n[4]="TENSOR"]=4,t[n[5]="GRAPH"]=5,t[n[11]="SPARSE_TENSOR"]=11,t[n[13]="TYPE_PROTO"]=13,t[n[6]="FLOATS"]=6,t[n[7]="INTS"]=7,t[n[8]="STRINGS"]=8,t[n[9]="TENSORS"]=9,t[n[10]="GRAPHS"]=10,t[n[12]="SPARSE_TENSORS"]=12,t[n[14]="TYPE_PROTOS"]=14,t}(),e}(),r.ValueInfoProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.type=null,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=rt.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.type!=null&&Object.hasOwnProperty.call(t,"type")&&T.onnx.TypeProto.encode(t.type,o.uint32(18).fork()).ldelim(),t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(26).string(t.docString),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof K||(t=K.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.ValueInfoProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.name=t.string();break}case 2:{u.type=T.onnx.TypeProto.decode(t,t.uint32());break}case 3:{u.docString=t.string();break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof K||(t=new K(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!A.isString(t.name))return"name: string expected";if(t.type!=null&&t.hasOwnProperty("type")){var o=T.onnx.TypeProto.verify(t.type);if(o)return"type."+o}return t.docString!=null&&t.hasOwnProperty("docString")&&!A.isString(t.docString)?"docString: string expected":null},e.fromObject=function(t){if(t instanceof T.onnx.ValueInfoProto)return t;var o=new T.onnx.ValueInfoProto;if(t.name!=null&&(o.name=String(t.name)),t.type!=null){if(typeof t.type!="object")throw TypeError(".onnx.ValueInfoProto.type: object expected");o.type=T.onnx.TypeProto.fromObject(t.type)}return t.docString!=null&&(o.docString=String(t.docString)),o},e.toObject=function(t,o){o||(o={});var i={};return o.defaults&&(i.name="",i.type=null,i.docString=""),t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.type!=null&&t.hasOwnProperty("type")&&(i.type=T.onnx.TypeProto.toObject(t.type,o)),t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,je.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.ValueInfoProto"},e}(),r.NodeProto=function(){function e(n){if(this.input=[],this.output=[],this.attribute=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.input=A.emptyArray,e.prototype.output=A.emptyArray,e.prototype.name="",e.prototype.opType="",e.prototype.domain="",e.prototype.attribute=A.emptyArray,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=rt.create()),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)o.uint32(10).string(t.input[i]);if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)o.uint32(18).string(t.output[i]);if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(26).string(t.name),t.opType!=null&&Object.hasOwnProperty.call(t,"opType")&&o.uint32(34).string(t.opType),t.attribute!=null&&t.attribute.length)for(var i=0;i<t.attribute.length;++i)T.onnx.AttributeProto.encode(t.attribute[i],o.uint32(42).fork()).ldelim();return t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(50).string(t.docString),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(58).string(t.domain),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof K||(t=K.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.NodeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.input&&u.input.length||(u.input=[]),u.input.push(t.string());break}case 2:{u.output&&u.output.length||(u.output=[]),u.output.push(t.string());break}case 3:{u.name=t.string();break}case 4:{u.opType=t.string();break}case 7:{u.domain=t.string();break}case 5:{u.attribute&&u.attribute.length||(u.attribute=[]),u.attribute.push(T.onnx.AttributeProto.decode(t,t.uint32()));break}case 6:{u.docString=t.string();break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof K||(t=new K(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o)if(!A.isString(t.input[o]))return"input: string[] expected"}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o)if(!A.isString(t.output[o]))return"output: string[] expected"}if(t.name!=null&&t.hasOwnProperty("name")&&!A.isString(t.name))return"name: string expected";if(t.opType!=null&&t.hasOwnProperty("opType")&&!A.isString(t.opType))return"opType: string expected";if(t.domain!=null&&t.hasOwnProperty("domain")&&!A.isString(t.domain))return"domain: string expected";if(t.attribute!=null&&t.hasOwnProperty("attribute")){if(!Array.isArray(t.attribute))return"attribute: array expected";for(var o=0;o<t.attribute.length;++o){var i=T.onnx.AttributeProto.verify(t.attribute[o]);if(i)return"attribute."+i}}return t.docString!=null&&t.hasOwnProperty("docString")&&!A.isString(t.docString)?"docString: string expected":null},e.fromObject=function(t){if(t instanceof T.onnx.NodeProto)return t;var o=new T.onnx.NodeProto;if(t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.NodeProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i)o.input[i]=String(t.input[i])}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.NodeProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i)o.output[i]=String(t.output[i])}if(t.name!=null&&(o.name=String(t.name)),t.opType!=null&&(o.opType=String(t.opType)),t.domain!=null&&(o.domain=String(t.domain)),t.attribute){if(!Array.isArray(t.attribute))throw TypeError(".onnx.NodeProto.attribute: array expected");o.attribute=[];for(var i=0;i<t.attribute.length;++i){if(typeof t.attribute[i]!="object")throw TypeError(".onnx.NodeProto.attribute: object expected");o.attribute[i]=T.onnx.AttributeProto.fromObject(t.attribute[i])}}return t.docString!=null&&(o.docString=String(t.docString)),o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.input=[],i.output=[],i.attribute=[]),o.defaults&&(i.name="",i.opType="",i.docString="",i.domain=""),t.input&&t.input.length){i.input=[];for(var u=0;u<t.input.length;++u)i.input[u]=t.input[u]}if(t.output&&t.output.length){i.output=[];for(var u=0;u<t.output.length;++u)i.output[u]=t.output[u]}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.opType!=null&&t.hasOwnProperty("opType")&&(i.opType=t.opType),t.attribute&&t.attribute.length){i.attribute=[];for(var u=0;u<t.attribute.length;++u)i.attribute[u]=T.onnx.AttributeProto.toObject(t.attribute[u],o)}return t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,je.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.NodeProto"},e}(),r.TrainingInfoProto=function(){function e(n){if(this.initializationBinding=[],this.updateBinding=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.initialization=null,e.prototype.algorithm=null,e.prototype.initializationBinding=A.emptyArray,e.prototype.updateBinding=A.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=rt.create()),t.initialization!=null&&Object.hasOwnProperty.call(t,"initialization")&&T.onnx.GraphProto.encode(t.initialization,o.uint32(10).fork()).ldelim(),t.algorithm!=null&&Object.hasOwnProperty.call(t,"algorithm")&&T.onnx.GraphProto.encode(t.algorithm,o.uint32(18).fork()).ldelim(),t.initializationBinding!=null&&t.initializationBinding.length)for(var i=0;i<t.initializationBinding.length;++i)T.onnx.StringStringEntryProto.encode(t.initializationBinding[i],o.uint32(26).fork()).ldelim();if(t.updateBinding!=null&&t.updateBinding.length)for(var i=0;i<t.updateBinding.length;++i)T.onnx.StringStringEntryProto.encode(t.updateBinding[i],o.uint32(34).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof K||(t=K.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.TrainingInfoProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.initialization=T.onnx.GraphProto.decode(t,t.uint32());break}case 2:{u.algorithm=T.onnx.GraphProto.decode(t,t.uint32());break}case 3:{u.initializationBinding&&u.initializationBinding.length||(u.initializationBinding=[]),u.initializationBinding.push(T.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 4:{u.updateBinding&&u.updateBinding.length||(u.updateBinding=[]),u.updateBinding.push(T.onnx.StringStringEntryProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof K||(t=new K(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.initialization!=null&&t.hasOwnProperty("initialization")){var o=T.onnx.GraphProto.verify(t.initialization);if(o)return"initialization."+o}if(t.algorithm!=null&&t.hasOwnProperty("algorithm")){var o=T.onnx.GraphProto.verify(t.algorithm);if(o)return"algorithm."+o}if(t.initializationBinding!=null&&t.hasOwnProperty("initializationBinding")){if(!Array.isArray(t.initializationBinding))return"initializationBinding: array expected";for(var i=0;i<t.initializationBinding.length;++i){var o=T.onnx.StringStringEntryProto.verify(t.initializationBinding[i]);if(o)return"initializationBinding."+o}}if(t.updateBinding!=null&&t.hasOwnProperty("updateBinding")){if(!Array.isArray(t.updateBinding))return"updateBinding: array expected";for(var i=0;i<t.updateBinding.length;++i){var o=T.onnx.StringStringEntryProto.verify(t.updateBinding[i]);if(o)return"updateBinding."+o}}return null},e.fromObject=function(t){if(t instanceof T.onnx.TrainingInfoProto)return t;var o=new T.onnx.TrainingInfoProto;if(t.initialization!=null){if(typeof t.initialization!="object")throw TypeError(".onnx.TrainingInfoProto.initialization: object expected");o.initialization=T.onnx.GraphProto.fromObject(t.initialization)}if(t.algorithm!=null){if(typeof t.algorithm!="object")throw TypeError(".onnx.TrainingInfoProto.algorithm: object expected");o.algorithm=T.onnx.GraphProto.fromObject(t.algorithm)}if(t.initializationBinding){if(!Array.isArray(t.initializationBinding))throw TypeError(".onnx.TrainingInfoProto.initializationBinding: array expected");o.initializationBinding=[];for(var i=0;i<t.initializationBinding.length;++i){if(typeof t.initializationBinding[i]!="object")throw TypeError(".onnx.TrainingInfoProto.initializationBinding: object expected");o.initializationBinding[i]=T.onnx.StringStringEntryProto.fromObject(t.initializationBinding[i])}}if(t.updateBinding){if(!Array.isArray(t.updateBinding))throw TypeError(".onnx.TrainingInfoProto.updateBinding: array expected");o.updateBinding=[];for(var i=0;i<t.updateBinding.length;++i){if(typeof t.updateBinding[i]!="object")throw TypeError(".onnx.TrainingInfoProto.updateBinding: object expected");o.updateBinding[i]=T.onnx.StringStringEntryProto.fromObject(t.updateBinding[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.initializationBinding=[],i.updateBinding=[]),o.defaults&&(i.initialization=null,i.algorithm=null),t.initialization!=null&&t.hasOwnProperty("initialization")&&(i.initialization=T.onnx.GraphProto.toObject(t.initialization,o)),t.algorithm!=null&&t.hasOwnProperty("algorithm")&&(i.algorithm=T.onnx.GraphProto.toObject(t.algorithm,o)),t.initializationBinding&&t.initializationBinding.length){i.initializationBinding=[];for(var u=0;u<t.initializationBinding.length;++u)i.initializationBinding[u]=T.onnx.StringStringEntryProto.toObject(t.initializationBinding[u],o)}if(t.updateBinding&&t.updateBinding.length){i.updateBinding=[];for(var u=0;u<t.updateBinding.length;++u)i.updateBinding[u]=T.onnx.StringStringEntryProto.toObject(t.updateBinding[u],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,je.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TrainingInfoProto"},e}(),r.ModelProto=function(){function e(n){if(this.opsetImport=[],this.metadataProps=[],this.trainingInfo=[],this.functions=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.irVersion=A.Long?A.Long.fromBits(0,0,!1):0,e.prototype.opsetImport=A.emptyArray,e.prototype.producerName="",e.prototype.producerVersion="",e.prototype.domain="",e.prototype.modelVersion=A.Long?A.Long.fromBits(0,0,!1):0,e.prototype.docString="",e.prototype.graph=null,e.prototype.metadataProps=A.emptyArray,e.prototype.trainingInfo=A.emptyArray,e.prototype.functions=A.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=rt.create()),t.irVersion!=null&&Object.hasOwnProperty.call(t,"irVersion")&&o.uint32(8).int64(t.irVersion),t.producerName!=null&&Object.hasOwnProperty.call(t,"producerName")&&o.uint32(18).string(t.producerName),t.producerVersion!=null&&Object.hasOwnProperty.call(t,"producerVersion")&&o.uint32(26).string(t.producerVersion),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(34).string(t.domain),t.modelVersion!=null&&Object.hasOwnProperty.call(t,"modelVersion")&&o.uint32(40).int64(t.modelVersion),t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(50).string(t.docString),t.graph!=null&&Object.hasOwnProperty.call(t,"graph")&&T.onnx.GraphProto.encode(t.graph,o.uint32(58).fork()).ldelim(),t.opsetImport!=null&&t.opsetImport.length)for(var i=0;i<t.opsetImport.length;++i)T.onnx.OperatorSetIdProto.encode(t.opsetImport[i],o.uint32(66).fork()).ldelim();if(t.metadataProps!=null&&t.metadataProps.length)for(var i=0;i<t.metadataProps.length;++i)T.onnx.StringStringEntryProto.encode(t.metadataProps[i],o.uint32(114).fork()).ldelim();if(t.trainingInfo!=null&&t.trainingInfo.length)for(var i=0;i<t.trainingInfo.length;++i)T.onnx.TrainingInfoProto.encode(t.trainingInfo[i],o.uint32(162).fork()).ldelim();if(t.functions!=null&&t.functions.length)for(var i=0;i<t.functions.length;++i)T.onnx.FunctionProto.encode(t.functions[i],o.uint32(202).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof K||(t=K.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.ModelProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.irVersion=t.int64();break}case 8:{u.opsetImport&&u.opsetImport.length||(u.opsetImport=[]),u.opsetImport.push(T.onnx.OperatorSetIdProto.decode(t,t.uint32()));break}case 2:{u.producerName=t.string();break}case 3:{u.producerVersion=t.string();break}case 4:{u.domain=t.string();break}case 5:{u.modelVersion=t.int64();break}case 6:{u.docString=t.string();break}case 7:{u.graph=T.onnx.GraphProto.decode(t,t.uint32());break}case 14:{u.metadataProps&&u.metadataProps.length||(u.metadataProps=[]),u.metadataProps.push(T.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 20:{u.trainingInfo&&u.trainingInfo.length||(u.trainingInfo=[]),u.trainingInfo.push(T.onnx.TrainingInfoProto.decode(t,t.uint32()));break}case 25:{u.functions&&u.functions.length||(u.functions=[]),u.functions.push(T.onnx.FunctionProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof K||(t=new K(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.irVersion!=null&&t.hasOwnProperty("irVersion")&&!A.isInteger(t.irVersion)&&!(t.irVersion&&A.isInteger(t.irVersion.low)&&A.isInteger(t.irVersion.high)))return"irVersion: integer|Long expected";if(t.opsetImport!=null&&t.hasOwnProperty("opsetImport")){if(!Array.isArray(t.opsetImport))return"opsetImport: array expected";for(var o=0;o<t.opsetImport.length;++o){var i=T.onnx.OperatorSetIdProto.verify(t.opsetImport[o]);if(i)return"opsetImport."+i}}if(t.producerName!=null&&t.hasOwnProperty("producerName")&&!A.isString(t.producerName))return"producerName: string expected";if(t.producerVersion!=null&&t.hasOwnProperty("producerVersion")&&!A.isString(t.producerVersion))return"producerVersion: string expected";if(t.domain!=null&&t.hasOwnProperty("domain")&&!A.isString(t.domain))return"domain: string expected";if(t.modelVersion!=null&&t.hasOwnProperty("modelVersion")&&!A.isInteger(t.modelVersion)&&!(t.modelVersion&&A.isInteger(t.modelVersion.low)&&A.isInteger(t.modelVersion.high)))return"modelVersion: integer|Long expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!A.isString(t.docString))return"docString: string expected";if(t.graph!=null&&t.hasOwnProperty("graph")){var i=T.onnx.GraphProto.verify(t.graph);if(i)return"graph."+i}if(t.metadataProps!=null&&t.hasOwnProperty("metadataProps")){if(!Array.isArray(t.metadataProps))return"metadataProps: array expected";for(var o=0;o<t.metadataProps.length;++o){var i=T.onnx.StringStringEntryProto.verify(t.metadataProps[o]);if(i)return"metadataProps."+i}}if(t.trainingInfo!=null&&t.hasOwnProperty("trainingInfo")){if(!Array.isArray(t.trainingInfo))return"trainingInfo: array expected";for(var o=0;o<t.trainingInfo.length;++o){var i=T.onnx.TrainingInfoProto.verify(t.trainingInfo[o]);if(i)return"trainingInfo."+i}}if(t.functions!=null&&t.hasOwnProperty("functions")){if(!Array.isArray(t.functions))return"functions: array expected";for(var o=0;o<t.functions.length;++o){var i=T.onnx.FunctionProto.verify(t.functions[o]);if(i)return"functions."+i}}return null},e.fromObject=function(t){if(t instanceof T.onnx.ModelProto)return t;var o=new T.onnx.ModelProto;if(t.irVersion!=null&&(A.Long?(o.irVersion=A.Long.fromValue(t.irVersion)).unsigned=!1:typeof t.irVersion=="string"?o.irVersion=parseInt(t.irVersion,10):typeof t.irVersion=="number"?o.irVersion=t.irVersion:typeof t.irVersion=="object"&&(o.irVersion=new A.LongBits(t.irVersion.low>>>0,t.irVersion.high>>>0).toNumber())),t.opsetImport){if(!Array.isArray(t.opsetImport))throw TypeError(".onnx.ModelProto.opsetImport: array expected");o.opsetImport=[];for(var i=0;i<t.opsetImport.length;++i){if(typeof t.opsetImport[i]!="object")throw TypeError(".onnx.ModelProto.opsetImport: object expected");o.opsetImport[i]=T.onnx.OperatorSetIdProto.fromObject(t.opsetImport[i])}}if(t.producerName!=null&&(o.producerName=String(t.producerName)),t.producerVersion!=null&&(o.producerVersion=String(t.producerVersion)),t.domain!=null&&(o.domain=String(t.domain)),t.modelVersion!=null&&(A.Long?(o.modelVersion=A.Long.fromValue(t.modelVersion)).unsigned=!1:typeof t.modelVersion=="string"?o.modelVersion=parseInt(t.modelVersion,10):typeof t.modelVersion=="number"?o.modelVersion=t.modelVersion:typeof t.modelVersion=="object"&&(o.modelVersion=new A.LongBits(t.modelVersion.low>>>0,t.modelVersion.high>>>0).toNumber())),t.docString!=null&&(o.docString=String(t.docString)),t.graph!=null){if(typeof t.graph!="object")throw TypeError(".onnx.ModelProto.graph: object expected");o.graph=T.onnx.GraphProto.fromObject(t.graph)}if(t.metadataProps){if(!Array.isArray(t.metadataProps))throw TypeError(".onnx.ModelProto.metadataProps: array expected");o.metadataProps=[];for(var i=0;i<t.metadataProps.length;++i){if(typeof t.metadataProps[i]!="object")throw TypeError(".onnx.ModelProto.metadataProps: object expected");o.metadataProps[i]=T.onnx.StringStringEntryProto.fromObject(t.metadataProps[i])}}if(t.trainingInfo){if(!Array.isArray(t.trainingInfo))throw TypeError(".onnx.ModelProto.trainingInfo: array expected");o.trainingInfo=[];for(var i=0;i<t.trainingInfo.length;++i){if(typeof t.trainingInfo[i]!="object")throw TypeError(".onnx.ModelProto.trainingInfo: object expected");o.trainingInfo[i]=T.onnx.TrainingInfoProto.fromObject(t.trainingInfo[i])}}if(t.functions){if(!Array.isArray(t.functions))throw TypeError(".onnx.ModelProto.functions: array expected");o.functions=[];for(var i=0;i<t.functions.length;++i){if(typeof t.functions[i]!="object")throw TypeError(".onnx.ModelProto.functions: object expected");o.functions[i]=T.onnx.FunctionProto.fromObject(t.functions[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.opsetImport=[],i.metadataProps=[],i.trainingInfo=[],i.functions=[]),o.defaults){if(A.Long){var u=new A.Long(0,0,!1);i.irVersion=o.longs===String?u.toString():o.longs===Number?u.toNumber():u}else i.irVersion=o.longs===String?"0":0;if(i.producerName="",i.producerVersion="",i.domain="",A.Long){var u=new A.Long(0,0,!1);i.modelVersion=o.longs===String?u.toString():o.longs===Number?u.toNumber():u}else i.modelVersion=o.longs===String?"0":0;i.docString="",i.graph=null}if(t.irVersion!=null&&t.hasOwnProperty("irVersion")&&(typeof t.irVersion=="number"?i.irVersion=o.longs===String?String(t.irVersion):t.irVersion:i.irVersion=o.longs===String?A.Long.prototype.toString.call(t.irVersion):o.longs===Number?new A.LongBits(t.irVersion.low>>>0,t.irVersion.high>>>0).toNumber():t.irVersion),t.producerName!=null&&t.hasOwnProperty("producerName")&&(i.producerName=t.producerName),t.producerVersion!=null&&t.hasOwnProperty("producerVersion")&&(i.producerVersion=t.producerVersion),t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.modelVersion!=null&&t.hasOwnProperty("modelVersion")&&(typeof t.modelVersion=="number"?i.modelVersion=o.longs===String?String(t.modelVersion):t.modelVersion:i.modelVersion=o.longs===String?A.Long.prototype.toString.call(t.modelVersion):o.longs===Number?new A.LongBits(t.modelVersion.low>>>0,t.modelVersion.high>>>0).toNumber():t.modelVersion),t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.graph!=null&&t.hasOwnProperty("graph")&&(i.graph=T.onnx.GraphProto.toObject(t.graph,o)),t.opsetImport&&t.opsetImport.length){i.opsetImport=[];for(var a=0;a<t.opsetImport.length;++a)i.opsetImport[a]=T.onnx.OperatorSetIdProto.toObject(t.opsetImport[a],o)}if(t.metadataProps&&t.metadataProps.length){i.metadataProps=[];for(var a=0;a<t.metadataProps.length;++a)i.metadataProps[a]=T.onnx.StringStringEntryProto.toObject(t.metadataProps[a],o)}if(t.trainingInfo&&t.trainingInfo.length){i.trainingInfo=[];for(var a=0;a<t.trainingInfo.length;++a)i.trainingInfo[a]=T.onnx.TrainingInfoProto.toObject(t.trainingInfo[a],o)}if(t.functions&&t.functions.length){i.functions=[];for(var a=0;a<t.functions.length;++a)i.functions[a]=T.onnx.FunctionProto.toObject(t.functions[a],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,je.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.ModelProto"},e}(),r.StringStringEntryProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.key="",e.prototype.value="",e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=rt.create()),t.key!=null&&Object.hasOwnProperty.call(t,"key")&&o.uint32(10).string(t.key),t.value!=null&&Object.hasOwnProperty.call(t,"value")&&o.uint32(18).string(t.value),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof K||(t=K.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.StringStringEntryProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.key=t.string();break}case 2:{u.value=t.string();break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof K||(t=new K(t)),this.decode(t,t.uint32())},e.verify=function(t){return typeof t!="object"||t===null?"object expected":t.key!=null&&t.hasOwnProperty("key")&&!A.isString(t.key)?"key: string expected":t.value!=null&&t.hasOwnProperty("value")&&!A.isString(t.value)?"value: string expected":null},e.fromObject=function(t){if(t instanceof T.onnx.StringStringEntryProto)return t;var o=new T.onnx.StringStringEntryProto;return t.key!=null&&(o.key=String(t.key)),t.value!=null&&(o.value=String(t.value)),o},e.toObject=function(t,o){o||(o={});var i={};return o.defaults&&(i.key="",i.value=""),t.key!=null&&t.hasOwnProperty("key")&&(i.key=t.key),t.value!=null&&t.hasOwnProperty("value")&&(i.value=t.value),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,je.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.StringStringEntryProto"},e}(),r.TensorAnnotation=function(){function e(n){if(this.quantParameterTensorNames=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.tensorName="",e.prototype.quantParameterTensorNames=A.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=rt.create()),t.tensorName!=null&&Object.hasOwnProperty.call(t,"tensorName")&&o.uint32(10).string(t.tensorName),t.quantParameterTensorNames!=null&&t.quantParameterTensorNames.length)for(var i=0;i<t.quantParameterTensorNames.length;++i)T.onnx.StringStringEntryProto.encode(t.quantParameterTensorNames[i],o.uint32(18).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof K||(t=K.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.TensorAnnotation;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.tensorName=t.string();break}case 2:{u.quantParameterTensorNames&&u.quantParameterTensorNames.length||(u.quantParameterTensorNames=[]),u.quantParameterTensorNames.push(T.onnx.StringStringEntryProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof K||(t=new K(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.tensorName!=null&&t.hasOwnProperty("tensorName")&&!A.isString(t.tensorName))return"tensorName: string expected";if(t.quantParameterTensorNames!=null&&t.hasOwnProperty("quantParameterTensorNames")){if(!Array.isArray(t.quantParameterTensorNames))return"quantParameterTensorNames: array expected";for(var o=0;o<t.quantParameterTensorNames.length;++o){var i=T.onnx.StringStringEntryProto.verify(t.quantParameterTensorNames[o]);if(i)return"quantParameterTensorNames."+i}}return null},e.fromObject=function(t){if(t instanceof T.onnx.TensorAnnotation)return t;var o=new T.onnx.TensorAnnotation;if(t.tensorName!=null&&(o.tensorName=String(t.tensorName)),t.quantParameterTensorNames){if(!Array.isArray(t.quantParameterTensorNames))throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: array expected");o.quantParameterTensorNames=[];for(var i=0;i<t.quantParameterTensorNames.length;++i){if(typeof t.quantParameterTensorNames[i]!="object")throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: object expected");o.quantParameterTensorNames[i]=T.onnx.StringStringEntryProto.fromObject(t.quantParameterTensorNames[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.quantParameterTensorNames=[]),o.defaults&&(i.tensorName=""),t.tensorName!=null&&t.hasOwnProperty("tensorName")&&(i.tensorName=t.tensorName),t.quantParameterTensorNames&&t.quantParameterTensorNames.length){i.quantParameterTensorNames=[];for(var u=0;u<t.quantParameterTensorNames.length;++u)i.quantParameterTensorNames[u]=T.onnx.StringStringEntryProto.toObject(t.quantParameterTensorNames[u],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,je.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorAnnotation"},e}(),r.GraphProto=function(){function e(n){if(this.node=[],this.initializer=[],this.sparseInitializer=[],this.input=[],this.output=[],this.valueInfo=[],this.quantizationAnnotation=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.node=A.emptyArray,e.prototype.name="",e.prototype.initializer=A.emptyArray,e.prototype.sparseInitializer=A.emptyArray,e.prototype.docString="",e.prototype.input=A.emptyArray,e.prototype.output=A.emptyArray,e.prototype.valueInfo=A.emptyArray,e.prototype.quantizationAnnotation=A.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=rt.create()),t.node!=null&&t.node.length)for(var i=0;i<t.node.length;++i)T.onnx.NodeProto.encode(t.node[i],o.uint32(10).fork()).ldelim();if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(18).string(t.name),t.initializer!=null&&t.initializer.length)for(var i=0;i<t.initializer.length;++i)T.onnx.TensorProto.encode(t.initializer[i],o.uint32(42).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(82).string(t.docString),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)T.onnx.ValueInfoProto.encode(t.input[i],o.uint32(90).fork()).ldelim();if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)T.onnx.ValueInfoProto.encode(t.output[i],o.uint32(98).fork()).ldelim();if(t.valueInfo!=null&&t.valueInfo.length)for(var i=0;i<t.valueInfo.length;++i)T.onnx.ValueInfoProto.encode(t.valueInfo[i],o.uint32(106).fork()).ldelim();if(t.quantizationAnnotation!=null&&t.quantizationAnnotation.length)for(var i=0;i<t.quantizationAnnotation.length;++i)T.onnx.TensorAnnotation.encode(t.quantizationAnnotation[i],o.uint32(114).fork()).ldelim();if(t.sparseInitializer!=null&&t.sparseInitializer.length)for(var i=0;i<t.sparseInitializer.length;++i)T.onnx.SparseTensorProto.encode(t.sparseInitializer[i],o.uint32(122).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof K||(t=K.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.GraphProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.node&&u.node.length||(u.node=[]),u.node.push(T.onnx.NodeProto.decode(t,t.uint32()));break}case 2:{u.name=t.string();break}case 5:{u.initializer&&u.initializer.length||(u.initializer=[]),u.initializer.push(T.onnx.TensorProto.decode(t,t.uint32()));break}case 15:{u.sparseInitializer&&u.sparseInitializer.length||(u.sparseInitializer=[]),u.sparseInitializer.push(T.onnx.SparseTensorProto.decode(t,t.uint32()));break}case 10:{u.docString=t.string();break}case 11:{u.input&&u.input.length||(u.input=[]),u.input.push(T.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 12:{u.output&&u.output.length||(u.output=[]),u.output.push(T.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 13:{u.valueInfo&&u.valueInfo.length||(u.valueInfo=[]),u.valueInfo.push(T.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 14:{u.quantizationAnnotation&&u.quantizationAnnotation.length||(u.quantizationAnnotation=[]),u.quantizationAnnotation.push(T.onnx.TensorAnnotation.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof K||(t=new K(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.node!=null&&t.hasOwnProperty("node")){if(!Array.isArray(t.node))return"node: array expected";for(var o=0;o<t.node.length;++o){var i=T.onnx.NodeProto.verify(t.node[o]);if(i)return"node."+i}}if(t.name!=null&&t.hasOwnProperty("name")&&!A.isString(t.name))return"name: string expected";if(t.initializer!=null&&t.hasOwnProperty("initializer")){if(!Array.isArray(t.initializer))return"initializer: array expected";for(var o=0;o<t.initializer.length;++o){var i=T.onnx.TensorProto.verify(t.initializer[o]);if(i)return"initializer."+i}}if(t.sparseInitializer!=null&&t.hasOwnProperty("sparseInitializer")){if(!Array.isArray(t.sparseInitializer))return"sparseInitializer: array expected";for(var o=0;o<t.sparseInitializer.length;++o){var i=T.onnx.SparseTensorProto.verify(t.sparseInitializer[o]);if(i)return"sparseInitializer."+i}}if(t.docString!=null&&t.hasOwnProperty("docString")&&!A.isString(t.docString))return"docString: string expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o){var i=T.onnx.ValueInfoProto.verify(t.input[o]);if(i)return"input."+i}}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o){var i=T.onnx.ValueInfoProto.verify(t.output[o]);if(i)return"output."+i}}if(t.valueInfo!=null&&t.hasOwnProperty("valueInfo")){if(!Array.isArray(t.valueInfo))return"valueInfo: array expected";for(var o=0;o<t.valueInfo.length;++o){var i=T.onnx.ValueInfoProto.verify(t.valueInfo[o]);if(i)return"valueInfo."+i}}if(t.quantizationAnnotation!=null&&t.hasOwnProperty("quantizationAnnotation")){if(!Array.isArray(t.quantizationAnnotation))return"quantizationAnnotation: array expected";for(var o=0;o<t.quantizationAnnotation.length;++o){var i=T.onnx.TensorAnnotation.verify(t.quantizationAnnotation[o]);if(i)return"quantizationAnnotation."+i}}return null},e.fromObject=function(t){if(t instanceof T.onnx.GraphProto)return t;var o=new T.onnx.GraphProto;if(t.node){if(!Array.isArray(t.node))throw TypeError(".onnx.GraphProto.node: array expected");o.node=[];for(var i=0;i<t.node.length;++i){if(typeof t.node[i]!="object")throw TypeError(".onnx.GraphProto.node: object expected");o.node[i]=T.onnx.NodeProto.fromObject(t.node[i])}}if(t.name!=null&&(o.name=String(t.name)),t.initializer){if(!Array.isArray(t.initializer))throw TypeError(".onnx.GraphProto.initializer: array expected");o.initializer=[];for(var i=0;i<t.initializer.length;++i){if(typeof t.initializer[i]!="object")throw TypeError(".onnx.GraphProto.initializer: object expected");o.initializer[i]=T.onnx.TensorProto.fromObject(t.initializer[i])}}if(t.sparseInitializer){if(!Array.isArray(t.sparseInitializer))throw TypeError(".onnx.GraphProto.sparseInitializer: array expected");o.sparseInitializer=[];for(var i=0;i<t.sparseInitializer.length;++i){if(typeof t.sparseInitializer[i]!="object")throw TypeError(".onnx.GraphProto.sparseInitializer: object expected");o.sparseInitializer[i]=T.onnx.SparseTensorProto.fromObject(t.sparseInitializer[i])}}if(t.docString!=null&&(o.docString=String(t.docString)),t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.GraphProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i){if(typeof t.input[i]!="object")throw TypeError(".onnx.GraphProto.input: object expected");o.input[i]=T.onnx.ValueInfoProto.fromObject(t.input[i])}}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.GraphProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i){if(typeof t.output[i]!="object")throw TypeError(".onnx.GraphProto.output: object expected");o.output[i]=T.onnx.ValueInfoProto.fromObject(t.output[i])}}if(t.valueInfo){if(!Array.isArray(t.valueInfo))throw TypeError(".onnx.GraphProto.valueInfo: array expected");o.valueInfo=[];for(var i=0;i<t.valueInfo.length;++i){if(typeof t.valueInfo[i]!="object")throw TypeError(".onnx.GraphProto.valueInfo: object expected");o.valueInfo[i]=T.onnx.ValueInfoProto.fromObject(t.valueInfo[i])}}if(t.quantizationAnnotation){if(!Array.isArray(t.quantizationAnnotation))throw TypeError(".onnx.GraphProto.quantizationAnnotation: array expected");o.quantizationAnnotation=[];for(var i=0;i<t.quantizationAnnotation.length;++i){if(typeof t.quantizationAnnotation[i]!="object")throw TypeError(".onnx.GraphProto.quantizationAnnotation: object expected");o.quantizationAnnotation[i]=T.onnx.TensorAnnotation.fromObject(t.quantizationAnnotation[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.node=[],i.initializer=[],i.input=[],i.output=[],i.valueInfo=[],i.quantizationAnnotation=[],i.sparseInitializer=[]),o.defaults&&(i.name="",i.docString=""),t.node&&t.node.length){i.node=[];for(var u=0;u<t.node.length;++u)i.node[u]=T.onnx.NodeProto.toObject(t.node[u],o)}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.initializer&&t.initializer.length){i.initializer=[];for(var u=0;u<t.initializer.length;++u)i.initializer[u]=T.onnx.TensorProto.toObject(t.initializer[u],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.input&&t.input.length){i.input=[];for(var u=0;u<t.input.length;++u)i.input[u]=T.onnx.ValueInfoProto.toObject(t.input[u],o)}if(t.output&&t.output.length){i.output=[];for(var u=0;u<t.output.length;++u)i.output[u]=T.onnx.ValueInfoProto.toObject(t.output[u],o)}if(t.valueInfo&&t.valueInfo.length){i.valueInfo=[];for(var u=0;u<t.valueInfo.length;++u)i.valueInfo[u]=T.onnx.ValueInfoProto.toObject(t.valueInfo[u],o)}if(t.quantizationAnnotation&&t.quantizationAnnotation.length){i.quantizationAnnotation=[];for(var u=0;u<t.quantizationAnnotation.length;++u)i.quantizationAnnotation[u]=T.onnx.TensorAnnotation.toObject(t.quantizationAnnotation[u],o)}if(t.sparseInitializer&&t.sparseInitializer.length){i.sparseInitializer=[];for(var u=0;u<t.sparseInitializer.length;++u)i.sparseInitializer[u]=T.onnx.SparseTensorProto.toObject(t.sparseInitializer[u],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,je.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.GraphProto"},e}(),r.TensorProto=function(){function e(n){if(this.dims=[],this.floatData=[],this.int32Data=[],this.stringData=[],this.int64Data=[],this.externalData=[],this.doubleData=[],this.uint64Data=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.dims=A.emptyArray,e.prototype.dataType=0,e.prototype.segment=null,e.prototype.floatData=A.emptyArray,e.prototype.int32Data=A.emptyArray,e.prototype.stringData=A.emptyArray,e.prototype.int64Data=A.emptyArray,e.prototype.name="",e.prototype.docString="",e.prototype.rawData=A.newBuffer([]),e.prototype.externalData=A.emptyArray,e.prototype.dataLocation=0,e.prototype.doubleData=A.emptyArray,e.prototype.uint64Data=A.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=rt.create()),t.dims!=null&&t.dims.length){o.uint32(10).fork();for(var i=0;i<t.dims.length;++i)o.int64(t.dims[i]);o.ldelim()}if(t.dataType!=null&&Object.hasOwnProperty.call(t,"dataType")&&o.uint32(16).int32(t.dataType),t.segment!=null&&Object.hasOwnProperty.call(t,"segment")&&T.onnx.TensorProto.Segment.encode(t.segment,o.uint32(26).fork()).ldelim(),t.floatData!=null&&t.floatData.length){o.uint32(34).fork();for(var i=0;i<t.floatData.length;++i)o.float(t.floatData[i]);o.ldelim()}if(t.int32Data!=null&&t.int32Data.length){o.uint32(42).fork();for(var i=0;i<t.int32Data.length;++i)o.int32(t.int32Data[i]);o.ldelim()}if(t.stringData!=null&&t.stringData.length)for(var i=0;i<t.stringData.length;++i)o.uint32(50).bytes(t.stringData[i]);if(t.int64Data!=null&&t.int64Data.length){o.uint32(58).fork();for(var i=0;i<t.int64Data.length;++i)o.int64(t.int64Data[i]);o.ldelim()}if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(66).string(t.name),t.rawData!=null&&Object.hasOwnProperty.call(t,"rawData")&&o.uint32(74).bytes(t.rawData),t.doubleData!=null&&t.doubleData.length){o.uint32(82).fork();for(var i=0;i<t.doubleData.length;++i)o.double(t.doubleData[i]);o.ldelim()}if(t.uint64Data!=null&&t.uint64Data.length){o.uint32(90).fork();for(var i=0;i<t.uint64Data.length;++i)o.uint64(t.uint64Data[i]);o.ldelim()}if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(98).string(t.docString),t.externalData!=null&&t.externalData.length)for(var i=0;i<t.externalData.length;++i)T.onnx.StringStringEntryProto.encode(t.externalData[i],o.uint32(106).fork()).ldelim();return t.dataLocation!=null&&Object.hasOwnProperty.call(t,"dataLocation")&&o.uint32(112).int32(t.dataLocation),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof K||(t=K.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.TensorProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{if(u.dims&&u.dims.length||(u.dims=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.dims.push(t.int64());else u.dims.push(t.int64());break}case 2:{u.dataType=t.int32();break}case 3:{u.segment=T.onnx.TensorProto.Segment.decode(t,t.uint32());break}case 4:{if(u.floatData&&u.floatData.length||(u.floatData=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.floatData.push(t.float());else u.floatData.push(t.float());break}case 5:{if(u.int32Data&&u.int32Data.length||(u.int32Data=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.int32Data.push(t.int32());else u.int32Data.push(t.int32());break}case 6:{u.stringData&&u.stringData.length||(u.stringData=[]),u.stringData.push(t.bytes());break}case 7:{if(u.int64Data&&u.int64Data.length||(u.int64Data=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.int64Data.push(t.int64());else u.int64Data.push(t.int64());break}case 8:{u.name=t.string();break}case 12:{u.docString=t.string();break}case 9:{u.rawData=t.bytes();break}case 13:{u.externalData&&u.externalData.length||(u.externalData=[]),u.externalData.push(T.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 14:{u.dataLocation=t.int32();break}case 10:{if(u.doubleData&&u.doubleData.length||(u.doubleData=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.doubleData.push(t.double());else u.doubleData.push(t.double());break}case 11:{if(u.uint64Data&&u.uint64Data.length||(u.uint64Data=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.uint64Data.push(t.uint64());else u.uint64Data.push(t.uint64());break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof K||(t=new K(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.dims!=null&&t.hasOwnProperty("dims")){if(!Array.isArray(t.dims))return"dims: array expected";for(var o=0;o<t.dims.length;++o)if(!A.isInteger(t.dims[o])&&!(t.dims[o]&&A.isInteger(t.dims[o].low)&&A.isInteger(t.dims[o].high)))return"dims: integer|Long[] expected"}if(t.dataType!=null&&t.hasOwnProperty("dataType")&&!A.isInteger(t.dataType))return"dataType: integer expected";if(t.segment!=null&&t.hasOwnProperty("segment")){var i=T.onnx.TensorProto.Segment.verify(t.segment);if(i)return"segment."+i}if(t.floatData!=null&&t.hasOwnProperty("floatData")){if(!Array.isArray(t.floatData))return"floatData: array expected";for(var o=0;o<t.floatData.length;++o)if(typeof t.floatData[o]!="number")return"floatData: number[] expected"}if(t.int32Data!=null&&t.hasOwnProperty("int32Data")){if(!Array.isArray(t.int32Data))return"int32Data: array expected";for(var o=0;o<t.int32Data.length;++o)if(!A.isInteger(t.int32Data[o]))return"int32Data: integer[] expected"}if(t.stringData!=null&&t.hasOwnProperty("stringData")){if(!Array.isArray(t.stringData))return"stringData: array expected";for(var o=0;o<t.stringData.length;++o)if(!(t.stringData[o]&&typeof t.stringData[o].length=="number"||A.isString(t.stringData[o])))return"stringData: buffer[] expected"}if(t.int64Data!=null&&t.hasOwnProperty("int64Data")){if(!Array.isArray(t.int64Data))return"int64Data: array expected";for(var o=0;o<t.int64Data.length;++o)if(!A.isInteger(t.int64Data[o])&&!(t.int64Data[o]&&A.isInteger(t.int64Data[o].low)&&A.isInteger(t.int64Data[o].high)))return"int64Data: integer|Long[] expected"}if(t.name!=null&&t.hasOwnProperty("name")&&!A.isString(t.name))return"name: string expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!A.isString(t.docString))return"docString: string expected";if(t.rawData!=null&&t.hasOwnProperty("rawData")&&!(t.rawData&&typeof t.rawData.length=="number"||A.isString(t.rawData)))return"rawData: buffer expected";if(t.externalData!=null&&t.hasOwnProperty("externalData")){if(!Array.isArray(t.externalData))return"externalData: array expected";for(var o=0;o<t.externalData.length;++o){var i=T.onnx.StringStringEntryProto.verify(t.externalData[o]);if(i)return"externalData."+i}}if(t.dataLocation!=null&&t.hasOwnProperty("dataLocation"))switch(t.dataLocation){default:return"dataLocation: enum value expected";case 0:case 1:break}if(t.doubleData!=null&&t.hasOwnProperty("doubleData")){if(!Array.isArray(t.doubleData))return"doubleData: array expected";for(var o=0;o<t.doubleData.length;++o)if(typeof t.doubleData[o]!="number")return"doubleData: number[] expected"}if(t.uint64Data!=null&&t.hasOwnProperty("uint64Data")){if(!Array.isArray(t.uint64Data))return"uint64Data: array expected";for(var o=0;o<t.uint64Data.length;++o)if(!A.isInteger(t.uint64Data[o])&&!(t.uint64Data[o]&&A.isInteger(t.uint64Data[o].low)&&A.isInteger(t.uint64Data[o].high)))return"uint64Data: integer|Long[] expected"}return null},e.fromObject=function(t){if(t instanceof T.onnx.TensorProto)return t;var o=new T.onnx.TensorProto;if(t.dims){if(!Array.isArray(t.dims))throw TypeError(".onnx.TensorProto.dims: array expected");o.dims=[];for(var i=0;i<t.dims.length;++i)A.Long?(o.dims[i]=A.Long.fromValue(t.dims[i])).unsigned=!1:typeof t.dims[i]=="string"?o.dims[i]=parseInt(t.dims[i],10):typeof t.dims[i]=="number"?o.dims[i]=t.dims[i]:typeof t.dims[i]=="object"&&(o.dims[i]=new A.LongBits(t.dims[i].low>>>0,t.dims[i].high>>>0).toNumber())}if(t.dataType!=null&&(o.dataType=t.dataType|0),t.segment!=null){if(typeof t.segment!="object")throw TypeError(".onnx.TensorProto.segment: object expected");o.segment=T.onnx.TensorProto.Segment.fromObject(t.segment)}if(t.floatData){if(!Array.isArray(t.floatData))throw TypeError(".onnx.TensorProto.floatData: array expected");o.floatData=[];for(var i=0;i<t.floatData.length;++i)o.floatData[i]=Number(t.floatData[i])}if(t.int32Data){if(!Array.isArray(t.int32Data))throw TypeError(".onnx.TensorProto.int32Data: array expected");o.int32Data=[];for(var i=0;i<t.int32Data.length;++i)o.int32Data[i]=t.int32Data[i]|0}if(t.stringData){if(!Array.isArray(t.stringData))throw TypeError(".onnx.TensorProto.stringData: array expected");o.stringData=[];for(var i=0;i<t.stringData.length;++i)typeof t.stringData[i]=="string"?A.base64.decode(t.stringData[i],o.stringData[i]=A.newBuffer(A.base64.length(t.stringData[i])),0):t.stringData[i].length>=0&&(o.stringData[i]=t.stringData[i])}if(t.int64Data){if(!Array.isArray(t.int64Data))throw TypeError(".onnx.TensorProto.int64Data: array expected");o.int64Data=[];for(var i=0;i<t.int64Data.length;++i)A.Long?(o.int64Data[i]=A.Long.fromValue(t.int64Data[i])).unsigned=!1:typeof t.int64Data[i]=="string"?o.int64Data[i]=parseInt(t.int64Data[i],10):typeof t.int64Data[i]=="number"?o.int64Data[i]=t.int64Data[i]:typeof t.int64Data[i]=="object"&&(o.int64Data[i]=new A.LongBits(t.int64Data[i].low>>>0,t.int64Data[i].high>>>0).toNumber())}if(t.name!=null&&(o.name=String(t.name)),t.docString!=null&&(o.docString=String(t.docString)),t.rawData!=null&&(typeof t.rawData=="string"?A.base64.decode(t.rawData,o.rawData=A.newBuffer(A.base64.length(t.rawData)),0):t.rawData.length>=0&&(o.rawData=t.rawData)),t.externalData){if(!Array.isArray(t.externalData))throw TypeError(".onnx.TensorProto.externalData: array expected");o.externalData=[];for(var i=0;i<t.externalData.length;++i){if(typeof t.externalData[i]!="object")throw TypeError(".onnx.TensorProto.externalData: object expected");o.externalData[i]=T.onnx.StringStringEntryProto.fromObject(t.externalData[i])}}switch(t.dataLocation){default:if(typeof t.dataLocation=="number"){o.dataLocation=t.dataLocation;break}break;case"DEFAULT":case 0:o.dataLocation=0;break;case"EXTERNAL":case 1:o.dataLocation=1;break}if(t.doubleData){if(!Array.isArray(t.doubleData))throw TypeError(".onnx.TensorProto.doubleData: array expected");o.doubleData=[];for(var i=0;i<t.doubleData.length;++i)o.doubleData[i]=Number(t.doubleData[i])}if(t.uint64Data){if(!Array.isArray(t.uint64Data))throw TypeError(".onnx.TensorProto.uint64Data: array expected");o.uint64Data=[];for(var i=0;i<t.uint64Data.length;++i)A.Long?(o.uint64Data[i]=A.Long.fromValue(t.uint64Data[i])).unsigned=!0:typeof t.uint64Data[i]=="string"?o.uint64Data[i]=parseInt(t.uint64Data[i],10):typeof t.uint64Data[i]=="number"?o.uint64Data[i]=t.uint64Data[i]:typeof t.uint64Data[i]=="object"&&(o.uint64Data[i]=new A.LongBits(t.uint64Data[i].low>>>0,t.uint64Data[i].high>>>0).toNumber(!0))}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dims=[],i.floatData=[],i.int32Data=[],i.stringData=[],i.int64Data=[],i.doubleData=[],i.uint64Data=[],i.externalData=[]),o.defaults&&(i.dataType=0,i.segment=null,i.name="",o.bytes===String?i.rawData="":(i.rawData=[],o.bytes!==Array&&(i.rawData=A.newBuffer(i.rawData))),i.docString="",i.dataLocation=o.enums===String?"DEFAULT":0),t.dims&&t.dims.length){i.dims=[];for(var u=0;u<t.dims.length;++u)typeof t.dims[u]=="number"?i.dims[u]=o.longs===String?String(t.dims[u]):t.dims[u]:i.dims[u]=o.longs===String?A.Long.prototype.toString.call(t.dims[u]):o.longs===Number?new A.LongBits(t.dims[u].low>>>0,t.dims[u].high>>>0).toNumber():t.dims[u]}if(t.dataType!=null&&t.hasOwnProperty("dataType")&&(i.dataType=t.dataType),t.segment!=null&&t.hasOwnProperty("segment")&&(i.segment=T.onnx.TensorProto.Segment.toObject(t.segment,o)),t.floatData&&t.floatData.length){i.floatData=[];for(var u=0;u<t.floatData.length;++u)i.floatData[u]=o.json&&!isFinite(t.floatData[u])?String(t.floatData[u]):t.floatData[u]}if(t.int32Data&&t.int32Data.length){i.int32Data=[];for(var u=0;u<t.int32Data.length;++u)i.int32Data[u]=t.int32Data[u]}if(t.stringData&&t.stringData.length){i.stringData=[];for(var u=0;u<t.stringData.length;++u)i.stringData[u]=o.bytes===String?A.base64.encode(t.stringData[u],0,t.stringData[u].length):o.bytes===Array?Array.prototype.slice.call(t.stringData[u]):t.stringData[u]}if(t.int64Data&&t.int64Data.length){i.int64Data=[];for(var u=0;u<t.int64Data.length;++u)typeof t.int64Data[u]=="number"?i.int64Data[u]=o.longs===String?String(t.int64Data[u]):t.int64Data[u]:i.int64Data[u]=o.longs===String?A.Long.prototype.toString.call(t.int64Data[u]):o.longs===Number?new A.LongBits(t.int64Data[u].low>>>0,t.int64Data[u].high>>>0).toNumber():t.int64Data[u]}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.rawData!=null&&t.hasOwnProperty("rawData")&&(i.rawData=o.bytes===String?A.base64.encode(t.rawData,0,t.rawData.length):o.bytes===Array?Array.prototype.slice.call(t.rawData):t.rawData),t.doubleData&&t.doubleData.length){i.doubleData=[];for(var u=0;u<t.doubleData.length;++u)i.doubleData[u]=o.json&&!isFinite(t.doubleData[u])?String(t.doubleData[u]):t.doubleData[u]}if(t.uint64Data&&t.uint64Data.length){i.uint64Data=[];for(var u=0;u<t.uint64Data.length;++u)typeof t.uint64Data[u]=="number"?i.uint64Data[u]=o.longs===String?String(t.uint64Data[u]):t.uint64Data[u]:i.uint64Data[u]=o.longs===String?A.Long.prototype.toString.call(t.uint64Data[u]):o.longs===Number?new A.LongBits(t.uint64Data[u].low>>>0,t.uint64Data[u].high>>>0).toNumber(!0):t.uint64Data[u]}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.externalData&&t.externalData.length){i.externalData=[];for(var u=0;u<t.externalData.length;++u)i.externalData[u]=T.onnx.StringStringEntryProto.toObject(t.externalData[u],o)}return t.dataLocation!=null&&t.hasOwnProperty("dataLocation")&&(i.dataLocation=o.enums===String?T.onnx.TensorProto.DataLocation[t.dataLocation]===void 0?t.dataLocation:T.onnx.TensorProto.DataLocation[t.dataLocation]:t.dataLocation),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,je.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorProto"},e.DataType=function(){var n={},t=Object.create(n);return t[n[0]="UNDEFINED"]=0,t[n[1]="FLOAT"]=1,t[n[2]="UINT8"]=2,t[n[3]="INT8"]=3,t[n[4]="UINT16"]=4,t[n[5]="INT16"]=5,t[n[6]="INT32"]=6,t[n[7]="INT64"]=7,t[n[8]="STRING"]=8,t[n[9]="BOOL"]=9,t[n[10]="FLOAT16"]=10,t[n[11]="DOUBLE"]=11,t[n[12]="UINT32"]=12,t[n[13]="UINT64"]=13,t[n[14]="COMPLEX64"]=14,t[n[15]="COMPLEX128"]=15,t[n[16]="BFLOAT16"]=16,t[n[17]="FLOAT8E4M3FN"]=17,t[n[18]="FLOAT8E4M3FNUZ"]=18,t[n[19]="FLOAT8E5M2"]=19,t[n[20]="FLOAT8E5M2FNUZ"]=20,t}(),e.Segment=function(){function n(t){if(t)for(var o=Object.keys(t),i=0;i<o.length;++i)t[o[i]]!=null&&(this[o[i]]=t[o[i]])}return n.prototype.begin=A.Long?A.Long.fromBits(0,0,!1):0,n.prototype.end=A.Long?A.Long.fromBits(0,0,!1):0,n.create=function(o){return new n(o)},n.encode=function(o,i){return i||(i=rt.create()),o.begin!=null&&Object.hasOwnProperty.call(o,"begin")&&i.uint32(8).int64(o.begin),o.end!=null&&Object.hasOwnProperty.call(o,"end")&&i.uint32(16).int64(o.end),i},n.encodeDelimited=function(o,i){return this.encode(o,i).ldelim()},n.decode=function(o,i){o instanceof K||(o=K.create(o));for(var u=i===void 0?o.len:o.pos+i,a=new T.onnx.TensorProto.Segment;o.pos<u;){var s=o.uint32();switch(s>>>3){case 1:{a.begin=o.int64();break}case 2:{a.end=o.int64();break}default:o.skipType(s&7);break}}return a},n.decodeDelimited=function(o){return o instanceof K||(o=new K(o)),this.decode(o,o.uint32())},n.verify=function(o){return typeof o!="object"||o===null?"object expected":o.begin!=null&&o.hasOwnProperty("begin")&&!A.isInteger(o.begin)&&!(o.begin&&A.isInteger(o.begin.low)&&A.isInteger(o.begin.high))?"begin: integer|Long expected":o.end!=null&&o.hasOwnProperty("end")&&!A.isInteger(o.end)&&!(o.end&&A.isInteger(o.end.low)&&A.isInteger(o.end.high))?"end: integer|Long expected":null},n.fromObject=function(o){if(o instanceof T.onnx.TensorProto.Segment)return o;var i=new T.onnx.TensorProto.Segment;return o.begin!=null&&(A.Long?(i.begin=A.Long.fromValue(o.begin)).unsigned=!1:typeof o.begin=="string"?i.begin=parseInt(o.begin,10):typeof o.begin=="number"?i.begin=o.begin:typeof o.begin=="object"&&(i.begin=new A.LongBits(o.begin.low>>>0,o.begin.high>>>0).toNumber())),o.end!=null&&(A.Long?(i.end=A.Long.fromValue(o.end)).unsigned=!1:typeof o.end=="string"?i.end=parseInt(o.end,10):typeof o.end=="number"?i.end=o.end:typeof o.end=="object"&&(i.end=new A.LongBits(o.end.low>>>0,o.end.high>>>0).toNumber())),i},n.toObject=function(o,i){i||(i={});var u={};if(i.defaults){if(A.Long){var a=new A.Long(0,0,!1);u.begin=i.longs===String?a.toString():i.longs===Number?a.toNumber():a}else u.begin=i.longs===String?"0":0;if(A.Long){var a=new A.Long(0,0,!1);u.end=i.longs===String?a.toString():i.longs===Number?a.toNumber():a}else u.end=i.longs===String?"0":0}return o.begin!=null&&o.hasOwnProperty("begin")&&(typeof o.begin=="number"?u.begin=i.longs===String?String(o.begin):o.begin:u.begin=i.longs===String?A.Long.prototype.toString.call(o.begin):i.longs===Number?new A.LongBits(o.begin.low>>>0,o.begin.high>>>0).toNumber():o.begin),o.end!=null&&o.hasOwnProperty("end")&&(typeof o.end=="number"?u.end=i.longs===String?String(o.end):o.end:u.end=i.longs===String?A.Long.prototype.toString.call(o.end):i.longs===Number?new A.LongBits(o.end.low>>>0,o.end.high>>>0).toNumber():o.end),u},n.prototype.toJSON=function(){return this.constructor.toObject(this,je.util.toJSONOptions)},n.getTypeUrl=function(o){return o===void 0&&(o="type.googleapis.com"),o+"/onnx.TensorProto.Segment"},n}(),e.DataLocation=function(){var n={},t=Object.create(n);return t[n[0]="DEFAULT"]=0,t[n[1]="EXTERNAL"]=1,t}(),e}(),r.SparseTensorProto=function(){function e(n){if(this.dims=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.values=null,e.prototype.indices=null,e.prototype.dims=A.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=rt.create()),t.values!=null&&Object.hasOwnProperty.call(t,"values")&&T.onnx.TensorProto.encode(t.values,o.uint32(10).fork()).ldelim(),t.indices!=null&&Object.hasOwnProperty.call(t,"indices")&&T.onnx.TensorProto.encode(t.indices,o.uint32(18).fork()).ldelim(),t.dims!=null&&t.dims.length){o.uint32(26).fork();for(var i=0;i<t.dims.length;++i)o.int64(t.dims[i]);o.ldelim()}return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof K||(t=K.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.SparseTensorProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.values=T.onnx.TensorProto.decode(t,t.uint32());break}case 2:{u.indices=T.onnx.TensorProto.decode(t,t.uint32());break}case 3:{if(u.dims&&u.dims.length||(u.dims=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.dims.push(t.int64());else u.dims.push(t.int64());break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof K||(t=new K(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.values!=null&&t.hasOwnProperty("values")){var o=T.onnx.TensorProto.verify(t.values);if(o)return"values."+o}if(t.indices!=null&&t.hasOwnProperty("indices")){var o=T.onnx.TensorProto.verify(t.indices);if(o)return"indices."+o}if(t.dims!=null&&t.hasOwnProperty("dims")){if(!Array.isArray(t.dims))return"dims: array expected";for(var i=0;i<t.dims.length;++i)if(!A.isInteger(t.dims[i])&&!(t.dims[i]&&A.isInteger(t.dims[i].low)&&A.isInteger(t.dims[i].high)))return"dims: integer|Long[] expected"}return null},e.fromObject=function(t){if(t instanceof T.onnx.SparseTensorProto)return t;var o=new T.onnx.SparseTensorProto;if(t.values!=null){if(typeof t.values!="object")throw TypeError(".onnx.SparseTensorProto.values: object expected");o.values=T.onnx.TensorProto.fromObject(t.values)}if(t.indices!=null){if(typeof t.indices!="object")throw TypeError(".onnx.SparseTensorProto.indices: object expected");o.indices=T.onnx.TensorProto.fromObject(t.indices)}if(t.dims){if(!Array.isArray(t.dims))throw TypeError(".onnx.SparseTensorProto.dims: array expected");o.dims=[];for(var i=0;i<t.dims.length;++i)A.Long?(o.dims[i]=A.Long.fromValue(t.dims[i])).unsigned=!1:typeof t.dims[i]=="string"?o.dims[i]=parseInt(t.dims[i],10):typeof t.dims[i]=="number"?o.dims[i]=t.dims[i]:typeof t.dims[i]=="object"&&(o.dims[i]=new A.LongBits(t.dims[i].low>>>0,t.dims[i].high>>>0).toNumber())}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dims=[]),o.defaults&&(i.values=null,i.indices=null),t.values!=null&&t.hasOwnProperty("values")&&(i.values=T.onnx.TensorProto.toObject(t.values,o)),t.indices!=null&&t.hasOwnProperty("indices")&&(i.indices=T.onnx.TensorProto.toObject(t.indices,o)),t.dims&&t.dims.length){i.dims=[];for(var u=0;u<t.dims.length;++u)typeof t.dims[u]=="number"?i.dims[u]=o.longs===String?String(t.dims[u]):t.dims[u]:i.dims[u]=o.longs===String?A.Long.prototype.toString.call(t.dims[u]):o.longs===Number?new A.LongBits(t.dims[u].low>>>0,t.dims[u].high>>>0).toNumber():t.dims[u]}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,je.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.SparseTensorProto"},e}(),r.TensorShapeProto=function(){function e(n){if(this.dim=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.dim=A.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=rt.create()),t.dim!=null&&t.dim.length)for(var i=0;i<t.dim.length;++i)T.onnx.TensorShapeProto.Dimension.encode(t.dim[i],o.uint32(10).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof K||(t=K.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.TensorShapeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.dim&&u.dim.length||(u.dim=[]),u.dim.push(T.onnx.TensorShapeProto.Dimension.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof K||(t=new K(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.dim!=null&&t.hasOwnProperty("dim")){if(!Array.isArray(t.dim))return"dim: array expected";for(var o=0;o<t.dim.length;++o){var i=T.onnx.TensorShapeProto.Dimension.verify(t.dim[o]);if(i)return"dim."+i}}return null},e.fromObject=function(t){if(t instanceof T.onnx.TensorShapeProto)return t;var o=new T.onnx.TensorShapeProto;if(t.dim){if(!Array.isArray(t.dim))throw TypeError(".onnx.TensorShapeProto.dim: array expected");o.dim=[];for(var i=0;i<t.dim.length;++i){if(typeof t.dim[i]!="object")throw TypeError(".onnx.TensorShapeProto.dim: object expected");o.dim[i]=T.onnx.TensorShapeProto.Dimension.fromObject(t.dim[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dim=[]),t.dim&&t.dim.length){i.dim=[];for(var u=0;u<t.dim.length;++u)i.dim[u]=T.onnx.TensorShapeProto.Dimension.toObject(t.dim[u],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,je.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorShapeProto"},e.Dimension=function(){function n(o){if(o)for(var i=Object.keys(o),u=0;u<i.length;++u)o[i[u]]!=null&&(this[i[u]]=o[i[u]])}n.prototype.dimValue=null,n.prototype.dimParam=null,n.prototype.denotation="";var t;return Object.defineProperty(n.prototype,"value",{get:A.oneOfGetter(t=["dimValue","dimParam"]),set:A.oneOfSetter(t)}),n.create=function(i){return new n(i)},n.encode=function(i,u){return u||(u=rt.create()),i.dimValue!=null&&Object.hasOwnProperty.call(i,"dimValue")&&u.uint32(8).int64(i.dimValue),i.dimParam!=null&&Object.hasOwnProperty.call(i,"dimParam")&&u.uint32(18).string(i.dimParam),i.denotation!=null&&Object.hasOwnProperty.call(i,"denotation")&&u.uint32(26).string(i.denotation),u},n.encodeDelimited=function(i,u){return this.encode(i,u).ldelim()},n.decode=function(i,u){i instanceof K||(i=K.create(i));for(var a=u===void 0?i.len:i.pos+u,s=new T.onnx.TensorShapeProto.Dimension;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{s.dimValue=i.int64();break}case 2:{s.dimParam=i.string();break}case 3:{s.denotation=i.string();break}default:i.skipType(l&7);break}}return s},n.decodeDelimited=function(i){return i instanceof K||(i=new K(i)),this.decode(i,i.uint32())},n.verify=function(i){if(typeof i!="object"||i===null)return"object expected";var u={};if(i.dimValue!=null&&i.hasOwnProperty("dimValue")&&(u.value=1,!A.isInteger(i.dimValue)&&!(i.dimValue&&A.isInteger(i.dimValue.low)&&A.isInteger(i.dimValue.high))))return"dimValue: integer|Long expected";if(i.dimParam!=null&&i.hasOwnProperty("dimParam")){if(u.value===1)return"value: multiple values";if(u.value=1,!A.isString(i.dimParam))return"dimParam: string expected"}return i.denotation!=null&&i.hasOwnProperty("denotation")&&!A.isString(i.denotation)?"denotation: string expected":null},n.fromObject=function(i){if(i instanceof T.onnx.TensorShapeProto.Dimension)return i;var u=new T.onnx.TensorShapeProto.Dimension;return i.dimValue!=null&&(A.Long?(u.dimValue=A.Long.fromValue(i.dimValue)).unsigned=!1:typeof i.dimValue=="string"?u.dimValue=parseInt(i.dimValue,10):typeof i.dimValue=="number"?u.dimValue=i.dimValue:typeof i.dimValue=="object"&&(u.dimValue=new A.LongBits(i.dimValue.low>>>0,i.dimValue.high>>>0).toNumber())),i.dimParam!=null&&(u.dimParam=String(i.dimParam)),i.denotation!=null&&(u.denotation=String(i.denotation)),u},n.toObject=function(i,u){u||(u={});var a={};return u.defaults&&(a.denotation=""),i.dimValue!=null&&i.hasOwnProperty("dimValue")&&(typeof i.dimValue=="number"?a.dimValue=u.longs===String?String(i.dimValue):i.dimValue:a.dimValue=u.longs===String?A.Long.prototype.toString.call(i.dimValue):u.longs===Number?new A.LongBits(i.dimValue.low>>>0,i.dimValue.high>>>0).toNumber():i.dimValue,u.oneofs&&(a.value="dimValue")),i.dimParam!=null&&i.hasOwnProperty("dimParam")&&(a.dimParam=i.dimParam,u.oneofs&&(a.value="dimParam")),i.denotation!=null&&i.hasOwnProperty("denotation")&&(a.denotation=i.denotation),a},n.prototype.toJSON=function(){return this.constructor.toObject(this,je.util.toJSONOptions)},n.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TensorShapeProto.Dimension"},n}(),e}(),r.TypeProto=function(){function e(t){if(t)for(var o=Object.keys(t),i=0;i<o.length;++i)t[o[i]]!=null&&(this[o[i]]=t[o[i]])}e.prototype.tensorType=null,e.prototype.sequenceType=null,e.prototype.mapType=null,e.prototype.optionalType=null,e.prototype.sparseTensorType=null,e.prototype.denotation="";var n;return Object.defineProperty(e.prototype,"value",{get:A.oneOfGetter(n=["tensorType","sequenceType","mapType","optionalType","sparseTensorType"]),set:A.oneOfSetter(n)}),e.create=function(o){return new e(o)},e.encode=function(o,i){return i||(i=rt.create()),o.tensorType!=null&&Object.hasOwnProperty.call(o,"tensorType")&&T.onnx.TypeProto.Tensor.encode(o.tensorType,i.uint32(10).fork()).ldelim(),o.sequenceType!=null&&Object.hasOwnProperty.call(o,"sequenceType")&&T.onnx.TypeProto.Sequence.encode(o.sequenceType,i.uint32(34).fork()).ldelim(),o.mapType!=null&&Object.hasOwnProperty.call(o,"mapType")&&T.onnx.TypeProto.Map.encode(o.mapType,i.uint32(42).fork()).ldelim(),o.denotation!=null&&Object.hasOwnProperty.call(o,"denotation")&&i.uint32(50).string(o.denotation),o.sparseTensorType!=null&&Object.hasOwnProperty.call(o,"sparseTensorType")&&T.onnx.TypeProto.SparseTensor.encode(o.sparseTensorType,i.uint32(66).fork()).ldelim(),o.optionalType!=null&&Object.hasOwnProperty.call(o,"optionalType")&&T.onnx.TypeProto.Optional.encode(o.optionalType,i.uint32(74).fork()).ldelim(),i},e.encodeDelimited=function(o,i){return this.encode(o,i).ldelim()},e.decode=function(o,i){o instanceof K||(o=K.create(o));for(var u=i===void 0?o.len:o.pos+i,a=new T.onnx.TypeProto;o.pos<u;){var s=o.uint32();switch(s>>>3){case 1:{a.tensorType=T.onnx.TypeProto.Tensor.decode(o,o.uint32());break}case 4:{a.sequenceType=T.onnx.TypeProto.Sequence.decode(o,o.uint32());break}case 5:{a.mapType=T.onnx.TypeProto.Map.decode(o,o.uint32());break}case 9:{a.optionalType=T.onnx.TypeProto.Optional.decode(o,o.uint32());break}case 8:{a.sparseTensorType=T.onnx.TypeProto.SparseTensor.decode(o,o.uint32());break}case 6:{a.denotation=o.string();break}default:o.skipType(s&7);break}}return a},e.decodeDelimited=function(o){return o instanceof K||(o=new K(o)),this.decode(o,o.uint32())},e.verify=function(o){if(typeof o!="object"||o===null)return"object expected";var i={};if(o.tensorType!=null&&o.hasOwnProperty("tensorType")){i.value=1;{var u=T.onnx.TypeProto.Tensor.verify(o.tensorType);if(u)return"tensorType."+u}}if(o.sequenceType!=null&&o.hasOwnProperty("sequenceType")){if(i.value===1)return"value: multiple values";i.value=1;{var u=T.onnx.TypeProto.Sequence.verify(o.sequenceType);if(u)return"sequenceType."+u}}if(o.mapType!=null&&o.hasOwnProperty("mapType")){if(i.value===1)return"value: multiple values";i.value=1;{var u=T.onnx.TypeProto.Map.verify(o.mapType);if(u)return"mapType."+u}}if(o.optionalType!=null&&o.hasOwnProperty("optionalType")){if(i.value===1)return"value: multiple values";i.value=1;{var u=T.onnx.TypeProto.Optional.verify(o.optionalType);if(u)return"optionalType."+u}}if(o.sparseTensorType!=null&&o.hasOwnProperty("sparseTensorType")){if(i.value===1)return"value: multiple values";i.value=1;{var u=T.onnx.TypeProto.SparseTensor.verify(o.sparseTensorType);if(u)return"sparseTensorType."+u}}return o.denotation!=null&&o.hasOwnProperty("denotation")&&!A.isString(o.denotation)?"denotation: string expected":null},e.fromObject=function(o){if(o instanceof T.onnx.TypeProto)return o;var i=new T.onnx.TypeProto;if(o.tensorType!=null){if(typeof o.tensorType!="object")throw TypeError(".onnx.TypeProto.tensorType: object expected");i.tensorType=T.onnx.TypeProto.Tensor.fromObject(o.tensorType)}if(o.sequenceType!=null){if(typeof o.sequenceType!="object")throw TypeError(".onnx.TypeProto.sequenceType: object expected");i.sequenceType=T.onnx.TypeProto.Sequence.fromObject(o.sequenceType)}if(o.mapType!=null){if(typeof o.mapType!="object")throw TypeError(".onnx.TypeProto.mapType: object expected");i.mapType=T.onnx.TypeProto.Map.fromObject(o.mapType)}if(o.optionalType!=null){if(typeof o.optionalType!="object")throw TypeError(".onnx.TypeProto.optionalType: object expected");i.optionalType=T.onnx.TypeProto.Optional.fromObject(o.optionalType)}if(o.sparseTensorType!=null){if(typeof o.sparseTensorType!="object")throw TypeError(".onnx.TypeProto.sparseTensorType: object expected");i.sparseTensorType=T.onnx.TypeProto.SparseTensor.fromObject(o.sparseTensorType)}return o.denotation!=null&&(i.denotation=String(o.denotation)),i},e.toObject=function(o,i){i||(i={});var u={};return i.defaults&&(u.denotation=""),o.tensorType!=null&&o.hasOwnProperty("tensorType")&&(u.tensorType=T.onnx.TypeProto.Tensor.toObject(o.tensorType,i),i.oneofs&&(u.value="tensorType")),o.sequenceType!=null&&o.hasOwnProperty("sequenceType")&&(u.sequenceType=T.onnx.TypeProto.Sequence.toObject(o.sequenceType,i),i.oneofs&&(u.value="sequenceType")),o.mapType!=null&&o.hasOwnProperty("mapType")&&(u.mapType=T.onnx.TypeProto.Map.toObject(o.mapType,i),i.oneofs&&(u.value="mapType")),o.denotation!=null&&o.hasOwnProperty("denotation")&&(u.denotation=o.denotation),o.sparseTensorType!=null&&o.hasOwnProperty("sparseTensorType")&&(u.sparseTensorType=T.onnx.TypeProto.SparseTensor.toObject(o.sparseTensorType,i),i.oneofs&&(u.value="sparseTensorType")),o.optionalType!=null&&o.hasOwnProperty("optionalType")&&(u.optionalType=T.onnx.TypeProto.Optional.toObject(o.optionalType,i),i.oneofs&&(u.value="optionalType")),u},e.prototype.toJSON=function(){return this.constructor.toObject(this,je.util.toJSONOptions)},e.getTypeUrl=function(o){return o===void 0&&(o="type.googleapis.com"),o+"/onnx.TypeProto"},e.Tensor=function(){function t(o){if(o)for(var i=Object.keys(o),u=0;u<i.length;++u)o[i[u]]!=null&&(this[i[u]]=o[i[u]])}return t.prototype.elemType=0,t.prototype.shape=null,t.create=function(i){return new t(i)},t.encode=function(i,u){return u||(u=rt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&u.uint32(8).int32(i.elemType),i.shape!=null&&Object.hasOwnProperty.call(i,"shape")&&T.onnx.TensorShapeProto.encode(i.shape,u.uint32(18).fork()).ldelim(),u},t.encodeDelimited=function(i,u){return this.encode(i,u).ldelim()},t.decode=function(i,u){i instanceof K||(i=K.create(i));for(var a=u===void 0?i.len:i.pos+u,s=new T.onnx.TypeProto.Tensor;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{s.elemType=i.int32();break}case 2:{s.shape=T.onnx.TensorShapeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return s},t.decodeDelimited=function(i){return i instanceof K||(i=new K(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")&&!A.isInteger(i.elemType))return"elemType: integer expected";if(i.shape!=null&&i.hasOwnProperty("shape")){var u=T.onnx.TensorShapeProto.verify(i.shape);if(u)return"shape."+u}return null},t.fromObject=function(i){if(i instanceof T.onnx.TypeProto.Tensor)return i;var u=new T.onnx.TypeProto.Tensor;if(i.elemType!=null&&(u.elemType=i.elemType|0),i.shape!=null){if(typeof i.shape!="object")throw TypeError(".onnx.TypeProto.Tensor.shape: object expected");u.shape=T.onnx.TensorShapeProto.fromObject(i.shape)}return u},t.toObject=function(i,u){u||(u={});var a={};return u.defaults&&(a.elemType=0,a.shape=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=i.elemType),i.shape!=null&&i.hasOwnProperty("shape")&&(a.shape=T.onnx.TensorShapeProto.toObject(i.shape,u)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,je.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Tensor"},t}(),e.Sequence=function(){function t(o){if(o)for(var i=Object.keys(o),u=0;u<i.length;++u)o[i[u]]!=null&&(this[i[u]]=o[i[u]])}return t.prototype.elemType=null,t.create=function(i){return new t(i)},t.encode=function(i,u){return u||(u=rt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&T.onnx.TypeProto.encode(i.elemType,u.uint32(10).fork()).ldelim(),u},t.encodeDelimited=function(i,u){return this.encode(i,u).ldelim()},t.decode=function(i,u){i instanceof K||(i=K.create(i));for(var a=u===void 0?i.len:i.pos+u,s=new T.onnx.TypeProto.Sequence;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{s.elemType=T.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return s},t.decodeDelimited=function(i){return i instanceof K||(i=new K(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")){var u=T.onnx.TypeProto.verify(i.elemType);if(u)return"elemType."+u}return null},t.fromObject=function(i){if(i instanceof T.onnx.TypeProto.Sequence)return i;var u=new T.onnx.TypeProto.Sequence;if(i.elemType!=null){if(typeof i.elemType!="object")throw TypeError(".onnx.TypeProto.Sequence.elemType: object expected");u.elemType=T.onnx.TypeProto.fromObject(i.elemType)}return u},t.toObject=function(i,u){u||(u={});var a={};return u.defaults&&(a.elemType=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=T.onnx.TypeProto.toObject(i.elemType,u)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,je.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Sequence"},t}(),e.Map=function(){function t(o){if(o)for(var i=Object.keys(o),u=0;u<i.length;++u)o[i[u]]!=null&&(this[i[u]]=o[i[u]])}return t.prototype.keyType=0,t.prototype.valueType=null,t.create=function(i){return new t(i)},t.encode=function(i,u){return u||(u=rt.create()),i.keyType!=null&&Object.hasOwnProperty.call(i,"keyType")&&u.uint32(8).int32(i.keyType),i.valueType!=null&&Object.hasOwnProperty.call(i,"valueType")&&T.onnx.TypeProto.encode(i.valueType,u.uint32(18).fork()).ldelim(),u},t.encodeDelimited=function(i,u){return this.encode(i,u).ldelim()},t.decode=function(i,u){i instanceof K||(i=K.create(i));for(var a=u===void 0?i.len:i.pos+u,s=new T.onnx.TypeProto.Map;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{s.keyType=i.int32();break}case 2:{s.valueType=T.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return s},t.decodeDelimited=function(i){return i instanceof K||(i=new K(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.keyType!=null&&i.hasOwnProperty("keyType")&&!A.isInteger(i.keyType))return"keyType: integer expected";if(i.valueType!=null&&i.hasOwnProperty("valueType")){var u=T.onnx.TypeProto.verify(i.valueType);if(u)return"valueType."+u}return null},t.fromObject=function(i){if(i instanceof T.onnx.TypeProto.Map)return i;var u=new T.onnx.TypeProto.Map;if(i.keyType!=null&&(u.keyType=i.keyType|0),i.valueType!=null){if(typeof i.valueType!="object")throw TypeError(".onnx.TypeProto.Map.valueType: object expected");u.valueType=T.onnx.TypeProto.fromObject(i.valueType)}return u},t.toObject=function(i,u){u||(u={});var a={};return u.defaults&&(a.keyType=0,a.valueType=null),i.keyType!=null&&i.hasOwnProperty("keyType")&&(a.keyType=i.keyType),i.valueType!=null&&i.hasOwnProperty("valueType")&&(a.valueType=T.onnx.TypeProto.toObject(i.valueType,u)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,je.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Map"},t}(),e.Optional=function(){function t(o){if(o)for(var i=Object.keys(o),u=0;u<i.length;++u)o[i[u]]!=null&&(this[i[u]]=o[i[u]])}return t.prototype.elemType=null,t.create=function(i){return new t(i)},t.encode=function(i,u){return u||(u=rt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&T.onnx.TypeProto.encode(i.elemType,u.uint32(10).fork()).ldelim(),u},t.encodeDelimited=function(i,u){return this.encode(i,u).ldelim()},t.decode=function(i,u){i instanceof K||(i=K.create(i));for(var a=u===void 0?i.len:i.pos+u,s=new T.onnx.TypeProto.Optional;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{s.elemType=T.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return s},t.decodeDelimited=function(i){return i instanceof K||(i=new K(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")){var u=T.onnx.TypeProto.verify(i.elemType);if(u)return"elemType."+u}return null},t.fromObject=function(i){if(i instanceof T.onnx.TypeProto.Optional)return i;var u=new T.onnx.TypeProto.Optional;if(i.elemType!=null){if(typeof i.elemType!="object")throw TypeError(".onnx.TypeProto.Optional.elemType: object expected");u.elemType=T.onnx.TypeProto.fromObject(i.elemType)}return u},t.toObject=function(i,u){u||(u={});var a={};return u.defaults&&(a.elemType=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=T.onnx.TypeProto.toObject(i.elemType,u)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,je.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Optional"},t}(),e.SparseTensor=function(){function t(o){if(o)for(var i=Object.keys(o),u=0;u<i.length;++u)o[i[u]]!=null&&(this[i[u]]=o[i[u]])}return t.prototype.elemType=0,t.prototype.shape=null,t.create=function(i){return new t(i)},t.encode=function(i,u){return u||(u=rt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&u.uint32(8).int32(i.elemType),i.shape!=null&&Object.hasOwnProperty.call(i,"shape")&&T.onnx.TensorShapeProto.encode(i.shape,u.uint32(18).fork()).ldelim(),u},t.encodeDelimited=function(i,u){return this.encode(i,u).ldelim()},t.decode=function(i,u){i instanceof K||(i=K.create(i));for(var a=u===void 0?i.len:i.pos+u,s=new T.onnx.TypeProto.SparseTensor;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{s.elemType=i.int32();break}case 2:{s.shape=T.onnx.TensorShapeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return s},t.decodeDelimited=function(i){return i instanceof K||(i=new K(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")&&!A.isInteger(i.elemType))return"elemType: integer expected";if(i.shape!=null&&i.hasOwnProperty("shape")){var u=T.onnx.TensorShapeProto.verify(i.shape);if(u)return"shape."+u}return null},t.fromObject=function(i){if(i instanceof T.onnx.TypeProto.SparseTensor)return i;var u=new T.onnx.TypeProto.SparseTensor;if(i.elemType!=null&&(u.elemType=i.elemType|0),i.shape!=null){if(typeof i.shape!="object")throw TypeError(".onnx.TypeProto.SparseTensor.shape: object expected");u.shape=T.onnx.TensorShapeProto.fromObject(i.shape)}return u},t.toObject=function(i,u){u||(u={});var a={};return u.defaults&&(a.elemType=0,a.shape=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=i.elemType),i.shape!=null&&i.hasOwnProperty("shape")&&(a.shape=T.onnx.TensorShapeProto.toObject(i.shape,u)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,je.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.SparseTensor"},t}(),e}(),r.OperatorSetIdProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.domain="",e.prototype.version=A.Long?A.Long.fromBits(0,0,!1):0,e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=rt.create()),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(10).string(t.domain),t.version!=null&&Object.hasOwnProperty.call(t,"version")&&o.uint32(16).int64(t.version),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof K||(t=K.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.OperatorSetIdProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.domain=t.string();break}case 2:{u.version=t.int64();break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof K||(t=new K(t)),this.decode(t,t.uint32())},e.verify=function(t){return typeof t!="object"||t===null?"object expected":t.domain!=null&&t.hasOwnProperty("domain")&&!A.isString(t.domain)?"domain: string expected":t.version!=null&&t.hasOwnProperty("version")&&!A.isInteger(t.version)&&!(t.version&&A.isInteger(t.version.low)&&A.isInteger(t.version.high))?"version: integer|Long expected":null},e.fromObject=function(t){if(t instanceof T.onnx.OperatorSetIdProto)return t;var o=new T.onnx.OperatorSetIdProto;return t.domain!=null&&(o.domain=String(t.domain)),t.version!=null&&(A.Long?(o.version=A.Long.fromValue(t.version)).unsigned=!1:typeof t.version=="string"?o.version=parseInt(t.version,10):typeof t.version=="number"?o.version=t.version:typeof t.version=="object"&&(o.version=new A.LongBits(t.version.low>>>0,t.version.high>>>0).toNumber())),o},e.toObject=function(t,o){o||(o={});var i={};if(o.defaults)if(i.domain="",A.Long){var u=new A.Long(0,0,!1);i.version=o.longs===String?u.toString():o.longs===Number?u.toNumber():u}else i.version=o.longs===String?"0":0;return t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.version!=null&&t.hasOwnProperty("version")&&(typeof t.version=="number"?i.version=o.longs===String?String(t.version):t.version:i.version=o.longs===String?A.Long.prototype.toString.call(t.version):o.longs===Number?new A.LongBits(t.version.low>>>0,t.version.high>>>0).toNumber():t.version),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,je.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.OperatorSetIdProto"},e}(),r.OperatorStatus=function(){var e={},n=Object.create(e);return n[e[0]="EXPERIMENTAL"]=0,n[e[1]="STABLE"]=1,n}(),r.FunctionProto=function(){function e(n){if(this.input=[],this.output=[],this.attribute=[],this.attributeProto=[],this.node=[],this.opsetImport=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.input=A.emptyArray,e.prototype.output=A.emptyArray,e.prototype.attribute=A.emptyArray,e.prototype.attributeProto=A.emptyArray,e.prototype.node=A.emptyArray,e.prototype.docString="",e.prototype.opsetImport=A.emptyArray,e.prototype.domain="",e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=rt.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)o.uint32(34).string(t.input[i]);if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)o.uint32(42).string(t.output[i]);if(t.attribute!=null&&t.attribute.length)for(var i=0;i<t.attribute.length;++i)o.uint32(50).string(t.attribute[i]);if(t.node!=null&&t.node.length)for(var i=0;i<t.node.length;++i)T.onnx.NodeProto.encode(t.node[i],o.uint32(58).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(66).string(t.docString),t.opsetImport!=null&&t.opsetImport.length)for(var i=0;i<t.opsetImport.length;++i)T.onnx.OperatorSetIdProto.encode(t.opsetImport[i],o.uint32(74).fork()).ldelim();if(t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(82).string(t.domain),t.attributeProto!=null&&t.attributeProto.length)for(var i=0;i<t.attributeProto.length;++i)T.onnx.AttributeProto.encode(t.attributeProto[i],o.uint32(90).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof K||(t=K.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.FunctionProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.name=t.string();break}case 4:{u.input&&u.input.length||(u.input=[]),u.input.push(t.string());break}case 5:{u.output&&u.output.length||(u.output=[]),u.output.push(t.string());break}case 6:{u.attribute&&u.attribute.length||(u.attribute=[]),u.attribute.push(t.string());break}case 11:{u.attributeProto&&u.attributeProto.length||(u.attributeProto=[]),u.attributeProto.push(T.onnx.AttributeProto.decode(t,t.uint32()));break}case 7:{u.node&&u.node.length||(u.node=[]),u.node.push(T.onnx.NodeProto.decode(t,t.uint32()));break}case 8:{u.docString=t.string();break}case 9:{u.opsetImport&&u.opsetImport.length||(u.opsetImport=[]),u.opsetImport.push(T.onnx.OperatorSetIdProto.decode(t,t.uint32()));break}case 10:{u.domain=t.string();break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof K||(t=new K(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!A.isString(t.name))return"name: string expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o)if(!A.isString(t.input[o]))return"input: string[] expected"}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o)if(!A.isString(t.output[o]))return"output: string[] expected"}if(t.attribute!=null&&t.hasOwnProperty("attribute")){if(!Array.isArray(t.attribute))return"attribute: array expected";for(var o=0;o<t.attribute.length;++o)if(!A.isString(t.attribute[o]))return"attribute: string[] expected"}if(t.attributeProto!=null&&t.hasOwnProperty("attributeProto")){if(!Array.isArray(t.attributeProto))return"attributeProto: array expected";for(var o=0;o<t.attributeProto.length;++o){var i=T.onnx.AttributeProto.verify(t.attributeProto[o]);if(i)return"attributeProto."+i}}if(t.node!=null&&t.hasOwnProperty("node")){if(!Array.isArray(t.node))return"node: array expected";for(var o=0;o<t.node.length;++o){var i=T.onnx.NodeProto.verify(t.node[o]);if(i)return"node."+i}}if(t.docString!=null&&t.hasOwnProperty("docString")&&!A.isString(t.docString))return"docString: string expected";if(t.opsetImport!=null&&t.hasOwnProperty("opsetImport")){if(!Array.isArray(t.opsetImport))return"opsetImport: array expected";for(var o=0;o<t.opsetImport.length;++o){var i=T.onnx.OperatorSetIdProto.verify(t.opsetImport[o]);if(i)return"opsetImport."+i}}return t.domain!=null&&t.hasOwnProperty("domain")&&!A.isString(t.domain)?"domain: string expected":null},e.fromObject=function(t){if(t instanceof T.onnx.FunctionProto)return t;var o=new T.onnx.FunctionProto;if(t.name!=null&&(o.name=String(t.name)),t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.FunctionProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i)o.input[i]=String(t.input[i])}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.FunctionProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i)o.output[i]=String(t.output[i])}if(t.attribute){if(!Array.isArray(t.attribute))throw TypeError(".onnx.FunctionProto.attribute: array expected");o.attribute=[];for(var i=0;i<t.attribute.length;++i)o.attribute[i]=String(t.attribute[i])}if(t.attributeProto){if(!Array.isArray(t.attributeProto))throw TypeError(".onnx.FunctionProto.attributeProto: array expected");o.attributeProto=[];for(var i=0;i<t.attributeProto.length;++i){if(typeof t.attributeProto[i]!="object")throw TypeError(".onnx.FunctionProto.attributeProto: object expected");o.attributeProto[i]=T.onnx.AttributeProto.fromObject(t.attributeProto[i])}}if(t.node){if(!Array.isArray(t.node))throw TypeError(".onnx.FunctionProto.node: array expected");o.node=[];for(var i=0;i<t.node.length;++i){if(typeof t.node[i]!="object")throw TypeError(".onnx.FunctionProto.node: object expected");o.node[i]=T.onnx.NodeProto.fromObject(t.node[i])}}if(t.docString!=null&&(o.docString=String(t.docString)),t.opsetImport){if(!Array.isArray(t.opsetImport))throw TypeError(".onnx.FunctionProto.opsetImport: array expected");o.opsetImport=[];for(var i=0;i<t.opsetImport.length;++i){if(typeof t.opsetImport[i]!="object")throw TypeError(".onnx.FunctionProto.opsetImport: object expected");o.opsetImport[i]=T.onnx.OperatorSetIdProto.fromObject(t.opsetImport[i])}}return t.domain!=null&&(o.domain=String(t.domain)),o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.input=[],i.output=[],i.attribute=[],i.node=[],i.opsetImport=[],i.attributeProto=[]),o.defaults&&(i.name="",i.docString="",i.domain=""),t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.input&&t.input.length){i.input=[];for(var u=0;u<t.input.length;++u)i.input[u]=t.input[u]}if(t.output&&t.output.length){i.output=[];for(var u=0;u<t.output.length;++u)i.output[u]=t.output[u]}if(t.attribute&&t.attribute.length){i.attribute=[];for(var u=0;u<t.attribute.length;++u)i.attribute[u]=t.attribute[u]}if(t.node&&t.node.length){i.node=[];for(var u=0;u<t.node.length;++u)i.node[u]=T.onnx.NodeProto.toObject(t.node[u],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.opsetImport&&t.opsetImport.length){i.opsetImport=[];for(var u=0;u<t.opsetImport.length;++u)i.opsetImport[u]=T.onnx.OperatorSetIdProto.toObject(t.opsetImport[u],o)}if(t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.attributeProto&&t.attributeProto.length){i.attributeProto=[];for(var u=0;u<t.attributeProto.length;++u)i.attributeProto[u]=T.onnx.AttributeProto.toObject(t.attributeProto[u],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,je.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.FunctionProto"},e}(),r}();Sc.exports=T});function Sn(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function ao(r){return new TextDecoder().decode(r)}var qe,Qr,Wa,Tt,ai,bt,At,te,io,en,tn,rn,Le=D(()=>{"use strict";ti();Oa();qe=xn($n());nn();Qr=class{static arraysEqual(e,n){if(e.length!==n.length)return!1;for(let t=0;t<e.length;t++)if(e[t]!==n[t])return!1;return!0}},Wa=class{static preprocessInputShapes(e,n){let t=e.length===1?[1,e[0]]:e,o=n.length===1?[n[0],1]:n;return[t,o]}static postprocessOutputShape(e,n,t){n===1&&e.splice(e.length-2,1),t===1&&e.pop()}static calcMatMulShape(e,n){return e[1]!==n[0]?void 0:[e[0],n[1]]}},Tt=class r{static calcShape(e,n,t=!1){let o=e.length,i=n.length;if(o===0)return n;if(i===0)return e;let u=Math.max(e.length,n.length),a=new Array(u);if(t){if(o<2||i<2)return;let s=Wa.calcMatMulShape([e[o-2],e[o-1]],[n[i-2],n[i-1]]);if(s===void 0)return;[a[u-2],a[u-1]]=s}for(let s=t?3:1;s<=u;s++){let l=o-s<0?1:e[o-s],c=i-s<0?1:n[i-s];if(l!==c&&l>1&&c>1)return;a[u-s]=Math.max(l,c)}return a}static index(e,n){let t=new Array(n.length);return r.fillIndex(e,n,t),t}static fillIndex(e,n,t){let o=e.length-n.length;for(let i=0;i<n.length;i++)t[i]=e[o+i]%n[i]}static calc(e,n,t,o,i){let u=r.calcShape(e.dims,n.dims);if(u){if(o&&!te.areEqual(u,e.dims))return;let a=te.size(u),s=o?e:new st(u,i||e.type);if(u.length===0)s.set([],t(e.get([]),n.get([])));else{let l=new Array(u.length),c=new Array(e.dims.length),p=new Array(n.dims.length),h=0,g=0,x=!1,b=!1;e.dims.length===0&&(h=e.get([]),x=!0),n.dims.length===0&&(g=n.get([]),b=!0);let w;for(let S=0;S<a;S++){w=S;for(let O=u.length-1;O>=0;O--)l[O]=w%u[O],w=Math.floor(w/u[O]);x||(r.fillIndex(l,e.dims,c),h=e.get(c)),b||(r.fillIndex(l,n.dims,p),g=n.get(p)),s.set(l,t(h,g))}}return s}}static isValidBroadcast(e,n){let t=e.length,o=n.length;if(t>o)return!1;for(let i=1;i<=t;i++)if(e[t-i]!==1&&e[t-i]!==n[o-i])return!1;return!0}static getBroadcastDims(e,n){let t=e.length,o=[];for(let i=0;i<t;i++){let u=t-1-i,a=e[u]||1;(n[n.length-1-i]||1)>1&&a===1&&o.unshift(u)}return o}},ai=class{static getShapeOfGemmResult(e,n,t,o,i){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let u,a,s;n?(u=e[1],a=e[0]):(u=e[0],a=e[1]);let l=-1;if(o?(s=t[0],l=1):(s=t[1],l=0),t[l]!==a)throw new Error("dimension mismatch");if(u<=0||s<=0||a<=0)throw new Error("invalid shape specified");if(i&&!Tt.isValidBroadcast(i,[u,s]))throw new Error("gemm: invalid bias shape for broadcast");return[u,s,a]}},bt=class r{static tensorDataTypeFromProto(e){switch(e){case qe.onnx.TensorProto.DataType.INT8:return"int8";case qe.onnx.TensorProto.DataType.UINT8:return"uint8";case qe.onnx.TensorProto.DataType.BOOL:return"bool";case qe.onnx.TensorProto.DataType.INT16:return"int16";case qe.onnx.TensorProto.DataType.UINT16:return"uint16";case qe.onnx.TensorProto.DataType.INT32:return"int32";case qe.onnx.TensorProto.DataType.UINT32:return"uint32";case qe.onnx.TensorProto.DataType.FLOAT:return"float32";case qe.onnx.TensorProto.DataType.DOUBLE:return"float64";case qe.onnx.TensorProto.DataType.STRING:return"string";case qe.onnx.TensorProto.DataType.INT64:return"int32";case qe.onnx.TensorProto.DataType.UINT64:return"uint32";default:throw new Error(`unsupported data type: ${qe.onnx.TensorProto.DataType[e]}`)}}static tensorDataTypeStringToEnum(e){switch(e){case"int8":return qe.onnx.TensorProto.DataType.INT8;case"uint8":return qe.onnx.TensorProto.DataType.UINT8;case"bool":return qe.onnx.TensorProto.DataType.BOOL;case"int16":return qe.onnx.TensorProto.DataType.INT16;case"uint16":return qe.onnx.TensorProto.DataType.UINT16;case"int32":return qe.onnx.TensorProto.DataType.INT32;case"uint32":return qe.onnx.TensorProto.DataType.UINT32;case"float32":return qe.onnx.TensorProto.DataType.FLOAT;case"float64":return qe.onnx.TensorProto.DataType.DOUBLE;case"string":return qe.onnx.TensorProto.DataType.STRING;case"int64":return qe.onnx.TensorProto.DataType.INT64;case"uint64":return qe.onnx.TensorProto.DataType.UINT64;default:throw new Error(`unsupported data type: ${e}`)}}static tensorDimsFromProto(e){return e.map(n=>$r.isLong(n)?n.toNumber():n)}static tensorValueTypeFromProto(e){return{tensorType:r.tensorDataTypeFromProto(e.elemType),shape:{dims:r.tensorDimsFromProto(e.shape.dim.map(n=>n.dimValue))}}}static tensorDimsFromORTFormat(e){let n=[];for(let t=0;t<e.dimsLength();t++)n.push(At.longToNumber(e.dims(t)));return n}static tensorAttributesFromORTFormat(e){let n=[];for(let t=0;t<e.attributesLength();t++)n.push(e.attributes(t));return n}},At=class{static longToNumber(e,n){return $r.isLong(e)?e.toNumber():e instanceof P.Long?$r.fromValue({low:e.low,high:e.high,unsigned:n??!1}).toNumber():e}static isLong(e){return $r.isLong(e)||e instanceof P.Long}},te=class r{static size(e){return r.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,n,e.length)}static sizeToDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,0,n)}static getSizeFromDimensionRange(e,n,t){let o=1;for(let i=n;i<t;i++){if(e[i]<=0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.");o*=e[i]}return o}static computeStrides(e){let n=e.length;if(n===0)return[];if(n===1)return[1];let t=new Array(n);t[n-1]=1,t[n-2]=e[n-1];for(let o=n-3;o>=0;--o)t[o]=t[o+1]*e[o+1];return t}static transpose(e){return e.slice().reverse()}static indicesToOffset(e,n,t){t===void 0&&(t=e.length);let o=0;for(let i=0;i<t;++i)o+=n[i]*e[i];return o}static offsetToIndices(e,n){let t=n.length;if(t===0)return[];if(t===1)return[e*n[0]];let o=new Array(n.length);for(let i=0;i<o.length-1;++i)o[i]=Math.floor(e/n[i]),e-=o[i]*n[i];return o[o.length-1]=e,o}static normalizeAxis(e,n){if(e<-n&&e>=n)throw new Error("unsupported axis for this operation.");return e<0?e+n:e}static normalizeAxes(e,n){return e.map(t=>this.normalizeAxis(t,n))}static incrementIndex(e,n,t){if(n.length===0||e.length===0)throw new Error("Index incrementing unsupported for scalar Tensor");if(t===void 0)t=n.length;else if(t<=0||t>n.length)throw new Error("Incorrect axis to increment on");for(let o=t-1;o>=0&&(e[o]++,!(e[o]<n[o]));--o)e[o]=0}static calculateReshapedDims(e,n){if(n.length===0){if(e.length===0||r.size(e)===1)return[];throw new Error("cannot reshape to a scalar Tensor")}let t=n.length,o=new Array(t),i=-1,u=1;for(let s=0;s<t;s++){if(n[s]<-1)throw new Error("a dimension in shape hints cannot be less than -1");if(n[s]===-1){if(i!==-1)throw new Error("at most one dimension in shape hints can be -1");i=s}else{if(n[s]===0){if(s>=e.length)throw new Error("the dimension with value zero exceeds the dimension size of the input tensor");o[s]=e[s]}else o[s]=n[s];u*=o[s]}}let a=r.size(e);if(i!==-1){if(a%u!==0)throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${e}] Output shape: [${n}]`);o[i]=a/u}else if(u!==a)throw new Error("reshapedDims and originalDims don't have matching sizes");return o}static sortBasedOnPerm(e,n){return n?n.map(t=>e[t]):e.slice().reverse()}static padShape(e,n){let t=e.length;return e.map((o,i)=>o+n[i]+n[i+t])}static areEqual(e,n){return e.length!==n.length?!1:e.every((t,o)=>t===n[o])}static validateDimsAndCalcSize(e){if(e.length>6)throw new TypeError("Only rank 0 to 6 is supported for tensor shape.");let n=1;for(let t of e){if(!Number.isInteger(t))throw new TypeError(`Invalid shape: ${t} is not an integer`);if(t<0||t>2147483647)throw new TypeError(`Invalid shape: length ${t} is not allowed`);n*=t}return n}static flattenShape(e,n){n<0&&(n+=e.length);let t=e.reduce((u,a)=>u*a,1),o=e.slice(n).reduce((u,a)=>u*a,1);return[t/o,o]}static squeezeShape(e,n){let t=new Array;n=r.normalizeAxes(n,e.length);for(let o=0;o<e.length;o++){let i=n.indexOf(o)>=0;if(i&&e[o]!==1)throw new Error("squeeze an axis of size different than 1");(n.length===0&&e[o]>1||n.length>0&&!i)&&t.push(e[o])}return t}static unsqueezeShape(e,n){let t=new Array(e.length+n.length);t.fill(0);for(let i=0;i<n.length;i++){let u=r.normalizeAxis(n[i],t.length);if(u>=t.length)throw new Error("'axes' has an out of range axis");if(t[u]!==0)throw new Error("'axes' has a duplicate axis");t[u]=1}let o=0;for(let i=0;i<t.length;i++)t[i]===0&&(t[i]=e[o++]);if(o!==e.length)throw new Error("the unsqueezed dimension could not be established");return t}},io=class r{static splitShape(e,n,t,o){if(t.length===0){if(!o)throw new Error("need to know number of outputs when the 'split' attribute is not specified");r.determineSplit(e[n],o,t)}let i=[],u=[0];for(let a=0;a<t.length;++a){a!==0&&u.push(u[a-1]+t[a-1]);let s=e.slice();s[n]=t[a],i.push(s)}return[i,u]}static determineSplit(e,n,t){if(e%n!==0)throw new Error("cannot split tensor to equal sized parts");for(let o=0;o<n;++o)t.push(e/n)}},en=class r{static adjustPoolAttributes(e,n,t,o,i,u){if(!e&&t.length!==n.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let a=0;a<n.length-2;a++)a>=t.length?t.push(n[a+2]):t[a]=n[a+2];for(let a=0;a<t.length;a++)if(a<o.length){if(o[a]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let a=0;a<t.length;a++)if(a<i.length){if(i[a]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let a=0;a<t.length*2;a++)if(a<u.length){if(u[a]<0)throw new Error("pad should be greater than or equal to 1")}else u.push(0);for(let a=0;a<t.length;a++){if(t[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(u[a]>=t[a]||u[a+t.length]>=t[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,n,t,o,i,u){if(u){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let a=0;a<e.length-2;a++)r.adjustPadAndReturnShape(e[a+2],n[a],t[a],o[a],i,a,a+e.length-2,u)}}static computePoolOutputShape(e,n,t,o,i,u,a){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let s=[n[0],n[1]];return r.computeShapeHelper(e,n,s,t,o,i,u,a),s}static computeConvOutputShape(e,n,t,o,i,u,a){if(e.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let s=[e[0],n[0]];return r.computeShapeHelper(!1,e,s,t,o,i,u,a),s}static computeShapeHelper(e,n,t,o,i,u,a,s){if(e)for(let l=0;l<n.length-2;l++)t.push(1);else for(let l=0;l<n.length-2;l++)t.push(r.adjustPadAndReturnShape(n[l+2],o[l],i[l],u[l],a,l,l+n.length-2,s))}static adjustPadAndReturnShape(e,n,t,o,i,u,a,s){let l=t*(o-1)+1;if(s&&s!=="NOTSET")switch(s){case"VALID":return i[u]=0,i[a]=0,Math.floor((e-l)/n+1);case"SAME_LOWER":case"SAME_UPPER":if(t!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let p=((e+n-1)/n-1)*n+o-e;return i[u]=Math.floor(s==="SAME_LOWER"?(p+1)/2:p/2),i[a]=p-i[u],Math.floor((e+p-o)/n+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+i[u]+i[a]-l)/n+1)}},tn=-34028234663852886e22,rn=34028234663852886e22});function Yy(r){switch(r){case"bool":case"int8":case"uint8":return 1;case"int16":case"uint16":return 2;case"int32":case"uint32":case"float32":return 4;case"float64":return 8;default:throw new Error(`cannot calculate sizeof() on type ${r}`)}}function Ic(r){switch(r){case $e.onnx.TensorProto.DataType.UINT8:case $e.onnx.TensorProto.DataType.INT8:case $e.onnx.TensorProto.DataType.BOOL:return 1;case $e.onnx.TensorProto.DataType.UINT16:case $e.onnx.TensorProto.DataType.INT16:return 2;case $e.onnx.TensorProto.DataType.FLOAT:case $e.onnx.TensorProto.DataType.INT32:case $e.onnx.TensorProto.DataType.UINT32:return 4;case $e.onnx.TensorProto.DataType.INT64:case $e.onnx.TensorProto.DataType.DOUBLE:case $e.onnx.TensorProto.DataType.UINT64:return 8;default:throw new Error(`cannot calculate sizeof() on type ${$e.onnx.TensorProto.DataType[r]}`)}}function Xy(r,e){return new(Oc(e))(r)}function Oc(r){switch(r){case"bool":case"uint8":return Uint8Array;case"int8":return Int8Array;case"int16":return Int16Array;case"uint16":return Uint16Array;case"int32":return Int32Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"float32":return Float32Array;case"float64":return Float64Array;default:throw new Error("unspecified error")}}function Ua(r,e){if(e===$e.onnx.TensorProto.DataType.INT64||e===Va.TensorDataType.INT64){if(r.greaterThanOrEqual(2147483648)||r.lessThan(-2147483648))throw new TypeError("int64 is not supported")}else if(e===$e.onnx.TensorProto.DataType.UINT32||e===Va.TensorDataType.UINT32||e===$e.onnx.TensorProto.DataType.UINT64||e===Va.TensorDataType.UINT64){if(r.greaterThanOrEqual(4294967296)||r.lessThan(0))throw new TypeError("uint64 is not supported")}else throw new TypeError(`not a LONG type: ${$e.onnx.TensorProto.DataType[e]}`);return r.toNumber()}function _c(r,e,n){switch(e){case $e.onnx.TensorProto.DataType.BOOL:case $e.onnx.TensorProto.DataType.UINT8:return r.getUint8(n);case $e.onnx.TensorProto.DataType.INT8:return r.getInt8(n);case $e.onnx.TensorProto.DataType.UINT16:return r.getUint16(n,!0);case $e.onnx.TensorProto.DataType.INT16:return r.getInt16(n,!0);case $e.onnx.TensorProto.DataType.FLOAT:return r.getFloat32(n,!0);case $e.onnx.TensorProto.DataType.INT32:return r.getInt32(n,!0);case $e.onnx.TensorProto.DataType.UINT32:return r.getUint32(n,!0);case $e.onnx.TensorProto.DataType.INT64:return Ua($r.fromBits(r.getUint32(n,!0),r.getUint32(n+4,!0),!1),e);case $e.onnx.TensorProto.DataType.DOUBLE:return r.getFloat64(n,!0);case $e.onnx.TensorProto.DataType.UINT64:return Ua($r.fromBits(r.getUint32(n,!0),r.getUint32(n+4,!0),!0),e);default:throw new Error(`cannot read from DataView for type ${$e.onnx.TensorProto.DataType[e]}`)}}var Ac,$e,Va,st,nn=D(()=>{"use strict";Ac=xn(gl());Oa();to();$e=xn($n());Le();Va=ne.experimental.fbs,st=class r{constructor(e,n,t,o,i,u=Ac.Guid.create()){this.dims=e;this.type=n;this.dataProvider=t;this.asyncDataProvider=o;this.cache=i;this.dataId=u;this.size=te.validateDimsAndCalcSize(e);let a=this.size,s=t===void 0&&o===void 0&&i===void 0;if(i!==void 0&&i.length!==a)throw new RangeError("Input dims doesn't match data length.");if(n==="string"){if(i!==void 0&&(!Array.isArray(i)||!i.every(l=>typeof l=="string")))throw new TypeError("cache should be a string array");s&&(this.cache=new Array(a))}else{if(i!==void 0){let l=Oc(n);if(!(i instanceof l))throw new TypeError(`cache should be type ${l.name}`)}if(s){let l=new ArrayBuffer(a*Yy(n));this.cache=Xy(l,n)}}}get data(){if(this.cache===void 0){let e=this.dataProvider(this.dataId);if(e.length!==this.size)throw new Error("Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.");this.cache=e}return this.cache}get stringData(){if(this.type!=="string")throw new TypeError("data type is not string");return this.data}get integerData(){switch(this.type){case"uint8":case"int8":case"uint16":case"int16":case"int32":case"uint32":case"bool":return this.data;default:throw new TypeError("data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)")}}get floatData(){switch(this.type){case"float32":case"float64":return this.data;default:throw new TypeError("data type is not float (float32, float64)")}}get numberData(){if(this.type!=="string")return this.data;throw new TypeError("type cannot be non-number (string)")}get(e){return this.data[te.indicesToOffset(e,this.strides)]}set(e,n){this.data[te.indicesToOffset(e,this.strides)]=n}async getData(){return this.cache===void 0&&(this.cache=await this.asyncDataProvider(this.dataId)),this.cache}get strides(){return this._strides||(this._strides=te.computeStrides(this.dims)),this._strides}static fromProto(e){if(!e)throw new Error("cannot construct Value from an empty tensor");let n=bt.tensorDataTypeFromProto(e.dataType),t=bt.tensorDimsFromProto(e.dims),o=new r(t,n);if(n==="string")e.stringData.forEach((i,u)=>{o.data[u]=ao(i)});else if(e.rawData&&typeof e.rawData.byteLength=="number"&&e.rawData.byteLength>0){let i=o.data,u=new DataView(e.rawData.buffer,e.rawData.byteOffset,e.rawData.byteLength),a=Ic(e.dataType),s=e.rawData.byteLength/a;if(e.rawData.byteLength%a!==0)throw new Error("invalid buffer length");if(i.length!==s)throw new Error("buffer length mismatch");for(let l=0;l<s;l++){let c=_c(u,e.dataType,l*a);i[l]=c}}else{let i;switch(e.dataType){case $e.onnx.TensorProto.DataType.FLOAT:i=e.floatData;break;case $e.onnx.TensorProto.DataType.INT32:case $e.onnx.TensorProto.DataType.INT16:case $e.onnx.TensorProto.DataType.UINT16:case $e.onnx.TensorProto.DataType.INT8:case $e.onnx.TensorProto.DataType.UINT8:case $e.onnx.TensorProto.DataType.BOOL:i=e.int32Data;break;case $e.onnx.TensorProto.DataType.INT64:i=e.int64Data;break;case $e.onnx.TensorProto.DataType.DOUBLE:i=e.doubleData;break;case $e.onnx.TensorProto.DataType.UINT32:case $e.onnx.TensorProto.DataType.UINT64:i=e.uint64Data;break;default:throw new Error("unspecific error")}if(i==null)throw new Error("failed to populate data from a tensorproto value");let u=o.data;if(u.length!==i.length)throw new Error("array length mismatch");for(let a=0;a<i.length;a++){let s=i[a];$r.isLong(s)?u[a]=Ua(s,e.dataType):u[a]=s}}return o}static fromData(e,n,t){return new r(n,t,void 0,void 0,e)}static fromOrtTensor(e){if(!e)throw new Error("cannot construct Value from an empty tensor");let n=bt.tensorDimsFromORTFormat(e),t=bt.tensorDataTypeFromProto(e.dataType()),o=new r(n,t);if(t==="string")for(let i=0;i<e.stringDataLength();i++)o.data[i]=e.stringData(i);else if(e.rawDataArray()&&typeof e.rawDataLength()=="number"&&e.rawDataLength()>0){let i=o.data,u=new DataView(e.rawDataArray().buffer,e.rawDataArray().byteOffset,e.rawDataLength()),a=Ic(e.dataType()),s=e.rawDataLength()/a;if(e.rawDataLength()%a!==0)throw new Error("invalid buffer length");if(i.length!==s)throw new Error("buffer length mismatch");for(let l=0;l<s;l++){let c=_c(u,e.dataType(),l*a);i[l]=c}}return o}}});function ae(r){return r===1?Jy:Zy}function Ec(r){let e=ae(r);return`${e.version}
      precision highp float;
      ${e.attribute} vec3 position;
      ${e.attribute} vec2 textureCoord;

      ${e.varyingVertex} vec2 TexCoords;

      void main()
      {
          gl_Position = vec4(position, 1.0);
          TexCoords = textureCoord;
      }`}function Cc(r){let e=ae(r);return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFrag} vec2 TexCoords;
    ${e.outputDeclaration}
    const vec2 halfCR = vec2(0.5, 0.5);

    // Custom vector types to handle higher dimenalities.
    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    `}function Pc(r,e){let n=ae(r);return`
  void main() {
    int indices[${e}];
    toVec(TexCoords, indices);
    vec4 result = vec4(process(indices));
    ${n.output} = result;
  }
  `}var Jy,Zy,Xe=D(()=>{"use strict";Jy={version:"",attribute:"attribute",varyingVertex:"varying",varyingFrag:"varying",texture2D:"texture2D",output:"gl_FragColor",outputDeclaration:""},Zy={version:"#version 300 es",attribute:"in",varyingVertex:"out",varyingFrag:"in",texture2D:"texture",output:"outputColor",outputDeclaration:"out vec4 outputColor;"}});var Ce=D(()=>{"use strict"});async function Ha(r,e=t=>0,n){return new Promise((t,o)=>{let i=0,u=()=>{if(r()){t();return}i++;let a=e(i);if(n!=null&&i>=n){o();return}setTimeout(u,a)};u()})}function si(r){return Sn(typeof r<"u"&&r.length!==0,()=>"empty string found for sampler name"),"get"+r.charAt(0).toUpperCase()+r.slice(1)}function Dc(r){return Sn(typeof r<"u"&&r.length!==0,()=>"empty string found for sampler name"),"get"+r.charAt(0).toUpperCase()+r.slice(1)+"AtOutCoords"}function In(r,e){let n=JSON.parse(JSON.stringify(r));return n=e,n}function _n(r,e){return e.map(n=>r[n]).join(", ")}function $t(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function Yt(r=6){return["x","y","z","w","u","v"].slice(0,r)}var or=D(()=>{"use strict";Le()});function Qy(r,e){return Yt(e).map(n=>`${r}.${n}`)}function An(r,e){return e===1?[r]:Qy(r,e)}function ir(){return`
    float getChannel(vec4 frag, int dim) {
      int modCoord = imod(dim, 2);
      return modCoord == 0 ? frag.r : frag.g;
    }

    float getChannel(vec4 frag, vec2 innerDims) {
      vec2 modCoord = mod(innerDims, 2.);
      return modCoord.x == 0. ?
        (modCoord.y == 0. ? frag.r : frag.g) :
        (modCoord.y == 0. ? frag.b : frag.a);
    }
  `}var on=D(()=>{"use strict";or()});function t0(r,e,n){if(r===0)return"false";if(r===1)return`rc > ${e[0]}`;let t="";for(let o=r-2;o<r;o++)t+=`${n[o]} >= ${e[o-r+2]}`,o<r-1&&(t+="||");return t}function r0(r,e){let n=r.length;if(n===0)return"getA(), 0, 0, 0";if(n===1)return`getA(rc),
            rc + 1 >= ${r[0]} ? 0. : getA(rc + 1),
            0, 0`;let t="r, c",o="r, cp1",i="rp1, c",u="rp1, cp1",a="";if(n>2)for(let s=0;s<n-2;++s)a=a+`${e[s]},`;return`getA(${a}${t}),
          rEdge ? 0. : getA(${a}${i}),
          cEdge ? 0. : getA(${a}${o}),
          rEdge || cEdge ? 0. : getA(${a}${u})`}function n0(r,e,n,t){return r===0||r===1?"":`
    int r = ${e[r-2]};
    int c = ${e[r-1]};
    int rp1 = ${e[r-2]} + 1;
    int cp1 = ${e[r-1]} + 1;
    bool rEdge = rp1 >= ${t};
    bool cEdge = cp1 >= ${n};
    `}var kc,e0,Rc,Bc=D(()=>{"use strict";Xe();Ce();or();on();kc={name:"pack",inputNames:["A"],inputTypes:[1]},e0=(r,e)=>{let n=ae(r.session.backend.glContext.version),t=e.dims,o=t.length,i=e.dims.length,u=$t(i),a=An("rc",i),s=n0(i,a,t[t.length-2],t[t.length-1]),l;o===0?l=[1,1]:o===1?l=[t[0],1]:l=[t[i-1],t[i-2]];let c=t0(i,l,a),p=r0(t,a),h=`
        void main() {
          ${u} rc = getOutputCoords();

          if(${c}) {
            ${n.output} = vec4(0);
          } else {
            ${s}

            ${n.output} = vec4(${p});
          }
        }
      `;return{...kc,hasMain:!0,output:{dims:e.dims,type:e.type,textureType:2},shaderSource:h}},Rc=(r,e)=>({...kc,get:()=>e0(r,e)})});function ja(r){if(r.length===0)return[1,1,1];let e=1;for(let n=0;n<r.length-2;++n)e*=r[n];return[e,r.length>1?r[r.length-2]:1,r[r.length-1]]}function Lc(r,e){let n=!1;return r.length===0||e.length===0?n=!0:r.length<2||e.length<2?n=r[r.length-1]===e[e.length-1]:n=r[r.length-1]===e[e.length-1]&&r[r.length-2]===e[e.length-2],n}function a0(r){let e=te.computeStrides(r),n=["b","r","c"],t="index";return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e.map((i,u)=>{let a=`int ${n[u]} = ${t} / ${i}`,s=u===e.length-1?`int ${n[u+1]} = ${t} - ${n[u]} * ${i}`:`index -= ${n[u]} * ${i}`;return`${a}; ${s};`}).join("")}
      return ivec3(b, r, c);
    }
  `}function s0(r){let e=te.computeStrides(r);return`
  int getFlattenedIndex(ivec3 coords) {
    // reverse y, z order
    return coords.x * ${e[0]} + coords.z * ${e[1]} + coords.y;
  }
`}var o0,i0,Mc,Nc=D(()=>{"use strict";Le();Xe();Ce();on();o0=r=>({name:"Reshape (packed)",inputTypes:[2],inputNames:["A"],cacheHint:`${r}`}),i0=(r,e,n,t)=>{let o=e.dims,i=t,u="";for(let l=0;l<4;l++){let c="";switch(l){case 0:c="outputCoords = rc;";break;case 1:c="outputCoords = ivec3(rc.x, rc.y+1, rc.z);";break;case 2:c="outputCoords = ivec3(rc.x, rc.y, rc.z+1);";break;case 3:c="outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);";break;default:throw new Error}u+=`
        ${c}
        ${l>0?"if(outputCoords.y < rows && outputCoords.z < cols){":""}
          int flattenedIndex = getFlattenedIndex(outputCoords);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);
          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${l}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);

        ${l>0?"}":""}
      `}let a=ae(r.session.backend.glContext.version),s=`
      ${a0(o)}
      ${s0(i)}
      ${ir()}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.0);

        ivec3 outputCoords;
        int rows = ${i[2]};
        int cols = ${i[1]};

        ${u}
        ${a.output} = result;
      }
    `;return{...n,output:{dims:i,type:e.type,textureType:2},shaderSource:s,hasMain:!0}},Mc=(r,e,n)=>{let t=o0(n);return{...t,get:()=>i0(r,e,t,n)}}});var qa,zc=D(()=>{"use strict";Xe();Ce();qa=(r,e)=>{let n=e.shape,t=ae(r.session.backend.glContext.version),o=`
    const float FLOAT_MAX = 1.70141184e38;
    const float FLOAT_MIN = 1.17549435e-38;

    bool isNaN(float val) {
      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;
    }

    highp vec4 encodeAsUint8(highp float v) {
      if (isNaN(v)) {
        return vec4(255, 255, 255, 255);
      }

      highp float av = abs(v);

      if(av < FLOAT_MIN) {
        return vec4(0.0, 0.0, 0.0, 0.0);
      } else if(v > FLOAT_MAX) {
        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
      } else if(v < -FLOAT_MAX) {
        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
      }

      highp vec4 c = vec4(0,0,0,0);

      highp float e = floor(log2(av));
      highp float m = exp2(fract(log2(av))) - 1.0;

      c[2] = floor(128.0 * m);
      m -= c[2] / 128.0;
      c[1] = floor(32768.0 * m);
      m -= c[1] / 32768.0;
      c[0] = floor(8388608.0 * m);

      highp float ebias = e + 127.0;
      c[3] = floor(ebias / 2.0);
      ebias -= c[3] * 2.0;
      c[2] += floor(ebias) * 128.0;

      c[3] += 128.0 * step(0.0, -v);

      return c / 255.0;
    }

    void main() {
      float value = ${t.texture2D}(X,TexCoords).r;
      ${t.output} = encodeAsUint8(value);
    }`,i={name:"Uint8Encode",inputTypes:[0],inputNames:["X"],output:{dims:n,type:e.tensor.type,textureType:3},shaderSource:o,hasMain:!0};return r.executeProgram(i,[e.tensor])}});function l0(r,e){if(r===1)return"rc";let n="";for(let t=0;t<r;t++)n+=e[t],t<r-1&&(n+=",");return n}var Fc,u0,Gc,Wc=D(()=>{"use strict";Xe();Ce();or();on();Fc={name:"unpack",inputNames:["A"],inputTypes:[2]},u0=(r,e)=>{let n=e.dims.length,t=An("rc",n),o=t.slice(-2),i=$t(n),u=ir(),s=e.dims.length===0?"":l0(n,t),l=n<=1?"rc":`vec2(${o.join(",")})`,c=ae(r.session.backend.glContext.version),p=`
    ${u}
    void main() {
      ${i} rc = getOutputCoords();

       // Sample the texture with the coords to get the rgba channel value.
       vec4 packedInput = getA(${s});

       ${c.output} = vec4(getChannel(packedInput, ${l}), 0, 0, 0);
     }
   `;return{...Fc,hasMain:!0,output:{dims:e.dims,type:e.type,textureType:0},shaderSource:p}},Gc=(r,e)=>({...Fc,get:()=>u0(r,e)})});var ui,so,li,uo=D(()=>{"use strict";Bt();ui=class{constructor(e,n=1){if(n===1)this.internalFormat=e.R32F,this.format=e.RED,this.textureType=e.FLOAT,this.channelSize=n;else if(n===4)this.internalFormat=e.RGBA32F,this.format=e.RGBA,this.textureType=e.FLOAT,this.channelSize=n;else throw new Error(`Invalid number of channels: ${n}`)}encode(e,n){let t,o;return e.constructor!==Float32Array&&(ze.warning("Encoder","data was not of type Float32; creating new Float32Array"),o=new Float32Array(e)),n*this.channelSize>e.length?(ze.warning("Encoder","Source data too small. Allocating larger array"),o=e,t=this.allocate(n*this.channelSize),o.forEach((i,u)=>t[u]=i)):(o=e,t=o),t}allocate(e){return new Float32Array(e*4)}decode(e,n){return this.channelSize===1?e.filter((o,i)=>i%4===0).subarray(0,n):e.subarray(0,n)}},so=class{constructor(e,n=1,t){if(n!==1&&n!==4)throw new Error(`Invalid number of channels: ${n}`);this.internalFormat=e.RGBA,this.format=e.RGBA,this.channelSize=n,this.textureType=t||e.FLOAT}encode(e,n){let t=e;return this.channelSize===1&&(ze.verbose("Encoder","Exploding into a larger array"),t=this.allocate(n),e.forEach((o,i)=>t[i*4]=o)),t}allocate(e){return new Float32Array(e*4)}decode(e,n){return this.channelSize===1?e.filter((o,i)=>i%4===0).subarray(0,n):e.subarray(0,n)}},li=class{constructor(e,n=1){this.channelSize=4;if(n===1)this.internalFormat=e.ALPHA,this.format=e.ALPHA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=n;else if(n===4)this.internalFormat=e.RGBA,this.format=e.RGBA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=n;else throw new Error(`Invalid number of channels: ${n}`)}encode(e,n){return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}allocate(e){return new Uint8Array(e*this.channelSize)}decode(e,n){if(e instanceof Uint8Array)return e.subarray(0,n);throw new Error(`Invalid array type: ${e.constructor}`)}}});var lo,Vc,Ka,Uc=D(()=>{"use strict";Le();Ce();lo=(r,e,n)=>{let t=n===0||n===1?1:4,o=n===2,i=n===1||n===2,u=n===4?e.length-1:void 0,a=n===4?e.map((s,l)=>l===e.length-1?s*4:s):void 0;return Ka(r,e,t,a,{isPacked:o,reverseWH:i,breakAxis:u})},Vc=(r,e,n)=>{let t=lo(r,e,n);return[t.width,t.height]},Ka=(r,e,n=1,t,o)=>{let i=!!(o&&o.isPacked),[u,a]=r.computeTextureWH(i&&t||e,o),s=e.length,l=e.slice(0);if(s===0&&(l=[1]),n===1)t=e;else if(i){if(n!==4)throw new Error("a packed texture must be 4-channel");t=e,s>0&&(l[s-1]=Math.ceil(l[s-1]/2)),s>1&&(l[s-2]=Math.ceil(l[s-2]/2))}else if(!t)throw new Error("Unpacked shape is needed when using channels > 1");return{width:u,height:a,channels:n,isPacked:i,shape:l,strides:te.computeStrides(l),unpackedShape:t,reversedWH:o&&o.reverseWH}}});var d0,ci,jc=D(()=>{"use strict";Bt();nn();Le();Bc();Nc();zc();Wc();uo();Uc();Ce();d0=(r,e)=>{let n=e.map(o=>`${o.unpackedShape.join(",")};${o.width}x${o.height}`).join("_"),t=r.name;return r.cacheHint&&(t+="["+r.cacheHint+"]"),t+=":"+n,t},ci=class{constructor(e){this.session=e;this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map}calculateTextureWidthAndHeight(e,n){return Vc(this.session.layoutStrategy,e,n)}executeProgram(e,n){if(n.length<e.inputNames.length)throw new Error(`Input size mustn't be less than ${e.inputNames.length}.`);if(e.inputNames.length!==e.inputTypes.length)throw new Error("input names size does not match input types");let t=[];for(let l=0;l<e.inputNames.length;++l)t[l]=this.getOrCreateTextureData(n[l],e.inputTypes[l]);let o=d0(e,t),i=this.session.programManager.getArtifact(o),u=i?i.programInfo:typeof e.get=="function"?e.get():e,a=lo(this.session.layoutStrategy,u.output.dims,u.output.textureType),s=this.createTextureData(a,u.output.type);return i||(i=this.session.programManager.build(u,t,s),this.session.programManager.setArtifact(o,i)),this.runProgram(i,t,s),s}run(e,n){return this.executeProgram(e,n).tensor}runProgram(e,n,t){for(let o=0;o<n.length;++o)if(!!n[o].isPacked!=(e.programInfo.inputTypes[o]===2))throw new Error(`input[${o}] property packed inconsistent`);if(!!t.isPacked!=(e.programInfo.output.textureType===2))throw new Error("output property packed inconsistent");this.session.programManager.run(e,n,t)}getOrCreateTextureData(e,n){let t=this.getTextureData(e.dataId,n===2);if(!t&&(t=this.getTextureData(e.dataId,n!==2),t))return n===2?this.pack(t):this.unpack(t);if(!t){let o=lo(this.session.layoutStrategy,e.dims,n);if(n===4){let a=e.dims;if(a.length===4){let s=[a[0],Math.ceil(a[1]*a[2]*a[3]/4)],l=lo(this.session.layoutStrategy,s,n),c=e.numberData;if(a[1]*a[2]*a[3]%4!==0){let p=a[0],h=a[1]*a[2]*a[3],g=Math.ceil(h*1/4)*4,x=p*g;c=new Float32Array(x);for(let b=0;b<p;++b){let w=b*h,S=b*g+b%1*h;c.set(e.numberData.subarray(w,w+h),S)}}return this.createTextureData(l,e.type,c,e,1)}}if(n===2){let i=Ka(this.session.layoutStrategy,e.dims,1,[],{reverseWH:!0}),u=this.createTextureData(i,e.type,e.numberData,e,1);t=this.pack(u)}else t=this.createTextureData(o,e.type,e.numberData,e,1)}return t}createTextureDataFromLayoutBindTensor(e,n,t,o){return this.createTextureData(e,n,t,o,1)}createTextureData(e,n,t,o,i){ze.verbose("InferenceHandler",`Creating TextureData: layout:[${JSON.stringify(e)}]`);let u=this.session.textureManager.createTextureFromLayout(n,e,t,i);return this.createTextureDataFromTexture(e,n,u,o)}reshapeUnpacked(e,n){let t=this.getOrCreateTextureData(e,0),o={channels:t.channels,height:t.height,width:t.width,shape:n.length!==0?n:[1],strides:te.computeStrides(n),unpackedShape:n};return this.createTextureDataFromTexture(o,e.type,t.texture).tensor}reshapePacked(e,n){let t=this.getOrCreateTextureData(e,2);if(Lc(e.dims,n)){let l={channels:t.channels,height:t.height,width:t.width,shape:n.length!==0?n:[1],strides:te.computeStrides(n),unpackedShape:n,isPacked:!0};return this.createTextureDataFromTexture(l,e.type,t.texture).tensor}let o=ja(e.dims),i=ja(n),u=this.reshapePacked(e,o),a=this.run(Mc(this,u,i),[u]);return this.reshapePacked(a,n)}cast(e,n){let t=this.getOrCreateTextureData(e,0);return this.createTextureDataFromTexture(t,n,t.texture).tensor}createTextureDataFromTexture(e,n,t,o,i){let u={...e,tensor:o||new st(e.unpackedShape,n,a=>this.readTexture(u),async a=>this.readTextureAsync(u),void 0,i),texture:t};return this.setTextureData(u.tensor.dataId,u,e.isPacked),u}getTextureData(e,n=!1){return this.session.isInitializer(e)?this.session.getTextureData(e,n):n?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,n,t=!1){this.session.isInitializer(e)?this.session.setTextureData(e,n,t):(t?this.packedTextureDataCache:this.unpackedTextureDataCache).set(e,n)}isTextureLayoutCached(e,n=!1){return!!this.getTextureData(e.dataId,n)}dispose(){this.session.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(e=>this.session.textureManager.releaseTexture(e)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(e=>this.session.textureManager.releaseTexture(e)),this.unpackedTextureDataCache=new Map}readTexture(e){return e.isPacked?this.readTexture(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTexture(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat(qa(this,e))}async readTextureAsync(e){return e.isPacked?this.readTextureAsync(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTextureAsync(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat(qa(this,e))}pack(e){return this.executeProgram(Rc(this,e.tensor),[e.tensor])}unpack(e){return this.executeProgram(Gc(this,e.tensor),[e.tensor])}}});var Ya,we,pt=D(()=>{"use strict";Ya=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this._cacheKey||(this._cacheKey=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this._cacheKey}},we=r=>new Ya(r)});var qc,Kc,Yc,f0,p0,Xc=D(()=>{"use strict";pt();Xe();Ce();qc={name:"BatchNormalization",inputNames:["A","Scale","B","Mean","Variance"],inputTypes:[0,0,0,0,0]},Kc=(r,e,n)=>(p0(e),[r.run({...qc,cacheHint:n.cacheKey,get:()=>f0(r,e,n)},e)]),Yc=r=>{let e=r.attributes.getFloat("epsilon",1e-5),n=r.attributes.getFloat("momentum",.9),t=r.attributes.getInt("spatial",1);return we({epsilon:e,momentum:n,spatial:t})},f0=(r,e,n)=>{let t=ae(r.session.backend.glContext.version),o=e[0].dims.length,[i,u]=r.calculateTextureWidthAndHeight(e[1].dims,0),a=`
  float process(int[${o}] indices) {
    vec2 position = offsetToCoords(indices[1], ${i}, ${u});
    float scale = getColorAsFloat(${t.texture2D}(Scale, position));
    float mean = getColorAsFloat(${t.texture2D}(Mean, position));
    float variance = getColorAsFloat(${t.texture2D}(Variance, position));
    float b = getColorAsFloat(${t.texture2D}(B, position));

    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${n.epsilon})) ) + b;
  }`;return{...qc,output:{dims:e[0].dims,type:e[0].type,textureType:0},shaderSource:a}},p0=r=>{if(!r||r.length!==5)throw new Error("BatchNormalization requires 5 inputs.");let e=r[0],n=r[1],t=r[2],o=r[3],i=r[4];if(e.dims.length<3||n.dims.length!==1||t.dims.length!==1||o.dims.length!==1||i.dims.length!==1)throw new Error("invalid input shape.");if(n.dims[0]!==e.dims[1]||t.dims[0]!==e.dims[1]||o.dims[0]!==e.dims[1]||i.dims[0]!==e.dims[1])throw new Error("invalid input shape.");if(e.type!=="float32"&&e.type!=="float64"||n.type!=="float32"&&n.type!=="float64"||t.type!=="float32"&&t.type!=="float64"||o.type!=="float32"&&o.type!=="float64"||i.type!=="float32"&&i.type!=="float64")throw new Error("invalid input tensor types.")}});var di,zt,J,co,fi,Sr=D(()=>{"use strict";di=class{constructor(e,n,t,o){this.glContext=e;this.programInfo=n;this.inputTextureLayouts=t;this.outputTextureLayout=o}},zt=class{constructor(e){this.context=e}},J=class{constructor(e,n){this.routineBody=e;this.dependencies=n}},co=class{constructor(e,n,t){this.name=e;t?this.dependencies=t:this.dependencies=[],n&&(this.routineBody=n)}addDependency(e){e&&this.dependencies.push(e)}},fi=class{static returnOrderedNodes(e){if(!e||e.length===0)return[];if(e.length===1)return e;let n=new Set,t=new Set,o=new Array;return this.createOrderedNodes(e,n,t,o),o}static createOrderedNodes(e,n,t,o){for(let i=0;i<e.length;++i)this.dfsTraverse(e[i],n,t,o)}static dfsTraverse(e,n,t,o){if(!e||t.has(e.name))return;if(n.has(e.name))throw new Error("Cyclic dependency detected. Can't topologically sort routines needed for shader.");n.add(e.name);let i=e.dependencies;if(i&&i.length>0)for(let u=0;u<i.length;++u)this.dfsTraverse(i[u],n,t,o);o.push(e),t.add(e.name),n.delete(e.name)}}});function m0(){let r="add_";return{body:`
  float ${r}(float a, float b) {
    return a + b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 + v2;
  }
  `,name:r,type:0}}function g0(){let r="div_";return{body:`
  float ${r}(float a, float b) {
    return a / b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 / v2;
  }
  `,name:r,type:0}}function b0(){let r="mul_";return{body:`
  float ${r}(float a, float b) {
    return a * b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 * v2;
  }
  `,name:r,type:0}}function y0(){let r="sub_";return{body:`
  float ${r}(float a, float b) {
    return a - b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 - v2;
  }
  `,name:r,type:0}}function x0(){let r="equal_";return{body:`
  float ${r}(float a, float b) {
    return float(a == b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4(equal(v1, v2));
  }
  `,name:r,type:0}}function v0(){let r="greater_";return{body:`
  float ${r}(float a, float b) {
    return float(a > b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4( v1.r > v2.r ,
      v1.g > v2.g,
      v1.b > v2.b,
      v1.a > v2.a );
  }
  `,name:r,type:0}}function w0(){let r="less_";return{body:`
  float ${r}(float a, float b) {
    return float(a < b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4( v1.r < v2.r ,
                v1.g < v2.g,
                v1.b < v2.b,
                v1.a < v2.a );
  }
  `,name:r,type:0}}function T0(){let r="and_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) && bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r && b2.r ,
                b1.g && b2.g,
                b1.b && b2.b,
                b1.a && b2.a );
  }
  `,name:r,type:0}}function $0(){let r="or_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) || bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r || b2.r ,
                b1.g || b2.g,
                b1.b || b2.b,
                b1.a || b2.a );
  }
  `,name:r,type:0}}function S0(){let r="xor_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) ^^ bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r ^^ b2.r ,
                b1.g ^^ b2.g,
                b1.b ^^ b2.b,
                b1.a ^^ b2.a );
  }
  `,name:r,type:0}}function I0(){return A0("pow")}function _0(){let r="prelu_";return{body:`
  float ${r}(float a, float b) {
    return a < 0.0 ? a * b: a;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4(
      v1.r < 0.0 ? v1.r * v2.r: v1.r,
      v1.g < 0.0 ? v1.g * v2.g: v1.g,
      v1.b < 0.0 ? v1.b * v2.b: v1.b,
      v1.a < 0.0 ? v1.a * v2.a: v1.a
      );
  }
  `,name:r,type:0}}function A0(r){let e=`${r}_`;return{body:`
  float ${e}(float a, float b) {
    return ${r}(a, b);
  }
  vec4 ${e}(vec4 v1, vec4 v2) {
    return ${r}(v1, v2);
  }
  `,name:e,type:0}}var Ft,O0,Jc,Zc,Qc,ed,td,rd,nd,od,id,ad,sd,ud,ld=D(()=>{"use strict";Le();Sr();Xe();Ce();Ft=(r,e,n,t=e[0].type,o)=>{let i=r.session.pack?2:0;return{name:n.name,inputNames:["A","B"],inputTypes:[i,i],cacheHint:o,get:()=>O0(r,e,n,t)}},O0=(r,e,n,t=e[0].type)=>{let o=r.session.pack?2:0,i=!te.areEqual(e[0].dims,e[1].dims),u=e[0].dims,a=r.session.pack;if(i){let c=Tt.calcShape(e[0].dims,e[1].dims,!1);if(!c)throw new Error("Can't perform binary op on the given tensors");u=c;let p=u.length,h=e[0].dims.length!==0?e[0].dims.length:1,g=e[1].dims.length!==0?e[1].dims.length:1,x=e[0].dims.length!==0?"bcastIndices_A(indices, aindices);":"aindices[0] = 0;",b=e[1].dims.length!==0?"bcastIndices_B(indices, bindices);":"bindices[0] = 0;",w=ae(r.session.backend.glContext.version),S=a?`
      ${n.body}
      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();
        vec4 result = ${n.name}(a, b);
        ${w.output} = result;
      }`:`
      ${n.body}
      float process(int indices[${p}]) {
        int aindices[${h}];
        int bindices[${g}];
        ${x}
        ${b}
        return ${n.name}(_A(aindices), _B(bindices));
      }`;return{name:n.name,inputNames:["A","B"],inputTypes:[o,o],output:{dims:u,type:t,textureType:o},shaderSource:S,hasMain:a}}let s=ae(r.session.backend.glContext.version),l=`
    ${n.body}
    void main() {
      vec4 v1 = ${s.texture2D}(A, TexCoords);
      vec4 v2 = ${s.texture2D}(B, TexCoords);
      vec4 result = ${n.name}(v1, v2);
      ${s.output} = result;
    }
    `;return{name:n.name,inputNames:["A","B"],inputTypes:[o,o],output:{dims:e[0].dims,type:t,textureType:o},shaderSource:l,hasMain:!0}},Jc=(r,e)=>[r.run(Ft(r,e,m0()),e)],Zc=(r,e)=>[r.run(Ft(r,e,T0(),"bool"),e)],Qc=(r,e)=>[r.run(Ft(r,e,g0()),e)],ed=(r,e)=>[r.run(Ft(r,e,x0(),"bool"),e)],td=(r,e)=>[r.run(Ft(r,e,v0(),"bool"),e)],rd=(r,e)=>[r.run(Ft(r,e,w0(),"bool"),e)],nd=(r,e)=>[r.run(Ft(r,e,b0()),e)],od=(r,e)=>[r.run(Ft(r,e,$0(),"bool"),e)],id=(r,e)=>[r.run(Ft(r,e,I0()),e)],ad=(r,e)=>[r.run(Ft(r,e,_0()),e)],sd=(r,e)=>[r.run(Ft(r,e,y0()),e)],ud=(r,e)=>[r.run(Ft(r,e,S0(),"bool"),e)]});var cd,dd,C0,fd=D(()=>{"use strict";Le();cd=(r,e,n)=>(C0(e),[r.cast(e[0],n)]),dd=r=>bt.tensorDataTypeFromProto(r.attributes.getInt("to")),C0=r=>{if(!r||r.length!==1)throw new Error("Cast requires 1 input.");if(r[0].type==="string")throw new Error("Invalid input type.")}});var P0,D0,pd,pi,hd=D(()=>{"use strict";Xe();Ce();or();on();P0=(r,e)=>({name:"Concat (packed)",inputNames:Array.from({length:r},(n,t)=>`X${t}`),inputTypes:Array(r).fill(2),cacheHint:e}),D0=(r,e,n,t)=>{let o=n[0].dims.slice();if(t>=o.length||t<-1*o.length)throw new Error("axis specified for concat doesn't match input dimensionality");t<0&&(t=o.length+t);let i=o.slice(0);for(let z=1;z<n.length;z++){let M=n[z].dims.slice();for(let W=0;W<o.length;W++)if(W===t)i[t]+=M[W];else if(o[W]!==M[W])throw new Error("non concat dimensions must match")}let u=i.length,a=An("coords",u),s=$t(u),l=ir(),c=n.map(z=>z.dims),p=Yt(u),h=new Array(c.length-1);h[0]=c[0][t];for(let z=1;z<h.length;z++)h[z]=h[z-1]+c[z][t];let g=p[t],x=p.slice(-2),b=p.join(),w=`if (${g} < ${h[0]}) {
        return getChannel(
            getX0(${b}), vec2(${x.join()}));
        }`;for(let z=1;z<h.length;z++){let M=h[z-1];w+=`
            if (${g} < ${h[z]}  && ${g} >= ${h[z-1]}) {
              return getChannel(
                getX${z}(${pi(p,g,M)}),
                vec2(${pi(x,g,M)}));
            }`}let S=h.length,O=h[h.length-1];w+=`
            return getChannel(
              getX${S}(${pi(p,g,O)}),
              vec2(${pi(x,g,O)}));`;let E=ae(r.session.backend.glContext.version),B=`
          ${l}
          float getValue(${p.map(z=>"int "+z)}) {
            ${w}
          }

          void main() {
            ${s} coords = getOutputCoords();
            int lastDim = coords.${p[u-1]};
            coords.${p[u-1]} = coords.${p[u-2]};
            coords.${p[u-2]} = lastDim;

            vec4 result = vec4(getValue(${a}), 0., 0., 0.);

            ${a[u-1]} = ${a[u-1]} + 1;
            if (${a[u-1]} < ${i[u-1]}) {
              result.g = getValue(${a});
            }

            ${a[u-2]} = ${a[u-2]} + 1;
            if (${a[u-2]} < ${i[u-2]}) {
              result.a = getValue(${a});
            }

            ${a[u-1]} = ${a[u-1]} - 1;
            if (${a[u-2]} < ${i[u-2]} &&
                ${a[u-1]} < ${i[u-1]}) {
              result.b = getValue(${a});
            }
            ${E.output} = result;
          }
        `;return{...e,output:{dims:i,type:n[0].type,textureType:2},shaderSource:B,hasMain:!0}},pd=(r,e,n)=>{let t=P0(e.length,n.cacheKey);return{...t,get:()=>D0(r,t,e,n.axis)}},pi=(r,e,n)=>{let t=r.indexOf(e);return r.map((i,u)=>u===t?`${i} - ${n}`:i).join()}});var md,k0,R0,B0,gd,M0,L0,N0,bd,z0,yd=D(()=>{"use strict";pt();Ce();hd();md=(r,e,n)=>(z0(e),r.session.pack&&e[0].dims.length>1?[r.run(pd(r,e,n),e)]:[r.run(B0(r,e,n),e)]),k0=(r,e)=>({name:"Concat",inputNames:Array.from({length:r},(n,t)=>`X${t}`),inputTypes:Array(r).fill(0),cacheHint:e}),R0=(r,e,n,t)=>{let o=n[0].dims.slice();if(t>=o.length||t<-1*o.length)throw new Error("axis specified for concat doesn't match input dimensionality");t<0&&(t=o.length+t);let i=o.slice(0);for(let g=1;g<n.length;g++){let x=n[g].dims.slice();for(let b=0;b<o.length;b++)if(b===t)i[t]+=x[b];else if(o[b]!==x[b])throw new Error("non concat dimensions must match")}let u=i.length,a=new Array(n.length),s=0;for(let g=0;g<a.length;++g)s+=n[g].dims[t],a[g]=s;let l="";n.length<5?l=gd(a):l=M0(a);let c=L0(n.length,u),p=N0(a),h=`
        ${c}
        ${p}
        ${l}
        float process(int indices[${u}]) {
          int textureIndex = getTextureWhereDataResides (indices[${t}]);

          if(textureIndex != 0) {
            indices[${t}] = indices[${t}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));
          }

          return fetchDataFromCorrectTexture(textureIndex, indices);
        }`;return{...e,output:{dims:i,type:n[0].type,textureType:0},shaderSource:h}},B0=(r,e,n)=>{let t=k0(e.length,n.cacheKey);return{...t,get:()=>R0(r,t,e,n.axis)}},gd=r=>`int getTextureWhereDataResides(int index) {
      ${r.map((n,t)=>`if(index<${n}) {return ${t};}
`).join("")}
    }`,M0=r=>gd(r),L0=(r,e)=>{let n=[`float fetchDataFromCorrectTexture(int textureIndex, int indices[${e}]) {`];for(let t=0;t<r;++t)t===0?n.push(`	if (textureIndex == ${t}) { return _X${t}(indices); }`):t===r-1?n.push(`	else { return _X${t}(indices); }`):n.push(`	else if (textureIndex == ${t}) { return _X${t}(indices); }`);return n.push("	}"),n.join(`
`)},N0=r=>{let e=["int getSizeInConcatAxisValueFromIndex(int index) {"];for(let n=0;n<r.length;++n)n===0?e.push(`	if (index == ${n}) { return ${r[n]}; }`):n===r.length-1?e.push(`	else { return ${r[n]}; }`):e.push(`	else if (index == ${n}) { return ${r[n]}; }`);return e.push("	}"),e.join(`
`)},bd=r=>we({axis:r.attributes.getInt("axis")}),z0=r=>{if(!r||r.length<1)throw new Error("too few inputs");let e=r[0].type,n=r[0].dims.length;if(e==="string")throw new Error("string tensor is not supported yet");for(let t of r){if(t.type!==e)throw new Error("input tensors should be one type");if(t.dims.length!==n)throw new Error("input tensors should have the same shape")}}});function F0(){return Gt("abs")}function G0(){return Gt("acos")}function W0(){return Gt("asin")}function V0(){return Gt("atan")}function U0(){return Gt("ceil")}function H0(){return Gt("cos")}function j0(r){let e="elu";return{body:`
  const float alpha = float(${r});

  float ${e}_(float a) {
    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;
  }
  vec4 ${e}_(vec4 v) {
    return vec4(${e}_(v.x), ${e}_(v.y), ${e}_(v.z), ${e}_(v.w));
  }
  `,name:e,type:0}}function q0(){return Gt("exp")}function K0(){return Gt("floor")}function Xa(r,e){let n="clip";return{body:`
  const float min = float(${r});
  const float max = float(${e});

  float ${n}_(float a) {
    return clamp(a, min, max);
  }
  vec4 ${n}_(vec4 v) {
    return clamp(v, min, max);
  }
  `,name:n,type:0}}function Y0(){let r="indentity";return{body:`
  float ${r}_(float a) {
    return a;
  }
  vec4 ${r}_(vec4 v) {
    return v;
  }
  `,name:r,type:0}}function X0(r){let e="leakyRelu";return{body:`
  const float alpha = float(${r});

  float ${e}_(float a) {
    return a < 0.0 ? a * alpha : a;
  }
  vec4 ${e}_(vec4 v) {
    return vec4(${e}_(v.x), ${e}_(v.y), ${e}_(v.z), ${e}_(v.w));
  }
  `,name:e,type:0}}function J0(){return Gt("log")}function Z0(){let r="neg";return{body:`
  float ${r}_(float a) {
    return -a;
  }
  vec4 ${r}_(vec4 v) {
    return -v;
  }
  `,name:r,type:0}}function Q0(){let r="not";return{body:`
  float ${r}_(float a) {
    return float( ! bool(a) );
  }
  bool ${r}_(bool a) {
    return !a;
  }
  vec4 ${r}_(vec4 v) {
    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));
  }
  bvec4 ${r}_(bvec4 v) {
    return bvec4(!v.x, !v.y, !v.z, !v.w);
  }
  `,name:r,type:0}}function ex(){return Gt("sin")}function Ja(){let r="relu";return{body:`
  float ${r}_(float a) {
    return max( a, 0.0 );
  }
  vec4 ${r}_(vec4 v) {
    return max( v, 0.0 );
  }
  `,name:r,type:0}}function Za(){let r="sigmoid";return{body:`
  float ${r}_(float a) {
    return 1.0 / (1.0 + exp(-a));
  }
  vec4 ${r}_(vec4 v) {
    return 1.0 / (1.0 + exp(-v));
  }
  `,name:r,type:0}}function tx(){return Gt("sqrt")}function rx(){return Gt("tan")}function nx(){let r="tanh";return{body:`
  float ${r}_(float a) {
    a = clamp(a, -10., 10.);
    a = exp(2.*a);
    return (a - 1.) / (a + 1.);
  }
  vec4 ${r}_(vec4 v) {
    v = clamp(v, -10., 10.);
    v = exp(2.*v);
    return (v - 1.) / (v + 1.);
  }
  `,name:r,type:0}}function Gt(r){return{body:`
  float ${r}_(float a) {
    return ${r}(a);
  }
  vec4 ${r}_(vec4 v) {
    return ${r}(v);
  }
  `,name:r,type:0}}var ox,nt,xd,vd,wd,Td,Qa,$d,Sd,ix,Id,_d,Ad,Od,Ed,Cd,es,Pd,Dd,kd,Rd,Bd,Md,Ld,Nd,zd,Fd,Gd,ts=D(()=>{"use strict";pt();Le();Sr();Xe();Ce();ox=(r,e,n,t)=>{let o=r.session.pack?2:0,i=ae(r.session.backend.glContext.version);return{...e,output:{dims:n.dims,type:n.type,textureType:o},shaderSource:`
     ${t.body}
     void main() {
       vec4 v = ${i.texture2D}(A, TexCoords);
       v = ${t.name}_(v);
       ${i.output} = v;
     }
     `,hasMain:!0}},nt=(r,e,n,t)=>{let o=r.session.pack?2:0,i={name:n.name,inputTypes:[o],inputNames:["A"],cacheHint:t};return{...i,get:()=>ox(r,i,e,n)}},xd=(r,e)=>[r.run(nt(r,e[0],F0()),e)],vd=(r,e)=>[r.run(nt(r,e[0],G0()),e)],wd=(r,e)=>[r.run(nt(r,e[0],W0()),e)],Td=(r,e)=>[r.run(nt(r,e[0],V0()),e)],Qa=(r,e,n)=>[r.run(nt(r,e[0],Xa(n.min,n.max),n.cacheKey),e)],$d=r=>we({min:r.attributes.getFloat("min",tn),max:r.attributes.getFloat("max",rn)}),Sd=(r,e)=>{let n=ix(r,e);return Qa(r,[e[0]],n)},ix=(r,e)=>{if(e.length>=3&&(!r.session.isInitializer(e[1].dataId)||!r.session.isInitializer(e[2].dataId)))throw new Error("dynamic clip attributes are not allowed");let n=e.length>=3?e[1].numberData[0]:tn,t=e.length>=3?e[2].numberData[0]:rn;return we({min:n,max:t})},Id=(r,e)=>[r.run(nt(r,e[0],U0()),e)],_d=(r,e)=>[r.run(nt(r,e[0],H0()),e)],Ad=(r,e,n)=>[r.run(nt(r,e[0],j0(n.alpha),n.cacheKey),e)],Od=r=>we({alpha:r.attributes.getFloat("alpha",1)}),Ed=(r,e)=>[r.run(nt(r,e[0],q0()),e)],Cd=(r,e)=>[r.run(nt(r,e[0],K0()),e)],es=(r,e)=>[r.run(nt(r,e[0],Y0()),e)],Pd=(r,e,n)=>[r.run(nt(r,e[0],X0(n.alpha),n.cacheKey),e)],Dd=r=>we({alpha:r.attributes.getFloat("alpha",.01)}),kd=(r,e)=>[r.run(nt(r,e[0],J0()),e)],Rd=(r,e)=>[r.run(nt(r,e[0],Z0()),e)],Bd=(r,e)=>[r.run(nt(r,e[0],Q0()),e)],Md=(r,e)=>[r.run(nt(r,e[0],Ja()),e)],Ld=(r,e)=>[r.run(nt(r,e[0],Za()),e)],Nd=(r,e)=>[r.run(nt(r,e[0],ex()),e)],zd=(r,e)=>[r.run(nt(r,e[0],tx()),e)],Fd=(r,e)=>[r.run(nt(r,e[0],rx()),e)],Gd=(r,e)=>[r.run(nt(r,e[0],nx()),e)]});function ar(r){let e;switch(r.activation){case"Relu":e=Ja();break;case"Sigmoid":e=Za();break;case"Clip":e=Xa(r.clipMin,r.clipMax);break;default:return{activationFunction:"",applyActivation:""}}let n=e.name,t=e.body,o=`value = ${n}_(value);`;return{activationFunction:t,applyActivation:o}}var On,an=D(()=>{"use strict";Le();ts();On=r=>{let e=r.getString("activation","");if(e==="Clip"){let[n,t]=r.getFloats("activation_params",[tn,rn]);return{activation:e,clipMax:t,clipMin:n,activationCacheKey:`${e}:${n},${t}`}}return{activation:e,activationCacheKey:e}}});var sx,ux,Wd,Vd=D(()=>{"use strict";Bt();Xe();Ce();hi();an();sx=(r,e)=>({name:"GroupedConv",inputNames:r?["X","W","Bias"]:["X","W"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e}),ux=(r,e,n,t)=>{let i=e.length>2?"value += getBias(output_channel);":"",u=e[0].dims.slice(),a=e[1].dims.slice(),s=a[0]/t.group;ze.verbose("GroupedConv",`autpPad:${t.autoPad}, dilations:${t.dilations}, group:${t.group}, kernelShape:${t.kernelShape}, pads:${t.pads}, strides:${t.strides}`);let l=En(u,a,t.dilations,t.pads,t.strides),c=ae(r.session.backend.glContext.version),{activationFunction:p,applyActivation:h}=ar(t),g=`
  const ivec2 strides = ivec2(${t.strides[0]}, ${t.strides[1]});
  const ivec2 pads = ivec2(${t.pads[0]}, ${t.pads[1]});
  ${p}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;
    ivec2 xRCCorner = coords.zw * strides - pads;
    int group_id = output_channel / ${s};

    float value = 0.0;
    for (int wInChannel = 0; wInChannel < ${a[1]}; wInChannel++) {
      int input_channel = group_id * ${a[1]} + wInChannel;
      for (int wHeight = 0; wHeight < ${a[2]}; wHeight++) {
        int xHeight = xRCCorner.x + wHeight * ${t.dilations[0]};

        if (xHeight < 0 || xHeight >= ${u[2]}) {
          continue;
        }

        for (int wWidth = 0; wWidth < ${a[3]}; wWidth++) {
          int xWidth = xRCCorner.y + wWidth * ${t.dilations[1]};
          if (xWidth < 0 || xWidth >= ${u[3]}) {
            continue;
          }

          float xVal = getX(batch, input_channel, xWidth, xHeight);
          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);
          value += xVal*wVal;
        }
      }
    }
    ${i}
    ${h}
    ${c.output} = vec4(value, .0, .0, .0);
  }
`;return{...n,output:{dims:l,type:e[0].type,textureType:0},shaderSource:g,hasMain:!0}},Wd=(r,e,n)=>{let t=sx(e.length>2,n.cacheKey);return{...t,get:()=>ux(r,e,t,n)}}});var lx,cx,Ud,Hd=D(()=>{"use strict";Xe();Ce();on();lx=r=>({name:"Im2Col (packed)",inputNames:["A"],inputTypes:[2],cacheHint:r}),cx=(r,e,n,t,o,i)=>{let u=n.dims,a=t.dims,s=2,l=3,c=o.length,p=[a[1]*a[2]*a[3],o[2]*o[3]],h=a[2]*a[3],g=ir(),x=ae(r.session.backend.glContext.version),b="";for(let S=0;S<=1;S++)for(let O=0;O<=1;O++)b+=`
            blockIndex = rc.x + ${O};
            pos = rc.y + ${S};

            if(blockIndex < ${p[1]} && pos < ${p[0]}) {
              offsetY = int(blockIndex / (${o[c-1]})) * ${i.strides[0]} -
                ${i.pads[0]};
              d0 = offsetY + ${i.dilations[0]} * (imod(pos, ${h}) / ${a[2]});

              if(d0 < ${u[s]} && d0 >= 0) {
                offsetX = imod(blockIndex, ${o[c-1]}) * ${i.strides[1]} -
                  ${i.pads[1]};
                d1 = offsetX + ${i.dilations[1]} * imod(imod(pos, ${h}), ${a[2]});

                if(d1 < ${u[l]} && d1 >= 0) {

                  ch = int(float(pos)/ ${h}.);
                    innerDims = vec2(d0, d1);
                    result[${S*2+O}] = getChannel(
                      getA(0, ch, int(innerDims.x),
                      int(innerDims.y)), innerDims);
                }
              }
            }

          `;let w=`
      ${g}

      void main() {
        ivec2 rc = getOutputCoords();
          vec4 result = vec4(0.0);
          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
          vec2 innerDims;
          ${b}
          ${x.output} = result;
      }
            `;return{...e,output:{dims:p,type:n.type,textureType:2},shaderSource:w,hasMain:!0}},Ud=(r,e,n,t,o)=>{let i=lx(o.cacheKey);return{...i,get:()=>cx(r,i,e,n,t,o)}}});function fx(r,e,n){let t=e[0].dims,o=e[1].dims,i=Tt.calcShape(t,o,!0);if(!i)throw new Error("Can't use matmul on the given tensors");let u=$t(i.length),a=Yt(),{activationFunction:s,applyActivation:l}=ar(n),c=e.length>2,p=c?"value += getBiasForMatmul();":"",h=c?`${ns(u,a,e[2].dims,i,!1)}`:"",g=i.length,x=t.length,b=o.length,w=t[t.length-1],S=`
    ${s}
    ${h}
    float process(int indices[${g}]) {
        int a[${x}];
        int b[${b}];
        bcastMatmulIndices_A(indices, a);
        bcastMatmulIndices_B(indices, b);

        float value;
        for (int k=0; k<${w}; ++k) {
            a[${x-1}] = k;
            b[${b-2}] = k;
            value += _A(a) * _B(b);
        }
        ${p}
        ${l}
        return value;
    }`;return{...r,output:{dims:i,type:e[0].type,textureType:0},shaderSource:S}}function rs(r,e){let n=dx(r.length>2,e.activationCacheKey);return{...n,get:()=>fx(n,r,e)}}function ns(r,e,n,t,o){let i="",u=n.length,a=t.length,s=a-u;a<2&&u>0?i="coords":i=n.map((b,w)=>`coords.${e[w+s]}`).join(", ");let c=Tt.getBroadcastDims(n,t).map(b=>`coords.${e[b+s]} = 0;`).join(`
`),h=te.size(n)===1,g="vec4(outputValue.xx, outputValue.yy)";return h&&(g="vec4(outputValue.x)"),o?`
vec4 getBiasForMatmul() {
  ${r} coords = getOutputCoords();
  ${c}
  vec4 outputValue = getBias(${i});
  return ${g};
}`:`
float getBiasForMatmul() {
  ${r} coords = getOutputCoords();
  ${c}
  return getBias(coords.x);
}`}var jd,qd,dx,px,mi=D(()=>{"use strict";Le();Ce();or();an();os();jd=(r,e,n)=>(px(e),r.session.pack?[r.run(gi(r,e,n),e)]:[r.run(rs(e,n),e)]),qd=r=>On(r.attributes),dx=(r,e)=>({name:"MatMul",inputNames:r?["A","B","Bias"]:["A","B"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e});px=r=>{if(!r||r.length!==2)throw new Error("MatMul requires 2 inputs.");if(r[0].dims[r[0].dims.length-1]!==r[1].dims[r[1].dims.length-2])throw new Error("shared dimension does not match.");if(r[0].type!=="float32"&&r[0].type!=="float64"||r[1].type!=="float32"&&r[1].type!=="float64")throw new Error("inputs should be float type");if(r[0].type!==r[1].type)throw new Error("inputs types should match")}});function gx(r,e,n,t){let o=[],i=[],u=n[0].dims,a=n[1].dims,s=u.length,l=a.length,c=t.length,p=c-s,h=c-l;o=u.map((E,B)=>`coords.${e[B+p]}`),o[s-1]="i*2",o.join(", "),i=a.map((E,B)=>`coords.${e[B+h]}`),i[l-2]="i*2",i.join(", ");let g=Tt.getBroadcastDims(u,t),x=Tt.getBroadcastDims(a,t),b=g.map(E=>`coords.${e[E+p]} = 0;`).join(`
`),w=x.map(E=>`coords.${e[E+h]} = 0;`).join(`
`),S=`int lastDim = coords.${e[c-1]};
  coords.${e[c-1]} = coords.${e[c-2]};
  coords.${e[c-2]} = lastDim;`;return`
vec4 getAAtOutCoordsMatmul(int i) {
  ${r} coords = getOutputCoords();
  ${S}
  ${b}
  vec4 outputValue = getA(${o});
  return outputValue;
}

vec4 getBAtOutCoordsMatmul(int i) {
  ${r} coords = getOutputCoords();
  ${S}
  ${w}
  vec4 outputValue = getB(${i});
  return outputValue;
}`}function bx(r,e){let n="";for(let t=0;t<e-2;t++)n+=`rc.${r[t]}, `;return n+=`rc.${r[e-2]}, i*2`,n}function yx(r,e){let n="";for(let t=0;t<e-2;t++)n+=`rc.${r[t]}, `;return n+=`i*2, rc.${r[e-1]}`,n}var hx,mx,gi,os=D(()=>{"use strict";Le();Xe();Ce();or();an();mi();hx=(r,e)=>({name:"MatMul (packed)",inputNames:r?["A","B","Bias"]:["A","B"],inputTypes:r?[2,2,2]:[2,2],cacheHint:e}),mx=(r,e,n,t)=>{let o=n.length>2,i=o?"value += getBiasForMatmul();":"",u=n[0].dims,a=n[1].dims,s=Tt.calcShape(u,a,!0),l=!te.areEqual(n[0].dims,n[1].dims);if(!s)throw new Error("Can't use matmul on the given tensors");let c=u[u.length-1],p=Math.ceil(c/2),h=u.length,g=a.length,x=ae(r.session.backend.glContext.version),b=$t(s.length),w=s.length,S=Yt(),{activationFunction:O,applyActivation:E}=ar(t),B=o?`${ns(b,S,n[2].dims,s,!0)}`:"",z=l?`${gx(b,S,n,s)}`:"",M=l?"getAAtOutCoordsMatmul(i)":`getA(${bx(S,h)})`,W=l?"getBAtOutCoordsMatmul(i)":`getB(${yx(S,g)})`,Y=l?"":`${b} rc =
          getOutputCoords(); int lastDim = rc.${S[w-1]}; rc.${S[w-1]} =
          rc.${S[w-2]}; rc.${S[w-2]} = lastDim;
      `,Q=`
            ${z}
            ${B}
            ${O}
            void main() {
              ${Y}

              vec4 value = vec4(0);
              for (int i = 0; i < ${p}; i++) {
                vec4 a = ${M};
                vec4 b = ${W};

                value += (a.rrbb * b.rgrg);
                value += (a.ggaa * b.baba);
              }
              ${i}
              ${E}
              ${x.output} = value;
            }`;return{...e,output:{dims:s,type:n[0].type,textureType:2},shaderSource:Q,hasMain:!0}},gi=(r,e,n)=>{let t=hx(e.length>2,n.activationCacheKey);return{...t,get:()=>mx(r,t,e,n)}}});var Kd,Yd=D(()=>{"use strict";hi();Hd();os();Kd=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=En(t,o,n.dilations,n.pads,n.strides),u=r.run(Ud(r,e[0],e[1],i,n),[e[0]]),a=r.reshapePacked(e[1],[o[0],o[1]*o[2]*o[3]]),s=e.length===3?[a,u,e[2]]:[a,u],l=r.run(gi(r,s,n),s);return r.reshapePacked(l,i)}});var xx,vx,Xd,is,as=D(()=>{"use strict";Ce();xx=r=>({name:"Im2Col",inputNames:["X"],inputTypes:[0],cacheHint:r}),vx=(r,e,n,t,o,i)=>{let u=n.dims,a=t.dims,s=o.length,l=is(u,a,o,4),c=`
        const int XC = ${u[1]};
        const int XH = ${u[2]};
        const int XW = ${u[3]};
        const int KH = ${i.kernelShape[0]};
        const int KW = ${i.kernelShape[1]};
        const int dilationH = ${i.dilations[0]};
        const int dilationW = ${i.dilations[1]};
        const int strideH = ${i.strides[0]};
        const int strideW = ${i.strides[1]};
        const int padH = ${i.pads[0]};
        const int padW = ${i.pads[1]};
        const int KHKW = KH*KW;
        const int XCKHKW = XC * KHKW;
        const int outputChannels = 4;
        vec4 process(int indices[${s}]) {
          int b  = indices[0]; // batch size
          int oh = indices[1] * strideH - padH; //output height
          int ow = indices[2] * strideW - padW; //output width
          int p = indices[3] * outputChannels; //patch
          vec4 value = vec4(0.0);
          for(int i=0; i < outputChannels; ++i) {
            if(p < XCKHKW) {
              int patchC = p / KHKW;
              int patchH = (p - patchC*KHKW) / KW;
              int patchW = (p - patchC*KHKW) - patchH * KW;
              int xh2 = oh + patchH * dilationH;
              int xw2 = ow + patchW * dilationW;
              int x[${u.length}];
              x[0] = b;
              x[1] = patchC;
              x[2] = xh2;
              x[3] = xw2;
              if(xh2 >= 0 &&
                  xh2 < XH &&
                  xw2 >= 0 &&
                  xw2 < XW) {
                value[i] = _X(x);
              }
            }
            ++p;
          }
          return value;
        }
        `;return{...e,output:{dims:l,type:n.type,textureType:4},shaderSource:c}},Xd=(r,e,n,t,o)=>{let i=xx(o.cacheKey);return{...i,get:()=>vx(r,i,e,n,t,o)}},is=(r,e,n,t=4)=>[n[0],n[2],n[3],Math.ceil(r[1]*e[2]*e[3]/t)]});var wx,Tx,Jd,Zd=D(()=>{"use strict";Le();Xe();Ce();an();as();wx=(r,e)=>({name:"ConvDotProduct",inputNames:r?["Im2Col","K","B"]:["Im2Col","K"],inputTypes:r?[0,4,0]:[0,4],cacheKey:e.activationCacheKey}),Tx=(r,e,n,t,o)=>{let i=n[0].dims,u=n[1].dims,a=[u[0],Math.ceil(i[1]*u[2]*u[3]/4)],s=is(i,u,t),[l,c]=r.calculateTextureWidthAndHeight(a,4),p=te.computeStrides(s),[h,g]=r.calculateTextureWidthAndHeight(s,4),x=t.length,b=n.length<3?"0.0":"_B(b)",w=Math.ceil(i[1]*u[2]*u[3]/4),{activationFunction:S,applyActivation:O}=ar(o),E=ae(r.session.backend.glContext.version),B=`
${S}
float process(int indices[${x}]) {
  int b[1];
  b[0] = indices[1];
  int im2col[4];
  im2col[0] = indices[0];
  im2col[1] = indices[2];
  im2col[2] = indices[3];
  int im2colOffset = im2col[0] * ${p[0]} + im2col[1] * ${p[1]} + im2col[2] * ${p[2]};
  int kernelOffset = indices[1] * ${a[1]};
  float value = ${b};
  for (int i = 0; i < ${w}; ++i) {
    vec2 im2colCoords = offsetToCoords(im2colOffset, ${h}, ${g});
    vec2 kernelCoords = offsetToCoords(kernelOffset, ${l}, ${c});
    value += dot(${E.texture2D}(Im2Col, im2colCoords), ${E.texture2D}(K, kernelCoords));
    ++im2colOffset;
    ++kernelOffset;
  }
  ${O}
  return value;
}`;return{...e,output:{dims:t,type:n[0].type,textureType:0},shaderSource:B}},Jd=(r,e,n,t)=>{let o=wx(e.length>2,t);return{...o,get:()=>Tx(r,o,e,n,t)}}});var En,ss,$x,Sx,Ix,_x,us,Ax,hi=D(()=>{"use strict";pt();Le();Vd();Yd();Zd();an();as();mi();En=(r,e,n,t,o)=>{let i=r[0],u=r.slice(2),a=u.length,s=e[0],c=e.slice(2).map((x,b)=>x+(x-1)*(n[b]-1)),h=u.map((x,b)=>x+t[b]+t[b+a]).map((x,b)=>Math.floor((x-c[b]+o[b])/o[b]));return[i,s].concat(...h)},ss=(r,e,n)=>(Ax(e,n),$x(r,e,n)),$x=(r,e,n)=>{let t=_x(n,e),o=r.session.pack,i=t.kernelShape[0]===1&&t.kernelShape[1]===1;return t.group>1?[r.run(Wd(r,e,t),e)]:i&&o?[Sx(r,e,t)]:o&&e[0].dims.length===4&&e[0].dims[0]===1&&!i?[Kd(r,e,t)]:[Ix(r,e,t)]},Sx=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=En(t,o,n.dilations,n.pads,n.strides),u=r.reshapeUnpacked(e[0],[t[1],t[2]*t[3]]),a=r.reshapeUnpacked(e[1],[o[0],o[1]]),s=e.length>2?[a,u,e[2]]:[a,u],l=r.run(rs(s,n),s);return r.reshapeUnpacked(l,i)},Ix=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=En(t,o,n.dilations,n.pads,n.strides),u=r.run(Xd(r,e[0],e[1],i,n),[e[0]]),a=e.length===3?[u,e[1],e[2]]:[u,e[1]];return r.run(Jd(r,e,i,n),a)},_x=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0)for(let i=2;i<e[1].dims.length;++i)n.push(e[1].dims[i]);let t=r.pads.slice();en.adjustPadsBasedOnAutoPad(e[0].dims,r.strides,r.dilations,n,t,r.autoPad);let o=Object.assign({},r);return Object.assign(o,{kernelShape:n,pads:t,cacheKey:r.cacheKey}),o},us=r=>{let e=r.attributes,n=On(e),t=e.getString("auto_pad","NOTSET"),o=e.getInts("dilations",[1,1]),i=e.getInt("group",1),u=e.getInts("kernel_shape",[]),a=e.getInts("pads",[0,0,0,0]),s=e.getInts("strides",[1,1]);return we({autoPad:t,dilations:o,group:i,kernelShape:u,pads:a,strides:s,...n})},Ax=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4||r[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");let n=r[0].dims[1],t=r[1].dims[1]*e.group;if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(r.length===3&&(r[2].dims.length!==1||r[1].dims[0]!==r[2].dims[0]))throw new Error("invalid bias");let o=r[0].dims.length-2;if(e.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(e.strides.length!==o)throw new Error(`strides should be ${o}D`);if(e.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(r[0].type!=="float32"||r[1].type!=="float32")throw new Error("Conv input(X,W) should be float tensor");if(r.length===3&&r[2].type!=="float32")throw new Error("Conv input(bias) should be float tensor")}});var Ox,Ex,Cx,Qd,Px,Dx,kx,Rx,Bx,Mx,ef,Lx,tf=D(()=>{"use strict";pt();Xe();Ce();an();Ox=(r,e,n,t,o,i)=>(r-1)*e+n+(t-1)*o+1-i,Ex=(r,e,n,t,o)=>{let i=Math.floor(r/2);e==="SAME_UPPER"?(n[t]=i,n[o]=r-i):e==="SAME_LOWER"&&(n[t]=r-i,n[o]=i)},Cx=(r,e,n,t,o,i,u,a)=>{let s=r.length-2,l=a.length===0;for(let c=0;c<s;++c){let p=l?r[c+2]*i[c]:a[c],h=Ox(r[c+2],i[c],o[c],e[c],n[c],p);Ex(h,t,o,c,c+s),l&&a.push(i[c]*(r[c+2]-1)+u[c]+(e[c]-1)*n[c]+1-o[c]-o[c+s])}},Qd=(r,e,n)=>(Lx(e,n),Px(r,e,n)),Px=(r,e,n)=>{let t=Mx(n,e);return[Bx(r,e,t)]},Dx=(r,e)=>({name:"ConvTranspose",inputNames:r?["X","W","B"]:["X","W"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e}),kx=(r,e,n,t)=>{let i=e.length>2?"getB(output_channel)":"0.0",u=e[0].dims,a=e[1].dims,s=a[1],l=a[0]/t.group,c=[e[0].dims[0],e[1].dims[1]*t.group,...t.outputShape],p=ae(r.session.backend.glContext.version),{activationFunction:h,applyActivation:g}=ar(t),x=`
  const ivec2 strides = ivec2(${t.strides[0]}, ${t.strides[1]});
  const ivec2 pads = ivec2(${t.pads[0]}, ${t.pads[1]});
  ${h}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;

    ivec2 loc = coords.zw + pads;

    int group_id = output_channel / ${s};
    int wOutChannel = output_channel - group_id * ${s};

    float value = ${i};
    for (int inChannelOffset = 0; inChannelOffset < ${l}; inChannelOffset++) {
      int input_channel = group_id * ${l} + inChannelOffset;
      for (int wWOff = 0; wWOff < ${a[2]}; wWOff++) {
        for (int wHOff = 0; wHOff < ${a[3]}; wHOff++) {
          ivec2 wOff = ivec2(wWOff * ${t.dilations[0]}, wHOff * ${t.dilations[1]});
          ivec2 wLoc = loc - wOff;
          ivec2 wLocIn = wLoc / strides;
          if (
            wLocIn * strides == wLoc &&
            wLocIn.x >= 0 && wLocIn.x < ${u[2]} &&
            wLocIn.y >= 0 && wLocIn.y < ${u[3]}
          ) {
            float xVal = getX(batch, input_channel, wLocIn.y, wLocIn.x);
            float wVal = getW(input_channel, wOutChannel, wHOff, wWOff);
            value += xVal * wVal;
          }
        }
      }
    }
    ${g}
    ${p.output} = vec4(value, .0, .0, .0);
  }
`;return{...n,output:{dims:c,type:e[0].type,textureType:0},shaderSource:x,hasMain:!0}},Rx=(r,e,n)=>{let t=Dx(e.length>2,n.cacheKey);return{...t,get:()=>kx(r,e,t,n)}},Bx=(r,e,n)=>r.run(Rx(r,e,n),e),Mx=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0)for(let a=2;a<e[1].dims.length;++a)n.push(e[1].dims[a]);let t=r.pads.slice(),o=r.outputShape.slice(),i=e[0].dims;Cx(i,n,r.dilations,r.autoPad,t,r.strides,r.outputPadding,o);let u=Object.assign({},r);return Object.assign(u,{kernelShape:n,pads:t,outputShape:o,cacheKey:r.cacheKey}),u},ef=r=>{let e=r.attributes,n=On(e),t=e.getString("auto_pad","NOTSET"),o=e.getInts("dilations",[1,1]),i=e.getInt("group",1),u=e.getInts("kernel_shape",[]),a=e.getInts("output_padding",[0,0]),s=e.getInts("output_shape",[]),l=e.getInts("pads",[0,0,0,0]),c=e.getInts("strides",[1,1]);return we({autoPad:t,dilations:o,group:i,kernelShape:u,outputPadding:a,outputShape:s,pads:l,strides:c,...n})},Lx=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4||r[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");let n=r[0].dims[1],t=r[1].dims[0];if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=r[1].dims[1]*e.group;if(r.length===3&&(r[2].dims.length!==1||r[2].dims[0]!==o))throw new Error("invalid bias");let i=r[0].dims.length-2;if(e.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(e.strides.length!==i)throw new Error(`strides should be ${i}D`);if(e.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(e.outputPadding.length!==i)throw new Error(`output_padding should be ${i}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==r[0].dims.length-2)throw new Error("invalid output shape");if(r[0].type!=="float32"||r[1].type!=="float32")throw new Error("ConvTranspose input(X,W) should be float tensor");if(r.length===3&&r[2].type!=="float32")throw new Error("ConvTranspose input(bias) should be float tensor")}});var rf,sn,nf,Nx,of,zx,Fx,Gx,bi=D(()=>{"use strict";pt();Le();Ce();rf={name:"Transpose",inputNames:["A"],inputTypes:[0]},sn=(r,e,n)=>(Gx(e),[r.run({...rf,cacheHint:n.cacheKey,get:()=>Nx(r,e[0],n.perm)},e)]),nf=r=>we({perm:r.attributes.getInts("perm",[])}),Nx=(r,e,n)=>{let t=e.dims;n=of(t,n);let o=zx(t,n),i=t.length,u=`
      ${Fx("perm",n,i)}
      float process(int indices[${i}]) {
        int a[${i}];
        perm(a, indices);
        return _A(a);
      }`;return{...rf,output:{dims:o,type:e.type,textureType:0},shaderSource:u}},of=(r,e)=>(e&&e.length!==r.length&&(e=[...r.keys()].reverse()),e),zx=(r,e)=>(e=of(r,e),te.sortBasedOnPerm(r,e)),Fx=(r,e,n)=>{let t=[];t.push(`void ${r}(out int a[${n}], int src[${n}]) {`);for(let o=0;o<n;++o)t.push(`	a[${e[o]}]=src[${o}];`);return t.push("	}"),t.join(`
`)},Gx=r=>{if(!r||r.length!==1)throw new Error("Transpose requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("input should be float tensor")}});var af,sf,Wx,uf=D(()=>{"use strict";bi();af=(r,e,n)=>{Wx(e);let t=n.blocksize,o=t*t,i=n.mode==="DCR"?[0,3,4,1,5,2]:[0,1,4,2,5,3],u=n.mode==="DCR"?[e[0].dims[0],t,t,e[0].dims[1]/o,e[0].dims[2],e[0].dims[3]]:[e[0].dims[0],e[0].dims[1]/o,t,t,e[0].dims[2],e[0].dims[3]],a=r.reshapeUnpacked(e[0],u),s={perm:i,cacheKey:`${i}`},[l]=sn(r,[a],s),c=[e[0].dims[0],e[0].dims[1]/o,e[0].dims[2]*t,e[0].dims[3]*t];return[r.reshapeUnpacked(l,c)]},sf=r=>{let e=r.attributes.getInt("blocksize");if(e<1)throw new Error(`blocksize must be >= 1, but got : ${e} for DepthToSpace`);let n=r.attributes.getString("mode","DCR");if(n!=="DCR"&&n!=="CRD")throw new Error(`unrecognized mode: ${n} for DepthToSpace`);return{mode:n,blocksize:e}},Wx=r=>{if(r.length!==1)throw new Error(`DepthToSpace expect 1 inputs, but got ${r.length}`);if(r[0].type==="string"||r[0].dims.length!==4)throw new TypeError("DepthToSpace input should be a 4-D numeric tensor")}});var lf,cf,Vx,df=D(()=>{"use strict";Le();lf=(r,e,n)=>{Vx(e,n);let t=te.flattenShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},cf=r=>r.attributes.getInt("axis",1),Vx=(r,e)=>{if(!r||r.length!==1)throw new Error("Flatten requires 1 input.");let n=r[0].dims.length;if(n===0)throw new Error("scalar tensor is not supported.");if(e<-n||e>n)throw new Error("Invalid axis");if(r[0].type==="string")throw new Error("string tensor is not supported.")}});var Br,fo=D(()=>{"use strict";Br=["float32","float64","int32","int16","int8","uint16","uint32","uint8"]});var ff,pf,Ux,Hx,jx,qx,hf=D(()=>{"use strict";pt();fo();Le();Ce();ff=(r,e,n)=>(qx(e,n.axis),[r.run(jx(r,e,n),e)]),pf=r=>we({axis:r.attributes.getInt("axis",0)}),Ux={name:"Gather",inputNames:["A","B"],inputTypes:[0,0]},Hx=(r,e,n,t)=>{let o=n[0].dims.slice(),i=n[1].dims.slice(),u=new Array(o.length+i.length-1);t=te.normalizeAxis(t,o.length);let a=[];for(let h=0;h<u.length;h++)h<t?(u[h]=o[h],a.push(`inputIdx[${h}] = outputIdx[${h}];`)):h<t+i.length?(u[h]=i[h-t],a.push(`indexDataIdx[${h-t}] = outputIdx[${h}];`)):(u[h]=o[h-i.length+1],a.push(`inputIdx[${h-i.length+1}] = outputIdx[${h}];`));let s=u.length||1,l=o.length,c=i.length||1,p=`
      float process(int outputIdx[${s}]) {
        int inputIdx[${l}];
        int indexDataIdx[${c}];
        indexDataIdx[0] = 0;
        ${a.join(`
        `)}
        int idx = int(_B(indexDataIdx));
        inputIdx[${t}] = idx < 0 ? idx + ${o[t]} : idx;
        return _A(inputIdx);
      }`;return{...e,output:{dims:u,type:n[0].type,textureType:0},shaderSource:p}},jx=(r,e,n)=>{let t={...Ux,cacheHint:n.cacheKey};return{...t,get:()=>Hx(r,t,e,n.axis)}},qx=(r,e)=>{if(!r||r.length!==2)throw new Error("Gather requires 2 inputs.");let n=r[0].dims.length;if(n<1)throw new Error("Invalid input shape.");if(e<-n||e>n-1)throw new Error("Invalid axis.");if(Br.indexOf(r[0].type)===-1)throw new Error("Invaid input type.");if(r[1].type!=="int32"&&r[1].type!=="int16")throw new Error("Invaid input type.")}});var ls,mf,gf,bf,Kx,Yx,Xx,yf=D(()=>{"use strict";pt();Le();Ce();ls=(r,e,n)=>(Xx(e,n),[r.run(Kx(e,n),e)]),mf=(r,e)=>{let n=r.attributes.getInt("transA",0)!==0,t=r.attributes.getInt("transB",0)!==0,o=r.attributes.getFloat("alpha",1),i=r.attributes.getFloat("beta",1);return we({transA:n,transB:t,alpha:o,beta:i,isOptionalC:e})},gf=r=>mf(r,!1),bf=r=>mf(r,!0),Kx=(r,e)=>{let n={name:"Gemm",inputNames:r.length===3?["A","B","C"]:["A","B"],inputTypes:r.length===3?[0,0,0]:[0,0],key:e.cacheKey};return{...n,get:()=>Yx(n,r,e)}},Yx=(r,e,n)=>{let t=e[0].dims.slice(),o=e[1].dims.slice(),[i,u]=ai.getShapeOfGemmResult(t,n.transA,o,n.transB,e.length===3?e[2].dims:void 0),a=[i,u];if(!a)throw new Error("Can't use gemm on the given tensors");let s=t[t.length-1],l="";n.transA&&(s=t[0]),n.transA&&n.transB?l="value += _A_T(a) * _B_T(b);":n.transA&&!n.transB?l="value += _A_T(a) * _B(b);":!n.transA&&n.transB?l="value += _A(a) * _B_T(b);":!n.transA&&!n.transB&&(l="value += _A(a) * _B(b);");let c=a.length,p=e.length===3?`int c[${e[2].dims.length}];`:"",h=e.length===3?"bcastIndices_C(indices, c);":"",g=e.length===3?"value += beta * _C(c);":"",x=`
      float process(int indices[${c}]) {
          int a[${c}];
          int b[${c}];
          ${p}

          copyVec(indices, a);
          copyVec(indices, b);
          ${h}

          float value = 0.0;
          for (int k=0; k<${s}; ++k) {
              a[${c-1}] = k;
              b[${c-2}] = k;
              ${l}
          }

          value = value * alpha;
          ${g}
          return value;
      }`;return{...r,output:{dims:a,type:e[0].type,textureType:0},variables:[{name:"alpha",type:"float",data:n.alpha},{name:"beta",type:"float",data:n.beta}],shaderSource:x}},Xx=(r,e)=>{if(!r)throw new Error("Input is missing");if(e.isOptionalC&&(r.length<2||r.length>3))throw new Error("Invaid input shape.");if(!e.isOptionalC&&r.length!==3)throw new Error("Gemm requires 3 inputs");if(r.length===3&&r[2].dims.length!==1&&r[2].dims.length!==2)throw new Error("Invalid input shape of C");if(r[0].type!=="float32"&&r[0].type!=="float64"||r[1].type!=="float32"&&r[1].type!=="float64"||r.length===3&&r[2].type!=="float32"&&r[2].type!=="float64")throw new Error("Invalid input type.");if(r[0].type!==r[1].type||r.length===3&&r[0].type!==r[2].type)throw new Error("Input types are mismatched")}});var xf,vf,Jx,Zx,Qx,ev,tv,wf=D(()=>{"use strict";pt();Ce();xf=(r,e,n)=>(tv(e),[r.run(Qx(r,e,n),e)]),vf=r=>{let e=r.attributes.getFloat("scale"),n=r.attributes.getFloats("bias");return we({scale:e,bias:n})},Jx={name:"ImageScaler",inputNames:["X"],inputTypes:[0]},Zx=(r,e,n,t)=>{let o=n[0].dims.slice(),i=o.length,a=`
      ${ev(t.bias.length)}
      float process(int indices[${i}]) {
        return _X(indices) * scale + getBias(bias, indices[1]);
      }`;return{...e,output:{dims:o,type:n[0].type,textureType:0},variables:[{name:"bias",type:"float",arrayLength:t.bias.length,data:t.bias},{name:"scale",type:"float",data:t.scale}],shaderSource:a}},Qx=(r,e,n)=>{let t={...Jx,cacheHint:n.cacheKey};return{...t,get:()=>Zx(r,t,e,n)}},ev=r=>{let e=[`float getBias(float bias[${r}], int channel) {`];for(let n=0;n<r;++n)n===0?e.push(`	if (channel == ${n}) { return bias[${n}]; }`):n===r-1?e.push(`	else { return bias[${n}]; }`):e.push(`	else if (channel == ${n}) { return bias[${n}]; }`);return e.push("	}"),e.join(`
`)},tv=r=>{if(!r||r.length!==1)throw new Error("ImageScaler requires 1 input.");if(r[0].dims.length!==4)throw new Error("Invalid input shape.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")}});var $f,Sf,Tf,rv,nv,ov,iv,av,sv,If=D(()=>{"use strict";Xe();Ce();$f=(r,e,n)=>{sv(e);let t=r.run(nv(e[0]),e);return[r.run(av(r,e[0],n,t.dims),[e[0],t,e[1],e[2]])]},Sf=r=>r.attributes.getFloat("epsilon",1e-5),Tf={name:"InstanceNormalization_MeanAndVariance",inputNames:["X"],inputTypes:[0]},rv=(r,e)=>{let n=e.dims.slice(),t=n[1],o=n[2]*n[3],i=[n[0],t],u=`
      vec4 process(int[2] indices) {
        vec4 v = vec4(0.0);
        int a[4];
        a[0] = indices[0];
        a[1] = indices[1];
        float temp = 0.0;
        for(int a2=0; a2<${n[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${n[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += x;
          }
        }
        float mean = temp / float(${o});
        temp = 0.0;
        for(int a2=0; a2<${n[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${n[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += (x - mean) * (x - mean);
          }
        }
        v.r = mean;
        v.g = temp / float(${o});

        return v;
      }`;return{...r,output:{dims:i,type:e.type,textureType:4},shaderSource:u}},nv=r=>({...Tf,get:()=>rv(Tf,r)}),ov={name:"InstanceNormalization_ComputeOutput",inputNames:["X","MeanAndVariance","Scale","B"],inputTypes:[0,4,0,0]},iv=(r,e,n,t,o)=>{let i=ae(r.session.backend.glContext.version),[u,a]=r.calculateTextureWidthAndHeight(o,4),[s,l]=[u/4,a],c=`
      vec4 get_MeanAndVariance(int[2] mv) {
        int offset = indicesToOffset_MeanAndVariance(mv);
        vec2 coords = offsetToCoords(offset, ${s}, ${l});
        return ${i.texture2D}(MeanAndVariance, coords);
      }

      float process(int[4] indices) {
        int mv[2];
        mv[0] = indices[0];
        mv[1] = indices[1];
        vec4 mean_and_variance = get_MeanAndVariance(mv);
        float mean = mean_and_variance.r;
        float variance = mean_and_variance.g;

        int sb[1];
        sb[0] = indices[1];
        float scale = _Scale(sb);
        float b = _B(sb);

        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;
      }`;return{...e,output:{dims:n.dims,type:n.type,textureType:0},variables:[{name:"epsilon",type:"float",data:t}],shaderSource:c}},av=(r,e,n,t)=>{let o={...ov,cacheHint:`${n}`};return{...o,get:()=>iv(r,o,e,n,t)}},sv=r=>{if(!r||r.length!==3)throw new Error("InstanceNormalization requires 3 inputs.");let e=r[0],n=r[1],t=r[2];if(e.dims.length<3||n.dims.length!==1||t.dims.length!==1)throw new Error("Invalid input shape.");if(n.dims[0]!==e.dims[1]||t.dims[0]!==e.dims[1])throw new Error("Input shapes are mismatched.");if(e.type!=="float32"&&e.type!=="float64"||n.type!=="float32"&&n.type!=="float64"||t.type!=="float32"&&t.type!=="float64")throw new Error("Invalid input type.");if(r[0].dims.length!==4)throw new Error("Only support 4-D input shape.")}});function uv(r,e){let n=r[0].dims[1],t=r[0].dims.length,o=-Math.floor((e.size-1)/2),i=Math.ceil((e.size-1)/2),u=`float(${e.alpha}) / float(${e.size})`,a=`float(${e.bias})`,s=`float(${e.beta})`,l=`
    float process(int indices[${t}]) {
        int c = indices[1];
        float x = _X(indices);
        float square_sum = 0.0;

        for (int i = ${o}; i <= ${i}; i++) {
          int idx = c + i;
          if (c >= 0 && c < ${n}) {
            indices[1] = idx;
            float j = _X(indices);
            square_sum += j * j;
          }
        }
        return x / pow(${a} + ${u} * square_sum, ${s});
    }`;return{...Of,cacheHint:e.cacheKey,output:{dims:r[0].dims,type:r[0].type,textureType:0},shaderSource:l}}function lv(r,e){return{...Of,cacheHint:e.cacheKey,get:()=>uv(r,e)}}var _f,Af,Of,cv,Ef=D(()=>{"use strict";pt();Ce();_f=(r,e,n)=>(cv(e),[r.run(lv(e,n),e)]),Af=r=>{let e=r.attributes.getFloat("alpha",1e-4),n=r.attributes.getFloat("beta",.75),t=r.attributes.getFloat("bias",1),o=r.attributes.getInt("size");return we({alpha:e,beta:n,bias:t,size:o})},Of={name:"LRN",inputNames:["X"],inputTypes:[0]};cv=r=>{if(!r||r.length!==1)throw new Error("LRN requires 1 input.");if(r[0].dims.length!==4)throw new Error('currently only support LRN for input with "NCHW" format');if(r[0].type!=="float32")throw new Error("input should be float type")}});var dv,cs,Cf,Pf,Df,fv,pv,hv,mv,gv,bv,yv,xv,kf=D(()=>{"use strict";pt();Le();Xe();Ce();dv={name:"Pad",inputNames:["A"],inputTypes:[0]},cs=(r,e,n)=>(hv(e),[r.run({...dv,cacheHint:n.cacheKey,get:()=>pv(r,e[0],n)},e)]),Cf=r=>{let e=r.attributes.getString("mode","constant"),n=r.attributes.getFloat("value",0),t=r.attributes.getInts("pads");return we({mode:e,value:n,pads:t})},Pf=(r,e,n)=>{mv(e);let t=fv(r,e,n);return cs(r,[e[0]],t)},Df=r=>r.attributes.getString("mode","constant"),fv=(r,e,n)=>{if(!r.session.isInitializer(e[1].dataId)||e.length>=3&&!r.session.isInitializer(e[2].dataId))throw new Error("dynamic pad attributes are not allowed");let t=Array.from(e[1].integerData),o=e.length>=3?e[2].floatData[0]:0;return we({mode:n,pads:t,value:o})},pv=(r,e,n)=>{let t=te.padShape(e.dims.slice(),n.pads),o=t.length,u=`
      ${gv(r,e,n)}
      float process(int[${o}] indices) {
          return padA(indices);
      }`;return{name:"Pad",inputNames:["A"],inputTypes:[0],output:{dims:t,type:e.type,textureType:0},shaderSource:u}},hv=r=>{if(!r||r.length!==1)throw new Error("Pad requires 1 input");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")},mv=r=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Pad requires 2 or 3 inputs");if(r[1].type!=="int32")throw new Error("Invalid input type.");if(r.length>=3&&r[2].type==="string")throw new Error("Invalid input type.")},gv=(r,e,n)=>{let t=ae(r.session.backend.glContext.version),[o,i]=r.calculateTextureWidthAndHeight(e.dims,0),u=te.computeStrides(e.dims);switch(n.mode){case"constant":return bv(t,e.dims,u,o,i,n.pads,n.value);case"reflect":return yv(t,e.dims,u,o,i,n.pads);case"edge":return xv(t,e.dims,u,o,i,n.pads);default:throw new Error("Invalid mode")}},bv=(r,e,n,t,o,i,u)=>{let a=e.length,s="";for(let l=a-1;l>=0;--l)s+=`
        k = m[${l}] - ${i[l]};
        if (k < 0)  return constant;
        if (k >= ${e[l]}) return constant;
        offset += k * ${n[l]};
        `;return`
      float padA(int m[${a}]) {
        const float constant = float(${u});
        int offset = 0;
        int k = 0;
        ${s}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `},yv=(r,e,n,t,o,i)=>{let u=e.length,a="";for(let s=u-1;s>=0;--s)a+=`
        k = m[${s}] - ${i[s]};
        if (k < 0) { k = -k; }
        {
          const int _2n_1 = ${2*(e[s]-1)};
          k = int( mod( float(k), float(_2n_1) ) ) ;
          if(k >= ${e[s]}) { k = _2n_1 - k; }
        }
        offset += k * ${n[s]};
        `;return`
      float padA(int m[${u}]) {
        int offset = 0;
        int k = 0;
        ${a}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `},xv=(r,e,n,t,o,i)=>{let u=e.length,a="";for(let s=u-1;s>=0;--s)a+=`
        k = m[${s}] - ${i[s]};
        if (k < 0)  k = 0;
        if (k >= ${e[s]}) k = ${e[s]-1};
        offset += k * ${n[s]};
      `;return`
      float padA(int m[${u}]) {
        int offset = 0;
        int k = 0;
        ${a}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `}});var Bf,Mf,Lf,Nf,zf,Ff,Gf,Wf,Vf,vv,Rf,Uf,xi,Hf,yi,wv,jf=D(()=>{"use strict";pt();Le();Ce();Bf=(r,e,n)=>{xi(e);let t={name:"AveragePool",inputNames:["X"],inputTypes:[0],cacheHint:n.cacheKey};return[r.run({...t,get:()=>Lf(e,t,!1,n)},e)]},Mf=r=>{let e=r.attributes.getString("auto_pad","NOTSET"),n=r.attributes.getInt("ceil_mode",0),t=r.attributes.getInt("count_include_pad",0)!==0,o=r.attributes.getInts("kernel_shape"),i=r.attributes.getInts("strides",[]),u=r.attributes.getInts("pads",[]);if(n!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return we({autoPad:e,ceilMode:n,countIncludePad:t,kernelShape:o,strides:i,pads:u})},Lf=(r,e,n,t)=>{let[o,i]=Vf(r,t,n),u=te.size(o.kernelShape),a="value += _X(x);",s="";o.countIncludePad?s+=`value /= float(${u});`:s+=`value /= float(${u} - pad);`;let c=`
        ${Hf(r[0].dims,o,a,s,"0.0")}
      `;return{...e,output:{dims:i,type:r[0].type,textureType:0},shaderSource:c}},Nf=(r,e,n)=>{xi(e);let t={name:"GlobalAveragePool",inputNames:["X"],inputTypes:[0],cacheHint:`${n.countIncludePad}`};return[r.run({...t,get:()=>Lf(e,t,!0,n)},e)]},zf=r=>{let e=r.attributes.getInt("count_include_pad",0)!==0;return we({autoPad:"",ceilMode:0,countIncludePad:e,kernelShape:[],strides:[],pads:[]})},Ff=(r,e,n)=>{xi(e);let t={name:"MaxPool",inputNames:["X"],inputTypes:[0],cacheHint:n.cacheKey};return[r.run({...t,get:()=>Wf(e,t,!1,n)},e)]},Gf=r=>{let e=r.attributes.getString("auto_pad","NOTSET"),n=r.attributes.getInt("ceil_mode",0),t=r.attributes.getInts("kernel_shape"),o=r.attributes.getInts("strides",[]),i=r.attributes.getInts("pads",[]),u=r.attributes.getInt("storage_order",0),a=r.attributes.getInts("dilations",[]);if(u!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(n!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return we({autoPad:e,ceilMode:n,countIncludePad:!1,kernelShape:t,strides:o,pads:i,storageOrder:u,dilations:a})},Wf=(r,e,n,t)=>{let[o,i]=Vf(r,t,n),u=`
      value = max(_X(x), value);
    `,a="",l=`
      ${Hf(r[0].dims,o,u,a,"-1e5")}
    `;return{...e,output:{dims:i,type:r[0].type,textureType:0},shaderSource:l}},Vf=(r,e,n)=>{let t=r[0].dims.slice(),o=Object.hasOwnProperty.call(e,"dilations"),i=e.kernelShape.slice(),u=e.strides.slice(),a=o?e.dilations.slice():[],s=e.pads.slice();en.adjustPoolAttributes(n,t,i,u,a,s);let l=en.computePoolOutputShape(n,t,u,a,i,s,e.autoPad),c=Object.assign({},e);return o?Object.assign(c,{kernelShape:i,strides:u,pads:s,dilations:a,cacheKey:e.cacheKey}):Object.assign(c,{kernelShape:i,strides:u,pads:s,cacheKey:e.cacheKey}),[c,l]},vv={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},Rf={name:"GlobalMaxPool",inputNames:["X"],inputTypes:[0]},Uf=(r,e)=>(xi(e),[r.run({...Rf,get:()=>Wf(e,Rf,!0,vv)},e)]),xi=r=>{if(!r||r.length!==1)throw new Error("Pool ops requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")},Hf=(r,e,n,t,o)=>{let i=r.length;if(e.kernelShape.length<=2){let u=e.kernelShape[e.kernelShape.length-1],a=e.strides[e.strides.length-1],s=e.pads[e.pads.length/2-1],l=e.pads[e.pads.length-1],c=r[i-1],p="",h="",g="";if(s+l!==0?p=`
          for (int i = 0; i < ${u}; i++) {
            x[${i} - 1] = indices[${i} - 1] * ${a} - ${s} + i;
            if (x[${i} - 1] < 0 || x[${i} - 1] >= ${c}) {
              pad++;
              continue;
            }
            ${n}
          }`:p=`
          for (int i = 0; i < ${u}; i++) {
            x[${i} - 1] = indices[${i} - 1] * ${a} - ${s} + i;
            ${n}
          }`,e.kernelShape.length===2){let b=e.kernelShape[e.kernelShape.length-2],w=e.strides[e.strides.length-2],S=e.pads[e.pads.length/2-2],O=e.pads[e.pads.length-2],E=r[i-2];S+O!==0?h=`
            for (int j = 0; j < ${b}; j++) {
              x[${i} - 2] = indices[${i} - 2] * ${w} - ${S} + j;
              if (x[${i} - 2] < 0 || x[${i} - 2] >= ${E}) {
                pad+= ${u};
                continue;
              }
          `:h=`
            for (int j = 0; j < ${b}; j++) {
              x[${i} - 2] = indices[${i} - 2] * ${w} - ${S} + j;
            `,g=`
          }
        `}return`
        float process(int indices[${i}]) {
          int x[${i}];
          copyVec(indices, x);

          float value = ${o};
          int pad = 0;
          ${h}
          ${p}
          ${g}
          ${t}
          return value;
        }
      `}else{let u=te.size(e.kernelShape),a=te.computeStrides(e.kernelShape),s=a.length,l=e.pads.length,c=wv(s),p=yi(r,"inputDims"),h=yi(e.pads,"pads"),g=yi(a,"kernelStrides"),x=yi(e.strides,"strides"),b=e.pads.reduce((O,E)=>O+E),w="";return b?w=`
            if (x[j] >= inputDims[j] || x[j] < 0) {
              pad++;
              isPad = true;
              break;
            }
          }
          if (!isPad) {
            ${n}
          }`:w=`
          }
          ${n}
        `,`
        ${c}
        float process(int indices[${i}]) {
          int x[${i}];
          copyVec(indices, x);
          int offset[${s}];
          int pads[${l}];
          int inputDims[${i}];
          int kernelStrides[${s}];
          int strides[${s}];
          ${h}
          ${p}
          ${x}
          ${g}

          float value = ${o};
          int pad = 0;
          bool isPad = false;
          for (int i = 0; i < ${u}; i++) {
            offsetToIndices(i, kernelStrides, offset);
            isPad = false;
            for (int j = ${i} - ${s}; j < ${i}; j++) {
              x[j] = indices[j] * strides[j - ${i} + ${s}]
                + offset[j - ${i} + ${s}] - pads[j - 2];
              ${w}
          }
          ${t}

          return value;
        }
      `}},yi=(r,e)=>{let n="";for(let t=0;t<r.length;t++)n+=`
      ${e}[${t}] = ${r[t]};
    `;return n},wv=r=>`
  void offsetToIndices(int offset, int[${r}] strides, out int[${r}] indices) {
    if (${r} == 0) {
      return;
    }
    for (int i = 0; i < ${r} - 1; ++i) {
      indices[i] = offset / strides[i];
      offset -= indices[i] * strides[i];
    }
    indices[${r} - 1] = offset;
  }`});var un,Mr,Tv,$v,qf,Kf,Yf,Xf,Jf,Zf,Qf,ep=D(()=>{"use strict";pt();fo();Le();Ce();un=(r,e,n,t,o)=>{$v(e);let i={name:t,inputNames:["A"],inputTypes:[0]};return[r.run({...i,cacheHint:n.cacheKey,get:()=>Tv(r,e,n,t,o,i)},e)]},Mr=r=>{let e=r.attributes.getInts("axes",[]),n=r.attributes.getInt("keepdims",1)===1;return we({axes:e,keepDims:n})},Tv=(r,e,n,t,o,i)=>{let u=[],a=e[0].dims.length||1,s=[],l=te.normalizeAxes(n.axes,e[0].dims.length),c=o(e,l),p=c[1];for(let x=0;x<e[0].dims.length;x++)l.indexOf(x)>=0||l.length===0?(n.keepDims&&u.push(1),p=`
          for(int j${x} = 0; j${x} < ${e[0].dims[x]}; j${x}++) {
            inputIdx[${x}] = j${x};
            ${p}
          }`):(s.push(`inputIdx[${x}] = outputIdx[${u.length}];`),u.push(e[0].dims[x]));let g=`
      float process(int outputIdx[${u.length||1}]) {
        float value;                 // final result
        int inputIdx[${a}];      // addressing input data
        ${s.join(`
`)}
        ${c[0]}       // init ops for reduce max/min
        ${p}
        ${c[2]}       // final computation for reduce mean
        return value;
      }`;return{...i,output:{dims:u,type:e[0].type,textureType:0},shaderSource:g}},$v=r=>{if(!r||r.length!==1)throw new Error("Reduce op requires 1 input.");if(Br.indexOf(r[0].type)===-1)throw new Error("Invalid input type.")},qf=(r,e,n)=>un(r,e,n,"ReduceSum",()=>["value = 0.0;","value += _A(inputIdx);",""]),Kf=(r,e,n)=>un(r,e,n,"ReduceMean",(o,i)=>{let u=1;for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&(u*=o[0].dims[a]);return["value = 0.0;","value += _A(inputIdx);",`value /= ${u}.;`]}),Yf=(r,e,n)=>un(r,e,n,"ReduceMax",(o,i)=>{let u=[];for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&u.push(`inputIdx[${a}] = 0;`);return[`${u.join(`
`)}
value = _A(inputIdx);`,"value = max(value, _A(inputIdx));",""]}),Xf=(r,e,n)=>un(r,e,n,"ReduceMin",(o,i)=>{let u=[];for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&u.push(`inputIdx[${a}] = 0;`);return[`${u.join(`
`)}
value = _A(inputIdx);`,"value = min(value, _A(inputIdx));",""]}),Jf=(r,e,n)=>un(r,e,n,"ReduceProd",()=>["value = 1.0;","value *= _A(inputIdx);",""]),Zf=(r,e,n)=>un(r,e,n,"ReduceLogSum",()=>["value = 0.0;","value += _A(inputIdx);","value = log(value);"]),Qf=(r,e,n)=>un(r,e,n,"ReduceLogSumSquare",()=>["float t; value = 0.0;","t = _A(inputIdx); value += t * t;",""])});var tp,rp=D(()=>{"use strict";Le();tp=(r,e)=>{let n=te.calculateReshapedDims(e[0].dims,e[1].integerData);return r.session.pack?[r.reshapePacked(e[0],n)]:[r.reshapeUnpacked(e[0],n)]}});var np,ds,op,ip,po,Sv,fs,vi,ps=D(()=>{"use strict";pt();Xe();Ce();np={name:"Upsample",inputNames:["X"],inputTypes:[0]},ds=(r,e,n)=>(fs(e,n),[r.run({...np,cacheHint:n.cacheKey,get:()=>Sv(r,e,n)},e)]),op=r=>po(r,7),ip=r=>po(r,9),po=(r,e)=>{let n=e>=10,t=r.attributes.getString("mode","nearest");if(t!=="nearest"&&t!=="linear"&&(e<11||t!=="cubic"))throw new Error(`unrecognized mode: ${t}`);let o=[];e<9&&(o=r.attributes.getFloats("scales"),vi(o,t,n));let i=r.attributes.getFloat("extrapolation_value",0),u=e>10?r.attributes.getString("coordinate_transformation_mode","half_pixel"):"asymmetric";if(["asymmetric","pytorch_half_pixel","tf_half_pixel_for_nn","align_corners","tf_crop_and_resize","half_pixel"].indexOf(u)===-1)throw new Error(`coordinate_transform_mode '${u}' is not supported`);let a=u==="tf_crop_and_resize",s=a,l=t==="nearest"&&e>=11?r.attributes.getString("nearest_mode","round_prefer_floor"):"";if(["round_prefer_floor","round_prefer_ceil","floor","ceil",""].indexOf(l)===-1)throw new Error(`nearest_mode '${l}' is not supported`);let c=r.attributes.getFloat("cubic_coeff_a",-.75),p=r.attributes.getInt("exclude_outside",0)!==0;if(p&&t!=="cubic")throw new Error("exclude_outside can be set to 1 only when mode is CUBIC.");let h=e<11?!0:t==="nearest"&&u==="asymmetric"&&l==="floor",g=0,x=0,b=0;return e>10?r.inputs.length>2?(g=1,x=2,b=3):(x=1,b=2):e===9&&(x=1),we({opset:e,isResize:n,mode:t,scales:o,extrapolationValue:i,coordinateTransformMode:u,useExtrapolation:s,needRoiInput:a,nearestMode:l,cubicCoefficientA:c,excludeOutside:p,useNearest2xOptimization:h,roiInputIdx:g,scalesInputIdx:x,sizesInputIdx:b})},Sv=(r,e,n)=>{let t=ae(r.session.backend.glContext.version),[o,i]=r.calculateTextureWidthAndHeight(e[0].dims,0),u=e[0].dims.map((b,w)=>Math.floor(b*n.scales[w])),[a,s]=r.calculateTextureWidthAndHeight(u,0),l=u.length,c=new Array(l),p=new Array(l),h=`
      int output_pitches[${l}];
      int input_pitches[${l}];
      `;for(let b=l-1;b>=0;b--)c[b]=b===l-1?1:c[b+1]*u[b+1],p[b]=b===l-1?1:p[b+1]*e[0].dims[b+1],h+=`
        output_pitches[${b}] = ${c[b]};
        input_pitches[${b}] = ${p[b]};
        `;let g=`
      float getInputFloat(int index) {
        vec2 coords = offsetToCoords(index, ${o}, ${i});
        float value = getColorAsFloat(${t.texture2D}(X, coords));
        return value;
      }
      `,x=n.mode==="nearest"?`
    ${g}
    float process(int indices[${l}]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${s});

      ${h}

      int d, m;
      for (int dim = 0; dim < ${l}; ++dim) {
        d = output_index / output_pitches[dim];
        m = output_index - d * output_pitches[dim];
        output_index = m;

        if (scales[dim] != 1 && d > 0) {
          int d2 = d / scales[dim];
          m = d - d2 * scales[dim];
          d = d2;
        }
        input_index += input_pitches[dim] * d;
      }

      return getInputFloat(input_index);
    }`:l===4?`
    ${g}
    float process(int indices[4]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${s});

      ${h}

      int m;
      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m / output_pitches[1];
      m = m - index_of_dim1 * output_pitches[1];
      index_of_dim2 = m / output_pitches[2];
      m = m - index_of_dim2 * output_pitches[2];
      index_of_dim3 = m;

      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;
      index_of_input_dim2 = index_of_dim2 / scales[2];
      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];
      index_of_input_dim3 = index_of_dim3 / scales[3];
      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];

      input_index = index_of_dim0 * input_pitches[0] +
            index_of_dim1 * input_pitches[1] +
            index_of_input_dim2 * input_pitches[2] +
            index_of_input_dim3;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim2 = false;
      if (index_of_input_dim2 == (${e[0].dims[2]} - 1)) {
        // It's the end in dimension 2
        x01 = x00;
        end_of_dim2 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[2]);
      }

      if (index_of_input_dim3 == (input_pitches[2] - 1)) {
        // It's the end in dimension 3
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);
    }`:`
    ${g}
    float process(int indices[2]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${s});

      ${h}

      int m;
      int index_of_dim0, index_of_dim1;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m;

      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;
      index_of_input_dim0 = index_of_dim0 / scales[0];
      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];
      index_of_input_dim1 = index_of_dim1 / scales[1];
      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];

      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim0 = false;
      if (index_of_input_dim0 == (${e[0].dims[0]} - 1)) {
        // It's the end in dimension 0
        x01 = x00;
        end_of_dim0 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[0]);
      }

      if (index_of_input_dim1 == (input_pitches[0] - 1)) {
        // It's the end in dimension 1
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);
    }`;return{...np,output:{dims:u,type:e[0].type,textureType:0},shaderSource:x,variables:[{name:"scales",type:"int",arrayLength:n.scales.length,data:n.scales.map(b=>Math.ceil(b))}]}},fs=(r,e)=>{if(!r||e.opset<9&&r.length!==1||e.opset>=9&&e.opset<11&&r.length!==2||e.opset>=11&&r.length<2)throw new Error("invalid inputs.");if(e.scales.length>0&&r[0].dims.length!==e.scales.length)throw new Error("Invalid input shape.");if(r[0].type==="string")throw new Error("Invalid input tensor types.")},vi=(r,e,n)=>{if(n){for(let t of r)if(t<=0)throw new Error("Scale value should be greater than 0.")}else for(let t of r)if(t<1)throw new Error("Scale value should be greater than or equal to 1.");if((e==="linear"||e==="cubic")&&r.length!==2&&(r.length!==4||r[0]!==1||r[1]!==1))throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic')         or 4-D inputs with the corresponding outermost 2 scale values being 1         in the ${n?"Resize":"Upsample"} opeartor.`)}});var hs,ms,ap,sp,Iv,_v,Av,Ov,up=D(()=>{"use strict";Xe();Ce();or();on();ps();hs={name:"Resize",inputNames:["A"],inputTypes:[2]},ms=(r,e,n)=>(fs(e,n),[r.run({...hs,cacheHint:n.cacheKey,get:()=>Iv(r,e,n)},e)]),ap=r=>po(r,10),sp=r=>po(r,11),Iv=(r,e,n)=>{let t=ae(r.session.backend.glContext.version),[o,i]=_v(e,n);if(o.every(E=>E===1)&&n.coordinateTransformMode!=="tf_crop_and_resize")return{...hs,output:{dims:i,type:e[0].type,textureType:2},hasMain:!0,shaderSource:`void main() {
                    vec4 v = ${t.texture2D}(X, TexCoords);
                    ${t.output} = v;
                }`};let a=i.length;if(a<2)throw new Error(`output dimension should be at least 2, but got ${a}`);let s=i[a-2],l=i[a-1],c=e[0].dims;if(a!==c.length)throw new Error(`output dimension should match input ${c.length}, but got ${a}`);let p=c[a-2],h=c[a-1],g=o[a-2],x=o[a-1],b="";if(n.mode!=="linear")throw new Error(`resize (packed) does not support mode: '${n.mode}'`);switch(n.coordinateTransformMode){case"asymmetric":b=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return vec4(coords) / scaleWHWH;
                    }
                `;break;case"half_pixel":b=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;
                    }
                `;break;case"pytorch_half_pixel":b=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 fcoords = vec4(coords);
                        return vec4(
                            ${l}.0 > 1.0 ? (fcoords.x + 0.5) / scaleWHWH.x - 0.5 : 0.0,
                            ${s}.0 > 1.0 ? (fcoords.y + 0.5) / scaleWHWH.y - 0.5 : 0.0,
                            ${l}.0 > 1.0 ? (fcoords.z + 0.5) / scaleWHWH.z - 0.5 : 0.0,
                            ${s}.0 > 1.0 ? (fcoords.w + 0.5) / scaleWHWH.w - 0.5 : 0.0
                          );
                    }
                `;break;case"align_corners":b=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 resized = vec4(${l}.0 - 1.0, ${s}.0 - 1.0, ${l}.0 - 1.0,
                            ${s}.0 - 1.0);
                        vec4 original = vec4(${h}.0 - 1.0, ${p}.0 - 1.0, ${h}.0 - 1.0,
                            ${p}.0 - 1.0);
                        vec4 new_scale = original / resized;
                        return vec4(coords) * new_scale;
                    }
                `;break;default:throw new Error(`resize (packed) does not support coordinateTransformMode:                                 '${n.coordinateTransformMode}'`)}let w=$t(a),S=ir(),O=`
            const vec2 inputWH = vec2(${p}.0, ${h}.0);
            const vec4 scaleWHWH = vec4(float(${g}), float(${x}), float(${g}), float(${x}));
            ${S}
            ${b}
            float getAValue(int x10, int r, int c, int d) {
                return getChannel(getA(x10, r, c, d), vec2(c, d));
            }
            void main() {
                ${w} rc = getOutputCoords();

                int batch = rc[0];
                int depth = rc[1];

                // retrieve the 4 coordinates that is used in the 4 packed output values.
                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);

                // calculate the source index in fraction
                vec4 sourceFrac = getSourceFracIndex(coords);

                // get the lower and upper bound of the 4 values that will be packed into one texel.
                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));
                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));
                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));
                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));

                bool hasNextRow = rc.w < ${s-1};
                bool hasNextCol = rc.z < ${l-1};

                // pack x00, x01, x10, x11's top-left corner into one vec4 structure
                vec4 topLeft = vec4(
                    getAValue(batch, depth, x00.x, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);

                // pack x00, x01, x10, x11's top-right corner into one vec4 structure
                vec4 topRight = vec4(
                    getAValue(batch, depth, x00.x, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);

                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure
                vec4 bottomLeft = vec4(
                    getAValue(batch, depth, x00.z, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);

                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure
                vec4 bottomRight = vec4(
                    getAValue(batch, depth, x00.z, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);

                // calculate the interpolation fraction on u and v direction
                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);
                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));

                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);
                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);
                vec4 newValue = mix(top, bottom, clampFrac.xxzz);

                ${t.output} = vec4(newValue);
            }
        `;return{...hs,output:{dims:i,type:e[0].type,textureType:2},hasMain:!0,shaderSource:O}},_v=(r,e)=>{let t=r[0].dims,o=e.scales,i;if(o.length===0){let a=r[e.scalesInputIdx];if(a&&a.size!==0){if(r[e.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");o=Av(a,e.mode,e.isResize)}else{let s=r[e.sizesInputIdx];if(!s||s.size===0)throw new Error("Either scales or sizes MUST be provided as input.");i=Array.from(s.integerData),o=Ov(i,t,e.mode,e.isResize)}}else if(r[e.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");let u=i||t.map((a,s)=>Math.floor(a*o[s]));return[o,u]},Av=(r,e,n)=>{let t=Array.from(r.floatData);return vi(t,e,n),t},Ov=(r,e,n,t)=>{let o=e.length,i=new Array(o);for(let u=0,a=o;u<a;u++)if(e[u]===0){if(r[u]!==0)throw new Error("Input dim is zero but required output dim is non-zero.");i[u]=1}else i[u]=r[u]/e[u];return vi(i,n,t),i}});var lp,Ev,cp=D(()=>{"use strict";nn();lp=(r,e)=>(Ev(e),[new st([e[0].dims.length],"int32",void 0,void 0,new Int32Array(e[0].dims))]),Ev=r=>{if(!r||r.length!==1)throw new Error("Shape requires 1 input.")}});var gs,dp,fp,pp,Cv,hp,Pv,Dv,mp=D(()=>{"use strict";pt();fo();Le();Ce();gs={name:"Slice",inputNames:["A"],inputTypes:[0]},dp=(r,e,n)=>(Cv(e),[r.run({...gs,cacheHint:n.cacheKey,get:()=>pp(r,e[0],n)},e)]),fp=r=>{let e=r.attributes.getInts("starts"),n=r.attributes.getInts("ends"),t=r.attributes.getInts("axes",[]);return we({starts:e,ends:n,axes:t})},pp=(r,e,n)=>{let t=n.axes.length===0?e.dims.slice(0).map((p,h)=>h):n.axes,o=te.normalizeAxes(t,e.dims.length),i=n.starts.map((p,h)=>p>e.dims[o[h]]-1?e.dims[o[h]]:te.normalizeAxis(p,e.dims[o[h]])),u=n.ends.map((p,h)=>p>e.dims[o[h]]-1?e.dims[o[h]]:te.normalizeAxis(p,e.dims[o[h]])),a=e.dims.slice(),s=[];for(let p=0;p<o.length;p++)a[o[p]]=u[p]-i[p],i[p]>0&&s.push(`outputIdx[${o[p]}] += ${i[p]};`);let c=`
      float process(int outputIdx[${a.length}]) {
        ${s.join(`
      `)}
        return _A(outputIdx);
      }`;return{...gs,output:{dims:a,type:e.type,textureType:0},shaderSource:c}},Cv=r=>{if(!r||r.length!==1)throw new Error("Slice requires 1 input.");if(Br.indexOf(r[0].type)===-1)throw new Error("Invalid input type.")},hp=(r,e)=>{Dv(e);let n=Pv(r,e);return[r.run({...gs,cacheHint:n.cacheKey,get:()=>pp(r,e[0],n)},[e[0]])]},Pv=(r,e)=>{if(!r.session.isInitializer(e[1].dataId)||!r.session.isInitializer(e[2].dataId)||e.length>=4&&!r.session.isInitializer(e[3].dataId)||e.length>=5&&!r.session.isInitializer(e[4].dataId))throw new Error("dynamic slice attributes are not allowed");if(e.length>=5&&e[4].integerData.some(u=>u!==1))throw new Error("currently non-1 steps is not supported for Slice");let n=Array.from(e[1].integerData),t=Array.from(e[2].integerData),o=e.length>=4?Array.from(e[3].integerData):[],i=`${o};${n};${t}`;return{starts:n,ends:t,axes:o,cacheKey:i}},Dv=r=>{if(!r||r.length<3||r.length>5)throw new Error("Invalid input number.");if(r[1].type!=="int32"||r[1].dims.length!==1)throw new Error("Invalid input type.");if(r[2].type!=="int32"||r[2].dims.length!==1)throw new Error("Invalid input type.");if(r.length>=4&&(r[3].type!=="int32"||r[3].dims.length!==1))throw new Error("Invalid input type.");if(r.length>=5&&(r[4].type!=="int32"||r[4].dims.length!==1))throw new Error("Invalid input type.")}});var gp,bp,yp,xp,vp,wp,Tp,$p,kv,Rv,Bv,Sp,Ip=D(()=>{"use strict";pt();Le();Xe();Ce();bi();gp={name:"SoftmaxComputeMax",inputNames:["A"],inputTypes:[0]},bp={name:"SoftmaxComputeScale",inputNames:["A","Max"],inputTypes:[0,0]},yp={name:"SoftMax",inputNames:["A","Max","Norm"],inputTypes:[0,0,0]},xp=(r,e,n)=>{Sp(e);let t=e[0].dims.slice(),o=te.normalizeAxis(n.axis,t.length),i=te.sizeToDimension(t,o),u=te.sizeFromDimension(t,o);return $p(r,e,n,i,u)},vp=r=>we({axis:r.attributes.getInt("axis",1)}),wp=r=>we({axis:r.attributes.getInt("axis",-1)}),Tp=(r,e,n)=>{Sp(e);let t=e[0].dims.slice(),o=te.normalizeAxis(n.axis,t.length),i=t.length,u=o!==i-1,a=[],s=[],l=[],c;u&&(s=Array.from({length:i}).map((x,b)=>b),s[o]=i-1,s[i-1]=o,s.map(x=>a.push(t[x])),c=we({perm:s}),l=sn(r,e,c));let p=u?te.sizeToDimension(a,i-1):te.sizeToDimension(t,i-1),h=u?te.sizeFromDimension(a,i-1):te.sizeFromDimension(t,i-1),g=$p(r,u?l:e,n,p,h);return u?sn(r,g,c):g},$p=(r,e,n,t,o)=>{let i=kv(r,e[0],t,o,[t]),u=r.run({...gp,cacheHint:n.cacheKey,get:()=>i},e),a=Rv(r,e[0],t,o,i.output.dims,[t]),s=r.run({...bp,cacheHint:n.cacheKey,get:()=>a},[e[0],u]),l=Bv(r,e[0],t,o,i.output.dims,a.output.dims);return[r.run({...yp,cacheHint:n.cacheKey,get:()=>l},[e[0],u,s])]},kv=(r,e,n,t,o)=>{let[i,u]=r.calculateTextureWidthAndHeight(e.dims,0),a=o.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(o.length!==1)throw new Error("Dimensionality of the output should be 1");if(o[0]!==n)throw new Error("Shape of the output should be equal to logical row count");let s=ae(r.session.backend.glContext.version),l=`
      float process(int[${a}] indices) {
        int logical_row_start_offset = indices[0] * ${t};

        float max = getColorAsFloat(${s.texture2D}(A, offsetToCoords(logical_row_start_offset, ${i},
        ${u} )));
        for(int i=1; i<${t}; ++i)
        {
          float current = getColorAsFloat(${s.texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${i}, ${u})));
          if(current > max)
          max = current;
        }

        return max;
      }`;return{...gp,output:{dims:o,type:e.type,textureType:0},shaderSource:l}},Rv=(r,e,n,t,o,i)=>{let[u,a]=r.calculateTextureWidthAndHeight(e.dims,0),s=i.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(i.length!==1)throw new Error("Dimensionality of the output should be 1");if(i[0]!==n)throw new Error("Shape of the output should be equal to logical row count");if(o.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(o[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");let l=ae(r.session.backend.glContext.version),c=`
      float process(int[${s}] indices) {
        int logical_row_start_offset = indices[0] * ${t};

        float norm_factor = 0.0;
        float max = _Max(indices);
        for(int i=0; i<${t}; ++i)
        {
          norm_factor += exp(getColorAsFloat(${l.texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${u}, ${a}))) - max);
        }

        return norm_factor;
      }`;return{...bp,output:{dims:i,type:e.type,textureType:0},shaderSource:c}},Bv=(r,e,n,t,o,i)=>{let[u,a]=r.calculateTextureWidthAndHeight(e.dims,0),s=e.dims.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(o.length!==1||i.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(o[0]!==n||i[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");let l=`
      float process(int[${s}] indices) {

      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)
      int offset = coordsToOffset(TexCoords, ${u}, ${a});

      //determine the logical row for this index
      int logical_row_index[1];
      logical_row_index[0] = offset / ${t};

      float norm_factor = _Norm(logical_row_index);

      // avoid possible division by 0
      // if norm_facor is 0, all elements are zero
      // if so, return 0
      if(norm_factor == 0.0)
        return 0.0;

      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;
    }`;return{...yp,output:{dims:e.dims,type:e.type,textureType:0},shaderSource:l}},Sp=r=>{if(!r||r.length!==1)throw new Error("Softmax requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type")}});var _p,Ap,Op,Mv,Lv,Nv,Ep=D(()=>{"use strict";pt();Le();Ce();_p={name:"Split",inputNames:["A"],inputTypes:[0]},Ap=(r,e,n)=>{Nv(e);let t=te.normalizeAxis(n.axis,e[0].dims.length),o=Mv(r,e,t,n),i=[];for(let u=0;u<o;++u)i.push(r.run({..._p,cacheHint:`${n.cacheKey};${u}`,get:()=>Lv(r,e[0],n,t,u)},e));return i},Op=r=>{let e=r.attributes.getInt("axis",0),n=r.attributes.getInts("split",[]),t=r.outputs.length;return we({axis:e,split:n,numOutputs:t})},Mv=(r,e,n,t)=>{let[,o]=io.splitShape(e[0].dims,n,t.split,t.numOutputs);return o.length},Lv=(r,e,n,t,o)=>{let[i,u]=io.splitShape(e.dims,t,n.split,n.numOutputs),a=u[o],s=i[o],c=`
      float process(int indices[${s.length}]) {
        indices[${t}] += ${a};
        return _A(indices);
      }
    `;return{..._p,cacheHint:`${n.cacheKey}:${o}`,output:{dims:s,type:e.type,textureType:0},shaderSource:c}},Nv=r=>{if(!r||r.length!==1)throw new Error("Split requires one input.");if(r[0].type!=="int8"&&r[0].type!=="uint8"&&r[0].type!=="int16"&&r[0].type!=="uint16"&&r[0].type!=="int32"&&r[0].type!=="uint32"&&r[0].type!=="float32"&&r[0].type!=="float64"&&r[0].type!=="bool")throw new Error("Invalid input type.")}});var bs,Cp,Pp,zv,Fv,Dp=D(()=>{"use strict";Le();bs=(r,e,n)=>{zv(e);let t=te.squeezeShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},Cp=(r,e)=>(Fv(e),bs(r,[e[0]],Array.from(e[1].integerData))),Pp=r=>r.attributes.getInts("axes"),zv=r=>{if(!r||r.length!==1)throw new Error("Squeeze requires 1 input.");if(r[0].type==="string")throw new Error("invalid input tensor types.")},Fv=r=>{if(!r||r.length!==2)throw new Error("Squeeze requires 2 inputs.");if(r[1].type!=="int32")throw new Error("Invalid input type.")}});var kp,Gv,Wv,Rp=D(()=>{"use strict";Xe();Ce();kp=(r,e)=>{Wv(e);let n={name:"Sum",inputNames:e.map((o,i)=>`X${i}`),inputTypes:new Array(e.length).fill(0)};return[r.run({...n,get:()=>Gv(r,e,n)},e)]},Gv=(r,e,n)=>{let t=ae(r.session.backend.glContext.version),o=e[0].dims.slice(),u=`
      void main() {
        vec4 result = ${e.map((a,s)=>`${t.texture2D}(X${s},TexCoords)`).join(" + ")};
        ${t.output} = result;
      }
    `;return{...n,output:{dims:o,type:e[0].type,textureType:0},hasMain:!0,shaderSource:u}},Wv=r=>{if(!r||r.length===0)throw new Error("Sum requires inputs.");let e=r[0].dims.length;for(let n=1;n<r.length;n++){if(e!==r[n].dims.length)throw new Error("Input shapes are mismatched.");for(let t=0;t<e;t++)if(r[0].dims[t]!==r[n].dims[t])throw new Error("Input shapes are not matched.")}if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.");for(let n=1;n<r.length;n++)if(r[0].type!==r[n].type)throw new Error("Input types are not matched.")}});var Bp,Vv,Uv,Mp=D(()=>{"use strict";fo();Ce();Bp=(r,e)=>{Uv(e);let n={name:"Tile",inputNames:["A"],inputTypes:[0]};return[r.run({...n,get:()=>Vv(r,e,n)},e)]},Vv=(r,e,n)=>{let t=e[0].dims.slice(),o=new Array(t.length),i=[];for(let s=0;s<t.length;s++)o[s]=t[s]*e[1].numberData[s],i.push(`inputIdx[${s}] = int(mod(float(outputIdx[${s}]), ${t[s]}.));`);let u=o.length,a=`
      float process(int outputIdx[${u}]) {
        int inputIdx[${u}];
        ${i.join(`
`)}
        return _A(inputIdx);
      }
    `;return{...n,output:{dims:o,type:e[0].type,textureType:0},shaderSource:a}},Uv=r=>{if(!r||r.length!==2)throw new Error("Tile requires 2 input.");if(r[1].dims.length!==1)throw new Error("The second input shape must 1 dimension.");if(r[1].dims[0]!==r[0].dims.length)throw new Error("Invalid input shape.");if(Br.indexOf(r[0].type)===-1)throw new Error("Invalid input type.");if(r[1].type!=="int32"&&r[1].type!=="int16")throw new Error("Invalid repeat type.")}});var ys,Lp,Np,Hv,jv,zp=D(()=>{"use strict";Le();ys=(r,e,n)=>{Hv(e);let t=te.unsqueezeShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},Lp=(r,e)=>(jv(e),ys(r,[e[0]],Array.from(e[1].integerData))),Np=r=>r.attributes.getInts("axes"),Hv=r=>{if(!r||r.length!==1)throw new Error("Unsqueeze requires 1 input.");if(r[0].type==="string")throw new Error("invalid input tensor types.")},jv=r=>{if(!r||r.length!==2)throw new Error("Unsqueeze requires 2 inputs.");if(r[1].type!=="int32")throw new Error("Invalid input type.")}});var Fp,Gp=D(()=>{"use strict";Xc();ld();fd();yd();hi();tf();uf();df();hf();yf();wf();If();Ef();mi();kf();jf();ep();rp();up();cp();mp();Ip();Ep();Dp();Rp();Mp();bi();ts();zp();ps();Fp=[["Abs","","6+",xd],["Acos","","7+",vd],["Add","","7+",Jc],["And","","7+",Zc],["Asin","","7+",wd],["Atan","","7+",Td],["AveragePool","","7+",Bf,Mf],["BatchNormalization","","7+",Kc,Yc],["Cast","","6+",cd,dd],["Ceil","","6+",Id],["Clip","","6-10",Qa,$d],["Clip","","11+",Sd],["Concat","","4+",md,bd],["Conv","","1+",ss,us],["ConvTranspose","","1+",Qd,ef],["Cos","","7+",_d],["Div","","7+",Qc],["Dropout","","7+",es],["DepthToSpace","","1+",af,sf],["Equal","","7+",ed],["Elu","","6+",Ad,Od],["Exp","","6+",Ed],["Flatten","","1+",lf,cf],["Floor","","6+",Cd],["FusedConv","com.microsoft","1+",ss,us],["Gather","","1+",ff,pf],["Gemm","","7-10",ls,gf],["Gemm","","11+",ls,bf],["GlobalAveragePool","","1+",Nf,zf],["GlobalMaxPool","","1+",Uf],["Greater","","7+",td],["Identity","","1+",es],["ImageScaler","","1+",xf,vf],["InstanceNormalization","","6+",$f,Sf],["LeakyRelu","","6+",Pd,Dd],["Less","","7+",rd],["LRN","","1+",_f,Af],["Log","","6+",kd],["MatMul","","1+",jd,qd],["MaxPool","","1+",Ff,Gf],["Mul","","7+",nd],["Neg","","6+",Rd],["Not","","1+",Bd],["Or","","7+",od],["Pad","","2-10",cs,Cf],["Pad","","11+",Pf,Df],["Pow","","7+",id],["PRelu","","7+",ad],["ReduceLogSum","","1+",Zf,Mr],["ReduceMax","","1+",Yf,Mr],["ReduceMean","","1+",Kf,Mr],["ReduceMin","","1+",Xf,Mr],["ReduceProd","","1+",Jf,Mr],["ReduceSum","","1-12",qf,Mr],["ReduceSumSquare","","1+",Qf,Mr],["Relu","","6+",Md],["Reshape","","5+",tp],["Resize","","10",ms,ap],["Resize","","11+",ms,sp],["Shape","","1+",lp],["Sigmoid","","6+",Ld],["Sin","","7+",Nd],["Slice","","10+",hp],["Slice","","1-9",dp,fp],["Softmax","","1-12",xp,vp],["Softmax","","13+",Tp,wp],["Split","","2-12",Ap,Op],["Sqrt","","6+",zd],["Squeeze","","1-12",bs,Pp],["Squeeze","","13+",Cp],["Sub","","7+",sd],["Sum","","6+",kp],["Tan","","7+",Fd],["Tanh","","6+",Gd],["Tile","","6+",Bp],["Transpose","","1+",sn,nf],["Upsample","","7-8",ds,op],["Upsample","","9",ds,ip],["Unsqueeze","","1-12",ys,Np],["Unsqueeze","","13+",Lp],["Xor","","7+",ud]]});function Vp(r){let e={},n;for(;(n=Wp.exec(r))!==null;){let t=n[3].split(",").map(o=>{let i=o.trim().split(" ");return i&&i.length===2?{type:i[0],name:i[1]}:null}).filter(o=>o!==null);e[n[2]]={params:t,body:n[4]}}for(let t in e){let o=qv.replace("__FUNC__",t),i=new RegExp(o,"gm");for(;(n=i.exec(r))!==null;){let u=n[1],a=n[2],s=n[3].split(","),l=u?`${u} ${a};`:"",c=e[t].body,p="";e[t].params.forEach((g,x)=>{g&&(p+=`${g.type} ${g.name} = ${s[x]};
`)}),c=`${p}
 ${c}`,c=c.replace("return",`${a} = `);let h=`
      ${l}
      {
        ${c}
      }
      `;r=r.replace(n[0],h)}}return r=r.replace(Wp,""),r}var Wp,qv,Up=D(()=>{"use strict";Wp=/@inline[\s\n\r]+(\w+)[\s\n\r]+([0-9a-zA-Z_]+)\s*\(([^)]*)\)\s*{(([^}]|[\n\r])*)}/gm,qv="(\\w+)?\\s+([_0-9a-zA-Z]+)\\s+=\\s+__FUNC__\\((.*)\\)\\s*;"});function Cn(r,e){let n=[],t=[],o=e!=null&&Array.isArray(e)&&e.length===0,i=e==null||o?null:Kv(e,r).sort(),u=0;for(let a=0;a<r.length;++a){if(i!=null){if(i[u]===a&&r[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${r[a]}' is not 1`);(i[u]==null||i[u]>a)&&r[a]===1&&(n.push(r[a]),t.push(a)),i[u]<=a&&u++}r[a]!==1&&(n.push(r[a]),t.push(a))}return{newShape:n,keptDims:t}}function Kv(r,e){let n=e.length;return r=r==null?e.map((t,o)=>o):[].concat(r),Sn(r.every(t=>t>=-n&&t<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${r}`),Sn(r.every(Yv),()=>`All values in axis param must be integers but got axis ${r}`),r.map(t=>t<0?n+t:t)}function Yv(r){return r%1===0}function Xv(r){if(r.length===0)return 1;let e=r[0];for(let n=1;n<r.length;n++)e*=r[n];return e}function Hp(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}var wi,xs=D(()=>{"use strict";Bt();Le();wi=class{constructor(e){this.maxTextureSize=e}computeTextureWH(e,n){let t=this.computeTexture(e,n);return n&&n.isPacked&&(t[0]/=2,t[1]/=2),n&&n.reverseWH?[t[1],t[0]]:t}computeTexture(e,n){let t=n&&n.isPacked;if(e.length===0)return t?[2,2]:[1,1];let o=this.maxTextureSize;if(n&&n.breakAxis!==void 0){let a=n.breakAxis>=e.length?1:e.slice(n.breakAxis).reduce((l,c)=>l*c),s=n.breakAxis<=0?1:e.slice(0,n.breakAxis).reduce((l,c)=>l*c);if(a>o||s>o)ze.verbose("TextureLayout",`Given width/height preferences were unattainable: shape:${e}, breakAxis:${n.breakAxis}`);else return[a,s]}let i=e.slice(0);t&&(o=o*2,i=i.map((a,s)=>s>=i.length-2?i[s]%2===0?i[s]:i[s]+1:i[s]),i.length===1&&(i=[2,i[0]])),i.length!==2&&(i=Cn(i).newShape);let u=Xv(i);return i.length<=1&&u<=o?[1,u]:i.length===2&&i[0]<=o&&i[1]<=o?i:i.length===3&&i[0]*i[1]<=o&&i[2]<=o?[i[0]*i[1],i[2]]:i.length===3&&i[0]<=o&&i[1]*i[2]<=o?[i[0],i[1]*i[2]]:i.length===4&&i[0]*i[1]*i[2]<=o&&i[3]<=o?[i[0]*i[1]*i[2],i[3]]:i.length===4&&i[0]<=o&&i[1]*i[2]*i[3]<=o?[i[0],i[1]*i[2]*i[3]]:t?Hp(u/4).map(a=>a*2):Hp(u)}}});var Ti,jp=D(()=>{"use strict";Le();Sr();Xe();xs();or();Ti=class extends zt{constructor(n){super(n)}getFunctions(){return{...this.offsetToCoords(),...this.coordsToOffset(),...this.toVec(),...this.valueFrom(),...this.getCommonUtilFuncs(),...this.getInputsSamplingSnippets(),...this.getOutputSamplingSnippet()}}getCustomTypes(){return{}}offsetToCoords(){let n="offsetToCoords";return{offsetToCoords:new J(`
      vec2 ${n}(int offset, int width, int height) {
        int t = offset / width;
        int s = offset - t*width;
        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);
        return coords;
      }
      `)}}coordsToOffset(){let n="coordsToOffset";return{coordsToOffset:new J(`
      int ${n}(vec2 coords, int width, int height) {
        float s = coords.s * float(width);
        float t = coords.t * float(height);
        int offset = int(t) * width + int(s);
        return offset;
      }
      `)}}getOutputSamplingSnippet(){let n=this.context.outputTextureLayout;return n.isPacked?this.getPackedOutputSamplingSnippet(n):this.getUnpackedOutputSamplingSnippet(n)}getPackedOutputSamplingSnippet(n){let t=n.unpackedShape,o=[n.width,n.height],i={},u="getOutputCoords";switch(t.length){case 0:i[u]=this.getOutputScalarCoords();break;case 1:i[u]=this.getOutputPacked1DCoords(t,o);break;case 2:i[u]=this.getOutputPacked2DCoords(t,o);break;case 3:i[u]=this.getOutputPacked3DCoords(t,o);break;default:i[u]=this.getOutputPackedNDCoords(t,o)}let s=`
      void setOutput(vec4 val) {
        ${ae(this.context.glContext.version).output} = val;
      }
    `,l="floatTextureSetRGBA";return i[l]=new J(s),i}getUnpackedOutputSamplingSnippet(n){let t=n.unpackedShape,o=[n.width,n.height],i={},u="getOutputCoords";switch(t.length){case 0:i[u]=this.getOutputScalarCoords();break;case 1:i[u]=this.getOutputUnpacked1DCoords(t,o);break;case 2:i[u]=this.getOutputUnpacked2DCoords(t,o);break;case 3:i[u]=this.getOutputUnpacked3DCoords(t,o);break;case 4:i[u]=this.getOutputUnpacked4DCoords(t,o);break;case 5:i[u]=this.getOutputUnpacked5DCoords(t,o);break;case 6:i[u]=this.getOutputUnpacked6DCoords(t,o);break;default:throw new Error(`Unsupported output dimensionality: ${t.length}`)}let s=`
        void setOutput(float val) {
          ${ae(this.context.glContext.version).output} = vec4(val, 0, 0, 0);
        }
    `,l="floatTextureSetR";return i[l]=new J(s),i}getOutputScalarCoords(){return new J(`
      int getOutputCoords() {
        return 0;
      }
    `)}getOutputPacked1DCoords(n,t){let o=t,i="";return o[0]===1?(i=`
          int getOutputCoords() {
            return 2 * int(TexCoords.y * ${o[1]}.0);
          }
        `,new J(i)):o[1]===1?(i=`
          int getOutputCoords() {
            return 2 * int(TexCoords.x * ${o[0]}.0);
          }
        `,new J(i)):(i=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                 vec2(${o[0]}, ${o[1]}));
          return 2 * (resTexRC.y * ${o[0]} + resTexRC.x);
        }
      `,new J(i))}getOutputPacked2DCoords(n,t){let o="";if(Qr.arraysEqual(n,t))return o=`
        ivec2 getOutputCoords() {
          return 2 * ivec2(TexCoords.xy * vec2(${t[0]}, ${t[1]}));
        }
      `,new J(o);let i=t,u=Math.ceil(n[1]/2);return o=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${i[0]}, ${i[1]}));

          int index = resTexRC.y * ${i[0]} + resTexRC.x;

          // reverse r and c order for packed texture
          int r = imod(index, ${u}) * 2;
          int c = 2 * (index / ${u});

          return ivec2(r, c);
        }
      `,new J(o)}getOutputPacked3DCoords(n,t){let o=[t[0],t[1]],i=Math.ceil(n[2]/2),u=i*Math.ceil(n[1]/2),a=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${o[0]}, ${o[1]}));
          int index = resTexRC.y * ${o[0]} + resTexRC.x;

          int b = index / ${u};
          index -= b * ${u};

          // reverse r and c order for packed texture
          int r = imod(index, ${i}) * 2;
          int c = 2 * (index / ${i});

          return ivec3(b, r, c);
        }
      `;return new J(a)}getOutputPackedNDCoords(n,t){let o=[t[0],t[1]],i=Math.ceil(n[n.length-1]/2),u=i*Math.ceil(n[n.length-2]/2),a=u,s="",l="b, r, c";for(let p=2;p<n.length-1;p++)a*=n[n.length-p-1],s=`
      int b${p} = index / ${a};
      index -= b${p} * ${a};
    `+s,l=`b${p}, `+l;let c=`
      ivec${n.length} getOutputCoords() {
        ivec2 resTexRC = ivec2(TexCoords.xy *
                              vec2(${o[0]}, ${o[1]}));
        int index = resTexRC.y * ${o[0]} + resTexRC.x;

        ${s}

        int b = index / ${u};
        index -= b * ${u};

        // reverse r and c order for packed texture
        int r = imod(index, ${i}) * 2;
        int c = 2 * (index / ${i});

        return ivec${n.length}(${l});
      }
    `;return new J(c)}getOutputUnpacked1DCoords(n,t){let o=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          return resTexRC.y * ${t[0]} + resTexRC.x;
        }
      `;return new J(o)}getOutputUnpacked2DCoords(n,t){let o=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          int r = index / ${n[1]};
          int c = index - r * ${n[1]};
          return ivec2(r, c);
        }
      `;return new J(o)}getOutputUnpacked3DCoords(n,t){let o="",i=n.length,u=null;i<2&&(u=[]),u=new Array(i-1),u[i-2]=n[i-1];for(let l=i-3;l>=0;--l)u[l]=u[l+1]*n[l+1];let a=["r","c","d"],s=u.map((l,c)=>{let p=`int ${a[c]} = index / ${l}`,h=c===u.length-1?`int ${a[c+1]} = index - ${a[c]} * ${l}`:`index -= ${a[c]} * ${l}`;return`${p}; ${h};`}).join("");return o=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${s}
          return ivec3(r, c, d);
        }
      `,new J(o)}getOutputUnpacked4DCoords(n,t){let o="",i=n.length,u=null;i<2&&(u=[]),u=new Array(i-1),u[i-2]=n[i-1];for(let l=i-3;l>=0;--l)u[l]=u[l+1]*n[l+1];let a=["r","c","d","d2"],s=u.map((l,c)=>{let p=`int ${a[c]} = index / ${l}`,h=c===u.length-1?`int ${a[c+1]} = index - ${a[c]} * ${l}`:`index -= ${a[c]} * ${l}`;return`${p}; ${h};`}).join("");return o=`
      ivec4 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${s}
          return ivec4(r, c, d, d2);
        }
      `,new J(o)}getOutputUnpacked5DCoords(n,t){let o="",i=n.length,u=null;i<2&&(u=[]),u=new Array(i-1),u[i-2]=n[i-1];for(let l=i-3;l>=0;--l)u[l]=u[l+1]*n[l+1];let a=["r","c","d","d2","d3"],s=u.map((l,c)=>{let p=`int ${a[c]} = index / ${l}`,h=c===u.length-1?`int ${a[c+1]} = index - ${a[c]} * ${l}`:`index -= ${a[c]} * ${l}`;return`${p}; ${h};`}).join("");return o=`
      ivec5 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${s}
          return ivec5(r, c, d, d2, d3);
        }
      `,new J(o)}getOutputUnpacked6DCoords(n,t){let o="",i=n.length,u=null;i<2&&(u=[]),u=new Array(i-1),u[i-2]=n[i-1];for(let l=i-3;l>=0;--l)u[l]=u[l+1]*n[l+1];let a=["r","c","d","d2","d3","d4"],s=u.map((l,c)=>{let p=`int ${a[c]} = index / ${l}`,h=c===u.length-1?`int ${a[c+1]} = index - ${a[c]} * ${l}`:`index -= ${a[c]} * ${l}`;return`${p}; ${h};`}).join("");return o=`
     ivec6 getOutputCoords() {
         ivec2 resTexRC = ivec2(TexCoords.xy *
                               vec2(${t[0]}, ${t[1]}));
         int index = resTexRC.y * ${t[0]} + resTexRC.x;
         ${s}
         return ivec6(r, c, d, d2, d3, d4);
       }
     `,new J(o)}getCommonUtilFuncs(){let n={},t="uvFromFlat";n[t]=new J(`
    vec2 uvFromFlat(int texNumR, int texNumC, int index) {
      int texC = index / texNumR;
      int texR = index - texC * texNumR;
      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to
      //       v.
      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);
    }
    `),t="packedUVfrom1D",n[t]=new J(`
      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
        int texelIndex = index / 2;
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="packedUVfrom2D",n[t]=new J(`
      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {
        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="packedUVfrom3D",n[t]=new J(`
      vec2 packedUVfrom3D(int texNumR, int texNumC,
          int texelsInBatch, int texelsInLogicalRow, int b,
          int row, int col) {
        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = index / texNumC;
        int texC = index - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="sampleTexture";let o=ae(this.context.glContext.version);return n[t]=new J(`
        float sampleTexture(sampler2D textureSampler, vec2 uv) {
            return ${o.texture2D}(textureSampler, uv).r;
        }`),n}getInputsSamplingSnippets(){let n={},t=this.context.outputTextureLayout;return this.context.programInfo.inputNames.forEach((o,i)=>{let u=this.context.inputTextureLayouts[i],a=si(o);u.isPacked?n[a]=this.getPackedSamplerFromInput(a,o,u):n[a]=this.getUnpackedSamplerFromInput(a,o,u);let s=Dc(o);u.unpackedShape.length<=t.unpackedShape.length&&(u.isPacked?n[s]=this.getPackedSamplerAtOutputCoords(s,u,t,o):n[s]=this.getUnpackedSamplerAtOutputCoords(s,u,t,o))}),n}getPackedSamplerAtOutputCoords(n,t,o,i){let u=t.unpackedShape,a=o.unpackedShape,l=si(i),c=u.length,p=a.length,h=Tt.getBroadcastDims(u,a),g=$t(p),x=p-c,b,w=Yt();c===0?b="":p<2&&h.length>=1?b="coords = 0;":b=h.map(Q=>`coords.${w[Q+x]} = 0;`).join(`
`);let S="";p<2&&c>0?S="coords":S=u.map((Q,he)=>`coords.${w[he+x]}`).join(", ");let O="return outputValue;",B=te.size(u)===1,M=te.size(a)===1;if(c===1&&!B&&!M)O=`
        return vec4(outputValue.xy, outputValue.xy);
      `;else if(B&&!M)p===1?O=`
          return vec4(outputValue.x, outputValue.x, 0., 0.);
        `:O=`
          return vec4(outputValue.x);
        `;else if(h.length){let Q=c-2,he=c-1;h.indexOf(Q)>-1&&h.indexOf(he)>-1?O="return vec4(outputValue.x);":h.indexOf(Q)>-1?O="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":h.indexOf(he)>-1&&(O="return vec4(outputValue.xx, outputValue.zz);")}let W=`
        int lastDim = coords.${w[p-1]};
        coords.${w[p-1]} = coords.${w[p-2]};
        coords.${w[p-2]} = lastDim;
      `,Y=`
      vec4 ${n}() {
        ${g} coords = getOutputCoords();
        ${W}
        ${b}
        vec4 outputValue = ${l}(${S});
        ${O}
      }
    `;return new J(Y,["coordinates.getOutputCoords"])}getUnpackedSamplerAtOutputCoords(n,t,o,i){let u=[o.width,o.height],a=[t.width,t.height],s=t.unpackedShape.length,l=o.unpackedShape.length,c=t.unpackedShape,p=o.unpackedShape,h=si(i);if(s===l&&Qr.arraysEqual(a,u)){let B=`
          float ${n}() {
            return sampleTexture(${i}, TexCoords);
          }
        `;return new J(B,["coordinates.sampleTexture"])}let g=$t(l),x=Tt.getBroadcastDims(c,p),b=l-s,w,S=Yt();s===0?w="":l<2&&x.length>=1?w="coords = 0;":w=x.map(B=>`coords.${S[B+b]} = 0;`).join(`
`);let O="";l<2&&s>0?O="coords":O=t.unpackedShape.map((B,z)=>`coords.${S[z+b]}`).join(", ");let E=`
        float ${n}() {
          ${g} coords = getOutputCoords();
          ${w}
          return ${h}(${O});
        }
      `;return new J(E,["coordinates.getOutputCoords"])}getPackedSamplerFromInput(n,t,o){switch(o.unpackedShape.length){case 0:return this.getPackedSamplerScalar(n,t);case 1:return this.getPackedSampler1D(n,t,o);case 2:return this.getPackedSampler2D(n,t,o);case 3:return this.getPackedSampler3D(n,t,o);default:return this.getPackedSamplerND(n,t,o)}}getUnpackedSamplerFromInput(n,t,o){let i=o.unpackedShape;switch(i.length){case 0:return this.getUnpackedSamplerScalar(n,t,o);case 1:return this.getUnpackedSampler1D(n,t,o);case 2:return this.getUnpackedSampler2D(n,t,o);case 3:return this.getUnpackedSampler3D(n,t,o);case 4:return this.getUnpackedSampler4D(n,t,o);case 5:return this.getUnpackedSampler5D(n,t,o);case 6:return this.getUnpackedSampler6D(n,t,o);default:throw new Error(`Unsupported dimension ${i.length}-D`)}}getPackedSamplerScalar(n,t){let o=ae(this.context.glContext.version),i=`
          vec4 ${n}() {
            return ${o.texture2D}(${t}, halfCR);
          }
        `;return new J(i)}getPackedSampler1D(n,t,o){let i=[o.width,o.height],u=[i[1],i[0]],a=ae(this.context.glContext.version),l=`vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
      ${u[0]}, ${u[1]}, index);
      return ${a.texture2D}(${t}, uv);
    }`;return new J(l,["coordinates.packedUVfrom1D"])}getPackedSampler2D(n,t,o){let i=o.unpackedShape,u=[o.width,o.height],a=ae(this.context.glContext.version),s=u[0],l=u[1];if(u!=null&&Qr.arraysEqual(i,u)){let x=`vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${s}.0);
        return ${a.texture2D}(${t}, uv);
      }`;return new J(x)}let c=u,p=Math.ceil(i[1]/2),g=`vec4 ${n}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c[1]}, ${c[0]}, ${p}, row, col);
      return ${a.texture2D}(${t}, uv);
    }`;return new J(g,["coordinates.packedUVfrom2D"])}getPackedSampler3D(n,t,o){let i=o.unpackedShape,u=[o.width,o.height],a=[u[0],u[1]],s=ae(this.context.glContext.version);if(i[0]===1){let b=i.slice(1),w=[1,2],S=In(i,b),O=["b","row","col"],E=JSON.parse(JSON.stringify(o));E.unpackedShape=S;let B=this.getPackedSamplerFromInput(n,t,E),M=`${B.routineBody}
      vec4 ${n}(int b, int row, int col) {
        return ${n}(${_n(O,w)});
      } `;return new J(M,B.dependencies)}let l=a[0],c=a[1],p=Math.ceil(i[2]/2),h=p*Math.ceil(i[1]/2),x=`vec4 ${n}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${c}, ${l}, ${h}, ${p}, b, row, col);
      return ${s.texture2D}(${t}, uv);}`;return new J(x,["coordinates.packedUVfrom3D"])}getPackedSamplerND(n,t,o){let i=o.unpackedShape,u=i.length,a=[o.width,o.height],s=ae(this.context.glContext.version),l=[a[0],a[1]],c=l[1],p=l[0],h=Math.ceil(i[u-1]/2),g=h*Math.ceil(i[u-2]/2),x="int b, int row, int col",b=`b * ${g} + (row / 2) * ${h} + (col / 2)`;for(let O=2;O<u-1;O++)x=`int b${O}, `+x,g*=i[u-O-1],b=`b${O} * ${g} + `+b;let S=`vec4 ${n}(${x}) {
      int index = ${b};
      int texR = index / ${p};
      int texC = index - texR * ${p};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${c});
      return ${s.texture2D}(${t}, uv);
    }`;return new J(S)}getUnpackedSamplerScalar(n,t,o){let[i,u]=[o.width,o.height];if(i===1&&u===1){let s=`
          float ${n}() {
            return sampleTexture(${t}, halfCR);
          }
        `;return new J(s,["coordinates.sampleTexture"])}let a=`
        float ${n}() {
          int offset_${t} = coordsToOffset(TexCoords, ${i}, ${u});
          vec2 uv = uvFromFlat(${i}, ${u}, offset_${t});
          return sampleTexture(${t}, uv);
        }
      `;return new J(a,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler1D(n,t,o){let i=o.width,u=o.height;if(u===1&&i===1){let s=`
        float ${n}(int index) {
          return sampleTexture(${t}, halfCR);
        }
      `;return new J(s,["coordinates.sampleTexture"])}if(u===1){let s=`
          float ${n}(int index) {
            vec2 uv = vec2((float(index) + 0.5) / ${i}.0, 0.5);
            return sampleTexture(${t}, uv);
          }
        `;return new J(s,["coordinates.sampleTexture"])}if(i===1){let s=`
          float ${n}(int index) {
            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${u}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new J(s,["coordinates.sampleTexture"])}let a=`
        float ${n}(int index) {
          vec2 uv = uvFromFlat(${i}, ${u}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new J(a,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler2D(n,t,o){let i=o.unpackedShape,u=[o.height,o.width];if(u!=null&&Qr.arraysEqual(i,u)){let g=u[1],x=u[0],b=`
          float ${n}(int row, int col) {
            vec2 uv = (vec2(row, col) + halfCR) / vec2(${g}.0, ${x}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new J(b,["coordinates.sampleTexture"])}let{newShape:a,keptDims:s}=Cn(i),l=a;if(l.length<i.length){let g=In(i,l),x=JSON.parse(JSON.stringify(o));x.unpackedShape=g;let b=["col","row"],w=`
          ${this.getUnpackedSamplerFromInput(n,t,x).routineBody}
          float ${n}(int row, int col) {
            return ${n}(${_n(b,s)});
          }
        `;return new J(w,["coordinates.sampleTexture"])}let c=u[1],p=u[0];if(p===1){let g=`
          float ${n}(int row, int col) {
            int offset_${t} = coordsToOffset(TexCoords, ${c}, ${p});
            float index = dot(vec3(row, col, offset_${t}), vec3(${i[1]}, 1, 1));
            vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new J(g,["coordinates.sampleTexture","coordinates.coordsToOffset"])}if(c===1){let g=`
          float ${n}(int row, int col) {
            int offset_${t} = coordsToOffset(TexCoords, ${c}, ${p});
            float index = dot(vec3(row, col, offset_${t}), vec3(${i[1]}, 1, 1));
            vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);
            return sampleTexture(${t}, uv);
          }
        `;return new J(g,["coordinates.sampleTexture","coordinates.coordsToOffset"])}let h=`
        float ${n}(int row, int col) {
          int index = col * ${i[1]} + row;
          vec2 uv = uvFromFlat(${c}, ${p}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new J(h,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler3D(n,t,o){let i=o.unpackedShape,u=i[1]*i[2],a=i[2],{newShape:s,keptDims:l}=Cn(i),c=s;if(c.length<i.length){let x=In(i,c),b=["batch","col","row"],w=JSON.parse(JSON.stringify(o));w.unpackedShape=x;let S=this.getUnpackedSamplerFromInput(n,t,w),O=l.reverse(),E=`
          ${S.routineBody}
          float ${n}(int batch, int row, int col) {
            return ${n}(${_n(b,O)});
          }
        `;return new J(E,S.dependencies)}let p=o.width,h=o.height,g=`
          float ${n}(int depth, int row, int col) {
            // Explicitly use integer operations as dot() only works on floats.
            int index = depth * ${u} + col * ${a} + row;
            vec2 uv = uvFromFlat(${p}, ${h}, index);
            return sampleTexture(${t}, uv);
          }
      `;return new J(g,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler4D(n,t,o){let i=o.unpackedShape,u=i[3],a=i[2]*u,s=i[1]*a,l=o.width,c=o.height,p=`
        float ${n}(int row, int col, int depth, int depth2) {
          int index = row * ${s} + col * ${a} +
              depth2 * ${u} + depth;
          vec2 uv = uvFromFlat(${l}, ${c}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new J(p,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler5D(n,t,o){let i=o.unpackedShape,u=i[4],a=i[3]*u,s=i[2]*a,l=i[1]*s,{newShape:c,keptDims:p}=Cn(i);if(c.length<i.length){let b=In(i,c),w=["row","col","depth","depth2","depth3"],S=JSON.parse(JSON.stringify(o));S.unpackedShape=b;let O=`
          ${this.getUnpackedSamplerFromInput(n,t,S).routineBody}
          float ${n}(int row, int col, int depth, int depth2, int depth3) {
            return ${n}(${_n(w,p)});
          }
        `;return new J(O,["coordinates.sampleTexture","coordinates.uvFromFlat"])}let h=o.width,g=o.height,x=`
        float ${n}(int row, int col, int depth, int depth2, int depth3) {
          int index = row * ${l} + col * ${s} + depth * ${a} +
          depth3 * ${u} + depth2;
          vec2 uv = uvFromFlat(${h}, ${g}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new J(x,["coordinates.sampleTexture","coordinates.uvFromFlat"])}getUnpackedSampler6D(n,t,o){let i=o.unpackedShape,u=i[5],a=i[4]*u,s=i[3]*a,l=i[2]*s,c=i[1]*l,{newShape:p,keptDims:h}=Cn(i);if(p.length<i.length){let w=In(i,p),S=["row","col","depth","depth2","depth3","depth4"],O=JSON.parse(JSON.stringify(o));O.unpackedShape=w;let E=`
            ${this.getUnpackedSamplerFromInput(n,t,O).routineBody}
            float ${n}(int row, int col, int depth,
              int depth2, int depth3, int depth4) {
              return ${n}(${_n(S,h)});
            }
          `;return new J(E,["coordinates.sampleTexture","coordinates.uvFromFlat"])}let g=o.width,x=o.height,b=`
          float ${n}(int row, int col, int depth,
            int depth2, int depth3, int depth4) {
            int index = row * ${c} + col * ${l} + depth * ${s} +
            depth2 * ${a} + depth3 * ${u} + depth4;
            vec2 uv = uvFromFlat(${g}, ${x}, index);
            return sampleTexture(${t}, uv);
          }
        `;return new J(b,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}toVec(){let n=this.context.outputTextureLayout,t=n.shape.length,o=n.strides,i=n.width,u=n.height,a=[];for(let l=0;l<t-1;++l)a.push(`
        c[${l}] = offset / ${o[l]};`),a.push(`
        offset -= c[${l}] * ${o[l]};`);a.push(`
        c[${t-1}] = offset;`);let s=`
      void toVec(vec2 texCoords, out int c[${t}]) {
        int offset = coordsToOffset(texCoords, ${i}, ${u});
        ${a.join("")}
      }
      void toVec(int offset, out int c[${t}]) {
        ${a.join("")}
      }
    `;return{toVec:new J(s,["coordinates.coordsToOffset"])}}valueFrom(){let n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o],a=(i.unpackedShape.length>0?i.unpackedShape:i.shape).length,s=`_${t}`;n[s]=new J(this.getValueFromSingle(t,a,i.width,i.height,!1),[`shapeUtils.indicesToOffset${s}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"]),s=s+"_T",n[s]=new J(this.getValueFromSingle(t,a,i.width,i.height,!0),[`shapeUtils.indicesToOffset${s}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"])}),n}getValueFromSingle(n,t,o,i,u){let a=`_${n}`;u&&(a=a+"_T");let s=ae(this.context.glContext.version);return`
        float ${a}(int m[${t}]) {
          int offset = indicesToOffset${a}(m);
          vec2 coords = offsetToCoords(offset, ${o}, ${i});
          float value = getColorAsFloat(${s.texture2D}(${n}, coords));
          return value;
        }
        `}getPackedValueFrom(n,t,o,i,u){let a=`_${n}_Pack`;u&&(a=a+"_T");let s=ae(this.context.glContext.version);return`
        vec4 ${a}(int m[${t}]) {
          int offset = indicesToOffset_${n}(m);
          vec2 coords = offsetToCoords(offset, ${o}, ${i});
          return ${s.texture2D}(${n}, coords);
        }
        `}}});var $i,qp=D(()=>{"use strict";Sr();$i=class r extends zt{constructor(e){super(e)}getFunctions(){return{...this.encodeFloat32(),...this.decodeFloat32()}}getCustomTypes(){return{}}encodeFloat32(){return{encode:new J(`highp vec4 encode(highp float f) {
        return vec4(f, 0.0, 0.0, 0.0);
      }
        `)}}decodeFloat32(){return{decode:new J(`highp float decode(highp vec4 rgba) {
        return rgba.r;
      }
        `)}}encodeUint8(){let e=r.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{encode:new J(`
      highp vec4 encode(highp float f) {
        highp float F = abs(f);
        highp float Sign = step(0.0,-f);
        highp float Exponent = floor(log2(F));
        highp float Mantissa = (exp2(- Exponent) * F);
        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));
        highp vec4 rgba;
        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));
        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);
        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));
        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));
        ${e}
        rgba = rgba / 255.0; // values need to be normalized to [0,1]
        return rgba;
    }
        `)}}decodeUint8(){let e=r.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{decode:new J(`
        highp float decode(highp vec4 rgba) {
          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]
          ${e}
          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;
          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;
          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);
          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));
          return Result;
      }
        `)}}static isLittleEndian(){let e=new ArrayBuffer(4),n=new Uint32Array(e),t=new Uint8Array(e);if(n[0]=3735928559,t[0]===239)return!0;if(t[0]===222)return!1;throw new Error("unknown endianness")}}});var Si,Kp=D(()=>{"use strict";Sr();Xe();Si=class extends zt{constructor(e){super(e)}getFunctions(){return{...this.setFragColor(),...this.getColorAsFloat()}}getCustomTypes(){return{}}setFragColor(){let e=ae(this.context.glContext.version);return{setFragColor:new J(`
        void setFragColor(float value) {
            ${e.output} = encode(value);
        }
        `,["encoding.encode"])}}getColorAsFloat(){return{getColorAsFloat:new J(`
        float getColorAsFloat(vec4 color) {
            return decode(color);
        }
        `,["encoding.decode"])}}}});var Ii,Yp=D(()=>{"use strict";Sr();Ii=class r extends zt{constructor(e){super(e)}getFunctions(){return{...this.bcastIndex(),...this.bcastMatmulIndex(),...this.offsetToIndices(),...this.indicesToOffset(),...this.incrementIndices()}}getCustomTypes(){return{}}bcastIndex(){let e=this.context.outputTextureLayout.shape.length,n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o].unpackedShape;if(i.length<=e){let u=i.length,a=e-u,s=`bcastIndices_${t}`,l="";for(let p=0;p<u;++p)l+=`
          realIndices[${p}] = int( mod(float(bcastedIndices[${a+p}]), ${i[p]}.0) );
          `;let c=`
        void ${s} (int bcastedIndices[${e}], out int realIndices[${u}]) {
          ${l}
        }
        `;n[s]=new J(c)}}),n}bcastMatmulIndex(){let e=this.context.outputTextureLayout.shape.length,n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o].shape;if(!(i.length<2||i.length>e)){let u=i.length,a=e-u,s=`bcastMatmulIndices_${t}`,l="";for(let p=0;p<u-2;++p)l+=`
          realIndices[${p}] = int( mod(float(bcastedIndices[${a+p}]), ${i[p]}.0) );
          `;let c=`
        void ${s}(int bcastedIndices[${e}], out int realIndices[${u}]) {
          ${l}
          realIndices[${u-1}] = bcastedIndices[${e-1}];
          realIndices[${u-2}] = bcastedIndices[${e-2}];
        }
        `;n[s]=new J(c)}}),n}indicesToOffset(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=this.context.inputTextureLayouts[t].strides,u=o.length,a=`indicesToOffset_${n}`;e[a]=new J(r.indexToOffsetSingle(a,u,i)),a=`indicesToOffset_${n}_T`,e[a]=new J(r.indexToOffsetSingle(a,u,i.slice().reverse()))}),e}static indexToOffsetSingle(e,n,t){let o="";for(let i=n-1;i>=0;--i)o+=`
        offset += indices[${i}] * ${t[i]};
        `;return`
      int ${e}(int indices[${n}]) {
        int offset = 0;
        ${o}
        return offset;
      }
      `}offsetToIndices(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=this.context.inputTextureLayouts[t].strides,u=o.length,a=`offsetToIndices_${n}`;e[a]=new J(r.offsetToIndicesSingle(a,u,i)),a=`offsetToIndices_${n}_T`,e[a]=new J(r.offsetToIndicesSingle(a,u,i.slice().reverse()))}),e}static offsetToIndicesSingle(e,n,t){let o=[];for(let i=0;i<n-1;++i)o.push(`
      indices[${i}] = offset / ${t[i]};`),o.push(`
        offset -= indices[${i}] * ${t[i]};`);return o.push(`
      indices[${n-1}] = offset;`),`
      void ${e}(int offset, out int indices[${n}]) {
        ${o.join("")}
      }
      `}incrementIndices(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=o.length,u=`incrementIndices_${n}`,a="";for(let l=0;l<i;++l)a+=`
        shape[${l}] = ${o[l]};`;let s=`
        void ${u}(int axis, out int indices[${i}]) {
          int shape[${i}];
          ${a};
          for(int i = ${i} -1 ; i >= 0; --i) {
            if(i > axis) continue;
            indices[i] += 1;
            if(indices[i] < shape[i]) {
              break;
            }
            indices[i] = 0;
          }
        }
        `;e[u]=new J(s)}),e}}});var _i,Xp=D(()=>{"use strict";Sr();_i=class extends zt{constructor(e){super(e)}getCustomTypes(){return{}}getFunctions(){return{...this.binaryVecFunctions(),...this.copyVec(),...this.setVecItem(),...this.getVecItem()}}binaryVecFunctions(){let n=this.context.outputTextureLayout.shape.length,t={add:"+=",sub:"-=",mul:"*=",div:"/="},o={};for(let i in t){let u=`${i}Vec`,a="";for(let l=0;l<n;++l)a+=`
          dest[${l}] ${t[i]} src[${l}];
          `;let s=`
        void ${u}(int src[${n}], out int dest[${n}]) {
          ${a}
        }
        `;o[u]=new J(s)}return o}copyVec(){let n=this.context.outputTextureLayout.shape.length,t="";for(let i=0;i<n;++i)t+=`
        dest[${i}] = src[${i}];
        `;let o=`
      void copyVec(int src[${n}], out int dest[${n}]) {
        ${t}
      }
      `;return{copyVec:new J(o)}}setVecItem(){let n=this.context.outputTextureLayout.shape.length,t=`
        if(index < 0)
            index =${n} + index;
        if (index == 0)
            m[0] = value;
        `;for(let i=1;i<n-1;++i)t+=`
        else if (index == ${i})
            m[${i}] = value;
            `;t+=`
        else
            m[${n-1}] = value;
        `;let o=`
      void setVecItem(out int m[${n}], int index, int value) {
        ${t}
      }
        `;return{setVecItem:new J(o)}}getVecItem(){let n=this.context.outputTextureLayout.shape.length,t=`
        if(index < 0)
            index = ${n} + index;
        if (index == 0)
            return m[0];
      `;for(let i=1;i<n-1;++i)t+=`
        else if (index == ${i})
            return m[${i}];
      `;t+=`
        else
            return m[${n-1}];
        `;let o=`
      int getVecItem(int m[${n}], int index) {
        ${t}
      }
    `;return{getVecItem:new J(o)}}}});var vs,Jp=D(()=>{"use strict";jp();qp();Kp();Yp();Xp();vs={encoding:$i,fragcolor:Si,vec:_i,shapeUtils:Ii,coordinates:Ti}});var Ai,Zp=D(()=>{"use strict";Sr();Up();Jp();Xe();Ai=class{constructor(e,n,t,o){this.libs={};this.glslLibRoutineDependencyGraph={};this.context=new di(e,n,t,o),Object.keys(vs).forEach(u=>{let a=new vs[u](this.context);this.libs[u]=a});let i=this.glslLibRoutineDependencyGraph;for(let u in this.libs){let s=this.libs[u].getFunctions();for(let l in s){let c=u+"."+l,p;i[c]?(p=i[c],p.routineBody=s[l].routineBody):(p=new co(c,s[l].routineBody),i[c]=p);let h=s[l].dependencies;if(h)for(let g=0;g<h.length;++g)if(i[h[g]])p.addDependency(i[h[g]]);else{let x=new co(h[g]);i[h[g]]=x,p.addDependency(x)}}}}preprocess(){let e=this.context.programInfo,n=e.shaderSource;return this.context.programInfo.hasMain||(n=`${n}
      ${Pc(this.context.glContext.version,this.context.outputTextureLayout.shape.length)}`),n=Vp(n),`${Cc(this.context.glContext.version)}
    ${this.getUniforms(e.inputNames,e.variables)}
    ${this.getImports(n)}
    ${n}`}getImports(e){let n=this.selectGlslLibRoutinesToBeIncluded(e);if(n.length===0)return"";let t="";for(let o=0;o<n.length;++o)if(n[o].routineBody)t+=n[o].routineBody+`
`;else throw new Error(`Missing body for the Glsl Library routine: ${n[o].name}`);return t}selectGlslLibRoutinesToBeIncluded(e){let n=[];return Object.keys(this.glslLibRoutineDependencyGraph).forEach(t=>{let o=t.split(".")[1];e.indexOf(o)!==-1&&n.push(this.glslLibRoutineDependencyGraph[t])}),fi.returnOrderedNodes(n)}getUniforms(e,n){let t=[];if(e)for(let o of e)t.push(`uniform sampler2D ${o};`);if(n)for(let o of n)t.push(`uniform ${o.type} ${o.name}${o.arrayLength?`[${o.arrayLength}]`:""};`);return t.join(`
`)}}});var Oi,Qp=D(()=>{"use strict";Rt();Bt();Zp();Xe();Oi=class{constructor(e,n,t){this.profiler=e;this.glContext=n;this.textureLayoutStrategy=t;this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,n){this.repo.set(e,n)}run(e,n,t){this.profiler.event("op",`ProgramManager.run ${e.programInfo.name??"unknown kernel"}`,()=>{let o=this.glContext.gl,i=e.program;o.useProgram(i);try{this.bindOutput(t),this.attributesBound||this.bindAttributes(e.attribLocations),this.bindUniforms(e.uniformLocations,e.programInfo.variables??[],n)}catch(u){throw ze.error("ProgramManager",e.programInfo.shaderSource),u}this.profiler.event("backend","GlContext.draw()",()=>{this.glContext.draw()})},this.glContext)}dispose(){this.vertexShader&&this.glContext.deleteShader(this.vertexShader),this.repo.forEach(e=>this.glContext.deleteProgram(e.program))}build(e,n,t){return this.profiler.event("backend","ProgramManager.build",()=>{let o=new Ai(this.glContext,e,n,t),i=o.preprocess(),u=this.compile(i);return{programInfo:e,program:u,uniformLocations:this.getUniformLocations(u,o.context.programInfo.inputNames,o.context.programInfo.variables),attribLocations:this.getAttribLocations(u)}})}compile(e){if(!this.vertexShader){ze.verbose("ProrgramManager","Compiling and caching Vertex shader for the first time");let o=Ec(this.glContext.version);this.vertexShader=this.glContext.compileShader(o,this.glContext.gl.VERTEX_SHADER)}ve.debug&&ze.verbose("ProrgramManager",`FragShader:
${e}
`);let n=this.glContext.compileShader(e,this.glContext.gl.FRAGMENT_SHADER),t=this.glContext.createProgram(this.vertexShader,n);return this.glContext.deleteShader(n),t}bindOutput(e){let n=e.width,t=e.height;ze.verbose("ProrgramManager",`Binding output texture to Framebuffer: w/h=${n}/${t}, shape=${e.shape}, type=${e.tensor.type}`),this.glContext.attachFramebuffer(e.texture,n,t)}bindAttributes(e){let n=e.position,t=e.textureCoord;this.glContext.setVertexAttributes(n,t),this.attributesBound=!0}bindUniforms(e,n,t){let o=this.glContext.gl,i=0;for(let{name:u,type:a,location:s,arrayLength:l}of e){let c=n.find(p=>p.name===u)?.data;if(a!=="sampler2D"&&!c)throw new Error(`variable '${u}' does not have data defined in program info`);switch(a){case"sampler2D":this.bindTexture(t[i],s,i),i++;break;case"float":l?o.uniform1fv(s,c):o.uniform1f(s,c);break;case"int":l?o.uniform1iv(s,c):o.uniform1i(s,c);break;default:throw new Error(`Uniform not implemented: ${a}`)}}}bindTexture(e,n,t){this.glContext.bindTextureToUniform(e.texture,t,n)}getAttribLocations(e){return{position:this.getAttribLocation(e,"position"),textureCoord:this.getAttribLocation(e,"textureCoord")}}getUniformLocations(e,n,t){let o=[];if(n)for(let i of n)o.push({name:i,type:"sampler2D",location:this.getUniformLocation(e,i)});if(t)for(let i of t)o.push({...i,location:this.getUniformLocation(e,i.name)});return o}getUniformLocation(e,n){let o=this.glContext.gl.getUniformLocation(e,n);if(o===null)throw new Error(`Uniform ${n} not found.`);return o}getAttribLocation(e,n){return this.glContext.gl.getAttribLocation(e,n)}}});var Ei,eh=D(()=>{"use strict";Bt();uo();Ei=class{constructor(e,n,t,o){this.glContext=e;this.layoutStrategy=n;this.profiler=t;this.config=o;this.pendingRead=new Map;o.reuseTextures&&(this.inUseTextures=new Map,this.idleTextures=new Map,this.textureLookup=new Map)}createTextureFromLayout(e,n,t,o){let i=this.toEncoderType(e),u=this.glContext.getEncoder(i,n.channels||1,o);if(n.isPacked&&o===1)throw new Error("not implemented");let a=n.width,s=n.height,l,c;if(this.config.reuseTextures){l=`${a}x${s}_${u.format}_${u.internalFormat}_${u.textureType}`,c=this.inUseTextures.get(l),c||(c=[],this.inUseTextures.set(l,c));let h=this.idleTextures.get(l);if(h&&h.length>0){let g=h.pop();return c.push(g),o===1&&this.glContext.updateTexture(g,a,s,u,this.toTextureData(e,t)),g}}ze.verbose("TextureManager",`Creating new texture of size ${n.width}x${n.height}`);let p=this.glContext.allocateTexture(a,s,u,this.toTextureData(e,t));return this.config.reuseTextures&&(c.push(p),this.textureLookup.set(p,l)),p}readTexture(e,n,t){return t||(t=1),this.profiler.event("backend","TextureManager.readTexture",()=>{let o=e.shape.reduce((u,a)=>u*a)*t,i=this.glContext.readTexture(e.texture,e.width,e.height,o,this.toEncoderType(n),t);return this.toTensorData(n,i)})}async readTextureAsync(e,n,t){let o=e.tensor.dataId;if(t||(t=1),this.pendingRead.has(o)){let i=this.pendingRead.get(o);return new Promise(u=>i?.push(u))}return this.profiler.event("backend","TextureManager.readTextureAsync",async()=>{this.pendingRead.set(o,[]);let i=e.shape.reduce((l,c)=>l*c)*t;await this.glContext.createAndWaitForFence();let u=this.glContext.readTexture(e.texture,e.width,e.height,i,this.toEncoderType(n),t),a=this.toTensorData(n,u),s=this.pendingRead.get(o);return this.pendingRead.delete(o),s?.forEach(l=>l(a)),a})}readUint8TextureAsFloat(e){return this.profiler.event("backend","TextureManager.readUint8TextureAsFloat",()=>{let n=e.shape.reduce((o,i)=>o*i),t=this.glContext.readTexture(e.texture,e.width,e.height,n*4,"byte",4);return new Float32Array(t.buffer,t.byteOffset,n)})}releaseTexture(e,n){let t;if(this.config.reuseTextures&&(t=this.textureLookup.get(e.texture),t)){n&&this.textureLookup.delete(t);let o=this.inUseTextures.get(t);if(o){let i=o.indexOf(e.texture);if(i!==-1){o.splice(i,1);let u=this.idleTextures.get(t);u||(u=[],this.idleTextures.set(t,u)),u.push(e.texture)}}}(!t||n)&&(ze.verbose("TextureManager",`Deleting texture of size ${e.width}x${e.height}`),this.glContext.deleteTexture(e.texture))}toTensorData(e,n){switch(e){case"int16":return n instanceof Int16Array?n:Int16Array.from(n);case"int32":return n instanceof Int32Array?n:Int32Array.from(n);case"int8":return n instanceof Int8Array?n:Int8Array.from(n);case"uint16":return n instanceof Uint16Array?n:Uint16Array.from(n);case"uint32":return n instanceof Uint32Array?n:Uint32Array.from(n);case"uint8":case"bool":return n instanceof Uint8Array?n:Uint8Array.from(n);case"float32":return n instanceof Float32Array?n:Float32Array.from(n);case"float64":return n instanceof Float64Array?n:Float64Array.from(n);default:throw new Error(`TensorData type ${e} is not supported`)}}toTextureData(e,n){if(n)return n instanceof Float32Array?n:new Float32Array(n)}toEncoderType(e){return"float"}clearActiveTextures(){this.glContext.clearActiveTextures()}}});var Ci,th=D(()=>{"use strict";Bt();ml();jc();Gp();Qp();xs();eh();Ci=class{constructor(e,n){this.backend=e;this.context=n;this.layoutStrategy=new wi(e.glContext.maxTextureSize),this.programManager=new Oi(this.context.profiler,e.glContext,this.layoutStrategy),this.textureManager=new Ei(e.glContext,this.layoutStrategy,this.context.profiler,{reuseTextures:e.textureCacheMode==="full"}),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map,this.pack=e.pack,this.pack2unpackMap=new Map,this.unpack2packMap=new Map}createInferenceHandler(){return new ci(this)}onGraphInitialized(e){let n=e.getValues().filter(t=>t.from===-1&&t.tensor).map(t=>t.tensor.dataId);this.initializers=new Set(n)}isInitializer(e){return this.initializers?this.initializers.has(e):!1}addInitializer(e){this.initializers.add(e)}getTextureData(e,n){return n?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,n,t=!1){ze.verbose("WebGLSessionHandler","Storing Texture data in cache"),t?this.packedTextureDataCache.set(e,n):this.unpackedTextureDataCache.set(e,n)}dispose(){this.programManager.dispose(),this.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(e=>this.textureManager.releaseTexture(e,!0)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(e=>this.textureManager.releaseTexture(e,!0)),this.unpackedTextureDataCache=new Map}resolve(e,n,t){let o=hl(e,n,Fp);return{impl:o.opImpl,context:o.opInit?o.opInit(e,t):e}}}});function Jv(r){let e=0;for(;e<r.length&&r[e]();++e);return e-1}var ho,rh=D(()=>{"use strict";Rt();uo();uo();or();ho=class{constructor(e,n){this.frameBufferBound=!1;this.itemsToPoll=[];this.gl=e,this.version=n,this.getExtensions(),this.vertexbuffer=this.createVertexbuffer(),this.framebuffer=this.createFramebuffer(),this.queryVitalParameters()}allocateTexture(e,n,t,o){let i=this.gl,u=i.createTexture();i.bindTexture(i.TEXTURE_2D,u),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE);let a=o?t.encode(o,e*n):null;return i.texImage2D(i.TEXTURE_2D,0,t.internalFormat,e,n,0,t.format,t.textureType,a),this.checkError(),u}updateTexture(e,n,t,o,i){let u=this.gl;u.bindTexture(u.TEXTURE_2D,e);let a=o.encode(i,n*t);u.texSubImage2D(u.TEXTURE_2D,0,0,0,n,t,o.format,o.textureType,a),this.checkError()}attachFramebuffer(e,n,t){let o=this.gl;o.bindTexture(o.TEXTURE_2D,e),o.bindFramebuffer(o.FRAMEBUFFER,this.framebuffer),o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,e,0),this.checkError(),o.viewport(0,0,n,t),o.scissor(0,0,n,t)}readTexture(e,n,t,o,i,u){let a=this.gl;u||(u=1),this.frameBufferBound||this.attachFramebuffer(e,n,t);let s=this.getEncoder(i,u),l=s.allocate(n*t);return a.bindTexture(a.TEXTURE_2D,e),a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,e,0),a.readPixels(0,0,n,t,a.RGBA,s.textureType,l),this.checkError(),s.decode(l,o)}isFramebufferReady(){return!0}getActiveTexture(){let e=this.gl;return`TEXTURE${e.getParameter(this.gl.ACTIVE_TEXTURE)-e.TEXTURE0}`}getTextureBinding(){return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D)}getFramebufferBinding(){return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING)}setVertexAttributes(e,n){let t=this.gl;t.vertexAttribPointer(e,3,t.FLOAT,!1,20,0),t.enableVertexAttribArray(e),n!==-1&&(t.vertexAttribPointer(n,2,t.FLOAT,!1,20,12),t.enableVertexAttribArray(n)),this.checkError()}createProgram(e,n){let t=this.gl,o=t.createProgram();return t.attachShader(o,e),t.attachShader(o,n),t.linkProgram(o),o}compileShader(e,n){let t=this.gl,o=t.createShader(n);if(!o)throw new Error(`createShader() returned null with type ${n}`);if(t.shaderSource(o,e),t.compileShader(o),t.getShaderParameter(o,t.COMPILE_STATUS)===!1)throw new Error(`Failed to compile shader: ${t.getShaderInfoLog(o)}
Shader source:
${e}`);return o}deleteShader(e){this.gl.deleteShader(e)}bindTextureToUniform(e,n,t){let o=this.gl;o.activeTexture(o.TEXTURE0+n),this.checkError(),o.bindTexture(o.TEXTURE_2D,e),this.checkError(),o.uniform1i(t,n),this.checkError()}draw(){this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4),this.checkError()}checkError(){if(ve.debug){let e=this.gl,n=e.getError(),t="";switch(n){case e.NO_ERROR:return;case e.INVALID_ENUM:t="INVALID_ENUM";break;case e.INVALID_VALUE:t="INVALID_VALUE";break;case e.INVALID_OPERATION:t="INVALID_OPERATION";break;case e.INVALID_FRAMEBUFFER_OPERATION:t="INVALID_FRAMEBUFFER_OPERATION";break;case e.OUT_OF_MEMORY:t="OUT_OF_MEMORY";break;case e.CONTEXT_LOST_WEBGL:t="CONTEXT_LOST_WEBGL";break;default:t=`Unknown WebGL Error: ${n.toString(16)}`}throw new Error(t)}}deleteTexture(e){this.gl.deleteTexture(e)}deleteProgram(e){this.gl.deleteProgram(e)}getEncoder(e,n,t=0){if(this.version===2)return new ui(this.gl,n);switch(e){case"float":return t===1||this.isRenderFloat32Supported?new so(this.gl,n):new so(this.gl,n,this.textureHalfFloatExtension.HALF_FLOAT_OES);case"int":throw new Error("not implemented");case"byte":return new li(this.gl,n);default:throw new Error(`Invalid dataType: ${e}`)}}clearActiveTextures(){let e=this.gl;for(let n=0;n<this.maxTextureImageUnits;++n)e.activeTexture(e.TEXTURE0+n),e.bindTexture(e.TEXTURE_2D,null)}dispose(){if(this.disposed)return;let e=this.gl;e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(this.framebuffer),e.bindBuffer(e.ARRAY_BUFFER,null),e.deleteBuffer(this.vertexbuffer),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null),e.finish(),this.disposed=!0}createDefaultGeometry(){return new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0])}createVertexbuffer(){let e=this.gl,n=e.createBuffer();if(!n)throw new Error("createBuffer() returned null");let t=this.createDefaultGeometry();return e.bindBuffer(e.ARRAY_BUFFER,n),e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW),this.checkError(),n}createFramebuffer(){let e=this.gl.createFramebuffer();if(!e)throw new Error("createFramebuffer returned null");return e}queryVitalParameters(){let e=this.gl;if(this.isFloatTextureAttachableToFrameBuffer=this.checkFloatTextureAttachableToFrameBuffer(),this.isRenderFloat32Supported=this.checkRenderFloat32(),this.isFloat32DownloadSupported=this.checkFloat32Download(),this.version===1&&!this.textureHalfFloatExtension&&!this.isRenderFloat32Supported)throw new Error("both float32 and float16 TextureType are not supported");this.isBlendSupported=!this.isRenderFloat32Supported||this.checkFloat32Blend(),this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.maxTextureImageUnits=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this.version}getExtensions(){this.version===2?(this.colorBufferFloatExtension=this.gl.getExtension("EXT_color_buffer_float"),this.disjointTimerQueryWebgl2Extension=this.gl.getExtension("EXT_disjoint_timer_query_webgl2")):(this.textureFloatExtension=this.gl.getExtension("OES_texture_float"),this.textureHalfFloatExtension=this.gl.getExtension("OES_texture_half_float"))}checkFloatTextureAttachableToFrameBuffer(){let e=this.gl,n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let t=this.version===2?e.RGBA32F:e.RGBA;e.texImage2D(e.TEXTURE_2D,0,t,1,1,0,e.RGBA,e.FLOAT,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(o),i}checkRenderFloat32(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension)return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Download(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension||!this.gl.getExtension("WEBGL_color_buffer_float"))return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Blend(){let e=this.gl,n,t,o,i,u;try{n=e.createTexture(),t=e.createFramebuffer(),e.bindTexture(e.TEXTURE_2D,n);let a=this.version===2?e.RGBA32F:e.RGBA;return e.texImage2D(e.TEXTURE_2D,0,a,1,1,0,e.RGBA,e.FLOAT,null),e.bindFramebuffer(e.FRAMEBUFFER,t),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0),e.enable(e.BLEND),o=e.createShader(e.VERTEX_SHADER),!o||(e.shaderSource(o,"void main(){}"),e.compileShader(o),i=e.createShader(e.FRAGMENT_SHADER),!i)||(e.shaderSource(i,"precision highp float;void main(){gl_FragColor=vec4(0.5);}"),e.compileShader(i),u=e.createProgram(),!u)?!1:(e.attachShader(u,o),e.attachShader(u,i),e.linkProgram(u),e.useProgram(u),e.drawArrays(e.POINTS,0,1),e.getError()===e.NO_ERROR)}finally{e.disable(e.BLEND),u&&e.deleteProgram(u),o&&e.deleteShader(o),i&&e.deleteShader(i),t&&(e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(t)),n&&(e.bindTexture(e.TEXTURE_2D,null),e.deleteTexture(n))}}beginTimer(){if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let e=this.gl,n=this.disjointTimerQueryWebgl2Extension,t=e.createQuery();return e.beginQuery(n.TIME_ELAPSED_EXT,t),t}else throw new Error("WebGL1 profiling currently not supported.")}endTimer(){if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let e=this.gl,n=this.disjointTimerQueryWebgl2Extension;e.endQuery(n.TIME_ELAPSED_EXT);return}else throw new Error("WebGL1 profiling currently not supported")}isTimerResultAvailable(e){let n=!1,t=!1;if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let o=this.gl,i=this.disjointTimerQueryWebgl2Extension;n=o.getQueryParameter(e,o.QUERY_RESULT_AVAILABLE),t=o.getParameter(i.GPU_DISJOINT_EXT)}else throw new Error("WebGL1 profiling currently not supported");return n&&!t}getTimerResult(e){let n=0;if(this.version===2){let t=this.gl;n=t.getQueryParameter(e,t.QUERY_RESULT),t.deleteQuery(e)}else throw new Error("WebGL1 profiling currently not supported");return n/1e6}async waitForQueryAndGetTime(e){return await Ha(()=>this.isTimerResultAvailable(e)),this.getTimerResult(e)}async createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let n,t=e,o=t.fenceSync(t.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),o===null?n=()=>!0:n=()=>{let i=t.clientWaitSync(o,0,0);return i===t.ALREADY_SIGNALED||i===t.CONDITION_SATISFIED},{query:o,isFencePassed:n}}async pollFence(e){return new Promise(n=>{this.addItemToPoll(()=>e.isFencePassed(),()=>n())})}pollItems(){let e=Jv(this.itemsToPoll.map(n=>n.isDoneFn));for(let n=0;n<=e;++n){let{resolveFn:t}=this.itemsToPoll[n];t()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}async addItemToPoll(e,n){this.itemsToPoll.push({isDoneFn:e,resolveFn:n}),!(this.itemsToPoll.length>1)&&await Ha(()=>(this.pollItems(),this.itemsToPoll.length===0))}}});function ws(r){let e;if((!r||r==="webgl2")&&"webgl2"in Pn?e=Pn.webgl2:(!r||r==="webgl")&&"webgl"in Pn&&(e=Pn.webgl),!e)try{let t=Qv();e=nh(t,r)}catch{let o=Zv();e=nh(o,r)}r=r||e.version===1?"webgl":"webgl2";let n=e.gl;return Pn[r]=e,n.isContextLost()?(delete Pn[r],ws(r)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),e)}function nh(r,e){let n={alpha:!1,depth:!1,antialias:!1,stencil:!1,preserveDrawingBuffer:!1,premultipliedAlpha:!1,failIfMajorPerformanceCaveat:!1},t,o=n;if((!e||e==="webgl2")&&(t=r.getContext("webgl2",o),t))try{return new ho(t,2)}catch(i){ze.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl2'. Error: ${i}`)}if((!e||e==="webgl")&&(t=r.getContext("webgl",o)||r.getContext("experimental-webgl",o),t))try{return new ho(t,1)}catch(i){ze.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${i}`)}throw new Error("WebGL is not supported")}function Zv(){if(typeof document>"u")throw new TypeError("failed to create canvas: document is not supported");let r=document.createElement("canvas");return r.width=1,r.height=1,r}function Qv(){if(typeof OffscreenCanvas>"u")throw new TypeError("failed to create offscreen canvas: OffscreenCanvas is not supported");return new OffscreenCanvas(1,1)}var Pn,oh=D(()=>{"use strict";Bt();rh();Pn={}});var Pi,ih=D(()=>{"use strict";Rt();Bt();th();oh();Pi=class{get contextId(){return ve.webgl.contextId}set contextId(e){ve.webgl.contextId=e}get matmulMaxBatchSize(){return ve.webgl.matmulMaxBatchSize}set matmulMaxBatchSize(e){ve.webgl.matmulMaxBatchSize=e}get textureCacheMode(){return ve.webgl.textureCacheMode}set textureCacheMode(e){ve.webgl.textureCacheMode=e}get pack(){return ve.webgl.pack}set pack(e){ve.webgl.pack=e}get async(){return ve.webgl.async}set async(e){ve.webgl.async=e}initialize(){try{return this.glContext=ws(this.contextId),typeof this.matmulMaxBatchSize!="number"&&(this.matmulMaxBatchSize=16),typeof this.textureCacheMode!="string"&&(this.textureCacheMode="full"),typeof this.pack!="boolean"&&(this.pack=!1),typeof this.async!="boolean"&&(this.async=!1),ze.setWithEnv(ve),ve.webgl.context||Object.defineProperty(ve.webgl,"context",{value:this.glContext.gl}),ze.verbose("WebGLBackend",`Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${this.async}.`),!0}catch(e){return ze.warning("WebGLBackend",`Unable to initialize WebGLBackend. ${e}`),!1}}createSessionHandler(e){return new Ci(this,e)}dispose(){this.glContext.dispose()}}});async function Ts(r){if(r){let e=typeof r=="string"?[r]:r;for(let n of e){let t=ah.get(n);if(t)return t;let o=await tw(n);if(o)return o}}else return Ts(["webgl"]);throw new Error("no available backend to use")}async function tw(r){let e=ew;if(typeof e[r]<"u"&&rw(e[r])){let n=e[r],t=n.initialize();if(typeof t=="object"&&"then"in t&&(t=await t),t)return ah.set(r,n),n}}function rw(r){let e=r;return"initialize"in e&&typeof e.initialize=="function"&&"createSessionHandler"in e&&typeof e.createSessionHandler=="function"&&"dispose"in e&&typeof e.dispose=="function"}var ah,ew,sh=D(()=>{"use strict";ih();ah=new Map,ew={webgl:new Pi}});var $s,Di,uh=D(()=>{"use strict";Bt();$s=class{constructor(e,n){this.op=e;this.node=n}},Di=class{constructor(e,n,t){this.graph=e;this.profiler=t;this.initialize(n)}initialize(e){this.profiler.event("session","ExecutionPlan.initialize",()=>{let n=this.graph.getNodes();if(n.length!==e.length)throw new Error("The size of nodes and OPs do not match.");this._ops=e.map((t,o)=>new $s(t,n[o])),this.reset(),this._starter=[],this._ops.forEach((t,o)=>{let i=!0;for(let u of t.node.inputs)if(!this._values[u]&&this.graph.getInputIndices().indexOf(u)===-1){i=!1;break}i&&this._starter.push(o)})})}reset(){this._values=this.graph.getValues().map(e=>e.tensor)}async execute(e,n){return this.profiler.event("session","ExecutionPlan.execute",async()=>{this.reset();let t=e.createInferenceHandler(),o=this.graph.getInputIndices();if(n.length!==o.length)throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${n.length} expected: ${o.length}`);n.forEach((c,p)=>{let h=o[p];this._values[h]=c});let i=this._starter.slice(0),u=this.graph.getValues(),a=this.graph.getNodes(),s=0;for(;s<i.length;){let c=i[s++],p=this._ops[c],h=p.node.inputs.map(w=>this._values[w]);if(h.indexOf(void 0)!==-1)throw new Error(`unresolved input detected: op: ${p.node}`);let g=h;ze.verbose("ExecPlan",`Runing op:${p.node.name} (${g.map((w,S)=>`'${p.node.inputs[S]}': ${w.type}[${w.dims.join(",")}]`).join(", ")})`);let x=await this.profiler.event("node",p.node.name,async()=>p.op.impl(t,g,p.op.context));if(x.length!==p.node.outputs.length)throw new Error("the size of output does not match model definition.");x.forEach((w,S)=>{let O=p.node.outputs[S];if(this._values[O])throw new Error(`output [${O}] already has value: op:${p.node.name}`);this._values[O]=w});let b=new Set;x.forEach((w,S)=>{let O=p.node.outputs[S];for(let E of u[O].to){let B=a[E],z=!0;for(let M of B.inputs)if(!this._values[M]){z=!1;break}z&&b.add(E)}}),i.push(...b)}let l=[];for(let c=0;c<this.graph.getOutputIndices().length;c++){let p=this.graph.getOutputIndices()[c],h=this._values[p];if(h===void 0)throw new Error(`required output [${p}] does not have value`);p===0?await h.getData():h.data,l.push(h)}return ze.verbose("ExecPlan","disposing of inferenceHandler"),t.dispose(),l})}}});var _e,Wt,mo,lh=D(()=>{"use strict";to();_e=xn($n());nn();Le();Wt=ne.experimental.fbs,mo=class r{constructor(e){if(this._attributes=new Map,e!=null){for(let n of e)n instanceof _e.onnx.AttributeProto?this._attributes.set(n.name,[r.getValue(n),r.getType(n)]):n instanceof Wt.Attribute&&this._attributes.set(n.name(),[r.getValue(n),r.getType(n)]);if(this._attributes.size<e.length)throw new Error("duplicated attribute names")}}set(e,n,t){this._attributes.set(e,[t,n])}delete(e){this._attributes.delete(e)}getFloat(e,n){return this.get(e,"float",n)}getInt(e,n){return this.get(e,"int",n)}getString(e,n){return this.get(e,"string",n)}getTensor(e,n){return this.get(e,"tensor",n)}getFloats(e,n){return this.get(e,"floats",n)}getInts(e,n){return this.get(e,"ints",n)}getStrings(e,n){return this.get(e,"strings",n)}getTensors(e,n){return this.get(e,"tensors",n)}get(e,n,t){let o=this._attributes.get(e);if(o===void 0){if(t!==void 0)return t;throw new Error(`required attribute not found: ${e}`)}if(o[1]!==n)throw new Error(`type mismatch: expected ${n} but got ${o[1]}`);return o[0]}static getType(e){let n=e instanceof _e.onnx.AttributeProto?e.type:e.type();switch(n){case _e.onnx.AttributeProto.AttributeType.FLOAT:return"float";case _e.onnx.AttributeProto.AttributeType.INT:return"int";case _e.onnx.AttributeProto.AttributeType.STRING:return"string";case _e.onnx.AttributeProto.AttributeType.TENSOR:return"tensor";case _e.onnx.AttributeProto.AttributeType.FLOATS:return"floats";case _e.onnx.AttributeProto.AttributeType.INTS:return"ints";case _e.onnx.AttributeProto.AttributeType.STRINGS:return"strings";case _e.onnx.AttributeProto.AttributeType.TENSORS:return"tensors";default:throw new Error(`attribute type is not supported yet: ${_e.onnx.AttributeProto.AttributeType[n]}`)}}static getValue(e){let n=e instanceof _e.onnx.AttributeProto?e.type:e.type();if(n===_e.onnx.AttributeProto.AttributeType.GRAPH||n===_e.onnx.AttributeProto.AttributeType.GRAPHS)throw new Error("graph attribute is not supported yet");let t=this.getValueNoCheck(e);if(n===_e.onnx.AttributeProto.AttributeType.INT&&At.isLong(t))return At.longToNumber(t);if(n===_e.onnx.AttributeProto.AttributeType.INTS){let o=t,i=new Array(o.length);for(let u=0;u<o.length;u++){let a=o[u];i[u]=At.longToNumber(a)}return i}if(n===_e.onnx.AttributeProto.AttributeType.TENSOR)return e instanceof _e.onnx.AttributeProto?st.fromProto(t):st.fromOrtTensor(t);if(n===_e.onnx.AttributeProto.AttributeType.TENSORS){if(e instanceof _e.onnx.AttributeProto)return t.map(i=>st.fromProto(i));if(e instanceof Wt.Attribute)return t.map(i=>st.fromOrtTensor(i))}return n===_e.onnx.AttributeProto.AttributeType.STRING&&e instanceof _e.onnx.AttributeProto?ao(t):n===_e.onnx.AttributeProto.AttributeType.STRINGS&&e instanceof _e.onnx.AttributeProto?t.map(ao):t}static getValueNoCheck(e){return e instanceof _e.onnx.AttributeProto?this.getValueNoCheckFromOnnxFormat(e):this.getValueNoCheckFromOrtFormat(e)}static getValueNoCheckFromOnnxFormat(e){switch(e.type){case _e.onnx.AttributeProto.AttributeType.FLOAT:return e.f;case _e.onnx.AttributeProto.AttributeType.INT:return e.i;case _e.onnx.AttributeProto.AttributeType.STRING:return e.s;case _e.onnx.AttributeProto.AttributeType.TENSOR:return e.t;case _e.onnx.AttributeProto.AttributeType.GRAPH:return e.g;case _e.onnx.AttributeProto.AttributeType.FLOATS:return e.floats;case _e.onnx.AttributeProto.AttributeType.INTS:return e.ints;case _e.onnx.AttributeProto.AttributeType.STRINGS:return e.strings;case _e.onnx.AttributeProto.AttributeType.TENSORS:return e.tensors;case _e.onnx.AttributeProto.AttributeType.GRAPHS:return e.graphs;default:throw new Error(`unsupported attribute type: ${_e.onnx.AttributeProto.AttributeType[e.type]}`)}}static getValueNoCheckFromOrtFormat(e){switch(e.type()){case Wt.AttributeType.FLOAT:return e.f();case Wt.AttributeType.INT:return e.i();case Wt.AttributeType.STRING:return e.s();case Wt.AttributeType.TENSOR:return e.t();case Wt.AttributeType.GRAPH:return e.g();case Wt.AttributeType.FLOATS:return e.floatsArray();case Wt.AttributeType.INTS:{let n=[];for(let t=0;t<e.intsLength();t++)n.push(e.ints(t));return n}case Wt.AttributeType.STRINGS:{let n=[];for(let t=0;t<e.stringsLength();t++)n.push(e.strings(t));return n}case Wt.AttributeType.TENSORS:{let n=[];for(let t=0;t<e.tensorsLength();t++)n.push(e.tensors(t));return n}default:throw new Error(`unsupported attribute type: ${Wt.AttributeType[e.type()]}`)}}}});var Is,ki,_s,sr,Ri,Ss,ch=D(()=>{"use strict";lh();to();Is=xn($n());nn();Le();ki=ne.experimental.fbs,_s={from:(r,e)=>new Ss(r,e)},sr=class{constructor(e){this._from=void 0,this._to=[],this.tensor=void 0,this.type=void 0,e&&(this.type=bt.tensorValueTypeFromProto(e.type.tensorType))}get from(){return this._from}get to(){return this._to}},Ri=class{constructor(e,n){e instanceof Is.onnx.NodeProto?(this.name=e.name,this.opType=e.opType,this.attributes=new mo(e.attribute)):e instanceof ki.Node&&(this.name=n??e.name(),this.opType=e.opType(),this.attributes=new mo(bt.tensorAttributesFromORTFormat(e))),this.inputs=[],this.outputs=[],this.executeNode=!0}},Ss=class{constructor(e,n){if(!e)throw new TypeError("graph is empty");this.buildGraph(e),this.transformGraph(n),this.checkIsAcyclic()}getInputIndices(){return this._allInputIndices}getInputNames(){return this._allInputNames}getOutputIndices(){return this._allOutputIndices}getOutputNames(){return this._allOutputNames}getValues(){return this._allData}getNodes(){return this._nodes}buildGraph(e){if(e instanceof Is.onnx.GraphProto)this.buildGraphFromOnnxFormat(e);else if(e instanceof ki.Graph)this.buildGraphFromOrtFormat(e);else throw new TypeError("Graph type is not supported.")}buildGraphFromOnnxFormat(e){let n=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];let t=new Map;if(!e.input)throw new Error("missing information in graph: input");let o=[];for(let i of e.input){if(n.has(i.name))throw new Error(`duplicated input name: ${i.name}`);let u=this._allData.push(new sr(i))-1;n.set(i.name,u),o.push(i.name)}if(!e.initializer)throw new Error("missing information in graph: initializer");for(let i of e.initializer){let u=n.get(i.name);if(u===void 0){let a=new sr;a.type={shape:{dims:bt.tensorDimsFromProto(i.dims)},tensorType:bt.tensorDataTypeFromProto(i.dataType)},u=this._allData.push(a)-1,n.set(i.name,u)}this._allData[u]._from=-1,this._allData[u].tensor=st.fromProto(i)}for(let i=0;i<this._allData.length;i++)this._allData[i].tensor||(this._allInputIndices.push(i),this._allInputNames.push(o[i]));if(!e.output)throw new Error("missing information in graph: output");for(let i of e.output){if(n.has(i.name))throw new Error(`duplicated output name: ${i.name}`);let u=this._allData.push(new sr(i))-1;n.set(i.name,u),this._allOutputIndices.push(u),this._allOutputNames.push(i.name)}if(!e.node)throw new Error("missing information in graph: node");for(let i of e.node){if(!i.name)for(let a=0;;a++){let s=`unnamed_${i.opType}_${a}`;if(!t.has(s)){i.name=s;break}}if(t.has(i.name))throw new Error(`duplicated node name: ${i.name}`);let u=this._nodes.push(new Ri(i))-1;t.set(i.name,u)}for(let i=0;i<this._nodes.length;i++){let u=this._nodes[i],a=e.node[i];if(!a.output)throw new Error(`missing output for node: ${a.name}`);for(let s of a.output){let l=n.get(s);if(typeof l>"u"&&(l=this._allData.push(new sr)-1,n.set(s,l)),u.outputs.push(l),this._allData[l]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${l}`);if(this._allData[l]._from=i,a.opType==="Constant"){if(!a.attribute||a.attribute.length!==1||!a.attribute[0].t)throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(!a.output||a.output.length!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");u.outputs.pop(),u.executeNode=!1,this._allData[l]._from=-1,this._allData[l].tensor=st.fromProto(a.attribute[0].t)}}}for(let i=0;i<this._nodes.length;i++){let u=this._nodes[i],a=e.node[i];if(!a.input)throw new Error(`missing input for node: ${a.name}`);for(let s of a.input){let l=n.get(s);if(typeof l>"u"){if(s===""&&(a.input.length===3||a.input.length===4)&&a.opType==="Resize")continue;throw new Error(`unrecognized input '${s}' for node: ${a.name}`)}u.inputs.push(l),this._allData[l]._to.push(i)}}return!0}buildGraphFromOrtFormat(e){let n=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];let t=new Map,o=[];for(let i=0;i<e.inputsLength();i++){let u=e.inputs(i);if(n.has(u))throw new Error(`duplicated input name: ${u}`);for(let a=0;a<e.nodeArgsLength();a++)if(e.nodeArgs(a)?.name()===u){let s=new sr;if(e.nodeArgs(a)?.type()?.valueType()!==ki.TypeInfoValue.tensor_type)throw new Error("Unexpected value type for the nodeArg.");let c=e.nodeArgs(a).type().value(new ki.TensorTypeAndShape),p=bt.tensorDataTypeFromProto(c.elemType()),h=c.shape(),g=[];for(let b=0;b<h.dimLength();b++)g.push(At.longToNumber(h.dim(b).value().dimValue()));s.type={shape:{dims:g},tensorType:p};let x=this._allData.push(s)-1;n.set(u,x),o.push(u)}}for(let i=0;i<e.initializersLength();i++){let u=e.initializers(i),a=n.get(u.name());if(a===void 0){let s=new sr,l=bt.tensorDimsFromORTFormat(u),c=bt.tensorDataTypeFromProto(u.dataType());s.type={shape:{dims:l},tensorType:c},a=this._allData.push(s)-1,n.set(u.name(),a)}this._allData[a]._from=-1,this._allData[a].tensor=st.fromOrtTensor(u)}for(let i=0;i<this._allData.length;i++)this._allData[i].tensor||(this._allInputIndices.push(i),this._allInputNames.push(o[i]));for(let i=0;i<e.outputsLength();i++){let u=e.outputs(i);if(n.has(u))throw new Error(`duplicated output name: ${u}`);let a=this._allData.push(new sr)-1;n.set(u,a),this._allOutputIndices.push(a),this._allOutputNames.push(u)}if(!e.nodes)throw new Error("missing information in graph: node");for(let i=0;i<e.nodesLength();i++){let u=e.nodes(i),a=u.name();if(!a)for(let l=0;a=`unnamed_${u.opType()}_${l}`,!!t.has(a);l++);if(t.has(a))throw new Error(`duplicated node name: ${a}`);let s=this._nodes.push(new Ri(u,a))-1;t.set(a,s)}for(let i=0;i<this._nodes.length;i++){let u=this._nodes[i],a=e.nodes(i);if(a==null)throw new Error(`No node exists at index ${i}`);if(a?.outputsLength()===0)throw new Error(`missing output for node: ${a.name}`);for(let s=0;s<a?.outputsLength();s++){let l=a?.outputs(s),c=n.get(l);if(typeof c>"u"&&(c=this._allData.push(new sr)-1,n.set(l,c)),u.outputs.push(c),this._allData[c]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${c}`);if(this._allData[c]._from=i,a.opType()==="Constant"){if(a.attributesLength()!==1||!a.attributes(0).t())throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(a.outputsLength()!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");u.outputs.pop(),u.executeNode=!1,this._allData[c]._from=-1,this._allData[c].tensor=st.fromOrtTensor(a.attributes(0).t())}}}for(let i=0;i<this._nodes.length;i++){let u=this._nodes[i],a=e.nodes(i);if(a.inputsLength()===0)throw new Error(`missing input for node: ${a.name}`);for(let s=0;s<a.inputsLength();s++){let l=a.inputs(s),c=n.get(l);if(typeof c>"u")throw new Error(`unrecognized input '${l}' for node: ${a.name()}`);u.inputs.push(c),this._allData[c]._to.push(i)}}}checkIsAcyclic(){let e=new Set;this._allInputIndices.forEach(o=>{this._allData[o]._to.forEach(u=>{e.add(u)})});let n=Array.from(e),t=new Array(this._nodes.length).fill("white");for(;n.length>0;){let o=n.pop();t[o]==="gray"?t[o]="black":(n.push(o),t[o]="gray",this._nodes[o].outputs.forEach(i=>{let u=this._allData[i];if(typeof u.tensor<"u")throw new Error("node outputs should not be initialized");if(u._from!==o)throw new Error("from property of the Value object doesn't match index of Node being processed");u._to.forEach(a=>{if(t[a]==="gray")throw new Error("model graph is cyclic");t[a]==="white"&&n.push(a)})}))}}transformGraph(e){this.removeAllIdentityNodes(),this.removeAllDropoutNodes(),this.fuseConvActivationNodes(),e&&e.transformGraph(this),this.finalizeGraph()}finalizeGraph(){let e=0,n=new Array(this._nodes.length,0),t=0;for(let o=0;o<this._nodes.length;o++)n[o]=t,this._nodes[o].executeNode?(t!==o&&(this._nodes[t]=this._nodes[o]),t++):this._nodes[o].outputs.forEach(i=>{this._allData[i]._from=-2});this._nodes.splice(t,this._nodes.length-t);for(let o=0;o<this._allData.length;o++){let i=this._allData[o];i._from!==void 0&&i._from!==-1&&i._from!==-2&&(i._from=n[i._from]);for(let u=0;u<i._to.length;u++)if(i._to[u]>=0)i._to[u]=n[i._to[u]];else throw new Error("Trying to update a removed node")}e=0;for(let o=0;o<this._allData.length;o++){if(this._allData[o].from===-2&&this._allOutputIndices.indexOf(o+e)===-1){e++,this._allData.splice(o,1),o--;continue}if(e>0){let i=-1;this._allData[o].from!==void 0&&this._allData[o].from!==-1?(i=this._nodes[this._allData[o].from].outputs.indexOf(o+e),i!==-1&&(this._nodes[this._allData[o].from].outputs[i]=o)):(i=this._allInputIndices.indexOf(o+e),i!==-1&&(this._allInputIndices[i]=o)),this._allData[o].to.forEach(u=>{i=this._nodes[u].inputs.indexOf(o+e),i!==-1&&(this._nodes[u].inputs[i]=o)}),this._allData[o].to.length===0&&(i=this._allOutputIndices.indexOf(o+e),i!==-1&&(this._allOutputIndices[i]=o))}}}deleteNode(e){let n=this._nodes[e];if(n.outputs.length>1){for(let a=1;a<n.outputs.length;a++)if(this._allData[n.outputs[a]].to.length>0)throw new Error("Node deletion with more than one output connected to other nodes is not supported. ")}n.executeNode=!1;let t=n.inputs[0],o=n.outputs[0],i=this._allData[o].to;for(let a=0;a<n.inputs.length;a++){let s=this._allData[n.inputs[a]].to.indexOf(e);if(s===-1)throw new Error("The Value object doesn't have the current Node in it's 'to' property ");this._allData[n.inputs[a]].to.splice(s,1)}this._allData[o]._to=[];let u=this._allOutputIndices.indexOf(o);if(u!==-1&&(this._allOutputIndices[u]=t),i&&i.length>0)for(let a of i){let s=this._nodes[a].inputs.indexOf(o);if(s===-1)throw new Error("The Node object doesn't have the output Value in it's 'inputs' property ");this._nodes[a].inputs[s]=t,this._allData[t].to.push(a)}}removeAllDropoutNodes(){let e=0;for(let n of this._nodes){if(n.opType==="Dropout"){if(n.inputs.length!==1)throw new Error("Dropout nodes should only contain one input. ");if(n.outputs.length!==1&&n.outputs.length!==2)throw new Error("Dropout nodes should contain either 1 or 2 output(s)");if(n.outputs.length===2&&this._allData[n.outputs[1]]._to.length!==0)throw new Error("Dropout nodes's second output should not be referenced by other nodes");this.deleteNode(e)}e++}}removeAllIdentityNodes(){let e=0;for(let n of this._nodes)n.opType==="Identity"&&this.deleteNode(e),e++}isActivation(e){switch(e.opType){case"Relu":case"Sigmoid":case"Clip":return!0;default:return!1}}fuseConvActivationNodes(){for(let e of this._nodes)if(e.opType==="Conv"){let n=this._allData[e.outputs[0]]._to;if(n.length===1&&this.isActivation(this._nodes[n[0]])){let t=this._nodes[n[0]];if(t.opType==="Clip")if(t.inputs.length===1)try{e.attributes.set("activation_params","floats",[t.attributes.getFloat("min"),t.attributes.getFloat("max")])}catch{e.attributes.set("activation_params","floats",[tn,rn])}else if(t.inputs.length>=3&&this._allData[t.inputs[1]].tensor!==void 0&&this._allData[t.inputs[2]].tensor!==void 0)e.attributes.set("activation_params","floats",[this._allData[t.inputs[1]].tensor.floatData[0],this._allData[t.inputs[2]].tensor.floatData[0]]);else continue;e.attributes.set("activation","string",t.opType),this.deleteNode(n[0])}}}}});var dh,nw,Bi,fh=D(()=>{"use strict";ti();ch();to();dh=xn($n());Le();nw=ne.experimental.fbs,Bi=class{constructor(){}load(e,n,t){if(!t)try{this.loadFromOnnxFormat(e,n);return}catch(o){if(t!==void 0)throw o}this.loadFromOrtFormat(e,n)}loadFromOnnxFormat(e,n){let t=dh.onnx.ModelProto.decode(e);if(At.longToNumber(t.irVersion)<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=t.opsetImport.map(i=>({domain:i.domain,version:At.longToNumber(i.version)})),this._graph=_s.from(t.graph,n)}loadFromOrtFormat(e,n){let t=new P.ByteBuffer(e),o=nw.InferenceSession.getRootAsInferenceSession(t).model();if(At.longToNumber(o.irVersion())<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=[];for(let u=0;u<o.opsetImportLength();u++){let a=o.opsetImport(u);this._opsets.push({domain:a?.domain(),version:At.longToNumber(a.version())})}this._graph=_s.from(o.graph(),n)}get graph(){return this._graph}get opsets(){return this._opsets}}});var Mi,ph=D(()=>{"use strict";sh();uh();Bt();fh();Mi=class{constructor(e={}){this._initialized=!1,this.backendHint=e.backendHint,this.profiler=Qo.create(e.profiler),this.context={profiler:this.profiler,graphInputTypes:[],graphInputDims:[]}}get inputNames(){return this._model.graph.getInputNames()}get outputNames(){return this._model.graph.getOutputNames()}startProfiling(){this.profiler.start()}endProfiling(){this.profiler.stop()}async loadModel(e,n,t){await this.profiler.event("session","Session.loadModel",async()=>{let o=await Ts(this.backendHint);if(this.sessionHandler=o.createSessionHandler(this.context),this._model=new Bi,typeof e=="string"){let i=e.endsWith(".ort");if(typeof process<"u"&&process.versions&&process.versions.node){let u=await(void 0)(e);this.initialize(u,i)}else{let a=await(await fetch(e)).arrayBuffer();this.initialize(new Uint8Array(a),i)}}else if(ArrayBuffer.isView(e))this.initialize(e);else{let i=new Uint8Array(e,n||0,t||e.byteLength);this.initialize(i)}})}initialize(e,n){if(this._initialized)throw new Error("already initialized");this.profiler.event("session","Session.initialize",()=>{let t=this.sessionHandler.transformGraph?this.sessionHandler:void 0;this._model.load(e,t,n),this.sessionHandler.onGraphInitialized&&this.sessionHandler.onGraphInitialized(this._model.graph),this.initializeOps(this._model.graph),this._executionPlan=new Di(this._model.graph,this._ops,this.profiler)}),this._initialized=!0}async run(e){if(!this._initialized)throw new Error("session not initialized yet");return this.profiler.event("session","Session.run",async()=>{let n=this.normalizeAndValidateInputs(e),t=await this._executionPlan.execute(this.sessionHandler,n);return this.createOutput(t)})}normalizeAndValidateInputs(e){let n=this._model.graph.getInputNames();if(Array.isArray(e)){if(e.length!==n.length)throw new Error(`incorrect input array length: expected ${n.length} but got ${e.length}`)}else{if(e.size!==n.length)throw new Error(`incorrect input map size: expected ${n.length} but got ${e.size}`);let t=new Array(e.size),o=0;for(let i=0;i<n.length;++i){let u=e.get(n[i]);if(!u)throw new Error(`missing input tensor for: '${name}'`);t[o++]=u}e=t}if(!this.context.graphInputTypes||this.context.graphInputTypes.length===0||!this.context.graphInputDims||this.context.graphInputDims.length===0){let t=this._model.graph.getInputIndices(),o=this._model.graph.getValues(),i=new Array(t.length);for(let u=0;u<t.length;++u){let a=o[t[u]];i[u]=a.type.shape.dims,this.context.graphInputTypes.push(a.type.tensorType),this.context.graphInputDims.push(e[u].dims)}this.validateInputTensorDims(i,e,!0)}else this.validateInputTensorDims(this.context.graphInputDims,e,!1);return this.validateInputTensorTypes(this.context.graphInputTypes,e),e}validateInputTensorTypes(e,n){for(let t=0;t<n.length;t++){let o=e[t],i=n[t].type;if(o!==i)throw new Error(`input tensor[${t}] check failed: expected type '${o}' but got ${i}`)}}validateInputTensorDims(e,n,t){for(let o=0;o<n.length;o++){let i=e[o],u=n[o].dims;if(!this.compareTensorDims(i,u,t))throw new Error(`input tensor[${o}] check failed: expected shape '[${i.join(",")}]' but got [${u.join(",")}]`)}}compareTensorDims(e,n,t){if(e.length!==n.length)return!1;for(let o=0;o<e.length;++o)if(e[o]!==n[o]&&(!t||e[o]!==0))return!1;return!0}createOutput(e){let n=this._model.graph.getOutputNames();if(e.length!==n.length)throw new Error("expected number of outputs do not match number of generated outputs");let t=new Map;for(let o=0;o<n.length;++o)t.set(n[o],e[o]);return t}initializeOps(e){let n=e.getNodes();this._ops=new Array(n.length);for(let t=0;t<n.length;t++)this._ops[t]=this.sessionHandler.resolve(n[t],this._model.opsets,e)}}});var Li,hh=D(()=>{"use strict";Rt();nn();Li=class{constructor(e){this.session=e;this.inputNames=this.session.inputNames,this.outputNames=this.session.outputNames}async dispose(){}async run(e,n,t){let o=new Map;for(let a in e)if(Object.hasOwnProperty.call(e,a)){let s=e[a];o.set(a,new st(s.dims,s.type,void 0,void 0,s.data))}let i=await this.session.run(o),u={};return i.forEach((a,s)=>{u[s]=new lt(a.type,a.data,a.dims)}),u}startProfiling(){this.session.startProfiling()}endProfiling(){this.session.endProfiling()}}});var mh={};Cr(mh,{onnxjsBackend:()=>iw});var As,iw,gh=D(()=>{"use strict";ph();hh();As=class{async init(){}async createInferenceSessionHandler(e,n){let t=new Mi(n);return typeof e=="string"?await t.loadModel(e):await t.loadModel(e),new Li(t)}},iw=new As});var Os={};Cr(Os,{readFile:()=>aw});var aw,Es=D(()=>{aw=void 0});var Cs={};Cr(Cs,{join:()=>sw});var sw,Ps=D(()=>{sw=void 0});var xh=Ue((yh,Ds)=>{"use strict";var bh=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e={}){var n=e,t,o;n.ready=new Promise((f,y)=>{t=f,o=y}),n.jsepInit=(f,y,$,_,C,V,q,se)=>{n.ab=f,n.Ra=y,n.Ta=$,n.La=_,n.Sa=C,n.xa=V,n.Ua=q,n.Va=se,y=(re,ce,ue)=>(...Ie)=>{let Ae=kt,L=ce?.();Ie=re(...Ie);let fe=ce?.();return L!==fe&&(re=fe,ue(L),ce=ue=null),kt!=Ae?Eo():Ie},$=re=>async(...ce)=>{try{if(n.Fa)throw Error("Session already started");let ue=n.Fa={Wa:ce[0],errors:[]},Ie=await re(...ce);if(n.Fa!==ue)throw Error("Session mismatch");f.flush();let Ae=ue.errors;if(0<Ae.length){let L=await Promise.all(Ae);if(L=L.filter(fe=>fe),0<L.length)throw Error(L.join(`
`))}return Ie}finally{n.Fa=null}},n._OrtRun=$(y(n._OrtRun,()=>n._OrtRun,re=>n._OrtRun=re)),n._OrtRunWithBinding=$(y(n._OrtRunWithBinding,()=>n._OrtRunWithBinding,re=>n._OrtRunWithBinding=re)),n._OrtBindInput=y(n._OrtBindInput,()=>n._OrtBindInput,re=>n._OrtBindInput=re),n.jsepRegisterBuffer=(re,ce,ue,Ie)=>f.registerBuffer(re,ce,ue,Ie),n.jsepUnregisterBuffers=re=>{f.unregisterBuffers(re)},n.jsepGetBuffer=re=>f.getBuffer(re),n.jsepCreateDownloader=(re,ce,ue)=>f.createDownloader(re,ce,ue)};var i=Object.assign({},n),u="./this.program",a=(f,y)=>{throw y},s=typeof window=="object",l=typeof importScripts=="function",c=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",p="",h,g,x;if(c){var b=(Es(),wr(Os)),w=(Ps(),wr(Cs));p=l?w.dirname(p)+"/":__dirname+"/",h=(f,y)=>(f=f.startsWith("file://")?new URL(f):w.normalize(f),b.readFileSync(f,y?void 0:"utf8")),x=f=>(f=h(f,!0),f.buffer||(f=new Uint8Array(f)),f),g=(f,y,$,_=!0)=>{f=f.startsWith("file://")?new URL(f):w.normalize(f),b.readFile(f,_?void 0:"utf8",(C,V)=>{C?$(C):y(_?V.buffer:V)})},!n.thisProgram&&1<process.argv.length&&(u=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),a=(f,y)=>{throw process.exitCode=f,y},n.inspect=()=>"[Emscripten Module object]"}else(s||l)&&(l?p=self.location.href:typeof document<"u"&&document.currentScript&&(p=document.currentScript.src),r&&(p=r),p.indexOf("blob:")!==0?p=p.substr(0,p.replace(/[?#].*/,"").lastIndexOf("/")+1):p="",h=f=>{var y=new XMLHttpRequest;return y.open("GET",f,!1),y.send(null),y.responseText},l&&(x=f=>{var y=new XMLHttpRequest;return y.open("GET",f,!1),y.responseType="arraybuffer",y.send(null),new Uint8Array(y.response)}),g=(f,y,$)=>{var _=new XMLHttpRequest;_.open("GET",f,!0),_.responseType="arraybuffer",_.onload=()=>{_.status==200||_.status==0&&_.response?y(_.response):$()},_.onerror=$,_.send(null)});var S=n.print||console.log.bind(console),O=n.printErr||console.error.bind(console);Object.assign(n,i),i=null,n.thisProgram&&(u=n.thisProgram),n.quit&&(a=n.quit);var E;n.wasmBinary&&(E=n.wasmBinary);var B=n.noExitRuntime||!0;typeof WebAssembly!="object"&&j("no native wasm support detected");var z,M,W=!1,Y,Q,he,R,ee,We,ge;function Ne(){var f=z.buffer;n.HEAP8=Q=new Int8Array(f),n.HEAP16=new Int16Array(f),n.HEAP32=R=new Int32Array(f),n.HEAPU8=he=new Uint8Array(f),n.HEAPU16=new Uint16Array(f),n.HEAPU32=ee=new Uint32Array(f),n.HEAPF32=We=new Float32Array(f),n.HEAPF64=ge=new Float64Array(f)}var Z,Ve=[],Qe=[],Ye=[];function Ze(){var f=n.preRun.shift();Ve.unshift(f)}var Et=0,Ct=null,Pt=null;function j(f){throw n.onAbort&&n.onAbort(f),f="Aborted("+f+")",O(f),W=!0,Y=1,f=new WebAssembly.RuntimeError(f+". Build with -sASSERTIONS for more info."),o(f),f}function Se(f){return f.startsWith("data:application/octet-stream;base64,")}var Te;if(Te="ort-wasm-simd.wasm",!Se(Te)){var mt=Te;Te=n.locateFile?n.locateFile(mt,p):p+mt}function vt(f){if(f==Te&&E)return new Uint8Array(E);if(x)return x(f);throw"both async and sync fetching of the wasm failed"}function et(f){if(!E&&(s||l)){if(typeof fetch=="function"&&!f.startsWith("file://"))return fetch(f,{credentials:"same-origin"}).then(y=>{if(!y.ok)throw"failed to load wasm binary file at '"+f+"'";return y.arrayBuffer()}).catch(()=>vt(f));if(g)return new Promise((y,$)=>{g(f,_=>y(new Uint8Array(_)),$)})}return Promise.resolve().then(()=>vt(f))}function ut(f,y,$){return et(f).then(_=>WebAssembly.instantiate(_,y)).then(_=>_).then($,_=>{O("failed to asynchronously prepare wasm: "+_),j(_)})}function Zt(f,y){var $=Te;return E||typeof WebAssembly.instantiateStreaming!="function"||Se($)||$.startsWith("file://")||c||typeof fetch!="function"?ut($,f,y):fetch($,{credentials:"same-origin"}).then(_=>WebAssembly.instantiateStreaming(_,f).then(y,function(C){return O("wasm streaming compile failed: "+C),O("falling back to ArrayBuffer instantiation"),ut($,f,y)}))}var St,Dt={915968:f=>{n.xa("Abs",f,void 0)},916019:f=>{n.xa("Neg",f,void 0)},916070:f=>{n.xa("Floor",f,void 0)},916123:f=>{n.xa("Ceil",f,void 0)},916175:f=>{n.xa("Reciprocal",f,void 0)},916233:f=>{n.xa("Sqrt",f,void 0)},916285:f=>{n.xa("Exp",f,void 0)},916336:f=>{n.xa("Erf",f,void 0)},916387:f=>{n.xa("Sigmoid",f,void 0)},916442:f=>{n.xa("Log",f,void 0)},916493:f=>{n.xa("Sin",f,void 0)},916544:f=>{n.xa("Cos",f,void 0)},916595:f=>{n.xa("Tan",f,void 0)},916646:f=>{n.xa("Asin",f,void 0)},916698:f=>{n.xa("Acos",f,void 0)},916750:f=>{n.xa("Atan",f,void 0)},916802:f=>{n.xa("Sinh",f,void 0)},916854:f=>{n.xa("Cosh",f,void 0)},916906:f=>{n.xa("Asinh",f,void 0)},916959:f=>{n.xa("Acosh",f,void 0)},917012:f=>{n.xa("Atanh",f,void 0)},917065:f=>{n.xa("Tanh",f,void 0)},917117:f=>{n.xa("Not",f,void 0)},917168:(f,y,$)=>{n.xa("ClipV10",f,{min:y,max:$})},917240:f=>{n.xa("Clip",f,void 0)},917292:(f,y)=>{n.xa("Elu",f,{alpha:y})},917350:f=>{n.xa("Relu",f,void 0)},917402:(f,y)=>{n.xa("LeakyRelu",f,{alpha:y})},917466:(f,y)=>{n.xa("ThresholdedRelu",f,{alpha:y})},917536:(f,y)=>{n.xa("Cast",f,{to:y})},917594:f=>{n.xa("Add",f,void 0)},917645:f=>{n.xa("Sub",f,void 0)},917696:f=>{n.xa("Mul",f,void 0)},917747:f=>{n.xa("Div",f,void 0)},917798:f=>{n.xa("Pow",f,void 0)},917849:f=>{n.xa("Equal",f,void 0)},917902:f=>{n.xa("Greater",f,void 0)},917957:f=>{n.xa("GreaterOrEqual",f,void 0)},918019:f=>{n.xa("Less",f,void 0)},918071:f=>{n.xa("LessOrEqual",f,void 0)},918130:(f,y,$,_,C)=>{n.xa("ReduceMean",f,{keepDims:!!y,noopWithEmptyAxes:!!$,axes:_?Array.from(R.subarray(C>>>0,C+_>>>0)):[]})},918294:(f,y,$,_,C)=>{n.xa("ReduceMax",f,{keepDims:!!y,noopWithEmptyAxes:!!$,axes:_?Array.from(R.subarray(C>>>0,C+_>>>0)):[]})},918457:(f,y,$,_,C)=>{n.xa("ReduceMin",f,{keepDims:!!y,noopWithEmptyAxes:!!$,axes:_?Array.from(R.subarray(C>>>0,C+_>>>0)):[]})},918620:(f,y,$,_,C)=>{n.xa("ReduceProd",f,{keepDims:!!y,noopWithEmptyAxes:!!$,axes:_?Array.from(R.subarray(C>>>0,C+_>>>0)):[]})},918784:(f,y,$,_,C)=>{n.xa("ReduceSum",f,{keepDims:!!y,noopWithEmptyAxes:!!$,axes:_?Array.from(R.subarray(C>>>0,C+_>>>0)):[]})},918947:(f,y,$,_,C)=>{n.xa("ReduceL1",f,{keepDims:!!y,noopWithEmptyAxes:!!$,axes:_?Array.from(R.subarray(C>>>0,C+_>>>0)):[]})},919109:(f,y,$,_,C)=>{n.xa("ReduceL2",f,{keepDims:!!y,noopWithEmptyAxes:!!$,axes:_?Array.from(R.subarray(C>>>0,C+_>>>0)):[]})},919271:(f,y,$,_,C)=>{n.xa("ReduceLogSum",f,{keepDims:!!y,noopWithEmptyAxes:!!$,axes:_?Array.from(R.subarray(C>>>0,C+_>>>0)):[]})},919437:(f,y,$,_,C)=>{n.xa("ReduceSumSquare",f,{keepDims:!!y,noopWithEmptyAxes:!!$,axes:_?Array.from(R.subarray(C>>>0,C+_>>>0)):[]})},919606:(f,y,$,_,C)=>{n.xa("ReduceLogSumExp",f,{keepDims:!!y,noopWithEmptyAxes:!!$,axes:_?Array.from(R.subarray(C>>>0,C+_>>>0)):[]})},919775:f=>{n.xa("Where",f,void 0)},919828:(f,y,$)=>{n.xa("Transpose",f,{perm:y?Array.from(R.subarray($>>>0,$+y>>>0)):[]})},919941:(f,y,$,_,C,V,q,se,re,ce,ue,Ie,Ae,L,fe)=>{n.xa("ConvTranspose",f,{format:re?"NHWC":"NCHW",autoPad:y,dilations:[$],group:_,kernel_shape:[C],pads:[V,q],strides:[se],wIsConst:()=>!!Q[ce>>>0],outputPadding:ue?Array.from(R.subarray(Ie>>>0,Ie+ue>>>0)):[],outputShape:Ae?Array.from(R.subarray(L>>>0,L+Ae>>>0)):[],activation:gt(fe)})},920355:(f,y,$,_,C,V,q,se,re,ce,ue,Ie,Ae,L)=>{n.xa("ConvTranspose",f,{format:se?"NHWC":"NCHW",autoPad:y,dilations:Array.from(R.subarray($>>>0,$+2>>>0)),group:_,kernelShape:Array.from(R.subarray(C>>>0,C+2>>>0)),pads:Array.from(R.subarray(V>>>0,V+4>>>0)),strides:Array.from(R.subarray(q>>>0,q+2>>>0)),wIsConst:()=>!!Q[re>>>0],outputPadding:0<ce?Array.from(R.subarray(ue>>>0,ue+ce>>>0)):[],outputShape:0<Ie?Array.from(R.subarray(Ae>>>0,Ae+Ie>>>0)):[],activation:gt(L)})},920912:(f,y,$,_,C,V,q,se,re,ce,ue,Ie,Ae,L,fe)=>{n.xa("ConvTranspose",f,{format:re?"NHWC":"NCHW",autoPad:y,dilations:[$],group:_,kernel_shape:[C],pads:[V,q],strides:[se],wIsConst:()=>!!Q[ce>>>0],outputPadding:ue?Array.from(R.subarray(Ie>>>0,Ie+ue>>>0)):[],outputShape:Ae?Array.from(R.subarray(L>>>0,L+Ae>>>0)):[],activation:gt(fe)})},921326:(f,y,$,_,C,V,q,se,re,ce,ue,Ie,Ae,L)=>{n.xa("ConvTranspose",f,{format:se?"NHWC":"NCHW",autoPad:y,dilations:Array.from(R.subarray($>>>0,$+2>>>0)),group:_,kernelShape:Array.from(R.subarray(C>>>0,C+2>>>0)),pads:Array.from(R.subarray(V>>>0,V+4>>>0)),strides:Array.from(R.subarray(q>>>0,q+2>>>0)),wIsConst:()=>!!Q[re>>>0],outputPadding:0<ce?Array.from(R.subarray(ue>>>0,ue+ce>>>0)):[],outputShape:0<Ie?Array.from(R.subarray(Ae>>>0,Ae+Ie>>>0)):[],activation:gt(L)})},921883:(f,y)=>{n.xa("GlobalAveragePool",f,{format:y?"NHWC":"NCHW"})},921974:(f,y,$,_,C,V,q,se,re,ce,ue,Ie,Ae,L,fe,Oe)=>{n.xa("AveragePool",f,{format:Oe?"NHWC":"NCHW",auto_pad:y,ceil_mode:$,count_include_pad:_,storage_order:C,dilations:[V,q],kernel_shape:[se,re],pads:[ce,ue,Ie,Ae],strides:[L,fe]})},922258:(f,y)=>{n.xa("GlobalAveragePool",f,{format:y?"NHWC":"NCHW"})},922349:(f,y,$,_,C,V,q,se,re,ce,ue,Ie,Ae,L,fe,Oe)=>{n.xa("AveragePool",f,{format:Oe?"NHWC":"NCHW",auto_pad:y,ceil_mode:$,count_include_pad:_,storage_order:C,dilations:[V,q],kernel_shape:[se,re],pads:[ce,ue,Ie,Ae],strides:[L,fe]})},922633:(f,y)=>{n.xa("GlobalMaxPool",f,{format:y?"NHWC":"NCHW"})},922720:(f,y,$,_,C,V,q,se,re,ce,ue,Ie,Ae,L,fe,Oe)=>{n.xa("MaxPool",f,{format:Oe?"NHWC":"NCHW",auto_pad:y,ceil_mode:$,count_include_pad:_,storage_order:C,dilations:[V,q],kernel_shape:[se,re],pads:[ce,ue,Ie,Ae],strides:[L,fe]})},923e3:(f,y)=>{n.xa("GlobalMaxPool",f,{format:y?"NHWC":"NCHW"})},923087:(f,y,$,_,C,V,q,se,re,ce,ue,Ie,Ae,L,fe,Oe)=>{n.xa("MaxPool",f,{format:Oe?"NHWC":"NCHW",auto_pad:y,ceil_mode:$,count_include_pad:_,storage_order:C,dilations:[V,q],kernel_shape:[se,re],pads:[ce,ue,Ie,Ae],strides:[L,fe]})},923367:(f,y,$,_,C)=>{n.xa("Gemm",f,{alpha:y,beta:$,transA:_,transB:C})},923471:f=>{n.xa("MatMul",f,void 0)},923525:(f,y,$,_)=>{n.xa("ArgMax",f,{keepDims:!!y,selectLastIndex:!!$,axis:_})},923633:(f,y,$,_)=>{n.xa("ArgMin",f,{keepDims:!!y,selectLastIndex:!!$,axis:_})},923741:(f,y)=>{n.xa("Softmax",f,{axis:y})},923804:(f,y)=>{n.xa("Concat",f,{axis:y})},923864:(f,y,$,_,C)=>{n.xa("Split",f,{axis:y,numOutputs:$,splitSizes:_?Array.from(R.subarray(C>>>0,C+_>>>0)):[]})},924009:f=>{n.xa("Expand",f,void 0)},924063:(f,y)=>{n.xa("Gather",f,{axis:Number(y)})},924134:(f,y)=>{n.xa("GatherElements",f,{axis:Number(y)})},924213:(f,y,$,_,C,V,q,se,re,ce,ue)=>{n.xa("Resize",f,{antialias:y,axes:$?Array.from(R.subarray(_>>>0,_+$>>>0)):[],coordinateTransformMode:gt(C),cubicCoeffA:V,excludeOutside:q,extrapolationValue:se,keepAspectRatioPolicy:gt(re),mode:gt(ce),nearestMode:gt(ue)})},924564:(f,y,$,_,C,V,q)=>{n.xa("Slice",f,{starts:y?Array.from(R.subarray($>>>0,$+y>>>0)):[],ends:_?Array.from(R.subarray(C>>>0,C+_>>>0)):[],axes:V?Array.from(R.subarray(q>>>0,q+V>>>0)):[]})},924795:f=>{n.xa("Tile",f,void 0)},924847:(f,y,$)=>{n.xa("LayerNormalization",f,{axis:Number(y),epsilon:Number($)})},924954:(f,y,$)=>{n.xa("InstanceNormalization",f,{epsilon:y,format:$?"NHWC":"NCHW"})},925068:(f,y,$)=>{n.xa("InstanceNormalization",f,{epsilon:y,format:$?"NHWC":"NCHW"})},925182:f=>{n.xa("Range",f,void 0)},925235:(f,y)=>{n.xa("Einsum",f,{equation:gt(y)})},925316:(f,y,$,_,C)=>{n.xa("Pad",f,{mode:y,value:$,pads:_?Array.from(R.subarray(C>>>0,C+_>>>0)):[]})},925448:f=>{n.xa("Gelu",f,void 0)},925500:f=>{n.xa("BiasAdd",f,void 0)},925555:f=>{n.xa("BiasSplitGelu",f,void 0)},925616:(f,y)=>{n.xa("SkipLayerNormalization",f,{epsilon:y})},925697:(f,y,$,_,C,V,q,se,re,ce,ue,Ie,Ae)=>{n.xa("Conv",f,{format:re?"NHWC":"NCHW",auto_pad:y,dilations:[$],group:_,kernel_shape:[C],pads:V?Array.from(R.subarray(q>>>0,q+V>>>0)):[],strides:[se],w_is_const:()=>!!Q[ce>>>0],activation:gt(ue),activation_params:Ie?Array.from(We.subarray(Ae>>>0,Ae+Ie>>>0)):[]})},926078:(f,y,$,_,C,V,q,se,re,ce,ue,Ie,Ae,L,fe,Oe)=>{n.xa("Conv",f,{format:Ie?"NHWC":"NCHW",auto_pad:y,dilations:[$,_],group:C,kernel_shape:[V,q],pads:se?Array.from(R.subarray(re>>>0,re+se>>>0)):[],strides:[ce,ue],w_is_const:()=>!!Q[Ae>>>0],activation:gt(L),activation_params:fe?Array.from(We.subarray(Oe>>>0,Oe+fe>>>0)):[]})},926480:f=>{n.Ua(f)},926514:(f,y)=>n.Va(f,y,n.Fa.Wa,n.Fa.errors),926626:f=>n.Ra(f),926659:f=>n.Ta(f),926691:(f,y,$)=>{n.La(f,y,$,!0)},926730:(f,y,$)=>{n.La(f,y,$)}};function Gr(f){this.name="ExitStatus",this.message=`Program terminated with exit(${f})`,this.status=f}var hr=f=>{for(;0<f.length;)f.shift()(n)};function Ao(f){this.Ka=f-24,this.Pa=function(y){ee[this.Ka+4>>2>>>0]=y},this.Oa=function(y){ee[this.Ka+8>>2>>>0]=y},this.Ma=function(y,$){this.Na(),this.Pa(y),this.Oa($)},this.Na=function(){ee[this.Ka+16>>2>>>0]=0}}var kn=0,Qt=0,Rn=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,mr=(f,y,$)=>{y>>>=0;var _=y+$;for($=y;f[$]&&!($>=_);)++$;if(16<$-y&&f.buffer&&Rn)return Rn.decode(f.subarray(y,$));for(_="";y<$;){var C=f[y++];if(C&128){var V=f[y++]&63;if((C&224)==192)_+=String.fromCharCode((C&31)<<6|V);else{var q=f[y++]&63;C=(C&240)==224?(C&15)<<12|V<<6|q:(C&7)<<18|V<<12|q<<6|f[y++]&63,65536>C?_+=String.fromCharCode(C):(C-=65536,_+=String.fromCharCode(55296|C>>10,56320|C&1023))}}else _+=String.fromCharCode(C)}return _},gt=(f,y)=>(f>>>=0)?mr(he,f,y):"",Bn=f=>{for(var y=0,$=0;$<f.length;++$){var _=f.charCodeAt($);127>=_?y++:2047>=_?y+=2:55296<=_&&57343>=_?(y+=4,++$):y+=3}return y},dn=(f,y,$,_)=>{if($>>>=0,!(0<_))return 0;var C=$;_=$+_-1;for(var V=0;V<f.length;++V){var q=f.charCodeAt(V);if(55296<=q&&57343>=q){var se=f.charCodeAt(++V);q=65536+((q&1023)<<10)|se&1023}if(127>=q){if($>=_)break;y[$++>>>0]=q}else{if(2047>=q){if($+1>=_)break;y[$++>>>0]=192|q>>6}else{if(65535>=q){if($+2>=_)break;y[$++>>>0]=224|q>>12}else{if($+3>=_)break;y[$++>>>0]=240|q>>18,y[$++>>>0]=128|q>>12&63}y[$++>>>0]=128|q>>6&63}y[$++>>>0]=128|q&63}}return y[$>>>0]=0,$-C},Ar=f=>f%4===0&&(f%100!==0||f%400===0),gr=[0,31,60,91,121,152,182,213,244,274,305,335],fn=[0,31,59,90,120,151,181,212,243,273,304,334],Wr=f=>{var y=Bn(f)+1,$=bn(y);return $&&dn(f,he,$,y),$},Vr=[],Mn=(f,y)=>{Vr.length=0;var $;for(y>>=2;$=he[f++>>>0];)y+=$!=105&y,Vr.push($==105?R[y>>>0]:ge[y++>>>1]),++y;return Vr},pn={},Ln=()=>{if(!hn){var f={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:u||"./this.program"},y;for(y in pn)pn[y]===void 0?delete f[y]:f[y]=pn[y];var $=[];for(y in f)$.push(`${y}=${f[y]}`);hn=$}return hn},hn,yt=[null,[],[]],Nn=[31,29,31,30,31,30,31,31,30,31,30,31],mn=[31,28,31,30,31,30,31,31,30,31,30,31];function be(f){var y=Array(Bn(f)+1);return dn(f,y,0,y.length),y}function Ur(f,y,$,_){function C(L,fe,Oe){for(L=typeof L=="number"?L.toString():L||"";L.length<fe;)L=Oe[0]+L;return L}function V(L,fe){return C(L,fe,"0")}function q(L,fe){function Oe(Zn){return 0>Zn?-1:0<Zn?1:0}var vr;return(vr=Oe(L.getFullYear()-fe.getFullYear()))===0&&(vr=Oe(L.getMonth()-fe.getMonth()))===0&&(vr=Oe(L.getDate()-fe.getDate())),vr}function se(L){switch(L.getDay()){case 0:return new Date(L.getFullYear()-1,11,29);case 1:return L;case 2:return new Date(L.getFullYear(),0,3);case 3:return new Date(L.getFullYear(),0,2);case 4:return new Date(L.getFullYear(),0,1);case 5:return new Date(L.getFullYear()-1,11,31);case 6:return new Date(L.getFullYear()-1,11,30)}}function re(L){var fe=L.Da;for(L=new Date(new Date(L.Ea+1900,0,1).getTime());0<fe;){var Oe=L.getMonth(),vr=(Ar(L.getFullYear())?Nn:mn)[Oe];if(fe>vr-L.getDate())fe-=vr-L.getDate()+1,L.setDate(1),11>Oe?L.setMonth(Oe+1):(L.setMonth(0),L.setFullYear(L.getFullYear()+1));else{L.setDate(L.getDate()+fe);break}}return Oe=new Date(L.getFullYear()+1,0,4),fe=se(new Date(L.getFullYear(),0,4)),Oe=se(Oe),0>=q(fe,L)?0>=q(Oe,L)?L.getFullYear()+1:L.getFullYear():L.getFullYear()-1}f>>>=0,y>>>=0,$>>>=0,_>>>=0;var ce=R[_+40>>2>>>0];_={Za:R[_>>2>>>0],Ya:R[_+4>>2>>>0],Ga:R[_+8>>2>>>0],Ja:R[_+12>>2>>>0],Ha:R[_+16>>2>>>0],Ea:R[_+20>>2>>>0],Ca:R[_+24>>2>>>0],Da:R[_+28>>2>>>0],bb:R[_+32>>2>>>0],Xa:R[_+36>>2>>>0],$a:ce?gt(ce):""},$=gt($),ce={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ue in ce)$=$.replace(new RegExp(ue,"g"),ce[ue]);var Ie="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Ae="January February March April May June July August September October November December".split(" ");ce={"%a":L=>Ie[L.Ca].substring(0,3),"%A":L=>Ie[L.Ca],"%b":L=>Ae[L.Ha].substring(0,3),"%B":L=>Ae[L.Ha],"%C":L=>V((L.Ea+1900)/100|0,2),"%d":L=>V(L.Ja,2),"%e":L=>C(L.Ja,2," "),"%g":L=>re(L).toString().substring(2),"%G":L=>re(L),"%H":L=>V(L.Ga,2),"%I":L=>(L=L.Ga,L==0?L=12:12<L&&(L-=12),V(L,2)),"%j":L=>{for(var fe=0,Oe=0;Oe<=L.Ha-1;fe+=(Ar(L.Ea+1900)?Nn:mn)[Oe++]);return V(L.Ja+fe,3)},"%m":L=>V(L.Ha+1,2),"%M":L=>V(L.Ya,2),"%n":()=>`
`,"%p":L=>0<=L.Ga&&12>L.Ga?"AM":"PM","%S":L=>V(L.Za,2),"%t":()=>"	","%u":L=>L.Ca||7,"%U":L=>V(Math.floor((L.Da+7-L.Ca)/7),2),"%V":L=>{var fe=Math.floor((L.Da+7-(L.Ca+6)%7)/7);if(2>=(L.Ca+371-L.Da-2)%7&&fe++,fe)fe==53&&(Oe=(L.Ca+371-L.Da)%7,Oe==4||Oe==3&&Ar(L.Ea)||(fe=1));else{fe=52;var Oe=(L.Ca+7-L.Da-1)%7;(Oe==4||Oe==5&&Ar(L.Ea%400-1))&&fe++}return V(fe,2)},"%w":L=>L.Ca,"%W":L=>V(Math.floor((L.Da+7-(L.Ca+6)%7)/7),2),"%y":L=>(L.Ea+1900).toString().substring(2),"%Y":L=>L.Ea+1900,"%z":L=>{L=L.Xa;var fe=0<=L;return L=Math.abs(L)/60,(fe?"+":"-")+("0000"+(L/60*100+L%60)).slice(-4)},"%Z":L=>L.$a,"%%":()=>"%"},$=$.replace(/%%/g,"\0\0");for(ue in ce)$.includes(ue)&&($=$.replace(new RegExp(ue,"g"),ce[ue](_)));return $=$.replace(/\0\0/g,"%"),ue=be($),ue.length>y?0:(Q.set(ue,f>>>0),ue.length-1)}function Hr(f){try{f()}catch(y){j(y)}}function pa(f){var y={},$;for($ in f)(function(_){var C=f[_];y[_]=typeof C=="function"?function(){jr.push(_);try{return C.apply(null,arguments)}finally{W||(jr.pop()===_||j(),kt&&Ut===1&&jr.length===0&&(Ut=0,Hr(Kn),typeof Fibers<"u"&&Fibers.cb()))}}:C})($);return y}var Ut=0,kt=null,zn=0,jr=[],Fn={},Gn={},Wn=0,gn=null,Oo=[];function Eo(){return new Promise((f,y)=>{gn={resolve:f,reject:y}})}function Co(){var f=bn(65548),y=f+12;ee[f>>2>>>0]=y,ee[f+4>>2>>>0]=y+65536,y=jr[0];var $=Fn[y];return $===void 0&&($=Wn++,Fn[y]=$,Gn[$]=y),R[f+8>>2>>>0]=$,f}function Po(f){if(!W){if(Ut===0){var y=!1,$=!1;f((_=0)=>{if(!W&&(zn=_,y=!0,$)){Ut=2,Hr(()=>Yn(kt)),typeof Browser<"u"&&Browser.Ia.Qa&&Browser.Ia.resume(),_=!1;try{var C=(0,M[Gn[R[kt+8>>2>>>0]]])()}catch(se){C=se,_=!0}var V=!1;if(!kt){var q=gn;q&&(gn=null,(_?q.reject:q.resolve)(C),V=!0)}if(_&&!V)throw C}}),$=!0,y||(Ut=1,kt=Co(),typeof Browser<"u"&&Browser.Ia.Qa&&Browser.Ia.pause(),Hr(()=>qn(kt)))}else Ut===2?(Ut=0,Hr(Xn),Hn(kt),kt=null,Oo.forEach(_=>{if(!W)try{if(_(),!B)try{Y=Y=_=Y,B||(n.onExit&&n.onExit(_),W=!0),a(_,new Gr(_))}catch(C){C instanceof Gr||C=="unwind"||a(1,C)}}catch(C){C instanceof Gr||C=="unwind"||a(1,C)}})):j(`invalid state: ${Ut}`);return zn}}function Do(f){return Po(y=>{f().then(y)})}var br=[],yr=void 0,Vn=[];function Un(f,y){if(!yr){yr=new WeakMap;var $=Z.length;if(yr)for(var _=0;_<0+$;_++){var C=_,V=br[C];V||(C>=br.length&&(br.length=C+1),br[C]=V=Z.get(C)),(C=V)&&yr.set(C,_)}}if($=yr.get(f)||0)return $;if(Vn.length)$=Vn.pop();else{try{Z.grow(1)}catch(se){throw se instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":se}$=Z.length-1}try{_=$,Z.set(_,f),br[_]=Z.get(_)}catch(se){if(!(se instanceof TypeError))throw se;if(typeof WebAssembly.Function=="function"){_=WebAssembly.Function,C={i:"i32",j:"i64",f:"f32",d:"f64",p:"i32"},V={parameters:[],results:y[0]=="v"?[]:[C[y[0]]]};for(var q=1;q<y.length;++q)V.parameters.push(C[y[q]]);y=new _(V,f)}else{for(_=[1],C=y.slice(0,1),y=y.slice(1),V={i:127,p:127,j:126,f:125,d:124},_.push(96),q=y.length,128>q?_.push(q):_.push(q%128|128,q>>7),q=0;q<y.length;++q)_.push(V[y[q]]);C=="v"?_.push(0):_.push(1,V[C]),y=[0,97,115,109,1,0,0,0,1],C=_.length,128>C?y.push(C):y.push(C%128|128,C>>7),y.push.apply(y,_),y.push(2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0),y=new WebAssembly.Module(new Uint8Array(y)),y=new WebAssembly.Instance(y,{e:{f}}).exports.f}_=$,Z.set(_,y),br[_]=Z.get(_)}return yr.set(f,$),$}var ko={n:function(f,y,$){return Do(async()=>{await n.Sa(f,y,$)})},a:function(f,y,$){throw f>>>=0,new Ao(f).Ma(y>>>0,$>>>0),kn=f,Qt++,kn},g:function(){return 0},J:function(){},z:function(){},B:function(){},L:function(){return 0},H:function(){},C:function(){},F:function(){},m:function(){},A:function(){},x:function(){},I:function(){},y:function(){},M:()=>!0,q:function(f,y,$){f=y+2097152>>>0<4194305-!!f?(f>>>0)+4294967296*y:NaN,$>>>=0,f=new Date(1e3*f),R[$>>2>>>0]=f.getUTCSeconds(),R[$+4>>2>>>0]=f.getUTCMinutes(),R[$+8>>2>>>0]=f.getUTCHours(),R[$+12>>2>>>0]=f.getUTCDate(),R[$+16>>2>>>0]=f.getUTCMonth(),R[$+20>>2>>>0]=f.getUTCFullYear()-1900,R[$+24>>2>>>0]=f.getUTCDay(),R[$+28>>2>>>0]=(f.getTime()-Date.UTC(f.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},r:function(f,y,$){f=y+2097152>>>0<4194305-!!f?(f>>>0)+4294967296*y:NaN,$>>>=0,f=new Date(1e3*f),R[$>>2>>>0]=f.getSeconds(),R[$+4>>2>>>0]=f.getMinutes(),R[$+8>>2>>>0]=f.getHours(),R[$+12>>2>>>0]=f.getDate(),R[$+16>>2>>>0]=f.getMonth(),R[$+20>>2>>>0]=f.getFullYear()-1900,R[$+24>>2>>>0]=f.getDay(),R[$+28>>2>>>0]=(Ar(f.getFullYear())?gr:fn)[f.getMonth()]+f.getDate()-1|0,R[$+36>>2>>>0]=-(60*f.getTimezoneOffset()),y=new Date(f.getFullYear(),6,1).getTimezoneOffset();var _=new Date(f.getFullYear(),0,1).getTimezoneOffset();R[$+32>>2>>>0]=(y!=_&&f.getTimezoneOffset()==Math.min(_,y))|0},s:function(f){f>>>=0;var y=new Date(R[f+20>>2>>>0]+1900,R[f+16>>2>>>0],R[f+12>>2>>>0],R[f+8>>2>>>0],R[f+4>>2>>>0],R[f>>2>>>0],0),$=R[f+32>>2>>>0],_=y.getTimezoneOffset(),C=new Date(y.getFullYear(),6,1).getTimezoneOffset(),V=new Date(y.getFullYear(),0,1).getTimezoneOffset(),q=Math.min(V,C);return 0>$?R[f+32>>2>>>0]=+(C!=V&&q==_):0<$!=(q==_)&&(C=Math.max(V,C),y.setTime(y.getTime()+6e4*((0<$?q:C)-_))),R[f+24>>2>>>0]=y.getDay(),R[f+28>>2>>>0]=(Ar(y.getFullYear())?gr:fn)[y.getMonth()]+y.getDate()-1|0,R[f>>2>>>0]=y.getSeconds(),R[f+4>>2>>>0]=y.getMinutes(),R[f+8>>2>>>0]=y.getHours(),R[f+12>>2>>>0]=y.getDate(),R[f+16>>2>>>0]=y.getMonth(),R[f+20>>2>>>0]=y.getYear(),f=y.getTime()/1e3,jn((St=f,1<=+Math.abs(St)?0<St?+Math.floor(St/4294967296)>>>0:~~+Math.ceil((St-+(~~St>>>0))/4294967296)>>>0:0)),f>>>0},o:function(){return-52},p:function(){},v:function(f,y,$){function _(re){return(re=re.toTimeString().match(/\(([A-Za-z ]+)\)$/))?re[1]:"GMT"}$>>>=0;var C=new Date().getFullYear(),V=new Date(C,0,1),q=new Date(C,6,1);C=V.getTimezoneOffset();var se=q.getTimezoneOffset();ee[f>>>0>>2>>>0]=60*Math.max(C,se),R[y>>>0>>2>>>0]=+(C!=se),f=_(V),y=_(q),f=Wr(f),y=Wr(y),se<C?(ee[$>>2>>>0]=f,ee[$+4>>2>>>0]=y):(ee[$>>2>>>0]=y,ee[$+4>>2>>>0]=f)},e:()=>{j("")},b:function(f,y,$){return f>>>=0,y=Mn(y>>>0,$>>>0),Dt[f].apply(null,y)},j:function(f,y,$){return f>>>=0,y=Mn(y>>>0,$>>>0),Dt[f].apply(null,y)},h:function(){return Date.now()},w:function(){return 4294901760},c:()=>performance.now(),K:function(f,y,$){return y>>>=0,he.copyWithin(f>>>0>>>0,y>>>0,y+($>>>0)>>>0)},u:function(f){f>>>=0;var y=he.length;if(4294901760<f)return!1;for(var $=1;4>=$;$*=2){var _=y*(1+.2/$);_=Math.min(_,f+100663296);var C=Math;_=Math.max(f,_);e:{C=C.min.call(C,4294901760,_+(65536-_%65536)%65536)-z.buffer.byteLength+65535>>>16;try{z.grow(C),Ne();var V=1;break e}catch{}V=void 0}if(V)return!0}return!1},D:function(f,y){f>>>=0,y>>>=0;var $=0;return Ln().forEach(function(_,C){var V=y+$;for(C=ee[f+4*C>>2>>>0]=V,V=0;V<_.length;++V)Q[C++>>0>>>0]=_.charCodeAt(V);Q[C>>0>>>0]=0,$+=_.length+1}),0},E:function(f,y){f>>>=0,y>>>=0;var $=Ln();ee[f>>2>>>0]=$.length;var _=0;return $.forEach(function(C){_+=C.length+1}),ee[y>>2>>>0]=_,0},f:()=>52,l:function(){return 52},t:function(){return 70},k:function(f,y,$,_){y>>>=0,$>>>=0,_>>>=0;for(var C=0,V=0;V<$;V++){var q=ee[y>>2>>>0],se=ee[y+4>>2>>>0];y+=8;for(var re=0;re<se;re++){var ce=he[q+re>>>0],ue=yt[f];ce===0||ce===10?((f===1?S:O)(mr(ue,0)),ue.length=0):ue.push(ce)}C+=se}return ee[_>>2>>>0]=C,0},G:Ur,d:function(f,y,$,_){return Ur(f>>>0,y>>>0,$>>>0,_>>>0)},i:function(f,y,$,_){let C=Z.length;f=new Uint8Array(he.slice(f+y,f+$));try{var V=new WebAssembly.Module(f),q=new WebAssembly.Instance(V,{env:{memory:z}}),se;for(se in q.exports)Un(q.exports[se]);return C<Z.length?C:_}catch(re){return console.log(re),_}}};(function(){function f($){if($=$.exports,$=pa($),M=$=Ro($),z=M.N,Ne(),Z=M.sa,Qe.unshift(M.O),Et--,n.monitorRunDependencies&&n.monitorRunDependencies(Et),Et==0&&(Ct!==null&&(clearInterval(Ct),Ct=null),Pt)){var _=Pt;Pt=null,_()}return $}var y={a:ko};if(Et++,n.monitorRunDependencies&&n.monitorRunDependencies(Et),n.instantiateWasm)try{return n.instantiateWasm(y,f)}catch($){O("Module.instantiateWasm callback failed with error: "+$),o($)}return Zt(y,function($){f($.instance)}).catch(o),{}})(),n._OrtInit=(f,y)=>(n._OrtInit=M.P)(f,y),n._OrtGetLastError=(f,y)=>(n._OrtGetLastError=M.Q)(f,y),n._OrtCreateSessionOptions=(f,y,$,_,C,V,q,se,re,ce)=>(n._OrtCreateSessionOptions=M.R)(f,y,$,_,C,V,q,se,re,ce),n._OrtAppendExecutionProvider=(f,y)=>(n._OrtAppendExecutionProvider=M.S)(f,y),n._OrtAddFreeDimensionOverride=(f,y,$)=>(n._OrtAddFreeDimensionOverride=M.T)(f,y,$),n._OrtAddSessionConfigEntry=(f,y,$)=>(n._OrtAddSessionConfigEntry=M.U)(f,y,$),n._OrtReleaseSessionOptions=f=>(n._OrtReleaseSessionOptions=M.V)(f),n._OrtCreateSession=(f,y,$)=>(n._OrtCreateSession=M.W)(f,y,$),n._OrtReleaseSession=f=>(n._OrtReleaseSession=M.X)(f),n._OrtGetInputOutputCount=(f,y,$)=>(n._OrtGetInputOutputCount=M.Y)(f,y,$),n._OrtGetInputName=(f,y)=>(n._OrtGetInputName=M.Z)(f,y),n._OrtGetOutputName=(f,y)=>(n._OrtGetOutputName=M._)(f,y),n._OrtFree=f=>(n._OrtFree=M.$)(f),n._OrtCreateTensor=(f,y,$,_,C,V)=>(n._OrtCreateTensor=M.aa)(f,y,$,_,C,V),n._OrtGetTensorData=(f,y,$,_,C)=>(n._OrtGetTensorData=M.ba)(f,y,$,_,C),n._OrtReleaseTensor=f=>(n._OrtReleaseTensor=M.ca)(f),n._OrtCreateRunOptions=(f,y,$,_)=>(n._OrtCreateRunOptions=M.da)(f,y,$,_),n._OrtAddRunConfigEntry=(f,y,$)=>(n._OrtAddRunConfigEntry=M.ea)(f,y,$),n._OrtReleaseRunOptions=f=>(n._OrtReleaseRunOptions=M.fa)(f),n._OrtCreateBinding=f=>(n._OrtCreateBinding=M.ga)(f),n._OrtBindInput=(f,y,$)=>(n._OrtBindInput=M.ha)(f,y,$),n._OrtBindOutput=(f,y,$,_)=>(n._OrtBindOutput=M.ia)(f,y,$,_),n._OrtClearBoundOutputs=f=>(n._OrtClearBoundOutputs=M.ja)(f),n._OrtReleaseBinding=f=>(n._OrtReleaseBinding=M.ka)(f),n._OrtRunWithBinding=(f,y,$,_,C)=>(n._OrtRunWithBinding=M.la)(f,y,$,_,C),n._OrtRun=(f,y,$,_,C,V,q,se)=>(n._OrtRun=M.ma)(f,y,$,_,C,V,q,se),n._OrtEndProfiling=f=>(n._OrtEndProfiling=M.na)(f),n._JsepOutput=(f,y,$)=>(n._JsepOutput=M.oa)(f,y,$),n._JsepGetNodeName=f=>(n._JsepGetNodeName=M.pa)(f);var bn=n._malloc=f=>(bn=n._malloc=M.qa)(f),Hn=n._free=f=>(Hn=n._free=M.ra)(f),jn=f=>(jn=M.ta)(f),yn=()=>(yn=M.ua)(),qr=f=>(qr=M.va)(f),xr=f=>(xr=M.wa)(f),qn=f=>(qn=M.ya)(f),Kn=()=>(Kn=M.za)(),Yn=f=>(Yn=M.Aa)(f),Xn=()=>(Xn=M.Ba)();n.___start_em_js=926763,n.___stop_em_js=927536;function Ro(f){f=Object.assign({},f);var y=_=>()=>_()>>>0,$=_=>C=>_(C)>>>0;return f.__errno_location=y(f.__errno_location),f.malloc=$(f.malloc),f.stackSave=y(f.stackSave),f.stackAlloc=$(f.stackAlloc),f}n.stackAlloc=xr,n.stackSave=yn,n.stackRestore=qr,n.addFunction=Un,n.UTF8ToString=gt,n.stringToUTF8=(f,y,$)=>dn(f,he,y,$),n.lengthBytesUTF8=Bn;var Or;Pt=function f(){Or||Jn(),Or||(Pt=f)};function Jn(){function f(){if(!Or&&(Or=!0,n.calledRun=!0,!W)){if(hr(Qe),t(n),n.onRuntimeInitialized&&n.onRuntimeInitialized(),n.postRun)for(typeof n.postRun=="function"&&(n.postRun=[n.postRun]);n.postRun.length;){var y=n.postRun.shift();Ye.unshift(y)}hr(Ye)}}if(!(0<Et)){if(n.preRun)for(typeof n.preRun=="function"&&(n.preRun=[n.preRun]);n.preRun.length;)Ze();hr(Ve),0<Et||(n.setStatus?(n.setStatus("Running..."),setTimeout(function(){setTimeout(function(){n.setStatus("")},1),f()},1)):f())}}if(n.preInit)for(typeof n.preInit=="function"&&(n.preInit=[n.preInit]);0<n.preInit.length;)n.preInit.pop()();return Jn(),e.ready}})();typeof yh=="object"&&typeof Ds=="object"?Ds.exports=bh:typeof define=="function"&&define.amd&&define([],()=>bh)});var vh=Ue(()=>{});var wh=Ue(()=>{});var Th={};Cr(Th,{cpus:()=>uw});var uw,$h=D(()=>{uw=void 0});var _h=Ue((Ih,ks)=>{"use strict";var Sh=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e={}){function n(){return Ne.buffer!=Ze.buffer&&Te(),Ze}function t(){return Ne.buffer!=Ze.buffer&&Te(),Et}function o(){return Ne.buffer!=Ze.buffer&&Te(),Ct}function i(){return Ne.buffer!=Ze.buffer&&Te(),Pt}function u(){return Ne.buffer!=Ze.buffer&&Te(),j}function a(){return Ne.buffer!=Ze.buffer&&Te(),Se}var s=e,l,c;s.ready=new Promise((d,m)=>{l=d,c=m}),s.jsepInit=(d,m,v,I,k,F,U,me)=>{s.Qb=d,s.wb=m,s.yb=v,s.jb=I,s.xb=k,s.Ea=F,s.zb=U,s.Ab=me,m=(de,le,pe)=>(...Ee)=>{let Be=er,N=le?.();Ee=de(...Ee);let xe=le?.();return N!==xe&&(de=xe,pe(N),le=pe=null),er!=Be?wy():Ee},v=de=>async(...le)=>{try{if(s.bb)throw Error("Session already started");let pe=s.bb={Fb:le[0],errors:[]},Ee=await de(...le);if(s.bb!==pe)throw Error("Session mismatch");d.flush();let Be=pe.errors;if(0<Be.length){let N=await Promise.all(Be);if(N=N.filter(xe=>xe),0<N.length)throw Error(N.join(`
`))}return Ee}finally{s.bb=null}},s._OrtRun=v(m(s._OrtRun,()=>s._OrtRun,de=>s._OrtRun=de)),s._OrtRunWithBinding=v(m(s._OrtRunWithBinding,()=>s._OrtRunWithBinding,de=>s._OrtRunWithBinding=de)),s._OrtBindInput=m(s._OrtBindInput,()=>s._OrtBindInput,de=>s._OrtBindInput=de),s.jsepRegisterBuffer=(de,le,pe,Ee)=>d.registerBuffer(de,le,pe,Ee),s.jsepUnregisterBuffers=de=>{d.unregisterBuffers(de)},s.jsepGetBuffer=de=>d.getBuffer(de),s.jsepCreateDownloader=(de,le,pe)=>d.createDownloader(de,le,pe)};var p=Object.assign({},s),h="./this.program",g=(d,m)=>{throw m},x=typeof window=="object",b=typeof importScripts=="function",w=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",S=s.ENVIRONMENT_IS_PTHREAD||!1,O="";function E(d){return s.locateFile?s.locateFile(d,O):O+d}var B,z,M;if(w){var W=(Es(),wr(Os)),Y=(Ps(),wr(Cs));O=b?Y.dirname(O)+"/":__dirname+"/",B=(m,v)=>(m=m.startsWith("file://")?new URL(m):Y.normalize(m),W.readFileSync(m,v?void 0:"utf8")),M=m=>(m=B(m,!0),m.buffer||(m=new Uint8Array(m)),m),z=(m,v,I,k=!0)=>{m=m.startsWith("file://")?new URL(m):Y.normalize(m),W.readFile(m,k?void 0:"utf8",(F,U)=>{F?I(F):v(k?U.buffer:U)})},!s.thisProgram&&1<process.argv.length&&(h=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),g=(m,v)=>{throw process.exitCode=m,v},s.inspect=()=>"[Emscripten Module object]";let d;try{d=vh()}catch(m){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),m}global.Worker=d.Worker}else(x||b)&&(b?O=self.location.href:typeof document<"u"&&document.currentScript&&(O=document.currentScript.src),typeof r<"u"&&r&&(O=r),O.indexOf("blob:")!==0?O=O.substr(0,O.replace(/[?#].*/,"").lastIndexOf("/")+1):O="",w||(B=d=>{var m=new XMLHttpRequest;return m.open("GET",d,!1),m.send(null),m.responseText},b&&(M=d=>{var m=new XMLHttpRequest;return m.open("GET",d,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),z=(d,m,v)=>{var I=new XMLHttpRequest;I.open("GET",d,!0),I.responseType="arraybuffer",I.onload=()=>{I.status==200||I.status==0&&I.response?m(I.response):v()},I.onerror=v,I.send(null)}));w&&typeof performance>"u"&&(global.performance=wh().performance);var Q=console.log.bind(console),he=console.error.bind(console);w&&(Q=(...d)=>W.writeSync(1,d.join(" ")+`
`),he=(...d)=>W.writeSync(2,d.join(" ")+`
`));var R=s.print||Q,ee=s.printErr||he;Object.assign(s,p),p=null,s.thisProgram&&(h=s.thisProgram),s.quit&&(g=s.quit);var We;s.wasmBinary&&(We=s.wasmBinary);var ge=s.noExitRuntime||!0;typeof WebAssembly!="object"&&Qt("no native wasm support detected");var Ne,Z,Ve,Qe=!1,Ye,Ze,Et,Ct,Pt,j,Se;function Te(){var d=Ne.buffer;s.HEAP8=Ze=new Int8Array(d),s.HEAP16=new Int16Array(d),s.HEAP32=Ct=new Int32Array(d),s.HEAPU8=Et=new Uint8Array(d),s.HEAPU16=new Uint16Array(d),s.HEAPU32=Pt=new Uint32Array(d),s.HEAPF32=j=new Float32Array(d),s.HEAPF64=Se=new Float64Array(d)}var mt=s.INITIAL_MEMORY||16777216;if(5242880<=mt||Qt("INITIAL_MEMORY should be larger than STACK_SIZE, was "+mt+"! (STACK_SIZE=5242880)"),S)Ne=s.wasmMemory;else if(s.wasmMemory)Ne=s.wasmMemory;else if(Ne=new WebAssembly.Memory({initial:mt/65536,maximum:65536,shared:!0}),!(Ne.buffer instanceof SharedArrayBuffer))throw ee("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),w&&ee("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");Te(),mt=Ne.buffer.byteLength;var vt=[],et=[],ut=[],Zt=0;function St(){return ge||0<Zt}var Dt=0,Gr=null,hr=null;function Ao(){Dt++,s.monitorRunDependencies&&s.monitorRunDependencies(Dt)}function kn(){if(Dt--,s.monitorRunDependencies&&s.monitorRunDependencies(Dt),Dt==0&&(Gr!==null&&(clearInterval(Gr),Gr=null),hr)){var d=hr;hr=null,d()}}function Qt(d){throw s.onAbort&&s.onAbort(d),d="Aborted("+d+")",ee(d),Qe=!0,Ye=1,d=new WebAssembly.RuntimeError(d+". Build with -sASSERTIONS for more info."),c(d),d}function Rn(d){return d.startsWith("data:application/octet-stream;base64,")}var mr;mr="ort-wasm-simd-threaded.wasm",Rn(mr)||(mr=E(mr));function gt(d){if(d==mr&&We)return new Uint8Array(We);if(M)return M(d);throw"both async and sync fetching of the wasm failed"}function Bn(d){if(!We&&(x||b)){if(typeof fetch=="function"&&!d.startsWith("file://"))return fetch(d,{credentials:"same-origin"}).then(m=>{if(!m.ok)throw"failed to load wasm binary file at '"+d+"'";return m.arrayBuffer()}).catch(()=>gt(d));if(z)return new Promise((m,v)=>{z(d,I=>m(new Uint8Array(I)),v)})}return Promise.resolve().then(()=>gt(d))}function dn(d,m,v){return Bn(d).then(I=>WebAssembly.instantiate(I,m)).then(I=>I).then(v,I=>{ee("failed to asynchronously prepare wasm: "+I),Qt(I)})}function Ar(d,m){var v=mr;return We||typeof WebAssembly.instantiateStreaming!="function"||Rn(v)||v.startsWith("file://")||w||typeof fetch!="function"?dn(v,d,m):fetch(v,{credentials:"same-origin"}).then(I=>WebAssembly.instantiateStreaming(I,d).then(m,function(k){return ee("wasm streaming compile failed: "+k),ee("falling back to ArrayBuffer instantiation"),dn(v,d,m)}))}var gr,fn={1421856:d=>{s.Ea("Abs",d,void 0)},1421907:d=>{s.Ea("Neg",d,void 0)},1421958:d=>{s.Ea("Floor",d,void 0)},1422011:d=>{s.Ea("Ceil",d,void 0)},1422063:d=>{s.Ea("Reciprocal",d,void 0)},1422121:d=>{s.Ea("Sqrt",d,void 0)},1422173:d=>{s.Ea("Exp",d,void 0)},1422224:d=>{s.Ea("Erf",d,void 0)},1422275:d=>{s.Ea("Sigmoid",d,void 0)},1422330:d=>{s.Ea("Log",d,void 0)},1422381:d=>{s.Ea("Sin",d,void 0)},1422432:d=>{s.Ea("Cos",d,void 0)},1422483:d=>{s.Ea("Tan",d,void 0)},1422534:d=>{s.Ea("Asin",d,void 0)},1422586:d=>{s.Ea("Acos",d,void 0)},1422638:d=>{s.Ea("Atan",d,void 0)},1422690:d=>{s.Ea("Sinh",d,void 0)},1422742:d=>{s.Ea("Cosh",d,void 0)},1422794:d=>{s.Ea("Asinh",d,void 0)},1422847:d=>{s.Ea("Acosh",d,void 0)},1422900:d=>{s.Ea("Atanh",d,void 0)},1422953:d=>{s.Ea("Tanh",d,void 0)},1423005:d=>{s.Ea("Not",d,void 0)},1423056:(d,m,v)=>{s.Ea("ClipV10",d,{min:m,max:v})},1423128:d=>{s.Ea("Clip",d,void 0)},1423180:(d,m)=>{s.Ea("Elu",d,{alpha:m})},1423238:d=>{s.Ea("Relu",d,void 0)},1423290:(d,m)=>{s.Ea("LeakyRelu",d,{alpha:m})},1423354:(d,m)=>{s.Ea("ThresholdedRelu",d,{alpha:m})},1423424:d=>{s.zb(d)},1423458:(d,m)=>s.Ab(d,m,s.bb.Fb,s.bb.errors),1423570:(d,m)=>{s.Ea("Cast",d,{to:m})},1423628:d=>{s.Ea("Add",d,void 0)},1423679:d=>{s.Ea("Sub",d,void 0)},1423730:d=>{s.Ea("Mul",d,void 0)},1423781:d=>{s.Ea("Div",d,void 0)},1423832:d=>{s.Ea("Pow",d,void 0)},1423883:d=>{s.Ea("Equal",d,void 0)},1423936:d=>{s.Ea("Greater",d,void 0)},1423991:d=>{s.Ea("GreaterOrEqual",d,void 0)},1424053:d=>{s.Ea("Less",d,void 0)},1424105:d=>{s.Ea("LessOrEqual",d,void 0)},1424164:(d,m,v,I,k)=>{s.Ea("ReduceMean",d,{keepDims:!!m,noopWithEmptyAxes:!!v,axes:I?Array.from(o().subarray(k>>>0,k+I>>>0)):[]})},1424328:(d,m,v,I,k)=>{s.Ea("ReduceMax",d,{keepDims:!!m,noopWithEmptyAxes:!!v,axes:I?Array.from(o().subarray(k>>>0,k+I>>>0)):[]})},1424491:(d,m,v,I,k)=>{s.Ea("ReduceMin",d,{keepDims:!!m,noopWithEmptyAxes:!!v,axes:I?Array.from(o().subarray(k>>>0,k+I>>>0)):[]})},1424654:(d,m,v,I,k)=>{s.Ea("ReduceProd",d,{keepDims:!!m,noopWithEmptyAxes:!!v,axes:I?Array.from(o().subarray(k>>>0,k+I>>>0)):[]})},1424818:(d,m,v,I,k)=>{s.Ea("ReduceSum",d,{keepDims:!!m,noopWithEmptyAxes:!!v,axes:I?Array.from(o().subarray(k>>>0,k+I>>>0)):[]})},1424981:(d,m,v,I,k)=>{s.Ea("ReduceL1",d,{keepDims:!!m,noopWithEmptyAxes:!!v,axes:I?Array.from(o().subarray(k>>>0,k+I>>>0)):[]})},1425143:(d,m,v,I,k)=>{s.Ea("ReduceL2",d,{keepDims:!!m,noopWithEmptyAxes:!!v,axes:I?Array.from(o().subarray(k>>>0,k+I>>>0)):[]})},1425305:(d,m,v,I,k)=>{s.Ea("ReduceLogSum",d,{keepDims:!!m,noopWithEmptyAxes:!!v,axes:I?Array.from(o().subarray(k>>>0,k+I>>>0)):[]})},1425471:(d,m,v,I,k)=>{s.Ea("ReduceSumSquare",d,{keepDims:!!m,noopWithEmptyAxes:!!v,axes:I?Array.from(o().subarray(k>>>0,k+I>>>0)):[]})},1425640:(d,m,v,I,k)=>{s.Ea("ReduceLogSumExp",d,{keepDims:!!m,noopWithEmptyAxes:!!v,axes:I?Array.from(o().subarray(k>>>0,k+I>>>0)):[]})},1425809:d=>{s.Ea("Where",d,void 0)},1425862:(d,m,v)=>{s.Ea("Transpose",d,{perm:m?Array.from(o().subarray(v>>>0,v+m>>>0)):[]})},1425975:(d,m,v,I,k,F,U,me,de,le,pe,Ee,Be)=>{s.Ea("Conv",d,{format:de?"NHWC":"NCHW",auto_pad:m,dilations:[v],group:I,kernel_shape:[k],pads:F?Array.from(o().subarray(U>>>0,U+F>>>0)):[],strides:[me],w_is_const:()=>!!n()[le>>>0],activation:yt(pe),activation_params:Ee?Array.from(u().subarray(Be>>>0,Be+Ee>>>0)):[]})},1426356:(d,m,v,I,k,F,U,me,de,le,pe,Ee,Be,N,xe,De)=>{s.Ea("Conv",d,{format:Ee?"NHWC":"NCHW",auto_pad:m,dilations:[v,I],group:k,kernel_shape:[F,U],pads:me?Array.from(o().subarray(de>>>0,de+me>>>0)):[],strides:[le,pe],w_is_const:()=>!!n()[Be>>>0],activation:yt(N),activation_params:xe?Array.from(u().subarray(De>>>0,De+xe>>>0)):[]})},1426758:(d,m,v,I,k,F,U,me,de,le,pe,Ee,Be,N,xe)=>{s.Ea("ConvTranspose",d,{format:de?"NHWC":"NCHW",autoPad:m,dilations:[v],group:I,kernel_shape:[k],pads:[F,U],strides:[me],wIsConst:()=>!!n()[le>>>0],outputPadding:pe?Array.from(o().subarray(Ee>>>0,Ee+pe>>>0)):[],outputShape:Be?Array.from(o().subarray(N>>>0,N+Be>>>0)):[],activation:yt(xe)})},1427172:(d,m,v,I,k,F,U,me,de,le,pe,Ee,Be,N)=>{s.Ea("ConvTranspose",d,{format:me?"NHWC":"NCHW",autoPad:m,dilations:Array.from(o().subarray(v>>>0,v+2>>>0)),group:I,kernelShape:Array.from(o().subarray(k>>>0,k+2>>>0)),pads:Array.from(o().subarray(F>>>0,F+4>>>0)),strides:Array.from(o().subarray(U>>>0,U+2>>>0)),wIsConst:()=>!!n()[de>>>0],outputPadding:0<le?Array.from(o().subarray(pe>>>0,pe+le>>>0)):[],outputShape:0<Ee?Array.from(o().subarray(Be>>>0,Be+Ee>>>0)):[],activation:yt(N)})},1427729:(d,m,v,I,k,F,U,me,de,le,pe,Ee,Be,N,xe)=>{s.Ea("ConvTranspose",d,{format:de?"NHWC":"NCHW",autoPad:m,dilations:[v],group:I,kernel_shape:[k],pads:[F,U],strides:[me],wIsConst:()=>!!n()[le>>>0],outputPadding:pe?Array.from(o().subarray(Ee>>>0,Ee+pe>>>0)):[],outputShape:Be?Array.from(o().subarray(N>>>0,N+Be>>>0)):[],activation:yt(xe)})},1428143:(d,m,v,I,k,F,U,me,de,le,pe,Ee,Be,N)=>{s.Ea("ConvTranspose",d,{format:me?"NHWC":"NCHW",autoPad:m,dilations:Array.from(o().subarray(v>>>0,v+2>>>0)),group:I,kernelShape:Array.from(o().subarray(k>>>0,k+2>>>0)),pads:Array.from(o().subarray(F>>>0,F+4>>>0)),strides:Array.from(o().subarray(U>>>0,U+2>>>0)),wIsConst:()=>!!n()[de>>>0],outputPadding:0<le?Array.from(o().subarray(pe>>>0,pe+le>>>0)):[],outputShape:0<Ee?Array.from(o().subarray(Be>>>0,Be+Ee>>>0)):[],activation:yt(N)})},1428700:(d,m)=>{s.Ea("GlobalAveragePool",d,{format:m?"NHWC":"NCHW"})},1428791:(d,m,v,I,k,F,U,me,de,le,pe,Ee,Be,N,xe,De)=>{s.Ea("AveragePool",d,{format:De?"NHWC":"NCHW",auto_pad:m,ceil_mode:v,count_include_pad:I,storage_order:k,dilations:[F,U],kernel_shape:[me,de],pads:[le,pe,Ee,Be],strides:[N,xe]})},1429075:(d,m)=>{s.Ea("GlobalAveragePool",d,{format:m?"NHWC":"NCHW"})},1429166:(d,m,v,I,k,F,U,me,de,le,pe,Ee,Be,N,xe,De)=>{s.Ea("AveragePool",d,{format:De?"NHWC":"NCHW",auto_pad:m,ceil_mode:v,count_include_pad:I,storage_order:k,dilations:[F,U],kernel_shape:[me,de],pads:[le,pe,Ee,Be],strides:[N,xe]})},1429450:(d,m)=>{s.Ea("GlobalMaxPool",d,{format:m?"NHWC":"NCHW"})},1429537:(d,m,v,I,k,F,U,me,de,le,pe,Ee,Be,N,xe,De)=>{s.Ea("MaxPool",d,{format:De?"NHWC":"NCHW",auto_pad:m,ceil_mode:v,count_include_pad:I,storage_order:k,dilations:[F,U],kernel_shape:[me,de],pads:[le,pe,Ee,Be],strides:[N,xe]})},1429817:(d,m)=>{s.Ea("GlobalMaxPool",d,{format:m?"NHWC":"NCHW"})},1429904:(d,m,v,I,k,F,U,me,de,le,pe,Ee,Be,N,xe,De)=>{s.Ea("MaxPool",d,{format:De?"NHWC":"NCHW",auto_pad:m,ceil_mode:v,count_include_pad:I,storage_order:k,dilations:[F,U],kernel_shape:[me,de],pads:[le,pe,Ee,Be],strides:[N,xe]})},1430184:(d,m,v,I,k)=>{s.Ea("Gemm",d,{alpha:m,beta:v,transA:I,transB:k})},1430288:d=>{s.Ea("MatMul",d,void 0)},1430342:(d,m,v,I)=>{s.Ea("ArgMax",d,{keepDims:!!m,selectLastIndex:!!v,axis:I})},1430450:(d,m,v,I)=>{s.Ea("ArgMin",d,{keepDims:!!m,selectLastIndex:!!v,axis:I})},1430558:(d,m)=>{s.Ea("Softmax",d,{axis:m})},1430621:(d,m)=>{s.Ea("Concat",d,{axis:m})},1430681:(d,m,v,I,k)=>{s.Ea("Split",d,{axis:m,numOutputs:v,splitSizes:I?Array.from(o().subarray(k>>>0,k+I>>>0)):[]})},1430826:d=>{s.Ea("Expand",d,void 0)},1430880:(d,m)=>{s.Ea("Gather",d,{axis:Number(m)})},1430951:(d,m)=>{s.Ea("GatherElements",d,{axis:Number(m)})},1431030:(d,m,v,I,k,F,U,me,de,le,pe)=>{s.Ea("Resize",d,{antialias:m,axes:v?Array.from(o().subarray(I>>>0,I+v>>>0)):[],coordinateTransformMode:yt(k),cubicCoeffA:F,excludeOutside:U,extrapolationValue:me,keepAspectRatioPolicy:yt(de),mode:yt(le),nearestMode:yt(pe)})},1431381:(d,m,v,I,k,F,U)=>{s.Ea("Slice",d,{starts:m?Array.from(o().subarray(v>>>0,v+m>>>0)):[],ends:I?Array.from(o().subarray(k>>>0,k+I>>>0)):[],axes:F?Array.from(o().subarray(U>>>0,U+F>>>0)):[]})},1431612:d=>{s.Ea("Tile",d,void 0)},1431664:(d,m,v)=>{s.Ea("LayerNormalization",d,{axis:Number(m),epsilon:Number(v)})},1431771:(d,m,v)=>{s.Ea("InstanceNormalization",d,{epsilon:m,format:v?"NHWC":"NCHW"})},1431885:(d,m,v)=>{s.Ea("InstanceNormalization",d,{epsilon:m,format:v?"NHWC":"NCHW"})},1431999:d=>{s.Ea("Range",d,void 0)},1432052:(d,m)=>{s.Ea("Einsum",d,{equation:yt(m)})},1432133:(d,m,v,I,k)=>{s.Ea("Pad",d,{mode:m,value:v,pads:I?Array.from(o().subarray(k>>>0,k+I>>>0)):[]})},1432265:d=>{s.Ea("Gelu",d,void 0)},1432317:d=>{s.Ea("BiasAdd",d,void 0)},1432372:d=>{s.Ea("BiasSplitGelu",d,void 0)},1432433:(d,m)=>{s.Ea("SkipLayerNormalization",d,{epsilon:m})},1432514:d=>s.wb(d),1432547:d=>s.yb(d),1432579:(d,m,v)=>{s.jb(d,m,v,!0)},1432618:(d,m,v)=>{s.jb(d,m,v)}};function Wr(d){this.name="ExitStatus",this.message=`Program terminated with exit(${d})`,this.status=d}function Vr(d){d.terminate(),d.onmessage=()=>{}}function Mn(d){(d=be.Qa[d])||Qt(),be.Eb(d)}function pn(d){var m=be.tb();if(!m)return 6;be.Ya.push(m),be.Qa[d.Xa]=m,m.Xa=d.Xa;var v={cmd:"run",start_routine:d.Gb,arg:d.rb,pthread_ptr:d.Xa};return w&&m.unref(),m.postMessage(v,d.Mb),0}var Ln=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,hn=(d,m,v)=>{m>>>=0;var I=m+v;for(v=m;d[v]&&!(v>=I);)++v;if(16<v-m&&d.buffer&&Ln)return Ln.decode(d.buffer instanceof SharedArrayBuffer?d.slice(m,v):d.subarray(m,v));for(I="";m<v;){var k=d[m++];if(k&128){var F=d[m++]&63;if((k&224)==192)I+=String.fromCharCode((k&31)<<6|F);else{var U=d[m++]&63;k=(k&240)==224?(k&15)<<12|F<<6|U:(k&7)<<18|F<<12|U<<6|d[m++]&63,65536>k?I+=String.fromCharCode(k):(k-=65536,I+=String.fromCharCode(55296|k>>10,56320|k&1023))}}else I+=String.fromCharCode(k)}return I},yt=(d,m)=>(d>>>=0)?hn(t(),d,m):"";function Nn(d){if(S)return y(1,1,d);Ye=d,St()||(be.Hb(),s.onExit&&s.onExit(d),Qe=!0),g(d,new Wr(d))}var mn=d=>{if(Ye=d,S)throw Hr(d),"unwind";Nn(d)},be={ab:[],Ya:[],mb:[],Qa:{},gb:function(){S?be.vb():be.ub()},ub:function(){vt.unshift(()=>{Ao(),be.Bb(()=>kn())})},vb:function(){be.receiveObjectTransfer=be.Db,be.threadInitTLS=be.lb,be.setExitStatus=be.kb,ge=!1},kb:function(d){Ye=d},Sb:["$terminateWorker"],Hb:function(){for(var d of be.Ya)Vr(d);for(d of be.ab)Vr(d);be.ab=[],be.Ya=[],be.Qa=[]},Eb:function(d){var m=d.Xa;delete be.Qa[m],be.ab.push(d),be.Ya.splice(be.Ya.indexOf(d),1),d.Xa=0,ga(m)},Db:function(){},lb:function(){be.mb.forEach(d=>d())},Cb:d=>new Promise(m=>{d.onmessage=F=>{F=F.data;var U=F.cmd;if(F.targetThread&&F.targetThread!=Lo()){var me=be.Qa[F.Rb];me?me.postMessage(F,F.transferList):ee('Internal error! Worker sent a message "'+U+'" to target pthread '+F.targetThread+", but that thread no longer exists!")}else U==="checkMailbox"?qr():U==="spawnThread"?pn(F):U==="cleanupThread"?Mn(F.thread):U==="killThread"?(F=F.thread,U=be.Qa[F],delete be.Qa[F],Vr(U),ga(F),be.Ya.splice(be.Ya.indexOf(U),1),U.Xa=0):U==="cancelThread"?be.Qa[F.thread].postMessage({cmd:"cancel"}):U==="loaded"?(d.loaded=!0,m(d)):U==="alert"?alert("Thread "+F.threadId+": "+F.text):F.target==="setimmediate"?d.postMessage(F):U==="callHandler"?s[F.handler](...F.args):U&&ee("worker sent an unknown command "+U)},d.onerror=F=>{throw ee("worker sent an error! "+F.filename+":"+F.lineno+": "+F.message),F},w&&(d.on("message",function(F){d.onmessage({data:F})}),d.on("error",function(F){d.onerror(F)}));var v=[],I=["onExit","onAbort","print","printErr"],k;for(k of I)s.hasOwnProperty(k)&&v.push(k);d.postMessage({cmd:"load",handlers:v,urlOrBlob:s.mainScriptUrlOrBlob||r,wasmMemory:Ne,wasmModule:Ve})}),Bb:function(d){d()},qb:function(){var d=E("ort-wasm-simd-threaded.worker.js");d=new Worker(d),be.ab.push(d)},tb:function(){return be.ab.length==0&&(be.qb(),be.Cb(be.ab[0])),be.ab.pop()}};s.PThread=be;var Ur=d=>{for(;0<d.length;)d.shift()(s)};s.establishStackSpace=function(){var d=Lo(),m=o()[d+52>>2>>>0];d=o()[d+56>>2>>>0],Eu(m,m-d),No(m)};function Hr(d){if(S)return y(2,0,d);mn(d)}s.invokeEntryPoint=function(d,m){d=Cu.apply(null,[d,m]),St()?be.kb(d):ba(d)};function pa(d){this.fb=d-24,this.pb=function(m){i()[this.fb+4>>2>>>0]=m},this.ob=function(m){i()[this.fb+8>>2>>>0]=m},this.gb=function(m,v){this.nb(),this.pb(m),this.ob(v)},this.nb=function(){i()[this.fb+16>>2>>>0]=0}}var Ut=0,kt=0;function zn(d,m,v,I){return S?y(3,1,d,m,v,I):jr(d,m,v,I)}function jr(d,m,v,I){if(d>>>=0,m>>>=0,v>>>=0,I>>>=0,typeof SharedArrayBuffer>"u")return ee("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var k=[];return S&&k.length===0?zn(d,m,v,I):(d={Gb:v,Xa:d,rb:I,Mb:k},S?(d.Ob="spawnThread",postMessage(d,k),0):pn(d))}function Fn(d,m,v){return S?y(4,1,d,m,v):0}function Gn(d,m){if(S)return y(5,1,d,m)}var Wn=d=>{for(var m=0,v=0;v<d.length;++v){var I=d.charCodeAt(v);127>=I?m++:2047>=I?m+=2:55296<=I&&57343>=I?(m+=4,++v):m+=3}return m},gn=(d,m,v,I)=>{if(v>>>=0,!(0<I))return 0;var k=v;I=v+I-1;for(var F=0;F<d.length;++F){var U=d.charCodeAt(F);if(55296<=U&&57343>=U){var me=d.charCodeAt(++F);U=65536+((U&1023)<<10)|me&1023}if(127>=U){if(v>=I)break;m[v++>>>0]=U}else{if(2047>=U){if(v+1>=I)break;m[v++>>>0]=192|U>>6}else{if(65535>=U){if(v+2>=I)break;m[v++>>>0]=224|U>>12}else{if(v+3>=I)break;m[v++>>>0]=240|U>>18,m[v++>>>0]=128|U>>12&63}m[v++>>>0]=128|U>>6&63}m[v++>>>0]=128|U&63}}return m[v>>>0]=0,v-k},Oo=(d,m,v)=>gn(d,t(),m,v);function Eo(d,m){if(S)return y(6,1,d,m)}function Co(d,m,v){if(S)return y(7,1,d,m,v)}function Po(d,m,v){return S?y(8,1,d,m,v):0}function Do(d,m){if(S)return y(9,1,d,m)}function br(d,m,v){if(S)return y(10,1,d,m,v)}function yr(d,m,v,I){if(S)return y(11,1,d,m,v,I)}function Vn(d,m,v,I){if(S)return y(12,1,d,m,v,I)}function Un(d,m,v,I){if(S)return y(13,1,d,m,v,I)}function ko(d){if(S)return y(14,1,d)}function bn(d,m){if(S)return y(15,1,d,m)}function Hn(d,m,v){if(S)return y(16,1,d,m,v)}var jn=d=>{if(!Qe)try{if(d(),!St())try{S?ba(Ye):mn(Ye)}catch(m){m instanceof Wr||m=="unwind"||g(1,m)}}catch(m){m instanceof Wr||m=="unwind"||g(1,m)}};function yn(d){d>>>=0,typeof Atomics.Nb=="function"&&(Atomics.Nb(o(),d>>2,d).value.then(qr),d+=128,Atomics.store(o(),d>>2,1))}s.__emscripten_thread_mailbox_await=yn;function qr(){var d=Lo();d&&(yn(d),jn(()=>Au()))}s.checkMailbox=qr;var xr=d=>d%4===0&&(d%100!==0||d%400===0),qn=[0,31,60,91,121,152,182,213,244,274,305,335],Kn=[0,31,59,90,120,151,181,212,243,273,304,334];function Yn(d,m,v,I,k,F,U,me){return S?y(17,1,d,m,v,I,k,F,U,me):-52}function Xn(d,m,v,I,k,F,U){if(S)return y(18,1,d,m,v,I,k,F,U)}var Ro=d=>{var m=Wn(d)+1,v=ma(m);return v&&Oo(d,v,m),v},Or=[],Jn=(d,m)=>{Or.length=0;var v;for(m>>=2;v=t()[d++>>>0];)m+=v!=105&m,Or.push(v==105?o()[m>>>0]:a()[m++>>>1]),++m;return Or},f=d=>{var m=ya();return d=d(),No(m),d};function y(d,m){var v=arguments.length-2,I=arguments;return f(()=>{for(var k=xa(8*v),F=k>>3,U=0;U<v;U++){var me=I[2+U];a()[F+U>>>0]=me}return _u(d,v,k,m)})}var $=[],_={},C=()=>{if(!V){var d={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:h||"./this.program"},m;for(m in _)_[m]===void 0?delete d[m]:d[m]=_[m];var v=[];for(m in d)v.push(`${m}=${d[m]}`);V=v}return V},V;function q(d,m){if(S)return y(19,1,d,m);d>>>=0,m>>>=0;var v=0;return C().forEach(function(I,k){var F=m+v;for(k=i()[d+4*k>>2>>>0]=F,F=0;F<I.length;++F)n()[k++>>0>>>0]=I.charCodeAt(F);n()[k>>0>>>0]=0,v+=I.length+1}),0}function se(d,m){if(S)return y(20,1,d,m);d>>>=0,m>>>=0;var v=C();i()[d>>2>>>0]=v.length;var I=0;return v.forEach(function(k){I+=k.length+1}),i()[m>>2>>>0]=I,0}function re(d){return S?y(21,1,d):52}function ce(d,m,v,I){return S?y(22,1,d,m,v,I):52}function ue(d,m,v,I,k){return S?y(23,1,d,m,v,I,k):70}var Ie=[null,[],[]];function Ae(d,m,v,I){if(S)return y(24,1,d,m,v,I);m>>>=0,v>>>=0,I>>>=0;for(var k=0,F=0;F<v;F++){var U=i()[m>>2>>>0],me=i()[m+4>>2>>>0];m+=8;for(var de=0;de<me;de++){var le=t()[U+de>>>0],pe=Ie[d];le===0||le===10?((d===1?R:ee)(hn(pe,0)),pe.length=0):pe.push(le)}k+=me}return i()[I>>2>>>0]=k,0}var L=[31,29,31,30,31,30,31,31,30,31,30,31],fe=[31,28,31,30,31,30,31,31,30,31,30,31];function Oe(d){var m=Array(Wn(d)+1);return gn(d,m,0,m.length),m}var vr=(d,m)=>{n().set(d,m>>>0)};function Zn(d,m,v,I){function k(N,xe,De){for(N=typeof N=="number"?N.toString():N||"";N.length<xe;)N=De[0]+N;return N}function F(N,xe){return k(N,xe,"0")}function U(N,xe){function De(Mu){return 0>Mu?-1:0<Mu?1:0}var Kr;return(Kr=De(N.getFullYear()-xe.getFullYear()))===0&&(Kr=De(N.getMonth()-xe.getMonth()))===0&&(Kr=De(N.getDate()-xe.getDate())),Kr}function me(N){switch(N.getDay()){case 0:return new Date(N.getFullYear()-1,11,29);case 1:return N;case 2:return new Date(N.getFullYear(),0,3);case 3:return new Date(N.getFullYear(),0,2);case 4:return new Date(N.getFullYear(),0,1);case 5:return new Date(N.getFullYear()-1,11,31);case 6:return new Date(N.getFullYear()-1,11,30)}}function de(N){var xe=N.Za;for(N=new Date(new Date(N.$a+1900,0,1).getTime());0<xe;){var De=N.getMonth(),Kr=(xr(N.getFullYear())?L:fe)[De];if(xe>Kr-N.getDate())xe-=Kr-N.getDate()+1,N.setDate(1),11>De?N.setMonth(De+1):(N.setMonth(0),N.setFullYear(N.getFullYear()+1));else{N.setDate(N.getDate()+xe);break}}return De=new Date(N.getFullYear()+1,0,4),xe=me(new Date(N.getFullYear(),0,4)),De=me(De),0>=U(xe,N)?0>=U(De,N)?N.getFullYear()+1:N.getFullYear():N.getFullYear()-1}d>>>=0,m>>>=0,v>>>=0,I>>>=0;var le=o()[I+40>>2>>>0];I={Kb:o()[I>>2>>>0],Jb:o()[I+4>>2>>>0],cb:o()[I+8>>2>>>0],ib:o()[I+12>>2>>>0],eb:o()[I+16>>2>>>0],$a:o()[I+20>>2>>>0],Wa:o()[I+24>>2>>>0],Za:o()[I+28>>2>>>0],Tb:o()[I+32>>2>>>0],Ib:o()[I+36>>2>>>0],Lb:le?yt(le):""},v=yt(v),le={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var pe in le)v=v.replace(new RegExp(pe,"g"),le[pe]);var Ee="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Be="January February March April May June July August September October November December".split(" ");le={"%a":N=>Ee[N.Wa].substring(0,3),"%A":N=>Ee[N.Wa],"%b":N=>Be[N.eb].substring(0,3),"%B":N=>Be[N.eb],"%C":N=>F((N.$a+1900)/100|0,2),"%d":N=>F(N.ib,2),"%e":N=>k(N.ib,2," "),"%g":N=>de(N).toString().substring(2),"%G":N=>de(N),"%H":N=>F(N.cb,2),"%I":N=>(N=N.cb,N==0?N=12:12<N&&(N-=12),F(N,2)),"%j":N=>{for(var xe=0,De=0;De<=N.eb-1;xe+=(xr(N.$a+1900)?L:fe)[De++]);return F(N.ib+xe,3)},"%m":N=>F(N.eb+1,2),"%M":N=>F(N.Jb,2),"%n":()=>`
`,"%p":N=>0<=N.cb&&12>N.cb?"AM":"PM","%S":N=>F(N.Kb,2),"%t":()=>"	","%u":N=>N.Wa||7,"%U":N=>F(Math.floor((N.Za+7-N.Wa)/7),2),"%V":N=>{var xe=Math.floor((N.Za+7-(N.Wa+6)%7)/7);if(2>=(N.Wa+371-N.Za-2)%7&&xe++,xe)xe==53&&(De=(N.Wa+371-N.Za)%7,De==4||De==3&&xr(N.$a)||(xe=1));else{xe=52;var De=(N.Wa+7-N.Za-1)%7;(De==4||De==5&&xr(N.$a%400-1))&&xe++}return F(xe,2)},"%w":N=>N.Wa,"%W":N=>F(Math.floor((N.Za+7-(N.Wa+6)%7)/7),2),"%y":N=>(N.$a+1900).toString().substring(2),"%Y":N=>N.$a+1900,"%z":N=>{N=N.Ib;var xe=0<=N;return N=Math.abs(N)/60,(xe?"+":"-")+("0000"+(N/60*100+N%60)).slice(-4)},"%Z":N=>N.Lb,"%%":()=>"%"},v=v.replace(/%%/g,"\0\0");for(pe in le)v.includes(pe)&&(v=v.replace(new RegExp(pe,"g"),le[pe](I)));return v=v.replace(/\0\0/g,"%"),pe=Oe(v),pe.length>m?0:(vr(pe,d),pe.length-1)}function Bo(d){try{d()}catch(m){Qt(m)}}function yy(d){var m={},v;for(v in d)(function(I){var k=d[I];m[I]=typeof k=="function"?function(){Mo.push(I);try{return k.apply(null,arguments)}finally{Qe||(Mo.pop()===I||Qt(),er&&Er===1&&Mo.length===0&&(Er=0,Zt+=1,Bo(Du),typeof Fibers<"u"&&Fibers.Ub()))}}:k})(v);return m}var Er=0,er=null,wu=0,Mo=[],Tu={},$u={},xy=0,ha=null,vy=[];function wy(){return new Promise((d,m)=>{ha={resolve:d,reject:m}})}function Ty(){var d=ma(65548),m=d+12;i()[d>>2>>>0]=m,i()[d+4>>2>>>0]=m+65536,m=Mo[0];var v=Tu[m];return v===void 0&&(v=xy++,Tu[m]=v,$u[v]=m),m=v,o()[d+8>>2>>>0]=m,d}function $y(){var d=o()[er+8>>2>>>0];return d=Z[$u[d]],--Zt,d()}function Sy(d){if(!Qe){if(Er===0){var m=!1,v=!1;d((I=0)=>{if(!Qe&&(wu=I,m=!0,v)){Er=2,Bo(()=>ku(er)),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.resume(),I=!1;try{var k=$y()}catch(me){k=me,I=!0}var F=!1;if(!er){var U=ha;U&&(ha=null,(I?U.reject:U.resolve)(k),F=!0)}if(I&&!F)throw k}}),v=!0,m||(Er=1,er=Ty(),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.pause(),Bo(()=>Pu(er)))}else Er===2?(Er=0,Bo(Ru),Su(er),er=null,vy.forEach(I=>jn(I))):Qt(`invalid state: ${Er}`);return wu}}function Iy(d){return Sy(m=>{d().then(m)})}be.gb();var _y=[null,Nn,Hr,zn,Fn,Gn,Eo,Co,Po,Do,br,yr,Vn,Un,ko,bn,Hn,Yn,Xn,q,se,re,ce,ue,Ae],Ay={r:function(d,m,v){return Iy(async()=>{await s.xb(d,m,v)})},b:function(d,m,v){throw d>>>=0,new pa(d).gb(m>>>0,v>>>0),Ut=d,kt++,Ut},P:function(d){Iu(d>>>0,!b,1,!x,131072,!1),be.lb()},n:function(d){d>>>=0,S?postMessage({cmd:"cleanupThread",thread:d}):Mn(d)},K:jr,g:Fn,V:Gn,F:Eo,H:Co,y:Po,T:Do,L:br,S:yr,p:Vn,G:Un,D:ko,U:bn,E:Hn,q:()=>!0,B:function(d,m){d>>>=0,d==m>>>0?setTimeout(()=>qr()):S?postMessage({targetThread:d,cmd:"checkMailbox"}):(d=be.Qa[d])&&d.postMessage({cmd:"checkMailbox"})},N:function(){return-1},O:yn,X:function(d){w&&be.Qa[d>>>0].ref()},u:function(d,m,v){d=m+2097152>>>0<4194305-!!d?(d>>>0)+4294967296*m:NaN,v>>>=0,d=new Date(1e3*d),o()[v>>2>>>0]=d.getUTCSeconds(),o()[v+4>>2>>>0]=d.getUTCMinutes(),o()[v+8>>2>>>0]=d.getUTCHours(),o()[v+12>>2>>>0]=d.getUTCDate(),o()[v+16>>2>>>0]=d.getUTCMonth(),o()[v+20>>2>>>0]=d.getUTCFullYear()-1900,o()[v+24>>2>>>0]=d.getUTCDay(),d=(d.getTime()-Date.UTC(d.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,o()[v+28>>2>>>0]=d},v:function(d,m,v){d=m+2097152>>>0<4194305-!!d?(d>>>0)+4294967296*m:NaN,v>>>=0,d=new Date(1e3*d),o()[v>>2>>>0]=d.getSeconds(),o()[v+4>>2>>>0]=d.getMinutes(),o()[v+8>>2>>>0]=d.getHours(),o()[v+12>>2>>>0]=d.getDate(),o()[v+16>>2>>>0]=d.getMonth(),o()[v+20>>2>>>0]=d.getFullYear()-1900,o()[v+24>>2>>>0]=d.getDay(),m=(xr(d.getFullYear())?qn:Kn)[d.getMonth()]+d.getDate()-1|0,o()[v+28>>2>>>0]=m,o()[v+36>>2>>>0]=-(60*d.getTimezoneOffset()),m=new Date(d.getFullYear(),6,1).getTimezoneOffset();var I=new Date(d.getFullYear(),0,1).getTimezoneOffset();d=(m!=I&&d.getTimezoneOffset()==Math.min(I,m))|0,o()[v+32>>2>>>0]=d},w:function(d){d>>>=0;var m=new Date(o()[d+20>>2>>>0]+1900,o()[d+16>>2>>>0],o()[d+12>>2>>>0],o()[d+8>>2>>>0],o()[d+4>>2>>>0],o()[d>>2>>>0],0),v=o()[d+32>>2>>>0],I=m.getTimezoneOffset(),k=new Date(m.getFullYear(),6,1).getTimezoneOffset(),F=new Date(m.getFullYear(),0,1).getTimezoneOffset(),U=Math.min(F,k);return 0>v?o()[d+32>>2>>>0]=+(k!=F&&U==I):0<v!=(U==I)&&(k=Math.max(F,k),m.setTime(m.getTime()+6e4*((0<v?U:k)-I))),o()[d+24>>2>>>0]=m.getDay(),v=(xr(m.getFullYear())?qn:Kn)[m.getMonth()]+m.getDate()-1|0,o()[d+28>>2>>>0]=v,o()[d>>2>>>0]=m.getSeconds(),o()[d+4>>2>>>0]=m.getMinutes(),o()[d+8>>2>>>0]=m.getHours(),o()[d+12>>2>>>0]=m.getDate(),o()[d+16>>2>>>0]=m.getMonth(),o()[d+20>>2>>>0]=m.getYear(),d=m.getTime()/1e3,Ou((gr=d,1<=+Math.abs(gr)?0<gr?+Math.floor(gr/4294967296)>>>0:~~+Math.ceil((gr-+(~~gr>>>0))/4294967296)>>>0:0)),d>>>0},s:Yn,t:Xn,A:function(d,m,v){function I(le){return(le=le.toTimeString().match(/\(([A-Za-z ]+)\)$/))?le[1]:"GMT"}d>>>=0,m>>>=0,v>>>=0;var k=new Date().getFullYear(),F=new Date(k,0,1),U=new Date(k,6,1);k=F.getTimezoneOffset();var me=U.getTimezoneOffset(),de=Math.max(k,me);i()[d>>2>>>0]=60*de,o()[m>>2>>>0]=+(k!=me),d=I(F),m=I(U),d=Ro(d),m=Ro(m),me<k?(i()[v>>2>>>0]=d,i()[v+4>>2>>>0]=m):(i()[v>>2>>>0]=m,i()[v+4>>2>>>0]=d)},e:()=>{Qt("")},c:function(d,m,v){return d>>>=0,m=Jn(m>>>0,v>>>0),fn[d].apply(null,m)},l:function(d,m,v){return d>>>=0,m=Jn(m>>>0,v>>>0),fn[d].apply(null,m)},o:function(){},k:function(){return Date.now()},W:()=>{throw Zt+=1,"unwind"},C:function(){return 4294901760},d:()=>performance.timeOrigin+performance.now(),i:function(){return w?($h(),wr(Th)).cpus().length:navigator.hardwareConcurrency},M:function(d,m,v,I){for(be.Pb=m>>>0,$.length=v,m=I>>>0>>3,I=0;I<v;I++)$[I]=a()[m+I>>>0];return(0>d?fn[-d-1]:_y[d]).apply(null,$)},z:function(d){d>>>=0;var m=t().length;if(d<=m||4294901760<d)return!1;for(var v=1;4>=v;v*=2){var I=m*(1+.2/v);I=Math.min(I,d+100663296);var k=Math;I=Math.max(d,I);e:{k=k.min.call(k,4294901760,I+(65536-I%65536)%65536)-Ne.buffer.byteLength+65535>>>16;try{Ne.grow(k),Te();var F=1;break e}catch{}F=void 0}if(F)return!0}return!1},Q:q,R:se,J:mn,h:re,m:ce,x:ue,j:Ae,a:Ne||s.wasmMemory,I:Zn,f:function(d,m,v,I){return Zn(d>>>0,m>>>0,v>>>0,I>>>0)}};(function(){function d(v,I){return v=v.exports,v=yy(v),Z=v=Oy(v),be.mb.push(Z.Da),et.unshift(Z.Y),Ve=I,kn(),v}var m={a:Ay};if(Ao(),s.instantiateWasm)try{return s.instantiateWasm(m,d)}catch(v){ee("Module.instantiateWasm callback failed with error: "+v),c(v)}return Ar(m,function(v){d(v.instance,v.module)}).catch(c),{}})(),s._OrtInit=(d,m)=>(s._OrtInit=Z.Z)(d,m),s._OrtGetLastError=(d,m)=>(s._OrtGetLastError=Z._)(d,m),s._OrtCreateSessionOptions=(d,m,v,I,k,F,U,me,de,le)=>(s._OrtCreateSessionOptions=Z.$)(d,m,v,I,k,F,U,me,de,le),s._OrtAppendExecutionProvider=(d,m)=>(s._OrtAppendExecutionProvider=Z.aa)(d,m),s._OrtAddFreeDimensionOverride=(d,m,v)=>(s._OrtAddFreeDimensionOverride=Z.ba)(d,m,v),s._OrtAddSessionConfigEntry=(d,m,v)=>(s._OrtAddSessionConfigEntry=Z.ca)(d,m,v),s._OrtReleaseSessionOptions=d=>(s._OrtReleaseSessionOptions=Z.da)(d),s._OrtCreateSession=(d,m,v)=>(s._OrtCreateSession=Z.ea)(d,m,v),s._OrtReleaseSession=d=>(s._OrtReleaseSession=Z.fa)(d),s._OrtGetInputOutputCount=(d,m,v)=>(s._OrtGetInputOutputCount=Z.ga)(d,m,v),s._OrtGetInputName=(d,m)=>(s._OrtGetInputName=Z.ha)(d,m),s._OrtGetOutputName=(d,m)=>(s._OrtGetOutputName=Z.ia)(d,m),s._OrtFree=d=>(s._OrtFree=Z.ja)(d),s._OrtCreateTensor=(d,m,v,I,k,F)=>(s._OrtCreateTensor=Z.ka)(d,m,v,I,k,F),s._OrtGetTensorData=(d,m,v,I,k)=>(s._OrtGetTensorData=Z.la)(d,m,v,I,k),s._OrtReleaseTensor=d=>(s._OrtReleaseTensor=Z.ma)(d),s._OrtCreateRunOptions=(d,m,v,I)=>(s._OrtCreateRunOptions=Z.na)(d,m,v,I),s._OrtAddRunConfigEntry=(d,m,v)=>(s._OrtAddRunConfigEntry=Z.oa)(d,m,v),s._OrtReleaseRunOptions=d=>(s._OrtReleaseRunOptions=Z.pa)(d),s._OrtCreateBinding=d=>(s._OrtCreateBinding=Z.qa)(d),s._OrtBindInput=(d,m,v)=>(s._OrtBindInput=Z.ra)(d,m,v),s._OrtBindOutput=(d,m,v,I)=>(s._OrtBindOutput=Z.sa)(d,m,v,I),s._OrtClearBoundOutputs=d=>(s._OrtClearBoundOutputs=Z.ta)(d),s._OrtReleaseBinding=d=>(s._OrtReleaseBinding=Z.ua)(d),s._OrtRunWithBinding=(d,m,v,I,k)=>(s._OrtRunWithBinding=Z.va)(d,m,v,I,k),s._OrtRun=(d,m,v,I,k,F,U,me)=>(s._OrtRun=Z.wa)(d,m,v,I,k,F,U,me),s._OrtEndProfiling=d=>(s._OrtEndProfiling=Z.xa)(d),s._JsepOutput=(d,m,v)=>(s._JsepOutput=Z.ya)(d,m,v),s._JsepGetNodeName=d=>(s._JsepGetNodeName=Z.za)(d);var Lo=s._pthread_self=()=>(Lo=s._pthread_self=Z.Aa)(),ma=s._malloc=d=>(ma=s._malloc=Z.Ba)(d),Su=s._free=d=>(Su=s._free=Z.Ca)(d);s.__emscripten_tls_init=()=>(s.__emscripten_tls_init=Z.Da)();var Iu=s.__emscripten_thread_init=(d,m,v,I,k,F)=>(Iu=s.__emscripten_thread_init=Z.Fa)(d,m,v,I,k,F);s.__emscripten_thread_crashed=()=>(s.__emscripten_thread_crashed=Z.Ga)();var _u=(d,m,v,I)=>(_u=Z.Ha)(d,m,v,I),ga=d=>(ga=Z.Ia)(d),ba=s.__emscripten_thread_exit=d=>(ba=s.__emscripten_thread_exit=Z.Ja)(d),Au=s.__emscripten_check_mailbox=()=>(Au=s.__emscripten_check_mailbox=Z.Ka)(),Ou=d=>(Ou=Z.La)(d),Eu=(d,m)=>(Eu=Z.Ma)(d,m),ya=()=>(ya=Z.Na)(),No=d=>(No=Z.Oa)(d),xa=d=>(xa=Z.Pa)(d),Cu=s.dynCall_ii=(d,m)=>(Cu=s.dynCall_ii=Z.Ra)(d,m),Pu=d=>(Pu=Z.Sa)(d),Du=()=>(Du=Z.Ta)(),ku=d=>(ku=Z.Ua)(d),Ru=()=>(Ru=Z.Va)();s.___start_em_js=1432651,s.___stop_em_js=1432812;function Oy(d){d=Object.assign({},d);var m=I=>()=>I()>>>0,v=I=>k=>I(k)>>>0;return d.__errno_location=m(d.__errno_location),d.pthread_self=m(d.pthread_self),d.malloc=v(d.malloc),d.stackSave=m(d.stackSave),d.stackAlloc=v(d.stackAlloc),d}s.keepRuntimeAlive=St,s.wasmMemory=Ne,s.stackAlloc=xa,s.stackSave=ya,s.stackRestore=No,s.UTF8ToString=yt,s.stringToUTF8=Oo,s.lengthBytesUTF8=Wn,s.ExitStatus=Wr,s.PThread=be;var zo;hr=function d(){zo||Bu(),zo||(hr=d)};function Bu(){function d(){if(!zo&&(zo=!0,s.calledRun=!0,!Qe)&&(S||Ur(et),l(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),!S)){if(s.postRun)for(typeof s.postRun=="function"&&(s.postRun=[s.postRun]);s.postRun.length;){var m=s.postRun.shift();ut.unshift(m)}Ur(ut)}}if(!(0<Dt))if(S)l(s),S||Ur(et),startWorker(s);else{if(s.preRun)for(typeof s.preRun=="function"&&(s.preRun=[s.preRun]);s.preRun.length;)vt.unshift(s.preRun.shift());Ur(vt),0<Dt||(s.setStatus?(s.setStatus("Running..."),setTimeout(function(){setTimeout(function(){s.setStatus("")},1),d()},1)):d())}}if(s.preInit)for(typeof s.preInit=="function"&&(s.preInit=[s.preInit]);0<s.preInit.length;)s.preInit.pop()();return Bu(),e.ready}})();typeof Ih=="object"&&typeof ks=="object"?ks.exports=Sh:typeof define=="function"&&define.amd&&define([],()=>Sh)});var Ah=Ue((SC,lw)=>{lw.exports='"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>(0,eval)(fs.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason??e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err("worker.js received unknown command "+e.data.cmd),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed&&Module.__emscripten_thread_crashed(),a}}self.onmessage=handleMessage;\n'});var Eh,cw,Rs,Bs,Ni,Oh,dw,fw,pw,Ch,ot,Dn=D(()=>{"use strict";Eh=xh();cw=_h(),Bs=!1,Ni=!1,Oh=!1,dw=()=>{try{return typeof SharedArrayBuffer>"u"?!1:(typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch{return!1}},fw=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},pw=(r,e)=>r?e?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":e?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Ch=async r=>{if(Bs)return Promise.resolve();if(Ni)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Oh)throw new Error("previous call to 'initializeWebAssembly()' failed.");Ni=!0;let e=r.initTimeout,n=r.numThreads,t=r.simd,o=n>1&&dw(),i=t&&fw(),u=r.wasmPaths,a=typeof u=="string"?u:void 0,s=pw(i,o),l=typeof u=="object"?u[s]:void 0,c=!1,p=[];if(e>0&&p.push(new Promise(h=>{setTimeout(()=>{c=!0,h()},e)})),p.push(new Promise((h,g)=>{let x=o?cw:Eh,b={locateFile:(w,S)=>{if(o&&w.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Ah()],{type:"text/javascript"}));if(w.endsWith(".wasm")){if(l)return l;let O=a??S;return s==="ort-wasm-simd.wasm"?O+"ort-wasm-simd.jsep.wasm":s==="ort-wasm-simd-threaded.wasm"?O+"ort-wasm-simd-threaded.jsep.wasm":O+s}return S+w}};if(o)if(typeof Blob>"u")b.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let w=`var ortWasmThreaded=${x.toString()};`;b.mainScriptUrlOrBlob=new Blob([w],{type:"text/javascript"})}x(b).then(w=>{Ni=!1,Bs=!0,Rs=w,h()},w=>{Ni=!1,Oh=!0,g(w)})})),await Promise.race(p),c)throw new Error(`WebAssembly backend initializing failed due to timeout: ${e}ms`)},ot=()=>{if(Bs&&Rs)return Rs;throw new Error("WebAssembly is not initialized yet.")}});var ct,go,Ke,zi=D(()=>{"use strict";Dn();ct=(r,e)=>{let n=ot(),t=n.lengthBytesUTF8(r)+1,o=n._malloc(t);return n.stringToUTF8(r,o,t),e.push(o),o},go=(r,e,n,t)=>{if(typeof r=="object"&&r!==null){if(n.has(r))throw new Error("Circular reference in options");n.add(r)}Object.entries(r).forEach(([o,i])=>{let u=e?e+o:o;if(typeof i=="object")go(i,u+".",n,t);else if(typeof i=="string"||typeof i=="number")t(u,i.toString());else if(typeof i=="boolean")t(u,i?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof i}`)})},Ke=r=>{let e=ot(),n=e.stackSave();try{let t=e.stackAlloc(8);e._OrtGetLastError(t,t+4);let o=e.HEAP32[t/4],i=e.HEAPU32[t/4+1],u=i?e.UTF8ToString(i):"";throw new Error(`${r} ERROR_CODE: ${o}, ERROR_MESSAGE: ${u}`)}finally{e.stackRestore(n)}}});var Ph,Dh=D(()=>{"use strict";Dn();zi();Ph=r=>{let e=ot(),n=0,t=[],o=r||{};try{if(r?.logSeverityLevel===void 0)o.logSeverityLevel=2;else if(typeof r.logSeverityLevel!="number"||!Number.isInteger(r.logSeverityLevel)||r.logSeverityLevel<0||r.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${r.logSeverityLevel}`);if(r?.logVerbosityLevel===void 0)o.logVerbosityLevel=0;else if(typeof r.logVerbosityLevel!="number"||!Number.isInteger(r.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${r.logVerbosityLevel}`);r?.terminate===void 0&&(o.terminate=!1);let i=0;return r?.tag!==void 0&&(i=ct(r.tag,t)),n=e._OrtCreateRunOptions(o.logSeverityLevel,o.logVerbosityLevel,!!o.terminate,i),n===0&&Ke("Can't create run options."),r?.extra!==void 0&&go(r.extra,"",new WeakSet,(u,a)=>{let s=ct(u,t),l=ct(a,t);e._OrtAddRunConfigEntry(n,s,l)!==0&&Ke(`Can't set a run config entry: ${u} - ${a}.`)}),[n,t]}catch(i){throw n!==0&&e._OrtReleaseRunOptions(n),t.forEach(u=>e._free(u)),i}}});var hw,mw,gw,bw,kh,Rh=D(()=>{"use strict";Dn();zi();hw=r=>{switch(r){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${r}`)}},mw=r=>{switch(r){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${r}`)}},gw=r=>{r.extra||(r.extra={}),r.extra.session||(r.extra.session={});let e=r.extra.session;e.use_ort_model_bytes_directly||(e.use_ort_model_bytes_directly="1"),r.executionProviders&&r.executionProviders.some(n=>(typeof n=="string"?n:n.name)==="webgpu")&&(r.enableMemPattern=!1)},bw=(r,e,n)=>{for(let t of e){let o=typeof t=="string"?t:t.name;switch(o){case"xnnpack":o="XNNPACK";break;case"webnn":if(o="WEBNN",typeof t!="string"){let u=t;if(u?.deviceType){let a=ct("deviceType",n),s=ct(u.deviceType,n);ot()._OrtAddSessionConfigEntry(r,a,s)!==0&&Ke(`Can't set a session config entry: 'deviceType' - ${u.deviceType}.`)}if(u?.powerPreference){let a=ct("powerPreference",n),s=ct(u.powerPreference,n);ot()._OrtAddSessionConfigEntry(r,a,s)!==0&&Ke(`Can't set a session config entry: 'powerPreference' - ${u.powerPreference}.`)}}break;case"webgpu":if(o="JS",typeof t!="string"){let u=t;if(u?.preferredLayout){if(u.preferredLayout!=="NCHW"&&u.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${u.preferredLayout}`);let a=ct("preferredLayout",n),s=ct(u.preferredLayout,n);ot()._OrtAddSessionConfigEntry(r,a,s)!==0&&Ke(`Can't set a session config entry: 'preferredLayout' - ${u.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${o}`)}let i=ct(o,n);ot()._OrtAppendExecutionProvider(r,i)!==0&&Ke(`Can't append execution provider: ${o}.`)}},kh=r=>{let e=ot(),n=0,t=[],o=r||{};gw(o);try{let i=hw(o.graphOptimizationLevel??"all"),u=mw(o.executionMode??"sequential"),a=typeof o.logId=="string"?ct(o.logId,t):0,s=o.logSeverityLevel??2;if(!Number.isInteger(s)||s<0||s>4)throw new Error(`log serverity level is not valid: ${s}`);let l=o.logVerbosityLevel??0;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log verbosity level is not valid: ${l}`);let c=typeof o.optimizedModelFilePath=="string"?ct(o.optimizedModelFilePath,t):0;if(n=e._OrtCreateSessionOptions(i,!!o.enableCpuMemArena,!!o.enableMemPattern,u,!!o.enableProfiling,0,a,s,l,c),n===0&&Ke("Can't create session options."),o.executionProviders&&bw(n,o.executionProviders,t),o.freeDimensionOverrides)for(let[p,h]of Object.entries(o.freeDimensionOverrides)){if(typeof p!="string")throw new Error(`free dimension override name must be a string: ${p}`);if(typeof h!="number"||!Number.isInteger(h)||h<0)throw new Error(`free dimension override value must be a non-negative integer: ${h}`);let g=ct(p,t);e._OrtAddFreeDimensionOverride(n,g,h)!==0&&Ke(`Can't set a free dimension override: ${p} - ${h}.`)}return o.extra!==void 0&&go(o.extra,"",new WeakSet,(p,h)=>{let g=ct(p,t),x=ct(h,t);e._OrtAddSessionConfigEntry(n,g,x)!==0&&Ke(`Can't set a session config entry: ${p} - ${h}.`)}),[n,t]}catch(i){throw n!==0&&e._OrtReleaseSessionOptions(n),t.forEach(u=>e._free(u)),i}}});var Ms,bo,yo,Fi,xo,Gi,Ls,dt=D(()=>{"use strict";Ms=r=>{switch(r){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${r}`)}},bo=r=>{switch(r){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${r}`)}},yo=r=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][r],Fi=r=>{switch(r){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${r}`)}},xo=r=>{switch(r){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${r}`)}},Gi=r=>r==="float32"||r==="int32"||r==="int64"||r==="bool"||r==="float16"||r==="uint32",Ls=r=>{switch(r){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${r}`)}}});var yw,xw,Bh,Mh,Lh,vw,Je,Lr=D(()=>{"use strict";dt();yw=["V","I","W","E","F"],xw=(r,e)=>{console.log(`[${yw[r]},${new Date().toISOString()}]${e}`)},Lh=(r,e)=>{Bh=r,Mh=e},vw=(r,e)=>{let n=xo(r),t=xo(Bh);n>=t&&xw(n,typeof e=="function"?e():e)},Je=(...r)=>{Mh&&vw(...r)}});var Nh,zh=D(()=>{"use strict";dt();Nh=(r,e)=>new(Fi(e))(r)});var Fh=D(()=>{"use strict"});var Wi,ww,Gh,zs,Ns,Wh,Vh=D(()=>{"use strict";Lr();Fh();Wi=r=>Math.ceil(r/16)*16,ww=1,Gh=()=>ww++,zs=async(r,e,n,t)=>{let o=Wi(n),i=r.device.createBuffer({size:o,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let u=r.getCommandEncoder();r.endComputePass(),u.copyBufferToBuffer(e,0,i,0,o),r.flush(),await i.mapAsync(GPUMapMode.READ);let a=i.getMappedRange();if(t){let s=t();return s.set(new Uint8Array(a,0,n)),s}else return new Uint8Array(a.slice(0,n))}finally{i.destroy()}},Ns=class{constructor(e){this.backend=e;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map}upload(e,n){let t=n.buffer,o=n.byteOffset,i=n.byteLength,u=Wi(i),a=this.storageCache.get(e);if(!a)throw new Error("gpu data for uploading does not exist");if(a.originalSize!==i)throw new Error(`inconsistent data size. gpu data size=${a.originalSize}, data size=${i}`);let s=this.backend.device.createBuffer({mappedAtCreation:!0,size:u,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=s.getMappedRange();new Uint8Array(l).set(new Uint8Array(t,o,i)),s.unmap();let c=this.backend.getCommandEncoder();this.backend.endComputePass(),c.copyBufferToBuffer(s,0,a.gpuData.buffer,0,u),Je("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`),this.buffersForUploadingPending.push(s)}memcpy(e,n){let t=this.storageCache.get(e);if(!t)throw new Error("source gpu data for memcpy does not exist");let o=this.storageCache.get(n);if(!o)throw new Error("destination gpu data for memcpy does not exist");if(t.originalSize!==o.originalSize)throw new Error("inconsistent source and destination gpu data size");let i=Wi(t.originalSize),u=this.backend.getCommandEncoder();this.backend.endComputePass(),u.copyBufferToBuffer(t.gpuData.buffer,0,o.gpuData.buffer,0,i)}registerExternalBuffer(e,n,t){let o;if(t){if(o=this.externalBuffers.get(t),o===void 0)throw new Error("previous buffer is not registered");if(e===t)return Je("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${n}) => id=${o}, buffer is the same, skip.`),o;this.externalBuffers.delete(t)}else o=Gh();return this.storageCache.set(o,{gpuData:{id:o,type:0,buffer:e},originalSize:n}),this.externalBuffers.set(e,o),Je("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${n}) => id=${o}, registered.`),o}unregisterExternalBuffer(e){let n=this.externalBuffers.get(e);n!==void 0&&(this.storageCache.delete(n),this.externalBuffers.delete(e),Je("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${n}`))}create(e,n=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let t=Wi(e),o,i=(n&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,u=(n&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(i||u){let s=i?this.freeBuffers:this.freeUniformBuffers,l=s.get(t);l||(l=[],s.set(t,l)),l.length>0?o=l.pop():o=this.backend.device.createBuffer({size:t,usage:n})}else o=this.backend.device.createBuffer({size:t,usage:n});let a={id:Gh(),type:0,buffer:o};return this.storageCache.set(a.id,{gpuData:a,originalSize:e}),Je("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${a.id}`),a}get(e){return this.storageCache.get(e)?.gpuData}release(e){let n=this.storageCache.get(e);if(!n)throw new Error("releasing data does not exist");return Je("verbose",()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${n.gpuData.id}`),this.storageCache.delete(e),this.buffersPending.push(n.gpuData.buffer),n.originalSize}async download(e,n){let t=this.storageCache.get(e);if(!t)throw new Error("data does not exist");await zs(this.backend,t.gpuData.buffer,t.originalSize,n)}refreshPendingBuffers(){for(let e of this.buffersForUploadingPending)e.destroy();this.buffersForUploadingPending=[];for(let e of this.buffersPending)(e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(e.size).push(e):(e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(e.size).push(e):e.destroy();this.buffersPending=[]}dispose(){this.freeBuffers.forEach(e=>{e.forEach(n=>{n.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(n=>{n.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map}},Wh=(...r)=>new Ns(...r)});var Fs,ye,it=D(()=>{"use strict";Fs=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this._cacheKey||(this._cacheKey=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this._cacheKey}},ye=r=>new Fs(r)});var Gs,ur,G,ln,Vi,Ui,Hi,Pe=D(()=>{"use strict";Gs=class{static calcMatMulShape(e,n){return e[1]!==n[0]?void 0:[e[0],n[1]]}},ur=class{static calcShape(e,n,t=!1){let o=e.length,i=n.length;if(o===0)return n;if(i===0)return e;let u=Math.max(e.length,n.length),a=new Array(u);if(t){if(o<2||i<2)return;let s=Gs.calcMatMulShape([e[o-2],e[o-1]],[n[i-2],n[i-1]]);if(s===void 0)return;[a[u-2],a[u-1]]=s}for(let s=t?3:1;s<=u;s++){let l=o-s<0?1:e[o-s],c=i-s<0?1:n[i-s];if(l!==c&&l>1&&c>1)return;a[u-s]=Math.max(l,c)}return a}static isValidBroadcast(e,n){let t=e.length,o=n.length;if(t>o)return!1;for(let i=1;i<=t;i++)if(e[t-i]!==1&&e[t-i]!==n[o-i])return!1;return!0}},G=class r{static size(e){return r.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,n,e.length)}static sizeToDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,0,n)}static getSizeFromDimensionRange(e,n,t){let o=1;for(let i=n;i<t;i++){if(e[i]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");o*=e[i]}return o}static computeStrides(e){let n=e.length;if(n===0)return[];if(n===1)return[1];let t=new Array(n);t[n-1]=1,t[n-2]=e[n-1];for(let o=n-3;o>=0;--o)t[o]=t[o+1]*e[o+1];return t}static normalizeAxis(e,n){if(e<-n&&e>=n)throw new Error("unsupported axis for this operation.");return e<0?e+n:e}static normalizeAxes(e,n){return e.map(t=>this.normalizeAxis(t,n??e.length))}static sortBasedOnPerm(e,n){return n?n.map(t=>e[t]):e.slice().reverse()}static padShape(e,n){let t=e.length;return e.map((o,i)=>o+n[i]+n[i+t])}static areEqual(e,n){return e.length!==n.length?!1:e.every((t,o)=>t===n[o])}},ln=class r{static adjustPoolAttributes(e,n,t,o,i,u){if(!e&&t.length!==n.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let a=0;a<n.length-2;a++)a>=t.length?t.push(n[a+2]):t[a]=n[a+2];for(let a=0;a<t.length;a++)if(a<o.length){if(o[a]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let a=0;a<t.length;a++)if(a<i.length){if(i[a]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let a=0;a<t.length*2;a++)if(a<u.length){if(u[a]<0)throw new Error("pad should be greater than or equal to 1")}else u.push(0);for(let a=0;a<t.length;a++){if(t[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(u[a]>=t[a]||u[a+t.length]>=t[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,n,t,o,i,u,a){if(a){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let s=0;s<e.length-2;s++)r.adjustPadAndReturnShape(e[s+(u?1:2)],n[s],t[s],o[s],i,s,s+e.length-2,a)}}static computePoolOutputShape(e,n,t,o,i,u,a){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let s=[n[0],n[1]];return r.computeShapeHelper(e,n,s,t,o,i,u,a),s}static computeConvOutputShape(e,n,t,o,i,u,a){if(e.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let s=[e[0],n[0]];return r.computeShapeHelper(!1,e,s,t,o,i,u,a),s}static computeShapeHelper(e,n,t,o,i,u,a,s){if(e)for(let l=0;l<n.length-2;l++)t.push(1);else for(let l=0;l<n.length-2;l++)t.push(r.adjustPadAndReturnShape(n[l+2],o[l],i[l],u[l],a,l,l+n.length-2,s))}static adjustPadAndReturnShape(e,n,t,o,i,u,a,s){let l=t*(o-1)+1;if(s&&s!=="NOTSET")switch(s){case"VALID":return i[u]=0,i[a]=0,Math.floor((e-l)/n+1);case"SAME_LOWER":case"SAME_UPPER":if(t!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let p=((e+n-1)/n-1)*n+o-e;return i[u]=Math.floor(s==="SAME_LOWER"?(p+1)/2:p/2),i[a]=p-i[u],Math.floor((e+p-o)/n+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+i[u]+i[a]-l)/n+1)}},Vi=class{static getShapeOfGemmResult(e,n,t,o,i){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let u,a,s;n?(u=e[1],a=e[0]):(u=e[0],a=e[1]);let l=-1;if(o?(s=t[0],l=1):(s=t[1],l=0),t[l]!==a)throw new Error("dimension mismatch");if(u<=0||s<=0||a<=0)throw new Error("invalid shape specified");if(i&&!ur.isValidBroadcast(i,[u,s]))throw new Error("gemm: invalid bias shape for broadcast");return[u,s,a]}},Ui=-34028234663852886e22,Hi=34028234663852886e22});var Tw,Uh,at,Vs,Ir,Xt,cn,Nr,Hh,X,oe,Ws,jh,Us,qh,Fe=D(()=>{"use strict";dt();Pe();Tw=64,Uh=(r,e)=>{if(e===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(r){case 10:return e>1?`vec${e}<f16>`:"f16";case 1:return e>1?`vec${e}<f32>`:"f32";case 6:return e>1?`vec${e}<i32>`:"i32";case 12:return e>1?`vec${e}<u32>`:"u32";case 7:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(e!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${r}`)}},at=(r,e=1)=>{let n=Uh(r,e);return typeof n=="string"?n:n[0]},Vs=r=>[{type:"uint32",data:r},{type:"uint32",data:G.computeStrides(r)}],Ir=r=>r%4===0?4:r%2===0?2:1,Xt=(r="f32",e,n="0")=>!e||e===1?`${r}(${n})`:`vec${e}<${r}>(${n})`,cn=(r,e,n)=>r==="f32"?n:e===1?`f32(${n})`:`vec${e}f(${n})`,Nr=(r,e)=>e===4?`(${r}.x + ${r}.y + ${r}.z + ${r}.w)`:e===2?`(${r}.x + ${r}.y)`:e===3?`(${r}.x + ${r}.y + ${r}.z)`:r,Hh=(r,e,n,t,o)=>{let i=typeof n=="number",u=i?n:n.length,a=[...new Array(u).keys()],s=u<2?"u32":u<=4?`vec${u}<u32>`:`array<u32, ${u}>`,l=Uh(e,o),c=typeof l=="string"?l:l[1],p=typeof l=="string"?l:l[0],h={indices:s,value:c,storage:p,tensor:e},g=j=>typeof j=="string"?j:`${j}u`,x={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},b=i?"uniforms.":"",w=`${b}${r}_shape`,S=`${b}${r}_strides`,O="";for(let j=0;j<u-1;j++)O+=`
    let dim${j} = current / ${S}[${j}];
    let rest${j} = current % ${S}[${j}];
    indices[${j}] = dim${j};
    current = rest${j};
    `;O+=`indices[${u-1}] = current;`;let E=u<2?"":`
  fn o2i_${r}(offset: u32) -> ${h.indices} {
    var indices: ${h.indices};
    var current = offset;
    ${O}
    return indices;
  }`,B=j=>(x.offsetToIndices=!0,u<2?j:`o2i_${r}(${j})`),z=[];if(u>=2)for(let j=u-1;j>=0;j--)z.push(`${S}[${j}] * (indices[${j}])`);let M=u<2?"":`
  fn i2o_${r}(indices: ${h.indices}) -> u32 {
    return ${z.join("+")};
  }`,W=j=>(x.indicesToOffset=!0,u<2?j:`i2o_${r}(${j})`),Y=(...j)=>u===0?"0u":`${h.indices}(${j.map(g).join(",")})`,Q=(j,Se)=>u<2?`${j}`:`${j}[${Se}]`,he=(j,Se,Te)=>u<2?`${j}=${Te};`:`${j}[${Se}]=${Te};`,R={},ee=(j,Se)=>{x.broadcastedIndicesToOffset=!0;let Te=`${Se.name}broadcastedIndicesTo${r}Offset`;if(Te in R)return`${Te}(${j})`;let mt=[];for(let vt=u-1;vt>=0;vt--){let et=Se.indicesGet("outputIndices",vt+Se.rank-u);mt.push(`${Q(S,vt)} * (${et} % ${Q(w,vt)})`)}return R[Te]=`fn ${Te}(outputIndices: ${Se.type.indices}) -> u32 {
             return ${mt.length>0?mt.join("+"):"0u"};
           }`,`${Te}(${j})`},We=(j,Se)=>(()=>{if(h.storage===h.value)return`${r}[${j}]=${Se};`;if(h.storage==="vec2<u32>"&&h.value==="i32")return`${r}[${j}]=vec2<u32>(u32(${Se}), select(0u, 0xFFFFFFFFu, ${Se} < 0));`;if(h.storage==="vec2<u32>"&&h.value==="u32")return`${r}[${j}]=vec2<u32>(u32(${Se}), 0u);`;if(h.storage==="u32"&&h.value==="vec4<bool>")return`${r}[${j}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${Se}));`;throw new Error(`not supported combination of storage type ${h.storage} and value type ${h.value} yet`)})(),ge=j=>(()=>{if(h.storage===h.value)return`${r}[${j}]`;if(h.storage==="vec2<u32>"&&h.value==="i32")return`i32(${r}[${j}].x)`;if(h.storage==="vec2<u32>"&&h.value==="u32")return`u32(${r}[${j}].x)`;if(h.storage==="u32"&&h.value==="vec4<bool>")return`vec4<bool>(bool(${r}[${j}] & 0xFFu), bool(${r}[${j}] & 0xFF00u), bool(${r}[${j}] & 0xFF0000u), bool(${r}[${j}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${h.storage} and value type ${h.value} yet`)})(),Ne=u<2?"":`
  fn get_${r}ByIndices(indices: ${h.indices}) -> ${c} {
    return ${ge(`i2o_${r}(indices)`)};
  }`,Z=u<2?"":(()=>{let j=a.map(Te=>`d${Te}: u32`).join(", "),Se=a.map(Te=>`d${Te}`).join(", ");return`
  fn get_${r}(${j}) -> ${c} {
    return get_${r}ByIndices(${Y(Se)});
  }`})(),Ve=(...j)=>{if(j.length!==u)throw new Error(`indices length must be ${u}`);let Se=j.map(g).join(",");return u===0?ge("0u"):u===1?ge(Se[0]):(x.get=!0,x.getByIndices=!0,x.indicesToOffset=!0,`get_${r}(${Se})`)},Qe=j=>u<2?ge(j):(x.getByIndices=!0,x.indicesToOffset=!0,`get_${r}ByIndices(${j})`),Ye=u<2?"":`
  fn set_${r}ByIndices(indices: ${h.indices}, value: ${c}) {
    ${We(`i2o_${r}(indices)`,"value")}
  }`,Ze=u<2?"":(()=>{let j=a.map(Te=>`d${Te}: u32`).join(", "),Se=a.map(Te=>`d${Te}`).join(", ");return`
  fn set_${r}(${j}, value: ${c}) {
    set_${r}ByIndices(${Y(Se)}, value);
  }`})();return{impl:()=>{let j=[];return i||(j.push(`const ${w} = ${h.indices}(${n.join(",")});`),j.push(`const ${S} = ${h.indices}(${G.computeStrides(n).join(",")});`)),x.offsetToIndices&&j.push(E),x.indicesToOffset&&j.push(M),x.broadcastedIndicesToOffset&&Object.values(R).forEach(Se=>j.push(Se)),x.set&&j.push(Ze),x.setByIndices&&j.push(Ye),x.get&&j.push(Z),x.getByIndices&&j.push(Ne),j.join(`
`)},type:h,offsetToIndices:B,indicesToOffset:W,broadcastedIndicesToOffset:ee,indices:Y,indicesGet:Q,indicesSet:he,set:(...j)=>{if(j.length!==u+1)throw new Error(`indices length must be ${u}`);let Se=j[u];if(typeof Se!="string")throw new Error("value must be string");let Te=j.slice(0,u).map(g).join(",");return u===0?We("0u",Se):u===1?We(Te[0],Se):(x.set=!0,x.setByIndices=!0,x.indicesToOffset=!0,`set_${r}(${Te}, ${Se})`)},setByOffset:We,setByIndices:(j,Se)=>u<2?We(j,Se):(x.setByIndices=!0,x.indicesToOffset=!0,`set_${r}ByIndices(${j}, ${Se});`),get:Ve,getByOffset:ge,getByIndices:Qe,usage:t?"input":"output",name:r,strides:S,shape:w,rank:u}},X=(r,e,n,t=1)=>Hh(r,e,n,!0,t),oe=(r,e,n,t=1)=>Hh(r,e,n,!1,t),Ws=class{constructor(e){this.normalizedDispatchGroup=e;this.indicesHelpers=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=Tw){let n=typeof e=="number"?e:e[0],t=typeof e=="number"?1:e[1],o=typeof e=="number"?1:e[2],i=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,u=i?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_index) local_index : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>`,a=i?"let global_idx = global_id.x;":`let global_idx = (workgroup_id.z * ${this.normalizedDispatchGroup[0]*this.normalizedDispatchGroup[1]}u +
          workgroup_id.y * ${this.normalizedDispatchGroup[0]}u + workgroup_id.x) * ${n*t*o}u + local_index;`;return`@compute @workgroup_size(${n}, ${t}, ${o})
  fn main(${u}) {
    ${a}
  `}declareVariable(e,n){this.indicesHelpers.push(e),e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:e.type.indices}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:e.type.indices});let t=e.usage==="input"?"read":"read_write",o=e.type.storage;return`@group(0) @binding(${n}) var<storage, ${t}> ${e.name}: array<${o}>;`}declareVariables(...e){return e.map(n=>this.declareVariable(n,this.variableIndex++)).join(`
`)}registerUniform(e,n){return this.uniforms.push({name:e,type:n}),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:n,type:t}of this.uniforms)e.push(`${n}:${t}`);return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.indicesHelpers.map(e=>e.impl()).join(`
`)}},jh=r=>new Ws(r),Us=(r,e)=>{let n=r.length,t=[];for(let o=0;o<n;o++){let i=n-1-o,u=r[i]||1;(e[e.length-1-o]||1)>1&&u===1&&t.unshift(i)}return t},qh=r=>r<=4});var $w,Kh,Sw,Iw,zr,Yh,Xh,vo=D(()=>{"use strict";Pe();it();Fe();$w=r=>{if(!r||r.length!==1)throw new Error("Transpose requires 1 input.")},Kh=(r,e)=>e&&e.length!==r?[...new Array(r).keys()].reverse():e,Sw=(r,e)=>G.sortBasedOnPerm(r,Kh(r.length,e)),Iw=(r,e,n,t)=>{let o=[];o.push(`fn perm(i: ${t.type.indices}) -> ${n.type.indices} {
    var a: ${n.type.indices};`);for(let i=0;i<e;++i)o.push(n.indicesSet("a",r[i],`i[${i}]`));return o.push("return a;}"),o.join(`
`)},zr=(r,e)=>{let n=r.dataType,t=r.dims.length,o=Kh(t,e),i=qh(t),u=Sw(r.dims,o),a=i?u.length:u,s=i?t:r.dims,l=oe("output",n,a),c=X("a",n,s),p=h=>`
  ${h.registerUniform("output_size","u32").declareVariables(c,l)}

  ${Iw(o,t,c,l)}

  ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${l.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${l.setByOffset("global_idx",c.getByIndices("aIndices"))}
  }`;return{name:"Transpose",shaderCache:{hint:`${e}`,inputDependencies:i?["rank"]:["dims"]},getRunData:h=>{let g=G.size(u);return{outputs:[{dims:u,dataType:h[0].dataType}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:i?[{type:"uint32",data:g},...Vs(h[0].dims),...Vs(u)]:[{type:"uint32",data:g}]}},getShaderSource:p}},Yh=(r,e)=>{$w(r.inputs),r.compute(zr(r.inputs[0],e.perm))},Xh=r=>ye({perm:r.perm})});var _w,Aw,Ow,Ew,Cw,Pw,Dw,kw,Rw,Bw,lr,Jh,Zh,Qh,em,tm,rm,nm,om,im,am,sm=D(()=>{"use strict";Pe();Fe();ji();vo();_w={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},Aw={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Ow={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Ew={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Cw=(r,e)=>{let n=[];for(let t=e-r;t<e;++t)n.push(t);return n},Pw=(r,e)=>{let n=[],t=r.length;for(let i=0;i<t;i++)e.indexOf(i)===-1&&n.push(r[i]);let o=e.map(i=>r[i]);return[n,o]},Dw=(r,e)=>{let n=r.length+e.length,t=[],o=0;for(let i=0;i<n;i++)e.indexOf(i)===-1?t.push(r[o++]):t.push(1);return t},kw=(r,e)=>{for(let n=0;n<r.length;++n)if(r[r.length-n-1]!==e-1-n)return!1;return!0},Rw=(r,e)=>{let n=[];if(!kw(r,e)){for(let t=0;t<e;++t)r.indexOf(t)===-1&&n.push(t);r.forEach(t=>n.push(t))}return n},Bw=(r,e,n,t,o,i,u)=>{let a=n[0].dims,s=G.size(i),l=G.size(u),c=X("_A",n[0].dataType,a),p=oe("output",o,i),h=32,g=`
          var<workgroup> aBestValues : array<${p.type.storage}, ${h}>;
       `;return{name:r,shaderCache:e,getShaderSource:b=>`
        ${b.registerUniform("reduceSize","u32").declareVariables(c,p)}
        ${g}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${b.mainStart(h)}
          let local_idx = local_id.x;

          let outputIndex = global_idx / ${h};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = ${p.type.storage}(${Ow[t]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${h}) {
           let candidate = ${p.type.storage}(${c.getByOffset("offset + k")});
           bestValue = ${_w[t]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${h}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${Aw[t]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${p.setByOffset("outputIndex",`${t==="mean"?`bestValue / ${p.type.storage}(uniforms.reduceSize)`:`${Ew[t]}`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:i,dataType:o}],dispatchGroup:{x:s},programUniforms:[{type:"uint32",data:l}]})}},lr=(r,e,n,t)=>{let o=r.inputs.length===1?n:Hs(r.inputs,n),i=o.axes;i.length===0&&!o.noopWithEmptyAxes&&(i=r.inputs[0].dims.map((g,x)=>x));let u=G.normalizeAxes(i,r.inputs[0].dims.length),a=u,s=r.inputs[0],l=Rw(a,r.inputs[0].dims.length);l.length>0&&(s=r.compute(zr(r.inputs[0],l),{inputs:[0],outputs:[-1]})[0],a=Cw(a.length,s.dims.length));let[c,p]=Pw(s.dims,a),h=c;o.keepDims&&(h=Dw(c,u)),r.compute(Bw(e,{hint:o.cacheKey,inputDependencies:["type"]},[s],t,r.inputs[0].dataType,h,p),{inputs:[s]})},Jh=(r,e)=>{lr(r,"ReduceMeanShared",e,"mean")},Zh=(r,e)=>{lr(r,"ReduceL1Shared",e,"l1")},Qh=(r,e)=>{lr(r,"ReduceL2Shared",e,"l2")},em=(r,e)=>{lr(r,"ReduceLogSumExpShared",e,"logSumExp")},tm=(r,e)=>{lr(r,"ReduceMaxShared",e,"max")},rm=(r,e)=>{lr(r,"ReduceMinShared",e,"min")},nm=(r,e)=>{lr(r,"ReduceProdShared",e,"prod")},om=(r,e)=>{lr(r,"ReduceSumShared",e,"sum")},im=(r,e)=>{lr(r,"ReduceSumSquareShared",e,"sumSquare")},am=(r,e)=>{lr(r,"ReduceLogSumShared",e,"logSum")}});var cr,Mw,qi,Hs,dr,Lw,Nw,zw,Fw,Gw,Ww,Vw,Uw,Hw,jw,fr,um,lm,cm,dm,fm,pm,hm,mm,gm,bm,Jt,ji=D(()=>{"use strict";Pe();it();Fe();sm();cr=r=>{if(!r||r.length===0||r.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(r.length===2&&r[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Mw=r=>["","",`var value = ${r.getByOffset("inputOffset")};`,""],qi=(r,e,n,t,o,i,u=!1,a=!1)=>{let s=[],l=n[0].dims,c=G.normalizeAxes(o,n[0].dims.length),p=!a&&c.length===0;l.forEach((W,Y)=>{p||c.indexOf(Y)>=0?u&&s.push(1):s.push(W)});let h=[],g=X("_A",n[0].dataType,l),x=oe("output",i,s),b=t(g,x,c),w=`inputOffset = ${g.indicesToOffset("inputIndices")};`,S=`let ${w};`,O=`var ${w};`,E=b[1]===""?"":O,B=(b[1]===""?S:w)+`
`+b[2];for(let W=0,Y=0;W<n[0].dims.length;W++)p||c.indexOf(W)>=0?(u&&Y++,B=`for(var j${W}: u32 = 0; j${W} < ${n[0].dims[W]}; j${W}++) {
                ${b[2].includes("lastIndex")?`let lastIndex = j${W};`:""}
                ${g.indicesSet("inputIndices",W,`j${W}`)}
                ${B}
              }`):(h.push(`${g.indicesSet("inputIndices",W,x.indicesGet("outputIndices",Y))};`),Y++);let z=G.size(s);return{name:r,shaderCache:e,getShaderSource:W=>`
        ${W.declareVariables(g,x)}

        ${W.mainStart()}
          ${W.guardAgainstOutOfBoundsWorkgroupSizes(z)}
          var inputIndices: ${g.type.indices};
          let outputIndices = ${x.offsetToIndices("global_idx")};

          ${h.join(`
`)}
          ${b[0]}       // init ops for reduce max/min
          ${E}
          ${b[1]}
          ${B}
          ${b[3]}
          ${b.length===4?x.setByOffset("global_idx","value"):b.slice(4).join(`
`)}
        }`,getRunData:()=>({outputs:[{dims:s,dataType:i}],dispatchGroup:{x:Math.ceil(z/64)}})}},Hs=(r,e)=>{let n=[];return r[1].dims[0]>0&&r[1].getBigInt64Array().forEach(t=>n.push(Number(t))),ye({axes:n,keepDims:e.keepDims,noopWithEmptyAxes:e.noopWithEmptyAxes})},dr=(r,e,n,t)=>{let o=r.inputs,i=o.length===1?n:Hs(o,n);r.compute(qi(e,{hint:i.cacheKey},[o[0]],i.noopWithEmptyAxes&&i.axes.length===0?Mw:t,i.axes,o[0].dataType,i.keepDims,i.noopWithEmptyAxes),{inputs:[0]})},Lw=(r,e)=>{cr(r.inputs),dr(r,"ReduceLogSum",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${t.getByOffset("inputOffset")};`,"value = log(value);"])},Nw=(r,e)=>{cr(r.inputs),dr(r,"ReduceL1",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += abs(${t.getByOffset("inputOffset")});`,""])},zw=(r,e)=>{cr(r.inputs),dr(r,"ReduceL2",e,(t,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${t.getByOffset("inputOffset")}; value += (t * t);`,"value = sqrt(value);"])},Fw=(r,e)=>{cr(r.inputs),dr(r,"ReduceLogSumExp",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += exp(${t.getByOffset("inputOffset")});`,"value = log(value);"])},Gw=(r,e)=>{cr(r.inputs),dr(r,"ReduceMax",e,(t,o,i)=>{let u=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&u.push(t.indicesSet("inputIndices",a,0));return[`${u.join(`
`)}`,`var value = ${t.getByOffset("inputOffset")};`,`value = max(value, ${t.getByOffset("inputOffset")});`,""]})},Ww=(r,e)=>{cr(r.inputs),dr(r,"ReduceMean",e,(t,o,i)=>{let u=1;for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&(u*=r.inputs[0].dims[a]);return["var sum = f32(0);","",`sum += f32(${t.getByOffset("inputOffset")});`,`let value = ${o.type.value}(sum / ${u});`]})},Vw=(r,e)=>{cr(r.inputs),dr(r,"ReduceMin",e,(t,o,i)=>{let u=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&u.push(`inputIndices[${a}] = 0;`);return[`${u.join(`
`)}`,`var value = ${t.getByOffset("inputOffset")};`,`value = min(value, ${t.getByOffset("inputOffset")});`,""]})},Uw=(r,e)=>{cr(r.inputs),dr(r,"ReduceProd",e,(t,o)=>[`var value = ${o.type.storage}(1);`,"",`value *= ${t.getByOffset("inputOffset")};`,""])},Hw=(r,e)=>{cr(r.inputs),dr(r,"ReduceSum",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${t.getByOffset("inputOffset")};`,""])},jw=(r,e)=>{cr(r.inputs),dr(r,"ReduceSumSquare",e,(t,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${t.getByOffset("inputOffset")}; value += t * t;`,""])},fr=(r,e,n)=>{if(e.length===0)return!!n;let t=1,o=1;for(let i=0;i<e.length;i++)e.indexOf(i)===-1?t*=r[i]:o*=r[i];return o<32&&t>1024},um=(r,e)=>{fr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Ww(r,e):Jh(r,e)},lm=(r,e)=>{fr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Nw(r,e):Zh(r,e)},cm=(r,e)=>{fr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?zw(r,e):Qh(r,e)},dm=(r,e)=>{fr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Fw(r,e):em(r,e)},fm=(r,e)=>{fr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Gw(r,e):tm(r,e)},pm=(r,e)=>{fr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Vw(r,e):rm(r,e)},hm=(r,e)=>{fr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Uw(r,e):nm(r,e)},mm=(r,e)=>{fr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Hw(r,e):om(r,e)},gm=(r,e)=>{fr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?jw(r,e):im(r,e)},bm=(r,e)=>{fr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Lw(r,e):am(r,e)},Jt=r=>ye(r)});var ym,xm,vm,wm,js,Tm=D(()=>{"use strict";dt();it();ji();ym=r=>{if(!r||r.length===0||r.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(r[0].dataType!==1)throw new Error("Invalid input type.")},xm=(r,e)=>ye({axis:e.axis,keepDims:e.keepDims,selectLastIndex:e.selectLastIndex}),vm=(r,e)=>{ym(r.inputs);let n=(o,i,u)=>{let a=[];for(let s=0;s<o.rank;s++)(u.indexOf(s)>=0||u.length===0)&&a.push(`inputIndices[${s}] = 0;`);return[`${a.join(`
`)}`,`var value = ${o.getByOffset("inputOffset")};
var bestIndex : i32 = 0;`,`if (${o.getByOffset("inputOffset")} ${e.selectLastIndex>0?"<=":"<"} value) {
         value = ${o.getByOffset("inputOffset")};
         bestIndex = i32(lastIndex);
       }`,"",i.setByOffset("global_idx","bestIndex")]},t=r.inputs.length===1?e:xm(r.inputs,e);r.compute(qi("ArgMin",{hint:t.cacheKey},[r.inputs[0]],n,[t.axis],7,t.keepDims),{inputs:[0]})},wm=(r,e)=>{ym(r.inputs);let n=(o,i,u)=>{let a=[];for(let s=0;s<o.rank;s++)(u.indexOf(s)>=0||u.length===0)&&a.push(`inputIndices[${s}] = 0;`);return[`${a.join(`
`)}`,`var value = ${o.getByOffset("inputOffset")};
var bestIndex : i32 = 0;`,`if (${o.getByOffset("inputOffset")} ${e.selectLastIndex>0?">=":">"} value) {
         value = ${o.getByOffset("inputOffset")};
         bestIndex = i32(lastIndex);
       }`,"",i.setByOffset("global_idx","bestIndex")]},t=r.inputs.length===1?e:xm(r.inputs,e);r.compute(qi("argMax",{hint:t.cacheKey},[r.inputs[0]],n,[t.axis],7,t.keepDims),{inputs:[0]})},js=r=>ye(r)});var qw,Kw,$m,Sm=D(()=>{"use strict";Pe();Fe();qw=r=>{if(r[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(r[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(r[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(r[0].dims[2]!==r[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Kw=r=>{let e=r[0].dims,n=r[0].dims[2],t=G.size(e)/4,o=r[0].dataType,i=X("input",o,e,4),u=X("bias",o,[n],4),a=X("residual",o,e,4),s=oe("output",o,e,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:e,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(t/64)}}),getShaderSource:c=>`
  const channels = ${n}u / 4;
  ${c.declareVariables(i,u,a,s)}

  ${c.mainStart()}
    ${c.guardAgainstOutOfBoundsWorkgroupSizes(t)}
    let value = ${i.getByOffset("global_idx")}
      + ${u.getByOffset("global_idx % channels")} + ${a.getByOffset("global_idx")};
    ${s.setByOffset("global_idx","value")}
  }`}},$m=r=>{qw(r.inputs),r.compute(Kw(r.inputs))}});var Yw,Ge,Im,_m,Am,Om,Em,Cm,Pm,Dm,km,qs,Xw,Rm,Bm,Mm,Lm,Ki,Nm,Yi,zm,Fm,Gm,Wm,Vm,Um,Hm,jm,qm,Km,Ym,Xm,Jm,Zm,Qm,eg,tg,Ks=D(()=>{"use strict";dt();Pe();it();Fe();Yw=(r,e,n,t,o,i)=>{let u=Math.ceil(e/4),a="";typeof o=="string"?a=`${o}(a)`:a=o("a");let s=X("inputData",n,[u],4),l=oe("outputData",t,[u],4);return`
      ${r.registerUniform("vec_size","u32").declareVariables(s,l)}

  ${i??""}

  ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${s.getByOffset("global_idx")};
    ${l.setByOffset("global_idx",a)}
  }`},Ge=(r,e,n,t,o,i=r.dataType)=>({name:e,shaderCache:{hint:o,inputDependencies:["type"]},getShaderSource:u=>Yw(u,G.size(r.dims),r.dataType,i,n,t),getRunData:u=>({outputs:[{dims:r.dims,dataType:i}],dispatchGroup:{x:Math.ceil(G.size(u[0].dims)/64/4)},programUniforms:[{type:"uint32",data:Math.ceil(G.size(r.dims)/4)}]})}),Im=r=>{r.compute(Ge(r.inputs[0],"Abs","abs"))},_m=r=>{r.compute(Ge(r.inputs[0],"Acos","acos"))},Am=r=>{r.compute(Ge(r.inputs[0],"Acosh","acosh"))},Om=r=>{r.compute(Ge(r.inputs[0],"Asin","asin"))},Em=r=>{r.compute(Ge(r.inputs[0],"Asinh","asinh"))},Cm=r=>{r.compute(Ge(r.inputs[0],"Atan","atan"))},Pm=r=>{r.compute(Ge(r.inputs[0],"Atanh","atanh"))},Dm=r=>ye(r),km=(r,e)=>{let n;switch(e.to){case 10:n="vec4<f16>";break;case 1:n="vec4<f32>";break;case 12:n="vec4<u32>";break;case 6:n="vec4<i32>";break;case 9:n="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${e.to}`)}r.compute(Ge(r.inputs[0],"Cast",n,void 0,e.cacheKey,e.to))},qs=(r,e)=>{let n=at(r.inputs[0].dataType);r.compute(Ge(r.inputs[0],"Clip",t=>`clamp(${t}, clip_min_, clip_max_)`,`
    const clip_min_: vec4<${n}> = vec4(${n}(${e.min}));
    const clip_max_: vec4<${n}> = vec4(${n}(${e.max}));
`,e.cacheKey),{inputs:[0]})},Xw=r=>{let e=r.length>=2?r[1].getFloat32Array()[0]:Ui,n=r.length>=3?r[2].getFloat32Array()[0]:Hi;return ye({min:e,max:n})},Rm=r=>{let e=Xw(r.inputs);qs(r,e)},Bm=r=>{r.compute(Ge(r.inputs[0],"Ceil","ceil"))},Mm=r=>{r.compute(Ge(r.inputs[0],"Cos","cos"))},Lm=r=>{r.compute(Ge(r.inputs[0],"Cosh","cosh"))},Ki=r=>ye(r),Nm=(r,e)=>{r.compute(Ge(r.inputs[0],"Elu",n=>`elu_vf32(${n})`,`
  const elu_alpha_: f32 = f32(${e.alpha});

  fn elu_f32(a: f32) -> f32 {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<f32>) -> vec4<f32> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,e.cacheKey))},Yi=(r,e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: ${r}) -> ${r} {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,zm=r=>{let e=at(r.inputs[0].dataType);r.compute(Ge(r.inputs[0],"Erf",n=>`erf_vf32(${n})`,Yi(`vec4<${e}>`,e)))},Fm=r=>{r.compute(Ge(r.inputs[0],"Exp","exp"))},Gm=r=>{r.compute(Ge(r.inputs[0],"Floor","floor"))},Wm=r=>{let e=at(r.inputs[0].dataType);r.compute(Ge(r.inputs[0],"Gelu",n=>`0.5 * ${n} * (1.0 + erf_vf32(${n} * 0.7071067811865475))`,Yi(`vec4<${e}>`,e)))},Vm=(r,e)=>{r.compute(Ge(r.inputs[0],"LeakyRelu",n=>`select(leaky_relu_alpha_ * ${n}, ${n}, ${n} >= vec4<f32>(0.0))`,`const leaky_relu_alpha_: f32 = f32(${e.alpha});`,e.cacheKey))},Um=r=>{r.compute(Ge(r.inputs[0],"Not",e=>`!${e}`))},Hm=r=>{r.compute(Ge(r.inputs[0],"Neg",e=>`-${e}`))},jm=r=>{r.compute(Ge(r.inputs[0],"Reciprocal",e=>`1.0/${e}`))},qm=r=>{r.compute(Ge(r.inputs[0],"Relu",e=>`select(vec4<f32>(0.0), ${e}, ${e} > vec4<f32>(0.0))`))},Km=r=>{r.compute(Ge(r.inputs[0],"Sigmoid",e=>`(1.0 / (1.0 + exp(-${e})))`))},Ym=r=>{r.compute(Ge(r.inputs[0],"Sin","sin"))},Xm=r=>{r.compute(Ge(r.inputs[0],"Sinh","sinh"))},Jm=r=>{r.compute(Ge(r.inputs[0],"Sqrt","sqrt"))},Zm=r=>{r.compute(Ge(r.inputs[0],"Tan","tan"))},Qm=r=>{r.compute(Ge(r.inputs[0],"Tanh","tanh"))},eg=(r,e)=>(r.compute(Ge(r.inputs[0],"ThresholdedRelu",n=>`select(vec4<f32>(0.0), ${n}, ${n} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_: vec4<f32> = vec4<f32>(${e.alpha});`,e.cacheKey)),0),tg=r=>{r.compute(Ge(r.inputs[0],"Log","log"))}});var Zw,Qw,rg,ng=D(()=>{"use strict";Pe();Fe();Ks();Zw=r=>{if(r[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(r[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(r[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(r[0].dims[2]!==r[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Qw=r=>{let e=r[0].dims.slice();e[2]=e[2]/2;let n=X("input",r[0].dataType,r[0].dims,4),t=X("bias",r[0].dataType,[r[0].dims[2]],4),o=oe("output",r[0].dataType,e,4),i=G.size(e)/4;return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:e,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:a=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${r[0].dims[2]/4/2}u;

  ${a.declareVariables(n,t,o)}

  ${Yi("vec4f")}

  ${a.mainStart()}
    ${a.guardAgainstOutOfBoundsWorkgroupSizes(i)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${o.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},rg=r=>{Zw(r.inputs),r.compute(Qw(r.inputs))}});var e2,t2,pr,og,ig,ag,sg,ug,lg,cg,dg,fg,pg,hg=D(()=>{"use strict";dt();Pe();Fe();e2=(r,e,n,t,o,i,u,a,s,l,c)=>{let p=G.size(t),h=Math.ceil(p/4),g,x;typeof u=="string"?g=x=(B,z)=>`${u}((${B}),(${z}))`:typeof u=="function"?g=x=u:(g=u.scalar,x=u.vector);let b="",w=oe("outputData",l,t,4),S=X("aData",a,e,4),O=X("bData",s,n,4);if(i){let B=z=>{let M=G.computeStrides(z),W=[];for(let Y=z.length-1;Y>=0;Y--){let Q=w.indicesGet("outputIndices",Y+t.length-z.length);W.push(`${M[Y]}u * (${Q} % ${z[Y]}u)`)}return W.length>0?W.join("+"):"0u"};b=`
          fn calcOffsetA(outputIndices: ${w.type.indices}) -> u32 {
            return ${B(e)};
          }

          fn calcOffsetB(outputIndices: ${w.type.indices}) -> u32 {
            return ${B(n)};
          }
        `}let E;if(o)if(i){let B=G.size(e)===1,z=G.size(n)===1;B||z?E=w.setByOffset("global_idx",x(B?`${S.type.value}(${S.getByOffset("0")}.x)`:S.getByOffset("global_idx"),z?`${O.type.value}(${O.getByOffset("0")}.x)`:O.getByOffset("global_idx"))):E=`
            let outputIndices = ${w.offsetToIndices("global_idx * 4u")};
            let offsetA = calcOffsetA(outputIndices);
            let offsetB = calcOffsetB(outputIndices);
            ${w.setByOffset("global_idx",x(S.getByOffset("offsetA / 4u"),O.getByOffset("offsetB / 4u")))}
          `}else E=w.setByOffset("global_idx",x(S.getByOffset("global_idx"),O.getByOffset("global_idx")));else{if(!i)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let B=(z,M,W="")=>{let Y=`aData[indexA${M}][componentA${M}]`,Q=`bData[indexB${M}][componentB${M}]`;return`
            let outputIndices${M} = ${w.offsetToIndices(`global_idx * 4u + ${M}u`)};
            let offsetA${M} = calcOffsetA(outputIndices${M});
            let offsetB${M} = calcOffsetB(outputIndices${M});
            let indexA${M} = offsetA${M} / 4u;
            let indexB${M} = offsetB${M} / 4u;
            let componentA${M} = offsetA${M} % 4u;
            let componentB${M} = offsetB${M} % 4u;
            ${z}[${M}] = ${W}(${g(Y,Q)});
          `};l===9?E=`
            var data = vec4<u32>(0);
            ${B("data",0,"u32")}
            ${B("data",1,"u32")}
            ${B("data",2,"u32")}
            ${B("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:E=`
            ${B("outputData[global_idx]",0)}
            ${B("outputData[global_idx]",1)}
            ${B("outputData[global_idx]",2)}
            ${B("outputData[global_idx]",3)}
          `}return`
        ${r.declareVariables(S,O,w)}

        ${c??""}
        ${b}

        ${r.mainStart()}
        ${r.guardAgainstOutOfBoundsWorkgroupSizes(h)}
        ${E}
      }`},t2=(r,e,n,t,o,i,u=n.dataType)=>{let a=!G.areEqual(n.dims,t.dims),s=n.dims,l=G.size(n.dims),c=!1;if(a){let p=ur.calcShape(n.dims,t.dims,!1);if(!p)throw new Error("Can't perform binary op on the given tensors");s=p,l=G.size(s);let h=G.size(n.dims)===1,g=G.size(t.dims)===1,x=1;for(let b=1;b<s.length;b++){let w=n.dims[n.dims.length-b]??1,S=t.dims[t.dims.length-b]??1;if(w===S)x*=w;else break}(x%4===0||h||g)&&(c=!0)}else c=!0;return{name:r,shaderCache:{hint:e},getShaderSource:p=>e2(p,n.dims,t.dims,s,c,a,o,n.dataType,t.dataType,u,i),getRunData:()=>({outputs:[{dims:s,dataType:u}],dispatchGroup:{x:Math.ceil(l/64/4)}})}},pr=(r,e,n,t,o,i)=>{r.compute(t2(e,o??"",r.inputs[0],r.inputs[1],n,t,i))},og=r=>{pr(r,"Add",(e,n)=>`${e}+${n}`)},ig=r=>{pr(r,"Div",(e,n)=>`${e}/${n}`)},ag=r=>{pr(r,"Equal",{scalar:(e,n)=>`u32(${e}==${n})`,vector:(e,n)=>`vec4<u32>(${e}==${n})`},void 0,void 0,9)},sg=r=>{pr(r,"Mul",(e,n)=>`${e}*${n}`)},ug=r=>{let e=X("input",r.inputs[0].dataType,r.inputs[0].dims).type.value;pr(r,"Pow",{scalar:(t,o)=>`pow_custom(${t},${o})`,vector:(t,o)=>`pow_vector_custom(${t},${o})`},`
    fn pow_custom(a : ${e}, b : ${e}) -> ${e} {
      if (b == ${e}(0.0)) {
        return ${e}(1.0);
      } else if (a < ${e}(0.0) && f32(b) != floor(f32(b))) {
        return ${e}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${e}(1.0), round(f32(abs(b) % ${e}(2.0))) != 1.0) * ${e}(${e==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${e}>, b : vec4<${e}>) -> vec4<${e}> {
      // TODO: implement vectorized pow
      return vec4<${e}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},lg=r=>{pr(r,"Sub",(e,n)=>`${e}-${n}`)},cg=r=>{pr(r,"Greater",{scalar:(e,n)=>`u32(${e}>${n})`,vector:(e,n)=>`vec4<u32>(${e}>${n})`},void 0,void 0,9)},dg=r=>{pr(r,"Less",{scalar:(e,n)=>`u32(${e}<${n})`,vector:(e,n)=>`vec4<u32>(${e}<${n})`},void 0,void 0,9)},fg=r=>{pr(r,"GreaterOrEqual",{scalar:(e,n)=>`u32(${e}>=${n})`,vector:(e,n)=>`vec4<u32>(${e}>=${n})`},void 0,void 0,9)},pg=r=>{pr(r,"LessOrEqual",{scalar:(e,n)=>`u32(${e}<=${n})`,vector:(e,n)=>`vec4<u32>(${e}<=${n})`},void 0,void 0,9)}});var n2,o2,i2,a2,mg,gg,bg=D(()=>{"use strict";Pe();it();Fe();n2=r=>{if(!r||r.length<1)throw new Error("too few inputs");let e=r[0].dataType,n=r[0].dims.length;for(let t of r){if(t.dataType!==e)throw new Error("input tensors should be one type");if(t.dims.length!==n)throw new Error("input tensors should have the same shape")}},o2=r=>`
  fn calculateInputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${r}u; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${r}u;
  }`,i2=(r,e)=>{let n=r.length,t=[];for(let o=0;o<n;++o){let i=e.setByOffset("global_idx",r[o].getByIndices("indices"));n===1?t.push(i):o===0?t.push(`if (inputIndex == ${o}u) { ${i} }`):o===n-1?t.push(`else { ${i} }`):t.push(`else if (inputIndex == ${o}) { ${i} }`)}return t.join(`
`)},a2=(r,e)=>{let n=r[0].dims.slice();if(e>=n.length||e<-1*n.length)throw new Error("axis specified for concat doesn't match input dimensionality");let t=e<0?n.length+e:e,o=n.slice(0);for(let g=1;g<r.length;g++){let x=r[g].dims.slice();for(let b=0;b<n.length;b++)if(b===t)o[t]+=x[b];else if(n[b]!==x[b])throw new Error("non concat dimensions must match")}let i=G.size(o),u=new Array(r.length),a=new Array(r.length),s=r[0].dataType,l=0;for(let g=0;g<r.length;++g)l+=r[g].dims[t],u[g]=l,a[g]=X(`input${g}`,s,r[g].dims);let c=oe("output",s,o),p=c.indicesGet("indices",t),h=g=>`
  ${g.declareVariables(...a,c)}

  const sizeInConcatAxis = array<u32, ${u.length}>(${u.map(x=>`${x}u`).join(",")});
  ${o2(u.length)}

  ${g.mainStart()}
    ${g.guardAgainstOutOfBoundsWorkgroupSizes(i)}

    var indices = ${c.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${p});
    if (inputIndex != 0u) {
      ${p} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${i2(a,c)}
  }`;return{name:"Concat",shaderCache:{hint:`${e}`},getRunData:()=>({outputs:[{dims:o,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:h}},mg=(r,e)=>{n2(r.inputs),r.compute(a2(r.inputs,e.axis))},gg=r=>ye({axis:r.axis})});var ht,Xi,Ji,Zi=D(()=>{"use strict";ht=(r,e)=>{switch(r){case 1:return e;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${r}-component is not supported.`)}},Xi=(r,e=!1,n=!1,t=3)=>"",Ji=(r,e)=>`
      ${r?"value = value + getBiasByOutputCoords(coords);":""}
      // TODO uncomment the following line when activation is supported above.
      // ${e?"value = activation(value, coords);":""}
      `});var Qi,Ys=D(()=>{"use strict";Qi=`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    outShapeStrides.x, outShapeStrides.y, outShapeStrides.z, 1));
}
`});var ea,ta,wo=D(()=>{"use strict";Pe();ea=(r,e=!1)=>{switch(r.activation){case"Relu":return{activationFunction:"",applyActivation:"value = max(value, 0.0);"};case"Sigmoid":return{activationFunction:"",applyActivation:"value = (1.0 / (1.0 + exp(-value)));"};case"Clip":return{activationFunction:`const clip_min_=f32(${r.clipMin});const clip_max_=f32(${r.clipMax});`,applyActivation:e?"value = clamp(value, vec4(clip_min_), vec4(clip_max_));":"value = clamp(value, clip_min_, clip_max_);"};default:return{activationFunction:"",applyActivation:""}}},ta=r=>{let e=r?.activation||"";if(e==="Clip"){let[n,t]=r?.activation_params||[Ui,Hi];return{activation:e,clipMax:t,clipMin:n,activationCacheKey:`${e}:${n},${t}`}}return{activation:e,activationCacheKey:e}}});var s2,u2,To,yg,l2,$o,c2,ra,So=D(()=>{"use strict";Pe();Fe();wo();Zi();s2=(r,e)=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${e?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${e?", batchIndices":""});
        `,u2=(r,e)=>r?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${e===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,To=(r,e,n="f32",t,o=!1,i=32,u=!1,a=32)=>{let s=e[1]*r[1],l=e[0]*r[0],c=o?s:i,p=o?i:s,h=c/e[0],g=i/e[1];if(!((o&&h===4&&r[1]===4||!o&&(h===3||h===4))&&c%e[0]===0&&i%e[1]===0&&r[0]===4))throw new Error(`If transposeA ${o} is true, innerElementSize ${h} and workPerThread[1] ${r[1]} must be 4.
      Otherwise, innerElementSize ${h} must be 3 or 4.
  tileAWidth ${c} must be divisible by workgroupSize[0]${e[0]}. tileInner ${i} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${r[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${h}<${n}>, ${c/h}>, ${p}>;
var<workgroup> mm_Bsub: array<array<vec4<${n}>, ${l/r[0]}>, ${i}>;

const rowPerThread = ${r[1]};
const colPerThread = ${r[0]};
const innerElementSize = ${h};
const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${u?"0":"i32(globalId.z)"};
  ${t?`let batchIndices = ${t.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${s};

  let numTiles = ${u?`${Math.ceil(a/i)}`:"(dimInner - 1) / tileInner + 1"};
  var kStart = ${u?`i32(globalId.z) * ${a}`:"0"};

  var acc: array<vec4<${n}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${g};
  for (var t = 0; t < numTiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${s2(o,t)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${g}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${t?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${h===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${u2(o,h)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},yg=(r,e)=>r?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${e?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${e?", batchIndices":""});
            `,l2=r=>r?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",$o=(r,e,n="f32",t,o=!1,i=32,u=!1,a=32,s=!1)=>{let l=r[1]*e[1],c=r[0]*e[0],p=o?l:i,h=o?i:l;if(!(h%e[1]===0&&p%e[0]===0&&i%e[1]===0))throw new Error(`tileAHight ${h} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${p} must be divisible by workgroupSize[0]${e[0]}, tileInner ${i} must be divisible by workgroupSize[1]${e[1]}`);let g=h/e[1],x=p/e[0],b=i/e[1],w=s?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${l};
    let globalColStart = i32(workgroupId.x) * ${c};

    // Loop over shared dimension.
    for (var t = 0; t < numTiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${h}; inputRow = inputRow + ${e[1]}) {
        for (var inputCol = localCol; inputCol < ${p}; inputCol = inputCol + ${e[0]}) {
          ${yg(o,t)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${i}; inputRow = inputRow + ${e[1]}) {
            for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${e[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${t?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${n}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${o?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${e[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${e[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${l};

let tileRowA = i32(localId.y) * ${g};
let tileColA = i32(localId.x) * ${x};
let tileRowB = i32(localId.y) * ${b};
// Loop over shared dimension.
for (var t = 0; t < numTiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${g}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${x}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${yg(o,t)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${b}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${t?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${n}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${l2(o)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${n}, ${p}>, ${h}>;
  var<workgroup> mm_Bsub : array<array<${n}, ${c}>, ${i}>;
  const rowPerThread = ${r[1]};
  const colPerThread = ${r[0]};
  const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${u?"0":"i32(globalId.z)"};
    ${t?`let batchIndices = ${t.offsetToIndices("u32(batch)")};`:""}
    let numTiles = ${u?`${Math.ceil(a/i)}`:"(dimInner - 1) / tileInner + 1"};
    var kStart = ${u?`i32(globalId.z) * ${a}`:"0"};

    var acc : array<array<${n}, colPerThread>, rowPerThread>;

    // Without this initialization strange values show up in acc.
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = 0.0;
      }
    }
    ${w}
  }
`},c2=(r,e,n,t,o,i=!1)=>{let u=o[0],a=o[1],s=o[2],l=t[0],c=t[1],p=t[2],h=t[3],g=Us(u,s),x=Us(a,s),b=at(t[0].type.tensor),w=()=>{let E=c.rank,B=l.rank,z=`var aIndices: ${c.type.indices};`;for(let M=E-2-1,W=B-1;M>=0;M--,W--)z+=`
aIndices[${M}] = ${B>1?`batchIndices[${W}]`:"batchIndices"};`;return g.forEach(M=>{z+=`
aIndices[${M}] = 0;`}),z+=`
aIndices[${E-2}] = u32(row);
                   aIndices[${E-1}] = u32(colIn);`,z},S=()=>{let E=p.rank,B=l.rank,z=`var bIndices: ${p.type.indices};`;for(let M=E-2-1,W=B-1;M>=0;M--,W--)z+=`
bIndices[${M}] = ${B>1?`batchIndices[${W}]`:"batchIndices"};`;return x.forEach(M=>{z+=`
bIndices[${M}] = 0;`}),z+=`
bIndices[${E-2}] = u32(row);
                   bIndices[${E-1}] = u32(colIn);`,z};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${ht(r,b)} {
      var value = ${ht(r,b)}(0.0);
      let col = colIn * ${r};
      if(row < dimAOuter && col < dimInner)
      {
        ${w()}
        value = ${c.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${ht(r,b)} {
      var value = ${ht(r,b)}(0.0);
      let col = colIn * ${r};
      if(row < dimInner && col < dimBOuter)
      {
        ${S()}
        value = ${p.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${ht(r,b)}) {
      let col = colIn * ${r};
      if (row < dimAOuter && col < dimBOuter) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${e?`value = value + ${i?"bias[colIn]":`${ht(r,b)}(bias[row])`};`:""}
        ${n}
        ${h.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},ra=(r,e,n,t,o=!1)=>{let i=r[0].dims,u=r[1].dims,a=i.slice(0,-2),s=u.slice(0,-2),l=t?t.slice(0,-2):n.slice(0,-2),c=X("batchDims",r[0].dataType,l),p=[c],h=[a,s,l],g=G.size(l),x=i[i.length-2],b=i[i.length-1],w=u[u.length-1],S=b%4===0&&w%4===0,{activationFunction:O,applyActivation:E}=ea(e,S),B=x<=8?[4,1,1]:[4,4,1],z=[8,8,1],M=[Math.ceil(w/z[0]/B[0]),Math.ceil(x/z[1]/B[1]),Math.ceil(g/z[2]/B[2])],W=at(r[0].dataType),Y=S?4:1,Q=X("a",r[0].dataType,[...a,x,b/Y],Y),he=X("b",r[1].dataType,[...s,b,w/Y],Y),R=oe("result",r[0].dataType,[g,x,w/Y],Y);p.push(Q),p.push(he),p.push(R);let ee=[Q,he],We=r.length>2,ge=c2(Y,We,E,p,h,o);if(We){let Z=o?Y:1;ee.push(X("bias",r[2].dataType,r[2].dims,Z))}let Ne=Z=>`
  const dimAOuter: i32 = ${x};
  const dimBOuter: i32 = ${w};
  const dimInner: i32 = ${b};
  ${Z.declareVariables(...ee,R)}
  ${O}
  ${ge}
  ${S?To(B,z,W,c):$o(B,z,W,c)}
                   ${c.impl()}`;return{name:"MatMul",shaderCache:{hint:e.activationCacheKey},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:M[0],y:M[1],z:M[2]}}),getShaderSource:Ne}}});var d2,xg,vg=D(()=>{"use strict";Lr();Pe();Fe();Zi();Ys();So();d2=(r,e,n,t,o=!1,i,u=!1,a=4,s=4,l=4,c="f32")=>{let p=he=>{switch(he){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${c}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${he} is not supported.`)}},h=he=>{switch(he){case 1:return"return w[row * wShape[3] + colIn];";case 4:return"return w[row * wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${he} is not supported.`)}},g=r?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,x=r?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,b=r?"xShape[1]":"xShape[2]",w=r?"xShape[2]":"xShape[3]",S=r?"row":"col",O=r?"col":"row",E=`
    let inChannels = wShape[2];
    let outWidth = ${r?"outShape[2]":"outShape[3]"};
    let outRow = ${S} / outWidth;
    let outCol = ${S} % outWidth;

    let WRow = ${O} / (filterDims[1] * inChannels);
    let WCol = ${O} / inChannels % filterDims[1];
    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];
    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];
    let xCh = ${O} % inChannels;
    var resData = ${ht(a,c)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${b} && xCol >= 0 && xCol < ${w}) {
      ${g}
      let xIndex = getIndexFromCoords4D(coord, xShape);
      ${p(a)}
    }
    return resData;`,B=r?e&&t?`
    let col = colIn * ${a};
    ${E}`:`
    let col = colIn * ${a};
    if (row < dimAOuter && col < dimInner) {
      ${E}
    }
    return ${ht(a,c)}(0.0);`:t&&n?`
    let col = colIn * ${a};
    ${E}`:`
    let col = colIn * ${a};
    if (row < dimInner && col < dimBOuter) {
      ${E}
    }
    return ${ht(a,c)}(0.0);`,z=`${h(s)}`,M=ht(l,c),W=r?ht(a,c):ht(s,c),Y=r?ht(s,c):ht(a,c);return`
    ${Xi(i,u,l===4,4)}
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${W} {
      ${r?B:z}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${Y} {
      ${r?z:B}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${M}) {
      let col = colIn * ${l};
      if (row < dimAOuter && col < dimBOuter)
      {
      var value = valueIn;
      let outWidth = ${r?"outShape[2]":"outShape[3]"};
      ${x}
      ${Ji(o,i)}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},xg=(r,e,n,t,o,i,u,a)=>{let s=e.format==="NHWC",l=s?r[0].dims[3]:r[0].dims[1],c=n[0],p=s?n[2]:n[3],h=s?n[1]:n[2],g=s?n[3]:n[1],x=s&&(l%4===0||l%3===0)&&g%4===0,b=s?g:p*h,w=s?p*h:g,S=[8,8,1],O=t<=8?[4,1,1]:[4,4,1],E=[Math.ceil(b/S[0]/O[0]),Math.ceil(w/S[1]/O[1]),Math.ceil(c/S[2]/O[2])];Je("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${E}`);let B=x?s&&l%4!==0?3:4:O[0],z=S[1]*O[1],M=S[0]*O[0],W=Math.max(S[0]*B,S[1]),Y=t%z===0,Q=o%M===0,he=i%W===0,R=x?[B,4,4]:[1,1,1],ee=at(r[0].dataType),We=[`@group(0) @binding(0) var<storage, read> x: array<${x&&B===4?`vec4<${ee}>`:ee}>;`,`@group(0) @binding(1) var<storage, read> w: array<${x?`vec4<${ee}>`:ee}>;`],ge=`
      fn setOutputAtIndex(flatIndex : i32, value : ${x?`vec4<${ee}>`:ee}) {
        result[flatIndex] = ${x?`vec4<${ee}>`:ee}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${x?`vec4<${ee}>`:ee}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${x?"/ 4":""}, value);
      }`;return u&&(We.push(`@group(0) @binding(2) var<storage, read> bias: array<${x?`vec4<${ee}>`:ee}>;`),ge+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${x?`vec4<${ee}>`:ee} {
          return bias[coords.${s?"w":"y"}${x?"/ 4":""}];
        }`),{name:"Conv2DMatMul",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]}}),getShaderSource:()=>`
        ${Qi}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${We.join("")}
        @group(0) @binding(${We.length}) var<storage, read_write> result: array<${x?`vec4<${ee}>`:ee}>;
        //@group(0) @binding(${We.length+1}) var<uniform> uniforms: Uniforms;

        const xShape : vec4<i32> = vec4<i32>(${r[0].dims.join(",")});
        const wShape : vec4<i32> = vec4<i32>(${r[1].dims.join(",")});
        const outShape : vec4<i32> = vec4<i32>(${n.join(",")});
        const outShapeStrides : vec3<i32> = vec3<i32>(${G.computeStrides(n).slice(0,3).join(",")});
        const filterDims : vec2<i32> = vec2<i32>(${e.kernelShape[0]}, ${e.kernelShape[1]});
        const pad : vec2<i32> = vec2<i32>(${e.pads[0]}, ${e.pads[1]});
        const stride : vec2<i32> = vec2<i32>(${e.strides[0]}, ${e.strides[1]});
        const dilation : vec2<i32> = vec2<i32>(${e.dilations[0]}, ${e.dilations[1]});
        const dimAOuter : i32 = ${t};
        const dimBOuter : i32 = ${o};
        const dimInner : i32 = ${i};
        ${ge}
        ${d2(s,Y,Q,he,u,e.activation.toLowerCase(),!1,R[0],R[1],R[2],ee)}
            ${x?To(O,S,ee,void 0,!s,W):$o(O,S,ee,void 0,!s,W,!1,void 0,a)}`}}});var Xs,wg=D(()=>{"use strict";Pe();Fe();Zs();wo();Xs=(r,e,n)=>{let t=r.length>2,o=t?"value += b[output_channel];":"",i=r[0].dims,u=r[1].dims,a=u[0]/e.group,{activationFunction:s,applyActivation:l}=ea(e),c=e.format==="NHWC",p=Js(i,u,e.dilations,e.pads,e.strides,c),h=G.size(p),g=oe("output",r[0].dataType,p),x=X("x",r[0].dataType,i),b=X("w",r[1].dataType,u),w=[x,b];t&&w.push(X("b",r[2].dataType,r[2].dims));let S=O=>`
  const strides: vec2<u32> = vec2(${e.strides[0]}u, ${e.strides[1]}u);
  const pads: vec2<u32> = vec2(${e.pads[0]}u, ${e.pads[1]}u);

  ${O.declareVariables(...w,g)}

  ${s}

  ${O.mainStart()}
    ${O.guardAgainstOutOfBoundsWorkgroupSizes(h)}

    let outputIndices = ${g.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${c?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${c?1:2}], outputIndices[${c?2:3}]) * strides - pads;
    let group_id: u32 = output_channel / ${a}u;

    var value: ${g.type.value} = ${g.type.value}(0);
    for (var wInChannel: u32 = 0u; wInChannel < ${u[1]}u; wInChannel++) {
      let input_channel = group_id * ${u[1]}u + wInChannel;
      for (var wHeight: u32 = 0u; wHeight < ${u[2]}u; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * ${e.dilations[0]}u;

        if (xHeight < 0u || xHeight >= ${i[c?1:2]}u) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < ${u[3]}u; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * ${e.dilations[1]}u;
          if (xWidth < 0u || xWidth >= ${i[c?2:3]}u) {
            continue;
          }

          let xVal = ${c?x.get("batch","xHeight","xWidth","input_channel"):x.get("batch","input_channel","xHeight","xWidth")};
          let wVal = ${b.get("output_channel","wInChannel","wHeight","wWidth")};
          value += xVal*wVal;
        }
      }
    }
    ${o}
    ${l}
    ${g.setByOffset("global_idx","value")}
  }`;return{name:"GroupedConv",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:n?n(p):p,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)}}),getShaderSource:S}}});var Js,Tg,f2,$g,Qs,p2,h2,eu,Zs=D(()=>{"use strict";Pe();it();vg();So();wg();wo();vo();Js=(r,e,n,t,o,i)=>{let u=r[0],a=r.slice(i?1:2,i?3:4),s=a.length,l=e[0],p=e.slice(2).map((x,b)=>x+(x-1)*(n[b]-1)),g=a.map((x,b)=>x+t[b]+t[b+s]).map((x,b)=>Math.floor((x-p[b]+o[b])/o[b]));return g.splice(0,0,u),g.splice(i?3:1,0,l),g},Tg=[2,3,1,0],f2=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4&&r[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(r[0].dims.length!==r[1].dims.length)throw new Error("filter does not have same dimension as input");let n=r[0].dims[e.format==="NHWC"?r[0].dims.length-1:1],t=r[1].dims[1]*e.group;if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(r.length===3&&(r[2].dims.length!==1||r[1].dims[0]!==r[2].dims[0]))throw new Error("invalid bias");let o=r[0].dims.length-2;if(e.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(e.strides.length!==o)throw new Error(`strides should be ${o}D`);if(e.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape")},$g=(r,e)=>{let n=r.kernelShape.slice();for(let i=2;i<e[1].dims.length;++i)n[i-2]===0&&(n[i-2]=e[1].dims[i]);let t=r.pads.slice();ln.adjustPadsBasedOnAutoPad(e[0].dims,r.strides,r.dilations,n,t,r.format==="NHWC",r.autoPad);let o=Object.assign({},r);return Object.assign(o,{kernelShape:n,pads:t,cacheKey:r.cacheKey}),o},Qs=r=>{let e=ta(r),n=r.format,t=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][r.auto_pad],o=r.dilations,i=r.group,u=r.kernel_shape,a=r.pads,s=r.strides,l=r.w_is_const();return ye({autoPad:t,format:n,dilations:o,group:i,kernelShape:u,pads:a,strides:s,wIsConst:l,...e})},p2=(r,e,n)=>{let t=$g(n,e);if(n.group!==1){r.compute(Xs(e,t));return}let o=n.format==="NHWC",i=e.length===3,u=e[0].dims[o?1:2],a=e[0].dims[o?2:3],s=e[0].dims[o?3:1],l=e[1].dims[2],c=e[1].dims[3],p=Js(e[0].dims,e[1].dims,n.dilations,t.pads,n.strides,o),h=p[o?1:2],g=p[o?2:3],x=p[o?3:1],b=o&&l===u&&c===a&&n.pads[0]===0&&n.pads[1]===0;if(b||l===1&&c===1&&n.dilations[0]===1&&n.dilations[1]===1&&n.strides[0]===1&&n.strides[1]===1&&n.pads[0]===0&&n.pads[1]===0){let M=p[0],W,Y,Q,he=[];if(o){let R=r.kernelCustomData.wT??r.compute(zr(e[1],Tg),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];if(n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=R),b){let ee=u*a*s;W=e[0].reshape([1,M,ee]),Y=R.reshape([1,ee,x]),Q=[1,M,x]}else W=e[0].reshape([M,u*a,s]),Y=R.reshape([1,s,x]),Q=[M,h*g,x];he.push(W),he.push(Y)}else W=e[0].reshape([M,s,u*a]),Y=e[1].reshape([1,x,s]),Q=[M,x,h*g],he.push(Y),he.push(W);i&&he.push(e[2]),r.compute(ra(he,t,p,Q,o),{inputs:he});return}let w=!0,S=r.kernelCustomData.wT??r.compute(zr(e[1],Tg),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=S);let O=[e[0],S];i&&O.push(e[2]);let E=o?h*g:x,B=o?x:h*g,z=l*c*s;r.compute(xg(O,t,p,E,B,z,i,w),{inputs:O})},h2=(r,e)=>{let n=e.format==="NHWC",t=[r.inputs[0].reshape(n?[r.inputs[0].dims[0],1,r.inputs[0].dims[1],r.inputs[0].dims[2]]:[r.inputs[0].dims[0],r.inputs[0].dims[1],1,r.inputs[0].dims[2]]),r.inputs[1].reshape([r.inputs[1].dims[0],r.inputs[1].dims[1],1,r.inputs[1].dims[2]])];r.inputs.length===3&&t.push(r.inputs[2]);let o=[0,e.pads[0],0,e.pads[1]],i=[1].concat(e.strides),u=[1].concat(e.dilations),a=[1].concat(e.kernelShape),s=$g({...e,pads:o,strides:i,dilations:u,kernelShape:a},t);r.compute(Xs(t,s,l=>n?[l[0],l[2],l[3]]:[]))},eu=(r,e)=>{f2(r.inputs,e),r.inputs[0].dims.length===3?h2(r,e):p2(r,r.inputs,e)}});var m2,Sg,Ig=D(()=>{"use strict";Lr();Pe();Zi();Ys();So();m2=(r,e=!1,n,t=!1,o=4)=>{let i=ht(o,"f32"),u=S=>{switch(S){case 1:return"return W[getIndexFromCoords4D(coord, wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${S} is not supported.`)}},a=r?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,s=r?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,l=r?"outBackprop[1]":"outBackprop[2]",c=r?"outBackprop[2]":"outBackprop[3]",p=r?"row":"col",h=r?"col":"row",g=`
      let inChannels = ${r?"outBackprop[3]":"outBackprop[1]"};
      let outWidth = ${r?"outShape[2]":"outShape[3]"};
      let outRow = ${p} / outWidth;
      let outCol = ${p} % outWidth;

      let WRow = ${h} / (filterDims[1] * inChannels);
      let WCol = ${h} / inChannels % filterDims[1];
      let xR = f32(outRow - pads[0] + dilation[0] * WRow) / f32(strides[0]);
      let xC = f32(outCol - pads[1] + dilation[1] * WCol) / f32(strides[1]);
      if (xR < 0.0 || xR >= f32(${l}) || fract(xR) > 0.0) {
        return ${i}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${c}) || fract(xC) > 0.0) {
        return ${i}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${h} % inChannels;
      ${a}
      return x[getIndexFromCoords4D(coord, xShape)/${o}];`,x=r?`
      let col = colIn * ${o};
      if (row < dimAOuter && col < dimInner) {
        ${g}
      }
      return ${i}(0.0);`:`
      let col = colIn * ${o};
      if (row < dimInner && col < dimBOuter) {
        ${g}
      }
      return ${i}(0.0);`,b=`
      let col = colIn * ${o};
      let inChannels = ${r?"outBackprop[3]":"outBackprop[1]"};
      let coordX = filterDims.x - 1 - row / (filterDims[1] * inChannels);
      let coordY = filterDims.y - 1 - (row / inChannels) % filterDims[1];
      if (${r?"row < dimInner && col < dimBOuter":"row < dimInner && col < dimAOuter"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${u(o)}
      }
      return ${i}(0.0);
      `;return`
  ${Xi(n,t,o===4,4)}
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${i} {
    ${r?x:b}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${i} {
    ${r?b:x}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${i}) {
    let col = colIn * ${o};
    if (row < dimAOuter && col < dimBOuter) {
      var value = valueInput;
      let outWidth = ${r?"outShape[2]":"outShape[3]"};
      ${s}
      ${Ji(e,n)}
      result[getIndexFromCoords4D(coords, outShape)/${o}] = value;
    }
  }`},Sg=(r,e,n,t,o,i,u,a)=>{let s=e.format==="NHWC",l=s?r[0].dims[3]:r[0].dims[1],c=n[0],p=s?n[2]:n[3],h=s?n[1]:n[2],g=s?n[3]:n[1],x=s?l%4===0&&g%4===0:p%4===0&&g%4===0,b=s?g:p*h,w=s?p*h:g,S=x?[8,8,1]:[b<=4||w<=4?4:16,b>4&&w<=4?4:16,1],O=x?[4,4,1]:[b<=4?1:4,b>4&&w<=4?1:4,1],E=[Math.ceil(b/S[0]/O[0]),Math.ceil(w/S[1]/O[1]),Math.ceil(c/S[2]/O[2])];Je("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${E}`);let B=x?4:1,z=Math.max(S[0]*B,S[1]),M=[`@group(0) @binding(0) var<storage, read> x: array<${x?"vec4<f32>":"f32"}>;`,"@group(0) @binding(1) var<storage, read> W: array<f32>;"],W="";return u&&(M.push(`@group(0) @binding(2) var<storage, read> bias: array<${x?"vec4<f32>":"f32"}>;`),W+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${x?"vec4<f32>":"f32"} {
          return bias[coords.${s?"w":"y"}${x?"/ 4":""}];
        }`),{name:"Conv2DTransposeMatMul",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]}}),getShaderSource:()=>`
        ${Qi}
        ${M.join(`
`)}
        @group(0) @binding(${M.length}) var<storage, read_write> result: array<${x?"vec4<f32>":"f32"}>;
        const outBackprop : vec4<i32> = vec4<i32>(${r[0].dims.join(",")});
        const xShape : vec4<i32> = vec4<i32>(${r[0].dims.join(",")});
        const wShape : vec4<i32> = vec4<i32>(${r[1].dims.join(",")});
        const outShape : vec4<i32> = vec4<i32>(${n.join(",")});
        const outShapeStrides : vec3<i32> = vec3<i32>(${G.computeStrides(n).slice(0,3).join(",")});
        const filterDims : vec2<i32> = vec2<i32>(${e.kernelShape[s?1:2]}, ${e.kernelShape[s?2:3]});
        const effectiveFilterDims : vec2<i32> = filterDims + vec2<i32>(
              ${e.dilations[0]<=1?0:(e.kernelShape[s?1:2]-1)*(e.dilations[0]-1)},
              ${e.dilations[1]<=1?0:(e.kernelShape[s?2:3]-1)*(e.dilations[1]-1)});
        const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${e.pads[0]+e.pads[2]})/2,
                                         i32(effectiveFilterDims[1]) - 1 - (${e.pads[1]+e.pads[3]})/2);
        const strides : vec2<i32> = vec2<i32>(${e.strides[0]}, ${e.strides[1]});
        const dilation : vec2<i32> = vec2<i32>(${e.dilations[0]}, ${e.dilations[1]});
        const dimAOuter : i32 = ${t};
        const dimBOuter : i32 = ${o};
        const dimInner : i32 = ${i};
        ${W}
        ${m2(s,u,e.activation.toLowerCase(),!1,B)}
        ${x?To(O,S,"f32",void 0,!s,z):$o(O,S,"f32",void 0,!s,z,!1,void 0,a)}`}}});var g2,tu,_g=D(()=>{"use strict";Lr();Pe();Fe();g2=(r,e,n,t,o,i,u=!1,a)=>{let s=n.format==="NHWC",l=s?1:2,c=s?2:3,p=s?3:1,h=G.size(t),g=u?2:1,x=n.group,b=e[1].dims,w=b[0]/x,S=b[1],O=`
  fn setOutputAtIndex(flatIndex : u32, value : ${u?`vec4<${a}>`:a}) {
    result[flatIndex] = ${u?`vec4<${a}>`:a}(value);
  }`;o&&(O+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${u?`vec4<${a}>`:a} {
      return bias[coords.${s?"w":"y"}${u?"/ 4":""}];
    }`);let E=u?4:1,B=X("W",e[1].dataType,e[1].dims,E),z=X("Dy",e[0].dataType,e[0].dims,E),M=[z,B];o&&M.push(X("bias",e[2].dataType,[t[p]],E));let W=oe("result",e[0].dataType,t,E),Y=`{
        let batch: u32 = ${i?"global_id.z":"workgroup_id.z"} / outShape[1];
        let r = ${i?"global_id.z":"workgroup_id.z"} % outShape[1];
        let c = ${i?"global_id.y":"workgroup_id.y"} * ${g};
        let d1: u32 = ${i?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${a}>, ${g}>;
        for (var i = 0; i < ${g}; i++) {
          dotProd[i] = vec4<${a}>(0.0);
        }
        for (var wR: u32 = 0; wR < filterDims[0]; wR = wR + 1) {
          var dyR = (${a}(dyCorner.x) + ${a}(wR)) / ${a}(strides.x);
          let wRPerm = filterDims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${a}(outBackprop[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < filterDims[1]; wC = wC + 1) {
            let dyC = (${a}(dyCorner.y) + ${a}(wC)) / ${a}(strides.y);
            let dyC2 = (${a}(dyCorner.y) + 1.0 + ${a}(wC)) / ${a}(strides.y);
            let wCPerm = filterDims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${a}(outBackprop[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${a}(outBackprop[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = outBackprop[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${z.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${a}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${z.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${a}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = outBackprop[${p}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${z.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${a}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = outBackprop[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${z.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${a}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${g}; i = i + 1) {
          let value = dotProd[i] + ${o?"bias[c+i]":"0.0"};
          ${W.set("batch","r","c + i","d1","value")};
        }
      }`,Q=`
          let outputIndices = ${W.offsetToIndices("global_idx")};
          let batch = ${W.indicesGet("outputIndices",0)};
          let d1 = ${W.indicesGet("outputIndices",p)};
          let r = ${W.indicesGet("outputIndices",l)};
          let c = ${W.indicesGet("outputIndices",c)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / ${S};
          let wOutChannel = d1 - groupId * ${S};
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = 0.0;
          for (var wR: u32 = 0; wR < effectiveFilterDims.x; wR = wR + 1) {
            if (wR % dilations.x != 0) {
              continue;
            }
            let dyR = (${a}(dyRCorner) + ${a}(wR)) / ${a}(strides[0]);
            let wRPerm = filterDims.x - 1 - wR / dilations.x;
            if (dyR < 0.0 || dyR >= ${a}(outBackprop[${l}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < effectiveFilterDims.y; wC = wC + 1) {
              if (wC % dilations.y != 0) {
                continue;
              }
              let dyC = (${a}(dyCCorner) + ${a}(wC)) / ${a}(strides.y);
              let wCPerm = filterDims.y - 1 - wC / dilations.y;
              if (dyC < 0.0 || dyC >= ${a}(outBackprop[${c}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * ${w};
              for (var d2: u32 = 0; d2 < ${w}; d2 = d2 + 1) {
                let xValue = ${s?z.get("batch","idyR","idyC","inputChannel"):z.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${B.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${o?"bias[d1]":"0.0"};
          ${W.setByOffset("global_idx","value")};
        `;return`
  ${r.declareVariables(...M,W)}
  ${O}
  const outShape : vec4<u32> = vec4<u32>(${t.join(",")});
  const outBackprop : vec4<u32> = vec4<u32>(${e[0].dims.join(",")});
  const strides : vec2<u32> = vec2<u32>(${n.strides[0]}, ${n.strides[1]});
  const filterDims : vec2<u32> = vec2<u32>(${n.kernelShape[s?1:2]}, ${n.kernelShape[s?2:3]});
  const dilations : vec2<u32> = vec2<u32>(${n.dilations[0]}, ${n.dilations[1]});
  const effectiveFilterDims : vec2<u32> = filterDims + vec2<u32>(
          ${n.dilations[0]<=1?0:(n.kernelShape[s?1:2]-1)*(n.dilations[0]-1)},
          ${n.dilations[1]<=1?0:(n.kernelShape[s?2:3]-1)*(n.dilations[1]-1)});
  const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${n.pads[0]+n.pads[2]})/2,
                                     i32(effectiveFilterDims[1]) - 1 - (${n.pads[1]+n.pads[3]})/2);
    ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes(h)};
  ${u?Y:Q}}`},tu=(r,e,n)=>{let t=r.length>2,o=e.outputShape,i=G.size(o),u=[Math.ceil(i/64),1,1];Je("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${u}`);let a=at(r[0].dataType);return{name:"ConvTranspose2D",shaderCache:{hint:e.cacheKey},getRunData:()=>({dispatchGroup:{x:u[0],y:u[1],z:u[2]},outputs:[{dims:n?n(o):o,dataType:r[0].dataType}]}),getShaderSource:s=>g2(s,r,e,o,t,u[1]===1&&u[2]===1,!1,a)}}});var b2,y2,x2,Ag,Og,v2,w2,T2,$2,Eg,Cg=D(()=>{"use strict";it();Ig();_g();wo();vo();b2=(r,e,n,t,o,i)=>(r-1)*e+n+(t-1)*o+1-i,y2=(r,e,n,t,o)=>{let i=Math.floor(r/2);e==="SAME_UPPER"?(n[t]=i,n[o]=r-i):e==="SAME_LOWER"&&(n[t]=r-i,n[o]=i)},x2=(r,e,n,t,o,i,u,a,s,l)=>{let c=r.length-2,p=l.length===0;if(s.length===0)for(let x=0;x<c;++x)s.push(0);let h=r[0],g=e[a?3:1]*o;for(let x=0,b=r.length-c-(a?1:0);x<c;++x,++b){let w=r[b],S=p?w*u[x]:l[x],O=b2(w,u[x],i[x],e[b],n[x],S);y2(O,t,i,x,x+c),p&&l.push(u[x]*(w-1)+s[x]+(e[b]-1)*n[x]+1-i[x]-i[x+c])}l.splice(0,0,h),l.splice(a?3:1,0,g)},Ag=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0||r.kernelShape.reduce((h,g)=>h*g,1)===0){n.length=0;for(let h=2;h<e[1].dims.length;++h)n.push(e[1].dims[h])}let t=r.format==="NHWC";n.splice(0,0,e[1].dims[0]),n.splice(t?3:1,0,e[1].dims[1]);let o=r.pads.slice(),i=r.outputShape.slice(),u=r.outputPadding.slice(),a=e[0].dims,s=r.dilations.slice();if(s.reduce((h,g)=>h+g,0)===0){let h=e[0].dims.length-2;s=new Array(h).fill(1)}let l=r.strides.slice();if(l.reduce((h,g)=>h+g,0)===0){let h=e[0].dims.length-2;l=new Array(h).fill(1)}x2(a,n,s,r.autoPad,r.group,o,l,t,u,i);let c=Object.assign({},r),p=r.cacheKey+[n.join("n,"),o.join(","),l.join(","),u.join(","),i.join(","),s.join(",")].join("_");return Object.assign(c,{kernelShape:n,pads:o,outputPadding:u,outputShape:i,dilations:s,strides:l,cacheKey:p}),c},Og=r=>{let e=ta(r),n=r.format,t=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof r.autoPad>"u"?0:r.autoPad],o=r.dilations,i=r.group,u=r.kernelShape,a=r.pads,s=r.strides,l=r.wIsConst(),c=r.outputPadding,p=r.outputShape;return ye({autoPad:t,format:n,dilations:o,group:i,kernelShape:u,outputPadding:c,outputShape:p,pads:a,strides:s,wIsConst:l,...e})},v2=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4&&r[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(r[0].dims.length!==r[1].dims.length)throw new Error("filter does not have same dimension as input");let n=r[0].dims[e.format==="NHWC"?r[0].dims.length-1:1],t=r[1].dims[0];if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=r[1].dims[1]*e.group;if(r.length===3&&(r[2].dims.length!==1||r[2].dims[0]!==o))throw new Error("invalid bias");let i=r[0].dims.length-2;if(e.dilations.reduce((c,p)=>c+p,0)>0&&e.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(e.strides.reduce((c,p)=>c+p,0)>0&&e.strides.length!==i)throw new Error(`strides should be ${i}D`);if(e.pads.reduce((c,p)=>c+p,0)>0&&e.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(e.outputPadding.length!==i&&e.outputPadding.length!==0)throw new Error(`output_padding should be ${i}D`);if(e.kernelShape.reduce((c,p)=>c+p,0)>0&&e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==r[0].dims.length-2)throw new Error("invalid output shape")},w2=[2,3,1,0],T2=(r,e,n)=>{let t=Ag(n,e),o=n.format==="NHWC",i=e.length===3;if(t.group!==1){r.compute(tu(e,t));return}let u=t.outputShape,a=u[o?1:2],s=u[o?2:3],l=u[o?3:1],c=e[1].dims[2],p=e[1].dims[3],h=e[0].dims[o?3:1],g=o?a*s:l,x=o?l:a*s,b=c*p*h,w=!0,S=r.kernelCustomData.wT??r.compute(zr(e[1],w2),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=S);let O=[e[0],S];i&&(!o&&e[2].dims.length===1?O.push(e[2].reshape([e[2].dims[0],1,1])):O.push(e[2])),r.compute(Sg(O,t,u,g,x,b,i,w),{inputs:O})},$2=(r,e)=>{let n=e.format==="NHWC",t=[r.inputs[0].reshape(n?[r.inputs[0].dims[0],1,r.inputs[0].dims[1],r.inputs[0].dims[2]]:[r.inputs[0].dims[0],r.inputs[0].dims[1],1,r.inputs[0].dims[2]]),r.inputs[1].reshape([r.inputs[1].dims[0],r.inputs[1].dims[1],1,r.inputs[1].dims[2]])];t.length===3&&t.push(r.inputs[2]);let o=e.kernelShape;(o.length===0||o[0]===0)&&(o=[r.inputs[1].dims[2]]);let i=e.dilations;(i.length===0||i[0]===0)&&(i=[1]);let u=e.strides;(u.length===0||u[0]===0)&&(u=[1]);let a=e.pads;a.length===0&&(a=[0,0]),a=[0,a[0],0,a[1]],u=[1].concat(u),i=[1].concat(i),o=[1].concat(o);let s=Ag({...e,pads:a,strides:u,dilations:i,kernelShape:o},t);r.compute(tu(t,s,l=>n?[l[0],l[2],l[3]]:[l[0],l[1],l[3]]))},Eg=(r,e)=>{v2(r.inputs,e),r.inputs[0].dims.length===3?$2(r,e):T2(r,r.inputs,e)}});var ru,na,Pg,S2,I2,nu,ou,_2,Dg,kg,Rg=D(()=>{"use strict";Pe();it();Fe();ru="[a-zA-Z]|\\.\\.\\.",na="("+ru+")+",Pg="^"+na+"$",S2="("+na+",)*"+na,I2="^"+S2+"$",nu=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,n){let t=this.symbolToIndices.get(e);t===void 0?t=[n]:t.push(n),this.symbolToIndices.set(e,t)}},ou=class{constructor(e,n){this.equation=n;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[t,o]=n.includes("->")?n.split("->",2):[n,""];if(!t.match(RegExp(I2)))throw new Error("Invalid LHS term");if(t.split(",").forEach((a,s)=>{let l=e[s].dims.slice();if(!a.match(RegExp(Pg)))throw new Error("Invalid LHS term");let c=this.processTerm(a,!0,l,s);this.lhs.push(c)}),o==="")o+=[...this.symbolToInfo.entries()].filter(([a,s])=>s.count===1||a==="...").map(([a])=>a).join("");else if(!o.match(RegExp(na)))throw new Error("Invalid RHS");o.match(RegExp(ru,"g"))?.forEach(a=>{if(a==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let s=this.symbolToInfo.get(a);if(s===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(s.dimValue)}}),this.rhs=this.processTerm(o,!0,this.outputDims)}addSymbol(e,n,t){let o=this.symbolToInfo.get(e);if(o!==void 0){if(o.dimValue!==n&&o.count!==1)throw new Error("Dimension mismatch");o.count++,o.inputIndices.push(t)}else o={count:1,dimValue:n,inputIndices:[t]};this.symbolToInfo.set(e,o)}processTerm(e,n,t,o=-1){let i=t.length,u=!1,a=[],s=0;if(!e.match(RegExp(Pg))&&!n&&e!=="")throw new Error("Invalid LHS term");let l=e.match(RegExp(ru,"g")),c=new nu(o);return l?.forEach((p,h)=>{if(p==="..."){if(u)throw new Error("Only one ellipsis is allowed per input term");u=!0;let g=i-l.length+1;if(g<0)throw new Error("Ellipsis out of bounds");if(a=t.slice(s,s+g),this.hasEllipsis){if(this.ellipsisDims.length!==a.length||this.ellipsisDims.toString()!==a.toString())throw new Error("Ellipsis dimensions mismatch")}else if(n)this.hasEllipsis=!0,this.ellipsisDims=a;else throw new Error("Ellipsis must be specified in the LHS");for(let x=0;x<a.length;x++){let b=String.fromCharCode("0".charCodeAt(0)+h);c.addSymbol(b,h+x),this.addSymbol(b,t[s++],o)}}else c.addSymbol(p,h),this.addSymbol(p,t[s++],o)}),c}},_2=(r,e)=>{let n=r[0].dataType,t=new Array(r.length);for(let E=0;E<r.length;++E)t[E]=X(`input${E}`,n,r[E].dims);let o=e.outputDims,i=G.size(o),u=oe("output",n,o),a=[],s=Array.from(e.rhs.symbolToIndices.keys()),l="var prod = 1.0;",c="var sum = 0.0;",p="sum += prod;",h=[],g=[],x=[],b=[],w=e.symbolToInfo.size===s.length;e.symbolToInfo.forEach((E,B)=>{if(s.includes(B)){let z=s.indexOf(B);e.lhs.forEach((M,W)=>{if(E.inputIndices.includes(W)){let Y=M.symbolToIndices.get(B);if(Y===void 0)throw new Error("Invalid symbol error");Y.forEach(Q=>{a.push(`${t[W].indicesSet(`input${W}Indices`,Q,u.indicesGet("outputIndices",z))}`)})}})}else e.lhs.forEach((z,M)=>{let W=e.symbolToInfo.get(B);if(W===void 0)throw new Error("Invalid symbol error");if(W.inputIndices.includes(M)){let Y=z.symbolToIndices.get(B);if(Y===void 0)throw new Error("Invalid symbol error");Y.forEach(Q=>{h.push(`${t[M].indicesSet(`input${M}Indices`,Q,`${B}`)}`)}),b.push(`prod *= ${t[M].getByIndices(`input${M}Indices`)};`)}}),g.push(`for(var ${B}: u32 = 0; ${B} < ${e.symbolToInfo.get(B)?.dimValue}; ${B}++) {`),x.push("}")});let S=w?[...a,`let sum = ${t.map((E,B)=>E.getByIndices(`input${B}Indices`)).join(" * ")};`]:[...a,c,...g,...h,l,...b,p,...x],O=E=>`
      ${E.declareVariables(...t,u)}

      ${E.mainStart()}
        ${E.guardAgainstOutOfBoundsWorkgroupSizes(i)}
        var outputIndices = ${u.offsetToIndices("global_idx")};
        ${t.map((B,z)=>`var input${z}Indices: ${t[z].type.indices};`).join(`
`)}
        ${S.join(`
`)};
        ${u.setByOffset("global_idx","sum")};
      }`;return{name:"Einsum",shaderCache:{hint:e.equation},getRunData:()=>({outputs:[{dims:o,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:O}},Dg=(r,e)=>{let n=new ou(r.inputs,e.equation);r.compute(_2(r.inputs,n))},kg=r=>{let e=r.equation.replace(/\s+/g,"");return ye({equation:e})}});var A2,Bg,O2,E2,Mg,Lg=D(()=>{"use strict";Pe();Fe();A2=r=>{if(!r||r.length!==2)throw new Error("Expand requires 2 input.");let e=r[0].dims,n=Array.from(r[1].getBigInt64Array(),Number),t=n.length<e.length?0:n.length-e.length,o=e.length<n.length?0:e.length-n.length;for(;t<n.length&&o<e.length;++t,++o)if(n[t]!==e[o]&&n[t]!==1&&e[o]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Bg=(r,e)=>{let n=r.length-e.length,t=[];for(let o=0;o<n;++o)t.push(r[o]);for(let o=0;o<e.length;++o)t.push(e[o]===1?r[o+n]:e[o]);return t},O2=(r,e)=>r.length>e.length?Bg(r,e):Bg(e,r),E2=r=>{let e=r[0].dims,n=Array.from(r[1].getBigInt64Array(),Number),t=O2(e,n),o=G.size(t),i=r[0].dataType,u=X("input",i,e),a=oe("output",i,t),s=l=>`
  const inputShape = ${u.indices(...e)};
  ${l.declareVariables(u,a)}
  ${l.mainStart()}
  ${l.guardAgainstOutOfBoundsWorkgroupSizes(o)}
    let outputIndices = ${a.offsetToIndices("global_idx")};
    var inputIndices: ${u.type.indices};
    for (var i = 0; i < ${e.length}; i++) {
      if (${u.indicesGet("inputShape","i")} == 1) {
        ${u.indicesSet("inputIndices","i",0)}
      } else {
        ${u.indicesSet("inputIndices","i",a.indicesGet("outputIndices",`i + ${t.length-e.length}`))}
      }
    }
    ${a.setByOffset("global_idx",u.getByIndices("inputIndices"))}
  }`;return{name:"Expand",shaderCache:{hint:`${t}`},getShaderSource:s,getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}})}},Mg=r=>{A2(r.inputs),r.compute(E2(r.inputs),{inputs:[0]})}});var C2,P2,Ng,zg,Fg=D(()=>{"use strict";Pe();it();Fe();C2=r=>{if(!r||r.length!==2)throw new Error("Gather requires 2 inputs.")},P2=(r,e)=>{let n=r[0].dims,t=r[1].dims,o=n.length,i=G.normalizeAxis(e.axis,o),u=n.slice(0);u.splice(i,1,...t);let a=n[i],s=G.size(u),l=X("data",r[0].dataType,r[0].dims),c=X("inputIndices",r[1].dataType,r[1].dims),p=oe("output",r[0].dataType,u),h=()=>{let x=t.length,b=`var indicesIndices  = ${c.type.indices}(0);`;for(let w=0;w<x;w++)b+=`${x>1?`indicesIndices[${w}]`:"indicesIndices"} = ${u.length>1?`outputIndices[${i+w}]`:"outputIndices"};`;b+=`
        var idx = ${c.getByIndices("indicesIndices")};
        if (idx < 0) {
          idx = idx + ${a};
        }
        var dataIndices = ${l.type.indices}(0);
      `;for(let w=0,S=0;w<o;w++)w===i?(b+=`${o>1?`dataIndices[${w}]`:"dataIndices"} = u32(idx);`,S+=x):(b+=`${o>1?`dataIndices[${w}]`:"dataIndices"} = ${u.length>1?`outputIndices[${S}]`:"outputIndices"};`,S++);return b},g=x=>`
      ${x.declareVariables(l,c,p)}
      ${x.mainStart()}
        ${x.guardAgainstOutOfBoundsWorkgroupSizes(s)}
        let outputIndices = ${p.offsetToIndices("global_idx")};
        ${h()};
        let value = ${l.getByIndices("dataIndices")};
        ${p.setByOffset("global_idx","value")};
      }`;return{name:"Gather",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:u,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:g}},Ng=r=>ye({axis:r.axis}),zg=(r,e)=>{let n=r.inputs;C2(n),r.compute(P2(r.inputs,e))}});var D2,k2,Gg,Wg,Vg=D(()=>{"use strict";Pe();it();Fe();D2=r=>{if(!r||r.length!==2)throw new Error("GatherElements requires 2 inputs.");if(r[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(r[0].dims.length!==r[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},k2=(r,e)=>{let n=r[0].dims,t=r[0].dataType,o=n.length,i=G.computeStrides(n),u=G.size(n),a=r[1].dims,s=r[1].dataType,l=G.size(a),c=G.normalizeAxis(e.axis,o),p=n[c],h=a.slice(0),g=G.size(h),x=X("input",t,n),b=X("indices",s,[l]),w=oe("output",t,h),S=O=>`
      const inputStrides = array<u32, ${i.length}>(${i.map(E=>`${E}u`).join(",")});
      ${O.declareVariables(x,b,w)}
      ${O.mainStart()}
      ${O.guardAgainstOutOfBoundsWorkgroupSizes(g)}

      let outputIndices = ${w.offsetToIndices("global_idx")};

      var idx = ${b.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + ${p};
      }

      var srcOffset = u32(0);

      for (var i = 0; i < ${n.length}; i++) {
        if (i == ${c}) {
          srcOffset +=  u32(idx) * inputStrides[i];
        } else {
          srcOffset += ${w.indicesGet("outputIndices","i")} * inputStrides[i];
        }
      }

      // Should never hit this with valid values in indices
      // This is a guard against malicious data in the indices input
      if (srcOffset < 0 || srcOffset >= ${u}) {
        return;
      }

      output[global_idx] = input[srcOffset];
  }`;return{name:"GatherElements",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:h,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(g/64)}}),getShaderSource:S}},Gg=r=>ye({axis:r.axis}),Wg=(r,e)=>{let n=r.inputs;D2(n),r.compute(k2(r.inputs,e))}});var R2,B2,M2,Ug,Hg,jg=D(()=>{"use strict";Pe();it();Fe();R2=r=>{if(!r)throw new Error("Input is missing");if(r.length<2||r.length>3)throw new Error("Invaid input number.");if(r.length===3&&r[2].dims.length>2)throw new Error("Invalid input shape of C");if(r[0].dataType!==r[1].dataType||r.length===3&&r[0].dataType!==r[2].dataType)throw new Error("Input types are mismatched")},B2=(r,e,n)=>{if(n.length===0)return"0u";let t=n.length===1&&r!==1||n.length===2&&n[0]!==r,o=n[n.length-1]!==e,i="0u";return t||(i+=`+ m * ${n[n.length-1]}u`),o||(i+="+n"),i},M2=(r,e)=>{let n=r[0].dims.slice(),t=r[1].dims.slice(),[o,i,u]=Vi.getShapeOfGemmResult(n,e.transA,t,e.transB,r.length===3?r[2].dims:void 0),a=[o,i];if(!a)throw new Error("Can't use gemm on the given tensors");let s=G.size(a),l="";e.transA&&e.transB?l="value += a[k * M + m] * b[n * K + k];":e.transA&&!e.transB?l="value += a[k * M + m] * b[k * N + n];":!e.transA&&e.transB?l="value += a[m * K + k] * b[n * K + k];":!e.transA&&!e.transB&&(l="value += a[m * K + k] * b[k * N + n];");let c=at(r[0].dataType),p=e.alpha===1?"":"value *= alpha;",h=r.length===3?`value += beta * c[${B2(o,i,r[2].dims)}];`:"",g=[`@group(0) @binding(0) var<storage, read> a : array<${c}>;`,`@group(0) @binding(1) var<storage, read> b : array<${c}>;`];r.length===3&&g.push(`@group(0) @binding(2) var<storage, read> c : array<${c}>;`);let x=b=>`
  const M: u32 = ${o}u;
  const N: u32 = ${i}u;
  const K: u32 = ${u}u;
  const alpha = ${c}(${e.alpha});
  const beta = ${c}(${e.beta});

  ${g.join(`
`)}
  @group(0) @binding(${r.length}) var<storage, read_write> output : array<${c}>;

  ${b.mainStart()}
    ${b.guardAgainstOutOfBoundsWorkgroupSizes(s)}

    let m = global_id.x / N;
    let n = global_id.x % N;

    var value = ${c}(0);
    for (var k: u32 = 0u; k<${u}u; k++) {
      ${l}
    }

    ${p}
    ${h}
    output[global_id.x] = value;

  }`;return{name:"Gemm",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:a,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:x}},Ug=(r,e)=>{R2(r.inputs),r.compute(M2(r.inputs,e))},Hg=r=>ye(r)});var L2,N2,z2,F2,qg,Kg,Yg=D(()=>{"use strict";dt();Pe();it();Fe();L2={name:"InstanceNormalization"},N2=(r,e)=>{let n=r[0].dims,t=n,o=2,i=G.sizeToDimension(n,o),u=G.sizeFromDimension(n,o),a=n[1],s=X("x",r[0].dataType,[n[0],n[1],u]),l=X("scale",r[1].dataType,r[1].dims),c=X("bias",r[2].dataType,r[2].dims),p=oe("output",r[0].dataType,[n[0],n[1],u]),h=[s,l,c,p],g=s.type.value,x=64,b=w=>`

  const C: u32 = ${a};
  const normSize: u32 = ${u};
  const epsilon: f32 = ${e.epsilon};
  var<workgroup> meanShared : ${g};
  var<workgroup> squaredNormShared : ${g};
  var<workgroup> workgroupShared : array<${g}, ${x}>;
  const workgroupSize = ${x}u;
  ${w.declareVariables(...h)}
  ${w.mainStart(x)}
    let norm = global_idx / workgroupSize;
    let batch = norm / C;
    let channel = norm % C;
    let localIndex = local_id.x;

    // initialize workgroup memory
    var initial: ${g} = 0;
    for (var h = localIndex; h < normSize; h += workgroupSize) {
      initial = initial + ${s.get("batch","channel","h")};
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the mean of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      meanShared = workgroupShared[0] / ${g}(normSize);
    }
    workgroupBarrier();

    // reinitialize workgroup memory.
    initial = 0;
    for (var h = localIndex; h < normSize; h += workgroupSize) {
      let deviation =  ${s.get("batch","channel","h")} - meanShared;
      initial = initial + deviation * deviation;
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the sum of square of deviation of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      squaredNormShared = workgroupShared[0];
    }
    workgroupBarrier();

    let invStdDev = 1 / sqrt(squaredNormShared / ${g}(normSize) + epsilon);
    let channelScale = invStdDev * ${l.getByOffset("channel")};
    let channelShift = ${c.getByOffset("channel")} - meanShared * channelScale;
    for (var h = localIndex; h < normSize; h += workgroupSize) {
      let value = ${s.get("batch","channel","h")} * channelScale + channelShift;
      ${p.set("batch","channel","h","value")};
    }
  }`;return{...L2,shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:i}}),getShaderSource:b}},z2=(r,e,n,t,o,i,u,a)=>{let s=Ir(u),l=X("input",e.dataType,e.dims,s),c=X("scale",n.dataType,n.dims,s),p=X("bias",t.dataType,t.dims,s),h=64,g=s===1?"vec2f":`mat2x${s}f`,x=s===1?"f32":`vec${s}f`,b=(z,M)=>`${g}(${z}, ${M})`,w=o*u/s,S=Math.ceil(i/h),O=z=>`
  const H: u32 = ${i};
  const C: u32 = ${u/s};
  const imageSize: u32 = ${i*u/s};

  ${z.declareVariables(l)}
  @group(0) @binding(1) var<storage, read_write> output : array<${g}>;

  ${z.mainStart(h)}
    let currentImageNumber = global_idx / ${h} / C;
    let currentChannelNumber = (global_idx / ${h}) % C;
    let wgId = global_idx % ${h};
    let wgOffset = wgId * ${S};
    if (wgOffset >= H) {
        return;
    }
    let wgMax = min(wgOffset + ${S}, H);

    let offset = currentImageNumber * imageSize + currentChannelNumber;
    var sum = ${Xt("f32",s)};
    var squaredSum = ${Xt("f32",s)};
    for (var i: u32 = wgOffset; i < wgMax; i++) {
        let value = ${x}(input[offset + i * C]);
        sum += value;
        squaredSum += value * value;
    }
    output[global_idx] = ${b("sum","squaredSum")};
  }`,E=r.compute({name:"InstanceNormComputeMean",shaderCache:{hint:JSON.stringify({components:s,n:o,h:i,c:u})},getRunData:()=>({outputs:[{dims:[o,u,h,2],dataType:1}],dispatchGroup:{x:o*u/s}}),getShaderSource:O},{inputs:[e],outputs:[-1]})[0],B=z=>`
  const H: u32 = ${i};
  const C: u32 = ${u/s};
  const imageSize: u32 = ${h*u/s};
  const epsilon: f32 = ${a};

  @group(0) @binding(0) var<storage, read> input : array<${g}>;
  @group(0) @binding(1) var<storage, read> scale : array<${c.type.storage}>;
  @group(0) @binding(2) var<storage, read> bias : array<${p.type.storage}>;
  @group(0) @binding(3) var<storage, read_write> output : array<${g}>;

  ${z.mainStart()}
    ${z.guardAgainstOutOfBoundsWorkgroupSizes(w)}
    let currentImageNumber = global_idx / C;
    let currentChannelNumber = global_idx % C;

    let offset = currentImageNumber * imageSize;
    var sum = ${Xt("f32",s)};
    var squaredSum = ${Xt("f32",s)};
    for (var i: u32 = 0; i < ${h}; i++) {
        let value = input[offset + i + currentChannelNumber * ${h}];
        sum += value[0];
        squaredSum += value[1];
    }
    sum = sum / f32(H);
    squaredSum = squaredSum / f32(H);
    let invStdDev = 1 / sqrt(squaredSum - sum * sum + epsilon);
    let channelScale = invStdDev * ${x}(scale[currentChannelNumber]);
    let channelShift = ${x}(bias[currentChannelNumber]) - sum * channelScale;

    output[global_idx] = ${b("channelScale","channelShift")};
  }`;return r.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:JSON.stringify({components:s,n:o,h:i,c:u,epsilon:a})},getRunData:()=>({outputs:[{dims:[o,u,2],dataType:1}],dispatchGroup:{x:Math.ceil(w/64)}}),getShaderSource:B},{inputs:[E,n,t],outputs:[-1]})[0]},F2=(r,e,n)=>{let t=e[0].dims,o=t,i=t[0],u=t[t.length-1],a=G.sizeFromDimension(t,1)/u,s=Ir(u),l=G.size(o)/s,c=X("input",e[0].dataType,e[0].dims,s),p=oe("output",e[0].dataType,o,s),h=at(e[0].dataType),g=s===1?"vec2f":`mat2x${s}f`,x=s===1?h:`vec${s}<${h}>`,b=z2(r,e[0],e[1],e[2],i,a,u,n.epsilon),w=S=>`
  const H: u32 = ${a};
  const C: u32 = ${u/s};

  @group(0) @binding(0) var<storage, read> input : array<${c.type.storage}>;
  @group(0) @binding(1) var<storage, read> scaleInput : array<${g}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${p.type.storage}>;

  ${S.mainStart()}
    let currentImageNumber = global_idx / (C * H);
    let currentChannelNumber = global_idx % C;

    let scaleOffset = currentImageNumber * C + currentChannelNumber;
    let scale = scaleInput[scaleOffset];
    output[global_idx] = fma(input[global_idx], ${x}(scale[0]), ${x}(scale[1]));
  }`;r.compute({name:"InstanceNormalization",shaderCache:{hint:`${n.cacheKey}`},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)}}),getShaderSource:w},{inputs:[e[0],b]})},qg=r=>ye({epsilon:r.epsilon,format:r.format}),Kg=(r,e)=>{e.format==="NHWC"?F2(r,r.inputs,e):r.compute(N2(r.inputs,e))}});var G2,W2,Xg,Jg,Zg=D(()=>{"use strict";dt();Pe();it();Fe();G2=r=>{if(!r||r.length<2)throw new Error("layerNorm requires at least 2 inputs.")},W2=(r,e,n)=>{let t=r[0].dims,o=r[1],i=r[2],u=t,a=G.normalizeAxis(e.axis,t.length),s=G.sizeToDimension(t,a),l=G.sizeFromDimension(t,a),c=G.size(o.dims),p=i?G.size(i.dims):0;if(c!==l||i&&p!==l)throw new Error(`Size of X.shape()[axis:] == ${l}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${c} and bias size of ${p}`);let h=[];for(let B=0;B<t.length;++B)B<a?h.push(t[B]):h.push(1);let g=Ir(l),x=at(r[0].dataType),b=[X("x",r[0].dataType,r[0].dims,g),X("scale",o.dataType,o.dims,g)];i&&b.push(X("bias",i.dataType,i.dims,g)),b.push(oe("output",r[0].dataType,u,g));let w=n>1,S=n>2;w&&b.push(oe("meanDataOutput",1,h)),S&&b.push(oe("invStdOutput",1,h));let O=B=>`
  const normSize: f32 = ${l};
  const normSizeVectorized: u32 = ${l/g};
  const epsilon: f32 = ${e.epsilon};

  ${B.declareVariables(...b)}
  ${B.mainStart()}
    ${B.guardAgainstOutOfBoundsWorkgroupSizes(s)}
    let offset = global_idx * normSizeVectorized;
    var meanVector = ${Xt("f32",g)};
    var meanSquareVector = ${Xt("f32",g)};

    for (var h: u32 = 0u; h < normSizeVectorized; h++) {
      let value = ${cn(x,g,"x[h + offset]")};
      meanVector += value;
      meanSquareVector += value * value;
    }
    let mean = ${Nr("meanVector",g)} / normSize;
    let meanSquare = sqrt(${Nr("meanSquareVector",g)} 
      / normSize - mean * mean + epsilon);

    for (var j: u32 = 0; j < normSizeVectorized; j++) {
      let f32input = ${cn(x,g,"x[j + offset]")};
      let f32scale = ${cn(x,g,"scale[j]")};
      output[j + offset] = ${b[0].type.value}((f32input - mean) / meanSquare * f32scale
        ${i?`+ ${cn(x,g,"bias[j]")}`:""}
      );
    }

    ${w?"meanDataOutput[global_idx] = mean":""};
    ${S?"invStdOutput[global_idx] = 1 / meanSquare":""};
  }`,E=[{dims:u,dataType:r[0].dataType}];return w&&E.push({dims:h,dataType:1}),S&&E.push({dims:h,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${e.cacheKey}|${n}|${r.length}`},getRunData:()=>({outputs:E,dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:O}},Xg=r=>ye({axis:r.axis,epsilon:r.epsilon}),Jg=(r,e)=>{G2(r.inputs),r.compute(W2(r.inputs,e,r.outputCount))}});var V2,Qg,eb=D(()=>{"use strict";Pe();So();V2=r=>{if(!r||r.length!==2)throw new Error("MatMul requires 2 inputs.");if(r[0].dims[r[0].dims.length-1]!==r[1].dims[r[1].dims.length-2])throw new Error("shared dimension does not match.")},Qg=r=>{V2(r.inputs);let e=ur.calcShape(r.inputs[0].dims,r.inputs[1].dims,!0);if(!e)throw new Error("Can't use matmul on the given tensors");r.compute(ra(r.inputs,{activation:"",activationCacheKey:""},e))}});var U2,H2,j2,q2,K2,Y2,X2,J2,Z2,tb,rb,nb=D(()=>{"use strict";dt();Pe();it();Fe();U2=r=>{if(!r||r.length<1)throw new Error("Too few inputs");if(r[0].dataType!==1)throw new Error("Input type must be float.");if(r.length>=2){let e=r[0].dims.length*2===r[1].dims[0];if(r.length===4&&(e=r[3].dims[0]*2===r[1].dims[0]),!e)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},H2=(r,e,n,t,o,i,u)=>{let a=n.length,s="";for(let l=a-1;l>=0;--l)s+=`
            k = i32(${r.indicesGet("indices",l)}) - ${o[l]};
            if (k < 0) {
              break;
            }
            if (k >= ${n[l]}) {
              break;
            }
            offset += k * ${t[l]};
        `;return`
          value = ${i}(${u});
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${s}
            value = x[offset];
          }
      `},j2=(r,e,n,t,o)=>{let i=n.length,u="";for(let a=i-1;a>=0;--a)u+=`
                k = i32(${r.indicesGet("indices",a)}) - ${o[a]};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = ${2*(n[a]-1)};
                  k = k % _2n_1;
                  if(k >= ${n[a]}) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * ${t[a]};
            `;return`
              var offset = 0;
              var k = 0;
              ${u}
              value = x[offset];
          `},q2=(r,e,n,t,o)=>{let i=n.length,u="";for(let a=i-1;a>=0;--a)u+=`
                k = i32(${r.indicesGet("indices",a)}) - ${o[a]};
                if (k < 0) {
                  k = 0;
                }
                if (k >= ${n[a]}) {
                  k = ${n[a]-1};
                }
                offset += k * ${t[a]};
            `;return`
              var offset = 0;
              var k = 0;
              ${u}
              value = x[offset];
          `},K2=(r,e,n,t,o)=>{let i=n.length,u="";for(let a=i-1;a>=0;--a)u+=`
                k = i32(${r.indicesGet("indices",a)}) - ${o[a]};
                if (k < 0)  {
                  k += ${n[a]};
                }
                if (k >= ${n[a]}) {
                  k -= ${n[a]};
                }
                offset += k * ${t[a]};
            `;return`
              var offset = 0;
              var k = 0;
              ${u}
              value = x[offset];
          `},Y2=(r,e,n,t,o,i)=>{switch(o.mode){case 0:return H2(r,e,n,t,o.pads,i,o.value);case 1:return j2(r,e,n,t,o.pads);case 2:return q2(r,e,n,t,o.pads);case 3:return K2(r,e,n,t,o.pads);default:throw new Error("Invalid mode")}},X2=(r,e,n,t)=>{let o=e[0].dims,i=G.padShape(o.slice(),n.pads),u=G.size(i),a=G.computeStrides(o),s=oe("output",e[0].dataType,i),l=X("x",e[0].dataType,o),c=Y2(s,i,o,a,n,t);return`
              ${r.declareVariables(l,s)}
              ${r.mainStart()}
              ${r.guardAgainstOutOfBoundsWorkgroupSizes(u)}

              let indices = ${s.offsetToIndices("global_idx")};

              var value = ${t}(0);
              ${c}
              output[global_idx] = value;
          }`},J2=(r,e)=>{let n=G.padShape(r[0].dims.slice(),e.pads);return{name:"Pad",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(G.size(n)/64)}}),getShaderSource:t=>X2(t,r,e,"f32")}},Z2=(r,e)=>{if(r.length>1){let n=r[1].getBigInt64Array(),t=r.length>=3&&r[2].data?r[2].getFloat32Array()[0]:0,o=r[0].dims.length,i=new Int32Array(2*o).fill(0);if(r.length>=4){let a=r[3].getBigInt64Array();for(let s=0;s<a.length;s++)i[Number(a[s])]=Number(n[s]),i[Number(a[s])+o]=Number(n[s+a.length])}else n.forEach((a,s)=>i[Number(s)]=Number(a));let u=[];return i.forEach(a=>u.push(a)),ye({mode:e.mode,value:t,pads:u})}else return e},tb=(r,e)=>{U2(r.inputs);let n=Z2(r.inputs,e);r.compute(J2(r.inputs,n),{inputs:[0]})},rb=r=>{let e=r.mode,n=r.value,t=r.pads;return ye({mode:e,value:n,pads:t})}});var oa,ob,ib,ab,sb,ub,lb,cb,db,fb,pb,hb,mb,gb,bb,yb=D(()=>{"use strict";Pe();it();Fe();oa=r=>{if(!r||r.length!==1)throw new Error("Pool ops requires 1 input.");if(r[0].dims.length!==4&&r[0].dims.length!==3)throw new Error("Pool ops supports 1-D or 2-D inputs only for now.")},ob=(r,e,n)=>{let t=e.format==="NHWC",o=r.dims.slice();t&&o.splice(1,0,o.pop());let i=Object.hasOwnProperty.call(e,"dilations"),u=e.kernelShape.slice(),a=e.strides.slice(),s=i?e.dilations.slice():[],l=e.pads.slice();ln.adjustPoolAttributes(n,o,u,a,s,l);let c=ln.computePoolOutputShape(n,o,a,s,u,l,e.autoPad),p=Object.assign({},e);i?Object.assign(p,{kernelShape:u,strides:a,pads:l,dilations:s,cacheKey:e.cacheKey}):Object.assign(p,{kernelShape:u,strides:a,pads:l,cacheKey:e.cacheKey});let h=c.slice();return h.push(h.splice(1,1)[0]),[p,t?h:c]},ib=(r,e,n,t,o,i,u,a)=>{let s=o.format==="NHWC",l=n,c=e.type.value,p=l.length,h=G.size(t),g=oe("output",e.type.tensor,t);if(o.kernelShape.length<=2){let x=o.kernelShape[o.kernelShape.length-1],b=o.strides[o.strides.length-1],w=o.pads[o.pads.length/2-1],S=o.pads[o.pads.length-1],O=p-(s?2:1),E="",B="",z="";if(w+S!==0?E=`
                for (var i: u32 = 0u; i < ${x}u; i++) {
                  xIndices[${O}] = indices[${O}] * ${b} - ${w} + i;
                  if (xIndices[${O}] < 0 || xIndices[${O}] >= ${l[O]}) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`:E=`
                for (var i: u32 = 0u; i < ${x}u; i++) {
                  xIndices[${O}] = indices[${O}] * ${b} - ${w} + i;
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`,o.kernelShape.length===2){let W=o.kernelShape[o.kernelShape.length-2],Y=o.strides[o.strides.length-2],Q=o.pads[o.pads.length/2-2],he=o.pads[o.pads.length-2],R=p-(s?3:2),ee=l[R];Q+he!==0?B=`
                for (var j: u32 = 0u; j < ${W}u; j++) {
                  xIndices[${R}] = indices[${R}] * ${Y} - ${Q} + j;
                  if (xIndices[${R}] < 0 || xIndices[${R}] >= ${ee}) {
                    pad+= ${x};
                    continue;
                  }
              `:B=`
                for (var j: u32 = 0u; j < ${W}u; j++) {
                  xIndices[${R}] = indices[${R}] * ${Y} - ${Q} + j;
                `,z=`
              }
            `}return`
            ${r.declareVariables(e,g)}

            ${r.mainStart()}
              ${r.guardAgainstOutOfBoundsWorkgroupSizes(h)}

              let indices = ${g.offsetToIndices("global_idx")};
              var xIndices = ${g.offsetToIndices("global_idx")};

              var value: ${c} = ${c}(${a});
              var pad = 0;
              ${B}
              ${E}
              ${z}
              ${u}

              output[global_idx] = value;
            }`}else{if(s)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let x=G.size(o.kernelShape),b=G.computeStrides(o.kernelShape),w=b.length,S=o.pads.length,O=o.pads.reduce((z,M)=>z+M),E="";return O?E=`
                if (xIndices[j] >= inputDims[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${e.indicesToOffset("xIndices")}];
                ${i}
              }`:E=`
              }
              let x_val = x[${e.indicesToOffset("xIndices")}];
              ${i}
            `,`
            ${r.declareVariables(e,g)}

            const pads = array<u32, ${S}>(${o.pads.map(z=>`${z}u`).join(",")});
            const inputDims = array<u32, ${p}>(${l.map(z=>`${z}u`).join(",")});
            const kernelStrides = array<u32, ${w}>(${b.map(z=>`${z}u`).join(",")});
            const strides = array<u32, ${w}>(${o.strides.map(z=>`${z}u`).join(",")});

            ${r.mainStart()}
              ${r.guardAgainstOutOfBoundsWorkgroupSizes(h)}

              let indices = ${g.offsetToIndices("global_idx")};
              let xIndices = ${g.offsetToIndices("global_idx")};

              var offsets: array<u32, ${w}>;

              var value = ${g.type.value}(${a});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < ${x}u; i++) {
                var offset = i;
                for (var j = 0u; j < ${w-1}u; j++) {
                  offsets[j] = offset / kernelStrides[j];
                  offset -= offsets[j] * kernelStrides[j];
                }
                offsets[${w-1}] = offset;

                isPad = false;
                for (var j = ${p-w}u; j < ${p}u; j++) {
                  xIndices[j] = indices[j] * strides[j - ${p-w}u]
                    + offsets[j - ${p-w}u] - pads[j - 2u];
                  ${E}
              }
              ${u}

              output[global_idx] = value;
            }`}},ab=r=>({format:r.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][r.auto_pad],ceilMode:r.ceil_mode,kernelShape:r.kernel_shape,strides:r.strides,pads:r.pads}),sb=(r,e,n,t)=>{let[o,i]=ob(e,t,n),u=G.size(o.kernelShape),a=X("x",e.dataType,e.dims),s=a.type.value,l="value += x_val;",c="";return o.countIncludePad?c+=`value /= ${s}(${u});`:c+=`value /= ${s}(${u} - pad);`,{name:r,shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(G.size(i)/64)}}),getShaderSource:p=>ib(p,a,e.dims,i,o,l,c,"0.0")}},ub=r=>{let e=r.count_include_pad!==0,n=ab(r);if(n.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return ye({countIncludePad:e,...n})},lb=(r,e)=>{oa(r.inputs),r.compute(sb("AveragePool",r.inputs[0],!1,e))},cb={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},db=r=>{let e=r.format;return{format:e,...cb,cacheKey:e}},fb=(r,e)=>{oa(r.inputs),r.compute(sb("GlobalAveragePool",r.inputs[0],!0,e))},pb=(r,e,n,t)=>{let[o,i]=ob(e,t,n),u=`
      value = max(x_val, value);
    `,a="",s=X("x",e.dataType,e.dims);return{name:r,shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(G.size(i)/64)}}),getShaderSource:l=>ib(l,s,e.dims,i,o,u,a,"-1e5")}},hb=(r,e)=>{oa(r.inputs),r.compute(pb("MaxPool",r.inputs[0],!1,e))},mb=r=>{let e=r.storage_order,n=r.dilations,t=ab(r);if(e!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return ye({storageOrder:e,dilations:n,...t})},gb=r=>{let e=r.format;return{format:e,...cb,cacheKey:e}},bb=(r,e)=>{oa(r.inputs),r.compute(pb("GlobalMaxPool",r.inputs[0],!0,e))}});var e1,t1,xb,vb=D(()=>{"use strict";Rt();dt();Fe();e1=(r,e,n)=>{let t=r===e,o=r<e&&n<0,i=r>e&&n>0;if(t||o||i)throw new Error("Range these inputs' contents are invalid.")},t1=(r,e,n,t)=>{let o=Math.abs(Math.ceil((e-r)/n)),i=[o],u=o,a=oe("output",t,i),s=a.type.storage,l=c=>`
        ${c.declareVariables(a)}
        ${c.mainStart()}
        ${c.guardAgainstOutOfBoundsWorkgroupSizes(u)}
        output[global_idx] = ${s}(${r}) + ${s}(global_idx) * ${s}(${n});
      }`;return{name:"Range",shaderCache:{hint:[r,e,n].map(c=>c.toString()).join("_")},getShaderSource:l,getRunData:()=>({outputs:[{dims:i,dataType:t}],dispatchGroup:{x:Math.ceil(u/64)}})}},xb=r=>{let e=0,n=0,t=0;r.inputs[0].dataType===6?(e=r.inputs[0].getInt32Array()[0],n=r.inputs[1].getInt32Array()[0],t=r.inputs[2].getInt32Array()[0]):r.inputs[0].dataType===1&&(e=r.inputs[0].getFloat32Array()[0],n=r.inputs[1].getFloat32Array()[0],t=r.inputs[2].getFloat32Array()[0]),ve.webgpu.validateInputContent&&e1(e,n,t),r.compute(t1(e,n,t,r.inputs[0].dataType),{inputs:[]})}});var r1,n1,o1,i1,a1,s1,u1,l1,c1,d1,f1,p1,h1,m1,g1,wb,Tb,$b=D(()=>{"use strict";Pe();it();Fe();r1=(r,e)=>{if(r.every(n=>n>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),r.length>0){if(e.mode==="linear"){if(!(r.length===2||r.length===4&&r[0]===1&&r[1]===1||r.length===4&&r[0]===1&&r[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for linear mode")}else if(e.mode==="cubic"&&!(r.length===2||r.length===4&&r[0]===1&&r[1]===1||r.length===4&&r[0]===1&&r[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},n1=(r,e,n)=>{e.every(o=>o>=0&&o<n||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let t=new Array(n).fill(1);return e.forEach((o,i)=>t[o]=r[i]),t},o1=(r,e,n,t,o,i)=>{let[u,a,s]=n>10?[1,2,3]:[-1,r.length>1?1:-1,-1],l=r[0].dims.length;if(u>0&&r.length>u&&r[u].dims.length>0)r[u].getFloat32Array().forEach(c=>i.push(c));else if(e.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(a>0&&r.length>a&&r[a].dims.length>0){if(r[a].getFloat32Array().forEach(c=>t.push(c)),t.length!==0&&t.length!==l&&n>=18&&t.length!==e.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");r1(t,e),e.axes.length>0&&n1(t,e.axes,l).forEach((c,p)=>t[p]=c)}if(s>0&&r.length>s&&(r[s].getBigInt64Array().forEach(c=>o.push(Number(c))),o.length!==l||n>=18&&o.length===e.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(e.axes.length>0){if(t.length!==e.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(o.length!==e.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof t<"u"&&typeof o<"u"&&t.length>0&&o.length>l)throw new Error("Resize requires only of scales or sizes to be specified")},i1=r=>"fn getOriginalCoordinateFromResizedCoordinate(xResized: f32, xScale: f32, lengthResized: f32,    lengthOriginal: f32, roiStart: f32, roiEnd: f32) -> f32 { "+(()=>{switch(r){case"asymmetric":return"return xResized / xScale;";case"pytorch_half_pixel":return"if (lengthResized > 1) {                     return (xResized + 0.5) / xScale - 0.5;                   } else {                     return 0.0;                   }";case"tf_half_pixel_for_nn":return"return (xResized + 0.5) / xScale;";case"align_corners":return"if (lengthResized == 1) {                     return 0.0;                   } else {                     return xResized * (lengthOriginal - 1) / (lengthResized - 1);                   }";case"tf_crop_and_resize":return"if (lengthResized > 1) {                     return roiStart * (lengthOriginal - 1) +                           (xResized * (roiEnd - roiStart) * (lengthOriginal - 1)) / (lengthResized - 1);                   } else {                     return 0.5 * (roiStart + roiEnd) * f32(lengthOriginal - 1);                   }";case"half_pixel_symmetric":return["const outputWidth = xScale * lengthResized;","const adjustment = lengthResized / outputWidth;","const center = lengthOriginal / 2;","const offset = center * (1 - adjustment);","return offset + ((xResized + 0.5) / xScale) - 0.5;"].join(`
`);case"half_pixel":return"return ((xResized + 0.5) / xScale) - 0.5;";default:throw new Error(`Coordinate transform mode ${r} is not supported`)}})()+"}",a1=(r,e)=>"fn getNearestPixelFromOriginal(xOriginal: f32, isDownSample: bool) -> f32 {"+(()=>{switch(r){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(e<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${r} is not supported`)}})()+"}",s1=(r,e,n)=>{let t=new Array(n).fill(0).concat(new Array(n).fill(1)),o=r.length===0?t:r.slice();return e.length>0?(e.forEach((i,u)=>{t[i]=o[u],t[u+n]=o[e.length+u]}),t):o},u1=(r,e,n,t)=>{let o=[];if(n.length>0)if(t.length>0){if(r.forEach(i=>o.push(i)),Math.max(...t)>r.length)throw new Error("axes is out of bound");t.forEach((i,u)=>o[i]=n[u])}else n.forEach(i=>o.push(i));else{if(e.length===0)throw new Error("Resize requires either scales or sizes.");o=r.map((i,u)=>Math.round(i*e[u]))}return o},l1=(r,e,n,t)=>{let o=(()=>{switch(t.keepAspectRatioPolicy){case"not_larger":return t.axes.length>0?Math.min(...t.axes.map(u=>n[u]),Number.MAX_VALUE):Math.min(...n,Number.MAX_VALUE);case"not_smaller":return t.axes.length>0?Math.max(...t.axes.map(u=>n[u]),Number.MIN_VALUE):Math.max(...n,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${t.keepAspectRatioPolicy} is not supported`)}})();n.fill(1,0,n.length);let i=r.slice();return t.axes.length>0?(t.axes.forEach(u=>n[u]=o),t.axes.forEach(u=>i[u]=Math.round(r[u]*n[u]))):(n.fill(o,0,n.length),i.forEach((u,a)=>i[a]=Math.round(u*n[a]))),i},c1=(r,e,n,t,o)=>`
    fn calculateOriginalIndicesFromOutputIndices(outputIndices: ${r.type.indices}) -> array<f32, ${n.length}> {
      const inputShape = array<u32, ${e.length}>(${e.map(i=>`${i}u`).join(",")});
      const outputShape = array<u32, ${n.length}>(${n.map(i=>`${i}u`).join(",")});
      const scales = array<f32, ${t.length}>(${t.map(i=>`${i}f`).join(",")});
      const roi = array<f32, ${o.length}>(${o.map(i=>`${i}f`).join(",")});
      var originalIndices: array<f32, ${n.length}>;
      for (var i:u32 = 0; i < ${n.length}; i++) {
        var outputIndex = ${n.length===1?"outputIndices":"outputIndices[i]"};
        if (scales[i] == 1.0) {
          originalIndices[i] = f32(outputIndex);
        } else {
          originalIndices[i] = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],
                f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${e.length}]);
        }
      }
      return originalIndices;
    }`,d1=(r,e,n,t,o,i,u)=>`
    fn calculateInputIndicesFromOutputIndices(outputIndices: ${e.type.indices}) -> ${r.type.indices} {
        const inputShape = array<u32, ${n.length}>(${n.map(a=>`${a}u`).join(",")});
        const outputShape = array<u32, ${t.length}>(${t.map(a=>`${a}u`).join(",")});
        const scales = array<f32, ${o.length}>(${o.map(a=>`${a}f`).join(",")});
        const roi = array<f32, ${i.length}>(${i.map(a=>`${a}f`).join(",")});
        var inputIndices: ${r.type.indices};
        for (var i:u32 = 0; i < ${t.length}; i++) {
          var outputIndex = ${t.length===1?"outputIndices":"outputIndices[i]"};
          var inputIndex: u32;
          if (scales[i] == 1.0) {
            inputIndex = outputIndex;
          } else {
            var original_idx = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],
                    f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${n.length}]);
            if (!${u} || (original_idx >= 0 && original_idx < f32(inputShape[i]))) {
              if (original_idx < 0) {
                inputIndex = 0;
              } else if (original_idx > (f32(inputShape[i]) - 1)) {
                inputIndex = inputShape[i] - 1;
              } else {
                inputIndex = u32(getNearestPixelFromOriginal(original_idx, scales[i] < 1));
              }
            } else {
              inputIndex = u32(original_idx);
            }
          }
          ${r.indicesSet("inputIndices","i","inputIndex")}
        }
        return inputIndices;
    }`,f1=(r,e)=>`
    fn checkInputIndices(inputIndices: ${r.type.indices}) -> bool {
      const inputShape = array<u32, ${e.length}>(${e.map(n=>`${n}u`).join(",")});
      for (var i:u32 = 0; i < ${e.length}; i++) {
        var inputIndex = ${e.length===1?"inputIndices":"inputIndices[i]"};
        if (inputIndex < 0 || inputIndex >= inputShape[i]) {
          return false;
        }
      }
      return true;
    }`,p1=(r,e,n,t,o,i,u)=>{let[a,s,l,c]=n.length===2?[-1,0,1,-1]:o[1]===1?[0,2,3,1]:[0,1,2,3];return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> f32 {
      var inputIndices: ${r.type.indices};
      inputIndices[${s}] = max(0, min(row, ${n[s]} - 1));
      inputIndices[${l}] = max(0, min(col, ${n[l]} - 1));
      if (${n.length} > 2) {
        inputIndices[${c}] = channel;
        inputIndices[${a}] = batch;
      };
      return input[${r.indicesToOffset("inputIndices")}];
    }

    fn bilinearInterpolation(outputIndices: ${e.type.indices}) -> f32 {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(outputIndices);
      var row:f32 = originalIndices[${s}];
      var col:f32 = originalIndices[${l}];
      if (${i} && (row < 0 || row > (${n[s]} - 1) || col < 0 || col > ${n[l]} - 1)) {
        return ${u};
      }
      row = max(0, min(row, ${n[s]} - 1));
      col = max(0, min(col, ${n[l]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = 0;
      var batch: u32 = 0;
      if (${n.length>2}) {
        channel = u32(originalIndices[${c}]);
        batch = u32(originalIndices[${a}]);
      }
      var x11: f32 = getInputValue(batch, channel, row1, col1);
      var x12: f32 = getInputValue(batch, channel, row1, col2);
      var x21: f32 = getInputValue(batch, channel, row2, col1);
      var x22: f32 = getInputValue(batch, channel, row2, col2);
      var dx1: f32 = row - f32(row1);
      var dx2: f32 = f32(row2 ) - row;
      var dy1 = col - f32(col1);
      var dy2 = f32(col2) - col;
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},h1=(r,e,n,t,o,i,u,a,s,l)=>{let[c,p]=n.length===2?[0,1]:o[1]===1?[2,3]:[1,2],h=g=>{let x=g===c?"row":"col";return`
      fn ${x}CubicInterpolation(inputIndices: ${r.type.indices}, outputIndices: ${e.type.indices}) -> f32 {
        var outputIndex = ${t.length===1?"outputIndices":`outputIndices[${g}]`};
        var originalIdx: f32 = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), ${o[g]},
        f32(${t[g]}), f32(${n[g]}), ${i[g]}, ${i[g]} + ${n.length});
        var fractOriginalIdx: f32 = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${a} && (originalIdx < 0 || originalIdx > (${n[g]} - 1))) {
          return ${s};
        }
        var data: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${x}: f32 = originalIdx + f32(i);
          if (${x} < 0 || ${x} >= ${n[g]}) {
            if (${l}) {
              coefs[i + 1] = 0.0;
              continue;
            } else if (${a}) {
              return ${s};
            } else {
              ${x} = max(0, min(${x}, ${n[g]} - 1));
            }
          }
          var inputIndicesCopy: ${r.type.indices} = inputIndices;
          inputIndicesCopy[${g}] = u32(${x});
          data[i + 1] = ${g===c?`input[${r.indicesToOffset("inputIndicesCopy")}];`:`
                                               rowCubicInterpolation(inputIndicesCopy, outputIndices);`}
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${h(c)};
    ${h(p)};
  fn getCubicInterpolationCoefs(s: f32) -> array<f32, 4> {
    var absS = abs(s);
    var coeffs: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: f32 = 1.0 - absS;
    var twoMinusAbsS: f32 = 2.0 - absS;
    var onePlusAbsS: f32 = 1.0 + absS;
    coeffs[0] = ((${u} * onePlusAbsS - 5 * ${u}) * onePlusAbsS + 8 * ${u}) * onePlusAbsS - 4 * ${u};
    coeffs[1] = ((${u} + 2) * absS - (${u} + 3)) * absS * absS + 1;
    coeffs[2] = ((${u} + 2) * oneMinusAbsS - (${u} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${u} * twoMinusAbsS - 5 * ${u}) * twoMinusAbsS + 8 * ${u}) * twoMinusAbsS - 4 * ${u};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<f32, 4>, coefs: array<f32, 4>) -> f32 {
    var coefsSum: f32 = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(outputIndices: ${e.type.indices}) -> f32 {
    var inputIndices: ${r.type.indices} = outputIndices;
    return colCubicInterpolation(inputIndices, outputIndices);
  }
    `},m1=(r,e,n,t,o,i)=>{let u=r.dims,a=s1(i,e.axes,u.length),s=u1(u,t,o,e.axes),l=t.slice();t.length===0&&(l=u.map((w,S)=>w===0?1:s[S]/w),e.keepAspectRatioPolicy!=="stretch"&&(s=l1(u,s,l,e)));let c=oe("output",r.dataType,s),p=X("input",r.dataType,u),h=G.size(s),g=u.length===s.length&&u.every((w,S)=>w===s[S]),x=e.coordinateTransformMode==="tf_crop_and_resize",b=w=>`
      ${i1(e.coordinateTransformMode)};
      ${(()=>{switch(e.mode){case"nearest":return`
              ${f1(p,u)};
              ${a1(e.nearestMode,n)};
              ${d1(p,c,u,s,l,a,x)};
              `;case"linear":return`
              ${c1(c,u,s,l,a)};
              ${p1(p,c,u,s,l,x,e.extrapolationValue)};
              `;case"cubic":return`
            ${h1(p,c,u,s,l,a,e.cubicCoeffA,x,e.extrapolationValue,e.excludeOutside)};
            `;default:throw Error("Invalid resize mode")}})()};
      ${w.declareVariables(p,c)}
      ${w.mainStart()}
        ${w.guardAgainstOutOfBoundsWorkgroupSizes(h)}
        if (${g}) {
          output[global_idx] = input[global_idx];
        } else {
          let outputIndices = ${c.offsetToIndices("global_idx")};
          var inputIndices: ${p.type.indices};
          ${(()=>{switch(e.mode){case"nearest":return`inputIndices = calculateInputIndicesFromOutputIndices(outputIndices);
                  if (checkInputIndices(inputIndices)) {
                    output[global_idx] = input[${p.indicesToOffset("inputIndices")}];
                  } else {
                    output[global_idx] = ${e.extrapolationValue};
                  }`;case"linear":return"output[global_idx] = bilinearInterpolation(outputIndices);";case"cubic":return"output[global_idx] = bicubicInterpolation(outputIndices);";default:throw Error(`Unsupported resize mode: ${e.mode}`)}})()};
        }
      }`;return{name:"Resize",shaderCache:{hint:`${e.cacheKey}|${n}|${l.length>0?l:""}|${o.length>0?o:""}`},getShaderSource:b,getRunData:()=>({outputs:[{dims:s,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(h/64)}})}},g1=r=>{let e=r.customDataBuffer;return new Uint32Array(e,e.byteOffset,1)[0]},wb=(r,e)=>{let n=[],t=[],o=[],i=g1(r);o1(r.inputs,e,i,n,t,o),r.compute(m1(r.inputs[0],e,i,n,t,o),{inputs:[0]})},Tb=r=>{let e=r.antialias,n=r.axes,t=r.coordinateTransformMode,o=r.cubicCoeffA,i=r.excludeOutside!==0,u=r.extrapolationValue,a=r.keepAspectRatioPolicy,s=r.mode,l=r.nearestMode===""?"simple":r.nearestMode;return ye({antialias:e,axes:n,coordinateTransformMode:t,cubicCoeffA:o,excludeOutside:i,extrapolationValue:u,keepAspectRatioPolicy:a,mode:s,nearestMode:l})}});var b1,y1,Sb,Ib,_b=D(()=>{"use strict";dt();Pe();it();Fe();b1=r=>{if(!r||r.length<3)throw new Error("layerNorm requires at least 3 inputs.");let e=r[0],n=r[1],t=r[2];if(e.dataType!==n.dataType||e.dataType!==t.dataType)throw new Error("All inputs must have the same data type");if(e.dims.length!==3&&e.dims.length!==2)throw new Error("Input must be 2D or 3D");if(n.dims.length!==3&&n.dims.length!==2)throw new Error("Skip must be 2D or 3D");let o=e.dims[e.dims.length-1],i=e.dims[e.dims.length-2];if(n.dims[n.dims.length-1]!==o)throw new Error("Skip must have the same hidden size as input");if(n.dims[n.dims.length-2]!==i)throw new Error("Skip must have the same sequence length as input");if(t.dims.length!==1)throw new Error("Gamma must be 1D");if(t.dims[t.dims.length-1]!==o)throw new Error("Gamma must have the same hidden size as input");if(r.length>3){let u=r[3];if(u.dims.length!==1)throw new Error("Beta must be 1D");if(u.dims[u.dims.length-1]!==o)throw new Error("Beta must have the same hidden size as input")}if(r.length>4){let u=r[4];if(u.dims.length!==1)throw new Error("Bias must be 1D");if(u.dims[u.dims.length-1]!==o)throw new Error("Bias must have the same hidden size as input")}},y1=(r,e,n,t)=>{let o=r[0].dims,i=G.size(o),u=o,a=i,s=o.slice(-1)[0],l=t?o.slice(0,-1).concat(1):[],c=r.length>3,p=r.length>4,h=t&&n>1,g=t&&n>2,x=n>3,b=Ir(s),w=[X("x",r[0].dataType,r[0].dims,b),X("skip",r[1].dataType,r[1].dims,b),X("gamma",r[2].dataType,r[2].dims,b)];c&&w.push(X("beta",r[3].dataType,r[3].dims,b)),p&&w.push(X("bias",r[4].dataType,r[4].dims,b)),w.push(oe("output",r[0].dataType,u,b)),h&&w.push(oe("meanOutput",1,l)),g&&w.push(oe("invStdOutput",1,l)),x&&w.push(oe("inputSkipBiasSum",r[0].dataType,u,b));let S=at(r[0].dataType),O=B=>`
      const hiddenSize: f32 = ${s};
      const hiddenSizeVectorized: u32 = ${s/b};
      const epsilon: f32 = ${e.epsilon};

      ${B.declareVariables(...w)}

      ${B.mainStart()}
        ${B.guardAgainstOutOfBoundsWorkgroupSizes(a/s)}
        let offset = global_idx * hiddenSizeVectorized;
        var sum = ${Xt("f32",b)};
        var squareSum = ${Xt("f32",b)};
        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {
          let skipValue = skip[offset + i];
          let biasValue = ${p?"bias[i]":"0.0"};
          let inputValue = x[offset + i];
          let value = inputValue + skipValue + biasValue;
          ${x?"inputSkipBiasSum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32Value = ${cn(S,b,"value")};
          sum += f32Value;
          squareSum += f32Value * f32Value;
        }
        let mean = ${Nr("sum",b)} / hiddenSize;
        let variance = sqrt(${Nr("squareSum",b)} / hiddenSize - mean * mean + epsilon);
        ${h?"meanOutput[global_idx] = mean;":""}
        ${g?"invStdOutput[global_idx] = 1.0 / variance;":""}
        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {
          output[offset + i] = (output[offset + i] - ${S}(mean)) / ${S}(variance) * gamma[i]
           + ${c?"beta[i]":"0.0"};
        }
      }`,E=[{dims:u,dataType:r[0].dataType}];return n>1&&E.push({dims:l,dataType:1}),n>2&&E.push({dims:l,dataType:1}),n>3&&E.push({dims:o,dataType:r[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:e.cacheKey},getShaderSource:O,getRunData:()=>({outputs:E,dispatchGroup:{x:Math.ceil(a/s/64)}})}},Sb=(r,e)=>{b1(r.inputs);let t=[0];r.outputCount>1&&t.push(-3),r.outputCount>2&&t.push(-3),r.outputCount>3&&t.push(3),r.compute(y1(r.inputs,e,r.outputCount,!1),{outputs:t})},Ib=r=>{let e=r.epsilon;return ye({epsilon:e})}});var x1,ia,v1,Ab,w1,T1,Ob,Eb,Cb=D(()=>{"use strict";dt();Pe();it();Fe();x1=(r,e)=>{if(!r||r.length<1)throw new Error("too few inputs");if(e.axes.length!==0){if(e.axes.length!==e.starts.length||e.axes.length!==e.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(e.starts.length!==e.ends.length)throw new Error("starts and ends must have the same length");r.slice(1).forEach((n,t)=>{if(r[t+1].dataType!==6&&r[t+1].dataType!==7)throw new Error(`Input ${t} must be an array of int32 or int64`)})},ia=(r,e)=>{let n=[];if(r.length>e)if(r[e].dataType===7)r[e].getBigInt64Array().forEach(t=>n.push(Number(t)));else if(r[e].dataType===6)r[e].getInt32Array().forEach(t=>n.push(Number(t)));else throw new Error(`Input ${e} must be an array of int32 or int64`);return n},v1=(r,e)=>{if(r.length>1){let n=ia(r,1),t=ia(r,2),o=ia(r,3);return o.length===0&&(o=[...Array(r[0].dims.length).keys()]),ye({starts:n,ends:t,axes:o})}else return e},Ab=(r,e,n,t,o)=>{let i=r;return r<0&&(i+=n[t[e]]),o[e]<0?Math.max(0,Math.min(i,n[t[e]]-1)):Math.max(0,Math.min(i,n[t[e]]))},w1=(r,e,n,t)=>`fn calculateInputIndices(outputIndices: ${e.type.indices}) -> ${r.type.indices} {
          var inputIndices: ${r.type.indices};
          var carry = 0u;
          for (var i = ${n.length}; i >= 0; i--) {
            var outputIndex = ${t.length===1?"outputIndices":"outputIndices[i]"};
            var inputIndex = outputIndex * steps[i] + starts[i] + carry;
            carry = inputIndex / inputShape[i];
            inputIndex = inputIndex % inputShape[i];
            if (signs[i] < 0) {
              inputIndex = inputShape[i] - inputIndex - 1u + starts[i];
            }
            ${n.length===1?"inputIndices":"inputIndices[i]"} = inputIndex;
          }
          return inputIndices;
      }`,T1=(r,e)=>{let n=r[0].dims,t=G.size(n),o=e.axes.length>0?G.normalizeAxes(e.axes,n.length):[...Array(n.length).keys()],i=ia(r,4);i.forEach(b=>b!==0||(()=>{throw new Error("step cannot be 0")})),i.length===0&&(i=Array(o.length).fill(1));let u=e.starts.map((b,w)=>Ab(b,w,n,o,i)),a=e.ends.map((b,w)=>Ab(b,w,n,o,i));if(o.length!==n.length)for(let b=0;b<n.length;++b)o.includes(b)||(u.splice(b,0,0),a.splice(b,0,n[b]),i.splice(b,0,1));let s=i.map(b=>Math.sign(b));i.forEach((b,w,S)=>{if(b<0){let O=(a[w]-u[w])/b,E=u[w],B=E+O*i[w];u[w]=B,a[w]=E,S[w]=-b}});let l=n.slice(0);o.forEach((b,w)=>{l[b]=Math.ceil((a[b]-u[b])/i[b])});let c={dims:l,dataType:r[0].dataType},p=oe("output",r[0].dataType,l),h=X("input",r[0].dataType,n),g=G.size(l),x=b=>`
      ${b.declareVariables(h,p)}
        const signs = array<i32, ${s.length}>(${s.map(w=>`${w}i`).join(",")});
        const starts = array<u32, ${u.length}>(${u.map(w=>`${w}u`).join(",")});
        const ends = array<u32, ${a.length}>(${a.map(w=>`${w}u`).join(",")});
        const steps = array<u32, ${i.length}>(${i.map(w=>`${w}u`).join(",")});
        const inputShape = array<u32, ${n.length}>(${n.map(w=>`${w}u`).join(",")});

        ${w1(h,p,n,l)}
        ${b.mainStart()}
          ${b.guardAgainstOutOfBoundsWorkgroupSizes(g)}
          let outputIndices = ${p.offsetToIndices("global_idx")};
          let inputIndices = calculateInputIndices(outputIndices);
          ${p.setByOffset("global_idx",h.getByIndices("inputIndices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${e.cacheKey}|${r[4]?.dims??""}`},getShaderSource:x,getRunData:()=>({outputs:[c],dispatchGroup:{x:Math.ceil(t/64)}})}},Ob=(r,e)=>{x1(r.inputs,e);let n=v1(r.inputs,e);r.compute(T1(r.inputs,n),{inputs:[0]})},Eb=r=>{let e=r.starts,n=r.ends,t=r.axes;return ye({starts:e,ends:n,axes:t})}});var $1,S1,Pb,Db,kb=D(()=>{"use strict";Pe();it();Fe();$1=r=>{if(!r||r.length!==1)throw new Error("Softmax op requires 1 input.")},S1=(r,e)=>{let n=at(r.dataType),t=r.dims,o=G.size(t),i=64,u=e.axis;if(u<0&&(u=t.length+u),u<t.length-1)throw new Error("softmax only supports last axis for now.");let a=t[u],s=o/a,l=Ir(a),c=a/l,p=l===1?n:`vec${l}<${n}>`,h=(b,w)=>w===4?`max(max(${b}.x, ${b}.y), max(${b}.z, ${b}.w))`:w===2?`max(${b}.x, ${b}.y)`:w===3?`max(max(${b}.x, ${b}.y), ${b}.z)`:b,g=n==="f32"?`var threadMax = ${p}(-3.402823e+38f);`:`var threadMax = ${p}(-65504.0h);`;return{name:"Softmax",getRunData:()=>({outputs:[{dims:t,dataType:r.dataType}],dispatchGroup:{x:s}}),getShaderSource:b=>`
      var<workgroup> rowMaxShared : ${p};
      var<workgroup> rowSumShared : ${p};
      var<workgroup> threadShared : array<${p}, ${i}>;

      @group(0) @binding(0) var<storage, read> x : array<${p}>;
      @group(0) @binding(1) var<storage, read_write> result : array<${p}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${p} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${p}) {
        let index = row * row_stride + col;
        result[index] = value;
      }

      @compute @workgroup_size(${i}, 1, 1)
      fn main(@builtin(local_invocation_id) local_id : vec3<u32>, @builtin(global_invocation_id) global_id : vec3u) {
        let gindex = i32(global_id.x);
        let lindex = i32(local_id.x);
        const wg = ${i};
        let row = gindex / wg;
        let cols = ${c};
        let row_stride : i32 = ${c};

        // find the rows max
        ${g}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${p}(${h("threadShared[0]",l)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${p}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${p}(${Nr("threadShared[0]",l)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`}},Pb=(r,e)=>{$1(r.inputs),r.compute(S1(r.inputs[0],e))},Db=r=>ye({axis:r.axis})});var I1,_1,A1,O1,E1,Rb,Bb,Mb=D(()=>{"use strict";Pe();it();Fe();I1=r=>{if(!r||r.length<1)throw new Error("too few inputs")},_1=(r,e)=>{let n=[],t=e.numOutputs;return r[1].dims[0]>0&&(r[1].getBigInt64Array().forEach(o=>n.push(Number(o))),t=n.length),ye({numOutputs:t,axis:e.axis,splitSizes:n})},A1=r=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${r}u; i += 1u ) {
    if (index < sizeInConcatAxis[i]) {
        return i;
    }
    }
    return ${r}u;
}`,O1=r=>{let e=r.length,n=[];for(let t=0;t<e;++t){let o=r[t].setByIndices("indices","input[global_idx]");e===1?n.push(o):t===0?n.push(`if (outputNumber == ${t}u) { ${o} }`):t===e-1?n.push(`else { ${o} }`):n.push(`else if (outputNumber == ${t}) { ${o} }`)}return`
      fn writeBufferData(outputNumber: u32, indices: ${r[0].type.indices}, global_idx: u32) {
        ${n.join(`
`)}
      }`},E1=(r,e)=>{let n=r[0].dims,t=G.size(n),o=r[0].dataType,i=n.length,u=e.axis,a=u<0?n.length+u:u,s=new Array(e.numOutputs),l=X("input",o,n),c=new Array(e.numOutputs),p=[],h=[],g=0;for(let w=0;w<e.numOutputs;w++){g+=e.splitSizes[w],c[w]=g;let S=n.slice();S[e.axis]=e.splitSizes[w],h.push(S),s[w]=oe(`output${w}`,o,h[w]),p.push({dims:h[w],dataType:r[0].dataType})}let x=i<2?"indices":`indices[${a}]`,b=w=>`
  ${w.declareVariables(l,...s)}
  const sizeInConcatAxis = array<u32, ${c.length}>(${c.map(S=>`${S}u`).join(",")});
  ${A1(c.length)}
  ${O1(s)}

  ${w.mainStart()}
    ${w.guardAgainstOutOfBoundsWorkgroupSizes(t)}

    var indices = ${l.offsetToIndices("global_idx")};
    let outputNumber = calculateOutputIndex(${x});
    if (outputNumber != 0) {
        ${x} -= sizeInConcatAxis[outputNumber - 1u];
    }
    writeBufferData(outputNumber, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:e.cacheKey},getShaderSource:b,getRunData:()=>({outputs:p,dispatchGroup:{x:Math.ceil(t/64)}})}},Rb=(r,e)=>{I1(r.inputs);let n=r.inputs.length===1?e:_1(r.inputs,e);r.compute(E1(r.inputs,n),{inputs:[0]})},Bb=r=>{let e=r.axis,n=r.splitSizes,t=r.numOutputs<0?n.length:r.numOutputs;if(t!==n.length)throw new Error("numOutputs and splitSizes lengh must be equal");return ye({axis:e,numOutputs:t,splitSizes:n})}});var Lb,C1,P1,D1,Nb,zb=D(()=>{"use strict";dt();Pe();Fe();Lb=r=>Array.from(r.getBigInt64Array(),Number),C1=r=>{if(!r||r.length!==2)throw new Error("Tile requires 2 inputs.");if(r[0].dataType!==1&&r[0].dataType!==6&&r[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(r[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(r[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Lb(r[1]).length!==r[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},P1=(r,e)=>{let n=[];for(let t=0;t<r.length;++t)n.push(r[t]*e[t]);return n},D1=r=>{let e=r[0].dims,n=Lb(r[1]),t=P1(e,n),o=G.size(t),i=r[0].dataType,u=X("input",i,e),a=oe("output",i,t),s=l=>`
      const inputShape = ${u.indices(...e)};
      ${l.declareVariables(u,a)}
      ${l.mainStart()}
      ${l.guardAgainstOutOfBoundsWorkgroupSizes(o)}
      let outputIndices = ${a.offsetToIndices("global_idx")};
      var inputIndices: ${u.type.indices};
      for (var i = 0; i < ${e.length}; i++) {
        let inputDimValue = ${a.indicesGet("outputIndices","i")}  % ${u.indicesGet("inputShape","i")};

        ${u.indicesSet("inputIndices","i","inputDimValue")}
      }
      ${a.setByOffset("global_idx",u.getByIndices("inputIndices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${n}`},getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:s}},Nb=r=>{C1(r.inputs),r.compute(D1(r.inputs),{inputs:[0]})}});var k1,R1,Fb,Gb=D(()=>{"use strict";dt();Pe();Fe();k1=(r,e,n,t,o)=>{let i=G.size(n),u=Math.ceil(i/4),a=oe("outputData",o,n,4),s=X("aData",e[1].dataType,e[1].dims,4),l=X("bData",e[2].dataType,e[2].dims,4),c=X("cData",e[0].dataType,e[0].dims,4),p,h=(g,x,b)=>`select(${x}, ${g}, ${b})`;if(!t)p=a.setByOffset("global_idx",h(s.getByOffset("global_idx"),l.getByOffset("global_idx"),c.getByOffset("global_idx")));else{let g=(x,b,w="")=>{let S=`aData[indexA${b}][componentA${b}]`,O=`bData[indexB${b}][componentB${b}]`,E=`bool(cData[indexC${b}] & ${4278190080>>>(3-b)*8}u)`;return`
            let outputIndices${b} = ${a.offsetToIndices(`global_idx * 4u + ${b}u`)};
            let offsetA${b} = ${s.broadcastedIndicesToOffset(`outputIndices${b}`,a)};
            let offsetB${b} = ${l.broadcastedIndicesToOffset(`outputIndices${b}`,a)};
            let offsetC${b} = ${c.broadcastedIndicesToOffset(`outputIndices${b}`,a)};
            let indexA${b} = offsetA${b} / 4u;
            let indexB${b} = offsetB${b} / 4u;
            let indexC${b} = offsetC${b} / 4u;
            let componentA${b} = offsetA${b} % 4u;
            let componentB${b} = offsetB${b} % 4u;
            ${x}[${b}] = ${w}(${h(S,O,E)});
          `};o===9?p=`
            var data = vec4<u32>(0);
            ${g("data",0,"u32")}
            ${g("data",1,"u32")}
            ${g("data",2,"u32")}
            ${g("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:p=`
            ${g("outputData[global_idx]",0)}
            ${g("outputData[global_idx]",1)}
            ${g("outputData[global_idx]",2)}
            ${g("outputData[global_idx]",3)}
          `}return`
        ${r.declareVariables(c,s,l,a)}
        ${r.mainStart()}
        ${r.guardAgainstOutOfBoundsWorkgroupSizes(u)}
        ${p}
      }`},R1=r=>{let e=r[1].dims,n=r[2].dims,t=r[0].dims,o=r[1].dataType,i=!(G.areEqual(e,n)&&G.areEqual(n,t)),u=e,a=G.size(e);if(i){let s=ur.calcShape(ur.calcShape(e,n,!1),t,!1);if(!s)throw new Error("Can't perform where op on the given tensors");u=s,a=G.size(u)}return{name:"Where",getShaderSource:s=>k1(s,r,u,i,o),getRunData:()=>({outputs:[{dims:u,dataType:o}],dispatchGroup:{x:Math.ceil(a/64/4)}})}},Fb=r=>{r.compute(R1(r.inputs))}});var Wb,Vb=D(()=>{"use strict";Tm();Sm();ng();hg();bg();Zs();Cg();Rg();Lg();Fg();Vg();jg();Yg();Zg();eb();nb();yb();vb();ji();$b();_b();Cb();kb();Mb();zb();vo();Ks();Gb();Wb=new Map([["Abs",[Im]],["Acos",[_m]],["Acosh",[Am]],["Add",[og]],["ArgMax",[wm,js]],["ArgMin",[vm,js]],["Asin",[Om]],["Asinh",[Em]],["Atan",[Cm]],["Atanh",[Pm]],["AveragePool",[lb,ub]],["BiasAdd",[$m]],["BiasSplitGelu",[rg]],["Cast",[km,Dm]],["Ceil",[Bm]],["ClipV10",[qs]],["Clip",[Rm]],["Concat",[mg,gg]],["Conv",[eu,Qs]],["ConvTranspose",[Eg,Og]],["Cos",[Mm]],["Cosh",[Lm]],["Div",[ig]],["Einsum",[Dg,kg]],["Elu",[Nm,Ki]],["Equal",[ag]],["Erf",[zm]],["Exp",[Fm]],["Expand",[Mg]],["Floor",[Gm]],["FusedConv",[eu,Qs]],["Gather",[zg,Ng]],["GatherElements",[Wg,Gg]],["Gelu",[Wm]],["Gemm",[Ug,Hg]],["GlobalAveragePool",[fb,db]],["GlobalMaxPool",[bb,gb]],["Greater",[cg]],["GreaterOrEqual",[fg]],["InstanceNormalization",[Kg,qg]],["LayerNormalization",[Jg,Xg]],["LeakyRelu",[Vm,Ki]],["Less",[dg]],["LessOrEqual",[pg]],["Log",[tg]],["MatMul",[Qg]],["MaxPool",[hb,mb]],["Mul",[sg]],["Neg",[Hm]],["Not",[Um]],["Pad",[tb,rb]],["Pow",[ug]],["Range",[xb]],["Reciprocal",[jm]],["ReduceMin",[pm,Jt]],["ReduceMean",[um,Jt]],["ReduceMax",[fm,Jt]],["ReduceSum",[mm,Jt]],["ReduceProd",[hm,Jt]],["ReduceL1",[lm,Jt]],["ReduceL2",[cm,Jt]],["ReduceLogSum",[bm,Jt]],["ReduceLogSumExp",[dm,Jt]],["ReduceSumSquare",[gm,Jt]],["Relu",[qm]],["Resize",[wb,Tb]],["Sigmoid",[Km]],["Sin",[Ym]],["Sinh",[Xm]],["Slice",[Ob,Eb]],["SkipLayerNormalization",[Sb,Ib]],["Split",[Rb,Bb]],["Sqrt",[Jm]],["Softmax",[Pb,Db]],["Sub",[lg]],["Tan",[Zm]],["Tanh",[Qm]],["ThresholdedRelu",[eg,Ki]],["Tile",[Nb]],["Transpose",[Yh,Xh]],["Where",[Fb]]])});var aa,Ub=D(()=>{"use strict";dt();Lr();Fe();aa=class{constructor(e){this.backend=e;this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,n){this.repo.set(e,n)}run(e,n,t,o,i,u,a){let s=this.backend.device,l=this.backend.getComputePassEncoder();l.setPipeline(e.computePipeline);let c=[];for(let h of o)c.push({binding:c.length,resource:{buffer:h.buffer}});for(let h of i)c.push({binding:c.length,resource:{buffer:h.buffer}});a&&c.push({binding:c.length,resource:a});let p=s.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:c,label:e.programInfo.name});if(l.setBindGroup(0,p),l.dispatchWorkgroups(...u),this.backend.pendingDispatchNumber++,this.backend.isQueryEnabled()){typeof this.backend.queryData>"u"&&(this.backend.queryData=this.backend.gpuDataManager.create(this.backend.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE));let h=this.backend.gpuDataManager.create(this.backend.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.backend.endComputePass(),this.backend.getCommandEncoder().resolveQuerySet(this.backend.querySet,0,2,this.backend.queryData.buffer,0),this.backend.getCommandEncoder().copyBufferToBuffer(this.backend.queryData.buffer,0,h.buffer,0,this.backend.querySetCount*8),this.backend.flush();let g=this.backend.currentKernelId,x=this.backend.kernels.get(g),b=`[${x[0]}] ${x[1]}`;h.buffer.mapAsync(GPUMapMode.READ).then(()=>{let w=new BigUint64Array(h.buffer.getMappedRange()),S=w[0],O=w[1];h.buffer.unmap(),typeof this.backend.queryTimeBase>"u"&&(this.backend.queryTimeBase=S);let E=Number(S-this.backend.queryTimeBase),B=Number(O-this.backend.queryTimeBase);if(!Number.isSafeInteger(E)||!Number.isSafeInteger(B))throw new RangeError("incorrect timestamp range");this.backend.gpuDataManager.release(h.id);let z="";n.forEach((W,Y)=>{z+=`input[${Y}]: [${W.dims}] | ${bo(W.dataType)}, `});let M="";t.forEach((W,Y)=>{M+=`output[${Y}]: [${W.dims}] | ${bo(W.dataType)}, `}),console.log(`[profiling] kernel "${g}|${b}" ${z}${M}execution time: ${B-E} ns`)})}this.backend.pendingDispatchNumber>=16&&this.backend.flush()}dispose(){}build(e,n){let t=this.backend.device,o=[];t.features.has("shader-f16")&&o.push("enable f16;");let i=jh(n),u=e.getShaderSource(i),a=`${o.join(`
`)}
${i.additionalImplementations}
${u}`,s=t.createShaderModule({code:a,label:e.name});Je("verbose",()=>`[WebGPU] shader code: ${a}`);let l=t.createComputePipeline({compute:{module:s,entryPoint:"main"},layout:"auto",label:e.name});return{programInfo:e,computePipeline:l}}normalizeDispatchGroupSize(e){let n=typeof e=="number"?e:e.x,t=typeof e=="number"?1:e.y||1,o=typeof e=="number"?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(n<=i&&t<=i&&o<=i)return[n,t,o];let u=n*t*o,a=Math.ceil(Math.sqrt(u));if(a>i){if(a=Math.ceil(Math.cbrt(u)),a>i)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[a,a,a]}else return[a,a,1]}}});var B1,M1,sa,Hb=D(()=>{"use strict";Lr();zh();Vh();Vb();Ub();B1=(r,e)=>{if(e.length!==r.length)throw new Error(`inputDependencies length ${e.length} is not equal to inputTensors length ${r.length}.`);let n=[];for(let t=0;t<r.length;++t){let o=r[t].dataType;switch(e[t]){case"none":{n.push("");break}case"type":{n.push(`${o}`);break}case"rank":{let i=r[t].dims.length;n.push(`${o};${i}`);break}case"dims":{let i=r[t].dims.join(",");n.push(`${o};${i}`);break}default:throw new Error(`unsupported input dependency: ${e[t]}`)}}return n.join("|")},M1=(r,e)=>{let n=r.name;return r.shaderCache?.hint&&(n+="["+r.shaderCache.hint+"]"),n+=`:${B1(e,r.shaderCache?.inputDependencies??new Array(e.length).fill("dims"))}`,n},sa=class{constructor(){this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.pendingDispatchNumber=0;this.querySetCount=2;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e){if(!navigator.gpu)throw new Error("WebGpuBackend: WebGPU is not available.");let n=await navigator.gpu.requestAdapter();if(!n)throw new Error("WebGpuBackend: Failed to get GPU adapter.");this.env=e;let t=[],o={requiredLimits:{maxComputeWorkgroupStorageSize:n.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:n.limits.maxStorageBufferBindingSize,maxBufferSize:n.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:n.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:n.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:n.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:n.limits.maxComputeWorkgroupSizeZ},requiredFeatures:t};n.features.has("timestamp-query")&&t.push("timestamp-query"),n.features.has("shader-f16")&&t.push("shader-f16"),this.device=await n.requestDevice(o),this.gpuDataManager=Wh(this),this.programManager=new aa(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Lh(e.logLevel,!!e.debug),this.device.onuncapturederror=i=>{i.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${i.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device})}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e={};this.isQueryEnabled()&&(typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),e.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1}),this.computePassEncoder=this.getCommandEncoder().beginComputePass(e)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){this.commandEncoder&&(this.endComputePass(),this.device.queue.submit([this.getCommandEncoder().finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0)}isQueryEnabled(){return!!(this.device.features.has("timestamp-query")&&this.env.webgpu.profilingMode==="default")}run(e,n,t,o,i){let u=[];for(let S=0;S<n.length;++S){let O=this.gpuDataManager.get(n[S].data);if(!O)throw new Error(`no GPU data for input: ${n[S].data}`);u[S]=O}let a=M1(e,n),s=this.programManager.getArtifact(a),{outputs:l,dispatchGroup:c,programUniforms:p}=e.getRunData(n),h=t.length===0?l.map((S,O)=>O):t;if(h.length!==l.length)throw new Error(`Output size ${h.length} must be equal to ${l.length}.`);let g=[],x=[];for(let S=0;S<l.length;++S){if(!Number.isInteger(h[S])||h[S]<-3||h[S]>=l.length)throw new Error(`Invalid output index: ${h[S]}`);if(h[S]===-3)continue;let O=h[S]===-1,E=h[S]===-2,B=O||E?i(l[S].dataType,l[S].dims):o(h[S],l[S].dataType,l[S].dims),z=this.gpuDataManager.get(B.data);if(!z)throw new Error(`no GPU data for output: ${B.data}`);if(O&&this.temporaryData.push(z),E){let M=this.kernelPersistentData.get(this.currentKernelId);M||(M=[],this.kernelPersistentData.set(this.currentKernelId,M)),M.push(z)}g.push(B),x.push(z)}let b;if(p){let S=0,O=0,E=[],B=1;p.forEach(W=>{let Y=typeof W.data=="number"?[W.data]:W.data,Q;switch(Y.length){case 1:Q=4;break;case 2:Q=8;break;case 3:Q=16;break;case 4:Q=16;break;case 5:Q=16;break;case 6:Q=16;break;default:throw new Error(`unsupported data length: ${Y.length}`)}(O===5||O===6)&&(Q=16),Q>B&&(B=Q),S=Math.ceil(S/Q)*Q,O=Y.length,E.push(S),S+=Y.length*4}),S=Math.ceil(S/B)*B;let z=new ArrayBuffer(S);p.forEach((W,Y)=>{let Q=E[Y],he=typeof W.data=="number"?[W.data]:W.data;W.type==="int32"?new Int32Array(z,Q,he.length).set(he):W.type==="uint32"?new Uint32Array(z,Q,he.length).set(he):new Float32Array(z,Q,he.length).set(he)});let M=this.gpuDataManager.create(S,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(M.buffer,0,z,0,S),this.gpuDataManager.release(M.id),b={offset:0,size:S,buffer:M.buffer}}let w=this.programManager.normalizeDispatchGroupSize(c);return s||(s=this.programManager.build(e,w),this.programManager.setArtifact(a,s)),Je("info",()=>`[ProgramManager] run "${e.name}" (key=${a}) with ${w[0]}x${w[1]}x${w[2]}`),this.programManager.run(s,n,g,u,x,w,b),g}upload(e,n){this.gpuDataManager.upload(e,n)}memcpy(e,n){this.gpuDataManager.memcpy(e,n)}async download(e,n){await this.gpuDataManager.download(e,n)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,n,t,o){let i=Wb.get(e);if(!i)throw new Error(`kernel not implemented: ${e}`);this.kernels.set(n,[e,o,i[0],[i[1],t]])}releaseKernel(e){let n=this.kernelPersistentData.get(e);if(n){for(let t of n)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,n,t){let o=this.kernels.get(e);if(!o)throw new Error(`kernel not created: ${e}`);let[i,u,a,s]=o;if(this.currentKernelId!==null)throw new Error(`kernel "[${i}] ${u}" is not allowed to be called recursively`);this.currentKernelId=e,s[0]&&(s[1]=s[0](s[1]),s[0]=void 0),Je("info",()=>`[WebGPU] Start to run kernel "[${i}] ${u}"...`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),a(n,s[1]),0}catch(c){return t.push(Promise.resolve(`[WebGPU] Kernel "[${i}] ${u}" failed. ${c}`)),1}finally{l&&t.push(this.device.popErrorScope().then(c=>c?`GPU validation error for kernel "[${i}] ${u}": ${c.message}`:null));for(let c of this.temporaryData)this.gpuDataManager.release(c.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,n,t,o){let i=this.sessionExternalDataMapping.get(e);i||(i=new Map,this.sessionExternalDataMapping.set(e,i));let u=i.get(n),a=this.gpuDataManager.registerExternalBuffer(t,o,u?.[1]);return i.set(n,[a,t]),a}unregisterBuffers(e){let n=this.sessionExternalDataMapping.get(e);n&&(n.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[1])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let n=this.gpuDataManager.get(e);if(!n)throw new Error(`no GPU data for buffer: ${e}`);return n.buffer}createDownloader(e,n,t){return async()=>{let o=await zs(this,e,n);return Nh(o.buffer,t)}}}});var jb={};Cr(jb,{init:()=>L1});var Io,iu,L1,qb=D(()=>{"use strict";dt();Hb();Lr();Pe();Io=class r{constructor(e,n,t,o){this.module=e;this.dataType=n;this.data=t;this.dims=o}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let e=G.size(this.dims);return e===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let e=G.size(this.dims);return e===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let e=G.size(this.dims);return e===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}reshape(e){if(G.size(e)!==G.size(this.dims))throw new Error("Invalid new shape");return new r(this.module,this.dataType,this.data,e)}},iu=class{constructor(e,n,t){this.module=e;this.backend=n;this.customDataOffset=0;this.customDataSize=0;let o=e.HEAPU32,i=t>>2;this.opKernelContext=o[i++];let u=o[i++];this.outputCount=o[i++],this.customDataOffset=o[i++],this.customDataSize=o[i++];let a=[];for(let s=0;s<u;s++){let l=o[i++],c=o[i++],p=o[i++],h=[];for(let g=0;g<p;g++)h.push(o[i++]);a.push(new Io(e,l,c,h))}this.inputs=a}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,n){let t=n?.inputs?.map(a=>typeof a=="number"?this.inputs[a]:a)??this.inputs,o=n?.outputs??[],i=(a,s,l)=>new Io(this.module,s,this.output(a,l),l),u=(a,s)=>{let l=yo(a);if(!l)throw new Error(`Unsupported data type: ${a}`);let c=l*G.size(s);return new Io(this.module,a,this.backend.gpuDataManager.create(c).id,s)};return this.backend.run(e,t,o,i,u)}output(e,n){let t=this.module.stackSave();try{let o=this.module.stackAlloc((1+n.length)*4),i=o>>2;this.module.HEAPU32[i++]=n.length;for(let u=0;u<n.length;u++)this.module.HEAPU32[i++]=n[u];return this.module._JsepOutput(this.opKernelContext,e,o)}catch(o){throw new Error(`Failed to generate kernel's output[${e}] with dims [${n}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${o}`)}finally{this.module.stackRestore(t)}}},L1=async(r,e)=>{let n=r.jsepInit;if(n&&navigator.gpu){if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using WebGPU EP");let t=new sa;await t.initialize(e),n(t,o=>t.alloc(o),o=>t.free(o),(o,i,u,a=!1)=>{if(a)Je("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${o}, dst=${i}, size=${u}`),t.memcpy(o,i);else{Je("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${o}, gpuDataId=${i}, size=${u}`);let s=r.HEAPU8.subarray(o,o+u);t.upload(i,s)}},async(o,i,u)=>{Je("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${o}, dataOffset=${i}, size=${u}`),await t.download(o,()=>r.HEAPU8.subarray(i,i+u))},(o,i,u)=>t.createKernel(o,i,u,e.debug||e.webgpu.profilingMode==="default"?r.UTF8ToString(r._JsepGetNodeName(i)):`${i}`),o=>t.releaseKernel(o),(o,i,u,a)=>{Je("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${u}, kernel=${o}, contextDataOffset=${i}`);let s=new iu(r,t,i);return t.computeKernel(o,s,a)})}}});var Yb,N1,z1,Xb,_o,Jb,au,su,Zb,Qb,Kb,ey,ty,ry,ny=D(()=>{"use strict";Dh();Rh();dt();Dn();zi();Yb=!1,N1=r=>{let e=ot(),n=e.stackSave();try{let t=e.stackAlloc(8);return e._OrtGetInputOutputCount(r,t,t+4)!==0&&Ke("Can't get session input/output count."),[e.HEAP32[t/4],e.HEAP32[t/4+1]]}finally{e.stackRestore(n)}},z1=(r,e)=>{ot()._OrtInit(r,e)!==0&&Ke("Can't initialize onnxruntime.")},Xb=async r=>{z1(r.wasm.numThreads,xo(r.logLevel));{let e=(qb(),wr(jb)).init;await e(ot(),r)}Yb=!0},_o=new Map,Jb=()=>Yb,au=r=>{let e=ot(),n=e._malloc(r.byteLength);if(n===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${r.byteLength}.`);return e.HEAPU8.set(r,n),[n,r.byteLength]},su=(r,e)=>{let n=ot(),t=0,o=0,i=0,u=[],a=[],s=[];try{[o,u]=kh(e),t=n._OrtCreateSession(r[0],r[1],o),t===0&&Ke("Can't create a session.");let[l,c]=N1(t),p=[],h=[],g=[];for(let b=0;b<l;b++){let w=n._OrtGetInputName(t,b);w===0&&Ke("Can't get an input name."),a.push(w),p.push(n.UTF8ToString(w))}for(let b=0;b<c;b++){let w=n._OrtGetOutputName(t,b);w===0&&Ke("Can't get an output name."),s.push(w);let S=n.UTF8ToString(w);h.push(S);{let O=typeof e?.preferredOutputLocation=="string"?e.preferredOutputLocation:e?.preferredOutputLocation?.[S]??"cpu";if(O!=="cpu"&&O!=="cpu-pinned"&&O!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${O}.`);g.push(O)}}let x=null;return g.some(b=>b==="gpu-buffer")&&(i=n._OrtCreateBinding(t),i===0&&Ke("Can't create IO binding."),x={handle:i,outputPreferredLocations:g,outputPreferredLocationsEncoded:g.map(b=>Ls(b))}),_o.set(t,[t,a,s,x]),[t,p,h]}catch(l){throw a.forEach(c=>n._OrtFree(c)),s.forEach(c=>n._OrtFree(c)),i!==0&&n._OrtReleaseBinding(i),t!==0&&n._OrtReleaseSession(t),l}finally{n._free(r[0]),o!==0&&n._OrtReleaseSessionOptions(o),u.forEach(l=>n._free(l))}},Zb=(r,e)=>{let n=au(r);return su(n,e)},Qb=r=>{let e=ot(),n=_o.get(r);if(!n)throw new Error(`cannot release session. invalid session id: ${r}`);let[t,o,i,u]=n;u&&e._OrtReleaseBinding(u.handle),e.jsepUnregisterBuffers?.(r),o.forEach(a=>e._OrtFree(a)),i.forEach(a=>e._OrtFree(a)),e._OrtReleaseSession(t),_o.delete(r)},Kb=(r,e,n,t,o)=>{if(!r){e.push(0);return}let i=ot(),u=r[0],a=r[1],s=r[3],l,c;if(u==="string"&&s==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(s==="gpu-buffer"){let g=r[2].gpuBuffer,x=yo(Ms(u));c=a.reduce((b,w)=>b*w,1)*x,l=i.jsepRegisterBuffer(t,o,g,c)}else{let g=r[2];if(Array.isArray(g)){c=4*g.length,l=i._malloc(c),n.push(l);let x=l/4;for(let b=0;b<g.length;b++){if(typeof g[b]!="string")throw new TypeError(`tensor data at index ${b} is not a string`);i.HEAPU32[x++]=ct(g[b],n)}}else c=g.byteLength,l=i._malloc(c),n.push(l),i.HEAPU8.set(new Uint8Array(g.buffer,g.byteOffset,c),l)}let p=i.stackSave(),h=i.stackAlloc(4*a.length);try{let g=h/4;a.forEach(b=>i.HEAP32[g++]=b);let x=i._OrtCreateTensor(Ms(u),l,c,h,a.length,Ls(s));x===0&&Ke(`Can't create tensor for input/output. session=${t}, index=${o}.`),e.push(x)}finally{i.stackRestore(p)}},ey=async(r,e,n,t,o,i)=>{let u=ot(),a=_o.get(r);if(!a)throw new Error(`cannot run inference. invalid session id: ${r}`);let[s,l,c,p]=a,h=e.length,g=t.length,x=0,b=[],w=[],S=[],O=[],E=u.stackSave(),B=u.stackAlloc(h*4),z=u.stackAlloc(h*4),M=u.stackAlloc(g*4),W=u.stackAlloc(g*4);try{[x,b]=Ph(i);for(let ge=0;ge<h;ge++)Kb(n[ge],w,O,r,e[ge]);for(let ge=0;ge<g;ge++)Kb(o[ge],S,O,r,h+t[ge]);let Y=B/4,Q=z/4,he=M/4,R=W/4;for(let ge=0;ge<h;ge++)u.HEAPU32[Y++]=w[ge],u.HEAPU32[Q++]=l[e[ge]];for(let ge=0;ge<g;ge++)u.HEAPU32[he++]=S[ge],u.HEAPU32[R++]=c[t[ge]];if(p){let{handle:ge,outputPreferredLocations:Ne,outputPreferredLocationsEncoded:Z}=p;if(l.length!==h)throw new Error(`input count from feeds (${h}) is expected to be always equal to model's input count (${l.length}).`);for(let Ve=0;Ve<h;Ve++){let Qe=e[Ve];await u._OrtBindInput(ge,l[Qe],w[Ve])!==0&&Ke(`Can't bind input[${Ve}] for session=${r}.`)}for(let Ve=0;Ve<g;Ve++){let Qe=t[Ve];o[Ve]?.[3]?u._OrtBindOutput(ge,c[Qe],S[Ve],0)!==0&&Ke(`Can't bind pre-allocated output[${Ve}] for session=${r}.`):u._OrtBindOutput(ge,c[Qe],0,Z[Qe])!==0&&Ke(`Can't bind output[${Ve}] to ${Ne[Ve]} for session=${r}.`)}}let ee;p?ee=await u._OrtRunWithBinding(s,p.handle,g,M,x):ee=await u._OrtRun(s,z,B,h,W,g,M,x),ee!==0&&Ke("failed to call OrtRun().");let We=[];for(let ge=0;ge<g;ge++){let Ne=u.HEAPU32[M/4+ge];if(Ne===S[ge]){We.push(o[ge]);continue}let Z=u.stackSave(),Ve=u.stackAlloc(4*4),Qe=!1,Ye,Ze=0;try{u._OrtGetTensorData(Ne,Ve,Ve+4,Ve+8,Ve+12)!==0&&Ke(`Can't access output tensor data on index ${ge}.`);let Ct=Ve/4,Pt=u.HEAPU32[Ct++];Ze=u.HEAPU32[Ct++];let j=u.HEAPU32[Ct++],Se=u.HEAPU32[Ct++],Te=[];for(let et=0;et<Se;et++)Te.push(u.HEAPU32[j/4+et]);u._OrtFree(j);let mt=Te.reduce((et,ut)=>et*ut,1);Ye=bo(Pt);let vt=p?.outputPreferredLocations[t[ge]];if(Ye==="string"){if(vt==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let et=[],ut=Ze/4;for(let Zt=0;Zt<mt;Zt++){let St=u.HEAPU32[ut++],Dt=Zt===mt-1?void 0:u.HEAPU32[ut]-St;et.push(u.UTF8ToString(St,Dt))}We.push([Ye,Te,et,"cpu"])}else if(vt==="gpu-buffer"&&mt>0){let et=u.jsepGetBuffer(Ze),ut=yo(Pt);if(ut===void 0||!Gi(Ye))throw new Error(`Unsupported data type: ${Ye}`);Qe=!0,We.push([Ye,Te,{gpuBuffer:et,download:u.jsepCreateDownloader(et,mt*ut,Ye),dispose:()=>{u._OrtReleaseTensor(Ne)}},"gpu-buffer"])}else{let et=Fi(Ye),ut=new et(mt);new Uint8Array(ut.buffer,ut.byteOffset,ut.byteLength).set(u.HEAPU8.subarray(Ze,Ze+ut.byteLength)),We.push([Ye,Te,ut,"cpu"])}}finally{u.stackRestore(Z),Ye==="string"&&Ze&&u._free(Ze),Qe||u._OrtReleaseTensor(Ne)}}return p&&u._OrtClearBoundOutputs(p.handle),We}finally{u.stackRestore(E),w.forEach(Y=>u._OrtReleaseTensor(Y)),S.forEach(Y=>u._OrtReleaseTensor(Y)),O.forEach(Y=>u._free(Y)),x!==0&&u._OrtReleaseRunOptions(x),b.forEach(Y=>u._free(Y))}},ty=r=>{let e=ot(),n=_o.get(r);if(!n)throw new Error("invalid session id");let t=n[0],o=e._OrtEndProfiling(t);o===0&&Ke("Can't get an profile file name."),e._OrtFree(o)},ry=r=>{let e=[];for(let n of r){let t=n[2];!Array.isArray(t)&&"buffer"in t&&e.push(t.buffer)}return e}});var oy=Ue((YR,G1)=>{G1.exports='/*!\n * ONNX Runtime Web v1.17.0\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n"use strict";(()=>{var dn=Object.defineProperty;var Su=Object.getOwnPropertyDescriptor;var Cu=Object.getOwnPropertyNames;var Au=Object.prototype.hasOwnProperty;var j=(e,t)=>()=>(e&&(t=e(e=0)),t);var ar=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),_r=(e,t)=>{for(var r in t)dn(e,r,{get:t[r],enumerable:!0})},Iu=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of Cu(t))!Au.call(e,n)&&n!==r&&dn(e,n,{get:()=>t[n],enumerable:!(o=Su(t,n))||o.enumerable});return e};var zt=e=>Iu(dn({},"__esModule",{value:!0}),e);var cn={};_r(cn,{readFile:()=>Eu});var Eu,pn=j(()=>{Eu=void 0});var fn={};_r(fn,{join:()=>Tu});var Tu,mn=j(()=>{Tu=void 0});var co=ar((lo,hn)=>{"use strict";var uo=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){var r=t,o,n;r.ready=new Promise((l,p)=>{o=l,n=p}),r.jsepInit=(l,p,h,x,I,V,N,J)=>{r.ab=l,r.Ra=p,r.Ta=h,r.La=x,r.Sa=I,r.xa=V,r.Ua=N,r.Va=J,p=(Y,ee,Z)=>(...pe)=>{let fe=je,T=ee?.();pe=Y(...pe);let re=ee?.();return T!==re&&(Y=re,Z(T),ee=Z=null),je!=fe?wr():pe},h=Y=>async(...ee)=>{try{if(r.Fa)throw Error("Session already started");let Z=r.Fa={Wa:ee[0],errors:[]},pe=await Y(...ee);if(r.Fa!==Z)throw Error("Session mismatch");l.flush();let fe=Z.errors;if(0<fe.length){let T=await Promise.all(fe);if(T=T.filter(re=>re),0<T.length)throw Error(T.join(`\n`))}return pe}finally{r.Fa=null}},r._OrtRun=h(p(r._OrtRun,()=>r._OrtRun,Y=>r._OrtRun=Y)),r._OrtRunWithBinding=h(p(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,Y=>r._OrtRunWithBinding=Y)),r._OrtBindInput=p(r._OrtBindInput,()=>r._OrtBindInput,Y=>r._OrtBindInput=Y),r.jsepRegisterBuffer=(Y,ee,Z,pe)=>l.registerBuffer(Y,ee,Z,pe),r.jsepUnregisterBuffers=Y=>{l.unregisterBuffers(Y)},r.jsepGetBuffer=Y=>l.getBuffer(Y),r.jsepCreateDownloader=(Y,ee,Z)=>l.createDownloader(Y,ee,Z)};var s=Object.assign({},r),u="./this.program",d=(l,p)=>{throw p},a=typeof window=="object",m=typeof importScripts=="function",g=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",S="",b,w,v;if(g){var y=(pn(),zt(cn)),C=(mn(),zt(fn));S=m?C.dirname(S)+"/":__dirname+"/",b=(l,p)=>(l=l.startsWith("file://")?new URL(l):C.normalize(l),y.readFileSync(l,p?void 0:"utf8")),v=l=>(l=b(l,!0),l.buffer||(l=new Uint8Array(l)),l),w=(l,p,h,x=!0)=>{l=l.startsWith("file://")?new URL(l):C.normalize(l),y.readFile(l,x?void 0:"utf8",(I,V)=>{I?h(I):p(x?V.buffer:V)})},!r.thisProgram&&1<process.argv.length&&(u=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),d=(l,p)=>{throw process.exitCode=l,p},r.inspect=()=>"[Emscripten Module object]"}else(a||m)&&(m?S=self.location.href:typeof document<"u"&&document.currentScript&&(S=document.currentScript.src),e&&(S=e),S.indexOf("blob:")!==0?S=S.substr(0,S.replace(/[?#].*/,"").lastIndexOf("/")+1):S="",b=l=>{var p=new XMLHttpRequest;return p.open("GET",l,!1),p.send(null),p.responseText},m&&(v=l=>{var p=new XMLHttpRequest;return p.open("GET",l,!1),p.responseType="arraybuffer",p.send(null),new Uint8Array(p.response)}),w=(l,p,h)=>{var x=new XMLHttpRequest;x.open("GET",l,!0),x.responseType="arraybuffer",x.onload=()=>{x.status==200||x.status==0&&x.response?p(x.response):h()},x.onerror=h,x.send(null)});var A=r.print||console.log.bind(console),R=r.printErr||console.error.bind(console);Object.assign(r,s),s=null,r.thisProgram&&(u=r.thisProgram),r.quit&&(d=r.quit);var W;r.wasmBinary&&(W=r.wasmBinary);var M=r.noExitRuntime||!0;typeof WebAssembly!="object"&&U("no native wasm support detected");var D,_,z=!1,F,q,le,B,K,xe,ae;function we(){var l=D.buffer;r.HEAP8=q=new Int8Array(l),r.HEAP16=new Int16Array(l),r.HEAP32=B=new Int32Array(l),r.HEAPU8=le=new Uint8Array(l),r.HEAPU16=new Uint16Array(l),r.HEAPU32=K=new Uint32Array(l),r.HEAPF32=xe=new Float32Array(l),r.HEAPF64=ae=new Float64Array(l)}var H,Se=[],Te=[],Ae=[];function Ee(){var l=r.preRun.shift();Se.unshift(l)}var Ne=0,Le=null,Fe=null;function U(l){throw r.onAbort&&r.onAbort(l),l="Aborted("+l+")",R(l),z=!0,F=1,l=new WebAssembly.RuntimeError(l+". Build with -sASSERTIONS for more info."),n(l),l}function ce(l){return l.startsWith("data:application/octet-stream;base64,")}var de;if(de="ort-wasm-simd.wasm",!ce(de)){var We=de;de=r.locateFile?r.locateFile(We,S):S+We}function Ge(l){if(l==de&&W)return new Uint8Array(W);if(v)return v(l);throw"both async and sync fetching of the wasm failed"}function Oe(l){if(!W&&(a||m)){if(typeof fetch=="function"&&!l.startsWith("file://"))return fetch(l,{credentials:"same-origin"}).then(p=>{if(!p.ok)throw"failed to load wasm binary file at \'"+l+"\'";return p.arrayBuffer()}).catch(()=>Ge(l));if(w)return new Promise((p,h)=>{w(l,x=>p(new Uint8Array(x)),h)})}return Promise.resolve().then(()=>Ge(l))}function Me(l,p,h){return Oe(l).then(x=>WebAssembly.instantiate(x,p)).then(x=>x).then(h,x=>{R("failed to asynchronously prepare wasm: "+x),U(x)})}function Je(l,p){var h=de;return W||typeof WebAssembly.instantiateStreaming!="function"||ce(h)||h.startsWith("file://")||g||typeof fetch!="function"?Me(h,l,p):fetch(h,{credentials:"same-origin"}).then(x=>WebAssembly.instantiateStreaming(x,l).then(p,function(I){return R("wasm streaming compile failed: "+I),R("falling back to ArrayBuffer instantiation"),Me(h,l,p)}))}var Ue,He={915968:l=>{r.xa("Abs",l,void 0)},916019:l=>{r.xa("Neg",l,void 0)},916070:l=>{r.xa("Floor",l,void 0)},916123:l=>{r.xa("Ceil",l,void 0)},916175:l=>{r.xa("Reciprocal",l,void 0)},916233:l=>{r.xa("Sqrt",l,void 0)},916285:l=>{r.xa("Exp",l,void 0)},916336:l=>{r.xa("Erf",l,void 0)},916387:l=>{r.xa("Sigmoid",l,void 0)},916442:l=>{r.xa("Log",l,void 0)},916493:l=>{r.xa("Sin",l,void 0)},916544:l=>{r.xa("Cos",l,void 0)},916595:l=>{r.xa("Tan",l,void 0)},916646:l=>{r.xa("Asin",l,void 0)},916698:l=>{r.xa("Acos",l,void 0)},916750:l=>{r.xa("Atan",l,void 0)},916802:l=>{r.xa("Sinh",l,void 0)},916854:l=>{r.xa("Cosh",l,void 0)},916906:l=>{r.xa("Asinh",l,void 0)},916959:l=>{r.xa("Acosh",l,void 0)},917012:l=>{r.xa("Atanh",l,void 0)},917065:l=>{r.xa("Tanh",l,void 0)},917117:l=>{r.xa("Not",l,void 0)},917168:(l,p,h)=>{r.xa("ClipV10",l,{min:p,max:h})},917240:l=>{r.xa("Clip",l,void 0)},917292:(l,p)=>{r.xa("Elu",l,{alpha:p})},917350:l=>{r.xa("Relu",l,void 0)},917402:(l,p)=>{r.xa("LeakyRelu",l,{alpha:p})},917466:(l,p)=>{r.xa("ThresholdedRelu",l,{alpha:p})},917536:(l,p)=>{r.xa("Cast",l,{to:p})},917594:l=>{r.xa("Add",l,void 0)},917645:l=>{r.xa("Sub",l,void 0)},917696:l=>{r.xa("Mul",l,void 0)},917747:l=>{r.xa("Div",l,void 0)},917798:l=>{r.xa("Pow",l,void 0)},917849:l=>{r.xa("Equal",l,void 0)},917902:l=>{r.xa("Greater",l,void 0)},917957:l=>{r.xa("GreaterOrEqual",l,void 0)},918019:l=>{r.xa("Less",l,void 0)},918071:l=>{r.xa("LessOrEqual",l,void 0)},918130:(l,p,h,x,I)=>{r.xa("ReduceMean",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(B.subarray(I>>>0,I+x>>>0)):[]})},918294:(l,p,h,x,I)=>{r.xa("ReduceMax",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(B.subarray(I>>>0,I+x>>>0)):[]})},918457:(l,p,h,x,I)=>{r.xa("ReduceMin",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(B.subarray(I>>>0,I+x>>>0)):[]})},918620:(l,p,h,x,I)=>{r.xa("ReduceProd",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(B.subarray(I>>>0,I+x>>>0)):[]})},918784:(l,p,h,x,I)=>{r.xa("ReduceSum",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(B.subarray(I>>>0,I+x>>>0)):[]})},918947:(l,p,h,x,I)=>{r.xa("ReduceL1",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(B.subarray(I>>>0,I+x>>>0)):[]})},919109:(l,p,h,x,I)=>{r.xa("ReduceL2",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(B.subarray(I>>>0,I+x>>>0)):[]})},919271:(l,p,h,x,I)=>{r.xa("ReduceLogSum",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(B.subarray(I>>>0,I+x>>>0)):[]})},919437:(l,p,h,x,I)=>{r.xa("ReduceSumSquare",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(B.subarray(I>>>0,I+x>>>0)):[]})},919606:(l,p,h,x,I)=>{r.xa("ReduceLogSumExp",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:x?Array.from(B.subarray(I>>>0,I+x>>>0)):[]})},919775:l=>{r.xa("Where",l,void 0)},919828:(l,p,h)=>{r.xa("Transpose",l,{perm:p?Array.from(B.subarray(h>>>0,h+p>>>0)):[]})},919941:(l,p,h,x,I,V,N,J,Y,ee,Z,pe,fe,T,re)=>{r.xa("ConvTranspose",l,{format:Y?"NHWC":"NCHW",autoPad:p,dilations:[h],group:x,kernel_shape:[I],pads:[V,N],strides:[J],wIsConst:()=>!!q[ee>>>0],outputPadding:Z?Array.from(B.subarray(pe>>>0,pe+Z>>>0)):[],outputShape:fe?Array.from(B.subarray(T>>>0,T+fe>>>0)):[],activation:ze(re)})},920355:(l,p,h,x,I,V,N,J,Y,ee,Z,pe,fe,T)=>{r.xa("ConvTranspose",l,{format:J?"NHWC":"NCHW",autoPad:p,dilations:Array.from(B.subarray(h>>>0,h+2>>>0)),group:x,kernelShape:Array.from(B.subarray(I>>>0,I+2>>>0)),pads:Array.from(B.subarray(V>>>0,V+4>>>0)),strides:Array.from(B.subarray(N>>>0,N+2>>>0)),wIsConst:()=>!!q[Y>>>0],outputPadding:0<ee?Array.from(B.subarray(Z>>>0,Z+ee>>>0)):[],outputShape:0<pe?Array.from(B.subarray(fe>>>0,fe+pe>>>0)):[],activation:ze(T)})},920912:(l,p,h,x,I,V,N,J,Y,ee,Z,pe,fe,T,re)=>{r.xa("ConvTranspose",l,{format:Y?"NHWC":"NCHW",autoPad:p,dilations:[h],group:x,kernel_shape:[I],pads:[V,N],strides:[J],wIsConst:()=>!!q[ee>>>0],outputPadding:Z?Array.from(B.subarray(pe>>>0,pe+Z>>>0)):[],outputShape:fe?Array.from(B.subarray(T>>>0,T+fe>>>0)):[],activation:ze(re)})},921326:(l,p,h,x,I,V,N,J,Y,ee,Z,pe,fe,T)=>{r.xa("ConvTranspose",l,{format:J?"NHWC":"NCHW",autoPad:p,dilations:Array.from(B.subarray(h>>>0,h+2>>>0)),group:x,kernelShape:Array.from(B.subarray(I>>>0,I+2>>>0)),pads:Array.from(B.subarray(V>>>0,V+4>>>0)),strides:Array.from(B.subarray(N>>>0,N+2>>>0)),wIsConst:()=>!!q[Y>>>0],outputPadding:0<ee?Array.from(B.subarray(Z>>>0,Z+ee>>>0)):[],outputShape:0<pe?Array.from(B.subarray(fe>>>0,fe+pe>>>0)):[],activation:ze(T)})},921883:(l,p)=>{r.xa("GlobalAveragePool",l,{format:p?"NHWC":"NCHW"})},921974:(l,p,h,x,I,V,N,J,Y,ee,Z,pe,fe,T,re,me)=>{r.xa("AveragePool",l,{format:me?"NHWC":"NCHW",auto_pad:p,ceil_mode:h,count_include_pad:x,storage_order:I,dilations:[V,N],kernel_shape:[J,Y],pads:[ee,Z,pe,fe],strides:[T,re]})},922258:(l,p)=>{r.xa("GlobalAveragePool",l,{format:p?"NHWC":"NCHW"})},922349:(l,p,h,x,I,V,N,J,Y,ee,Z,pe,fe,T,re,me)=>{r.xa("AveragePool",l,{format:me?"NHWC":"NCHW",auto_pad:p,ceil_mode:h,count_include_pad:x,storage_order:I,dilations:[V,N],kernel_shape:[J,Y],pads:[ee,Z,pe,fe],strides:[T,re]})},922633:(l,p)=>{r.xa("GlobalMaxPool",l,{format:p?"NHWC":"NCHW"})},922720:(l,p,h,x,I,V,N,J,Y,ee,Z,pe,fe,T,re,me)=>{r.xa("MaxPool",l,{format:me?"NHWC":"NCHW",auto_pad:p,ceil_mode:h,count_include_pad:x,storage_order:I,dilations:[V,N],kernel_shape:[J,Y],pads:[ee,Z,pe,fe],strides:[T,re]})},923e3:(l,p)=>{r.xa("GlobalMaxPool",l,{format:p?"NHWC":"NCHW"})},923087:(l,p,h,x,I,V,N,J,Y,ee,Z,pe,fe,T,re,me)=>{r.xa("MaxPool",l,{format:me?"NHWC":"NCHW",auto_pad:p,ceil_mode:h,count_include_pad:x,storage_order:I,dilations:[V,N],kernel_shape:[J,Y],pads:[ee,Z,pe,fe],strides:[T,re]})},923367:(l,p,h,x,I)=>{r.xa("Gemm",l,{alpha:p,beta:h,transA:x,transB:I})},923471:l=>{r.xa("MatMul",l,void 0)},923525:(l,p,h,x)=>{r.xa("ArgMax",l,{keepDims:!!p,selectLastIndex:!!h,axis:x})},923633:(l,p,h,x)=>{r.xa("ArgMin",l,{keepDims:!!p,selectLastIndex:!!h,axis:x})},923741:(l,p)=>{r.xa("Softmax",l,{axis:p})},923804:(l,p)=>{r.xa("Concat",l,{axis:p})},923864:(l,p,h,x,I)=>{r.xa("Split",l,{axis:p,numOutputs:h,splitSizes:x?Array.from(B.subarray(I>>>0,I+x>>>0)):[]})},924009:l=>{r.xa("Expand",l,void 0)},924063:(l,p)=>{r.xa("Gather",l,{axis:Number(p)})},924134:(l,p)=>{r.xa("GatherElements",l,{axis:Number(p)})},924213:(l,p,h,x,I,V,N,J,Y,ee,Z)=>{r.xa("Resize",l,{antialias:p,axes:h?Array.from(B.subarray(x>>>0,x+h>>>0)):[],coordinateTransformMode:ze(I),cubicCoeffA:V,excludeOutside:N,extrapolationValue:J,keepAspectRatioPolicy:ze(Y),mode:ze(ee),nearestMode:ze(Z)})},924564:(l,p,h,x,I,V,N)=>{r.xa("Slice",l,{starts:p?Array.from(B.subarray(h>>>0,h+p>>>0)):[],ends:x?Array.from(B.subarray(I>>>0,I+x>>>0)):[],axes:V?Array.from(B.subarray(N>>>0,N+V>>>0)):[]})},924795:l=>{r.xa("Tile",l,void 0)},924847:(l,p,h)=>{r.xa("LayerNormalization",l,{axis:Number(p),epsilon:Number(h)})},924954:(l,p,h)=>{r.xa("InstanceNormalization",l,{epsilon:p,format:h?"NHWC":"NCHW"})},925068:(l,p,h)=>{r.xa("InstanceNormalization",l,{epsilon:p,format:h?"NHWC":"NCHW"})},925182:l=>{r.xa("Range",l,void 0)},925235:(l,p)=>{r.xa("Einsum",l,{equation:ze(p)})},925316:(l,p,h,x,I)=>{r.xa("Pad",l,{mode:p,value:h,pads:x?Array.from(B.subarray(I>>>0,I+x>>>0)):[]})},925448:l=>{r.xa("Gelu",l,void 0)},925500:l=>{r.xa("BiasAdd",l,void 0)},925555:l=>{r.xa("BiasSplitGelu",l,void 0)},925616:(l,p)=>{r.xa("SkipLayerNormalization",l,{epsilon:p})},925697:(l,p,h,x,I,V,N,J,Y,ee,Z,pe,fe)=>{r.xa("Conv",l,{format:Y?"NHWC":"NCHW",auto_pad:p,dilations:[h],group:x,kernel_shape:[I],pads:V?Array.from(B.subarray(N>>>0,N+V>>>0)):[],strides:[J],w_is_const:()=>!!q[ee>>>0],activation:ze(Z),activation_params:pe?Array.from(xe.subarray(fe>>>0,fe+pe>>>0)):[]})},926078:(l,p,h,x,I,V,N,J,Y,ee,Z,pe,fe,T,re,me)=>{r.xa("Conv",l,{format:pe?"NHWC":"NCHW",auto_pad:p,dilations:[h,x],group:I,kernel_shape:[V,N],pads:J?Array.from(B.subarray(Y>>>0,Y+J>>>0)):[],strides:[ee,Z],w_is_const:()=>!!q[fe>>>0],activation:ze(T),activation_params:re?Array.from(xe.subarray(me>>>0,me+re>>>0)):[]})},926480:l=>{r.Ua(l)},926514:(l,p)=>r.Va(l,p,r.Fa.Wa,r.Fa.errors),926626:l=>r.Ra(l),926659:l=>r.Ta(l),926691:(l,p,h)=>{r.La(l,p,h,!0)},926730:(l,p,h)=>{r.La(l,p,h)}};function vt(l){this.name="ExitStatus",this.message=`Program terminated with exit(${l})`,this.status=l}var it=l=>{for(;0<l.length;)l.shift()(r)};function yr(l){this.Ka=l-24,this.Pa=function(p){K[this.Ka+4>>2>>>0]=p},this.Oa=function(p){K[this.Ka+8>>2>>>0]=p},this.Ma=function(p,h){this.Na(),this.Pa(p),this.Oa(h)},this.Na=function(){K[this.Ka+16>>2>>>0]=0}}var Vt=0,Ze=0,Gt=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,st=(l,p,h)=>{p>>>=0;var x=p+h;for(h=p;l[h]&&!(h>=x);)++h;if(16<h-p&&l.buffer&&Gt)return Gt.decode(l.subarray(p,h));for(x="";p<h;){var I=l[p++];if(I&128){var V=l[p++]&63;if((I&224)==192)x+=String.fromCharCode((I&31)<<6|V);else{var N=l[p++]&63;I=(I&240)==224?(I&15)<<12|V<<6|N:(I&7)<<18|V<<12|N<<6|l[p++]&63,65536>I?x+=String.fromCharCode(I):(I-=65536,x+=String.fromCharCode(55296|I>>10,56320|I&1023))}}else x+=String.fromCharCode(I)}return x},ze=(l,p)=>(l>>>=0)?st(le,l,p):"",Ut=l=>{for(var p=0,h=0;h<l.length;++h){var x=l.charCodeAt(h);127>=x?p++:2047>=x?p+=2:55296<=x&&57343>=x?(p+=4,++h):p+=3}return p},_t=(l,p,h,x)=>{if(h>>>=0,!(0<x))return 0;var I=h;x=h+x-1;for(var V=0;V<l.length;++V){var N=l.charCodeAt(V);if(55296<=N&&57343>=N){var J=l.charCodeAt(++V);N=65536+((N&1023)<<10)|J&1023}if(127>=N){if(h>=x)break;p[h++>>>0]=N}else{if(2047>=N){if(h+1>=x)break;p[h++>>>0]=192|N>>6}else{if(65535>=N){if(h+2>=x)break;p[h++>>>0]=224|N>>12}else{if(h+3>=x)break;p[h++>>>0]=240|N>>18,p[h++>>>0]=128|N>>12&63}p[h++>>>0]=128|N>>6&63}p[h++>>>0]=128|N&63}}return p[h>>>0]=0,h-I},mt=l=>l%4===0&&(l%100!==0||l%400===0),ut=[0,31,60,91,121,152,182,213,244,274,305,335],Rt=[0,31,59,90,120,151,181,212,243,273,304,334],$t=l=>{var p=Ut(l)+1,h=Dt(p);return h&&_t(l,le,h,p),h},xt=[],Nt=(l,p)=>{xt.length=0;var h;for(p>>=2;h=le[l++>>>0];)p+=h!=105&p,xt.push(h==105?B[p>>>0]:ae[p++>>>1]),++p;return xt},Pt={},Lt=()=>{if(!Mt){var l={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:u||"./this.program"},p;for(p in Pt)Pt[p]===void 0?delete l[p]:l[p]=Pt[p];var h=[];for(p in l)h.push(`${p}=${l[p]}`);Mt=h}return Mt},Mt,Ve=[null,[],[]],Ft=[31,29,31,30,31,30,31,31,30,31,30,31],Bt=[31,28,31,30,31,30,31,31,30,31,30,31];function ie(l){var p=Array(Ut(l)+1);return _t(l,p,0,p.length),p}function St(l,p,h,x){function I(T,re,me){for(T=typeof T=="number"?T.toString():T||"";T.length<re;)T=me[0]+T;return T}function V(T,re){return I(T,re,"0")}function N(T,re){function me(or){return 0>or?-1:0<or?1:0}var pt;return(pt=me(T.getFullYear()-re.getFullYear()))===0&&(pt=me(T.getMonth()-re.getMonth()))===0&&(pt=me(T.getDate()-re.getDate())),pt}function J(T){switch(T.getDay()){case 0:return new Date(T.getFullYear()-1,11,29);case 1:return T;case 2:return new Date(T.getFullYear(),0,3);case 3:return new Date(T.getFullYear(),0,2);case 4:return new Date(T.getFullYear(),0,1);case 5:return new Date(T.getFullYear()-1,11,31);case 6:return new Date(T.getFullYear()-1,11,30)}}function Y(T){var re=T.Da;for(T=new Date(new Date(T.Ea+1900,0,1).getTime());0<re;){var me=T.getMonth(),pt=(mt(T.getFullYear())?Ft:Bt)[me];if(re>pt-T.getDate())re-=pt-T.getDate()+1,T.setDate(1),11>me?T.setMonth(me+1):(T.setMonth(0),T.setFullYear(T.getFullYear()+1));else{T.setDate(T.getDate()+re);break}}return me=new Date(T.getFullYear()+1,0,4),re=J(new Date(T.getFullYear(),0,4)),me=J(me),0>=N(re,T)?0>=N(me,T)?T.getFullYear()+1:T.getFullYear():T.getFullYear()-1}l>>>=0,p>>>=0,h>>>=0,x>>>=0;var ee=B[x+40>>2>>>0];x={Za:B[x>>2>>>0],Ya:B[x+4>>2>>>0],Ga:B[x+8>>2>>>0],Ja:B[x+12>>2>>>0],Ha:B[x+16>>2>>>0],Ea:B[x+20>>2>>>0],Ca:B[x+24>>2>>>0],Da:B[x+28>>2>>>0],bb:B[x+32>>2>>>0],Xa:B[x+36>>2>>>0],$a:ee?ze(ee):""},h=ze(h),ee={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var Z in ee)h=h.replace(new RegExp(Z,"g"),ee[Z]);var pe="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),fe="January February March April May June July August September October November December".split(" ");ee={"%a":T=>pe[T.Ca].substring(0,3),"%A":T=>pe[T.Ca],"%b":T=>fe[T.Ha].substring(0,3),"%B":T=>fe[T.Ha],"%C":T=>V((T.Ea+1900)/100|0,2),"%d":T=>V(T.Ja,2),"%e":T=>I(T.Ja,2," "),"%g":T=>Y(T).toString().substring(2),"%G":T=>Y(T),"%H":T=>V(T.Ga,2),"%I":T=>(T=T.Ga,T==0?T=12:12<T&&(T-=12),V(T,2)),"%j":T=>{for(var re=0,me=0;me<=T.Ha-1;re+=(mt(T.Ea+1900)?Ft:Bt)[me++]);return V(T.Ja+re,3)},"%m":T=>V(T.Ha+1,2),"%M":T=>V(T.Ya,2),"%n":()=>`\n`,"%p":T=>0<=T.Ga&&12>T.Ga?"AM":"PM","%S":T=>V(T.Za,2),"%t":()=>"	","%u":T=>T.Ca||7,"%U":T=>V(Math.floor((T.Da+7-T.Ca)/7),2),"%V":T=>{var re=Math.floor((T.Da+7-(T.Ca+6)%7)/7);if(2>=(T.Ca+371-T.Da-2)%7&&re++,re)re==53&&(me=(T.Ca+371-T.Da)%7,me==4||me==3&&mt(T.Ea)||(re=1));else{re=52;var me=(T.Ca+7-T.Da-1)%7;(me==4||me==5&&mt(T.Ea%400-1))&&re++}return V(re,2)},"%w":T=>T.Ca,"%W":T=>V(Math.floor((T.Da+7-(T.Ca+6)%7)/7),2),"%y":T=>(T.Ea+1900).toString().substring(2),"%Y":T=>T.Ea+1900,"%z":T=>{T=T.Xa;var re=0<=T;return T=Math.abs(T)/60,(re?"+":"-")+("0000"+(T/60*100+T%60)).slice(-4)},"%Z":T=>T.$a,"%%":()=>"%"},h=h.replace(/%%/g,"\\0\\0");for(Z in ee)h.includes(Z)&&(h=h.replace(new RegExp(Z,"g"),ee[Z](x)));return h=h.replace(/\\0\\0/g,"%"),Z=ie(h),Z.length>p?0:(q.set(Z,l>>>0),Z.length-1)}function Ct(l){try{l()}catch(p){U(p)}}function rn(l){var p={},h;for(h in l)(function(x){var I=l[x];p[x]=typeof I=="function"?function(){At.push(x);try{return I.apply(null,arguments)}finally{z||(At.pop()===x||U(),je&&qe===1&&At.length===0&&(qe=0,Ct(er),typeof Fibers<"u"&&Fibers.cb()))}}:I})(h);return p}var qe=0,je=null,Ht=0,At=[],jt={},Kt={},qt=0,kt=null,br=[];function wr(){return new Promise((l,p)=>{kt={resolve:l,reject:p}})}function vr(){var l=Dt(65548),p=l+12;K[l>>2>>>0]=p,K[l+4>>2>>>0]=p+65536,p=At[0];var h=jt[p];return h===void 0&&(h=qt++,jt[p]=h,Kt[h]=p),B[l+8>>2>>>0]=h,l}function $r(l){if(!z){if(qe===0){var p=!1,h=!1;l((x=0)=>{if(!z&&(Ht=x,p=!0,h)){qe=2,Ct(()=>tr(je)),typeof Browser<"u"&&Browser.Ia.Qa&&Browser.Ia.resume(),x=!1;try{var I=(0,_[Kt[B[je+8>>2>>>0]]])()}catch(J){I=J,x=!0}var V=!1;if(!je){var N=kt;N&&(kt=null,(x?N.reject:N.resolve)(I),V=!0)}if(x&&!V)throw I}}),h=!0,p||(qe=1,je=vr(),typeof Browser<"u"&&Browser.Ia.Qa&&Browser.Ia.pause(),Ct(()=>Qt(je)))}else qe===2?(qe=0,Ct(rr),Jt(je),je=null,br.forEach(x=>{if(!z)try{if(x(),!M)try{F=F=x=F,M||(r.onExit&&r.onExit(x),z=!0),d(x,new vt(x))}catch(I){I instanceof vt||I=="unwind"||d(1,I)}}catch(I){I instanceof vt||I=="unwind"||d(1,I)}})):U(`invalid state: ${qe}`);return Ht}}function xr(l){return $r(p=>{l().then(p)})}var lt=[],dt=void 0,Yt=[];function Xt(l,p){if(!dt){dt=new WeakMap;var h=H.length;if(dt)for(var x=0;x<0+h;x++){var I=x,V=lt[I];V||(I>=lt.length&&(lt.length=I+1),lt[I]=V=H.get(I)),(I=V)&&dt.set(I,x)}}if(h=dt.get(l)||0)return h;if(Yt.length)h=Yt.pop();else{try{H.grow(1)}catch(J){throw J instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":J}h=H.length-1}try{x=h,H.set(x,l),lt[x]=H.get(x)}catch(J){if(!(J instanceof TypeError))throw J;if(typeof WebAssembly.Function=="function"){x=WebAssembly.Function,I={i:"i32",j:"i64",f:"f32",d:"f64",p:"i32"},V={parameters:[],results:p[0]=="v"?[]:[I[p[0]]]};for(var N=1;N<p.length;++N)V.parameters.push(I[p[N]]);p=new x(V,l)}else{for(x=[1],I=p.slice(0,1),p=p.slice(1),V={i:127,p:127,j:126,f:125,d:124},x.push(96),N=p.length,128>N?x.push(N):x.push(N%128|128,N>>7),N=0;N<p.length;++N)x.push(V[p[N]]);I=="v"?x.push(0):x.push(1,V[I]),p=[0,97,115,109,1,0,0,0,1],I=x.length,128>I?p.push(I):p.push(I%128|128,I>>7),p.push.apply(p,x),p.push(2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0),p=new WebAssembly.Module(new Uint8Array(p)),p=new WebAssembly.Instance(p,{e:{f:l}}).exports.f}x=h,H.set(x,p),lt[x]=H.get(x)}return dt.set(l,h),h}var Sr={n:function(l,p,h){return xr(async()=>{await r.Sa(l,p,h)})},a:function(l,p,h){throw l>>>=0,new yr(l).Ma(p>>>0,h>>>0),Vt=l,Ze++,Vt},g:function(){return 0},J:function(){},z:function(){},B:function(){},L:function(){return 0},H:function(){},C:function(){},F:function(){},m:function(){},A:function(){},x:function(){},I:function(){},y:function(){},M:()=>!0,q:function(l,p,h){l=p+2097152>>>0<4194305-!!l?(l>>>0)+4294967296*p:NaN,h>>>=0,l=new Date(1e3*l),B[h>>2>>>0]=l.getUTCSeconds(),B[h+4>>2>>>0]=l.getUTCMinutes(),B[h+8>>2>>>0]=l.getUTCHours(),B[h+12>>2>>>0]=l.getUTCDate(),B[h+16>>2>>>0]=l.getUTCMonth(),B[h+20>>2>>>0]=l.getUTCFullYear()-1900,B[h+24>>2>>>0]=l.getUTCDay(),B[h+28>>2>>>0]=(l.getTime()-Date.UTC(l.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},r:function(l,p,h){l=p+2097152>>>0<4194305-!!l?(l>>>0)+4294967296*p:NaN,h>>>=0,l=new Date(1e3*l),B[h>>2>>>0]=l.getSeconds(),B[h+4>>2>>>0]=l.getMinutes(),B[h+8>>2>>>0]=l.getHours(),B[h+12>>2>>>0]=l.getDate(),B[h+16>>2>>>0]=l.getMonth(),B[h+20>>2>>>0]=l.getFullYear()-1900,B[h+24>>2>>>0]=l.getDay(),B[h+28>>2>>>0]=(mt(l.getFullYear())?ut:Rt)[l.getMonth()]+l.getDate()-1|0,B[h+36>>2>>>0]=-(60*l.getTimezoneOffset()),p=new Date(l.getFullYear(),6,1).getTimezoneOffset();var x=new Date(l.getFullYear(),0,1).getTimezoneOffset();B[h+32>>2>>>0]=(p!=x&&l.getTimezoneOffset()==Math.min(x,p))|0},s:function(l){l>>>=0;var p=new Date(B[l+20>>2>>>0]+1900,B[l+16>>2>>>0],B[l+12>>2>>>0],B[l+8>>2>>>0],B[l+4>>2>>>0],B[l>>2>>>0],0),h=B[l+32>>2>>>0],x=p.getTimezoneOffset(),I=new Date(p.getFullYear(),6,1).getTimezoneOffset(),V=new Date(p.getFullYear(),0,1).getTimezoneOffset(),N=Math.min(V,I);return 0>h?B[l+32>>2>>>0]=+(I!=V&&N==x):0<h!=(N==x)&&(I=Math.max(V,I),p.setTime(p.getTime()+6e4*((0<h?N:I)-x))),B[l+24>>2>>>0]=p.getDay(),B[l+28>>2>>>0]=(mt(p.getFullYear())?ut:Rt)[p.getMonth()]+p.getDate()-1|0,B[l>>2>>>0]=p.getSeconds(),B[l+4>>2>>>0]=p.getMinutes(),B[l+8>>2>>>0]=p.getHours(),B[l+12>>2>>>0]=p.getDate(),B[l+16>>2>>>0]=p.getMonth(),B[l+20>>2>>>0]=p.getYear(),l=p.getTime()/1e3,Zt((Ue=l,1<=+Math.abs(Ue)?0<Ue?+Math.floor(Ue/4294967296)>>>0:~~+Math.ceil((Ue-+(~~Ue>>>0))/4294967296)>>>0:0)),l>>>0},o:function(){return-52},p:function(){},v:function(l,p,h){function x(Y){return(Y=Y.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?Y[1]:"GMT"}h>>>=0;var I=new Date().getFullYear(),V=new Date(I,0,1),N=new Date(I,6,1);I=V.getTimezoneOffset();var J=N.getTimezoneOffset();K[l>>>0>>2>>>0]=60*Math.max(I,J),B[p>>>0>>2>>>0]=+(I!=J),l=x(V),p=x(N),l=$t(l),p=$t(p),J<I?(K[h>>2>>>0]=l,K[h+4>>2>>>0]=p):(K[h>>2>>>0]=p,K[h+4>>2>>>0]=l)},e:()=>{U("")},b:function(l,p,h){return l>>>=0,p=Nt(p>>>0,h>>>0),He[l].apply(null,p)},j:function(l,p,h){return l>>>=0,p=Nt(p>>>0,h>>>0),He[l].apply(null,p)},h:function(){return Date.now()},w:function(){return 4294901760},c:()=>performance.now(),K:function(l,p,h){return p>>>=0,le.copyWithin(l>>>0>>>0,p>>>0,p+(h>>>0)>>>0)},u:function(l){l>>>=0;var p=le.length;if(4294901760<l)return!1;for(var h=1;4>=h;h*=2){var x=p*(1+.2/h);x=Math.min(x,l+100663296);var I=Math;x=Math.max(l,x);e:{I=I.min.call(I,4294901760,x+(65536-x%65536)%65536)-D.buffer.byteLength+65535>>>16;try{D.grow(I),we();var V=1;break e}catch{}V=void 0}if(V)return!0}return!1},D:function(l,p){l>>>=0,p>>>=0;var h=0;return Lt().forEach(function(x,I){var V=p+h;for(I=K[l+4*I>>2>>>0]=V,V=0;V<x.length;++V)q[I++>>0>>>0]=x.charCodeAt(V);q[I>>0>>>0]=0,h+=x.length+1}),0},E:function(l,p){l>>>=0,p>>>=0;var h=Lt();K[l>>2>>>0]=h.length;var x=0;return h.forEach(function(I){x+=I.length+1}),K[p>>2>>>0]=x,0},f:()=>52,l:function(){return 52},t:function(){return 70},k:function(l,p,h,x){p>>>=0,h>>>=0,x>>>=0;for(var I=0,V=0;V<h;V++){var N=K[p>>2>>>0],J=K[p+4>>2>>>0];p+=8;for(var Y=0;Y<J;Y++){var ee=le[N+Y>>>0],Z=Ve[l];ee===0||ee===10?((l===1?A:R)(st(Z,0)),Z.length=0):Z.push(ee)}I+=J}return K[x>>2>>>0]=I,0},G:St,d:function(l,p,h,x){return St(l>>>0,p>>>0,h>>>0,x>>>0)},i:function(l,p,h,x){let I=H.length;l=new Uint8Array(le.slice(l+p,l+h));try{var V=new WebAssembly.Module(l),N=new WebAssembly.Instance(V,{env:{memory:D}}),J;for(J in N.exports)Xt(N.exports[J]);return I<H.length?I:x}catch(Y){return console.log(Y),x}}};(function(){function l(h){if(h=h.exports,h=rn(h),_=h=Cr(h),D=_.N,we(),H=_.sa,Te.unshift(_.O),Ne--,r.monitorRunDependencies&&r.monitorRunDependencies(Ne),Ne==0&&(Le!==null&&(clearInterval(Le),Le=null),Fe)){var x=Fe;Fe=null,x()}return h}var p={a:Sr};if(Ne++,r.monitorRunDependencies&&r.monitorRunDependencies(Ne),r.instantiateWasm)try{return r.instantiateWasm(p,l)}catch(h){R("Module.instantiateWasm callback failed with error: "+h),n(h)}return Je(p,function(h){l(h.instance)}).catch(n),{}})(),r._OrtInit=(l,p)=>(r._OrtInit=_.P)(l,p),r._OrtGetLastError=(l,p)=>(r._OrtGetLastError=_.Q)(l,p),r._OrtCreateSessionOptions=(l,p,h,x,I,V,N,J,Y,ee)=>(r._OrtCreateSessionOptions=_.R)(l,p,h,x,I,V,N,J,Y,ee),r._OrtAppendExecutionProvider=(l,p)=>(r._OrtAppendExecutionProvider=_.S)(l,p),r._OrtAddFreeDimensionOverride=(l,p,h)=>(r._OrtAddFreeDimensionOverride=_.T)(l,p,h),r._OrtAddSessionConfigEntry=(l,p,h)=>(r._OrtAddSessionConfigEntry=_.U)(l,p,h),r._OrtReleaseSessionOptions=l=>(r._OrtReleaseSessionOptions=_.V)(l),r._OrtCreateSession=(l,p,h)=>(r._OrtCreateSession=_.W)(l,p,h),r._OrtReleaseSession=l=>(r._OrtReleaseSession=_.X)(l),r._OrtGetInputOutputCount=(l,p,h)=>(r._OrtGetInputOutputCount=_.Y)(l,p,h),r._OrtGetInputName=(l,p)=>(r._OrtGetInputName=_.Z)(l,p),r._OrtGetOutputName=(l,p)=>(r._OrtGetOutputName=_._)(l,p),r._OrtFree=l=>(r._OrtFree=_.$)(l),r._OrtCreateTensor=(l,p,h,x,I,V)=>(r._OrtCreateTensor=_.aa)(l,p,h,x,I,V),r._OrtGetTensorData=(l,p,h,x,I)=>(r._OrtGetTensorData=_.ba)(l,p,h,x,I),r._OrtReleaseTensor=l=>(r._OrtReleaseTensor=_.ca)(l),r._OrtCreateRunOptions=(l,p,h,x)=>(r._OrtCreateRunOptions=_.da)(l,p,h,x),r._OrtAddRunConfigEntry=(l,p,h)=>(r._OrtAddRunConfigEntry=_.ea)(l,p,h),r._OrtReleaseRunOptions=l=>(r._OrtReleaseRunOptions=_.fa)(l),r._OrtCreateBinding=l=>(r._OrtCreateBinding=_.ga)(l),r._OrtBindInput=(l,p,h)=>(r._OrtBindInput=_.ha)(l,p,h),r._OrtBindOutput=(l,p,h,x)=>(r._OrtBindOutput=_.ia)(l,p,h,x),r._OrtClearBoundOutputs=l=>(r._OrtClearBoundOutputs=_.ja)(l),r._OrtReleaseBinding=l=>(r._OrtReleaseBinding=_.ka)(l),r._OrtRunWithBinding=(l,p,h,x,I)=>(r._OrtRunWithBinding=_.la)(l,p,h,x,I),r._OrtRun=(l,p,h,x,I,V,N,J)=>(r._OrtRun=_.ma)(l,p,h,x,I,V,N,J),r._OrtEndProfiling=l=>(r._OrtEndProfiling=_.na)(l),r._JsepOutput=(l,p,h)=>(r._JsepOutput=_.oa)(l,p,h),r._JsepGetNodeName=l=>(r._JsepGetNodeName=_.pa)(l);var Dt=r._malloc=l=>(Dt=r._malloc=_.qa)(l),Jt=r._free=l=>(Jt=r._free=_.ra)(l),Zt=l=>(Zt=_.ta)(l),Wt=()=>(Wt=_.ua)(),It=l=>(It=_.va)(l),ct=l=>(ct=_.wa)(l),Qt=l=>(Qt=_.ya)(l),er=()=>(er=_.za)(),tr=l=>(tr=_.Aa)(l),rr=()=>(rr=_.Ba)();r.___start_em_js=926763,r.___stop_em_js=927536;function Cr(l){l=Object.assign({},l);var p=x=>()=>x()>>>0,h=x=>I=>x(I)>>>0;return l.__errno_location=p(l.__errno_location),l.malloc=h(l.malloc),l.stackSave=p(l.stackSave),l.stackAlloc=h(l.stackAlloc),l}r.stackAlloc=ct,r.stackSave=Wt,r.stackRestore=It,r.addFunction=Xt,r.UTF8ToString=ze,r.stringToUTF8=(l,p,h)=>_t(l,le,p,h),r.lengthBytesUTF8=Ut;var ht;Fe=function l(){ht||nr(),ht||(Fe=l)};function nr(){function l(){if(!ht&&(ht=!0,r.calledRun=!0,!z)){if(it(Te),o(r),r.onRuntimeInitialized&&r.onRuntimeInitialized(),r.postRun)for(typeof r.postRun=="function"&&(r.postRun=[r.postRun]);r.postRun.length;){var p=r.postRun.shift();Ae.unshift(p)}it(Ae)}}if(!(0<Ne)){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;)Ee();it(Se),0<Ne||(r.setStatus?(r.setStatus("Running..."),setTimeout(function(){setTimeout(function(){r.setStatus("")},1),l()},1)):l())}}if(r.preInit)for(typeof r.preInit=="function"&&(r.preInit=[r.preInit]);0<r.preInit.length;)r.preInit.pop()();return nr(),t.ready}})();typeof lo=="object"&&typeof hn=="object"?hn.exports=uo:typeof define=="function"&&define.amd&&define([],()=>uo)});var po=ar(()=>{});var fo=ar(()=>{});var mo={};_r(mo,{cpus:()=>Ou});var Ou,ho=j(()=>{Ou=void 0});var bo=ar((yo,gn)=>{"use strict";var go=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){function r(){return we.buffer!=Ee.buffer&&de(),Ee}function o(){return we.buffer!=Ee.buffer&&de(),Ne}function n(){return we.buffer!=Ee.buffer&&de(),Le}function s(){return we.buffer!=Ee.buffer&&de(),Fe}function u(){return we.buffer!=Ee.buffer&&de(),U}function d(){return we.buffer!=Ee.buffer&&de(),ce}var a=t,m,g;a.ready=new Promise((i,c)=>{m=i,g=c}),a.jsepInit=(i,c,f,$,E,P,G,oe)=>{a.Qb=i,a.wb=c,a.yb=f,a.jb=$,a.xb=E,a.Ea=P,a.zb=G,a.Ab=oe,c=(te,Q,ne)=>(...he)=>{let be=Qe,O=Q?.();he=te(...he);let ue=Q?.();return O!==ue&&(te=ue,ne(O),Q=ne=null),Qe!=be?hu():he},f=te=>async(...Q)=>{try{if(a.bb)throw Error("Session already started");let ne=a.bb={Fb:Q[0],errors:[]},he=await te(...Q);if(a.bb!==ne)throw Error("Session mismatch");i.flush();let be=ne.errors;if(0<be.length){let O=await Promise.all(be);if(O=O.filter(ue=>ue),0<O.length)throw Error(O.join(`\n`))}return he}finally{a.bb=null}},a._OrtRun=f(c(a._OrtRun,()=>a._OrtRun,te=>a._OrtRun=te)),a._OrtRunWithBinding=f(c(a._OrtRunWithBinding,()=>a._OrtRunWithBinding,te=>a._OrtRunWithBinding=te)),a._OrtBindInput=c(a._OrtBindInput,()=>a._OrtBindInput,te=>a._OrtBindInput=te),a.jsepRegisterBuffer=(te,Q,ne,he)=>i.registerBuffer(te,Q,ne,he),a.jsepUnregisterBuffers=te=>{i.unregisterBuffers(te)},a.jsepGetBuffer=te=>i.getBuffer(te),a.jsepCreateDownloader=(te,Q,ne)=>i.createDownloader(te,Q,ne)};var S=Object.assign({},a),b="./this.program",w=(i,c)=>{throw c},v=typeof window=="object",y=typeof importScripts=="function",C=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",A=a.ENVIRONMENT_IS_PTHREAD||!1,R="";function W(i){return a.locateFile?a.locateFile(i,R):R+i}var M,D,_;if(C){var z=(pn(),zt(cn)),F=(mn(),zt(fn));R=y?F.dirname(R)+"/":__dirname+"/",M=(c,f)=>(c=c.startsWith("file://")?new URL(c):F.normalize(c),z.readFileSync(c,f?void 0:"utf8")),_=c=>(c=M(c,!0),c.buffer||(c=new Uint8Array(c)),c),D=(c,f,$,E=!0)=>{c=c.startsWith("file://")?new URL(c):F.normalize(c),z.readFile(c,E?void 0:"utf8",(P,G)=>{P?$(P):f(E?G.buffer:G)})},!a.thisProgram&&1<process.argv.length&&(b=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),w=(c,f)=>{throw process.exitCode=c,f},a.inspect=()=>"[Emscripten Module object]";let i;try{i=po()}catch(c){throw console.error(\'The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?\'),c}global.Worker=i.Worker}else(v||y)&&(y?R=self.location.href:typeof document<"u"&&document.currentScript&&(R=document.currentScript.src),typeof e<"u"&&e&&(R=e),R.indexOf("blob:")!==0?R=R.substr(0,R.replace(/[?#].*/,"").lastIndexOf("/")+1):R="",C||(M=i=>{var c=new XMLHttpRequest;return c.open("GET",i,!1),c.send(null),c.responseText},y&&(_=i=>{var c=new XMLHttpRequest;return c.open("GET",i,!1),c.responseType="arraybuffer",c.send(null),new Uint8Array(c.response)}),D=(i,c,f)=>{var $=new XMLHttpRequest;$.open("GET",i,!0),$.responseType="arraybuffer",$.onload=()=>{$.status==200||$.status==0&&$.response?c($.response):f()},$.onerror=f,$.send(null)}));C&&typeof performance>"u"&&(global.performance=fo().performance);var q=console.log.bind(console),le=console.error.bind(console);C&&(q=(...i)=>z.writeSync(1,i.join(" ")+`\n`),le=(...i)=>z.writeSync(2,i.join(" ")+`\n`));var B=a.print||q,K=a.printErr||le;Object.assign(a,S),S=null,a.thisProgram&&(b=a.thisProgram),a.quit&&(w=a.quit);var xe;a.wasmBinary&&(xe=a.wasmBinary);var ae=a.noExitRuntime||!0;typeof WebAssembly!="object"&&Ze("no native wasm support detected");var we,H,Se,Te=!1,Ae,Ee,Ne,Le,Fe,U,ce;function de(){var i=we.buffer;a.HEAP8=Ee=new Int8Array(i),a.HEAP16=new Int16Array(i),a.HEAP32=Le=new Int32Array(i),a.HEAPU8=Ne=new Uint8Array(i),a.HEAPU16=new Uint16Array(i),a.HEAPU32=Fe=new Uint32Array(i),a.HEAPF32=U=new Float32Array(i),a.HEAPF64=ce=new Float64Array(i)}var We=a.INITIAL_MEMORY||16777216;if(5242880<=We||Ze("INITIAL_MEMORY should be larger than STACK_SIZE, was "+We+"! (STACK_SIZE=5242880)"),A)we=a.wasmMemory;else if(a.wasmMemory)we=a.wasmMemory;else if(we=new WebAssembly.Memory({initial:We/65536,maximum:65536,shared:!0}),!(we.buffer instanceof SharedArrayBuffer))throw K("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),C&&K("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");de(),We=we.buffer.byteLength;var Ge=[],Oe=[],Me=[],Je=0;function Ue(){return ae||0<Je}var He=0,vt=null,it=null;function yr(){He++,a.monitorRunDependencies&&a.monitorRunDependencies(He)}function Vt(){if(He--,a.monitorRunDependencies&&a.monitorRunDependencies(He),He==0&&(vt!==null&&(clearInterval(vt),vt=null),it)){var i=it;it=null,i()}}function Ze(i){throw a.onAbort&&a.onAbort(i),i="Aborted("+i+")",K(i),Te=!0,Ae=1,i=new WebAssembly.RuntimeError(i+". Build with -sASSERTIONS for more info."),g(i),i}function Gt(i){return i.startsWith("data:application/octet-stream;base64,")}var st;st="ort-wasm-simd-threaded.wasm",Gt(st)||(st=W(st));function ze(i){if(i==st&&xe)return new Uint8Array(xe);if(_)return _(i);throw"both async and sync fetching of the wasm failed"}function Ut(i){if(!xe&&(v||y)){if(typeof fetch=="function"&&!i.startsWith("file://"))return fetch(i,{credentials:"same-origin"}).then(c=>{if(!c.ok)throw"failed to load wasm binary file at \'"+i+"\'";return c.arrayBuffer()}).catch(()=>ze(i));if(D)return new Promise((c,f)=>{D(i,$=>c(new Uint8Array($)),f)})}return Promise.resolve().then(()=>ze(i))}function _t(i,c,f){return Ut(i).then($=>WebAssembly.instantiate($,c)).then($=>$).then(f,$=>{K("failed to asynchronously prepare wasm: "+$),Ze($)})}function mt(i,c){var f=st;return xe||typeof WebAssembly.instantiateStreaming!="function"||Gt(f)||f.startsWith("file://")||C||typeof fetch!="function"?_t(f,i,c):fetch(f,{credentials:"same-origin"}).then($=>WebAssembly.instantiateStreaming($,i).then(c,function(E){return K("wasm streaming compile failed: "+E),K("falling back to ArrayBuffer instantiation"),_t(f,i,c)}))}var ut,Rt={1421856:i=>{a.Ea("Abs",i,void 0)},1421907:i=>{a.Ea("Neg",i,void 0)},1421958:i=>{a.Ea("Floor",i,void 0)},1422011:i=>{a.Ea("Ceil",i,void 0)},1422063:i=>{a.Ea("Reciprocal",i,void 0)},1422121:i=>{a.Ea("Sqrt",i,void 0)},1422173:i=>{a.Ea("Exp",i,void 0)},1422224:i=>{a.Ea("Erf",i,void 0)},1422275:i=>{a.Ea("Sigmoid",i,void 0)},1422330:i=>{a.Ea("Log",i,void 0)},1422381:i=>{a.Ea("Sin",i,void 0)},1422432:i=>{a.Ea("Cos",i,void 0)},1422483:i=>{a.Ea("Tan",i,void 0)},1422534:i=>{a.Ea("Asin",i,void 0)},1422586:i=>{a.Ea("Acos",i,void 0)},1422638:i=>{a.Ea("Atan",i,void 0)},1422690:i=>{a.Ea("Sinh",i,void 0)},1422742:i=>{a.Ea("Cosh",i,void 0)},1422794:i=>{a.Ea("Asinh",i,void 0)},1422847:i=>{a.Ea("Acosh",i,void 0)},1422900:i=>{a.Ea("Atanh",i,void 0)},1422953:i=>{a.Ea("Tanh",i,void 0)},1423005:i=>{a.Ea("Not",i,void 0)},1423056:(i,c,f)=>{a.Ea("ClipV10",i,{min:c,max:f})},1423128:i=>{a.Ea("Clip",i,void 0)},1423180:(i,c)=>{a.Ea("Elu",i,{alpha:c})},1423238:i=>{a.Ea("Relu",i,void 0)},1423290:(i,c)=>{a.Ea("LeakyRelu",i,{alpha:c})},1423354:(i,c)=>{a.Ea("ThresholdedRelu",i,{alpha:c})},1423424:i=>{a.zb(i)},1423458:(i,c)=>a.Ab(i,c,a.bb.Fb,a.bb.errors),1423570:(i,c)=>{a.Ea("Cast",i,{to:c})},1423628:i=>{a.Ea("Add",i,void 0)},1423679:i=>{a.Ea("Sub",i,void 0)},1423730:i=>{a.Ea("Mul",i,void 0)},1423781:i=>{a.Ea("Div",i,void 0)},1423832:i=>{a.Ea("Pow",i,void 0)},1423883:i=>{a.Ea("Equal",i,void 0)},1423936:i=>{a.Ea("Greater",i,void 0)},1423991:i=>{a.Ea("GreaterOrEqual",i,void 0)},1424053:i=>{a.Ea("Less",i,void 0)},1424105:i=>{a.Ea("LessOrEqual",i,void 0)},1424164:(i,c,f,$,E)=>{a.Ea("ReduceMean",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(E>>>0,E+$>>>0)):[]})},1424328:(i,c,f,$,E)=>{a.Ea("ReduceMax",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(E>>>0,E+$>>>0)):[]})},1424491:(i,c,f,$,E)=>{a.Ea("ReduceMin",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(E>>>0,E+$>>>0)):[]})},1424654:(i,c,f,$,E)=>{a.Ea("ReduceProd",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(E>>>0,E+$>>>0)):[]})},1424818:(i,c,f,$,E)=>{a.Ea("ReduceSum",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(E>>>0,E+$>>>0)):[]})},1424981:(i,c,f,$,E)=>{a.Ea("ReduceL1",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(E>>>0,E+$>>>0)):[]})},1425143:(i,c,f,$,E)=>{a.Ea("ReduceL2",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(E>>>0,E+$>>>0)):[]})},1425305:(i,c,f,$,E)=>{a.Ea("ReduceLogSum",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(E>>>0,E+$>>>0)):[]})},1425471:(i,c,f,$,E)=>{a.Ea("ReduceSumSquare",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(E>>>0,E+$>>>0)):[]})},1425640:(i,c,f,$,E)=>{a.Ea("ReduceLogSumExp",i,{keepDims:!!c,noopWithEmptyAxes:!!f,axes:$?Array.from(n().subarray(E>>>0,E+$>>>0)):[]})},1425809:i=>{a.Ea("Where",i,void 0)},1425862:(i,c,f)=>{a.Ea("Transpose",i,{perm:c?Array.from(n().subarray(f>>>0,f+c>>>0)):[]})},1425975:(i,c,f,$,E,P,G,oe,te,Q,ne,he,be)=>{a.Ea("Conv",i,{format:te?"NHWC":"NCHW",auto_pad:c,dilations:[f],group:$,kernel_shape:[E],pads:P?Array.from(n().subarray(G>>>0,G+P>>>0)):[],strides:[oe],w_is_const:()=>!!r()[Q>>>0],activation:Ve(ne),activation_params:he?Array.from(u().subarray(be>>>0,be+he>>>0)):[]})},1426356:(i,c,f,$,E,P,G,oe,te,Q,ne,he,be,O,ue,ye)=>{a.Ea("Conv",i,{format:he?"NHWC":"NCHW",auto_pad:c,dilations:[f,$],group:E,kernel_shape:[P,G],pads:oe?Array.from(n().subarray(te>>>0,te+oe>>>0)):[],strides:[Q,ne],w_is_const:()=>!!r()[be>>>0],activation:Ve(O),activation_params:ue?Array.from(u().subarray(ye>>>0,ye+ue>>>0)):[]})},1426758:(i,c,f,$,E,P,G,oe,te,Q,ne,he,be,O,ue)=>{a.Ea("ConvTranspose",i,{format:te?"NHWC":"NCHW",autoPad:c,dilations:[f],group:$,kernel_shape:[E],pads:[P,G],strides:[oe],wIsConst:()=>!!r()[Q>>>0],outputPadding:ne?Array.from(n().subarray(he>>>0,he+ne>>>0)):[],outputShape:be?Array.from(n().subarray(O>>>0,O+be>>>0)):[],activation:Ve(ue)})},1427172:(i,c,f,$,E,P,G,oe,te,Q,ne,he,be,O)=>{a.Ea("ConvTranspose",i,{format:oe?"NHWC":"NCHW",autoPad:c,dilations:Array.from(n().subarray(f>>>0,f+2>>>0)),group:$,kernelShape:Array.from(n().subarray(E>>>0,E+2>>>0)),pads:Array.from(n().subarray(P>>>0,P+4>>>0)),strides:Array.from(n().subarray(G>>>0,G+2>>>0)),wIsConst:()=>!!r()[te>>>0],outputPadding:0<Q?Array.from(n().subarray(ne>>>0,ne+Q>>>0)):[],outputShape:0<he?Array.from(n().subarray(be>>>0,be+he>>>0)):[],activation:Ve(O)})},1427729:(i,c,f,$,E,P,G,oe,te,Q,ne,he,be,O,ue)=>{a.Ea("ConvTranspose",i,{format:te?"NHWC":"NCHW",autoPad:c,dilations:[f],group:$,kernel_shape:[E],pads:[P,G],strides:[oe],wIsConst:()=>!!r()[Q>>>0],outputPadding:ne?Array.from(n().subarray(he>>>0,he+ne>>>0)):[],outputShape:be?Array.from(n().subarray(O>>>0,O+be>>>0)):[],activation:Ve(ue)})},1428143:(i,c,f,$,E,P,G,oe,te,Q,ne,he,be,O)=>{a.Ea("ConvTranspose",i,{format:oe?"NHWC":"NCHW",autoPad:c,dilations:Array.from(n().subarray(f>>>0,f+2>>>0)),group:$,kernelShape:Array.from(n().subarray(E>>>0,E+2>>>0)),pads:Array.from(n().subarray(P>>>0,P+4>>>0)),strides:Array.from(n().subarray(G>>>0,G+2>>>0)),wIsConst:()=>!!r()[te>>>0],outputPadding:0<Q?Array.from(n().subarray(ne>>>0,ne+Q>>>0)):[],outputShape:0<he?Array.from(n().subarray(be>>>0,be+he>>>0)):[],activation:Ve(O)})},1428700:(i,c)=>{a.Ea("GlobalAveragePool",i,{format:c?"NHWC":"NCHW"})},1428791:(i,c,f,$,E,P,G,oe,te,Q,ne,he,be,O,ue,ye)=>{a.Ea("AveragePool",i,{format:ye?"NHWC":"NCHW",auto_pad:c,ceil_mode:f,count_include_pad:$,storage_order:E,dilations:[P,G],kernel_shape:[oe,te],pads:[Q,ne,he,be],strides:[O,ue]})},1429075:(i,c)=>{a.Ea("GlobalAveragePool",i,{format:c?"NHWC":"NCHW"})},1429166:(i,c,f,$,E,P,G,oe,te,Q,ne,he,be,O,ue,ye)=>{a.Ea("AveragePool",i,{format:ye?"NHWC":"NCHW",auto_pad:c,ceil_mode:f,count_include_pad:$,storage_order:E,dilations:[P,G],kernel_shape:[oe,te],pads:[Q,ne,he,be],strides:[O,ue]})},1429450:(i,c)=>{a.Ea("GlobalMaxPool",i,{format:c?"NHWC":"NCHW"})},1429537:(i,c,f,$,E,P,G,oe,te,Q,ne,he,be,O,ue,ye)=>{a.Ea("MaxPool",i,{format:ye?"NHWC":"NCHW",auto_pad:c,ceil_mode:f,count_include_pad:$,storage_order:E,dilations:[P,G],kernel_shape:[oe,te],pads:[Q,ne,he,be],strides:[O,ue]})},1429817:(i,c)=>{a.Ea("GlobalMaxPool",i,{format:c?"NHWC":"NCHW"})},1429904:(i,c,f,$,E,P,G,oe,te,Q,ne,he,be,O,ue,ye)=>{a.Ea("MaxPool",i,{format:ye?"NHWC":"NCHW",auto_pad:c,ceil_mode:f,count_include_pad:$,storage_order:E,dilations:[P,G],kernel_shape:[oe,te],pads:[Q,ne,he,be],strides:[O,ue]})},1430184:(i,c,f,$,E)=>{a.Ea("Gemm",i,{alpha:c,beta:f,transA:$,transB:E})},1430288:i=>{a.Ea("MatMul",i,void 0)},1430342:(i,c,f,$)=>{a.Ea("ArgMax",i,{keepDims:!!c,selectLastIndex:!!f,axis:$})},1430450:(i,c,f,$)=>{a.Ea("ArgMin",i,{keepDims:!!c,selectLastIndex:!!f,axis:$})},1430558:(i,c)=>{a.Ea("Softmax",i,{axis:c})},1430621:(i,c)=>{a.Ea("Concat",i,{axis:c})},1430681:(i,c,f,$,E)=>{a.Ea("Split",i,{axis:c,numOutputs:f,splitSizes:$?Array.from(n().subarray(E>>>0,E+$>>>0)):[]})},1430826:i=>{a.Ea("Expand",i,void 0)},1430880:(i,c)=>{a.Ea("Gather",i,{axis:Number(c)})},1430951:(i,c)=>{a.Ea("GatherElements",i,{axis:Number(c)})},1431030:(i,c,f,$,E,P,G,oe,te,Q,ne)=>{a.Ea("Resize",i,{antialias:c,axes:f?Array.from(n().subarray($>>>0,$+f>>>0)):[],coordinateTransformMode:Ve(E),cubicCoeffA:P,excludeOutside:G,extrapolationValue:oe,keepAspectRatioPolicy:Ve(te),mode:Ve(Q),nearestMode:Ve(ne)})},1431381:(i,c,f,$,E,P,G)=>{a.Ea("Slice",i,{starts:c?Array.from(n().subarray(f>>>0,f+c>>>0)):[],ends:$?Array.from(n().subarray(E>>>0,E+$>>>0)):[],axes:P?Array.from(n().subarray(G>>>0,G+P>>>0)):[]})},1431612:i=>{a.Ea("Tile",i,void 0)},1431664:(i,c,f)=>{a.Ea("LayerNormalization",i,{axis:Number(c),epsilon:Number(f)})},1431771:(i,c,f)=>{a.Ea("InstanceNormalization",i,{epsilon:c,format:f?"NHWC":"NCHW"})},1431885:(i,c,f)=>{a.Ea("InstanceNormalization",i,{epsilon:c,format:f?"NHWC":"NCHW"})},1431999:i=>{a.Ea("Range",i,void 0)},1432052:(i,c)=>{a.Ea("Einsum",i,{equation:Ve(c)})},1432133:(i,c,f,$,E)=>{a.Ea("Pad",i,{mode:c,value:f,pads:$?Array.from(n().subarray(E>>>0,E+$>>>0)):[]})},1432265:i=>{a.Ea("Gelu",i,void 0)},1432317:i=>{a.Ea("BiasAdd",i,void 0)},1432372:i=>{a.Ea("BiasSplitGelu",i,void 0)},1432433:(i,c)=>{a.Ea("SkipLayerNormalization",i,{epsilon:c})},1432514:i=>a.wb(i),1432547:i=>a.yb(i),1432579:(i,c,f)=>{a.jb(i,c,f,!0)},1432618:(i,c,f)=>{a.jb(i,c,f)}};function $t(i){this.name="ExitStatus",this.message=`Program terminated with exit(${i})`,this.status=i}function xt(i){i.terminate(),i.onmessage=()=>{}}function Nt(i){(i=ie.Qa[i])||Ze(),ie.Eb(i)}function Pt(i){var c=ie.tb();if(!c)return 6;ie.Ya.push(c),ie.Qa[i.Xa]=c,c.Xa=i.Xa;var f={cmd:"run",start_routine:i.Gb,arg:i.rb,pthread_ptr:i.Xa};return C&&c.unref(),c.postMessage(f,i.Mb),0}var Lt=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Mt=(i,c,f)=>{c>>>=0;var $=c+f;for(f=c;i[f]&&!(f>=$);)++f;if(16<f-c&&i.buffer&&Lt)return Lt.decode(i.buffer instanceof SharedArrayBuffer?i.slice(c,f):i.subarray(c,f));for($="";c<f;){var E=i[c++];if(E&128){var P=i[c++]&63;if((E&224)==192)$+=String.fromCharCode((E&31)<<6|P);else{var G=i[c++]&63;E=(E&240)==224?(E&15)<<12|P<<6|G:(E&7)<<18|P<<12|G<<6|i[c++]&63,65536>E?$+=String.fromCharCode(E):(E-=65536,$+=String.fromCharCode(55296|E>>10,56320|E&1023))}}else $+=String.fromCharCode(E)}return $},Ve=(i,c)=>(i>>>=0)?Mt(o(),i,c):"";function Ft(i){if(A)return p(1,1,i);Ae=i,Ue()||(ie.Hb(),a.onExit&&a.onExit(i),Te=!0),w(i,new $t(i))}var Bt=i=>{if(Ae=i,A)throw Ct(i),"unwind";Ft(i)},ie={ab:[],Ya:[],mb:[],Qa:{},gb:function(){A?ie.vb():ie.ub()},ub:function(){Ge.unshift(()=>{yr(),ie.Bb(()=>Vt())})},vb:function(){ie.receiveObjectTransfer=ie.Db,ie.threadInitTLS=ie.lb,ie.setExitStatus=ie.kb,ae=!1},kb:function(i){Ae=i},Sb:["$terminateWorker"],Hb:function(){for(var i of ie.Ya)xt(i);for(i of ie.ab)xt(i);ie.ab=[],ie.Ya=[],ie.Qa=[]},Eb:function(i){var c=i.Xa;delete ie.Qa[c],ie.ab.push(i),ie.Ya.splice(ie.Ya.indexOf(i),1),i.Xa=0,an(c)},Db:function(){},lb:function(){ie.mb.forEach(i=>i())},Cb:i=>new Promise(c=>{i.onmessage=P=>{P=P.data;var G=P.cmd;if(P.targetThread&&P.targetThread!=Er()){var oe=ie.Qa[P.Rb];oe?oe.postMessage(P,P.transferList):K(\'Internal error! Worker sent a message "\'+G+\'" to target pthread \'+P.targetThread+", but that thread no longer exists!")}else G==="checkMailbox"?It():G==="spawnThread"?Pt(P):G==="cleanupThread"?Nt(P.thread):G==="killThread"?(P=P.thread,G=ie.Qa[P],delete ie.Qa[P],xt(G),an(P),ie.Ya.splice(ie.Ya.indexOf(G),1),G.Xa=0):G==="cancelThread"?ie.Qa[P.thread].postMessage({cmd:"cancel"}):G==="loaded"?(i.loaded=!0,c(i)):G==="alert"?alert("Thread "+P.threadId+": "+P.text):P.target==="setimmediate"?i.postMessage(P):G==="callHandler"?a[P.handler](...P.args):G&&K("worker sent an unknown command "+G)},i.onerror=P=>{throw K("worker sent an error! "+P.filename+":"+P.lineno+": "+P.message),P},C&&(i.on("message",function(P){i.onmessage({data:P})}),i.on("error",function(P){i.onerror(P)}));var f=[],$=["onExit","onAbort","print","printErr"],E;for(E of $)a.hasOwnProperty(E)&&f.push(E);i.postMessage({cmd:"load",handlers:f,urlOrBlob:a.mainScriptUrlOrBlob||e,wasmMemory:we,wasmModule:Se})}),Bb:function(i){i()},qb:function(){var i=W("ort-wasm-simd-threaded.worker.js");i=new Worker(i),ie.ab.push(i)},tb:function(){return ie.ab.length==0&&(ie.qb(),ie.Cb(ie.ab[0])),ie.ab.pop()}};a.PThread=ie;var St=i=>{for(;0<i.length;)i.shift()(a)};a.establishStackSpace=function(){var i=Er(),c=n()[i+52>>2>>>0];i=n()[i+56>>2>>>0],eo(c,c-i),Tr(c)};function Ct(i){if(A)return p(2,0,i);Bt(i)}a.invokeEntryPoint=function(i,c){i=to.apply(null,[i,c]),Ue()?ie.kb(i):sn(i)};function rn(i){this.fb=i-24,this.pb=function(c){s()[this.fb+4>>2>>>0]=c},this.ob=function(c){s()[this.fb+8>>2>>>0]=c},this.gb=function(c,f){this.nb(),this.pb(c),this.ob(f)},this.nb=function(){s()[this.fb+16>>2>>>0]=0}}var qe=0,je=0;function Ht(i,c,f,$){return A?p(3,1,i,c,f,$):At(i,c,f,$)}function At(i,c,f,$){if(i>>>=0,c>>>=0,f>>>=0,$>>>=0,typeof SharedArrayBuffer>"u")return K("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var E=[];return A&&E.length===0?Ht(i,c,f,$):(i={Gb:f,Xa:i,rb:$,Mb:E},A?(i.Ob="spawnThread",postMessage(i,E),0):Pt(i))}function jt(i,c,f){return A?p(4,1,i,c,f):0}function Kt(i,c){if(A)return p(5,1,i,c)}var qt=i=>{for(var c=0,f=0;f<i.length;++f){var $=i.charCodeAt(f);127>=$?c++:2047>=$?c+=2:55296<=$&&57343>=$?(c+=4,++f):c+=3}return c},kt=(i,c,f,$)=>{if(f>>>=0,!(0<$))return 0;var E=f;$=f+$-1;for(var P=0;P<i.length;++P){var G=i.charCodeAt(P);if(55296<=G&&57343>=G){var oe=i.charCodeAt(++P);G=65536+((G&1023)<<10)|oe&1023}if(127>=G){if(f>=$)break;c[f++>>>0]=G}else{if(2047>=G){if(f+1>=$)break;c[f++>>>0]=192|G>>6}else{if(65535>=G){if(f+2>=$)break;c[f++>>>0]=224|G>>12}else{if(f+3>=$)break;c[f++>>>0]=240|G>>18,c[f++>>>0]=128|G>>12&63}c[f++>>>0]=128|G>>6&63}c[f++>>>0]=128|G&63}}return c[f>>>0]=0,f-E},br=(i,c,f)=>kt(i,o(),c,f);function wr(i,c){if(A)return p(6,1,i,c)}function vr(i,c,f){if(A)return p(7,1,i,c,f)}function $r(i,c,f){return A?p(8,1,i,c,f):0}function xr(i,c){if(A)return p(9,1,i,c)}function lt(i,c,f){if(A)return p(10,1,i,c,f)}function dt(i,c,f,$){if(A)return p(11,1,i,c,f,$)}function Yt(i,c,f,$){if(A)return p(12,1,i,c,f,$)}function Xt(i,c,f,$){if(A)return p(13,1,i,c,f,$)}function Sr(i){if(A)return p(14,1,i)}function Dt(i,c){if(A)return p(15,1,i,c)}function Jt(i,c,f){if(A)return p(16,1,i,c,f)}var Zt=i=>{if(!Te)try{if(i(),!Ue())try{A?sn(Ae):Bt(Ae)}catch(c){c instanceof $t||c=="unwind"||w(1,c)}}catch(c){c instanceof $t||c=="unwind"||w(1,c)}};function Wt(i){i>>>=0,typeof Atomics.Nb=="function"&&(Atomics.Nb(n(),i>>2,i).value.then(It),i+=128,Atomics.store(n(),i>>2,1))}a.__emscripten_thread_mailbox_await=Wt;function It(){var i=Er();i&&(Wt(i),Zt(()=>Zn()))}a.checkMailbox=It;var ct=i=>i%4===0&&(i%100!==0||i%400===0),Qt=[0,31,60,91,121,152,182,213,244,274,305,335],er=[0,31,59,90,120,151,181,212,243,273,304,334];function tr(i,c,f,$,E,P,G,oe){return A?p(17,1,i,c,f,$,E,P,G,oe):-52}function rr(i,c,f,$,E,P,G){if(A)return p(18,1,i,c,f,$,E,P,G)}var Cr=i=>{var c=qt(i)+1,f=on(c);return f&&br(i,f,c),f},ht=[],nr=(i,c)=>{ht.length=0;var f;for(c>>=2;f=o()[i++>>>0];)c+=f!=105&c,ht.push(f==105?n()[c>>>0]:d()[c++>>>1]),++c;return ht},l=i=>{var c=un();return i=i(),Tr(c),i};function p(i,c){var f=arguments.length-2,$=arguments;return l(()=>{for(var E=ln(8*f),P=E>>3,G=0;G<f;G++){var oe=$[2+G];d()[P+G>>>0]=oe}return Jn(i,f,E,c)})}var h=[],x={},I=()=>{if(!V){var i={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:b||"./this.program"},c;for(c in x)x[c]===void 0?delete i[c]:i[c]=x[c];var f=[];for(c in i)f.push(`${c}=${i[c]}`);V=f}return V},V;function N(i,c){if(A)return p(19,1,i,c);i>>>=0,c>>>=0;var f=0;return I().forEach(function($,E){var P=c+f;for(E=s()[i+4*E>>2>>>0]=P,P=0;P<$.length;++P)r()[E++>>0>>>0]=$.charCodeAt(P);r()[E>>0>>>0]=0,f+=$.length+1}),0}function J(i,c){if(A)return p(20,1,i,c);i>>>=0,c>>>=0;var f=I();s()[i>>2>>>0]=f.length;var $=0;return f.forEach(function(E){$+=E.length+1}),s()[c>>2>>>0]=$,0}function Y(i){return A?p(21,1,i):52}function ee(i,c,f,$){return A?p(22,1,i,c,f,$):52}function Z(i,c,f,$,E){return A?p(23,1,i,c,f,$,E):70}var pe=[null,[],[]];function fe(i,c,f,$){if(A)return p(24,1,i,c,f,$);c>>>=0,f>>>=0,$>>>=0;for(var E=0,P=0;P<f;P++){var G=s()[c>>2>>>0],oe=s()[c+4>>2>>>0];c+=8;for(var te=0;te<oe;te++){var Q=o()[G+te>>>0],ne=pe[i];Q===0||Q===10?((i===1?B:K)(Mt(ne,0)),ne.length=0):ne.push(Q)}E+=oe}return s()[$>>2>>>0]=E,0}var T=[31,29,31,30,31,30,31,31,30,31,30,31],re=[31,28,31,30,31,30,31,31,30,31,30,31];function me(i){var c=Array(qt(i)+1);return kt(i,c,0,c.length),c}var pt=(i,c)=>{r().set(i,c>>>0)};function or(i,c,f,$){function E(O,ue,ye){for(O=typeof O=="number"?O.toString():O||"";O.length<ue;)O=ye[0]+O;return O}function P(O,ue){return E(O,ue,"0")}function G(O,ue){function ye(so){return 0>so?-1:0<so?1:0}var Et;return(Et=ye(O.getFullYear()-ue.getFullYear()))===0&&(Et=ye(O.getMonth()-ue.getMonth()))===0&&(Et=ye(O.getDate()-ue.getDate())),Et}function oe(O){switch(O.getDay()){case 0:return new Date(O.getFullYear()-1,11,29);case 1:return O;case 2:return new Date(O.getFullYear(),0,3);case 3:return new Date(O.getFullYear(),0,2);case 4:return new Date(O.getFullYear(),0,1);case 5:return new Date(O.getFullYear()-1,11,31);case 6:return new Date(O.getFullYear()-1,11,30)}}function te(O){var ue=O.Za;for(O=new Date(new Date(O.$a+1900,0,1).getTime());0<ue;){var ye=O.getMonth(),Et=(ct(O.getFullYear())?T:re)[ye];if(ue>Et-O.getDate())ue-=Et-O.getDate()+1,O.setDate(1),11>ye?O.setMonth(ye+1):(O.setMonth(0),O.setFullYear(O.getFullYear()+1));else{O.setDate(O.getDate()+ue);break}}return ye=new Date(O.getFullYear()+1,0,4),ue=oe(new Date(O.getFullYear(),0,4)),ye=oe(ye),0>=G(ue,O)?0>=G(ye,O)?O.getFullYear()+1:O.getFullYear():O.getFullYear()-1}i>>>=0,c>>>=0,f>>>=0,$>>>=0;var Q=n()[$+40>>2>>>0];$={Kb:n()[$>>2>>>0],Jb:n()[$+4>>2>>>0],cb:n()[$+8>>2>>>0],ib:n()[$+12>>2>>>0],eb:n()[$+16>>2>>>0],$a:n()[$+20>>2>>>0],Wa:n()[$+24>>2>>>0],Za:n()[$+28>>2>>>0],Tb:n()[$+32>>2>>>0],Ib:n()[$+36>>2>>>0],Lb:Q?Ve(Q):""},f=Ve(f),Q={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ne in Q)f=f.replace(new RegExp(ne,"g"),Q[ne]);var he="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),be="January February March April May June July August September October November December".split(" ");Q={"%a":O=>he[O.Wa].substring(0,3),"%A":O=>he[O.Wa],"%b":O=>be[O.eb].substring(0,3),"%B":O=>be[O.eb],"%C":O=>P((O.$a+1900)/100|0,2),"%d":O=>P(O.ib,2),"%e":O=>E(O.ib,2," "),"%g":O=>te(O).toString().substring(2),"%G":O=>te(O),"%H":O=>P(O.cb,2),"%I":O=>(O=O.cb,O==0?O=12:12<O&&(O-=12),P(O,2)),"%j":O=>{for(var ue=0,ye=0;ye<=O.eb-1;ue+=(ct(O.$a+1900)?T:re)[ye++]);return P(O.ib+ue,3)},"%m":O=>P(O.eb+1,2),"%M":O=>P(O.Jb,2),"%n":()=>`\n`,"%p":O=>0<=O.cb&&12>O.cb?"AM":"PM","%S":O=>P(O.Kb,2),"%t":()=>"	","%u":O=>O.Wa||7,"%U":O=>P(Math.floor((O.Za+7-O.Wa)/7),2),"%V":O=>{var ue=Math.floor((O.Za+7-(O.Wa+6)%7)/7);if(2>=(O.Wa+371-O.Za-2)%7&&ue++,ue)ue==53&&(ye=(O.Wa+371-O.Za)%7,ye==4||ye==3&&ct(O.$a)||(ue=1));else{ue=52;var ye=(O.Wa+7-O.Za-1)%7;(ye==4||ye==5&&ct(O.$a%400-1))&&ue++}return P(ue,2)},"%w":O=>O.Wa,"%W":O=>P(Math.floor((O.Za+7-(O.Wa+6)%7)/7),2),"%y":O=>(O.$a+1900).toString().substring(2),"%Y":O=>O.$a+1900,"%z":O=>{O=O.Ib;var ue=0<=O;return O=Math.abs(O)/60,(ue?"+":"-")+("0000"+(O/60*100+O%60)).slice(-4)},"%Z":O=>O.Lb,"%%":()=>"%"},f=f.replace(/%%/g,"\\0\\0");for(ne in Q)f.includes(ne)&&(f=f.replace(new RegExp(ne,"g"),Q[ne]($)));return f=f.replace(/\\0\\0/g,"%"),ne=me(f),ne.length>c?0:(pt(ne,i),ne.length-1)}function Ar(i){try{i()}catch(c){Ze(c)}}function pu(i){var c={},f;for(f in i)(function($){var E=i[$];c[$]=typeof E=="function"?function(){Ir.push($);try{return E.apply(null,arguments)}finally{Te||(Ir.pop()===$||Ze(),Qe&&gt===1&&Ir.length===0&&(gt=0,Je+=1,Ar(no),typeof Fibers<"u"&&Fibers.Ub()))}}:E})(f);return c}var gt=0,Qe=null,jn=0,Ir=[],Kn={},qn={},fu=0,nn=null,mu=[];function hu(){return new Promise((i,c)=>{nn={resolve:i,reject:c}})}function gu(){var i=on(65548),c=i+12;s()[i>>2>>>0]=c,s()[i+4>>2>>>0]=c+65536,c=Ir[0];var f=Kn[c];return f===void 0&&(f=fu++,Kn[c]=f,qn[f]=c),c=f,n()[i+8>>2>>>0]=c,i}function yu(){var i=n()[Qe+8>>2>>>0];return i=H[qn[i]],--Je,i()}function bu(i){if(!Te){if(gt===0){var c=!1,f=!1;i(($=0)=>{if(!Te&&(jn=$,c=!0,f)){gt=2,Ar(()=>oo(Qe)),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.resume(),$=!1;try{var E=yu()}catch(oe){E=oe,$=!0}var P=!1;if(!Qe){var G=nn;G&&(nn=null,($?G.reject:G.resolve)(E),P=!0)}if($&&!P)throw E}}),f=!0,c||(gt=1,Qe=gu(),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.pause(),Ar(()=>ro(Qe)))}else gt===2?(gt=0,Ar(ao),Yn(Qe),Qe=null,mu.forEach($=>Zt($))):Ze(`invalid state: ${gt}`);return jn}}function wu(i){return bu(c=>{i().then(c)})}ie.gb();var vu=[null,Ft,Ct,Ht,jt,Kt,wr,vr,$r,xr,lt,dt,Yt,Xt,Sr,Dt,Jt,tr,rr,N,J,Y,ee,Z,fe],$u={r:function(i,c,f){return wu(async()=>{await a.xb(i,c,f)})},b:function(i,c,f){throw i>>>=0,new rn(i).gb(c>>>0,f>>>0),qe=i,je++,qe},P:function(i){Xn(i>>>0,!y,1,!v,131072,!1),ie.lb()},n:function(i){i>>>=0,A?postMessage({cmd:"cleanupThread",thread:i}):Nt(i)},K:At,g:jt,V:Kt,F:wr,H:vr,y:$r,T:xr,L:lt,S:dt,p:Yt,G:Xt,D:Sr,U:Dt,E:Jt,q:()=>!0,B:function(i,c){i>>>=0,i==c>>>0?setTimeout(()=>It()):A?postMessage({targetThread:i,cmd:"checkMailbox"}):(i=ie.Qa[i])&&i.postMessage({cmd:"checkMailbox"})},N:function(){return-1},O:Wt,X:function(i){C&&ie.Qa[i>>>0].ref()},u:function(i,c,f){i=c+2097152>>>0<4194305-!!i?(i>>>0)+4294967296*c:NaN,f>>>=0,i=new Date(1e3*i),n()[f>>2>>>0]=i.getUTCSeconds(),n()[f+4>>2>>>0]=i.getUTCMinutes(),n()[f+8>>2>>>0]=i.getUTCHours(),n()[f+12>>2>>>0]=i.getUTCDate(),n()[f+16>>2>>>0]=i.getUTCMonth(),n()[f+20>>2>>>0]=i.getUTCFullYear()-1900,n()[f+24>>2>>>0]=i.getUTCDay(),i=(i.getTime()-Date.UTC(i.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,n()[f+28>>2>>>0]=i},v:function(i,c,f){i=c+2097152>>>0<4194305-!!i?(i>>>0)+4294967296*c:NaN,f>>>=0,i=new Date(1e3*i),n()[f>>2>>>0]=i.getSeconds(),n()[f+4>>2>>>0]=i.getMinutes(),n()[f+8>>2>>>0]=i.getHours(),n()[f+12>>2>>>0]=i.getDate(),n()[f+16>>2>>>0]=i.getMonth(),n()[f+20>>2>>>0]=i.getFullYear()-1900,n()[f+24>>2>>>0]=i.getDay(),c=(ct(i.getFullYear())?Qt:er)[i.getMonth()]+i.getDate()-1|0,n()[f+28>>2>>>0]=c,n()[f+36>>2>>>0]=-(60*i.getTimezoneOffset()),c=new Date(i.getFullYear(),6,1).getTimezoneOffset();var $=new Date(i.getFullYear(),0,1).getTimezoneOffset();i=(c!=$&&i.getTimezoneOffset()==Math.min($,c))|0,n()[f+32>>2>>>0]=i},w:function(i){i>>>=0;var c=new Date(n()[i+20>>2>>>0]+1900,n()[i+16>>2>>>0],n()[i+12>>2>>>0],n()[i+8>>2>>>0],n()[i+4>>2>>>0],n()[i>>2>>>0],0),f=n()[i+32>>2>>>0],$=c.getTimezoneOffset(),E=new Date(c.getFullYear(),6,1).getTimezoneOffset(),P=new Date(c.getFullYear(),0,1).getTimezoneOffset(),G=Math.min(P,E);return 0>f?n()[i+32>>2>>>0]=+(E!=P&&G==$):0<f!=(G==$)&&(E=Math.max(P,E),c.setTime(c.getTime()+6e4*((0<f?G:E)-$))),n()[i+24>>2>>>0]=c.getDay(),f=(ct(c.getFullYear())?Qt:er)[c.getMonth()]+c.getDate()-1|0,n()[i+28>>2>>>0]=f,n()[i>>2>>>0]=c.getSeconds(),n()[i+4>>2>>>0]=c.getMinutes(),n()[i+8>>2>>>0]=c.getHours(),n()[i+12>>2>>>0]=c.getDate(),n()[i+16>>2>>>0]=c.getMonth(),n()[i+20>>2>>>0]=c.getYear(),i=c.getTime()/1e3,Qn((ut=i,1<=+Math.abs(ut)?0<ut?+Math.floor(ut/4294967296)>>>0:~~+Math.ceil((ut-+(~~ut>>>0))/4294967296)>>>0:0)),i>>>0},s:tr,t:rr,A:function(i,c,f){function $(Q){return(Q=Q.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?Q[1]:"GMT"}i>>>=0,c>>>=0,f>>>=0;var E=new Date().getFullYear(),P=new Date(E,0,1),G=new Date(E,6,1);E=P.getTimezoneOffset();var oe=G.getTimezoneOffset(),te=Math.max(E,oe);s()[i>>2>>>0]=60*te,n()[c>>2>>>0]=+(E!=oe),i=$(P),c=$(G),i=Cr(i),c=Cr(c),oe<E?(s()[f>>2>>>0]=i,s()[f+4>>2>>>0]=c):(s()[f>>2>>>0]=c,s()[f+4>>2>>>0]=i)},e:()=>{Ze("")},c:function(i,c,f){return i>>>=0,c=nr(c>>>0,f>>>0),Rt[i].apply(null,c)},l:function(i,c,f){return i>>>=0,c=nr(c>>>0,f>>>0),Rt[i].apply(null,c)},o:function(){},k:function(){return Date.now()},W:()=>{throw Je+=1,"unwind"},C:function(){return 4294901760},d:()=>performance.timeOrigin+performance.now(),i:function(){return C?(ho(),zt(mo)).cpus().length:navigator.hardwareConcurrency},M:function(i,c,f,$){for(ie.Pb=c>>>0,h.length=f,c=$>>>0>>3,$=0;$<f;$++)h[$]=d()[c+$>>>0];return(0>i?Rt[-i-1]:vu[i]).apply(null,h)},z:function(i){i>>>=0;var c=o().length;if(i<=c||4294901760<i)return!1;for(var f=1;4>=f;f*=2){var $=c*(1+.2/f);$=Math.min($,i+100663296);var E=Math;$=Math.max(i,$);e:{E=E.min.call(E,4294901760,$+(65536-$%65536)%65536)-we.buffer.byteLength+65535>>>16;try{we.grow(E),de();var P=1;break e}catch{}P=void 0}if(P)return!0}return!1},Q:N,R:J,J:Bt,h:Y,m:ee,x:Z,j:fe,a:we||a.wasmMemory,I:or,f:function(i,c,f,$){return or(i>>>0,c>>>0,f>>>0,$>>>0)}};(function(){function i(f,$){return f=f.exports,f=pu(f),H=f=xu(f),ie.mb.push(H.Da),Oe.unshift(H.Y),Se=$,Vt(),f}var c={a:$u};if(yr(),a.instantiateWasm)try{return a.instantiateWasm(c,i)}catch(f){K("Module.instantiateWasm callback failed with error: "+f),g(f)}return mt(c,function(f){i(f.instance,f.module)}).catch(g),{}})(),a._OrtInit=(i,c)=>(a._OrtInit=H.Z)(i,c),a._OrtGetLastError=(i,c)=>(a._OrtGetLastError=H._)(i,c),a._OrtCreateSessionOptions=(i,c,f,$,E,P,G,oe,te,Q)=>(a._OrtCreateSessionOptions=H.$)(i,c,f,$,E,P,G,oe,te,Q),a._OrtAppendExecutionProvider=(i,c)=>(a._OrtAppendExecutionProvider=H.aa)(i,c),a._OrtAddFreeDimensionOverride=(i,c,f)=>(a._OrtAddFreeDimensionOverride=H.ba)(i,c,f),a._OrtAddSessionConfigEntry=(i,c,f)=>(a._OrtAddSessionConfigEntry=H.ca)(i,c,f),a._OrtReleaseSessionOptions=i=>(a._OrtReleaseSessionOptions=H.da)(i),a._OrtCreateSession=(i,c,f)=>(a._OrtCreateSession=H.ea)(i,c,f),a._OrtReleaseSession=i=>(a._OrtReleaseSession=H.fa)(i),a._OrtGetInputOutputCount=(i,c,f)=>(a._OrtGetInputOutputCount=H.ga)(i,c,f),a._OrtGetInputName=(i,c)=>(a._OrtGetInputName=H.ha)(i,c),a._OrtGetOutputName=(i,c)=>(a._OrtGetOutputName=H.ia)(i,c),a._OrtFree=i=>(a._OrtFree=H.ja)(i),a._OrtCreateTensor=(i,c,f,$,E,P)=>(a._OrtCreateTensor=H.ka)(i,c,f,$,E,P),a._OrtGetTensorData=(i,c,f,$,E)=>(a._OrtGetTensorData=H.la)(i,c,f,$,E),a._OrtReleaseTensor=i=>(a._OrtReleaseTensor=H.ma)(i),a._OrtCreateRunOptions=(i,c,f,$)=>(a._OrtCreateRunOptions=H.na)(i,c,f,$),a._OrtAddRunConfigEntry=(i,c,f)=>(a._OrtAddRunConfigEntry=H.oa)(i,c,f),a._OrtReleaseRunOptions=i=>(a._OrtReleaseRunOptions=H.pa)(i),a._OrtCreateBinding=i=>(a._OrtCreateBinding=H.qa)(i),a._OrtBindInput=(i,c,f)=>(a._OrtBindInput=H.ra)(i,c,f),a._OrtBindOutput=(i,c,f,$)=>(a._OrtBindOutput=H.sa)(i,c,f,$),a._OrtClearBoundOutputs=i=>(a._OrtClearBoundOutputs=H.ta)(i),a._OrtReleaseBinding=i=>(a._OrtReleaseBinding=H.ua)(i),a._OrtRunWithBinding=(i,c,f,$,E)=>(a._OrtRunWithBinding=H.va)(i,c,f,$,E),a._OrtRun=(i,c,f,$,E,P,G,oe)=>(a._OrtRun=H.wa)(i,c,f,$,E,P,G,oe),a._OrtEndProfiling=i=>(a._OrtEndProfiling=H.xa)(i),a._JsepOutput=(i,c,f)=>(a._JsepOutput=H.ya)(i,c,f),a._JsepGetNodeName=i=>(a._JsepGetNodeName=H.za)(i);var Er=a._pthread_self=()=>(Er=a._pthread_self=H.Aa)(),on=a._malloc=i=>(on=a._malloc=H.Ba)(i),Yn=a._free=i=>(Yn=a._free=H.Ca)(i);a.__emscripten_tls_init=()=>(a.__emscripten_tls_init=H.Da)();var Xn=a.__emscripten_thread_init=(i,c,f,$,E,P)=>(Xn=a.__emscripten_thread_init=H.Fa)(i,c,f,$,E,P);a.__emscripten_thread_crashed=()=>(a.__emscripten_thread_crashed=H.Ga)();var Jn=(i,c,f,$)=>(Jn=H.Ha)(i,c,f,$),an=i=>(an=H.Ia)(i),sn=a.__emscripten_thread_exit=i=>(sn=a.__emscripten_thread_exit=H.Ja)(i),Zn=a.__emscripten_check_mailbox=()=>(Zn=a.__emscripten_check_mailbox=H.Ka)(),Qn=i=>(Qn=H.La)(i),eo=(i,c)=>(eo=H.Ma)(i,c),un=()=>(un=H.Na)(),Tr=i=>(Tr=H.Oa)(i),ln=i=>(ln=H.Pa)(i),to=a.dynCall_ii=(i,c)=>(to=a.dynCall_ii=H.Ra)(i,c),ro=i=>(ro=H.Sa)(i),no=()=>(no=H.Ta)(),oo=i=>(oo=H.Ua)(i),ao=()=>(ao=H.Va)();a.___start_em_js=1432651,a.___stop_em_js=1432812;function xu(i){i=Object.assign({},i);var c=$=>()=>$()>>>0,f=$=>E=>$(E)>>>0;return i.__errno_location=c(i.__errno_location),i.pthread_self=c(i.pthread_self),i.malloc=f(i.malloc),i.stackSave=c(i.stackSave),i.stackAlloc=f(i.stackAlloc),i}a.keepRuntimeAlive=Ue,a.wasmMemory=we,a.stackAlloc=ln,a.stackSave=un,a.stackRestore=Tr,a.UTF8ToString=Ve,a.stringToUTF8=br,a.lengthBytesUTF8=qt,a.ExitStatus=$t,a.PThread=ie;var Or;it=function i(){Or||io(),Or||(it=i)};function io(){function i(){if(!Or&&(Or=!0,a.calledRun=!0,!Te)&&(A||St(Oe),m(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),!A)){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;){var c=a.postRun.shift();Me.unshift(c)}St(Me)}}if(!(0<He))if(A)m(a),A||St(Oe),startWorker(a);else{if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)Ge.unshift(a.preRun.shift());St(Ge),0<He||(a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),i()},1)):i())}}if(a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);0<a.preInit.length;)a.preInit.pop()();return io(),t.ready}})();typeof yo=="object"&&typeof gn=="object"?gn.exports=go:typeof define=="function"&&define.amd&&define([],()=>go)});var wo=ar((mc,_u)=>{_u.exports=\'"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>(0,eval)(fs.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason??e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err("worker.js received unknown command "+e.data.cmd),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed&&Module.__emscripten_thread_crashed(),a}}self.onmessage=handleMessage;\\n\'});var wn,sr,ur,Pr,lr,Ao,vn,ke=j(()=>{"use strict";wn=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},sr=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},ur=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],Pr=e=>{switch(e){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},lr=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Ao=e=>e==="float32"||e==="int32"||e==="int64"||e==="bool"||e==="float16"||e==="uint32",vn=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var Vu,Gu,Io,Eo,To,Uu,Ie,yt=j(()=>{"use strict";ke();Vu=["V","I","W","E","F"],Gu=(e,t)=>{console.log(`[${Vu[e]},${new Date().toISOString()}]${t}`)},To=(e,t)=>{Io=e,Eo=t},Uu=(e,t)=>{let r=lr(e),o=lr(Io);r>=o&&Gu(r,typeof t=="function"?t():t)},Ie=(...e)=>{Eo&&Uu(...e)}});var Oo,_o=j(()=>{"use strict";ke();Oo=(e,t)=>new(Pr(t))(e)});var Ro=j(()=>{"use strict"});var Mr,Nu,Po,xn,$n,Mo,Bo=j(()=>{"use strict";yt();Ro();Mr=e=>Math.ceil(e/16)*16,Nu=1,Po=()=>Nu++,xn=async(e,t,r,o)=>{let n=Mr(r),s=e.device.createBuffer({size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let u=e.getCommandEncoder();e.endComputePass(),u.copyBufferToBuffer(t,0,s,0,n),e.flush(),await s.mapAsync(GPUMapMode.READ);let d=s.getMappedRange();if(o){let a=o();return a.set(new Uint8Array(d,0,r)),a}else return new Uint8Array(d.slice(0,r))}finally{s.destroy()}},$n=class{constructor(t){this.backend=t;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map}upload(t,r){let o=r.buffer,n=r.byteOffset,s=r.byteLength,u=Mr(s),d=this.storageCache.get(t);if(!d)throw new Error("gpu data for uploading does not exist");if(d.originalSize!==s)throw new Error(`inconsistent data size. gpu data size=${d.originalSize}, data size=${s}`);let a=this.backend.device.createBuffer({mappedAtCreation:!0,size:u,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),m=a.getMappedRange();new Uint8Array(m).set(new Uint8Array(o,n,s)),a.unmap();let g=this.backend.getCommandEncoder();this.backend.endComputePass(),g.copyBufferToBuffer(a,0,d.gpuData.buffer,0,u),Ie("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(a)}memcpy(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("source gpu data for memcpy does not exist");let n=this.storageCache.get(r);if(!n)throw new Error("destination gpu data for memcpy does not exist");if(o.originalSize!==n.originalSize)throw new Error("inconsistent source and destination gpu data size");let s=Mr(o.originalSize),u=this.backend.getCommandEncoder();this.backend.endComputePass(),u.copyBufferToBuffer(o.gpuData.buffer,0,n.gpuData.buffer,0,s)}registerExternalBuffer(t,r,o){let n;if(o){if(n=this.externalBuffers.get(o),n===void 0)throw new Error("previous buffer is not registered");if(t===o)return Ie("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${n}, buffer is the same, skip.`),n;this.externalBuffers.delete(o)}else n=Po();return this.storageCache.set(n,{gpuData:{id:n,type:0,buffer:t},originalSize:r}),this.externalBuffers.set(t,n),Ie("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${n}, registered.`),n}unregisterExternalBuffer(t){let r=this.externalBuffers.get(t);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(t),Ie("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let o=Mr(t),n,s=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,u=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(s||u){let a=s?this.freeBuffers:this.freeUniformBuffers,m=a.get(o);m||(m=[],a.set(o,m)),m.length>0?n=m.pop():n=this.backend.device.createBuffer({size:o,usage:r})}else n=this.backend.device.createBuffer({size:o,usage:r});let d={id:Po(),type:0,buffer:n};return this.storageCache.set(d.id,{gpuData:d,originalSize:t}),Ie("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${d.id}`),d}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r=this.storageCache.get(t);if(!r)throw new Error("releasing data does not exist");return Ie("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("data does not exist");await xn(this.backend,o.gpuData.buffer,o.originalSize,r)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();this.buffersForUploadingPending=[];for(let t of this.buffersPending)(t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(t.size).push(t):(t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(t.size).push(t):t.destroy();this.buffersPending=[]}dispose(){this.freeBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map}},Mo=(...e)=>new $n(...e)});var Sn,se,Re=j(()=>{"use strict";Sn=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this._cacheKey||(this._cacheKey=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this._cacheKey}},se=e=>new Sn(e)});var Cn,et,k,Tt,Br,kr,Dr,ge=j(()=>{"use strict";Cn=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},et=class{static calcShape(t,r,o=!1){let n=t.length,s=r.length;if(n===0)return r;if(s===0)return t;let u=Math.max(t.length,r.length),d=new Array(u);if(o){if(n<2||s<2)return;let a=Cn.calcMatMulShape([t[n-2],t[n-1]],[r[s-2],r[s-1]]);if(a===void 0)return;[d[u-2],d[u-1]]=a}for(let a=o?3:1;a<=u;a++){let m=n-a<0?1:t[n-a],g=s-a<0?1:r[s-a];if(m!==g&&m>1&&g>1)return;d[u-a]=Math.max(m,g)}return d}static isValidBroadcast(t,r){let o=t.length,n=r.length;if(o>n)return!1;for(let s=1;s<=o;s++)if(t[o-s]!==1&&t[o-s]!==r[n-s])return!1;return!0}},k=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,o){let n=1;for(let s=r;s<o;s++){if(t[s]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");n*=t[s]}return n}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let o=new Array(r);o[r-1]=1,o[r-2]=t[r-1];for(let n=r-3;n>=0;--n)o[n]=o[n+1]*t[n+1];return o}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(o=>this.normalizeAxis(o,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(o=>t[o]):t.slice().reverse()}static padShape(t,r){let o=t.length;return t.map((n,s)=>n+r[s]+r[s+o])}static areEqual(t,r){return t.length!==r.length?!1:t.every((o,n)=>o===r[n])}},Tt=class e{static adjustPoolAttributes(t,r,o,n,s,u){if(!t&&o.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let d=0;d<r.length-2;d++)d>=o.length?o.push(r[d+2]):o[d]=r[d+2];for(let d=0;d<o.length;d++)if(d<n.length){if(n[d]<0)throw new Error("strides should be greater than or equal to 1")}else n.push(1);for(let d=0;d<o.length;d++)if(d<s.length){if(s[d]<0)throw new Error("dilations should be greater than or equal to 1")}else s.push(1);for(let d=0;d<o.length*2;d++)if(d<u.length){if(u[d]<0)throw new Error("pad should be greater than or equal to 1")}else u.push(0);for(let d=0;d<o.length;d++){if(o[d]<=0)throw new Error("kernel shapes need to be greater than 0");if(u[d]>=o[d]||u[d+o.length]>=o[d])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,o,n,s,u,d){if(d){if(s.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(n.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let a=0;a<t.length-2;a++)e.adjustPadAndReturnShape(t[a+(u?1:2)],r[a],o[a],n[a],s,a,a+t.length-2,d)}}static computePoolOutputShape(t,r,o,n,s,u,d){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let a=[r[0],r[1]];return e.computeShapeHelper(t,r,a,o,n,s,u,d),a}static computeConvOutputShape(t,r,o,n,s,u,d){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let a=[t[0],r[0]];return e.computeShapeHelper(!1,t,a,o,n,s,u,d),a}static computeShapeHelper(t,r,o,n,s,u,d,a){if(t)for(let m=0;m<r.length-2;m++)o.push(1);else for(let m=0;m<r.length-2;m++)o.push(e.adjustPadAndReturnShape(r[m+2],n[m],s[m],u[m],d,m,m+r.length-2,a))}static adjustPadAndReturnShape(t,r,o,n,s,u,d,a){let m=o*(n-1)+1;if(a&&a!=="NOTSET")switch(a){case"VALID":return s[u]=0,s[d]=0,Math.floor((t-m)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(o!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let S=((t+r-1)/r-1)*r+n-t;return s[u]=Math.floor(a==="SAME_LOWER"?(S+1)/2:S/2),s[d]=S-s[u],Math.floor((t+S-n)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+s[u]+s[d]-m)/r+1)}},Br=class{static getShapeOfGemmResult(t,r,o,n,s){if(t.length!==2||o.length!==2)throw new Error("shape need to be of size 2");let u,d,a;r?(u=t[1],d=t[0]):(u=t[0],d=t[1]);let m=-1;if(n?(a=o[0],m=1):(a=o[1],m=0),o[m]!==d)throw new Error("dimension mismatch");if(u<=0||a<=0||d<=0)throw new Error("invalid shape specified");if(s&&!et.isValidBroadcast(s,[u,a]))throw new Error("gemm: invalid bias shape for broadcast");return[u,a,d]}},kr=-34028234663852886e22,Dr=34028234663852886e22});var Lu,ko,Pe,In,ft,Ye,Ot,bt,Do,L,X,An,Wo,En,zo,ve=j(()=>{"use strict";ke();ge();Lu=64,ko=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},Pe=(e,t=1)=>{let r=ko(e,t);return typeof r=="string"?r:r[0]},In=e=>[{type:"uint32",data:e},{type:"uint32",data:k.computeStrides(e)}],ft=e=>e%4===0?4:e%2===0?2:1,Ye=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,Ot=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}f(${r})`,bt=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,Do=(e,t,r,o,n)=>{let s=typeof r=="number",u=s?r:r.length,d=[...new Array(u).keys()],a=u<2?"u32":u<=4?`vec${u}<u32>`:`array<u32, ${u}>`,m=ko(t,n),g=typeof m=="string"?m:m[1],S=typeof m=="string"?m:m[0],b={indices:a,value:g,storage:S,tensor:t},w=U=>typeof U=="string"?U:`${U}u`,v={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},y=s?"uniforms.":"",C=`${y}${e}_shape`,A=`${y}${e}_strides`,R="";for(let U=0;U<u-1;U++)R+=`\n    let dim${U} = current / ${A}[${U}];\n    let rest${U} = current % ${A}[${U}];\n    indices[${U}] = dim${U};\n    current = rest${U};\n    `;R+=`indices[${u-1}] = current;`;let W=u<2?"":`\n  fn o2i_${e}(offset: u32) -> ${b.indices} {\n    var indices: ${b.indices};\n    var current = offset;\n    ${R}\n    return indices;\n  }`,M=U=>(v.offsetToIndices=!0,u<2?U:`o2i_${e}(${U})`),D=[];if(u>=2)for(let U=u-1;U>=0;U--)D.push(`${A}[${U}] * (indices[${U}])`);let _=u<2?"":`\n  fn i2o_${e}(indices: ${b.indices}) -> u32 {\n    return ${D.join("+")};\n  }`,z=U=>(v.indicesToOffset=!0,u<2?U:`i2o_${e}(${U})`),F=(...U)=>u===0?"0u":`${b.indices}(${U.map(w).join(",")})`,q=(U,ce)=>u<2?`${U}`:`${U}[${ce}]`,le=(U,ce,de)=>u<2?`${U}=${de};`:`${U}[${ce}]=${de};`,B={},K=(U,ce)=>{v.broadcastedIndicesToOffset=!0;let de=`${ce.name}broadcastedIndicesTo${e}Offset`;if(de in B)return`${de}(${U})`;let We=[];for(let Ge=u-1;Ge>=0;Ge--){let Oe=ce.indicesGet("outputIndices",Ge+ce.rank-u);We.push(`${q(A,Ge)} * (${Oe} % ${q(C,Ge)})`)}return B[de]=`fn ${de}(outputIndices: ${ce.type.indices}) -> u32 {\n             return ${We.length>0?We.join("+"):"0u"};\n           }`,`${de}(${U})`},xe=(U,ce)=>(()=>{if(b.storage===b.value)return`${e}[${U}]=${ce};`;if(b.storage==="vec2<u32>"&&b.value==="i32")return`${e}[${U}]=vec2<u32>(u32(${ce}), select(0u, 0xFFFFFFFFu, ${ce} < 0));`;if(b.storage==="vec2<u32>"&&b.value==="u32")return`${e}[${U}]=vec2<u32>(u32(${ce}), 0u);`;if(b.storage==="u32"&&b.value==="vec4<bool>")return`${e}[${U}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ce}));`;throw new Error(`not supported combination of storage type ${b.storage} and value type ${b.value} yet`)})(),ae=U=>(()=>{if(b.storage===b.value)return`${e}[${U}]`;if(b.storage==="vec2<u32>"&&b.value==="i32")return`i32(${e}[${U}].x)`;if(b.storage==="vec2<u32>"&&b.value==="u32")return`u32(${e}[${U}].x)`;if(b.storage==="u32"&&b.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${U}] & 0xFFu), bool(${e}[${U}] & 0xFF00u), bool(${e}[${U}] & 0xFF0000u), bool(${e}[${U}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${b.storage} and value type ${b.value} yet`)})(),we=u<2?"":`\n  fn get_${e}ByIndices(indices: ${b.indices}) -> ${g} {\n    return ${ae(`i2o_${e}(indices)`)};\n  }`,H=u<2?"":(()=>{let U=d.map(de=>`d${de}: u32`).join(", "),ce=d.map(de=>`d${de}`).join(", ");return`\n  fn get_${e}(${U}) -> ${g} {\n    return get_${e}ByIndices(${F(ce)});\n  }`})(),Se=(...U)=>{if(U.length!==u)throw new Error(`indices length must be ${u}`);let ce=U.map(w).join(",");return u===0?ae("0u"):u===1?ae(ce[0]):(v.get=!0,v.getByIndices=!0,v.indicesToOffset=!0,`get_${e}(${ce})`)},Te=U=>u<2?ae(U):(v.getByIndices=!0,v.indicesToOffset=!0,`get_${e}ByIndices(${U})`),Ae=u<2?"":`\n  fn set_${e}ByIndices(indices: ${b.indices}, value: ${g}) {\n    ${xe(`i2o_${e}(indices)`,"value")}\n  }`,Ee=u<2?"":(()=>{let U=d.map(de=>`d${de}: u32`).join(", "),ce=d.map(de=>`d${de}`).join(", ");return`\n  fn set_${e}(${U}, value: ${g}) {\n    set_${e}ByIndices(${F(ce)}, value);\n  }`})();return{impl:()=>{let U=[];return s||(U.push(`const ${C} = ${b.indices}(${r.join(",")});`),U.push(`const ${A} = ${b.indices}(${k.computeStrides(r).join(",")});`)),v.offsetToIndices&&U.push(W),v.indicesToOffset&&U.push(_),v.broadcastedIndicesToOffset&&Object.values(B).forEach(ce=>U.push(ce)),v.set&&U.push(Ee),v.setByIndices&&U.push(Ae),v.get&&U.push(H),v.getByIndices&&U.push(we),U.join(`\n`)},type:b,offsetToIndices:M,indicesToOffset:z,broadcastedIndicesToOffset:K,indices:F,indicesGet:q,indicesSet:le,set:(...U)=>{if(U.length!==u+1)throw new Error(`indices length must be ${u}`);let ce=U[u];if(typeof ce!="string")throw new Error("value must be string");let de=U.slice(0,u).map(w).join(",");return u===0?xe("0u",ce):u===1?xe(de[0],ce):(v.set=!0,v.setByIndices=!0,v.indicesToOffset=!0,`set_${e}(${de}, ${ce})`)},setByOffset:xe,setByIndices:(U,ce)=>u<2?xe(U,ce):(v.setByIndices=!0,v.indicesToOffset=!0,`set_${e}ByIndices(${U}, ${ce});`),get:Se,getByOffset:ae,getByIndices:Te,usage:o?"input":"output",name:e,strides:A,shape:C,rank:u}},L=(e,t,r,o=1)=>Do(e,t,r,!0,o),X=(e,t,r,o=1)=>Do(e,t,r,!1,o),An=class{constructor(t){this.normalizedDispatchGroup=t;this.indicesHelpers=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=Lu){let r=typeof t=="number"?t:t[0],o=typeof t=="number"?1:t[1],n=typeof t=="number"?1:t[2],s=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,u=s?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_index) local_index : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>`,d=s?"let global_idx = global_id.x;":`let global_idx = (workgroup_id.z * ${this.normalizedDispatchGroup[0]*this.normalizedDispatchGroup[1]}u +\n          workgroup_id.y * ${this.normalizedDispatchGroup[0]}u + workgroup_id.x) * ${r*o*n}u + local_index;`;return`@compute @workgroup_size(${r}, ${o}, ${n})\n  fn main(${u}) {\n    ${d}\n  `}declareVariable(t,r){this.indicesHelpers.push(t),t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:t.type.indices}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:t.type.indices});let o=t.usage==="input"?"read":"read_write",n=t.type.storage;return`@group(0) @binding(${r}) var<storage, ${o}> ${t.name}: array<${n}>;`}declareVariables(...t){return t.map(r=>this.declareVariable(r,this.variableIndex++)).join(`\n`)}registerUniform(t,r){return this.uniforms.push({name:t,type:r}),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:r,type:o}of this.uniforms)t.push(`${r}:${o}`);return`\n      struct Uniforms { ${t.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.indicesHelpers.map(t=>t.impl()).join(`\n`)}},Wo=e=>new An(e),En=(e,t)=>{let r=e.length,o=[];for(let n=0;n<r;n++){let s=r-1-n,u=e[s]||1;(t[t.length-1-n]||1)>1&&u===1&&o.unshift(s)}return o},zo=e=>e<=4});var Fu,Vo,Hu,ju,wt,Go,Uo,dr=j(()=>{"use strict";ge();Re();ve();Fu=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},Vo=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,Hu=(e,t)=>k.sortBasedOnPerm(e,Vo(e.length,t)),ju=(e,t,r,o)=>{let n=[];n.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let s=0;s<t;++s)n.push(r.indicesSet("a",e[s],`i[${s}]`));return n.push("return a;}"),n.join(`\n`)},wt=(e,t)=>{let r=e.dataType,o=e.dims.length,n=Vo(o,t),s=zo(o),u=Hu(e.dims,n),d=s?u.length:u,a=s?o:e.dims,m=X("output",r,d),g=L("a",r,a),S=b=>`\n  ${b.registerUniform("output_size","u32").declareVariables(g,m)}\n\n  ${ju(n,o,g,m)}\n\n  ${b.mainStart()}\n    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${m.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${m.setByOffset("global_idx",g.getByIndices("aIndices"))}\n  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:s?["rank"]:["dims"]},getRunData:b=>{let w=k.size(u);return{outputs:[{dims:u,dataType:b[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:s?[{type:"uint32",data:w},...In(b[0].dims),...In(u)]:[{type:"uint32",data:w}]}},getShaderSource:S}},Go=(e,t)=>{Fu(e.inputs),e.compute(wt(e.inputs[0],t.perm))},Uo=e=>se({perm:e.perm})});var Ku,qu,Yu,Xu,Ju,Zu,Qu,el,tl,rl,tt,No,Lo,Fo,Ho,jo,Ko,qo,Yo,Xo,Jo,Zo=j(()=>{"use strict";ge();ve();Wr();dr();Ku={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},qu={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Yu={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Xu={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Ju=(e,t)=>{let r=[];for(let o=t-e;o<t;++o)r.push(o);return r},Zu=(e,t)=>{let r=[],o=e.length;for(let s=0;s<o;s++)t.indexOf(s)===-1&&r.push(e[s]);let n=t.map(s=>e[s]);return[r,n]},Qu=(e,t)=>{let r=e.length+t.length,o=[],n=0;for(let s=0;s<r;s++)t.indexOf(s)===-1?o.push(e[n++]):o.push(1);return o},el=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},tl=(e,t)=>{let r=[];if(!el(e,t)){for(let o=0;o<t;++o)e.indexOf(o)===-1&&r.push(o);e.forEach(o=>r.push(o))}return r},rl=(e,t,r,o,n,s,u)=>{let d=r[0].dims,a=k.size(s),m=k.size(u),g=L("_A",r[0].dataType,d),S=X("output",n,s),b=32,w=`\n          var<workgroup> aBestValues : array<${S.type.storage}, ${b}>;\n       `;return{name:e,shaderCache:t,getShaderSource:y=>`\n        ${y.registerUniform("reduceSize","u32").declareVariables(g,S)}\n        ${w}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${y.mainStart(b)}\n          let local_idx = local_id.x;\n\n          let outputIndex = global_idx / ${b};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = ${S.type.storage}(${Yu[o]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${b}) {\n           let candidate = ${S.type.storage}(${g.getByOffset("offset + k")});\n           bestValue = ${Ku[o]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${b}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${qu[o]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${S.setByOffset("outputIndex",`${o==="mean"?`bestValue / ${S.type.storage}(uniforms.reduceSize)`:`${Xu[o]}`}`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:s,dataType:n}],dispatchGroup:{x:a},programUniforms:[{type:"uint32",data:m}]})}},tt=(e,t,r,o)=>{let n=e.inputs.length===1?r:Tn(e.inputs,r),s=n.axes;s.length===0&&!n.noopWithEmptyAxes&&(s=e.inputs[0].dims.map((w,v)=>v));let u=k.normalizeAxes(s,e.inputs[0].dims.length),d=u,a=e.inputs[0],m=tl(d,e.inputs[0].dims.length);m.length>0&&(a=e.compute(wt(e.inputs[0],m),{inputs:[0],outputs:[-1]})[0],d=Ju(d.length,a.dims.length));let[g,S]=Zu(a.dims,d),b=g;n.keepDims&&(b=Qu(g,u)),e.compute(rl(t,{hint:n.cacheKey,inputDependencies:["type"]},[a],o,e.inputs[0].dataType,b,S),{inputs:[a]})},No=(e,t)=>{tt(e,"ReduceMeanShared",t,"mean")},Lo=(e,t)=>{tt(e,"ReduceL1Shared",t,"l1")},Fo=(e,t)=>{tt(e,"ReduceL2Shared",t,"l2")},Ho=(e,t)=>{tt(e,"ReduceLogSumExpShared",t,"logSumExp")},jo=(e,t)=>{tt(e,"ReduceMaxShared",t,"max")},Ko=(e,t)=>{tt(e,"ReduceMinShared",t,"min")},qo=(e,t)=>{tt(e,"ReduceProdShared",t,"prod")},Yo=(e,t)=>{tt(e,"ReduceSumShared",t,"sum")},Xo=(e,t)=>{tt(e,"ReduceSumSquareShared",t,"sumSquare")},Jo=(e,t)=>{tt(e,"ReduceLogSumShared",t,"logSum")}});var rt,nl,zr,Tn,nt,ol,al,il,sl,ul,ll,dl,cl,pl,fl,ot,Qo,ea,ta,ra,na,oa,aa,ia,sa,ua,Xe,Wr=j(()=>{"use strict";ge();Re();ve();Zo();rt=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},nl=e=>["","",`var value = ${e.getByOffset("inputOffset")};`,""],zr=(e,t,r,o,n,s,u=!1,d=!1)=>{let a=[],m=r[0].dims,g=k.normalizeAxes(n,r[0].dims.length),S=!d&&g.length===0;m.forEach((z,F)=>{S||g.indexOf(F)>=0?u&&a.push(1):a.push(z)});let b=[],w=L("_A",r[0].dataType,m),v=X("output",s,a),y=o(w,v,g),C=`inputOffset = ${w.indicesToOffset("inputIndices")};`,A=`let ${C};`,R=`var ${C};`,W=y[1]===""?"":R,M=(y[1]===""?A:C)+`\n`+y[2];for(let z=0,F=0;z<r[0].dims.length;z++)S||g.indexOf(z)>=0?(u&&F++,M=`for(var j${z}: u32 = 0; j${z} < ${r[0].dims[z]}; j${z}++) {\n                ${y[2].includes("lastIndex")?`let lastIndex = j${z};`:""}\n                ${w.indicesSet("inputIndices",z,`j${z}`)}\n                ${M}\n              }`):(b.push(`${w.indicesSet("inputIndices",z,v.indicesGet("outputIndices",F))};`),F++);let D=k.size(a);return{name:e,shaderCache:t,getShaderSource:z=>`\n        ${z.declareVariables(w,v)}\n\n        ${z.mainStart()}\n          ${z.guardAgainstOutOfBoundsWorkgroupSizes(D)}\n          var inputIndices: ${w.type.indices};\n          let outputIndices = ${v.offsetToIndices("global_idx")};\n\n          ${b.join(`\n`)}\n          ${y[0]}       // init ops for reduce max/min\n          ${W}\n          ${y[1]}\n          ${M}\n          ${y[3]}\n          ${y.length===4?v.setByOffset("global_idx","value"):y.slice(4).join(`\n`)}\n        }`,getRunData:()=>({outputs:[{dims:a,dataType:s}],dispatchGroup:{x:Math.ceil(D/64)}})}},Tn=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(o=>r.push(Number(o))),se({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},nt=(e,t,r,o)=>{let n=e.inputs,s=n.length===1?r:Tn(n,r);e.compute(zr(t,{hint:s.cacheKey},[n[0]],s.noopWithEmptyAxes&&s.axes.length===0?nl:o,s.axes,n[0].dataType,s.keepDims,s.noopWithEmptyAxes),{inputs:[0]})},ol=(e,t)=>{rt(e.inputs),nt(e,"ReduceLogSum",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${o.getByOffset("inputOffset")};`,"value = log(value);"])},al=(e,t)=>{rt(e.inputs),nt(e,"ReduceL1",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += abs(${o.getByOffset("inputOffset")});`,""])},il=(e,t)=>{rt(e.inputs),nt(e,"ReduceL2",t,(o,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${o.getByOffset("inputOffset")}; value += (t * t);`,"value = sqrt(value);"])},sl=(e,t)=>{rt(e.inputs),nt(e,"ReduceLogSumExp",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += exp(${o.getByOffset("inputOffset")});`,"value = log(value);"])},ul=(e,t)=>{rt(e.inputs),nt(e,"ReduceMax",t,(o,n,s)=>{let u=[];for(let d=0;d<o.rank;d++)(s.indexOf(d)>=0||s.length===0)&&u.push(o.indicesSet("inputIndices",d,0));return[`${u.join(`\n`)}`,`var value = ${o.getByOffset("inputOffset")};`,`value = max(value, ${o.getByOffset("inputOffset")});`,""]})},ll=(e,t)=>{rt(e.inputs),nt(e,"ReduceMean",t,(o,n,s)=>{let u=1;for(let d=0;d<o.rank;d++)(s.indexOf(d)>=0||s.length===0)&&(u*=e.inputs[0].dims[d]);return["var sum = f32(0);","",`sum += f32(${o.getByOffset("inputOffset")});`,`let value = ${n.type.value}(sum / ${u});`]})},dl=(e,t)=>{rt(e.inputs),nt(e,"ReduceMin",t,(o,n,s)=>{let u=[];for(let d=0;d<o.rank;d++)(s.indexOf(d)>=0||s.length===0)&&u.push(`inputIndices[${d}] = 0;`);return[`${u.join(`\n`)}`,`var value = ${o.getByOffset("inputOffset")};`,`value = min(value, ${o.getByOffset("inputOffset")});`,""]})},cl=(e,t)=>{rt(e.inputs),nt(e,"ReduceProd",t,(o,n)=>[`var value = ${n.type.storage}(1);`,"",`value *= ${o.getByOffset("inputOffset")};`,""])},pl=(e,t)=>{rt(e.inputs),nt(e,"ReduceSum",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${o.getByOffset("inputOffset")};`,""])},fl=(e,t)=>{rt(e.inputs),nt(e,"ReduceSumSquare",t,(o,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${o.getByOffset("inputOffset")}; value += t * t;`,""])},ot=(e,t,r)=>{if(t.length===0)return!!r;let o=1,n=1;for(let s=0;s<t.length;s++)t.indexOf(s)===-1?o*=e[s]:n*=e[s];return n<32&&o>1024},Qo=(e,t)=>{ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ll(e,t):No(e,t)},ea=(e,t)=>{ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?al(e,t):Lo(e,t)},ta=(e,t)=>{ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?il(e,t):Fo(e,t)},ra=(e,t)=>{ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?sl(e,t):Ho(e,t)},na=(e,t)=>{ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ul(e,t):jo(e,t)},oa=(e,t)=>{ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?dl(e,t):Ko(e,t)},aa=(e,t)=>{ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?cl(e,t):qo(e,t)},ia=(e,t)=>{ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?pl(e,t):Yo(e,t)},sa=(e,t)=>{ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?fl(e,t):Xo(e,t)},ua=(e,t)=>{ot(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ol(e,t):Jo(e,t)},Xe=e=>se(e)});var la,da,ca,pa,On,fa=j(()=>{"use strict";ke();Re();Wr();la=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},da=(e,t)=>se({axis:t.axis,keepDims:t.keepDims,selectLastIndex:t.selectLastIndex}),ca=(e,t)=>{la(e.inputs);let r=(n,s,u)=>{let d=[];for(let a=0;a<n.rank;a++)(u.indexOf(a)>=0||u.length===0)&&d.push(`inputIndices[${a}] = 0;`);return[`${d.join(`\n`)}`,`var value = ${n.getByOffset("inputOffset")};\nvar bestIndex : i32 = 0;`,`if (${n.getByOffset("inputOffset")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${n.getByOffset("inputOffset")};\n         bestIndex = i32(lastIndex);\n       }`,"",s.setByOffset("global_idx","bestIndex")]},o=e.inputs.length===1?t:da(e.inputs,t);e.compute(zr("ArgMin",{hint:o.cacheKey},[e.inputs[0]],r,[o.axis],7,o.keepDims),{inputs:[0]})},pa=(e,t)=>{la(e.inputs);let r=(n,s,u)=>{let d=[];for(let a=0;a<n.rank;a++)(u.indexOf(a)>=0||u.length===0)&&d.push(`inputIndices[${a}] = 0;`);return[`${d.join(`\n`)}`,`var value = ${n.getByOffset("inputOffset")};\nvar bestIndex : i32 = 0;`,`if (${n.getByOffset("inputOffset")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${n.getByOffset("inputOffset")};\n         bestIndex = i32(lastIndex);\n       }`,"",s.setByOffset("global_idx","bestIndex")]},o=e.inputs.length===1?t:da(e.inputs,t);e.compute(zr("argMax",{hint:o.cacheKey},[e.inputs[0]],r,[o.axis],7,o.keepDims),{inputs:[0]})},On=e=>se(e)});var ml,hl,ma,ha=j(()=>{"use strict";ge();ve();ml=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},hl=e=>{let t=e[0].dims,r=e[0].dims[2],o=k.size(t)/4,n=e[0].dataType,s=L("input",n,t,4),u=L("bias",n,[r],4),d=L("residual",n,t,4),a=X("output",n,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:g=>`\n  const channels = ${r}u / 4;\n  ${g.declareVariables(s,u,d,a)}\n\n  ${g.mainStart()}\n    ${g.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n    let value = ${s.getByOffset("global_idx")}\n      + ${u.getByOffset("global_idx % channels")} + ${d.getByOffset("global_idx")};\n    ${a.setByOffset("global_idx","value")}\n  }`}},ma=e=>{ml(e.inputs),e.compute(hl(e.inputs))}});var gl,$e,ga,ya,ba,wa,va,$a,xa,Sa,Ca,_n,yl,Aa,Ia,Ea,Ta,Vr,Oa,Gr,_a,Ra,Pa,Ma,Ba,ka,Da,Wa,za,Va,Ga,Ua,Na,La,Fa,Ha,ja,Rn=j(()=>{"use strict";ke();ge();Re();ve();gl=(e,t,r,o,n,s)=>{let u=Math.ceil(t/4),d="";typeof n=="string"?d=`${n}(a)`:d=n("a");let a=L("inputData",r,[u],4),m=X("outputData",o,[u],4);return`\n      ${e.registerUniform("vec_size","u32").declareVariables(a,m)}\n\n  ${s??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${a.getByOffset("global_idx")};\n    ${m.setByOffset("global_idx",d)}\n  }`},$e=(e,t,r,o,n,s=e.dataType)=>({name:t,shaderCache:{hint:n,inputDependencies:["type"]},getShaderSource:u=>gl(u,k.size(e.dims),e.dataType,s,r,o),getRunData:u=>({outputs:[{dims:e.dims,dataType:s}],dispatchGroup:{x:Math.ceil(k.size(u[0].dims)/64/4)},programUniforms:[{type:"uint32",data:Math.ceil(k.size(e.dims)/4)}]})}),ga=e=>{e.compute($e(e.inputs[0],"Abs","abs"))},ya=e=>{e.compute($e(e.inputs[0],"Acos","acos"))},ba=e=>{e.compute($e(e.inputs[0],"Acosh","acosh"))},wa=e=>{e.compute($e(e.inputs[0],"Asin","asin"))},va=e=>{e.compute($e(e.inputs[0],"Asinh","asinh"))},$a=e=>{e.compute($e(e.inputs[0],"Atan","atan"))},xa=e=>{e.compute($e(e.inputs[0],"Atanh","atanh"))},Sa=e=>se(e),Ca=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${t.to}`)}e.compute($e(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},_n=(e,t)=>{let r=Pe(e.inputs[0].dataType);e.compute($e(e.inputs[0],"Clip",o=>`clamp(${o}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${r}> = vec4(${r}(${t.min}));\n    const clip_max_: vec4<${r}> = vec4(${r}(${t.max}));\n`,t.cacheKey),{inputs:[0]})},yl=e=>{let t=e.length>=2?e[1].getFloat32Array()[0]:kr,r=e.length>=3?e[2].getFloat32Array()[0]:Dr;return se({min:t,max:r})},Aa=e=>{let t=yl(e.inputs);_n(e,t)},Ia=e=>{e.compute($e(e.inputs[0],"Ceil","ceil"))},Ea=e=>{e.compute($e(e.inputs[0],"Cos","cos"))},Ta=e=>{e.compute($e(e.inputs[0],"Cosh","cosh"))},Vr=e=>se(e),Oa=(e,t)=>{e.compute($e(e.inputs[0],"Elu",r=>`elu_vf32(${r})`,`\n  const elu_alpha_: f32 = f32(${t.alpha});\n\n  fn elu_f32(a: f32) -> f32 {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<f32>) -> vec4<f32> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},Gr=(e,t="f32")=>`\nconst r0: ${t} = 0.3275911;\nconst r1: ${t} = 0.254829592;\nconst r2: ${t} = -0.284496736;\nconst r3: ${t} = 1.421413741;\nconst r4: ${t} = -1.453152027;\nconst r5: ${t} = 1.061405429;\n\nfn erf_vf32(v: ${e}) -> ${e} {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,_a=e=>{let t=Pe(e.inputs[0].dataType);e.compute($e(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,Gr(`vec4<${t}>`,t)))},Ra=e=>{e.compute($e(e.inputs[0],"Exp","exp"))},Pa=e=>{e.compute($e(e.inputs[0],"Floor","floor"))},Ma=e=>{let t=Pe(e.inputs[0].dataType);e.compute($e(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,Gr(`vec4<${t}>`,t)))},Ba=(e,t)=>{e.compute($e(e.inputs[0],"LeakyRelu",r=>`select(leaky_relu_alpha_ * ${r}, ${r}, ${r} >= vec4<f32>(0.0))`,`const leaky_relu_alpha_: f32 = f32(${t.alpha});`,t.cacheKey))},ka=e=>{e.compute($e(e.inputs[0],"Not",t=>`!${t}`))},Da=e=>{e.compute($e(e.inputs[0],"Neg",t=>`-${t}`))},Wa=e=>{e.compute($e(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},za=e=>{e.compute($e(e.inputs[0],"Relu",t=>`select(vec4<f32>(0.0), ${t}, ${t} > vec4<f32>(0.0))`))},Va=e=>{e.compute($e(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},Ga=e=>{e.compute($e(e.inputs[0],"Sin","sin"))},Ua=e=>{e.compute($e(e.inputs[0],"Sinh","sinh"))},Na=e=>{e.compute($e(e.inputs[0],"Sqrt","sqrt"))},La=e=>{e.compute($e(e.inputs[0],"Tan","tan"))},Fa=e=>{e.compute($e(e.inputs[0],"Tanh","tanh"))},Ha=(e,t)=>(e.compute($e(e.inputs[0],"ThresholdedRelu",r=>`select(vec4<f32>(0.0), ${r}, ${r} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_: vec4<f32> = vec4<f32>(${t.alpha});`,t.cacheKey)),0),ja=e=>{e.compute($e(e.inputs[0],"Log","log"))}});var wl,vl,Ka,qa=j(()=>{"use strict";ge();ve();Rn();wl=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},vl=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=L("input",e[0].dataType,e[0].dims,4),o=L("bias",e[0].dataType,[e[0].dims[2]],4),n=X("output",e[0].dataType,t,4),s=k.size(t)/4;return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:d=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${d.declareVariables(r,o,n)}\n\n  ${Gr("vec4f")}\n\n  ${d.mainStart()}\n    ${d.guardAgainstOutOfBoundsWorkgroupSizes(s)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${n.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},Ka=e=>{wl(e.inputs),e.compute(vl(e.inputs))}});var $l,xl,at,Ya,Xa,Ja,Za,Qa,ei,ti,ri,ni,oi,ai=j(()=>{"use strict";ke();ge();ve();$l=(e,t,r,o,n,s,u,d,a,m,g)=>{let S=k.size(o),b=Math.ceil(S/4),w,v;typeof u=="string"?w=v=(M,D)=>`${u}((${M}),(${D}))`:typeof u=="function"?w=v=u:(w=u.scalar,v=u.vector);let y="",C=X("outputData",m,o,4),A=L("aData",d,t,4),R=L("bData",a,r,4);if(s){let M=D=>{let _=k.computeStrides(D),z=[];for(let F=D.length-1;F>=0;F--){let q=C.indicesGet("outputIndices",F+o.length-D.length);z.push(`${_[F]}u * (${q} % ${D[F]}u)`)}return z.length>0?z.join("+"):"0u"};y=`\n          fn calcOffsetA(outputIndices: ${C.type.indices}) -> u32 {\n            return ${M(t)};\n          }\n\n          fn calcOffsetB(outputIndices: ${C.type.indices}) -> u32 {\n            return ${M(r)};\n          }\n        `}let W;if(n)if(s){let M=k.size(t)===1,D=k.size(r)===1;M||D?W=C.setByOffset("global_idx",v(M?`${A.type.value}(${A.getByOffset("0")}.x)`:A.getByOffset("global_idx"),D?`${R.type.value}(${R.getByOffset("0")}.x)`:R.getByOffset("global_idx"))):W=`\n            let outputIndices = ${C.offsetToIndices("global_idx * 4u")};\n            let offsetA = calcOffsetA(outputIndices);\n            let offsetB = calcOffsetB(outputIndices);\n            ${C.setByOffset("global_idx",v(A.getByOffset("offsetA / 4u"),R.getByOffset("offsetB / 4u")))}\n          `}else W=C.setByOffset("global_idx",v(A.getByOffset("global_idx"),R.getByOffset("global_idx")));else{if(!s)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let M=(D,_,z="")=>{let F=`aData[indexA${_}][componentA${_}]`,q=`bData[indexB${_}][componentB${_}]`;return`\n            let outputIndices${_} = ${C.offsetToIndices(`global_idx * 4u + ${_}u`)};\n            let offsetA${_} = calcOffsetA(outputIndices${_});\n            let offsetB${_} = calcOffsetB(outputIndices${_});\n            let indexA${_} = offsetA${_} / 4u;\n            let indexB${_} = offsetB${_} / 4u;\n            let componentA${_} = offsetA${_} % 4u;\n            let componentB${_} = offsetB${_} % 4u;\n            ${D}[${_}] = ${z}(${w(F,q)});\n          `};m===9?W=`\n            var data = vec4<u32>(0);\n            ${M("data",0,"u32")}\n            ${M("data",1,"u32")}\n            ${M("data",2,"u32")}\n            ${M("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:W=`\n            ${M("outputData[global_idx]",0)}\n            ${M("outputData[global_idx]",1)}\n            ${M("outputData[global_idx]",2)}\n            ${M("outputData[global_idx]",3)}\n          `}return`\n        ${e.declareVariables(A,R,C)}\n\n        ${g??""}\n        ${y}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes(b)}\n        ${W}\n      }`},xl=(e,t,r,o,n,s,u=r.dataType)=>{let d=!k.areEqual(r.dims,o.dims),a=r.dims,m=k.size(r.dims),g=!1;if(d){let S=et.calcShape(r.dims,o.dims,!1);if(!S)throw new Error("Can\'t perform binary op on the given tensors");a=S,m=k.size(a);let b=k.size(r.dims)===1,w=k.size(o.dims)===1,v=1;for(let y=1;y<a.length;y++){let C=r.dims[r.dims.length-y]??1,A=o.dims[o.dims.length-y]??1;if(C===A)v*=C;else break}(v%4===0||b||w)&&(g=!0)}else g=!0;return{name:e,shaderCache:{hint:t},getShaderSource:S=>$l(S,r.dims,o.dims,a,g,d,n,r.dataType,o.dataType,u,s),getRunData:()=>({outputs:[{dims:a,dataType:u}],dispatchGroup:{x:Math.ceil(m/64/4)}})}},at=(e,t,r,o,n,s)=>{e.compute(xl(t,n??"",e.inputs[0],e.inputs[1],r,o,s))},Ya=e=>{at(e,"Add",(t,r)=>`${t}+${r}`)},Xa=e=>{at(e,"Div",(t,r)=>`${t}/${r}`)},Ja=e=>{at(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},Za=e=>{at(e,"Mul",(t,r)=>`${t}*${r}`)},Qa=e=>{let t=L("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;at(e,"Pow",{scalar:(o,n)=>`pow_custom(${o},${n})`,vector:(o,n)=>`pow_vector_custom(${o},${n})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},ei=e=>{at(e,"Sub",(t,r)=>`${t}-${r}`)},ti=e=>{at(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},ri=e=>{at(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},ni=e=>{at(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},oi=e=>{at(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}});var Cl,Al,Il,El,ii,si,ui=j(()=>{"use strict";ge();Re();ve();Cl=e=>{if(!e||e.length<1)throw new Error("too few inputs");let t=e[0].dataType,r=e[0].dims.length;for(let o of e){if(o.dataType!==t)throw new Error("input tensors should be one type");if(o.dims.length!==r)throw new Error("input tensors should have the same shape")}},Al=e=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,Il=(e,t)=>{let r=e.length,o=[];for(let n=0;n<r;++n){let s=t.setByOffset("global_idx",e[n].getByIndices("indices"));r===1?o.push(s):n===0?o.push(`if (inputIndex == ${n}u) { ${s} }`):n===r-1?o.push(`else { ${s} }`):o.push(`else if (inputIndex == ${n}) { ${s} }`)}return o.join(`\n`)},El=(e,t)=>{let r=e[0].dims.slice();if(t>=r.length||t<-1*r.length)throw new Error("axis specified for concat doesn\'t match input dimensionality");let o=t<0?r.length+t:t,n=r.slice(0);for(let w=1;w<e.length;w++){let v=e[w].dims.slice();for(let y=0;y<r.length;y++)if(y===o)n[o]+=v[y];else if(r[y]!==v[y])throw new Error("non concat dimensions must match")}let s=k.size(n),u=new Array(e.length),d=new Array(e.length),a=e[0].dataType,m=0;for(let w=0;w<e.length;++w)m+=e[w].dims[o],u[w]=m,d[w]=L(`input${w}`,a,e[w].dims);let g=X("output",a,n),S=g.indicesGet("indices",o),b=w=>`\n  ${w.declareVariables(...d,g)}\n\n  const sizeInConcatAxis = array<u32, ${u.length}>(${u.map(v=>`${v}u`).join(",")});\n  ${Al(u.length)}\n\n  ${w.mainStart()}\n    ${w.guardAgainstOutOfBoundsWorkgroupSizes(s)}\n\n    var indices = ${g.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${S});\n    if (inputIndex != 0u) {\n      ${S} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${Il(d,g)}\n  }`;return{name:"Concat",shaderCache:{hint:`${t}`},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:b}},ii=(e,t)=>{Cl(e.inputs),e.compute(El(e.inputs,t.axis))},si=e=>se({axis:e.axis})});var De,Ur,Nr,Lr=j(()=>{"use strict";De=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Ur=(e,t=!1,r=!1,o=3)=>"",Nr=(e,t)=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      // TODO uncomment the following line when activation is supported above.\n      // ${t?"value = activation(value, coords);":""}\n      `});var Fr,Pn=j(()=>{"use strict";Fr=`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    outShapeStrides.x, outShapeStrides.y, outShapeStrides.z, 1));\n}\n`});var Hr,jr,cr=j(()=>{"use strict";ge();Hr=(e,t=!1)=>{switch(e.activation){case"Relu":return{activationFunction:"",applyActivation:"value = max(value, 0.0);"};case"Sigmoid":return{activationFunction:"",applyActivation:"value = (1.0 / (1.0 + exp(-value)));"};case"Clip":return{activationFunction:`const clip_min_=f32(${e.clipMin});const clip_max_=f32(${e.clipMax});`,applyActivation:t?"value = clamp(value, vec4(clip_min_), vec4(clip_max_));":"value = clamp(value, clip_min_, clip_max_);"};default:return{activationFunction:"",applyActivation:""}}},jr=e=>{let t=e?.activation||"";if(t==="Clip"){let[r,o]=e?.activation_params||[kr,Dr];return{activation:t,clipMax:o,clipMin:r,activationCacheKey:`${t}:${r},${o}`}}return{activation:t,activationCacheKey:t}}});var Tl,Ol,pr,li,_l,fr,Rl,Kr,mr=j(()=>{"use strict";ge();ve();cr();Lr();Tl=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,Ol=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,pr=(e,t,r="f32",o,n=!1,s=32,u=!1,d=32)=>{let a=t[1]*e[1],m=t[0]*e[0],g=n?a:s,S=n?s:a,b=g/t[0],w=s/t[1];if(!((n&&b===4&&e[1]===4||!n&&(b===3||b===4))&&g%t[0]===0&&s%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${n} is true, innerElementSize ${b} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${b} must be 3 or 4.\n  tileAWidth ${g} must be divisible by workgroupSize[0]${t[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${b}<${r}>, ${g/b}>, ${S}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${r}>, ${m/e[0]}>, ${s}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${b};\nconst tileInner = ${s};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${u?"0":"i32(globalId.z)"};\n  ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${a};\n\n  let numTiles = ${u?`${Math.ceil(d/s)}`:"(dimInner - 1) / tileInner + 1"};\n  var kStart = ${u?`i32(globalId.z) * ${d}`:"0"};\n\n  var acc: array<vec4<${r}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${w};\n  for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${Tl(n,o)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${w}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${o?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${b===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${Ol(n,b)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},li=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,_l=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",fr=(e,t,r="f32",o,n=!1,s=32,u=!1,d=32,a=!1)=>{let m=e[1]*t[1],g=e[0]*t[0],S=n?m:s,b=n?s:m;if(!(b%t[1]===0&&S%t[0]===0&&s%t[1]===0))throw new Error(`tileAHight ${b} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${S} must be divisible by workgroupSize[0]${t[0]}, tileInner ${s} must be divisible by workgroupSize[1]${t[1]}`);let w=b/t[1],v=S/t[0],y=s/t[1],C=a?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${m};\n    let globalColStart = i32(workgroupId.x) * ${g};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${b}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${S}; inputCol = inputCol + ${t[0]}) {\n          ${li(n,o)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${g}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${o?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${r}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${m};\n\nlet tileRowA = i32(localId.y) * ${w};\nlet tileColA = i32(localId.x) * ${v};\nlet tileRowB = i32(localId.y) * ${y};\n// Loop over shared dimension.\nfor (var t = 0; t < numTiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${w}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${v}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${li(n,o)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${y}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${o?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${r}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${_l(n)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${r}, ${S}>, ${b}>;\n  var<workgroup> mm_Bsub : array<array<${r}, ${g}>, ${s}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${s};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${u?"0":"i32(globalId.z)"};\n    ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n    let numTiles = ${u?`${Math.ceil(d/s)}`:"(dimInner - 1) / tileInner + 1"};\n    var kStart = ${u?`i32(globalId.z) * ${d}`:"0"};\n\n    var acc : array<array<${r}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${C}\n  }\n`},Rl=(e,t,r,o,n,s=!1)=>{let u=n[0],d=n[1],a=n[2],m=o[0],g=o[1],S=o[2],b=o[3],w=En(u,a),v=En(d,a),y=Pe(o[0].type.tensor),C=()=>{let W=g.rank,M=m.rank,D=`var aIndices: ${g.type.indices};`;for(let _=W-2-1,z=M-1;_>=0;_--,z--)D+=`\naIndices[${_}] = ${M>1?`batchIndices[${z}]`:"batchIndices"};`;return w.forEach(_=>{D+=`\naIndices[${_}] = 0;`}),D+=`\naIndices[${W-2}] = u32(row);\n                   aIndices[${W-1}] = u32(colIn);`,D},A=()=>{let W=S.rank,M=m.rank,D=`var bIndices: ${S.type.indices};`;for(let _=W-2-1,z=M-1;_>=0;_--,z--)D+=`\nbIndices[${_}] = ${M>1?`batchIndices[${z}]`:"batchIndices"};`;return v.forEach(_=>{D+=`\nbIndices[${_}] = 0;`}),D+=`\nbIndices[${W-2}] = u32(row);\n                   bIndices[${W-1}] = u32(colIn);`,D};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${m.type.indices}) -> ${De(e,y)} {\n      var value = ${De(e,y)}(0.0);\n      let col = colIn * ${e};\n      if(row < dimAOuter && col < dimInner)\n      {\n        ${C()}\n        value = ${g.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${m.type.indices}) -> ${De(e,y)} {\n      var value = ${De(e,y)}(0.0);\n      let col = colIn * ${e};\n      if(row < dimInner && col < dimBOuter)\n      {\n        ${A()}\n        value = ${S.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${De(e,y)}) {\n      let col = colIn * ${e};\n      if (row < dimAOuter && col < dimBOuter) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${s?"bias[colIn]":`${De(e,y)}(bias[row])`};`:""}\n        ${r}\n        ${b.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},Kr=(e,t,r,o,n=!1)=>{let s=e[0].dims,u=e[1].dims,d=s.slice(0,-2),a=u.slice(0,-2),m=o?o.slice(0,-2):r.slice(0,-2),g=L("batchDims",e[0].dataType,m),S=[g],b=[d,a,m],w=k.size(m),v=s[s.length-2],y=s[s.length-1],C=u[u.length-1],A=y%4===0&&C%4===0,{activationFunction:R,applyActivation:W}=Hr(t,A),M=v<=8?[4,1,1]:[4,4,1],D=[8,8,1],_=[Math.ceil(C/D[0]/M[0]),Math.ceil(v/D[1]/M[1]),Math.ceil(w/D[2]/M[2])],z=Pe(e[0].dataType),F=A?4:1,q=L("a",e[0].dataType,[...d,v,y/F],F),le=L("b",e[1].dataType,[...a,y,C/F],F),B=X("result",e[0].dataType,[w,v,C/F],F);S.push(q),S.push(le),S.push(B);let K=[q,le],xe=e.length>2,ae=Rl(F,xe,W,S,b,n);if(xe){let H=n?F:1;K.push(L("bias",e[2].dataType,e[2].dims,H))}let we=H=>`\n  const dimAOuter: i32 = ${v};\n  const dimBOuter: i32 = ${C};\n  const dimInner: i32 = ${y};\n  ${H.declareVariables(...K,B)}\n  ${R}\n  ${ae}\n  ${A?pr(M,D,z,g):fr(M,D,z,g)}\n                   ${g.impl()}`;return{name:"MatMul",shaderCache:{hint:t.activationCacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:_[0],y:_[1],z:_[2]}}),getShaderSource:we}}});var Pl,di,ci=j(()=>{"use strict";yt();ge();ve();Lr();Pn();mr();Pl=(e,t,r,o,n=!1,s,u=!1,d=4,a=4,m=4,g="f32")=>{let S=le=>{switch(le){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${g}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${le} is not supported.`)}},b=le=>{switch(le){case 1:return"return w[row * wShape[3] + colIn];";case 4:return"return w[row * wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${le} is not supported.`)}},w=e?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,v=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,y=e?"xShape[1]":"xShape[2]",C=e?"xShape[2]":"xShape[3]",A=e?"row":"col",R=e?"col":"row",W=`\n    let inChannels = wShape[2];\n    let outWidth = ${e?"outShape[2]":"outShape[3]"};\n    let outRow = ${A} / outWidth;\n    let outCol = ${A} % outWidth;\n\n    let WRow = ${R} / (filterDims[1] * inChannels);\n    let WCol = ${R} / inChannels % filterDims[1];\n    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];\n    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];\n    let xCh = ${R} % inChannels;\n    var resData = ${De(d,g)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the \'same\' padding type.\n    if (xRow >= 0 && xRow < ${y} && xCol >= 0 && xCol < ${C}) {\n      ${w}\n      let xIndex = getIndexFromCoords4D(coord, xShape);\n      ${S(d)}\n    }\n    return resData;`,M=e?t&&o?`\n    let col = colIn * ${d};\n    ${W}`:`\n    let col = colIn * ${d};\n    if (row < dimAOuter && col < dimInner) {\n      ${W}\n    }\n    return ${De(d,g)}(0.0);`:o&&r?`\n    let col = colIn * ${d};\n    ${W}`:`\n    let col = colIn * ${d};\n    if (row < dimInner && col < dimBOuter) {\n      ${W}\n    }\n    return ${De(d,g)}(0.0);`,D=`${b(a)}`,_=De(m,g),z=e?De(d,g):De(a,g),F=e?De(a,g):De(d,g);return`\n    ${Ur(s,u,m===4,4)}\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${z} {\n      ${e?M:D}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${F} {\n      ${e?D:M}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${_}) {\n      let col = colIn * ${m};\n      if (row < dimAOuter && col < dimBOuter)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"outShape[2]":"outShape[3]"};\n      ${v}\n      ${Nr(n,s)}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},di=(e,t,r,o,n,s,u,d)=>{let a=t.format==="NHWC",m=a?e[0].dims[3]:e[0].dims[1],g=r[0],S=a?r[2]:r[3],b=a?r[1]:r[2],w=a?r[3]:r[1],v=a&&(m%4===0||m%3===0)&&w%4===0,y=a?w:S*b,C=a?S*b:w,A=[8,8,1],R=o<=8?[4,1,1]:[4,4,1],W=[Math.ceil(y/A[0]/R[0]),Math.ceil(C/A[1]/R[1]),Math.ceil(g/A[2]/R[2])];Ie("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${W}`);let M=v?a&&m%4!==0?3:4:R[0],D=A[1]*R[1],_=A[0]*R[0],z=Math.max(A[0]*M,A[1]),F=o%D===0,q=n%_===0,le=s%z===0,B=v?[M,4,4]:[1,1,1],K=Pe(e[0].dataType),xe=[`@group(0) @binding(0) var<storage, read> x: array<${v&&M===4?`vec4<${K}>`:K}>;`,`@group(0) @binding(1) var<storage, read> w: array<${v?`vec4<${K}>`:K}>;`],ae=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${v?`vec4<${K}>`:K}) {\n        result[flatIndex] = ${v?`vec4<${K}>`:K}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${v?`vec4<${K}>`:K}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${v?"/ 4":""}, value);\n      }`;return u&&(xe.push(`@group(0) @binding(2) var<storage, read> bias: array<${v?`vec4<${K}>`:K}>;`),ae+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${v?`vec4<${K}>`:K} {\n          return bias[coords.${a?"w":"y"}${v?"/ 4":""}];\n        }`),{name:"Conv2DMatMul",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:W[0],y:W[1],z:W[2]}}),getShaderSource:()=>`\n        ${Fr}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${xe.join("")}\n        @group(0) @binding(${xe.length}) var<storage, read_write> result: array<${v?`vec4<${K}>`:K}>;\n        //@group(0) @binding(${xe.length+1}) var<uniform> uniforms: Uniforms;\n\n        const xShape : vec4<i32> = vec4<i32>(${e[0].dims.join(",")});\n        const wShape : vec4<i32> = vec4<i32>(${e[1].dims.join(",")});\n        const outShape : vec4<i32> = vec4<i32>(${r.join(",")});\n        const outShapeStrides : vec3<i32> = vec3<i32>(${k.computeStrides(r).slice(0,3).join(",")});\n        const filterDims : vec2<i32> = vec2<i32>(${t.kernelShape[0]}, ${t.kernelShape[1]});\n        const pad : vec2<i32> = vec2<i32>(${t.pads[0]}, ${t.pads[1]});\n        const stride : vec2<i32> = vec2<i32>(${t.strides[0]}, ${t.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${t.dilations[0]}, ${t.dilations[1]});\n        const dimAOuter : i32 = ${o};\n        const dimBOuter : i32 = ${n};\n        const dimInner : i32 = ${s};\n        ${ae}\n        ${Pl(a,F,q,le,u,t.activation.toLowerCase(),!1,B[0],B[1],B[2],K)}\n            ${v?pr(R,A,K,void 0,!a,z):fr(R,A,K,void 0,!a,z,!1,void 0,d)}`}}});var Mn,pi=j(()=>{"use strict";ge();ve();kn();cr();Mn=(e,t,r)=>{let o=e.length>2,n=o?"value += b[output_channel];":"",s=e[0].dims,u=e[1].dims,d=u[0]/t.group,{activationFunction:a,applyActivation:m}=Hr(t),g=t.format==="NHWC",S=Bn(s,u,t.dilations,t.pads,t.strides,g),b=k.size(S),w=X("output",e[0].dataType,S),v=L("x",e[0].dataType,s),y=L("w",e[1].dataType,u),C=[v,y];o&&C.push(L("b",e[2].dataType,e[2].dims));let A=R=>`\n  const strides: vec2<u32> = vec2(${t.strides[0]}u, ${t.strides[1]}u);\n  const pads: vec2<u32> = vec2(${t.pads[0]}u, ${t.pads[1]}u);\n\n  ${R.declareVariables(...C,w)}\n\n  ${a}\n\n  ${R.mainStart()}\n    ${R.guardAgainstOutOfBoundsWorkgroupSizes(b)}\n\n    let outputIndices = ${w.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${g?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${g?1:2}], outputIndices[${g?2:3}]) * strides - pads;\n    let group_id: u32 = output_channel / ${d}u;\n\n    var value: ${w.type.value} = ${w.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < ${u[1]}u; wInChannel++) {\n      let input_channel = group_id * ${u[1]}u + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < ${u[2]}u; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * ${t.dilations[0]}u;\n\n        if (xHeight < 0u || xHeight >= ${s[g?1:2]}u) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < ${u[3]}u; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * ${t.dilations[1]}u;\n          if (xWidth < 0u || xWidth >= ${s[g?2:3]}u) {\n            continue;\n          }\n\n          let xVal = ${g?v.get("batch","xHeight","xWidth","input_channel"):v.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${y.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${n}\n    ${m}\n    ${w.setByOffset("global_idx","value")}\n  }`;return{name:"GroupedConv",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r?r(S):S,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(b/64)}}),getShaderSource:A}}});var Bn,fi,Ml,mi,Dn,Bl,kl,Wn,kn=j(()=>{"use strict";ge();Re();ci();mr();pi();cr();dr();Bn=(e,t,r,o,n,s)=>{let u=e[0],d=e.slice(s?1:2,s?3:4),a=d.length,m=t[0],S=t.slice(2).map((v,y)=>v+(v-1)*(r[y]-1)),w=d.map((v,y)=>v+o[y]+o[y+a]).map((v,y)=>Math.floor((v-S[y]+n[y])/n[y]));return w.splice(0,0,u),w.splice(s?3:1,0,m),w},fi=[2,3,1,0],Ml=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[1]*t.group;if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==n*2)throw new Error(`pads should be ${n*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},mi=(e,t)=>{let r=e.kernelShape.slice();for(let s=2;s<t[1].dims.length;++s)r[s-2]===0&&(r[s-2]=t[1].dims[s]);let o=e.pads.slice();Tt.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,o,e.format==="NHWC",e.autoPad);let n=Object.assign({},e);return Object.assign(n,{kernelShape:r,pads:o,cacheKey:e.cacheKey}),n},Dn=e=>{let t=jr(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],n=e.dilations,s=e.group,u=e.kernel_shape,d=e.pads,a=e.strides,m=e.w_is_const();return se({autoPad:o,format:r,dilations:n,group:s,kernelShape:u,pads:d,strides:a,wIsConst:m,...t})},Bl=(e,t,r)=>{let o=mi(r,t);if(r.group!==1){e.compute(Mn(t,o));return}let n=r.format==="NHWC",s=t.length===3,u=t[0].dims[n?1:2],d=t[0].dims[n?2:3],a=t[0].dims[n?3:1],m=t[1].dims[2],g=t[1].dims[3],S=Bn(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,n),b=S[n?1:2],w=S[n?2:3],v=S[n?3:1],y=n&&m===u&&g===d&&r.pads[0]===0&&r.pads[1]===0;if(y||m===1&&g===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let _=S[0],z,F,q,le=[];if(n){let B=e.kernelCustomData.wT??e.compute(wt(t[1],fi),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=B),y){let K=u*d*a;z=t[0].reshape([1,_,K]),F=B.reshape([1,K,v]),q=[1,_,v]}else z=t[0].reshape([_,u*d,a]),F=B.reshape([1,a,v]),q=[_,b*w,v];le.push(z),le.push(F)}else z=t[0].reshape([_,a,u*d]),F=t[1].reshape([1,v,a]),q=[_,v,b*w],le.push(F),le.push(z);s&&le.push(t[2]),e.compute(Kr(le,o,S,q,n),{inputs:le});return}let C=!0,A=e.kernelCustomData.wT??e.compute(wt(t[1],fi),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=A);let R=[t[0],A];s&&R.push(t[2]);let W=n?b*w:v,M=n?v:b*w,D=m*g*a;e.compute(di(R,o,S,W,M,D,s,C),{inputs:R})},kl=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let n=[0,t.pads[0],0,t.pads[1]],s=[1].concat(t.strides),u=[1].concat(t.dilations),d=[1].concat(t.kernelShape),a=mi({...t,pads:n,strides:s,dilations:u,kernelShape:d},o);e.compute(Mn(o,a,m=>r?[m[0],m[2],m[3]]:[]))},Wn=(e,t)=>{Ml(e.inputs,t),e.inputs[0].dims.length===3?kl(e,t):Bl(e,e.inputs,t)}});var Dl,hi,gi=j(()=>{"use strict";yt();ge();Lr();Pn();mr();Dl=(e,t=!1,r,o=!1,n=4)=>{let s=De(n,"f32"),u=A=>{switch(A){case 1:return"return W[getIndexFromCoords4D(coord, wShape)];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = W[getIndexFromCoords4D(coord, wShape)];\n            let v1 = W[getIndexFromCoords4D(coord1, wShape)];\n            let v2 = W[getIndexFromCoords4D(coord2, wShape)];\n            let v3 = W[getIndexFromCoords4D(coord3, wShape)];\n            return vec4<f32>(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${A} is not supported.`)}},d=e?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,a=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,m=e?"outBackprop[1]":"outBackprop[2]",g=e?"outBackprop[2]":"outBackprop[3]",S=e?"row":"col",b=e?"col":"row",w=`\n      let inChannels = ${e?"outBackprop[3]":"outBackprop[1]"};\n      let outWidth = ${e?"outShape[2]":"outShape[3]"};\n      let outRow = ${S} / outWidth;\n      let outCol = ${S} % outWidth;\n\n      let WRow = ${b} / (filterDims[1] * inChannels);\n      let WCol = ${b} / inChannels % filterDims[1];\n      let xR = f32(outRow - pads[0] + dilation[0] * WRow) / f32(strides[0]);\n      let xC = f32(outCol - pads[1] + dilation[1] * WCol) / f32(strides[1]);\n      if (xR < 0.0 || xR >= f32(${m}) || fract(xR) > 0.0) {\n        return ${s}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${g}) || fract(xC) > 0.0) {\n        return ${s}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${b} % inChannels;\n      ${d}\n      return x[getIndexFromCoords4D(coord, xShape)/${n}];`,v=e?`\n      let col = colIn * ${n};\n      if (row < dimAOuter && col < dimInner) {\n        ${w}\n      }\n      return ${s}(0.0);`:`\n      let col = colIn * ${n};\n      if (row < dimInner && col < dimBOuter) {\n        ${w}\n      }\n      return ${s}(0.0);`,y=`\n      let col = colIn * ${n};\n      let inChannels = ${e?"outBackprop[3]":"outBackprop[1]"};\n      let coordX = filterDims.x - 1 - row / (filterDims[1] * inChannels);\n      let coordY = filterDims.y - 1 - (row / inChannels) % filterDims[1];\n      if (${e?"row < dimInner && col < dimBOuter":"row < dimInner && col < dimAOuter"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${u(n)}\n      }\n      return ${s}(0.0);\n      `;return`\n  ${Ur(r,o,n===4,4)}\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${s} {\n    ${e?v:y}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${s} {\n    ${e?y:v}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${s}) {\n    let col = colIn * ${n};\n    if (row < dimAOuter && col < dimBOuter) {\n      var value = valueInput;\n      let outWidth = ${e?"outShape[2]":"outShape[3]"};\n      ${a}\n      ${Nr(t,r)}\n      result[getIndexFromCoords4D(coords, outShape)/${n}] = value;\n    }\n  }`},hi=(e,t,r,o,n,s,u,d)=>{let a=t.format==="NHWC",m=a?e[0].dims[3]:e[0].dims[1],g=r[0],S=a?r[2]:r[3],b=a?r[1]:r[2],w=a?r[3]:r[1],v=a?m%4===0&&w%4===0:S%4===0&&w%4===0,y=a?w:S*b,C=a?S*b:w,A=v?[8,8,1]:[y<=4||C<=4?4:16,y>4&&C<=4?4:16,1],R=v?[4,4,1]:[y<=4?1:4,y>4&&C<=4?1:4,1],W=[Math.ceil(y/A[0]/R[0]),Math.ceil(C/A[1]/R[1]),Math.ceil(g/A[2]/R[2])];Ie("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${W}`);let M=v?4:1,D=Math.max(A[0]*M,A[1]),_=[`@group(0) @binding(0) var<storage, read> x: array<${v?"vec4<f32>":"f32"}>;`,"@group(0) @binding(1) var<storage, read> W: array<f32>;"],z="";return u&&(_.push(`@group(0) @binding(2) var<storage, read> bias: array<${v?"vec4<f32>":"f32"}>;`),z+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${v?"vec4<f32>":"f32"} {\n          return bias[coords.${a?"w":"y"}${v?"/ 4":""}];\n        }`),{name:"Conv2DTransposeMatMul",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:W[0],y:W[1],z:W[2]}}),getShaderSource:()=>`\n        ${Fr}\n        ${_.join(`\n`)}\n        @group(0) @binding(${_.length}) var<storage, read_write> result: array<${v?"vec4<f32>":"f32"}>;\n        const outBackprop : vec4<i32> = vec4<i32>(${e[0].dims.join(",")});\n        const xShape : vec4<i32> = vec4<i32>(${e[0].dims.join(",")});\n        const wShape : vec4<i32> = vec4<i32>(${e[1].dims.join(",")});\n        const outShape : vec4<i32> = vec4<i32>(${r.join(",")});\n        const outShapeStrides : vec3<i32> = vec3<i32>(${k.computeStrides(r).slice(0,3).join(",")});\n        const filterDims : vec2<i32> = vec2<i32>(${t.kernelShape[a?1:2]}, ${t.kernelShape[a?2:3]});\n        const effectiveFilterDims : vec2<i32> = filterDims + vec2<i32>(\n              ${t.dilations[0]<=1?0:(t.kernelShape[a?1:2]-1)*(t.dilations[0]-1)},\n              ${t.dilations[1]<=1?0:(t.kernelShape[a?2:3]-1)*(t.dilations[1]-1)});\n        const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${t.pads[0]+t.pads[2]})/2,\n                                         i32(effectiveFilterDims[1]) - 1 - (${t.pads[1]+t.pads[3]})/2);\n        const strides : vec2<i32> = vec2<i32>(${t.strides[0]}, ${t.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${t.dilations[0]}, ${t.dilations[1]});\n        const dimAOuter : i32 = ${o};\n        const dimBOuter : i32 = ${n};\n        const dimInner : i32 = ${s};\n        ${z}\n        ${Dl(a,u,t.activation.toLowerCase(),!1,M)}\n        ${v?pr(R,A,"f32",void 0,!a,D):fr(R,A,"f32",void 0,!a,D,!1,void 0,d)}`}}});var Wl,zn,yi=j(()=>{"use strict";yt();ge();ve();Wl=(e,t,r,o,n,s,u=!1,d)=>{let a=r.format==="NHWC",m=a?1:2,g=a?2:3,S=a?3:1,b=k.size(o),w=u?2:1,v=r.group,y=t[1].dims,C=y[0]/v,A=y[1],R=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${u?`vec4<${d}>`:d}) {\n    result[flatIndex] = ${u?`vec4<${d}>`:d}(value);\n  }`;n&&(R+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${u?`vec4<${d}>`:d} {\n      return bias[coords.${a?"w":"y"}${u?"/ 4":""}];\n    }`);let W=u?4:1,M=L("W",t[1].dataType,t[1].dims,W),D=L("Dy",t[0].dataType,t[0].dims,W),_=[D,M];n&&_.push(L("bias",t[2].dataType,[o[S]],W));let z=X("result",t[0].dataType,o,W),F=`{\n        let batch: u32 = ${s?"global_id.z":"workgroup_id.z"} / outShape[1];\n        let r = ${s?"global_id.z":"workgroup_id.z"} % outShape[1];\n        let c = ${s?"global_id.y":"workgroup_id.y"} * ${w};\n        let d1: u32 = ${s?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${d}>, ${w}>;\n        for (var i = 0; i < ${w}; i++) {\n          dotProd[i] = vec4<${d}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < filterDims[0]; wR = wR + 1) {\n          var dyR = (${d}(dyCorner.x) + ${d}(wR)) / ${d}(strides.x);\n          let wRPerm = filterDims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${d}(outBackprop[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < filterDims[1]; wC = wC + 1) {\n            let dyC = (${d}(dyCorner.y) + ${d}(wC)) / ${d}(strides.y);\n            let dyC2 = (${d}(dyCorner.y) + 1.0 + ${d}(wC)) / ${d}(strides.y);\n            let wCPerm = filterDims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${d}(outBackprop[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${d}(outBackprop[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = outBackprop[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${D.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${d}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${D.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${d}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = outBackprop[${S}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${D.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${d}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = outBackprop[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${M.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${D.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${d}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${w}; i = i + 1) {\n          let value = dotProd[i] + ${n?"bias[c+i]":"0.0"};\n          ${z.set("batch","r","c + i","d1","value")};\n        }\n      }`,q=`\n          let outputIndices = ${z.offsetToIndices("global_idx")};\n          let batch = ${z.indicesGet("outputIndices",0)};\n          let d1 = ${z.indicesGet("outputIndices",S)};\n          let r = ${z.indicesGet("outputIndices",m)};\n          let c = ${z.indicesGet("outputIndices",g)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / ${A};\n          let wOutChannel = d1 - groupId * ${A};\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = 0.0;\n          for (var wR: u32 = 0; wR < effectiveFilterDims.x; wR = wR + 1) {\n            if (wR % dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${d}(dyRCorner) + ${d}(wR)) / ${d}(strides[0]);\n            let wRPerm = filterDims.x - 1 - wR / dilations.x;\n            if (dyR < 0.0 || dyR >= ${d}(outBackprop[${m}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < effectiveFilterDims.y; wC = wC + 1) {\n              if (wC % dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${d}(dyCCorner) + ${d}(wC)) / ${d}(strides.y);\n              let wCPerm = filterDims.y - 1 - wC / dilations.y;\n              if (dyC < 0.0 || dyC >= ${d}(outBackprop[${g}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * ${C};\n              for (var d2: u32 = 0; d2 < ${C}; d2 = d2 + 1) {\n                let xValue = ${a?D.get("batch","idyR","idyC","inputChannel"):D.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${M.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${n?"bias[d1]":"0.0"};\n          ${z.setByOffset("global_idx","value")};\n        `;return`\n  ${e.declareVariables(..._,z)}\n  ${R}\n  const outShape : vec4<u32> = vec4<u32>(${o.join(",")});\n  const outBackprop : vec4<u32> = vec4<u32>(${t[0].dims.join(",")});\n  const strides : vec2<u32> = vec2<u32>(${r.strides[0]}, ${r.strides[1]});\n  const filterDims : vec2<u32> = vec2<u32>(${r.kernelShape[a?1:2]}, ${r.kernelShape[a?2:3]});\n  const dilations : vec2<u32> = vec2<u32>(${r.dilations[0]}, ${r.dilations[1]});\n  const effectiveFilterDims : vec2<u32> = filterDims + vec2<u32>(\n          ${r.dilations[0]<=1?0:(r.kernelShape[a?1:2]-1)*(r.dilations[0]-1)},\n          ${r.dilations[1]<=1?0:(r.kernelShape[a?2:3]-1)*(r.dilations[1]-1)});\n  const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${r.pads[0]+r.pads[2]})/2,\n                                     i32(effectiveFilterDims[1]) - 1 - (${r.pads[1]+r.pads[3]})/2);\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(b)};\n  ${u?F:q}}`},zn=(e,t,r)=>{let o=e.length>2,n=t.outputShape,s=k.size(n),u=[Math.ceil(s/64),1,1];Ie("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${u}`);let d=Pe(e[0].dataType);return{name:"ConvTranspose2D",shaderCache:{hint:t.cacheKey},getRunData:()=>({dispatchGroup:{x:u[0],y:u[1],z:u[2]},outputs:[{dims:r?r(n):n,dataType:e[0].dataType}]}),getShaderSource:a=>Wl(a,e,t,n,o,u[1]===1&&u[2]===1,!1,d)}}});var zl,Vl,Gl,bi,wi,Ul,Nl,Ll,Fl,vi,$i=j(()=>{"use strict";Re();gi();yi();cr();dr();zl=(e,t,r,o,n,s)=>(e-1)*t+r+(o-1)*n+1-s,Vl=(e,t,r,o,n)=>{let s=Math.floor(e/2);t==="SAME_UPPER"?(r[o]=s,r[n]=e-s):t==="SAME_LOWER"&&(r[o]=e-s,r[n]=s)},Gl=(e,t,r,o,n,s,u,d,a,m)=>{let g=e.length-2,S=m.length===0;if(a.length===0)for(let v=0;v<g;++v)a.push(0);let b=e[0],w=t[d?3:1]*n;for(let v=0,y=e.length-g-(d?1:0);v<g;++v,++y){let C=e[y],A=S?C*u[v]:m[v],R=zl(C,u[v],s[v],t[y],r[v],A);Vl(R,o,s,v,v+g),S&&m.push(u[v]*(C-1)+a[v]+(t[y]-1)*r[v]+1-s[v]-s[v+g])}m.splice(0,0,b),m.splice(d?3:1,0,w)},bi=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((b,w)=>b*w,1)===0){r.length=0;for(let b=2;b<t[1].dims.length;++b)r.push(t[1].dims[b])}let o=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(o?3:1,0,t[1].dims[1]);let n=e.pads.slice(),s=e.outputShape.slice(),u=e.outputPadding.slice(),d=t[0].dims,a=e.dilations.slice();if(a.reduce((b,w)=>b+w,0)===0){let b=t[0].dims.length-2;a=new Array(b).fill(1)}let m=e.strides.slice();if(m.reduce((b,w)=>b+w,0)===0){let b=t[0].dims.length-2;m=new Array(b).fill(1)}Gl(d,r,a,e.autoPad,e.group,n,m,o,u,s);let g=Object.assign({},e),S=e.cacheKey+[r.join("n,"),n.join(","),m.join(","),u.join(","),s.join(","),a.join(",")].join("_");return Object.assign(g,{kernelShape:r,pads:n,outputPadding:u,outputShape:s,dilations:a,strides:m,cacheKey:S}),g},wi=e=>{let t=jr(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],n=e.dilations,s=e.group,u=e.kernelShape,d=e.pads,a=e.strides,m=e.wIsConst(),g=e.outputPadding,S=e.outputShape;return se({autoPad:o,format:r,dilations:n,group:s,kernelShape:u,outputPadding:g,outputShape:S,pads:d,strides:a,wIsConst:m,...t})},Ul=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[0];if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let n=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==n))throw new Error("invalid bias");let s=e[0].dims.length-2;if(t.dilations.reduce((g,S)=>g+S,0)>0&&t.dilations.length!==s)throw new Error(`dilations should be ${s}D`);if(t.strides.reduce((g,S)=>g+S,0)>0&&t.strides.length!==s)throw new Error(`strides should be ${s}D`);if(t.pads.reduce((g,S)=>g+S,0)>0&&t.pads.length!==s*2)throw new Error(`pads should be ${s*2}D`);if(t.outputPadding.length!==s&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${s}D`);if(t.kernelShape.reduce((g,S)=>g+S,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},Nl=[2,3,1,0],Ll=(e,t,r)=>{let o=bi(r,t),n=r.format==="NHWC",s=t.length===3;if(o.group!==1){e.compute(zn(t,o));return}let u=o.outputShape,d=u[n?1:2],a=u[n?2:3],m=u[n?3:1],g=t[1].dims[2],S=t[1].dims[3],b=t[0].dims[n?3:1],w=n?d*a:m,v=n?m:d*a,y=g*S*b,C=!0,A=e.kernelCustomData.wT??e.compute(wt(t[1],Nl),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=A);let R=[t[0],A];s&&(!n&&t[2].dims.length===1?R.push(t[2].reshape([t[2].dims[0],1,1])):R.push(t[2])),e.compute(hi(R,o,u,w,v,y,s,C),{inputs:R})},Fl=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];o.length===3&&o.push(e.inputs[2]);let n=t.kernelShape;(n.length===0||n[0]===0)&&(n=[e.inputs[1].dims[2]]);let s=t.dilations;(s.length===0||s[0]===0)&&(s=[1]);let u=t.strides;(u.length===0||u[0]===0)&&(u=[1]);let d=t.pads;d.length===0&&(d=[0,0]),d=[0,d[0],0,d[1]],u=[1].concat(u),s=[1].concat(s),n=[1].concat(n);let a=bi({...t,pads:d,strides:u,dilations:s,kernelShape:n},o);e.compute(zn(o,a,m=>r?[m[0],m[2],m[3]]:[m[0],m[1],m[3]]))},vi=(e,t)=>{Ul(e.inputs,t),e.inputs[0].dims.length===3?Fl(e,t):Ll(e,e.inputs,t)}});var Vn,qr,xi,Hl,jl,Gn,Un,Kl,Si,Ci,Ai=j(()=>{"use strict";ge();Re();ve();Vn="[a-zA-Z]|\\\\.\\\\.\\\\.",qr="("+Vn+")+",xi="^"+qr+"$",Hl="("+qr+",)*"+qr,jl="^"+Hl+"$",Gn=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let o=this.symbolToIndices.get(t);o===void 0?o=[r]:o.push(r),this.symbolToIndices.set(t,o)}},Un=class{constructor(t,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[o,n]=r.includes("->")?r.split("->",2):[r,""];if(!o.match(RegExp(jl)))throw new Error("Invalid LHS term");if(o.split(",").forEach((d,a)=>{let m=t[a].dims.slice();if(!d.match(RegExp(xi)))throw new Error("Invalid LHS term");let g=this.processTerm(d,!0,m,a);this.lhs.push(g)}),n==="")n+=[...this.symbolToInfo.entries()].filter(([d,a])=>a.count===1||d==="...").map(([d])=>d).join("");else if(!n.match(RegExp(qr)))throw new Error("Invalid RHS");n.match(RegExp(Vn,"g"))?.forEach(d=>{if(d==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let a=this.symbolToInfo.get(d);if(a===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(a.dimValue)}}),this.rhs=this.processTerm(n,!0,this.outputDims)}addSymbol(t,r,o){let n=this.symbolToInfo.get(t);if(n!==void 0){if(n.dimValue!==r&&n.count!==1)throw new Error("Dimension mismatch");n.count++,n.inputIndices.push(o)}else n={count:1,dimValue:r,inputIndices:[o]};this.symbolToInfo.set(t,n)}processTerm(t,r,o,n=-1){let s=o.length,u=!1,d=[],a=0;if(!t.match(RegExp(xi))&&!r&&t!=="")throw new Error("Invalid LHS term");let m=t.match(RegExp(Vn,"g")),g=new Gn(n);return m?.forEach((S,b)=>{if(S==="..."){if(u)throw new Error("Only one ellipsis is allowed per input term");u=!0;let w=s-m.length+1;if(w<0)throw new Error("Ellipsis out of bounds");if(d=o.slice(a,a+w),this.hasEllipsis){if(this.ellipsisDims.length!==d.length||this.ellipsisDims.toString()!==d.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=d;else throw new Error("Ellipsis must be specified in the LHS");for(let v=0;v<d.length;v++){let y=String.fromCharCode("0".charCodeAt(0)+b);g.addSymbol(y,b+v),this.addSymbol(y,o[a++],n)}}else g.addSymbol(S,b),this.addSymbol(S,o[a++],n)}),g}},Kl=(e,t)=>{let r=e[0].dataType,o=new Array(e.length);for(let W=0;W<e.length;++W)o[W]=L(`input${W}`,r,e[W].dims);let n=t.outputDims,s=k.size(n),u=X("output",r,n),d=[],a=Array.from(t.rhs.symbolToIndices.keys()),m="var prod = 1.0;",g="var sum = 0.0;",S="sum += prod;",b=[],w=[],v=[],y=[],C=t.symbolToInfo.size===a.length;t.symbolToInfo.forEach((W,M)=>{if(a.includes(M)){let D=a.indexOf(M);t.lhs.forEach((_,z)=>{if(W.inputIndices.includes(z)){let F=_.symbolToIndices.get(M);if(F===void 0)throw new Error("Invalid symbol error");F.forEach(q=>{d.push(`${o[z].indicesSet(`input${z}Indices`,q,u.indicesGet("outputIndices",D))}`)})}})}else t.lhs.forEach((D,_)=>{let z=t.symbolToInfo.get(M);if(z===void 0)throw new Error("Invalid symbol error");if(z.inputIndices.includes(_)){let F=D.symbolToIndices.get(M);if(F===void 0)throw new Error("Invalid symbol error");F.forEach(q=>{b.push(`${o[_].indicesSet(`input${_}Indices`,q,`${M}`)}`)}),y.push(`prod *= ${o[_].getByIndices(`input${_}Indices`)};`)}}),w.push(`for(var ${M}: u32 = 0; ${M} < ${t.symbolToInfo.get(M)?.dimValue}; ${M}++) {`),v.push("}")});let A=C?[...d,`let sum = ${o.map((W,M)=>W.getByIndices(`input${M}Indices`)).join(" * ")};`]:[...d,g,...w,...b,m,...y,S,...v],R=W=>`\n      ${W.declareVariables(...o,u)}\n\n      ${W.mainStart()}\n        ${W.guardAgainstOutOfBoundsWorkgroupSizes(s)}\n        var outputIndices = ${u.offsetToIndices("global_idx")};\n        ${o.map((M,D)=>`var input${D}Indices: ${o[D].type.indices};`).join(`\n`)}\n        ${A.join(`\n`)};\n        ${u.setByOffset("global_idx","sum")};\n      }`;return{name:"Einsum",shaderCache:{hint:t.equation},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:R}},Si=(e,t)=>{let r=new Un(e.inputs,t.equation);e.compute(Kl(e.inputs,r))},Ci=e=>{let t=e.equation.replace(/\\s+/g,"");return se({equation:t})}});var ql,Ii,Yl,Xl,Ei,Ti=j(()=>{"use strict";ge();ve();ql=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=r.length<t.length?0:r.length-t.length,n=t.length<r.length?0:t.length-r.length;for(;o<r.length&&n<t.length;++o,++n)if(r[o]!==t[n]&&r[o]!==1&&t[n]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Ii=(e,t)=>{let r=e.length-t.length,o=[];for(let n=0;n<r;++n)o.push(e[n]);for(let n=0;n<t.length;++n)o.push(t[n]===1?e[n+r]:t[n]);return o},Yl=(e,t)=>e.length>t.length?Ii(e,t):Ii(t,e),Xl=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=Yl(t,r),n=k.size(o),s=e[0].dataType,u=L("input",s,t),d=X("output",s,o),a=m=>`\n  const inputShape = ${u.indices(...t)};\n  ${m.declareVariables(u,d)}\n  ${m.mainStart()}\n  ${m.guardAgainstOutOfBoundsWorkgroupSizes(n)}\n    let outputIndices = ${d.offsetToIndices("global_idx")};\n    var inputIndices: ${u.type.indices};\n    for (var i = 0; i < ${t.length}; i++) {\n      if (${u.indicesGet("inputShape","i")} == 1) {\n        ${u.indicesSet("inputIndices","i",0)}\n      } else {\n        ${u.indicesSet("inputIndices","i",d.indicesGet("outputIndices",`i + ${o.length-t.length}`))}\n      }\n    }\n    ${d.setByOffset("global_idx",u.getByIndices("inputIndices"))}\n  }`;return{name:"Expand",shaderCache:{hint:`${o}`},getShaderSource:a,getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}})}},Ei=e=>{ql(e.inputs),e.compute(Xl(e.inputs),{inputs:[0]})}});var Jl,Zl,Oi,_i,Ri=j(()=>{"use strict";ge();Re();ve();Jl=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},Zl=(e,t)=>{let r=e[0].dims,o=e[1].dims,n=r.length,s=k.normalizeAxis(t.axis,n),u=r.slice(0);u.splice(s,1,...o);let d=r[s],a=k.size(u),m=L("data",e[0].dataType,e[0].dims),g=L("inputIndices",e[1].dataType,e[1].dims),S=X("output",e[0].dataType,u),b=()=>{let v=o.length,y=`var indicesIndices  = ${g.type.indices}(0);`;for(let C=0;C<v;C++)y+=`${v>1?`indicesIndices[${C}]`:"indicesIndices"} = ${u.length>1?`outputIndices[${s+C}]`:"outputIndices"};`;y+=`\n        var idx = ${g.getByIndices("indicesIndices")};\n        if (idx < 0) {\n          idx = idx + ${d};\n        }\n        var dataIndices = ${m.type.indices}(0);\n      `;for(let C=0,A=0;C<n;C++)C===s?(y+=`${n>1?`dataIndices[${C}]`:"dataIndices"} = u32(idx);`,A+=v):(y+=`${n>1?`dataIndices[${C}]`:"dataIndices"} = ${u.length>1?`outputIndices[${A}]`:"outputIndices"};`,A++);return y},w=v=>`\n      ${v.declareVariables(m,g,S)}\n      ${v.mainStart()}\n        ${v.guardAgainstOutOfBoundsWorkgroupSizes(a)}\n        let outputIndices = ${S.offsetToIndices("global_idx")};\n        ${b()};\n        let value = ${m.getByIndices("dataIndices")};\n        ${S.setByOffset("global_idx","value")};\n      }`;return{name:"Gather",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:w}},Oi=e=>se({axis:e.axis}),_i=(e,t)=>{let r=e.inputs;Jl(r),e.compute(Zl(e.inputs,t))}});var Ql,ed,Pi,Mi,Bi=j(()=>{"use strict";ge();Re();ve();Ql=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},ed=(e,t)=>{let r=e[0].dims,o=e[0].dataType,n=r.length,s=k.computeStrides(r),u=k.size(r),d=e[1].dims,a=e[1].dataType,m=k.size(d),g=k.normalizeAxis(t.axis,n),S=r[g],b=d.slice(0),w=k.size(b),v=L("input",o,r),y=L("indices",a,[m]),C=X("output",o,b),A=R=>`\n      const inputStrides = array<u32, ${s.length}>(${s.map(W=>`${W}u`).join(",")});\n      ${R.declareVariables(v,y,C)}\n      ${R.mainStart()}\n      ${R.guardAgainstOutOfBoundsWorkgroupSizes(w)}\n\n      let outputIndices = ${C.offsetToIndices("global_idx")};\n\n      var idx = ${y.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + ${S};\n      }\n\n      var srcOffset = u32(0);\n\n      for (var i = 0; i < ${r.length}; i++) {\n        if (i == ${g}) {\n          srcOffset +=  u32(idx) * inputStrides[i];\n        } else {\n          srcOffset += ${C.indicesGet("outputIndices","i")} * inputStrides[i];\n        }\n      }\n\n      // Should never hit this with valid values in indices\n      // This is a guard against malicious data in the indices input\n      if (srcOffset < 0 || srcOffset >= ${u}) {\n        return;\n      }\n\n      output[global_idx] = input[srcOffset];\n  }`;return{name:"GatherElements",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:b,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)}}),getShaderSource:A}},Pi=e=>se({axis:e.axis}),Mi=(e,t)=>{let r=e.inputs;Ql(r),e.compute(ed(e.inputs,t))}});var td,rd,nd,ki,Di,Wi=j(()=>{"use strict";ge();Re();ve();td=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},rd=(e,t,r)=>{if(r.length===0)return"0u";let o=r.length===1&&e!==1||r.length===2&&r[0]!==e,n=r[r.length-1]!==t,s="0u";return o||(s+=`+ m * ${r[r.length-1]}u`),n||(s+="+n"),s},nd=(e,t)=>{let r=e[0].dims.slice(),o=e[1].dims.slice(),[n,s,u]=Br.getShapeOfGemmResult(r,t.transA,o,t.transB,e.length===3?e[2].dims:void 0),d=[n,s];if(!d)throw new Error("Can\'t use gemm on the given tensors");let a=k.size(d),m="";t.transA&&t.transB?m="value += a[k * M + m] * b[n * K + k];":t.transA&&!t.transB?m="value += a[k * M + m] * b[k * N + n];":!t.transA&&t.transB?m="value += a[m * K + k] * b[n * K + k];":!t.transA&&!t.transB&&(m="value += a[m * K + k] * b[k * N + n];");let g=Pe(e[0].dataType),S=t.alpha===1?"":"value *= alpha;",b=e.length===3?`value += beta * c[${rd(n,s,e[2].dims)}];`:"",w=[`@group(0) @binding(0) var<storage, read> a : array<${g}>;`,`@group(0) @binding(1) var<storage, read> b : array<${g}>;`];e.length===3&&w.push(`@group(0) @binding(2) var<storage, read> c : array<${g}>;`);let v=y=>`\n  const M: u32 = ${n}u;\n  const N: u32 = ${s}u;\n  const K: u32 = ${u}u;\n  const alpha = ${g}(${t.alpha});\n  const beta = ${g}(${t.beta});\n\n  ${w.join(`\n`)}\n  @group(0) @binding(${e.length}) var<storage, read_write> output : array<${g}>;\n\n  ${y.mainStart()}\n    ${y.guardAgainstOutOfBoundsWorkgroupSizes(a)}\n\n    let m = global_id.x / N;\n    let n = global_id.x % N;\n\n    var value = ${g}(0);\n    for (var k: u32 = 0u; k<${u}u; k++) {\n      ${m}\n    }\n\n    ${S}\n    ${b}\n    output[global_id.x] = value;\n\n  }`;return{name:"Gemm",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:d,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:v}},ki=(e,t)=>{td(e.inputs),e.compute(nd(e.inputs,t))},Di=e=>se(e)});var od,ad,id,sd,zi,Vi,Gi=j(()=>{"use strict";ke();ge();Re();ve();od={name:"InstanceNormalization"},ad=(e,t)=>{let r=e[0].dims,o=r,n=2,s=k.sizeToDimension(r,n),u=k.sizeFromDimension(r,n),d=r[1],a=L("x",e[0].dataType,[r[0],r[1],u]),m=L("scale",e[1].dataType,e[1].dims),g=L("bias",e[2].dataType,e[2].dims),S=X("output",e[0].dataType,[r[0],r[1],u]),b=[a,m,g,S],w=a.type.value,v=64,y=C=>`\n\n  const C: u32 = ${d};\n  const normSize: u32 = ${u};\n  const epsilon: f32 = ${t.epsilon};\n  var<workgroup> meanShared : ${w};\n  var<workgroup> squaredNormShared : ${w};\n  var<workgroup> workgroupShared : array<${w}, ${v}>;\n  const workgroupSize = ${v}u;\n  ${C.declareVariables(...b)}\n  ${C.mainStart(v)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / C;\n    let channel = norm % C;\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial: ${w} = 0;\n    for (var h = localIndex; h < normSize; h += workgroupSize) {\n      initial = initial + ${a.get("batch","channel","h")};\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = workgroupShared[0] / ${w}(normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = 0;\n    for (var h = localIndex; h < normSize; h += workgroupSize) {\n      let deviation =  ${a.get("batch","channel","h")} - meanShared;\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = workgroupShared[0];\n    }\n    workgroupBarrier();\n\n    let invStdDev = 1 / sqrt(squaredNormShared / ${w}(normSize) + epsilon);\n    let channelScale = invStdDev * ${m.getByOffset("channel")};\n    let channelShift = ${g.getByOffset("channel")} - meanShared * channelScale;\n    for (var h = localIndex; h < normSize; h += workgroupSize) {\n      let value = ${a.get("batch","channel","h")} * channelScale + channelShift;\n      ${S.set("batch","channel","h","value")};\n    }\n  }`;return{...od,shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:s}}),getShaderSource:y}},id=(e,t,r,o,n,s,u,d)=>{let a=ft(u),m=L("input",t.dataType,t.dims,a),g=L("scale",r.dataType,r.dims,a),S=L("bias",o.dataType,o.dims,a),b=64,w=a===1?"vec2f":`mat2x${a}f`,v=a===1?"f32":`vec${a}f`,y=(D,_)=>`${w}(${D}, ${_})`,C=n*u/a,A=Math.ceil(s/b),R=D=>`\n  const H: u32 = ${s};\n  const C: u32 = ${u/a};\n  const imageSize: u32 = ${s*u/a};\n\n  ${D.declareVariables(m)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${w}>;\n\n  ${D.mainStart(b)}\n    let currentImageNumber = global_idx / ${b} / C;\n    let currentChannelNumber = (global_idx / ${b}) % C;\n    let wgId = global_idx % ${b};\n    let wgOffset = wgId * ${A};\n    if (wgOffset >= H) {\n        return;\n    }\n    let wgMax = min(wgOffset + ${A}, H);\n\n    let offset = currentImageNumber * imageSize + currentChannelNumber;\n    var sum = ${Ye("f32",a)};\n    var squaredSum = ${Ye("f32",a)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${v}(input[offset + i * C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${y("sum","squaredSum")};\n  }`,W=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:JSON.stringify({components:a,n,h:s,c:u})},getRunData:()=>({outputs:[{dims:[n,u,b,2],dataType:1}],dispatchGroup:{x:n*u/a}}),getShaderSource:R},{inputs:[t],outputs:[-1]})[0],M=D=>`\n  const H: u32 = ${s};\n  const C: u32 = ${u/a};\n  const imageSize: u32 = ${b*u/a};\n  const epsilon: f32 = ${d};\n\n  @group(0) @binding(0) var<storage, read> input : array<${w}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${g.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${S.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${w}>;\n\n  ${D.mainStart()}\n    ${D.guardAgainstOutOfBoundsWorkgroupSizes(C)}\n    let currentImageNumber = global_idx / C;\n    let currentChannelNumber = global_idx % C;\n\n    let offset = currentImageNumber * imageSize;\n    var sum = ${Ye("f32",a)};\n    var squaredSum = ${Ye("f32",a)};\n    for (var i: u32 = 0; i < ${b}; i++) {\n        let value = input[offset + i + currentChannelNumber * ${b}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(H);\n    squaredSum = squaredSum / f32(H);\n    let invStdDev = 1 / sqrt(squaredSum - sum * sum + epsilon);\n    let channelScale = invStdDev * ${v}(scale[currentChannelNumber]);\n    let channelShift = ${v}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${y("channelScale","channelShift")};\n  }`;return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:JSON.stringify({components:a,n,h:s,c:u,epsilon:d})},getRunData:()=>({outputs:[{dims:[n,u,2],dataType:1}],dispatchGroup:{x:Math.ceil(C/64)}}),getShaderSource:M},{inputs:[W,r,o],outputs:[-1]})[0]},sd=(e,t,r)=>{let o=t[0].dims,n=o,s=o[0],u=o[o.length-1],d=k.sizeFromDimension(o,1)/u,a=ft(u),m=k.size(n)/a,g=L("input",t[0].dataType,t[0].dims,a),S=X("output",t[0].dataType,n,a),b=Pe(t[0].dataType),w=a===1?"vec2f":`mat2x${a}f`,v=a===1?b:`vec${a}<${b}>`,y=id(e,t[0],t[1],t[2],s,d,u,r.epsilon),C=A=>`\n  const H: u32 = ${d};\n  const C: u32 = ${u/a};\n\n  @group(0) @binding(0) var<storage, read> input : array<${g.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${w}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${S.type.storage}>;\n\n  ${A.mainStart()}\n    let currentImageNumber = global_idx / (C * H);\n    let currentChannelNumber = global_idx % C;\n\n    let scaleOffset = currentImageNumber * C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${v}(scale[0]), ${v}(scale[1]));\n  }`;e.compute({name:"InstanceNormalization",shaderCache:{hint:`${r.cacheKey}`},getRunData:()=>({outputs:[{dims:n,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)}}),getShaderSource:C},{inputs:[t[0],y]})},zi=e=>se({epsilon:e.epsilon,format:e.format}),Vi=(e,t)=>{t.format==="NHWC"?sd(e,e.inputs,t):e.compute(ad(e.inputs,t))}});var ud,ld,Ui,Ni,Li=j(()=>{"use strict";ke();ge();Re();ve();ud=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},ld=(e,t,r)=>{let o=e[0].dims,n=e[1],s=e[2],u=o,d=k.normalizeAxis(t.axis,o.length),a=k.sizeToDimension(o,d),m=k.sizeFromDimension(o,d),g=k.size(n.dims),S=s?k.size(s.dims):0;if(g!==m||s&&S!==m)throw new Error(`Size of X.shape()[axis:] == ${m}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${g} and bias size of ${S}`);let b=[];for(let M=0;M<o.length;++M)M<d?b.push(o[M]):b.push(1);let w=ft(m),v=Pe(e[0].dataType),y=[L("x",e[0].dataType,e[0].dims,w),L("scale",n.dataType,n.dims,w)];s&&y.push(L("bias",s.dataType,s.dims,w)),y.push(X("output",e[0].dataType,u,w));let C=r>1,A=r>2;C&&y.push(X("meanDataOutput",1,b)),A&&y.push(X("invStdOutput",1,b));let R=M=>`\n  const normSize: f32 = ${m};\n  const normSizeVectorized: u32 = ${m/w};\n  const epsilon: f32 = ${t.epsilon};\n\n  ${M.declareVariables(...y)}\n  ${M.mainStart()}\n    ${M.guardAgainstOutOfBoundsWorkgroupSizes(a)}\n    let offset = global_idx * normSizeVectorized;\n    var meanVector = ${Ye("f32",w)};\n    var meanSquareVector = ${Ye("f32",w)};\n\n    for (var h: u32 = 0u; h < normSizeVectorized; h++) {\n      let value = ${Ot(v,w,"x[h + offset]")};\n      meanVector += value;\n      meanSquareVector += value * value;\n    }\n    let mean = ${bt("meanVector",w)} / normSize;\n    let meanSquare = sqrt(${bt("meanSquareVector",w)} \n      / normSize - mean * mean + epsilon);\n\n    for (var j: u32 = 0; j < normSizeVectorized; j++) {\n      let f32input = ${Ot(v,w,"x[j + offset]")};\n      let f32scale = ${Ot(v,w,"scale[j]")};\n      output[j + offset] = ${y[0].type.value}((f32input - mean) / meanSquare * f32scale\n        ${s?`+ ${Ot(v,w,"bias[j]")}`:""}\n      );\n    }\n\n    ${C?"meanDataOutput[global_idx] = mean":""};\n    ${A?"invStdOutput[global_idx] = 1 / meanSquare":""};\n  }`,W=[{dims:u,dataType:e[0].dataType}];return C&&W.push({dims:b,dataType:1}),A&&W.push({dims:b,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${t.cacheKey}|${r}|${e.length}`},getRunData:()=>({outputs:W,dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:R}},Ui=e=>se({axis:e.axis,epsilon:e.epsilon}),Ni=(e,t)=>{ud(e.inputs),e.compute(ld(e.inputs,t,e.outputCount))}});var dd,Fi,Hi=j(()=>{"use strict";ge();mr();dd=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Fi=e=>{dd(e.inputs);let t=et.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can\'t use matmul on the given tensors");e.compute(Kr(e.inputs,{activation:"",activationCacheKey:""},t))}});var cd,pd,fd,md,hd,gd,yd,bd,wd,ji,Ki,qi=j(()=>{"use strict";ke();ge();Re();ve();cd=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1)throw new Error("Input type must be float.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},pd=(e,t,r,o,n,s,u)=>{let d=r.length,a="";for(let m=d-1;m>=0;--m)a+=`\n            k = i32(${e.indicesGet("indices",m)}) - ${n[m]};\n            if (k < 0) {\n              break;\n            }\n            if (k >= ${r[m]}) {\n              break;\n            }\n            offset += k * ${o[m]};\n        `;return`\n          value = ${s}(${u});\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${a}\n            value = x[offset];\n          }\n      `},fd=(e,t,r,o,n)=>{let s=r.length,u="";for(let d=s-1;d>=0;--d)u+=`\n                k = i32(${e.indicesGet("indices",d)}) - ${n[d]};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = ${2*(r[d]-1)};\n                  k = k % _2n_1;\n                  if(k >= ${r[d]}) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * ${o[d]};\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${u}\n              value = x[offset];\n          `},md=(e,t,r,o,n)=>{let s=r.length,u="";for(let d=s-1;d>=0;--d)u+=`\n                k = i32(${e.indicesGet("indices",d)}) - ${n[d]};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= ${r[d]}) {\n                  k = ${r[d]-1};\n                }\n                offset += k * ${o[d]};\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${u}\n              value = x[offset];\n          `},hd=(e,t,r,o,n)=>{let s=r.length,u="";for(let d=s-1;d>=0;--d)u+=`\n                k = i32(${e.indicesGet("indices",d)}) - ${n[d]};\n                if (k < 0)  {\n                  k += ${r[d]};\n                }\n                if (k >= ${r[d]}) {\n                  k -= ${r[d]};\n                }\n                offset += k * ${o[d]};\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${u}\n              value = x[offset];\n          `},gd=(e,t,r,o,n,s)=>{switch(n.mode){case 0:return pd(e,t,r,o,n.pads,s,n.value);case 1:return fd(e,t,r,o,n.pads);case 2:return md(e,t,r,o,n.pads);case 3:return hd(e,t,r,o,n.pads);default:throw new Error("Invalid mode")}},yd=(e,t,r,o)=>{let n=t[0].dims,s=k.padShape(n.slice(),r.pads),u=k.size(s),d=k.computeStrides(n),a=X("output",t[0].dataType,s),m=L("x",t[0].dataType,n),g=gd(a,s,n,d,r,o);return`\n              ${e.declareVariables(m,a)}\n              ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n\n              let indices = ${a.offsetToIndices("global_idx")};\n\n              var value = ${o}(0);\n              ${g}\n              output[global_idx] = value;\n          }`},bd=(e,t)=>{let r=k.padShape(e[0].dims.slice(),t.pads);return{name:"Pad",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(k.size(r)/64)}}),getShaderSource:o=>yd(o,e,t,"f32")}},wd=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),o=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,n=e[0].dims.length,s=new Int32Array(2*n).fill(0);if(e.length>=4){let d=e[3].getBigInt64Array();for(let a=0;a<d.length;a++)s[Number(d[a])]=Number(r[a]),s[Number(d[a])+n]=Number(r[a+d.length])}else r.forEach((d,a)=>s[Number(a)]=Number(d));let u=[];return s.forEach(d=>u.push(d)),se({mode:t.mode,value:o,pads:u})}else return t},ji=(e,t)=>{cd(e.inputs);let r=wd(e.inputs,t);e.compute(bd(e.inputs,r),{inputs:[0]})},Ki=e=>{let t=e.mode,r=e.value,o=e.pads;return se({mode:t,value:r,pads:o})}});var Yr,Yi,Xi,Ji,Zi,Qi,es,ts,rs,ns,os,as,is,ss,us,ls=j(()=>{"use strict";ge();Re();ve();Yr=e=>{if(!e||e.length!==1)throw new Error("Pool ops requires 1 input.");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("Pool ops supports 1-D or 2-D inputs only for now.")},Yi=(e,t,r)=>{let o=t.format==="NHWC",n=e.dims.slice();o&&n.splice(1,0,n.pop());let s=Object.hasOwnProperty.call(t,"dilations"),u=t.kernelShape.slice(),d=t.strides.slice(),a=s?t.dilations.slice():[],m=t.pads.slice();Tt.adjustPoolAttributes(r,n,u,d,a,m);let g=Tt.computePoolOutputShape(r,n,d,a,u,m,t.autoPad),S=Object.assign({},t);s?Object.assign(S,{kernelShape:u,strides:d,pads:m,dilations:a,cacheKey:t.cacheKey}):Object.assign(S,{kernelShape:u,strides:d,pads:m,cacheKey:t.cacheKey});let b=g.slice();return b.push(b.splice(1,1)[0]),[S,o?b:g]},Xi=(e,t,r,o,n,s,u,d)=>{let a=n.format==="NHWC",m=r,g=t.type.value,S=m.length,b=k.size(o),w=X("output",t.type.tensor,o);if(n.kernelShape.length<=2){let v=n.kernelShape[n.kernelShape.length-1],y=n.strides[n.strides.length-1],C=n.pads[n.pads.length/2-1],A=n.pads[n.pads.length-1],R=S-(a?2:1),W="",M="",D="";if(C+A!==0?W=`\n                for (var i: u32 = 0u; i < ${v}u; i++) {\n                  xIndices[${R}] = indices[${R}] * ${y} - ${C} + i;\n                  if (xIndices[${R}] < 0 || xIndices[${R}] >= ${m[R]}) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${s}\n                }`:W=`\n                for (var i: u32 = 0u; i < ${v}u; i++) {\n                  xIndices[${R}] = indices[${R}] * ${y} - ${C} + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${s}\n                }`,n.kernelShape.length===2){let z=n.kernelShape[n.kernelShape.length-2],F=n.strides[n.strides.length-2],q=n.pads[n.pads.length/2-2],le=n.pads[n.pads.length-2],B=S-(a?3:2),K=m[B];q+le!==0?M=`\n                for (var j: u32 = 0u; j < ${z}u; j++) {\n                  xIndices[${B}] = indices[${B}] * ${F} - ${q} + j;\n                  if (xIndices[${B}] < 0 || xIndices[${B}] >= ${K}) {\n                    pad+= ${v};\n                    continue;\n                  }\n              `:M=`\n                for (var j: u32 = 0u; j < ${z}u; j++) {\n                  xIndices[${B}] = indices[${B}] * ${F} - ${q} + j;\n                `,D=`\n              }\n            `}return`\n            ${e.declareVariables(t,w)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(b)}\n\n              let indices = ${w.offsetToIndices("global_idx")};\n              var xIndices = ${w.offsetToIndices("global_idx")};\n\n              var value: ${g} = ${g}(${d});\n              var pad = 0;\n              ${M}\n              ${W}\n              ${D}\n              ${u}\n\n              output[global_idx] = value;\n            }`}else{if(a)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let v=k.size(n.kernelShape),y=k.computeStrides(n.kernelShape),C=y.length,A=n.pads.length,R=n.pads.reduce((D,_)=>D+_),W="";return R?W=`\n                if (xIndices[j] >= inputDims[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${s}\n              }`:W=`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${s}\n            `,`\n            ${e.declareVariables(t,w)}\n\n            const pads = array<u32, ${A}>(${n.pads.map(D=>`${D}u`).join(",")});\n            const inputDims = array<u32, ${S}>(${m.map(D=>`${D}u`).join(",")});\n            const kernelStrides = array<u32, ${C}>(${y.map(D=>`${D}u`).join(",")});\n            const strides = array<u32, ${C}>(${n.strides.map(D=>`${D}u`).join(",")});\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(b)}\n\n              let indices = ${w.offsetToIndices("global_idx")};\n              let xIndices = ${w.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${C}>;\n\n              var value = ${w.type.value}(${d});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < ${v}u; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${C-1}u; j++) {\n                  offsets[j] = offset / kernelStrides[j];\n                  offset -= offsets[j] * kernelStrides[j];\n                }\n                offsets[${C-1}] = offset;\n\n                isPad = false;\n                for (var j = ${S-C}u; j < ${S}u; j++) {\n                  xIndices[j] = indices[j] * strides[j - ${S-C}u]\n                    + offsets[j - ${S-C}u] - pads[j - 2u];\n                  ${W}\n              }\n              ${u}\n\n              output[global_idx] = value;\n            }`}},Ji=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Zi=(e,t,r,o)=>{let[n,s]=Yi(t,o,r),u=k.size(n.kernelShape),d=L("x",t.dataType,t.dims),a=d.type.value,m="value += x_val;",g="";return n.countIncludePad?g+=`value /= ${a}(${u});`:g+=`value /= ${a}(${u} - pad);`,{name:e,shaderCache:{hint:o.cacheKey},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(k.size(s)/64)}}),getShaderSource:S=>Xi(S,d,t.dims,s,n,m,g,"0.0")}},Qi=e=>{let t=e.count_include_pad!==0,r=Ji(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return se({countIncludePad:t,...r})},es=(e,t)=>{Yr(e.inputs),e.compute(Zi("AveragePool",e.inputs[0],!1,t))},ts={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},rs=e=>{let t=e.format;return{format:t,...ts,cacheKey:t}},ns=(e,t)=>{Yr(e.inputs),e.compute(Zi("GlobalAveragePool",e.inputs[0],!0,t))},os=(e,t,r,o)=>{let[n,s]=Yi(t,o,r),u=`\n      value = max(x_val, value);\n    `,d="",a=L("x",t.dataType,t.dims);return{name:e,shaderCache:{hint:o.cacheKey},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(k.size(s)/64)}}),getShaderSource:m=>Xi(m,a,t.dims,s,n,u,d,"-1e5")}},as=(e,t)=>{Yr(e.inputs),e.compute(os("MaxPool",e.inputs[0],!1,t))},is=e=>{let t=e.storage_order,r=e.dilations,o=Ji(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(o.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return se({storageOrder:t,dilations:r,...o})},ss=e=>{let t=e.format;return{format:t,...ts,cacheKey:t}},us=(e,t)=>{Yr(e.inputs),e.compute(os("GlobalMaxPool",e.inputs[0],!0,t))}});var Xr=j(()=>{});var ds=j(()=>{Xr()});var cs,ps=j(()=>{cs="1.17.0"});var fs,Nn,ms=j(()=>{ps();fs="warning",Nn={wasm:{},webgl:{},webgpu:{},versions:{common:cs},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);fs=e}},get logLevel(){return fs}};Object.defineProperty(Nn,"logLevel",{enumerable:!0})});var hs,gs=j(()=>{ms();hs=Nn});var ys=j(()=>{});var bs=j(()=>{Jr()});var vs=j(()=>{});var $s=j(()=>{Jr()});var Jr=j(()=>{ys();bs();vs();$s()});var Zr=j(()=>{Jr()});var xs=j(()=>{Xr();Zr()});var Ss=j(()=>{xs()});var Cs=j(()=>{});var As=j(()=>{Xr();Zr()});var Is=j(()=>{As()});var Es=j(()=>{ds();gs();Ss();Zr();Cs();Is()});var Sd,Cd,Ts,Os=j(()=>{"use strict";Es();ke();ve();Sd=(e,t,r)=>{let o=e===t,n=e<t&&r<0,s=e>t&&r>0;if(o||n||s)throw new Error("Range these inputs\' contents are invalid.")},Cd=(e,t,r,o)=>{let n=Math.abs(Math.ceil((t-e)/r)),s=[n],u=n,d=X("output",o,s),a=d.type.storage,m=g=>`\n        ${g.declareVariables(d)}\n        ${g.mainStart()}\n        ${g.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n        output[global_idx] = ${a}(${e}) + ${a}(global_idx) * ${a}(${r});\n      }`;return{name:"Range",shaderCache:{hint:[e,t,r].map(g=>g.toString()).join("_")},getShaderSource:m,getRunData:()=>({outputs:[{dims:s,dataType:o}],dispatchGroup:{x:Math.ceil(u/64)}})}},Ts=e=>{let t=0,r=0,o=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],o=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],o=e.inputs[2].getFloat32Array()[0]),hs.webgpu.validateInputContent&&Sd(t,r,o),e.compute(Cd(t,r,o,e.inputs[0].dataType),{inputs:[]})}});var Ad,Id,Ed,Td,Od,_d,Rd,Pd,Md,Bd,kd,Dd,Wd,zd,Vd,_s,Rs,Ps=j(()=>{"use strict";ge();Re();ve();Ad=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for linear mode")}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Id=(e,t,r)=>{t.every(n=>n>=0&&n<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let o=new Array(r).fill(1);return t.forEach((n,s)=>o[n]=e[s]),o},Ed=(e,t,r,o,n,s)=>{let[u,d,a]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],m=e[0].dims.length;if(u>0&&e.length>u&&e[u].dims.length>0)e[u].getFloat32Array().forEach(g=>s.push(g));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(d>0&&e.length>d&&e[d].dims.length>0){if(e[d].getFloat32Array().forEach(g=>o.push(g)),o.length!==0&&o.length!==m&&r>=18&&o.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Ad(o,t),t.axes.length>0&&Id(o,t.axes,m).forEach((g,S)=>o[S]=g)}if(a>0&&e.length>a&&(e[a].getBigInt64Array().forEach(g=>n.push(Number(g))),n.length!==m||r>=18&&n.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(o.length!==t.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(n.length!==t.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(typeof o<"u"&&typeof n<"u"&&o.length>0&&n.length>m)throw new Error("Resize requires only of scales or sizes to be specified")},Td=e=>"fn getOriginalCoordinateFromResizedCoordinate(xResized: f32, xScale: f32, lengthResized: f32,    lengthOriginal: f32, roiStart: f32, roiEnd: f32) -> f32 { "+(()=>{switch(e){case"asymmetric":return"return xResized / xScale;";case"pytorch_half_pixel":return"if (lengthResized > 1) {                     return (xResized + 0.5) / xScale - 0.5;                   } else {                     return 0.0;                   }";case"tf_half_pixel_for_nn":return"return (xResized + 0.5) / xScale;";case"align_corners":return"if (lengthResized == 1) {                     return 0.0;                   } else {                     return xResized * (lengthOriginal - 1) / (lengthResized - 1);                   }";case"tf_crop_and_resize":return"if (lengthResized > 1) {                     return roiStart * (lengthOriginal - 1) +                           (xResized * (roiEnd - roiStart) * (lengthOriginal - 1)) / (lengthResized - 1);                   } else {                     return 0.5 * (roiStart + roiEnd) * f32(lengthOriginal - 1);                   }";case"half_pixel_symmetric":return["const outputWidth = xScale * lengthResized;","const adjustment = lengthResized / outputWidth;","const center = lengthOriginal / 2;","const offset = center * (1 - adjustment);","return offset + ((xResized + 0.5) / xScale) - 0.5;"].join(`\n`);case"half_pixel":return"return ((xResized + 0.5) / xScale) - 0.5;";default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Od=(e,t)=>"fn getNearestPixelFromOriginal(xOriginal: f32, isDownSample: bool) -> f32 {"+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",_d=(e,t,r)=>{let o=new Array(r).fill(0).concat(new Array(r).fill(1)),n=e.length===0?o:e.slice();return t.length>0?(t.forEach((s,u)=>{o[s]=n[u],o[u+r]=n[t.length+u]}),o):n},Rd=(e,t,r,o)=>{let n=[];if(r.length>0)if(o.length>0){if(e.forEach(s=>n.push(s)),Math.max(...o)>e.length)throw new Error("axes is out of bound");o.forEach((s,u)=>n[s]=r[u])}else r.forEach(s=>n.push(s));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");n=e.map((s,u)=>Math.round(s*t[u]))}return n},Pd=(e,t,r,o)=>{let n=(()=>{switch(o.keepAspectRatioPolicy){case"not_larger":return o.axes.length>0?Math.min(...o.axes.map(u=>r[u]),Number.MAX_VALUE):Math.min(...r,Number.MAX_VALUE);case"not_smaller":return o.axes.length>0?Math.max(...o.axes.map(u=>r[u]),Number.MIN_VALUE):Math.max(...r,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${o.keepAspectRatioPolicy} is not supported`)}})();r.fill(1,0,r.length);let s=e.slice();return o.axes.length>0?(o.axes.forEach(u=>r[u]=n),o.axes.forEach(u=>s[u]=Math.round(e[u]*r[u]))):(r.fill(n,0,r.length),s.forEach((u,d)=>s[d]=Math.round(u*r[d]))),s},Md=(e,t,r,o,n)=>`\n    fn calculateOriginalIndicesFromOutputIndices(outputIndices: ${e.type.indices}) -> array<f32, ${r.length}> {\n      const inputShape = array<u32, ${t.length}>(${t.map(s=>`${s}u`).join(",")});\n      const outputShape = array<u32, ${r.length}>(${r.map(s=>`${s}u`).join(",")});\n      const scales = array<f32, ${o.length}>(${o.map(s=>`${s}f`).join(",")});\n      const roi = array<f32, ${n.length}>(${n.map(s=>`${s}f`).join(",")});\n      var originalIndices: array<f32, ${r.length}>;\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var outputIndex = ${r.length===1?"outputIndices":"outputIndices[i]"};\n        if (scales[i] == 1.0) {\n          originalIndices[i] = f32(outputIndex);\n        } else {\n          originalIndices[i] = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],\n                f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${t.length}]);\n        }\n      }\n      return originalIndices;\n    }`,Bd=(e,t,r,o,n,s,u)=>`\n    fn calculateInputIndicesFromOutputIndices(outputIndices: ${t.type.indices}) -> ${e.type.indices} {\n        const inputShape = array<u32, ${r.length}>(${r.map(d=>`${d}u`).join(",")});\n        const outputShape = array<u32, ${o.length}>(${o.map(d=>`${d}u`).join(",")});\n        const scales = array<f32, ${n.length}>(${n.map(d=>`${d}f`).join(",")});\n        const roi = array<f32, ${s.length}>(${s.map(d=>`${d}f`).join(",")});\n        var inputIndices: ${e.type.indices};\n        for (var i:u32 = 0; i < ${o.length}; i++) {\n          var outputIndex = ${o.length===1?"outputIndices":"outputIndices[i]"};\n          var inputIndex: u32;\n          if (scales[i] == 1.0) {\n            inputIndex = outputIndex;\n          } else {\n            var original_idx = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],\n                    f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${r.length}]);\n            if (!${u} || (original_idx >= 0 && original_idx < f32(inputShape[i]))) {\n              if (original_idx < 0) {\n                inputIndex = 0;\n              } else if (original_idx > (f32(inputShape[i]) - 1)) {\n                inputIndex = inputShape[i] - 1;\n              } else {\n                inputIndex = u32(getNearestPixelFromOriginal(original_idx, scales[i] < 1));\n              }\n            } else {\n              inputIndex = u32(original_idx);\n            }\n          }\n          ${e.indicesSet("inputIndices","i","inputIndex")}\n        }\n        return inputIndices;\n    }`,kd=(e,t)=>`\n    fn checkInputIndices(inputIndices: ${e.type.indices}) -> bool {\n      const inputShape = array<u32, ${t.length}>(${t.map(r=>`${r}u`).join(",")});\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var inputIndex = ${t.length===1?"inputIndices":"inputIndices[i]"};\n        if (inputIndex < 0 || inputIndex >= inputShape[i]) {\n          return false;\n        }\n      }\n      return true;\n    }`,Dd=(e,t,r,o,n,s,u)=>{let[d,a,m,g]=r.length===2?[-1,0,1,-1]:n[1]===1?[0,2,3,1]:[0,1,2,3];return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> f32 {\n      var inputIndices: ${e.type.indices};\n      inputIndices[${a}] = max(0, min(row, ${r[a]} - 1));\n      inputIndices[${m}] = max(0, min(col, ${r[m]} - 1));\n      if (${r.length} > 2) {\n        inputIndices[${g}] = channel;\n        inputIndices[${d}] = batch;\n      };\n      return input[${e.indicesToOffset("inputIndices")}];\n    }\n\n    fn bilinearInterpolation(outputIndices: ${t.type.indices}) -> f32 {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(outputIndices);\n      var row:f32 = originalIndices[${a}];\n      var col:f32 = originalIndices[${m}];\n      if (${s} && (row < 0 || row > (${r[a]} - 1) || col < 0 || col > ${r[m]} - 1)) {\n        return ${u};\n      }\n      row = max(0, min(row, ${r[a]} - 1));\n      col = max(0, min(col, ${r[m]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = 0;\n      var batch: u32 = 0;\n      if (${r.length>2}) {\n        channel = u32(originalIndices[${g}]);\n        batch = u32(originalIndices[${d}]);\n      }\n      var x11: f32 = getInputValue(batch, channel, row1, col1);\n      var x12: f32 = getInputValue(batch, channel, row1, col2);\n      var x21: f32 = getInputValue(batch, channel, row2, col1);\n      var x22: f32 = getInputValue(batch, channel, row2, col2);\n      var dx1: f32 = row - f32(row1);\n      var dx2: f32 = f32(row2 ) - row;\n      var dy1 = col - f32(col1);\n      var dy2 = f32(col2) - col;\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},Wd=(e,t,r,o,n,s,u,d,a,m)=>{let[g,S]=r.length===2?[0,1]:n[1]===1?[2,3]:[1,2],b=w=>{let v=w===g?"row":"col";return`\n      fn ${v}CubicInterpolation(inputIndices: ${e.type.indices}, outputIndices: ${t.type.indices}) -> f32 {\n        var outputIndex = ${o.length===1?"outputIndices":`outputIndices[${w}]`};\n        var originalIdx: f32 = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), ${n[w]},\n        f32(${o[w]}), f32(${r[w]}), ${s[w]}, ${s[w]} + ${r.length});\n        var fractOriginalIdx: f32 = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${d} && (originalIdx < 0 || originalIdx > (${r[w]} - 1))) {\n          return ${a};\n        }\n        var data: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${v}: f32 = originalIdx + f32(i);\n          if (${v} < 0 || ${v} >= ${r[w]}) {\n            if (${m}) {\n              coefs[i + 1] = 0.0;\n              continue;\n            } else if (${d}) {\n              return ${a};\n            } else {\n              ${v} = max(0, min(${v}, ${r[w]} - 1));\n            }\n          }\n          var inputIndicesCopy: ${e.type.indices} = inputIndices;\n          inputIndicesCopy[${w}] = u32(${v});\n          data[i + 1] = ${w===g?`input[${e.indicesToOffset("inputIndicesCopy")}];`:`\n                                               rowCubicInterpolation(inputIndicesCopy, outputIndices);`}\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${b(g)};\n    ${b(S)};\n  fn getCubicInterpolationCoefs(s: f32) -> array<f32, 4> {\n    var absS = abs(s);\n    var coeffs: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: f32 = 1.0 - absS;\n    var twoMinusAbsS: f32 = 2.0 - absS;\n    var onePlusAbsS: f32 = 1.0 + absS;\n    coeffs[0] = ((${u} * onePlusAbsS - 5 * ${u}) * onePlusAbsS + 8 * ${u}) * onePlusAbsS - 4 * ${u};\n    coeffs[1] = ((${u} + 2) * absS - (${u} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${u} + 2) * oneMinusAbsS - (${u} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${u} * twoMinusAbsS - 5 * ${u}) * twoMinusAbsS + 8 * ${u}) * twoMinusAbsS - 4 * ${u};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<f32, 4>, coefs: array<f32, 4>) -> f32 {\n    var coefsSum: f32 = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(outputIndices: ${t.type.indices}) -> f32 {\n    var inputIndices: ${e.type.indices} = outputIndices;\n    return colCubicInterpolation(inputIndices, outputIndices);\n  }\n    `},zd=(e,t,r,o,n,s)=>{let u=e.dims,d=_d(s,t.axes,u.length),a=Rd(u,o,n,t.axes),m=o.slice();o.length===0&&(m=u.map((C,A)=>C===0?1:a[A]/C),t.keepAspectRatioPolicy!=="stretch"&&(a=Pd(u,a,m,t)));let g=X("output",e.dataType,a),S=L("input",e.dataType,u),b=k.size(a),w=u.length===a.length&&u.every((C,A)=>C===a[A]),v=t.coordinateTransformMode==="tf_crop_and_resize",y=C=>`\n      ${Td(t.coordinateTransformMode)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${kd(S,u)};\n              ${Od(t.nearestMode,r)};\n              ${Bd(S,g,u,a,m,d,v)};\n              `;case"linear":return`\n              ${Md(g,u,a,m,d)};\n              ${Dd(S,g,u,a,m,v,t.extrapolationValue)};\n              `;case"cubic":return`\n            ${Wd(S,g,u,a,m,d,t.cubicCoeffA,v,t.extrapolationValue,t.excludeOutside)};\n            `;default:throw Error("Invalid resize mode")}})()};\n      ${C.declareVariables(S,g)}\n      ${C.mainStart()}\n        ${C.guardAgainstOutOfBoundsWorkgroupSizes(b)}\n        if (${w}) {\n          output[global_idx] = input[global_idx];\n        } else {\n          let outputIndices = ${g.offsetToIndices("global_idx")};\n          var inputIndices: ${S.type.indices};\n          ${(()=>{switch(t.mode){case"nearest":return`inputIndices = calculateInputIndicesFromOutputIndices(outputIndices);\n                  if (checkInputIndices(inputIndices)) {\n                    output[global_idx] = input[${S.indicesToOffset("inputIndices")}];\n                  } else {\n                    output[global_idx] = ${t.extrapolationValue};\n                  }`;case"linear":return"output[global_idx] = bilinearInterpolation(outputIndices);";case"cubic":return"output[global_idx] = bicubicInterpolation(outputIndices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n        }\n      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${m.length>0?m:""}|${n.length>0?n:""}`},getShaderSource:y,getRunData:()=>({outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(b/64)}})}},Vd=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},_s=(e,t)=>{let r=[],o=[],n=[],s=Vd(e);Ed(e.inputs,t,s,r,o,n),e.compute(zd(e.inputs[0],t,s,r,o,n),{inputs:[0]})},Rs=e=>{let t=e.antialias,r=e.axes,o=e.coordinateTransformMode,n=e.cubicCoeffA,s=e.excludeOutside!==0,u=e.extrapolationValue,d=e.keepAspectRatioPolicy,a=e.mode,m=e.nearestMode===""?"simple":e.nearestMode;return se({antialias:t,axes:r,coordinateTransformMode:o,cubicCoeffA:n,excludeOutside:s,extrapolationValue:u,keepAspectRatioPolicy:d,mode:a,nearestMode:m})}});var Gd,Ud,Ms,Bs,ks=j(()=>{"use strict";ke();ge();Re();ve();Gd=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],o=e[2];if(t.dataType!==r.dataType||t.dataType!==o.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let n=t.dims[t.dims.length-1],s=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==n)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==s)throw new Error("Skip must have the same sequence length as input");if(o.dims.length!==1)throw new Error("Gamma must be 1D");if(o.dims[o.dims.length-1]!==n)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let u=e[3];if(u.dims.length!==1)throw new Error("Beta must be 1D");if(u.dims[u.dims.length-1]!==n)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let u=e[4];if(u.dims.length!==1)throw new Error("Bias must be 1D");if(u.dims[u.dims.length-1]!==n)throw new Error("Bias must have the same hidden size as input")}},Ud=(e,t,r,o)=>{let n=e[0].dims,s=k.size(n),u=n,d=s,a=n.slice(-1)[0],m=o?n.slice(0,-1).concat(1):[],g=e.length>3,S=e.length>4,b=o&&r>1,w=o&&r>2,v=r>3,y=ft(a),C=[L("x",e[0].dataType,e[0].dims,y),L("skip",e[1].dataType,e[1].dims,y),L("gamma",e[2].dataType,e[2].dims,y)];g&&C.push(L("beta",e[3].dataType,e[3].dims,y)),S&&C.push(L("bias",e[4].dataType,e[4].dims,y)),C.push(X("output",e[0].dataType,u,y)),b&&C.push(X("meanOutput",1,m)),w&&C.push(X("invStdOutput",1,m)),v&&C.push(X("inputSkipBiasSum",e[0].dataType,u,y));let A=Pe(e[0].dataType),R=M=>`\n      const hiddenSize: f32 = ${a};\n      const hiddenSizeVectorized: u32 = ${a/y};\n      const epsilon: f32 = ${t.epsilon};\n\n      ${M.declareVariables(...C)}\n\n      ${M.mainStart()}\n        ${M.guardAgainstOutOfBoundsWorkgroupSizes(d/a)}\n        let offset = global_idx * hiddenSizeVectorized;\n        var sum = ${Ye("f32",y)};\n        var squareSum = ${Ye("f32",y)};\n        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {\n          let skipValue = skip[offset + i];\n          let biasValue = ${S?"bias[i]":"0.0"};\n          let inputValue = x[offset + i];\n          let value = inputValue + skipValue + biasValue;\n          ${v?"inputSkipBiasSum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32Value = ${Ot(A,y,"value")};\n          sum += f32Value;\n          squareSum += f32Value * f32Value;\n        }\n        let mean = ${bt("sum",y)} / hiddenSize;\n        let variance = sqrt(${bt("squareSum",y)} / hiddenSize - mean * mean + epsilon);\n        ${b?"meanOutput[global_idx] = mean;":""}\n        ${w?"invStdOutput[global_idx] = 1.0 / variance;":""}\n        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {\n          output[offset + i] = (output[offset + i] - ${A}(mean)) / ${A}(variance) * gamma[i]\n           + ${g?"beta[i]":"0.0"};\n        }\n      }`,W=[{dims:u,dataType:e[0].dataType}];return r>1&&W.push({dims:m,dataType:1}),r>2&&W.push({dims:m,dataType:1}),r>3&&W.push({dims:n,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:t.cacheKey},getShaderSource:R,getRunData:()=>({outputs:W,dispatchGroup:{x:Math.ceil(d/a/64)}})}},Ms=(e,t)=>{Gd(e.inputs);let o=[0];e.outputCount>1&&o.push(-3),e.outputCount>2&&o.push(-3),e.outputCount>3&&o.push(3),e.compute(Ud(e.inputs,t,e.outputCount,!1),{outputs:o})},Bs=e=>{let t=e.epsilon;return se({epsilon:t})}});var Nd,Qr,Ld,Ds,Fd,Hd,Ws,zs,Vs=j(()=>{"use strict";ke();ge();Re();ve();Nd=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,o)=>{if(e[o+1].dataType!==6&&e[o+1].dataType!==7)throw new Error(`Input ${o} must be an array of int32 or int64`)})},Qr=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(o=>r.push(Number(o)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(o=>r.push(Number(o)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},Ld=(e,t)=>{if(e.length>1){let r=Qr(e,1),o=Qr(e,2),n=Qr(e,3);return n.length===0&&(n=[...Array(e[0].dims.length).keys()]),se({starts:r,ends:o,axes:n})}else return t},Ds=(e,t,r,o,n)=>{let s=e;return e<0&&(s+=r[o[t]]),n[t]<0?Math.max(0,Math.min(s,r[o[t]]-1)):Math.max(0,Math.min(s,r[o[t]]))},Fd=(e,t,r,o)=>`fn calculateInputIndices(outputIndices: ${t.type.indices}) -> ${e.type.indices} {\n          var inputIndices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${r.length}; i >= 0; i--) {\n            var outputIndex = ${o.length===1?"outputIndices":"outputIndices[i]"};\n            var inputIndex = outputIndex * steps[i] + starts[i] + carry;\n            carry = inputIndex / inputShape[i];\n            inputIndex = inputIndex % inputShape[i];\n            if (signs[i] < 0) {\n              inputIndex = inputShape[i] - inputIndex - 1u + starts[i];\n            }\n            ${r.length===1?"inputIndices":"inputIndices[i]"} = inputIndex;\n          }\n          return inputIndices;\n      }`,Hd=(e,t)=>{let r=e[0].dims,o=k.size(r),n=t.axes.length>0?k.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],s=Qr(e,4);s.forEach(y=>y!==0||(()=>{throw new Error("step cannot be 0")})),s.length===0&&(s=Array(n.length).fill(1));let u=t.starts.map((y,C)=>Ds(y,C,r,n,s)),d=t.ends.map((y,C)=>Ds(y,C,r,n,s));if(n.length!==r.length)for(let y=0;y<r.length;++y)n.includes(y)||(u.splice(y,0,0),d.splice(y,0,r[y]),s.splice(y,0,1));let a=s.map(y=>Math.sign(y));s.forEach((y,C,A)=>{if(y<0){let R=(d[C]-u[C])/y,W=u[C],M=W+R*s[C];u[C]=M,d[C]=W,A[C]=-y}});let m=r.slice(0);n.forEach((y,C)=>{m[y]=Math.ceil((d[y]-u[y])/s[y])});let g={dims:m,dataType:e[0].dataType},S=X("output",e[0].dataType,m),b=L("input",e[0].dataType,r),w=k.size(m),v=y=>`\n      ${y.declareVariables(b,S)}\n        const signs = array<i32, ${a.length}>(${a.map(C=>`${C}i`).join(",")});\n        const starts = array<u32, ${u.length}>(${u.map(C=>`${C}u`).join(",")});\n        const ends = array<u32, ${d.length}>(${d.map(C=>`${C}u`).join(",")});\n        const steps = array<u32, ${s.length}>(${s.map(C=>`${C}u`).join(",")});\n        const inputShape = array<u32, ${r.length}>(${r.map(C=>`${C}u`).join(",")});\n\n        ${Fd(b,S,r,m)}\n        ${y.mainStart()}\n          ${y.guardAgainstOutOfBoundsWorkgroupSizes(w)}\n          let outputIndices = ${S.offsetToIndices("global_idx")};\n          let inputIndices = calculateInputIndices(outputIndices);\n          ${S.setByOffset("global_idx",b.getByIndices("inputIndices"))}\n      }`;return{name:"Slice",shaderCache:{hint:`${t.cacheKey}|${e[4]?.dims??""}`},getShaderSource:v,getRunData:()=>({outputs:[g],dispatchGroup:{x:Math.ceil(o/64)}})}},Ws=(e,t)=>{Nd(e.inputs,t);let r=Ld(e.inputs,t);e.compute(Hd(e.inputs,r),{inputs:[0]})},zs=e=>{let t=e.starts,r=e.ends,o=e.axes;return se({starts:t,ends:r,axes:o})}});var jd,Kd,Gs,Us,Ns=j(()=>{"use strict";ge();Re();ve();jd=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},Kd=(e,t)=>{let r=Pe(e.dataType),o=e.dims,n=k.size(o),s=64,u=t.axis;if(u<0&&(u=o.length+u),u<o.length-1)throw new Error("softmax only supports last axis for now.");let d=o[u],a=n/d,m=ft(d),g=d/m,S=m===1?r:`vec${m}<${r}>`,b=(y,C)=>C===4?`max(max(${y}.x, ${y}.y), max(${y}.z, ${y}.w))`:C===2?`max(${y}.x, ${y}.y)`:C===3?`max(max(${y}.x, ${y}.y), ${y}.z)`:y,w=r==="f32"?`var threadMax = ${S}(-3.402823e+38f);`:`var threadMax = ${S}(-65504.0h);`;return{name:"Softmax",getRunData:()=>({outputs:[{dims:o,dataType:e.dataType}],dispatchGroup:{x:a}}),getShaderSource:y=>`\n      var<workgroup> rowMaxShared : ${S};\n      var<workgroup> rowSumShared : ${S};\n      var<workgroup> threadShared : array<${S}, ${s}>;\n\n      @group(0) @binding(0) var<storage, read> x : array<${S}>;\n      @group(0) @binding(1) var<storage, read_write> result : array<${S}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${S} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${S}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n\n      @compute @workgroup_size(${s}, 1, 1)\n      fn main(@builtin(local_invocation_id) local_id : vec3<u32>, @builtin(global_invocation_id) global_id : vec3u) {\n        let gindex = i32(global_id.x);\n        let lindex = i32(local_id.x);\n        const wg = ${s};\n        let row = gindex / wg;\n        let cols = ${g};\n        let row_stride : i32 = ${g};\n\n        // find the rows max\n        ${w}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${S}(${b("threadShared[0]",m)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${S}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${S}(${bt("threadShared[0]",m)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`}},Gs=(e,t)=>{jd(e.inputs),e.compute(Kd(e.inputs[0],t))},Us=e=>se({axis:e.axis})});var qd,Yd,Xd,Jd,Zd,Ls,Fs,Hs=j(()=>{"use strict";ge();Re();ve();qd=e=>{if(!e||e.length<1)throw new Error("too few inputs")},Yd=(e,t)=>{let r=[],o=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(n=>r.push(Number(n))),o=r.length),se({numOutputs:o,axis:t.axis,splitSizes:r})},Xd=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < sizeInConcatAxis[i]) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,Jd=e=>{let t=e.length,r=[];for(let o=0;o<t;++o){let n=e[o].setByIndices("indices","input[global_idx]");t===1?r.push(n):o===0?r.push(`if (outputNumber == ${o}u) { ${n} }`):o===t-1?r.push(`else { ${n} }`):r.push(`else if (outputNumber == ${o}) { ${n} }`)}return`\n      fn writeBufferData(outputNumber: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${r.join(`\n`)}\n      }`},Zd=(e,t)=>{let r=e[0].dims,o=k.size(r),n=e[0].dataType,s=r.length,u=t.axis,d=u<0?r.length+u:u,a=new Array(t.numOutputs),m=L("input",n,r),g=new Array(t.numOutputs),S=[],b=[],w=0;for(let C=0;C<t.numOutputs;C++){w+=t.splitSizes[C],g[C]=w;let A=r.slice();A[t.axis]=t.splitSizes[C],b.push(A),a[C]=X(`output${C}`,n,b[C]),S.push({dims:b[C],dataType:e[0].dataType})}let v=s<2?"indices":`indices[${d}]`,y=C=>`\n  ${C.declareVariables(m,...a)}\n  const sizeInConcatAxis = array<u32, ${g.length}>(${g.map(A=>`${A}u`).join(",")});\n  ${Xd(g.length)}\n  ${Jd(a)}\n\n  ${C.mainStart()}\n    ${C.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n\n    var indices = ${m.offsetToIndices("global_idx")};\n    let outputNumber = calculateOutputIndex(${v});\n    if (outputNumber != 0) {\n        ${v} -= sizeInConcatAxis[outputNumber - 1u];\n    }\n    writeBufferData(outputNumber, indices, global_idx);\n  }`;return{name:"Split",shaderCache:{hint:t.cacheKey},getShaderSource:y,getRunData:()=>({outputs:S,dispatchGroup:{x:Math.ceil(o/64)}})}},Ls=(e,t)=>{qd(e.inputs);let r=e.inputs.length===1?t:Yd(e.inputs,t);e.compute(Zd(e.inputs,r),{inputs:[0]})},Fs=e=>{let t=e.axis,r=e.splitSizes,o=e.numOutputs<0?r.length:e.numOutputs;if(o!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return se({axis:t,numOutputs:o,splitSizes:r})}});var js,Qd,ec,tc,Ks,qs=j(()=>{"use strict";ke();ge();ve();js=e=>Array.from(e.getBigInt64Array(),Number),Qd=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(js(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},ec=(e,t)=>{let r=[];for(let o=0;o<e.length;++o)r.push(e[o]*t[o]);return r},tc=e=>{let t=e[0].dims,r=js(e[1]),o=ec(t,r),n=k.size(o),s=e[0].dataType,u=L("input",s,t),d=X("output",s,o),a=m=>`\n      const inputShape = ${u.indices(...t)};\n      ${m.declareVariables(u,d)}\n      ${m.mainStart()}\n      ${m.guardAgainstOutOfBoundsWorkgroupSizes(n)}\n      let outputIndices = ${d.offsetToIndices("global_idx")};\n      var inputIndices: ${u.type.indices};\n      for (var i = 0; i < ${t.length}; i++) {\n        let inputDimValue = ${d.indicesGet("outputIndices","i")}  % ${u.indicesGet("inputShape","i")};\n\n        ${u.indicesSet("inputIndices","i","inputDimValue")}\n      }\n      ${d.setByOffset("global_idx",u.getByIndices("inputIndices"))}\n    }`;return{name:"Tile",shaderCache:{hint:`${r}`},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:a}},Ks=e=>{Qd(e.inputs),e.compute(tc(e.inputs),{inputs:[0]})}});var rc,nc,Ys,Xs=j(()=>{"use strict";ke();ge();ve();rc=(e,t,r,o,n)=>{let s=k.size(r),u=Math.ceil(s/4),d=X("outputData",n,r,4),a=L("aData",t[1].dataType,t[1].dims,4),m=L("bData",t[2].dataType,t[2].dims,4),g=L("cData",t[0].dataType,t[0].dims,4),S,b=(w,v,y)=>`select(${v}, ${w}, ${y})`;if(!o)S=d.setByOffset("global_idx",b(a.getByOffset("global_idx"),m.getByOffset("global_idx"),g.getByOffset("global_idx")));else{let w=(v,y,C="")=>{let A=`aData[indexA${y}][componentA${y}]`,R=`bData[indexB${y}][componentB${y}]`,W=`bool(cData[indexC${y}] & ${4278190080>>>(3-y)*8}u)`;return`\n            let outputIndices${y} = ${d.offsetToIndices(`global_idx * 4u + ${y}u`)};\n            let offsetA${y} = ${a.broadcastedIndicesToOffset(`outputIndices${y}`,d)};\n            let offsetB${y} = ${m.broadcastedIndicesToOffset(`outputIndices${y}`,d)};\n            let offsetC${y} = ${g.broadcastedIndicesToOffset(`outputIndices${y}`,d)};\n            let indexA${y} = offsetA${y} / 4u;\n            let indexB${y} = offsetB${y} / 4u;\n            let indexC${y} = offsetC${y} / 4u;\n            let componentA${y} = offsetA${y} % 4u;\n            let componentB${y} = offsetB${y} % 4u;\n            ${v}[${y}] = ${C}(${b(A,R,W)});\n          `};n===9?S=`\n            var data = vec4<u32>(0);\n            ${w("data",0,"u32")}\n            ${w("data",1,"u32")}\n            ${w("data",2,"u32")}\n            ${w("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:S=`\n            ${w("outputData[global_idx]",0)}\n            ${w("outputData[global_idx]",1)}\n            ${w("outputData[global_idx]",2)}\n            ${w("outputData[global_idx]",3)}\n          `}return`\n        ${e.declareVariables(g,a,m,d)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n        ${S}\n      }`},nc=e=>{let t=e[1].dims,r=e[2].dims,o=e[0].dims,n=e[1].dataType,s=!(k.areEqual(t,r)&&k.areEqual(r,o)),u=t,d=k.size(t);if(s){let a=et.calcShape(et.calcShape(t,r,!1),o,!1);if(!a)throw new Error("Can\'t perform where op on the given tensors");u=a,d=k.size(u)}return{name:"Where",getShaderSource:a=>rc(a,e,u,s,n),getRunData:()=>({outputs:[{dims:u,dataType:n}],dispatchGroup:{x:Math.ceil(d/64/4)}})}},Ys=e=>{e.compute(nc(e.inputs))}});var Js,Zs=j(()=>{"use strict";fa();ha();qa();ai();ui();kn();$i();Ai();Ti();Ri();Bi();Wi();Gi();Li();Hi();qi();ls();Os();Wr();Ps();ks();Vs();Ns();Hs();qs();dr();Rn();Xs();Js=new Map([["Abs",[ga]],["Acos",[ya]],["Acosh",[ba]],["Add",[Ya]],["ArgMax",[pa,On]],["ArgMin",[ca,On]],["Asin",[wa]],["Asinh",[va]],["Atan",[$a]],["Atanh",[xa]],["AveragePool",[es,Qi]],["BiasAdd",[ma]],["BiasSplitGelu",[Ka]],["Cast",[Ca,Sa]],["Ceil",[Ia]],["ClipV10",[_n]],["Clip",[Aa]],["Concat",[ii,si]],["Conv",[Wn,Dn]],["ConvTranspose",[vi,wi]],["Cos",[Ea]],["Cosh",[Ta]],["Div",[Xa]],["Einsum",[Si,Ci]],["Elu",[Oa,Vr]],["Equal",[Ja]],["Erf",[_a]],["Exp",[Ra]],["Expand",[Ei]],["Floor",[Pa]],["FusedConv",[Wn,Dn]],["Gather",[_i,Oi]],["GatherElements",[Mi,Pi]],["Gelu",[Ma]],["Gemm",[ki,Di]],["GlobalAveragePool",[ns,rs]],["GlobalMaxPool",[us,ss]],["Greater",[ti]],["GreaterOrEqual",[ni]],["InstanceNormalization",[Vi,zi]],["LayerNormalization",[Ni,Ui]],["LeakyRelu",[Ba,Vr]],["Less",[ri]],["LessOrEqual",[oi]],["Log",[ja]],["MatMul",[Fi]],["MaxPool",[as,is]],["Mul",[Za]],["Neg",[Da]],["Not",[ka]],["Pad",[ji,Ki]],["Pow",[Qa]],["Range",[Ts]],["Reciprocal",[Wa]],["ReduceMin",[oa,Xe]],["ReduceMean",[Qo,Xe]],["ReduceMax",[na,Xe]],["ReduceSum",[ia,Xe]],["ReduceProd",[aa,Xe]],["ReduceL1",[ea,Xe]],["ReduceL2",[ta,Xe]],["ReduceLogSum",[ua,Xe]],["ReduceLogSumExp",[ra,Xe]],["ReduceSumSquare",[sa,Xe]],["Relu",[za]],["Resize",[_s,Rs]],["Sigmoid",[Va]],["Sin",[Ga]],["Sinh",[Ua]],["Slice",[Ws,zs]],["SkipLayerNormalization",[Ms,Bs]],["Split",[Ls,Fs]],["Sqrt",[Na]],["Softmax",[Gs,Us]],["Sub",[ei]],["Tan",[La]],["Tanh",[Fa]],["ThresholdedRelu",[Ha,Vr]],["Tile",[Ks]],["Transpose",[Go,Uo]],["Where",[Ys]]])});var en,Qs=j(()=>{"use strict";ke();yt();ve();en=class{constructor(t){this.backend=t;this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,o,n,s,u,d){let a=this.backend.device,m=this.backend.getComputePassEncoder();m.setPipeline(t.computePipeline);let g=[];for(let b of n)g.push({binding:g.length,resource:{buffer:b.buffer}});for(let b of s)g.push({binding:g.length,resource:{buffer:b.buffer}});d&&g.push({binding:g.length,resource:d});let S=a.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:g,label:t.programInfo.name});if(m.setBindGroup(0,S),m.dispatchWorkgroups(...u),this.backend.pendingDispatchNumber++,this.backend.isQueryEnabled()){typeof this.backend.queryData>"u"&&(this.backend.queryData=this.backend.gpuDataManager.create(this.backend.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE));let b=this.backend.gpuDataManager.create(this.backend.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.backend.endComputePass(),this.backend.getCommandEncoder().resolveQuerySet(this.backend.querySet,0,2,this.backend.queryData.buffer,0),this.backend.getCommandEncoder().copyBufferToBuffer(this.backend.queryData.buffer,0,b.buffer,0,this.backend.querySetCount*8),this.backend.flush();let w=this.backend.currentKernelId,v=this.backend.kernels.get(w),y=`[${v[0]}] ${v[1]}`;b.buffer.mapAsync(GPUMapMode.READ).then(()=>{let C=new BigUint64Array(b.buffer.getMappedRange()),A=C[0],R=C[1];b.buffer.unmap(),typeof this.backend.queryTimeBase>"u"&&(this.backend.queryTimeBase=A);let W=Number(A-this.backend.queryTimeBase),M=Number(R-this.backend.queryTimeBase);if(!Number.isSafeInteger(W)||!Number.isSafeInteger(M))throw new RangeError("incorrect timestamp range");this.backend.gpuDataManager.release(b.id);let D="";r.forEach((z,F)=>{D+=`input[${F}]: [${z.dims}] | ${sr(z.dataType)}, `});let _="";o.forEach((z,F)=>{_+=`output[${F}]: [${z.dims}] | ${sr(z.dataType)}, `}),console.log(`[profiling] kernel "${w}|${y}" ${D}${_}execution time: ${M-W} ns`)})}this.backend.pendingDispatchNumber>=16&&this.backend.flush()}dispose(){}build(t,r){let o=this.backend.device,n=[];o.features.has("shader-f16")&&n.push("enable f16;");let s=Wo(r),u=t.getShaderSource(s),d=`${n.join(`\n`)}\n${s.additionalImplementations}\n${u}`,a=o.createShaderModule({code:d,label:t.name});Ie("verbose",()=>`[WebGPU] shader code: ${d}`);let m=o.createComputePipeline({compute:{module:a,entryPoint:"main"},layout:"auto",label:t.name});return{programInfo:t,computePipeline:m}}normalizeDispatchGroupSize(t){let r=typeof t=="number"?t:t.x,o=typeof t=="number"?1:t.y||1,n=typeof t=="number"?1:t.z||1,s=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=s&&o<=s&&n<=s)return[r,o,n];let u=r*o*n,d=Math.ceil(Math.sqrt(u));if(d>s){if(d=Math.ceil(Math.cbrt(u)),d>s)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[d,d,d]}else return[d,d,1]}}});var oc,ac,tn,eu=j(()=>{"use strict";yt();_o();Bo();Zs();Qs();oc=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let o=0;o<e.length;++o){let n=e[o].dataType;switch(t[o]){case"none":{r.push("");break}case"type":{r.push(`${n}`);break}case"rank":{let s=e[o].dims.length;r.push(`${n};${s}`);break}case"dims":{let s=e[o].dims.join(",");r.push(`${n};${s}`);break}default:throw new Error(`unsupported input dependency: ${t[o]}`)}}return r.join("|")},ac=(e,t)=>{let r=e.name;return e.shaderCache?.hint&&(r+="["+e.shaderCache.hint+"]"),r+=`:${oc(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,r},tn=class{constructor(){this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.pendingDispatchNumber=0;this.querySetCount=2;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t){if(!navigator.gpu)throw new Error("WebGpuBackend: WebGPU is not available.");let r=await navigator.gpu.requestAdapter();if(!r)throw new Error("WebGpuBackend: Failed to get GPU adapter.");this.env=t;let o=[],n={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:o};r.features.has("timestamp-query")&&o.push("timestamp-query"),r.features.has("shader-f16")&&o.push("shader-f16"),this.device=await r.requestDevice(n),this.gpuDataManager=Mo(this),this.programManager=new en(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,To(t.logLevel,!!t.debug),this.device.onuncapturederror=s=>{s.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${s.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device})}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t={};this.isQueryEnabled()&&(typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1}),this.computePassEncoder=this.getCommandEncoder().beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){this.commandEncoder&&(this.endComputePass(),this.device.queue.submit([this.getCommandEncoder().finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0)}isQueryEnabled(){return!!(this.device.features.has("timestamp-query")&&this.env.webgpu.profilingMode==="default")}run(t,r,o,n,s){let u=[];for(let A=0;A<r.length;++A){let R=this.gpuDataManager.get(r[A].data);if(!R)throw new Error(`no GPU data for input: ${r[A].data}`);u[A]=R}let d=ac(t,r),a=this.programManager.getArtifact(d),{outputs:m,dispatchGroup:g,programUniforms:S}=t.getRunData(r),b=o.length===0?m.map((A,R)=>R):o;if(b.length!==m.length)throw new Error(`Output size ${b.length} must be equal to ${m.length}.`);let w=[],v=[];for(let A=0;A<m.length;++A){if(!Number.isInteger(b[A])||b[A]<-3||b[A]>=m.length)throw new Error(`Invalid output index: ${b[A]}`);if(b[A]===-3)continue;let R=b[A]===-1,W=b[A]===-2,M=R||W?s(m[A].dataType,m[A].dims):n(b[A],m[A].dataType,m[A].dims),D=this.gpuDataManager.get(M.data);if(!D)throw new Error(`no GPU data for output: ${M.data}`);if(R&&this.temporaryData.push(D),W){let _=this.kernelPersistentData.get(this.currentKernelId);_||(_=[],this.kernelPersistentData.set(this.currentKernelId,_)),_.push(D)}w.push(M),v.push(D)}let y;if(S){let A=0,R=0,W=[],M=1;S.forEach(z=>{let F=typeof z.data=="number"?[z.data]:z.data,q;switch(F.length){case 1:q=4;break;case 2:q=8;break;case 3:q=16;break;case 4:q=16;break;case 5:q=16;break;case 6:q=16;break;default:throw new Error(`unsupported data length: ${F.length}`)}(R===5||R===6)&&(q=16),q>M&&(M=q),A=Math.ceil(A/q)*q,R=F.length,W.push(A),A+=F.length*4}),A=Math.ceil(A/M)*M;let D=new ArrayBuffer(A);S.forEach((z,F)=>{let q=W[F],le=typeof z.data=="number"?[z.data]:z.data;z.type==="int32"?new Int32Array(D,q,le.length).set(le):z.type==="uint32"?new Uint32Array(D,q,le.length).set(le):new Float32Array(D,q,le.length).set(le)});let _=this.gpuDataManager.create(A,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(_.buffer,0,D,0,A),this.gpuDataManager.release(_.id),y={offset:0,size:A,buffer:_.buffer}}let C=this.programManager.normalizeDispatchGroupSize(g);return a||(a=this.programManager.build(t,C),this.programManager.setArtifact(d,a)),Ie("info",()=>`[ProgramManager] run "${t.name}" (key=${d}) with ${C[0]}x${C[1]}x${C[2]}`),this.programManager.run(a,r,w,u,v,C,y),w}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,o,n){let s=Js.get(t);if(!s)throw new Error(`kernel not implemented: ${t}`);this.kernels.set(r,[t,n,s[0],[s[1],o]])}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let o of r)this.gpuDataManager.release(o.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,o){let n=this.kernels.get(t);if(!n)throw new Error(`kernel not created: ${t}`);let[s,u,d,a]=n;if(this.currentKernelId!==null)throw new Error(`kernel "[${s}] ${u}" is not allowed to be called recursively`);this.currentKernelId=t,a[0]&&(a[1]=a[0](a[1]),a[0]=void 0),Ie("info",()=>`[WebGPU] Start to run kernel "[${s}] ${u}"...`);let m=this.env.debug;this.temporaryData=[];try{return m&&this.device.pushErrorScope("validation"),d(r,a[1]),0}catch(g){return o.push(Promise.resolve(`[WebGPU] Kernel "[${s}] ${u}" failed. ${g}`)),1}finally{m&&o.push(this.device.popErrorScope().then(g=>g?`GPU validation error for kernel "[${s}] ${u}": ${g.message}`:null));for(let g of this.temporaryData)this.gpuDataManager.release(g.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,o,n){let s=this.sessionExternalDataMapping.get(t);s||(s=new Map,this.sessionExternalDataMapping.set(t,s));let u=s.get(r),d=this.gpuDataManager.registerExternalBuffer(o,n,u?.[1]);return s.set(r,[d,o]),d}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(o=>this.gpuDataManager.unregisterExternalBuffer(o[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw new Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,o){return async()=>{let n=await xn(this,t,r);return Oo(n.buffer,o)}}}});var tu={};_r(tu,{init:()=>ic});var hr,Ln,ic,ru=j(()=>{"use strict";ke();eu();yt();ge();hr=class e{constructor(t,r,o,n){this.module=t;this.dataType=r;this.data=o;this.dims=n}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=k.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=k.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=k.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(k.size(t)!==k.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},Ln=class{constructor(t,r,o){this.module=t;this.backend=r;this.customDataOffset=0;this.customDataSize=0;let n=t.HEAPU32,s=o>>2;this.opKernelContext=n[s++];let u=n[s++];this.outputCount=n[s++],this.customDataOffset=n[s++],this.customDataSize=n[s++];let d=[];for(let a=0;a<u;a++){let m=n[s++],g=n[s++],S=n[s++],b=[];for(let w=0;w<S;w++)b.push(n[s++]);d.push(new hr(t,m,g,b))}this.inputs=d}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(t,r){let o=r?.inputs?.map(d=>typeof d=="number"?this.inputs[d]:d)??this.inputs,n=r?.outputs??[],s=(d,a,m)=>new hr(this.module,a,this.output(d,m),m),u=(d,a)=>{let m=ur(d);if(!m)throw new Error(`Unsupported data type: ${d}`);let g=m*k.size(a);return new hr(this.module,d,this.backend.gpuDataManager.create(g).id,a)};return this.backend.run(t,o,n,s,u)}output(t,r){let o=this.module.stackSave();try{let n=this.module.stackAlloc((1+r.length)*4),s=n>>2;this.module.HEAPU32[s++]=r.length;for(let u=0;u<r.length;u++)this.module.HEAPU32[s++]=r[u];return this.module._JsepOutput(this.opKernelContext,t,n)}catch(n){throw new Error(`Failed to generate kernel\'s output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(o)}}},ic=async(e,t)=>{let r=e.jsepInit;if(r&&navigator.gpu){if(!t.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using WebGPU EP");let o=new tn;await o.initialize(t),r(o,n=>o.alloc(n),n=>o.free(n),(n,s,u,d=!1)=>{if(d)Ie("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${n}, dst=${s}, size=${u}`),o.memcpy(n,s);else{Ie("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${n}, gpuDataId=${s}, size=${u}`);let a=e.HEAPU8.subarray(n,n+u);o.upload(s,a)}},async(n,s,u)=>{Ie("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${n}, dataOffset=${s}, size=${u}`),await o.download(n,()=>e.HEAPU8.subarray(s,s+u))},(n,s,u)=>o.createKernel(n,s,u,t.debug||t.webgpu.profilingMode==="default"?e.UTF8ToString(e._JsepGetNodeName(s)):`${s}`),n=>o.releaseKernel(n),(n,s,u,d)=>{Ie("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${u}, kernel=${n}, contextDataOffset=${s}`);let a=new Ln(e,o,s);return o.computeKernel(n,a,d)})}}});var $o;$o=co();var Ru=bo(),yn,bn=!1,Rr=!1,vo=!1,Pu=()=>{try{return typeof SharedArrayBuffer>"u"?!1:(typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch{return!1}},Mu=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Bu=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",xo=async e=>{if(bn)return Promise.resolve();if(Rr)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(vo)throw new Error("previous call to \'initializeWebAssembly()\' failed.");Rr=!0;let t=e.initTimeout,r=e.numThreads,o=e.simd,n=r>1&&Pu(),s=o&&Mu(),u=e.wasmPaths,d=typeof u=="string"?u:void 0,a=Bu(s,n),m=typeof u=="object"?u[a]:void 0,g=!1,S=[];if(t>0&&S.push(new Promise(b=>{setTimeout(()=>{g=!0,b()},t)})),S.push(new Promise((b,w)=>{let v=n?Ru:$o,y={locateFile:(C,A)=>{if(n&&C.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([wo()],{type:"text/javascript"}));if(C.endsWith(".wasm")){if(m)return m;let R=d??A;return a==="ort-wasm-simd.wasm"?R+"ort-wasm-simd.jsep.wasm":a==="ort-wasm-simd-threaded.wasm"?R+"ort-wasm-simd-threaded.jsep.wasm":R+a}return A+C}};if(n)if(typeof Blob>"u")y.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let C=`var ortWasmThreaded=${v.toString()};`;y.mainScriptUrlOrBlob=new Blob([C],{type:"text/javascript"})}v(y).then(C=>{Rr=!1,bn=!0,yn=C,b()},C=>{Rr=!1,vo=!0,w(C)})})),await Promise.race(S),g)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},_e=()=>{if(bn&&yn)return yn;throw new Error("WebAssembly is not initialized yet.")};var Be=(e,t)=>{let r=_e(),o=r.lengthBytesUTF8(e)+1,n=r._malloc(o);return r.stringToUTF8(e,n,o),t.push(n),n},ir=(e,t,r,o)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([n,s])=>{let u=t?t+n:n;if(typeof s=="object")ir(s,u+".",r,o);else if(typeof s=="string"||typeof s=="number")o(u,s.toString());else if(typeof s=="boolean")o(u,s?"1":"0");else throw new Error(`Can\'t handle extra config type: ${typeof s}`)})},Ce=e=>{let t=_e(),r=t.stackSave();try{let o=t.stackAlloc(8);t._OrtGetLastError(o,o+4);let n=t.HEAP32[o/4],s=t.HEAPU32[o/4+1],u=s?t.UTF8ToString(s):"";throw new Error(`${e} ERROR_CODE: ${n}, ERROR_MESSAGE: ${u}`)}finally{t.stackRestore(r)}};var So=e=>{let t=_e(),r=0,o=[],n=e||{};try{if(e?.logSeverityLevel===void 0)n.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)n.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(n.terminate=!1);let s=0;return e?.tag!==void 0&&(s=Be(e.tag,o)),r=t._OrtCreateRunOptions(n.logSeverityLevel,n.logVerbosityLevel,!!n.terminate,s),r===0&&Ce("Can\'t create run options."),e?.extra!==void 0&&ir(e.extra,"",new WeakSet,(u,d)=>{let a=Be(u,o),m=Be(d,o);t._OrtAddRunConfigEntry(r,a,m)!==0&&Ce(`Can\'t set a run config entry: ${u} - ${d}.`)}),[r,o]}catch(s){throw r!==0&&t._OrtReleaseRunOptions(r),o.forEach(u=>t._free(u)),s}};var ku=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Du=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Wu=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},zu=(e,t,r)=>{for(let o of t){let n=typeof o=="string"?o:o.name;switch(n){case"xnnpack":n="XNNPACK";break;case"webnn":if(n="WEBNN",typeof o!="string"){let u=o;if(u?.deviceType){let d=Be("deviceType",r),a=Be(u.deviceType,r);_e()._OrtAddSessionConfigEntry(e,d,a)!==0&&Ce(`Can\'t set a session config entry: \'deviceType\' - ${u.deviceType}.`)}if(u?.powerPreference){let d=Be("powerPreference",r),a=Be(u.powerPreference,r);_e()._OrtAddSessionConfigEntry(e,d,a)!==0&&Ce(`Can\'t set a session config entry: \'powerPreference\' - ${u.powerPreference}.`)}}break;case"webgpu":if(n="JS",typeof o!="string"){let u=o;if(u?.preferredLayout){if(u.preferredLayout!=="NCHW"&&u.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either \'NCHW\' or \'NHWC\': ${u.preferredLayout}`);let d=Be("preferredLayout",r),a=Be(u.preferredLayout,r);_e()._OrtAddSessionConfigEntry(e,d,a)!==0&&Ce(`Can\'t set a session config entry: \'preferredLayout\' - ${u.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${n}`)}let s=Be(n,r);_e()._OrtAppendExecutionProvider(e,s)!==0&&Ce(`Can\'t append execution provider: ${n}.`)}},Co=e=>{let t=_e(),r=0,o=[],n=e||{};Wu(n);try{let s=ku(n.graphOptimizationLevel??"all"),u=Du(n.executionMode??"sequential"),d=typeof n.logId=="string"?Be(n.logId,o):0,a=n.logSeverityLevel??2;if(!Number.isInteger(a)||a<0||a>4)throw new Error(`log serverity level is not valid: ${a}`);let m=n.logVerbosityLevel??0;if(!Number.isInteger(m)||m<0||m>4)throw new Error(`log verbosity level is not valid: ${m}`);let g=typeof n.optimizedModelFilePath=="string"?Be(n.optimizedModelFilePath,o):0;if(r=t._OrtCreateSessionOptions(s,!!n.enableCpuMemArena,!!n.enableMemPattern,u,!!n.enableProfiling,0,d,a,m,g),r===0&&Ce("Can\'t create session options."),n.executionProviders&&zu(r,n.executionProviders,o),n.freeDimensionOverrides)for(let[S,b]of Object.entries(n.freeDimensionOverrides)){if(typeof S!="string")throw new Error(`free dimension override name must be a string: ${S}`);if(typeof b!="number"||!Number.isInteger(b)||b<0)throw new Error(`free dimension override value must be a non-negative integer: ${b}`);let w=Be(S,o);t._OrtAddFreeDimensionOverride(r,w,b)!==0&&Ce(`Can\'t set a free dimension override: ${S} - ${b}.`)}return n.extra!==void 0&&ir(n.extra,"",new WeakSet,(S,b)=>{let w=Be(S,o),v=Be(b,o);t._OrtAddSessionConfigEntry(r,w,v)!==0&&Ce(`Can\'t set a session config entry: ${S} - ${b}.`)}),[r,o]}catch(s){throw r!==0&&t._OrtReleaseSessionOptions(r),o.forEach(u=>t._free(u)),s}};ke();var ou=!1,sc=e=>{let t=_e(),r=t.stackSave();try{let o=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,o,o+4)!==0&&Ce("Can\'t get session input/output count."),[t.HEAP32[o/4],t.HEAP32[o/4+1]]}finally{t.stackRestore(r)}},uc=(e,t)=>{_e()._OrtInit(e,t)!==0&&Ce("Can\'t initialize onnxruntime.")},au=async e=>{uc(e.wasm.numThreads,lr(e.logLevel));{let t=(ru(),zt(tu)).init;await t(_e(),e)}ou=!0},gr=new Map,iu=()=>ou,Fn=e=>{let t=_e(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},Hn=(e,t)=>{let r=_e(),o=0,n=0,s=0,u=[],d=[],a=[];try{[n,u]=Co(t),o=r._OrtCreateSession(e[0],e[1],n),o===0&&Ce("Can\'t create a session.");let[m,g]=sc(o),S=[],b=[],w=[];for(let y=0;y<m;y++){let C=r._OrtGetInputName(o,y);C===0&&Ce("Can\'t get an input name."),d.push(C),S.push(r.UTF8ToString(C))}for(let y=0;y<g;y++){let C=r._OrtGetOutputName(o,y);C===0&&Ce("Can\'t get an output name."),a.push(C);let A=r.UTF8ToString(C);b.push(A);{let R=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[A]??"cpu";if(R!=="cpu"&&R!=="cpu-pinned"&&R!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${R}.`);w.push(R)}}let v=null;return w.some(y=>y==="gpu-buffer")&&(s=r._OrtCreateBinding(o),s===0&&Ce("Can\'t create IO binding."),v={handle:s,outputPreferredLocations:w,outputPreferredLocationsEncoded:w.map(y=>vn(y))}),gr.set(o,[o,d,a,v]),[o,S,b]}catch(m){throw d.forEach(g=>r._OrtFree(g)),a.forEach(g=>r._OrtFree(g)),s!==0&&r._OrtReleaseBinding(s),o!==0&&r._OrtReleaseSession(o),m}finally{r._free(e[0]),n!==0&&r._OrtReleaseSessionOptions(n),u.forEach(m=>r._free(m))}},su=(e,t)=>{let r=Fn(e);return Hn(r,t)},uu=e=>{let t=_e(),r=gr.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[o,n,s,u]=r;u&&t._OrtReleaseBinding(u.handle),t.jsepUnregisterBuffers?.(e),n.forEach(d=>t._OrtFree(d)),s.forEach(d=>t._OrtFree(d)),t._OrtReleaseSession(o),gr.delete(e)},nu=(e,t,r,o,n)=>{if(!e){t.push(0);return}let s=_e(),u=e[0],d=e[1],a=e[3],m,g;if(u==="string"&&a==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(a==="gpu-buffer"){let w=e[2].gpuBuffer,v=ur(wn(u));g=d.reduce((y,C)=>y*C,1)*v,m=s.jsepRegisterBuffer(o,n,w,g)}else{let w=e[2];if(Array.isArray(w)){g=4*w.length,m=s._malloc(g),r.push(m);let v=m/4;for(let y=0;y<w.length;y++){if(typeof w[y]!="string")throw new TypeError(`tensor data at index ${y} is not a string`);s.HEAPU32[v++]=Be(w[y],r)}}else g=w.byteLength,m=s._malloc(g),r.push(m),s.HEAPU8.set(new Uint8Array(w.buffer,w.byteOffset,g),m)}let S=s.stackSave(),b=s.stackAlloc(4*d.length);try{let w=b/4;d.forEach(y=>s.HEAP32[w++]=y);let v=s._OrtCreateTensor(wn(u),m,g,b,d.length,vn(a));v===0&&Ce(`Can\'t create tensor for input/output. session=${o}, index=${n}.`),t.push(v)}finally{s.stackRestore(S)}},lu=async(e,t,r,o,n,s)=>{let u=_e(),d=gr.get(e);if(!d)throw new Error(`cannot run inference. invalid session id: ${e}`);let[a,m,g,S]=d,b=t.length,w=o.length,v=0,y=[],C=[],A=[],R=[],W=u.stackSave(),M=u.stackAlloc(b*4),D=u.stackAlloc(b*4),_=u.stackAlloc(w*4),z=u.stackAlloc(w*4);try{[v,y]=So(s);for(let ae=0;ae<b;ae++)nu(r[ae],C,R,e,t[ae]);for(let ae=0;ae<w;ae++)nu(n[ae],A,R,e,b+o[ae]);let F=M/4,q=D/4,le=_/4,B=z/4;for(let ae=0;ae<b;ae++)u.HEAPU32[F++]=C[ae],u.HEAPU32[q++]=m[t[ae]];for(let ae=0;ae<w;ae++)u.HEAPU32[le++]=A[ae],u.HEAPU32[B++]=g[o[ae]];if(S){let{handle:ae,outputPreferredLocations:we,outputPreferredLocationsEncoded:H}=S;if(m.length!==b)throw new Error(`input count from feeds (${b}) is expected to be always equal to model\'s input count (${m.length}).`);for(let Se=0;Se<b;Se++){let Te=t[Se];await u._OrtBindInput(ae,m[Te],C[Se])!==0&&Ce(`Can\'t bind input[${Se}] for session=${e}.`)}for(let Se=0;Se<w;Se++){let Te=o[Se];n[Se]?.[3]?u._OrtBindOutput(ae,g[Te],A[Se],0)!==0&&Ce(`Can\'t bind pre-allocated output[${Se}] for session=${e}.`):u._OrtBindOutput(ae,g[Te],0,H[Te])!==0&&Ce(`Can\'t bind output[${Se}] to ${we[Se]} for session=${e}.`)}}let K;S?K=await u._OrtRunWithBinding(a,S.handle,w,_,v):K=await u._OrtRun(a,D,M,b,z,w,_,v),K!==0&&Ce("failed to call OrtRun().");let xe=[];for(let ae=0;ae<w;ae++){let we=u.HEAPU32[_/4+ae];if(we===A[ae]){xe.push(n[ae]);continue}let H=u.stackSave(),Se=u.stackAlloc(4*4),Te=!1,Ae,Ee=0;try{u._OrtGetTensorData(we,Se,Se+4,Se+8,Se+12)!==0&&Ce(`Can\'t access output tensor data on index ${ae}.`);let Le=Se/4,Fe=u.HEAPU32[Le++];Ee=u.HEAPU32[Le++];let U=u.HEAPU32[Le++],ce=u.HEAPU32[Le++],de=[];for(let Oe=0;Oe<ce;Oe++)de.push(u.HEAPU32[U/4+Oe]);u._OrtFree(U);let We=de.reduce((Oe,Me)=>Oe*Me,1);Ae=sr(Fe);let Ge=S?.outputPreferredLocations[o[ae]];if(Ae==="string"){if(Ge==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let Oe=[],Me=Ee/4;for(let Je=0;Je<We;Je++){let Ue=u.HEAPU32[Me++],He=Je===We-1?void 0:u.HEAPU32[Me]-Ue;Oe.push(u.UTF8ToString(Ue,He))}xe.push([Ae,de,Oe,"cpu"])}else if(Ge==="gpu-buffer"&&We>0){let Oe=u.jsepGetBuffer(Ee),Me=ur(Fe);if(Me===void 0||!Ao(Ae))throw new Error(`Unsupported data type: ${Ae}`);Te=!0,xe.push([Ae,de,{gpuBuffer:Oe,download:u.jsepCreateDownloader(Oe,We*Me,Ae),dispose:()=>{u._OrtReleaseTensor(we)}},"gpu-buffer"])}else{let Oe=Pr(Ae),Me=new Oe(We);new Uint8Array(Me.buffer,Me.byteOffset,Me.byteLength).set(u.HEAPU8.subarray(Ee,Ee+Me.byteLength)),xe.push([Ae,de,Me,"cpu"])}}finally{u.stackRestore(H),Ae==="string"&&Ee&&u._free(Ee),Te||u._OrtReleaseTensor(we)}}return S&&u._OrtClearBoundOutputs(S.handle),xe}finally{u.stackRestore(W),C.forEach(F=>u._OrtReleaseTensor(F)),A.forEach(F=>u._OrtReleaseTensor(F)),R.forEach(F=>u._free(F)),v!==0&&u._OrtReleaseRunOptions(v),y.forEach(F=>u._free(F))}},du=e=>{let t=_e(),r=gr.get(e);if(!r)throw new Error("invalid session id");let o=r[0],n=t._OrtEndProfiling(o);n===0&&Ce("Can\'t get an profile file name."),t._OrtFree(n)},cu=e=>{let t=[];for(let r of e){let o=r[2];!Array.isArray(o)&&"buffer"in o&&t.push(o.buffer)}return t};self.onmessage=e=>{switch(e.data.type){case"init-wasm":try{xo(e.data.in).then(()=>postMessage({type:"init-wasm"}),t=>postMessage({type:"init-wasm",err:t}))}catch(t){postMessage({type:"init-wasm",err:t})}break;case"init-ort":try{au(e.data.in).then(()=>postMessage({type:"init-ort"}),t=>postMessage({type:"init-ort",err:t}))}catch(t){postMessage({type:"init-ort",err:t})}break;case"create_allocate":try{let{model:t}=e.data.in,r=Fn(t);postMessage({type:"create_allocate",out:r})}catch(t){postMessage({type:"create_allocate",err:t})}break;case"create_finalize":try{let{modeldata:t,options:r}=e.data.in,o=Hn(t,r);postMessage({type:"create_finalize",out:o})}catch(t){postMessage({type:"create_finalize",err:t})}break;case"create":try{let{model:t,options:r}=e.data.in,o=su(t,r);postMessage({type:"create",out:o})}catch(t){postMessage({type:"create",err:t})}break;case"release":try{let t=e.data.in;uu(t),postMessage({type:"release"})}catch(t){postMessage({type:"release",err:t})}break;case"run":try{let{sessionId:t,inputIndices:r,inputs:o,outputIndices:n,options:s}=e.data.in;lu(t,r,o,n,s).then(u=>{postMessage({type:"run",out:u},cu(u))},u=>{postMessage({type:"run",err:u})})}catch(t){postMessage({type:"run",err:t})}break;case"end-profiling":try{let t=e.data.in;du(t),postMessage({type:"end-profiling"})}catch(t){postMessage({type:"end-profiling",err:t})}break;case"is-ort-env-initialized":try{let t=iu();postMessage({type:"is-ort-env-initialized",out:t})}catch(t){postMessage({type:"is-ort-env-initialized",err:t})}break;default:}};})();\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n'});var _r,Ot,la,bu,yu,uu,lu,cu,du,fu,pu,hu,mu,gu,Fr,W1,ua,iy,ay,sy,uy,xu,ly,cy,dy,fy,vu=D(()=>{"use strict";Rt();ny();Dn();_r=()=>!!ve.wasm.proxy&&typeof document<"u",la=!1,bu=!1,yu=!1,cu=[],du=[],fu=[],pu=[],hu=[],mu=[],gu=[],Fr=()=>{if(la||!bu||yu||!Ot)throw new Error("worker not ready")},W1=r=>{switch(r.data.type){case"init-wasm":la=!1,r.data.err?(yu=!0,uu[1](r.data.err)):(bu=!0,uu[0]());break;case"init-ort":r.data.err?lu[1](r.data.err):lu[0]();break;case"create_allocate":r.data.err?cu.shift()[1](r.data.err):cu.shift()[0](r.data.out);break;case"create_finalize":r.data.err?du.shift()[1](r.data.err):du.shift()[0](r.data.out);break;case"create":r.data.err?fu.shift()[1](r.data.err):fu.shift()[0](r.data.out);break;case"release":r.data.err?pu.shift()[1](r.data.err):pu.shift()[0]();break;case"run":r.data.err?hu.shift()[1](r.data.err):hu.shift()[0](r.data.out);break;case"end-profiling":r.data.err?mu.shift()[1](r.data.err):mu.shift()[0]();break;case"is-ort-env-initialized":r.data.err?gu.shift()[1](r.data.err):gu.shift()[0](r.data.out);break;default:}},ua=typeof document<"u"?document?.currentScript?.src:void 0,iy=async()=>{if(_r()){if(bu)return;if(la)throw new Error("multiple calls to 'initWasm()' detected.");if(yu)throw new Error("previous call to 'initWasm()' failed.");return la=!0,ve.wasm.wasmPaths===void 0&&ua&&ua.indexOf("blob:")!==0&&(ve.wasm.wasmPaths=ua.substr(0,+ua.lastIndexOf("/")+1)),new Promise((r,e)=>{Ot?.terminate();let n=URL.createObjectURL(new Blob([oy()],{type:"text/javascript"}));Ot=new Worker(n,{name:"ort-wasm-proxy-worker"}),Ot.onerror=o=>e(o),Ot.onmessage=W1,URL.revokeObjectURL(n),uu=[r,e];let t={type:"init-wasm",in:ve.wasm};Ot.postMessage(t)})}else return Ch(ve.wasm)},ay=async r=>{if(_r())return Fr(),new Promise((e,n)=>{lu=[e,n];let t={type:"init-ort",in:r};Ot.postMessage(t)});await Xb(r)},sy=async r=>_r()?(Fr(),new Promise((e,n)=>{cu.push([e,n]);let t={type:"create_allocate",in:{model:r}};Ot.postMessage(t,[r.buffer])})):au(r),uy=async(r,e)=>_r()?(Fr(),new Promise((n,t)=>{du.push([n,t]);let o={type:"create_finalize",in:{modeldata:r,options:e}};Ot.postMessage(o)})):su(r,e),xu=async(r,e)=>{if(_r()){if(e?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return Fr(),new Promise((n,t)=>{fu.push([n,t]);let o={type:"create",in:{model:r,options:e}};Ot.postMessage(o,[r.buffer])})}else return Zb(r,e)},ly=async r=>{if(_r())return Fr(),new Promise((e,n)=>{pu.push([e,n]);let t={type:"release",in:r};Ot.postMessage(t)});Qb(r)},cy=async(r,e,n,t,o,i)=>{if(_r()){if(n.some(u=>u[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(o.some(u=>u))throw new Error("pre-allocated output tensor is not supported for proxy.");return Fr(),new Promise((u,a)=>{hu.push([u,a]);let s=n,l={type:"run",in:{sessionId:r,inputIndices:e,inputs:s,outputIndices:t,options:i}};Ot.postMessage(l,ry(s))})}else return ey(r,e,n,t,o,i)},dy=async r=>{if(_r())return Fr(),new Promise((e,n)=>{mu.push([e,n]);let t={type:"end-profiling",in:r};Ot.postMessage(t)});ty(r)},fy=async()=>_r()?(Fr(),new Promise((r,e)=>{gu.push([r,e]);let n={type:"is-ort-env-initialized"};Ot.postMessage(n)})):Jb()});var ca,py,V1,da,hy=D(()=>{"use strict";Rt();vu();dt();py=(r,e)=>{switch(r.location){case"cpu":return[r.type,r.dims,r.data,"cpu"];case"gpu-buffer":return[r.type,r.dims,{gpuBuffer:r.gpuBuffer},"gpu-buffer"];default:throw new Error(`invalid data location: ${r.location} for ${e()}`)}},V1=r=>{switch(r[3]){case"cpu":return new lt(r[0],r[2],r[1]);case"gpu-buffer":{let e=r[0];if(!Gi(e))throw new Error(`not supported data type: ${e} for deserializing GPU tensor`);let{gpuBuffer:n,download:t,dispose:o}=r[2];return lt.fromGpuBuffer(n,{dataType:e,dims:r[1],download:t,dispose:o})}default:throw new Error(`invalid data location: ${r[3]}`)}},da=class{async createSessionAllocate(e){let n=await fetch(e);if(n.status!==200)throw new Error(`failed to load model: ${e}`);let t=await n.arrayBuffer();return sy(new Uint8Array(t))}async loadModel(e,n){if(await fy()||(ca||(ca=ay(ve)),await ca,ca=void 0),typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node){let t=await(void 0)(e);[this.sessionId,this.inputNames,this.outputNames]=await xu(t,n)}else{let t=await this.createSessionAllocate(e);[this.sessionId,this.inputNames,this.outputNames]=await uy(t,n)}else[this.sessionId,this.inputNames,this.outputNames]=await xu(e,n)}async dispose(){return ly(this.sessionId)}async run(e,n,t){let o=[],i=[];Object.entries(e).forEach(h=>{let g=h[0],x=h[1],b=this.inputNames.indexOf(g);if(b===-1)throw new Error(`invalid input '${g}'`);o.push(x),i.push(b)});let u=[],a=[];Object.entries(n).forEach(h=>{let g=h[0],x=h[1],b=this.outputNames.indexOf(g);if(b===-1)throw new Error(`invalid output '${g}'`);u.push(x),a.push(b)});let s=o.map((h,g)=>py(h,()=>`input "${this.inputNames[i[g]]}"`)),l=u.map((h,g)=>h?py(h,()=>`output "${this.outputNames[a[g]]}"`):null),c=await cy(this.sessionId,i,s,a,l,t),p={};for(let h=0;h<c.length;h++)p[this.outputNames[a[h]]]=u[h]??V1(c[h]);return p}startProfiling(){}endProfiling(){dy(this.sessionId)}}});var U1,fa,my=D(()=>{"use strict";Rt();vu();hy();U1=()=>{if((typeof ve.wasm.initTimeout!="number"||ve.wasm.initTimeout<0)&&(ve.wasm.initTimeout=0),typeof ve.wasm.simd!="boolean"&&(ve.wasm.simd=!0),typeof ve.wasm.proxy!="boolean"&&(ve.wasm.proxy=!1),typeof ve.wasm.numThreads!="number"||!Number.isInteger(ve.wasm.numThreads)||ve.wasm.numThreads<=0){let r=typeof navigator>"u"?(void 0)().length:navigator.hardwareConcurrency;ve.wasm.numThreads=Math.min(4,Math.ceil((r||1)/2))}},fa=class{async init(){U1(),await iy()}async createInferenceSessionHandler(e,n){let t=new da;return await t.loadModel(e,n),Promise.resolve(t)}}});var gy={};Cr(gy,{wasmBackend:()=>H1});var H1,by=D(()=>{"use strict";my();H1=new fa});var q1={};Cr(q1,{InferenceSession:()=>il,Tensor:()=>lt,TrainingSession:()=>ll,default:()=>j1,env:()=>ve,registerBackend:()=>tr});Rt();Rt();Rt();var dl="1.17.0";var j1=Ta;{let r=(gh(),wr(mh)).onnxjsBackend;tr("webgl",r,-10)}{let r=(by(),wr(gy)).wasmBackend;typeof navigator<"u"&&navigator.gpu&&tr("webgpu",r,5),tr("cpu",r,10),tr("wasm",r,10),tr("xnnpack",r,9),tr("webnn",r,9)}Object.defineProperty(ve.versions,"web",{value:dl,enumerable:!0});return wr(q1);})();
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/*! Bundled license information:

long/index.js:
  (**
   * @license
   * Copyright 2009 The Closure Library Authors
   * Copyright 2020 Daniel Wirtz / The long.js Authors.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
//# sourceMappingURL=ort.all.min.js.map
