{
  "version": 3,
  "sources": [
    "../../node_modules/onnxruntime-common/lib/backend-impl.ts",
    "../../node_modules/onnxruntime-common/lib/backend.ts",
    "../../node_modules/onnxruntime-common/lib/version.ts",
    "../../node_modules/onnxruntime-common/lib/env-impl.ts",
    "../../node_modules/onnxruntime-common/lib/env.ts",
    "../../node_modules/onnxruntime-common/lib/tensor-conversion-impl.ts",
    "../../node_modules/onnxruntime-common/lib/tensor-factory-impl.ts",
    "../../node_modules/onnxruntime-common/lib/tensor-impl-type-mapping.ts",
    "../../node_modules/onnxruntime-common/lib/tensor-utils-impl.ts",
    "../../node_modules/onnxruntime-common/lib/tensor-impl.ts",
    "../../node_modules/onnxruntime-common/lib/tensor.ts",
    "../../node_modules/onnxruntime-common/lib/inference-session-impl.ts",
    "../../node_modules/onnxruntime-common/lib/inference-session.ts",
    "../../node_modules/onnxruntime-common/lib/onnx-value.ts",
    "../../node_modules/onnxruntime-common/lib/training-session-impl.ts",
    "../../node_modules/onnxruntime-common/lib/training-session.ts",
    "../../node_modules/onnxruntime-common/lib/index.ts",
    "nodejs-ignore:fs",
    "nodejs-ignore:path",
    "$lib/wasm/binding/ort-training-wasm-simd.js",
    "nodejs-ignore:worker_threads",
    "nodejs-ignore:perf_hooks",
    "nodejs-ignore:os",
    "$lib/wasm/binding/ort-wasm-threaded.js",
    "$lib/wasm/binding/ort-wasm-threaded.worker.js",
    "$lib/wasm/wasm-factory.ts",
    "$lib/wasm/wasm-utils.ts",
    "$lib/wasm/run-options.ts",
    "$lib/wasm/session-options.ts",
    "$lib/wasm/wasm-common.ts",
    "$lib/wasm/wasm-core-impl.ts",
    "proxy-worker:./proxy-worker/main",
    "$lib/wasm/proxy-wrapper.ts",
    "$lib/wasm/session-handler-inference.ts",
    "$lib/backend-wasm.ts",
    "$lib/wasm/wasm-training-core-impl.ts",
    "$lib/wasm/session-handler-training.ts",
    "$lib/backend-wasm-training.ts",
    "$lib/index.ts",
    "$lib/version.ts"
  ],
  "sourcesContent": [
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Backend} from './backend.js';\n\ninterface BackendInfo {\n  backend: Backend;\n  priority: number;\n\n  initPromise?: Promise<void>;\n  initialized?: boolean;\n  aborted?: boolean;\n}\n\nconst backends: Map<string, BackendInfo> = new Map();\nconst backendsSortedByPriority: string[] = [];\n\n/**\n * Register a backend.\n *\n * @param name - the name as a key to lookup as an execution provider.\n * @param backend - the backend object.\n * @param priority - an integer indicating the priority of the backend. Higher number means higher priority. if priority\n * < 0, it will be considered as a 'beta' version and will not be used as a fallback backend by default.\n *\n * @ignore\n */\nexport const registerBackend = (name: string, backend: Backend, priority: number): void => {\n  if (backend && typeof backend.init === 'function' && typeof backend.createInferenceSessionHandler === 'function') {\n    const currentBackend = backends.get(name);\n    if (currentBackend === undefined) {\n      backends.set(name, {backend, priority});\n    } else if (currentBackend.priority > priority) {\n      // same name is already registered with a higher priority. skip registeration.\n      return;\n    } else if (currentBackend.priority === priority) {\n      if (currentBackend.backend !== backend) {\n        throw new Error(`cannot register backend \"${name}\" using priority ${priority}`);\n      }\n    }\n\n    if (priority >= 0) {\n      const i = backendsSortedByPriority.indexOf(name);\n      if (i !== -1) {\n        backendsSortedByPriority.splice(i, 1);\n      }\n\n      for (let i = 0; i < backendsSortedByPriority.length; i++) {\n        if (backends.get(backendsSortedByPriority[i])!.priority <= priority) {\n          backendsSortedByPriority.splice(i, 0, name);\n          return;\n        }\n      }\n      backendsSortedByPriority.push(name);\n    }\n    return;\n  }\n\n  throw new TypeError('not a valid backend');\n};\n\n/**\n * Resolve backend by specified hints.\n *\n * @param backendHints - a list of execution provider names to lookup. If omitted use registered backends as list.\n * @returns a promise that resolves to the backend.\n *\n * @ignore\n */\nexport const resolveBackend = async(backendHints: readonly string[]): Promise<Backend> => {\n  const backendNames = backendHints.length === 0 ? backendsSortedByPriority : backendHints;\n  const errors = [];\n  for (const backendName of backendNames) {\n    const backendInfo = backends.get(backendName);\n    if (backendInfo) {\n      if (backendInfo.initialized) {\n        return backendInfo.backend;\n      } else if (backendInfo.aborted) {\n        continue;  // current backend is unavailable; try next\n      }\n\n      const isInitializing = !!backendInfo.initPromise;\n      try {\n        if (!isInitializing) {\n          backendInfo.initPromise = backendInfo.backend.init();\n        }\n        await backendInfo.initPromise;\n        backendInfo.initialized = true;\n        return backendInfo.backend;\n      } catch (e) {\n        if (!isInitializing) {\n          errors.push({name: backendName, err: e});\n        }\n        backendInfo.aborted = true;\n      } finally {\n        delete backendInfo.initPromise;\n      }\n    }\n  }\n\n  throw new Error(`no available backend found. ERR: ${errors.map(e => `[${e.name}] ${e.err}`).join(', ')}`);\n};\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from './inference-session.js';\nimport {OnnxValue} from './onnx-value.js';\nimport {TrainingSession} from './training-session.js';\n\n/**\n * @ignore\n */\nexport declare namespace SessionHandler {\n  type FeedsType = {[name: string]: OnnxValue};\n  type FetchesType = {[name: string]: OnnxValue | null};\n  type ReturnType = {[name: string]: OnnxValue};\n}\n\n/**\n * Represents shared SessionHandler functionality\n *\n * @ignore\n */\ninterface SessionHandler {\n  dispose(): Promise<void>;\n\n  readonly inputNames: readonly string[];\n  readonly outputNames: readonly string[];\n}\n\n/**\n * Represent a handler instance of an inference session.\n *\n * @ignore\n */\nexport interface InferenceSessionHandler extends SessionHandler {\n  startProfiling(): void;\n  endProfiling(): void;\n\n  run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType,\n      options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType>;\n}\n\n/**\n * Represent a handler instance of a training inference session.\n *\n * @ignore\n */\nexport interface TrainingSessionHandler extends SessionHandler {\n  runTrainStep(\n      feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType,\n      options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType>;\n\n  loadParametersBuffer(array: Uint8Array, trainableOnly: boolean): Promise<void>;\n  getContiguousParameters(trainableOnly: boolean): Promise<Uint8Array>;\n}\n\n/**\n * Represent a backend that provides implementation of model inferencing.\n *\n * @ignore\n */\nexport interface Backend {\n  /**\n   * Initialize the backend asynchronously. Should throw when failed.\n   */\n  init(): Promise<void>;\n\n  createInferenceSessionHandler(uriOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSessionHandler>;\n\n  createTrainingSessionHandler?\n      (checkpointStateUriOrBuffer: TrainingSession.URIorBuffer, trainModelUriOrBuffer: TrainingSession.URIorBuffer,\n       evalModelUriOrBuffer: TrainingSession.URIorBuffer, optimizerModelUriOrBuffer: TrainingSession.URIorBuffer,\n       options: InferenceSession.SessionOptions): Promise<TrainingSessionHandler>;\n}\n\nexport {registerBackend} from './backend-impl.js';\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// This file is generated by /js/scripts/update-version.ts\n// Do not modify file content manually.\n\nexport const version = '1.17.0';\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from './env.js';\nimport {version} from './version.js';\n\ntype LogLevelType = Env['logLevel'];\n\nlet logLevelValue: Required<LogLevelType> = 'warning';\n\nexport const env: Env = {\n  wasm: {} as Env.WebAssemblyFlags,\n  webgl: {} as Env.WebGLFlags,\n  webgpu: {} as Env.WebGpuFlags,\n  versions: {common: version},\n\n  set logLevel(value: LogLevelType) {\n    if (value === undefined) {\n      return;\n    }\n    if (typeof value !== 'string' || ['verbose', 'info', 'warning', 'error', 'fatal'].indexOf(value) === -1) {\n      throw new Error(`Unsupported logging level: ${value}`);\n    }\n    logLevelValue = value;\n  },\n  get logLevel(): Required<LogLevelType> {\n    return logLevelValue;\n  },\n};\n\n// set property 'logLevel' so that they can be correctly transferred to worker by `postMessage()`.\nObject.defineProperty(env, 'logLevel', {enumerable: true});\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env as envImpl} from './env-impl.js';\n\nexport declare namespace Env {\n  export type WasmPrefixOrFilePaths = string|{\n    /* eslint-disable @typescript-eslint/naming-convention */\n    'ort-wasm.wasm'?: string;\n    'ort-wasm-threaded.wasm'?: string;\n    'ort-wasm-simd.wasm'?: string;\n    'ort-training-wasm-simd.wasm'?: string;\n    'ort-wasm-simd-threaded.wasm'?: string;\n    /* eslint-enable @typescript-eslint/naming-convention */\n  };\n  export interface WebAssemblyFlags {\n    /**\n     * set or get number of thread(s). If omitted or set to 0, number of thread(s) will be determined by system. If set\n     * to 1, no worker thread will be spawned.\n     *\n     * This setting is available only when WebAssembly multithread feature is available in current context.\n     *\n     * @defaultValue `0`\n     */\n    numThreads?: number;\n\n    /**\n     * set or get a boolean value indicating whether to enable SIMD. If set to false, SIMD will be forcely disabled.\n     *\n     * This setting is available only when WebAssembly SIMD feature is available in current context.\n     *\n     * @defaultValue `true`\n     */\n    simd?: boolean;\n\n    /**\n     * Set or get a number specifying the timeout for initialization of WebAssembly backend, in milliseconds. A zero\n     * value indicates no timeout is set.\n     *\n     * @defaultValue `0`\n     */\n    initTimeout?: number;\n\n    /**\n     * Set a custom URL prefix to the .wasm files or a set of overrides for each .wasm file. The override path should be\n     * an absolute path.\n     */\n    wasmPaths?: WasmPrefixOrFilePaths;\n\n    /**\n     * Set or get a boolean value indicating whether to proxy the execution of main thread to a worker thread.\n     *\n     * @defaultValue `false`\n     */\n    proxy?: boolean;\n  }\n\n  export interface WebGLFlags {\n    /**\n     * Set or get the WebGL Context ID (webgl or webgl2).\n     *\n     * @defaultValue `'webgl2'`\n     */\n    contextId?: 'webgl'|'webgl2';\n    /**\n     * Get the WebGL rendering context.\n     */\n    readonly context: WebGLRenderingContext;\n    /**\n     * Set or get the maximum batch size for matmul. 0 means to disable batching.\n     *\n     * @deprecated\n     */\n    matmulMaxBatchSize?: number;\n    /**\n     * Set or get the texture cache mode.\n     *\n     * @defaultValue `'full'`\n     */\n    textureCacheMode?: 'initializerOnly'|'full';\n    /**\n     * Set or get the packed texture mode\n     *\n     * @defaultValue `false`\n     */\n    pack?: boolean;\n    /**\n     * Set or get whether enable async download.\n     *\n     * @defaultValue `false`\n     */\n    async?: boolean;\n  }\n\n  export interface WebGpuFlags {\n    /**\n     * Set or get the profiling mode.\n     */\n    profilingMode?: 'off'|'default';\n    /**\n     * Get the device for WebGPU.\n     *\n     * When use with TypeScript, the type of this property is `GPUDevice` defined in \"@webgpu/types\".\n     * Use `const device = env.webgpu.device as GPUDevice;` in TypeScript to access this property with correct type.\n     *\n     * see comments on {@link GpuBufferType} for more details about why not use types defined in \"@webgpu/types\".\n     */\n    readonly device: unknown;\n    /**\n     * Set or get whether validate input content.\n     *\n     * @defaultValue `false`\n     */\n    validateInputContent?: boolean;\n  }\n}\n\nexport interface Env {\n  /**\n   * set the severity level for logging.\n   *\n   * @defaultValue `'warning'`\n   */\n  logLevel?: 'verbose'|'info'|'warning'|'error'|'fatal';\n  /**\n   * Indicate whether run in debug mode.\n   *\n   * @defaultValue `false`\n   */\n  debug?: boolean;\n\n  /**\n   * Get version of the current package.\n   */\n  readonly versions: {\n    readonly common: string;\n    readonly web?: string;\n    readonly node?: string;\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    readonly 'react-native'?: string;\n  };\n\n  /**\n   * Represent a set of flags for WebAssembly\n   */\n  readonly wasm: Env.WebAssemblyFlags;\n\n  /**\n   * Represent a set of flags for WebGL\n   */\n  readonly webgl: Env.WebGLFlags;\n\n  /**\n   * Represent a set of flags for WebGPU\n   */\n  readonly webgpu: Env.WebGpuFlags;\n\n  [name: string]: unknown;\n}\n\n/**\n * Represent a set of flags as a global singleton.\n */\nexport const env: Env = envImpl;\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorToDataUrlOptions, TensorToImageDataOptions} from './tensor-conversion.js';\nimport {Tensor} from './tensor.js';\n\n/**\n * implementation of Tensor.toDataURL()\n */\nexport const tensorToDataURL = (tensor: Tensor, options?: TensorToDataUrlOptions): string => {\n  const canvas = document.createElement('canvas');\n  canvas.width = tensor.dims[3];\n  canvas.height = tensor.dims[2];\n  const pixels2DContext = canvas.getContext('2d');\n\n  if (pixels2DContext != null) {\n    // Default values for height and width & format\n    let width: number;\n    let height: number;\n    if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n      width = tensor.dims[2];\n      height = tensor.dims[3];\n    } else {  // Default layout is NCWH\n      width = tensor.dims[3];\n      height = tensor.dims[2];\n    }\n\n    const inputformat = options?.format !== undefined ? options.format : 'RGB';\n\n    const norm = options?.norm;\n    let normMean: [number, number, number, number];\n    let normBias: [number, number, number, number];\n    if (norm === undefined || norm.mean === undefined) {\n      normMean = [255, 255, 255, 255];\n    } else {\n      if (typeof (norm.mean) === 'number') {\n        normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n      } else {\n        normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 0];\n        if (norm.mean[3] !== undefined) {\n          normMean[3] = norm.mean[3];\n        }\n      }\n    }\n    if (norm === undefined || norm.bias === undefined) {\n      normBias = [0, 0, 0, 0];\n    } else {\n      if (typeof (norm.bias) === 'number') {\n        normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n      } else {\n        normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n        if (norm.bias[3] !== undefined) {\n          normBias[3] = norm.bias[3];\n        }\n      }\n    }\n\n    const stride = height * width;\n    // Default pointer assignments\n    let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n\n    // Updating the pointer assignments based on the input image format\n    if (inputformat === 'RGBA') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n      aTensorPointer = stride * 3;\n    } else if (inputformat === 'RGB') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n    } else if (inputformat === 'RBG') {\n      rTensorPointer = 0;\n      bTensorPointer = stride;\n      gTensorPointer = stride * 2;\n    }\n\n    for (let i = 0; i < height; i++) {\n      for (let j = 0; j < width; j++) {\n        const R = ((tensor.data[rTensorPointer++] as number) - normBias[0]) * normMean[0];  // R value\n        const G = ((tensor.data[gTensorPointer++] as number) - normBias[1]) * normMean[1];  // G value\n        const B = ((tensor.data[bTensorPointer++] as number) - normBias[2]) * normMean[2];  // B value\n        const A = aTensorPointer === -1 ?\n            255 :\n            ((tensor.data[aTensorPointer++] as number) - normBias[3]) * normMean[3];  // A value\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n        pixels2DContext.fillStyle = 'rgba(' + R + ',' + G + ',' + B + ',' + A + ')';\n        pixels2DContext.fillRect(j, i, 1, 1);\n      }\n    }\n    return canvas.toDataURL();\n  } else {\n    throw new Error('Can not access image data');\n  }\n};\n\n/**\n * implementation of Tensor.toImageData()\n */\nexport const tensorToImageData = (tensor: Tensor, options?: TensorToImageDataOptions): ImageData => {\n  const pixels2DContext = document.createElement('canvas').getContext('2d');\n  let image: ImageData;\n  if (pixels2DContext != null) {\n    // Default values for height and width & format\n    let width: number;\n    let height: number;\n    let channels: number;\n    if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n      width = tensor.dims[2];\n      height = tensor.dims[1];\n      channels = tensor.dims[3];\n    } else {  // Default layout is NCWH\n      width = tensor.dims[3];\n      height = tensor.dims[2];\n      channels = tensor.dims[1];\n    }\n    const inputformat = options !== undefined ? (options.format !== undefined ? options.format : 'RGB') : 'RGB';\n\n    const norm = options?.norm;\n    let normMean: [number, number, number, number];\n    let normBias: [number, number, number, number];\n    if (norm === undefined || norm.mean === undefined) {\n      normMean = [255, 255, 255, 255];\n    } else {\n      if (typeof (norm.mean) === 'number') {\n        normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n      } else {\n        normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 255];\n        if (norm.mean[3] !== undefined) {\n          normMean[3] = norm.mean[3];\n        }\n      }\n    }\n    if (norm === undefined || norm.bias === undefined) {\n      normBias = [0, 0, 0, 0];\n    } else {\n      if (typeof (norm.bias) === 'number') {\n        normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n      } else {\n        normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n        if (norm.bias[3] !== undefined) {\n          normBias[3] = norm.bias[3];\n        }\n      }\n    }\n\n    const stride = height * width;\n    if (options !== undefined) {\n      if (options.format !== undefined && (channels === 4 && options.format !== 'RGBA') ||\n          (channels === 3 && (options.format !== 'RGB' && options.format !== 'BGR'))) {\n        throw new Error('Tensor format doesn\\'t match input tensor dims');\n      }\n    }\n\n    // Default pointer assignments\n    const step = 4;\n    let rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n    let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n\n    // Updating the pointer assignments based on the input image format\n    if (inputformat === 'RGBA') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n      aTensorPointer = stride * 3;\n    } else if (inputformat === 'RGB') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n    } else if (inputformat === 'RBG') {\n      rTensorPointer = 0;\n      bTensorPointer = stride;\n      gTensorPointer = stride * 2;\n    }\n\n    image = pixels2DContext.createImageData(width, height);\n\n    for (let i = 0; i < height * width;\n         rImagePointer += step, gImagePointer += step, bImagePointer += step, aImagePointer += step, i++) {\n      image.data[rImagePointer] = ((tensor.data[rTensorPointer++] as number) - normBias[0]) * normMean[0];  // R value\n      image.data[gImagePointer] = ((tensor.data[gTensorPointer++] as number) - normBias[1]) * normMean[1];  // G value\n      image.data[bImagePointer] = ((tensor.data[bTensorPointer++] as number) - normBias[2]) * normMean[2];  // B value\n      image.data[aImagePointer] = aTensorPointer === -1 ?\n          255 :\n          ((tensor.data[aTensorPointer++] as number) - normBias[3]) * normMean[3];  // A value\n    }\n\n  } else {\n    throw new Error('Can not access image data');\n  }\n  return image;\n};\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OptionsDimensions, OptionsFormat, OptionsNormalizationParameters, OptionsTensorFormat, OptionsTensorLayout, TensorFromGpuBufferOptions, TensorFromImageBitmapOptions, TensorFromImageDataOptions, TensorFromImageElementOptions, TensorFromTextureOptions, TensorFromUrlOptions} from './tensor-factory.js';\nimport {Tensor} from './tensor-impl.js';\nimport {Tensor as TensorInterface} from './tensor.js';\n\ninterface BufferToTensorOptions extends OptionsDimensions, OptionsTensorLayout, OptionsNormalizationParameters,\n                                        OptionsFormat, OptionsTensorFormat {}\n\n/**\n * Create a new tensor object from image object\n *\n * @param buffer - Extracted image buffer data - assuming RGBA format\n * @param imageFormat - input image configuration - required configurations height, width, format\n * @param tensorFormat - output tensor configuration - Default is RGB format\n */\nexport const bufferToTensor = (buffer: Uint8ClampedArray|undefined, options: BufferToTensorOptions): Tensor => {\n  if (buffer === undefined) {\n    throw new Error('Image buffer must be defined');\n  }\n  if (options.height === undefined || options.width === undefined) {\n    throw new Error('Image height and width must be defined');\n  }\n  if (options.tensorLayout === 'NHWC') {\n    throw new Error('NHWC Tensor layout is not supported yet');\n  }\n\n  const {height, width} = options;\n\n  const norm = options.norm ?? {mean: 255, bias: 0};\n  let normMean: [number, number, number, number];\n  let normBias: [number, number, number, number];\n\n  if (typeof (norm.mean) === 'number') {\n    normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n  } else {\n    normMean = [norm.mean![0], norm.mean![1], norm.mean![2], norm.mean![3] ?? 255];\n  }\n\n  if (typeof (norm.bias) === 'number') {\n    normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n  } else {\n    normBias = [norm.bias![0], norm.bias![1], norm.bias![2], norm.bias![3] ?? 0];\n  }\n\n  const inputformat = options.format !== undefined ? options.format : 'RGBA';\n  // default value is RGBA since imagedata and HTMLImageElement uses it\n\n  const outputformat =\n      options.tensorFormat !== undefined ? (options.tensorFormat !== undefined ? options.tensorFormat : 'RGB') : 'RGB';\n  const stride = height * width;\n  const float32Data = outputformat === 'RGBA' ? new Float32Array(stride * 4) : new Float32Array(stride * 3);\n\n  // Default pointer assignments\n  let step = 4, rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n  let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n\n  // Updating the pointer assignments based on the input image format\n  if (inputformat === 'RGB') {\n    step = 3;\n    rImagePointer = 0;\n    gImagePointer = 1;\n    bImagePointer = 2;\n    aImagePointer = -1;\n  }\n\n  // Updating the pointer assignments based on the output tensor format\n  if (outputformat === 'RGBA') {\n    aTensorPointer = stride * 3;\n  } else if (outputformat === 'RBG') {\n    rTensorPointer = 0;\n    bTensorPointer = stride;\n    gTensorPointer = stride * 2;\n  } else if (outputformat === 'BGR') {\n    bTensorPointer = 0;\n    gTensorPointer = stride;\n    rTensorPointer = stride * 2;\n  }\n\n  for (let i = 0; i < stride;\n       i++, rImagePointer += step, bImagePointer += step, gImagePointer += step, aImagePointer += step) {\n    float32Data[rTensorPointer++] = (buffer[rImagePointer] + normBias[0]) / normMean[0];\n    float32Data[gTensorPointer++] = (buffer[gImagePointer] + normBias[1]) / normMean[1];\n    float32Data[bTensorPointer++] = (buffer[bImagePointer] + normBias[2]) / normMean[2];\n    if (aTensorPointer !== -1 && aImagePointer !== -1) {\n      float32Data[aTensorPointer++] = (buffer[aImagePointer] + normBias[3]) / normMean[3];\n    }\n  }\n\n  // Float32Array -> ort.Tensor\n  const outputTensor = outputformat === 'RGBA' ? new Tensor('float32', float32Data, [1, 4, height, width]) :\n                                                 new Tensor('float32', float32Data, [1, 3, height, width]);\n  return outputTensor;\n};\n\n/**\n * implementation of Tensor.fromImage().\n */\nexport const tensorFromImage = async(\n    image: ImageData|HTMLImageElement|ImageBitmap|string,\n    options?: TensorFromImageDataOptions|TensorFromImageElementOptions|TensorFromImageBitmapOptions|\n    TensorFromUrlOptions): Promise<Tensor> => {\n  // checking the type of image object\n  const isHTMLImageEle = typeof (HTMLImageElement) !== 'undefined' && image instanceof HTMLImageElement;\n  const isImageDataEle = typeof (ImageData) !== 'undefined' && image instanceof ImageData;\n  const isImageBitmap = typeof (ImageBitmap) !== 'undefined' && image instanceof ImageBitmap;\n  const isString = typeof image === 'string';\n\n  let data: Uint8ClampedArray|undefined;\n  let bufferToTensorOptions: BufferToTensorOptions = options ?? {};\n\n  // filling and checking image configuration options\n  if (isHTMLImageEle) {\n    // HTMLImageElement - image object - format is RGBA by default\n    const canvas = document.createElement('canvas');\n    canvas.width = image.width;\n    canvas.height = image.height;\n    const pixels2DContext = canvas.getContext('2d');\n\n    if (pixels2DContext != null) {\n      let height = image.height;\n      let width = image.width;\n      if (options !== undefined && options.resizedHeight !== undefined && options.resizedWidth !== undefined) {\n        height = options.resizedHeight;\n        width = options.resizedWidth;\n      }\n\n      if (options !== undefined) {\n        bufferToTensorOptions = options;\n        if (options.tensorFormat !== undefined) {\n          throw new Error('Image input config format must be RGBA for HTMLImageElement');\n        } else {\n          bufferToTensorOptions.tensorFormat = 'RGBA';\n        }\n        bufferToTensorOptions.height = height;\n        bufferToTensorOptions.width = width;\n      } else {\n        bufferToTensorOptions.tensorFormat = 'RGBA';\n        bufferToTensorOptions.height = height;\n        bufferToTensorOptions.width = width;\n      }\n\n      pixels2DContext.drawImage(image, 0, 0);\n      data = pixels2DContext.getImageData(0, 0, width, height).data;\n    } else {\n      throw new Error('Can not access image data');\n    }\n  } else if (isImageDataEle) {\n    let height: number;\n    let width: number;\n\n    if (options !== undefined && options.resizedWidth !== undefined && options.resizedHeight !== undefined) {\n      height = options.resizedHeight;\n      width = options.resizedWidth;\n    } else {\n      height = image.height;\n      width = image.width;\n    }\n\n    if (options !== undefined) {\n      bufferToTensorOptions = options;\n    }\n    bufferToTensorOptions.format = 'RGBA';\n    bufferToTensorOptions.height = height;\n    bufferToTensorOptions.width = width;\n\n    if (options !== undefined) {\n      const tempCanvas = document.createElement('canvas');\n\n      tempCanvas.width = width;\n      tempCanvas.height = height;\n\n      const pixels2DContext = tempCanvas.getContext('2d');\n\n      if (pixels2DContext != null) {\n        pixels2DContext.putImageData(image, 0, 0);\n        data = pixels2DContext.getImageData(0, 0, width, height).data;\n      } else {\n        throw new Error('Can not access image data');\n      }\n    } else {\n      data = image.data;\n    }\n  } else if (isImageBitmap) {\n    // ImageBitmap - image object - format must be provided by user\n    if (options === undefined) {\n      throw new Error('Please provide image config with format for Imagebitmap');\n    }\n\n    const canvas = document.createElement('canvas');\n    canvas.width = image.width;\n    canvas.height = image.height;\n    const pixels2DContext = canvas.getContext('2d');\n\n    if (pixels2DContext != null) {\n      const height = image.height;\n      const width = image.width;\n      pixels2DContext.drawImage(image, 0, 0, width, height);\n      data = pixels2DContext.getImageData(0, 0, width, height).data;\n      bufferToTensorOptions.height = height;\n      bufferToTensorOptions.width = width;\n      return bufferToTensor(data, bufferToTensorOptions);\n    } else {\n      throw new Error('Can not access image data');\n    }\n  } else if (isString) {\n    return new Promise((resolve, reject) => {\n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n      if (!image || !context) {\n        return reject();\n      }\n      const newImage = new Image();\n      newImage.crossOrigin = 'Anonymous';\n      newImage.src = image;\n      newImage.onload = () => {\n        canvas.width = newImage.width;\n        canvas.height = newImage.height;\n        context.drawImage(newImage, 0, 0, canvas.width, canvas.height);\n        const img = context.getImageData(0, 0, canvas.width, canvas.height);\n\n        bufferToTensorOptions.height = canvas.height;\n        bufferToTensorOptions.width = canvas.width;\n        resolve(bufferToTensor(img.data, bufferToTensorOptions));\n      };\n    });\n  } else {\n    throw new Error('Input data provided is not supported - aborted tensor creation');\n  }\n\n  if (data !== undefined) {\n    return bufferToTensor(data, bufferToTensorOptions);\n  } else {\n    throw new Error('Input data provided is not supported - aborted tensor creation');\n  }\n};\n\n/**\n * implementation of Tensor.fromTexture().\n */\nexport const tensorFromTexture = <T extends TensorInterface.TextureDataTypes>(\n    texture: TensorInterface.TextureType, options: TensorFromTextureOptions<T>): Tensor => {\n  const {width, height, download, dispose} = options;\n  // Always assume RGBAF32. TODO: support different texture format\n  const dims = [1, height, width, 4];\n  return new Tensor({location: 'texture', type: 'float32', texture, dims, download, dispose});\n};\n\n/**\n * implementation of Tensor.fromGpuBuffer().\n */\nexport const tensorFromGpuBuffer = <T extends TensorInterface.GpuBufferDataTypes>(\n    gpuBuffer: TensorInterface.GpuBufferType, options: TensorFromGpuBufferOptions<T>): Tensor => {\n  const {dataType, dims, download, dispose} = options;\n  return new Tensor({location: 'gpu-buffer', type: dataType ?? 'float32', gpuBuffer, dims, download, dispose});\n};\n\n/**\n * implementation of Tensor.fromPinnedBuffer().\n */\nexport const tensorFromPinnedBuffer = <T extends TensorInterface.CpuPinnedDataTypes>(\n    type: T, buffer: TensorInterface.DataTypeMap[T], dims?: readonly number[]): Tensor =>\n    new Tensor({location: 'cpu-pinned', type, data: buffer, dims: dims ?? [buffer.length]});\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from './tensor.js';\n\nexport type SupportedTypedArrayConstructors = Float32ArrayConstructor|Uint8ArrayConstructor|Int8ArrayConstructor|\n    Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|Uint8ArrayConstructor|\n    Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor;\nexport type SupportedTypedArray = InstanceType<SupportedTypedArrayConstructors>;\n\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nexport const NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP = new Map<string, SupportedTypedArrayConstructors>([\n  ['float32', Float32Array],\n  ['uint8', Uint8Array],\n  ['int8', Int8Array],\n  ['uint16', Uint16Array],\n  ['float16', Uint16Array],\n  ['int16', Int16Array],\n  ['int32', Int32Array],\n  ['bool', Uint8Array],\n  ['float64', Float64Array],\n  ['uint32', Uint32Array],\n]);\n\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nexport const NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP = new Map<SupportedTypedArrayConstructors, Tensor.Type>([\n  [Float32Array, 'float32'],\n  [Uint8Array, 'uint8'],\n  [Int8Array, 'int8'],\n  [Uint16Array, 'uint16'],\n  [Int16Array, 'int16'],\n  [Int32Array, 'int32'],\n  [Float64Array, 'float64'],\n  [Uint32Array, 'uint32'],\n]);\n\n// the following code allows delaying execution of BigInt checking. This allows lazy initialization for\n// NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP and NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP, which allows BigInt polyfill\n// if available.\nlet isBigIntChecked = false;\nexport const checkBigInt = () => {\n  if (!isBigIntChecked) {\n    isBigIntChecked = true;\n    const isBigInt64ArrayAvailable = typeof BigInt64Array !== 'undefined' && typeof BigInt64Array.from === 'function';\n    const isBigUint64ArrayAvailable =\n        typeof BigUint64Array !== 'undefined' && typeof BigUint64Array.from === 'function';\n\n    if (isBigInt64ArrayAvailable) {\n      NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('int64', BigInt64Array);\n      NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array, 'int64');\n    }\n    if (isBigUint64ArrayAvailable) {\n      NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('uint64', BigUint64Array);\n      NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array, 'uint64');\n    }\n  }\n};\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {CpuPinnedConstructorParameters, GpuBufferConstructorParameters, TextureConstructorParameters} from './tensor-factory.js';\nimport {Tensor} from './tensor-impl.js';\n\n/**\n * calculate size from dims.\n *\n * @param dims the dims array. May be an illegal input.\n */\nexport const calculateSize = (dims: readonly unknown[]): number => {\n  let size = 1;\n  for (let i = 0; i < dims.length; i++) {\n    const dim = dims[i];\n    if (typeof dim !== 'number' || !Number.isSafeInteger(dim)) {\n      throw new TypeError(`dims[${i}] must be an integer, got: ${dim}`);\n    }\n    if (dim < 0) {\n      throw new RangeError(`dims[${i}] must be a non-negative integer, got: ${dim}`);\n    }\n    size *= dim;\n  }\n  return size;\n};\n\n/**\n * implementation of Tensor.reshape()\n */\nexport const tensorReshape = (tensor: Tensor, dims: readonly number[]): Tensor => {\n  switch (tensor.location) {\n    case 'cpu':\n      return new Tensor(tensor.type, tensor.data, dims);\n    case 'cpu-pinned':\n      return new Tensor({\n        location: 'cpu-pinned',\n        data: tensor.data as CpuPinnedConstructorParameters['data'],\n        type: tensor.type as CpuPinnedConstructorParameters['type'],\n        dims,\n      });\n    case 'texture':\n      return new Tensor({\n        location: 'texture',\n        texture: tensor.texture,\n        type: tensor.type as TextureConstructorParameters['type'],\n        dims,\n      });\n    case 'gpu-buffer':\n      return new Tensor({\n        location: 'gpu-buffer',\n        gpuBuffer: tensor.gpuBuffer,\n        type: tensor.type as GpuBufferConstructorParameters['type'],\n        dims,\n      });\n    default:\n      throw new Error(`tensorReshape: tensor location ${tensor.location} is not supported`);\n  }\n};\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {tensorToDataURL, tensorToImageData} from './tensor-conversion-impl.js';\nimport {TensorToDataUrlOptions, TensorToImageDataOptions} from './tensor-conversion.js';\nimport {tensorFromGpuBuffer, tensorFromImage, tensorFromPinnedBuffer, tensorFromTexture} from './tensor-factory-impl.js';\nimport {CpuPinnedConstructorParameters, GpuBufferConstructorParameters, TensorFromGpuBufferOptions, TensorFromImageBitmapOptions, TensorFromImageDataOptions, TensorFromImageElementOptions, TensorFromTextureOptions, TensorFromUrlOptions, TextureConstructorParameters} from './tensor-factory.js';\nimport {checkBigInt, NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP, NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP, SupportedTypedArray, SupportedTypedArrayConstructors} from './tensor-impl-type-mapping.js';\nimport {calculateSize, tensorReshape} from './tensor-utils-impl.js';\nimport {Tensor as TensorInterface} from './tensor.js';\n\n// type aliases for those exported from Tensor interface\n\ntype TensorType = TensorInterface.Type;\ntype TensorDataType = TensorInterface.DataType;\ntype TensorDataLocation = TensorInterface.DataLocation;\ntype TensorTextureType = TensorInterface.TextureType;\ntype TensorGpuBufferType = TensorInterface.GpuBufferType;\n\n/**\n * the implementation of Tensor interface.\n *\n * @ignore\n */\nexport class Tensor implements TensorInterface {\n  // #region constructors\n\n  /**\n   * Construct a new CPU tensor object from the given type, data and dims.\n   */\n  constructor(\n      type: TensorType, data: TensorDataType|readonly string[]|readonly number[]|readonly boolean[],\n      dims?: readonly number[]);\n  /**\n   * Construct a new CPU tensor object from the given data and dims. Type is inferred from data.\n   */\n  constructor(data: TensorDataType|readonly string[]|readonly boolean[], dims?: readonly number[]);\n  /**\n   * Construct a new tensor object from the pinned CPU data with the given type and dims.\n   *\n   * Tensor's location will be set to 'cpu-pinned'.\n   *\n   * @param params - Specify the parameters to construct the tensor.\n   */\n  constructor(params: CpuPinnedConstructorParameters);\n  /**\n   * Construct a new tensor object from the WebGL texture with the given type and dims.\n   *\n   * Tensor's location will be set to 'texture'.\n   *\n   * @param params - Specify the parameters to construct the tensor.\n   */\n  constructor(params: TextureConstructorParameters);\n  /**\n   * Construct a new tensor object from the WebGPU buffer with the given type and dims.\n   *\n   * Tensor's location will be set to 'gpu-buffer'.\n   *\n   * @param params - Specify the parameters to construct the tensor.\n   */\n  constructor(params: GpuBufferConstructorParameters);\n\n  /**\n   * implementation.\n   */\n  constructor(\n      arg0: TensorType|TensorDataType|readonly string[]|readonly boolean[]|CpuPinnedConstructorParameters|\n      TextureConstructorParameters|GpuBufferConstructorParameters,\n      arg1?: TensorDataType|readonly number[]|readonly string[]|readonly boolean[], arg2?: readonly number[]) {\n    // perform one-time check for BigInt support\n    checkBigInt();\n\n    let type: TensorType;\n    let dims: readonly number[];\n\n    if (typeof arg0 === 'object' && 'location' in arg0) {\n      //\n      // constructing tensor from specific location\n      //\n      this.dataLocation = arg0.location;\n      type = arg0.type;\n      dims = arg0.dims;\n      switch (arg0.location) {\n        case 'cpu-pinned': {\n          const expectedTypedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(type);\n          if (!expectedTypedArrayConstructor) {\n            throw new TypeError(`unsupported type \"${type}\" to create tensor from pinned buffer`);\n          }\n          if (!(arg0.data instanceof expectedTypedArrayConstructor)) {\n            throw new TypeError(`buffer should be of type ${expectedTypedArrayConstructor.name}`);\n          }\n          this.cpuData = arg0.data;\n          break;\n        }\n        case 'texture': {\n          if (type !== 'float32') {\n            throw new TypeError(`unsupported type \"${type}\" to create tensor from texture`);\n          }\n          this.gpuTextureData = arg0.texture;\n          this.downloader = arg0.download;\n          this.disposer = arg0.dispose;\n          break;\n        }\n        case 'gpu-buffer': {\n          if ((type !== 'float32' && type !== 'float16' && type !== 'int32' && type !== 'int64' && type !== 'uint32' &&\n               type !== 'bool')) {\n            throw new TypeError(`unsupported type \"${type}\" to create tensor from gpu buffer`);\n          }\n          this.gpuBufferData = arg0.gpuBuffer;\n          this.downloader = arg0.download;\n          this.disposer = arg0.dispose;\n          break;\n        }\n        default:\n          throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`);\n      }\n    } else {\n      //\n      // constructing tensor of location 'cpu'\n      //\n      let data: TensorDataType;\n      let maybeDims: typeof arg1|typeof arg2;\n      // check whether arg0 is type or data\n      if (typeof arg0 === 'string') {\n        //\n        // Override: constructor(type, data, ...)\n        //\n        type = arg0;\n        maybeDims = arg2;\n        if (arg0 === 'string') {\n          // string tensor\n          if (!Array.isArray(arg1)) {\n            throw new TypeError('A string tensor\\'s data must be a string array.');\n          }\n          // we don't check whether every element in the array is string; this is too slow. we assume it's correct and\n          // error will be populated at inference\n          data = arg1;\n        } else {\n          // numeric tensor\n          const typedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(arg0);\n          if (typedArrayConstructor === undefined) {\n            throw new TypeError(`Unsupported tensor type: ${arg0}.`);\n          }\n          if (Array.isArray(arg1)) {\n            if (arg0 === 'float16') {\n              // Throw error here because when user try to use number array as data,\n              // e.g. new Tensor('float16', [1, 2, 3, 4], dims)), it will actually call\n              // Uint16Array.from(arg1) which generates wrong data.\n              throw new TypeError(\n                  'Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.');\n            } else if (arg0 === 'uint64' || arg0 === 'int64') {\n              // use 'as any' here because:\n              // 1. TypeScript's check on type of 'Array.isArray()' does not work with readonly arrays.\n              // see https://github.com/microsoft/TypeScript/issues/17002\n              // 2. TypeScript's check on union type of '(BigInt64ArrayConstructor|BigUint64ArrayConstructor).from()'\n              // does not accept parameter mapFn.\n              // 3. parameters of 'SupportedTypedArrayConstructors.from()' does not match the requirement of the union\n              // type.\n\n              // assume 'arg1' is of type \"readonly number[]|readonly bigint[]\" here.\n\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              data = (typedArrayConstructor as any).from(arg1, BigInt);\n            } else {\n              // assume 'arg1' is of type \"readonly number[]\" here.\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              data = (typedArrayConstructor as any).from(arg1);\n            }\n          } else if (arg1 instanceof typedArrayConstructor) {\n            data = arg1;\n          } else {\n            throw new TypeError(`A ${type} tensor's data must be type of ${typedArrayConstructor}`);\n          }\n        }\n      } else {\n        //\n        // Override: constructor(data, ...)\n        //\n        maybeDims = arg1;\n        if (Array.isArray(arg0)) {\n          // only boolean[] and string[] is supported\n          if (arg0.length === 0) {\n            throw new TypeError('Tensor type cannot be inferred from an empty array.');\n          }\n          const firstElementType = typeof arg0[0];\n          if (firstElementType === 'string') {\n            type = 'string';\n            data = arg0;\n          } else if (firstElementType === 'boolean') {\n            type = 'bool';\n            // 'arg0' is of type 'boolean[]'. Uint8Array.from(boolean[]) actually works, but typescript thinks this is\n            // wrong type. We use 'as any' to make it happy.\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            data = Uint8Array.from(arg0 as any[]);\n          } else {\n            throw new TypeError(`Invalid element type of data array: ${firstElementType}.`);\n          }\n        } else {\n          // get tensor type from TypedArray\n          const mappedType =\n              NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(arg0.constructor as SupportedTypedArrayConstructors);\n          if (mappedType === undefined) {\n            throw new TypeError(`Unsupported type for tensor data: ${arg0.constructor}.`);\n          }\n          type = mappedType;\n          data = arg0 as SupportedTypedArray;\n        }\n      }\n\n      // type and data is processed, now processing dims\n      if (maybeDims === undefined) {\n        // assume 1-D tensor if dims omitted\n        maybeDims = [data.length];\n      } else if (!Array.isArray(maybeDims)) {\n        throw new TypeError('A tensor\\'s dims must be a number array');\n      }\n      dims = maybeDims as readonly number[];\n\n      this.cpuData = data;\n      this.dataLocation = 'cpu';\n    }\n\n    // perform check on dims\n    const size = calculateSize(dims);\n    // if data is on CPU, check whether data length matches tensor size\n    if (this.cpuData && size !== this.cpuData.length) {\n      throw new Error(`Tensor's size(${size}) does not match data length(${this.cpuData.length}).`);\n    }\n\n    this.type = type;\n    this.dims = dims;\n    this.size = size;\n  }\n  // #endregion\n\n  // #region factory\n  static async fromImage(\n      image: ImageData|HTMLImageElement|ImageBitmap|string,\n      options?: TensorFromImageDataOptions|TensorFromImageElementOptions|TensorFromImageBitmapOptions|\n      TensorFromUrlOptions): Promise<TensorInterface> {\n    return tensorFromImage(image, options);\n  }\n\n  static fromTexture<T extends TensorInterface.TextureDataTypes>(\n      texture: TensorTextureType, options: TensorFromTextureOptions<T>): TensorInterface {\n    return tensorFromTexture(texture, options);\n  }\n\n  static fromGpuBuffer<T extends TensorInterface.GpuBufferDataTypes>(\n      gpuBuffer: TensorGpuBufferType, options: TensorFromGpuBufferOptions<T>): TensorInterface {\n    return tensorFromGpuBuffer(gpuBuffer, options);\n  }\n\n  static fromPinnedBuffer<T extends TensorInterface.CpuPinnedDataTypes>(\n      type: T, buffer: TensorInterface.DataTypeMap[T], dims?: readonly number[]): Tensor {\n    return tensorFromPinnedBuffer(type, buffer, dims);\n  }\n\n  // #endregion\n\n  // #region conversions\n  toDataURL(options?: TensorToDataUrlOptions): string {\n    return tensorToDataURL(this, options);\n  }\n\n  toImageData(options?: TensorToImageDataOptions): ImageData {\n    return tensorToImageData(this, options);\n  }\n  // #endregion\n\n  // #region public fields\n  readonly dims: readonly number[];\n  readonly type: TensorType;\n  readonly size: number;\n  // #endregion\n\n  // #region private fields\n\n  /**\n   * stores the location of the data.\n   */\n  private dataLocation: TensorDataLocation;\n\n  /**\n   * stores the data on CPU, if location is 'cpu' or 'cpu-pinned'. otherwise empty.\n   */\n  private cpuData?: TensorDataType;\n\n  /**\n   * stores the underlying texture when location is 'texture'. otherwise empty.\n   */\n  private gpuTextureData?: TensorTextureType;\n\n  /**\n   * stores the underlying GPU buffer when location is 'gpu-buffer'. otherwise empty.\n   */\n  private gpuBufferData?: TensorGpuBufferType;\n\n  /**\n   * stores an optional downloader function to download data from GPU to CPU.\n   */\n  private downloader?(): Promise<TensorDataType>;\n\n  /**\n   * a flag indicating whether the data is being downloaded from GPU to CPU.\n   */\n  private isDownloading?: boolean;\n\n  /**\n   * stores an optional disposer function to dispose the underlying data.\n   */\n  private disposer?(): void;\n  // #endregion\n\n  // #region properties\n  get data(): TensorDataType {\n    this.ensureValid();\n    if (!this.cpuData) {\n      throw new Error(\n          'The data is not on CPU. Use `getData()` to download GPU data to CPU, ' +\n          'or use `texture` or `gpuBuffer` property to access the GPU data directly.');\n    }\n    return this.cpuData;\n  }\n\n  get location(): TensorDataLocation {\n    return this.dataLocation;\n  }\n\n  get texture(): TensorTextureType {\n    this.ensureValid();\n    if (!this.gpuTextureData) {\n      throw new Error('The data is not stored as a WebGL texture.');\n    }\n    return this.gpuTextureData;\n  }\n\n  get gpuBuffer(): TensorGpuBufferType {\n    this.ensureValid();\n    if (!this.gpuBufferData) {\n      throw new Error('The data is not stored as a WebGPU buffer.');\n    }\n    return this.gpuBufferData;\n  }\n  // #endregion\n\n  // #region methods\n\n  async getData(releaseData?: boolean): Promise<TensorDataType> {\n    this.ensureValid();\n    switch (this.dataLocation) {\n      case 'cpu':\n      case 'cpu-pinned':\n        return this.data;\n      case 'texture':\n      case 'gpu-buffer': {\n        if (!this.downloader) {\n          throw new Error('The current tensor is not created with a specified data downloader.');\n        }\n        if (this.isDownloading) {\n          throw new Error('The current tensor is being downloaded.');\n        }\n        try {\n          this.isDownloading = true;\n          const data = await this.downloader();\n          this.downloader = undefined;\n          this.dataLocation = 'cpu';\n          this.cpuData = data;\n\n          if (releaseData && this.disposer) {\n            this.disposer();\n            this.disposer = undefined;\n          }\n\n          return data;\n\n        } finally {\n          this.isDownloading = false;\n        }\n      }\n      default:\n        throw new Error(`cannot get data from location: ${this.dataLocation}`);\n    }\n  }\n\n  dispose(): void {\n    if (this.isDownloading) {\n      throw new Error('The current tensor is being downloaded.');\n    }\n\n    if (this.disposer) {\n      this.disposer();\n      this.disposer = undefined;\n    }\n    this.cpuData = undefined;\n    this.gpuTextureData = undefined;\n    this.gpuBufferData = undefined;\n    this.downloader = undefined;\n    this.isDownloading = undefined;\n\n    this.dataLocation = 'none';\n  }\n\n  // #endregion\n\n  // #region tensor utilities\n  private ensureValid(): void {\n    if (this.dataLocation === 'none') {\n      throw new Error('The tensor is disposed.');\n    }\n  }\n\n  reshape(dims: readonly number[]): TensorInterface {\n    this.ensureValid();\n    if (this.downloader || this.disposer) {\n      throw new Error('Cannot reshape a tensor that owns GPU resource.');\n    }\n    return tensorReshape(this, dims);\n  }\n  // #endregion\n}\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorFactory} from './tensor-factory.js';\nimport {Tensor as TensorImpl} from './tensor-impl.js';\nimport {TypedTensorUtils} from './tensor-utils.js';\n\n/* eslint-disable @typescript-eslint/no-redeclare */\n\n/**\n * represent a basic tensor with specified dimensions and data type.\n */\ninterface TypedTensorBase<T extends Tensor.Type> {\n  /**\n   * Get the dimensions of the tensor.\n   */\n  readonly dims: readonly number[];\n  /**\n   * Get the data type of the tensor.\n   */\n  readonly type: T;\n  /**\n   * Get the buffer data of the tensor.\n   *\n   * If the data is not on CPU (eg. it's in the form of WebGL texture or WebGPU buffer), throw error.\n   */\n  readonly data: Tensor.DataTypeMap[T];\n  /**\n   * Get the location of the data.\n   */\n  readonly location: Tensor.DataLocation;\n  /**\n   * Get the WebGL texture that holds the tensor data.\n   *\n   * If the data is not on GPU as WebGL texture, throw error.\n   */\n  readonly texture: Tensor.TextureType;\n  /**\n   * Get the WebGPU buffer that holds the tensor data.\n   *\n   * If the data is not on GPU as WebGPU buffer, throw error.\n   */\n  readonly gpuBuffer: Tensor.GpuBufferType;\n\n  /**\n   * Get the buffer data of the tensor.\n   *\n   * If the data is on CPU, returns the data immediately.\n   * If the data is on GPU, downloads the data and returns the promise.\n   *\n   * @param releaseData - whether release the data on GPU. Ignore if data is already on CPU.\n   */\n  getData(releaseData?: boolean): Promise<Tensor.DataTypeMap[T]>;\n\n  /**\n   * Dispose the tensor data.\n   *\n   * If the data is on CPU, remove its internal reference to the underlying data.\n   * If the data is on GPU, release the data on GPU.\n   *\n   * After calling this function, the tensor is considered no longer valid. Its location will be set to 'none'.\n   */\n  dispose(): void;\n}\n\nexport declare namespace Tensor {\n  interface DataTypeMap {\n    float32: Float32Array;\n    uint8: Uint8Array;\n    int8: Int8Array;\n    uint16: Uint16Array;\n    int16: Int16Array;\n    int32: Int32Array;\n    int64: BigInt64Array;\n    string: string[];\n    bool: Uint8Array;\n    float16: Uint16Array;  // Keep using Uint16Array until we have a concrete solution for float 16.\n    float64: Float64Array;\n    uint32: Uint32Array;\n    uint64: BigUint64Array;\n    // complex64: never;\n    // complex128: never;\n    // bfloat16: never;\n  }\n\n  interface ElementTypeMap {\n    float32: number;\n    uint8: number;\n    int8: number;\n    uint16: number;\n    int16: number;\n    int32: number;\n    int64: bigint;\n    string: string;\n    bool: boolean;\n    float16: number;  // Keep using Uint16Array until we have a concrete solution for float 16.\n    float64: number;\n    uint32: number;\n    uint64: bigint;\n    // complex64: never;\n    // complex128: never;\n    // bfloat16: never;\n  }\n\n  type DataType = DataTypeMap[Type];\n  type ElementType = ElementTypeMap[Type];\n\n  /**\n   * supported data types for constructing a tensor from a pinned CPU buffer\n   */\n  export type CpuPinnedDataTypes = Exclude<Tensor.Type, 'string'>;\n\n  /**\n   * type alias for WebGL texture\n   */\n  export type TextureType = WebGLTexture;\n\n  /**\n   * supported data types for constructing a tensor from a WebGL texture\n   */\n  export type TextureDataTypes = 'float32';\n\n  /**\n   * type alias for WebGPU buffer\n   *\n   * The reason why we don't use type \"GPUBuffer\" defined in webgpu.d.ts from @webgpu/types is because \"@webgpu/types\"\n   * requires \"@types/dom-webcodecs\" as peer dependency when using TypeScript < v5.1 and its version need to be chosen\n   * carefully according to the TypeScript version being used. This means so far there is not a way to keep every\n   * TypeScript version happy. It turns out that we will easily broke users on some TypeScript version.\n   *\n   * for more info see https://github.com/gpuweb/types/issues/127\n   */\n  export type GpuBufferType = {size: number; mapState: 'unmapped' | 'pending' | 'mapped'};\n\n  /**\n   * supported data types for constructing a tensor from a WebGPU buffer\n   */\n  export type GpuBufferDataTypes = 'float32'|'float16'|'int32'|'int64'|'uint32'|'bool';\n\n  /**\n   * represent where the tensor data is stored\n   */\n  export type DataLocation = 'none'|'cpu'|'cpu-pinned'|'texture'|'gpu-buffer';\n\n  /**\n   * represent the data type of a tensor\n   */\n  export type Type = keyof DataTypeMap;\n}\n\n/**\n * Represent multi-dimensional arrays to feed to or fetch from model inferencing.\n */\nexport interface TypedTensor<T extends Tensor.Type> extends TypedTensorBase<T>, TypedTensorUtils<T> {}\n/**\n * Represent multi-dimensional arrays to feed to or fetch from model inferencing.\n */\nexport interface Tensor extends TypedTensorBase<Tensor.Type>, TypedTensorUtils<Tensor.Type> {}\n\n/**\n * type TensorConstructor defines the constructors of 'Tensor' to create CPU tensor instances.\n */\nexport interface TensorConstructor {\n  // #region CPU tensor - specify element type\n  /**\n   * Construct a new string tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(type: 'string', data: Tensor.DataTypeMap['string']|readonly string[],\n      dims?: readonly number[]): TypedTensor<'string'>;\n\n  /**\n   * Construct a new bool tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(type: 'bool', data: Tensor.DataTypeMap['bool']|readonly boolean[], dims?: readonly number[]): TypedTensor<'bool'>;\n\n  /**\n   * Construct a new 64-bit integer typed tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new<T extends 'uint64'|'int64'>(\n      type: T, data: Tensor.DataTypeMap[T]|readonly bigint[]|readonly number[],\n      dims?: readonly number[]): TypedTensor<T>;\n\n  /**\n   * Construct a new numeric tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new<T extends Exclude<Tensor.Type, 'string'|'bool'|'uint64'|'int64'>>(\n      type: T, data: Tensor.DataTypeMap[T]|readonly number[], dims?: readonly number[]): TypedTensor<T>;\n  // #endregion\n\n  // #region CPU tensor - infer element types\n\n  /**\n   * Construct a new float32 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Float32Array, dims?: readonly number[]): TypedTensor<'float32'>;\n\n  /**\n   * Construct a new int8 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Int8Array, dims?: readonly number[]): TypedTensor<'int8'>;\n\n  /**\n   * Construct a new uint8 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Uint8Array, dims?: readonly number[]): TypedTensor<'uint8'>;\n\n  /**\n   * Construct a new uint16 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Uint16Array, dims?: readonly number[]): TypedTensor<'uint16'>;\n\n  /**\n   * Construct a new int16 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Int16Array, dims?: readonly number[]): TypedTensor<'int16'>;\n\n  /**\n   * Construct a new int32 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Int32Array, dims?: readonly number[]): TypedTensor<'int32'>;\n\n  /**\n   * Construct a new int64 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: BigInt64Array, dims?: readonly number[]): TypedTensor<'int64'>;\n\n  /**\n   * Construct a new string tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: readonly string[], dims?: readonly number[]): TypedTensor<'string'>;\n\n  /**\n   * Construct a new bool tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: readonly boolean[], dims?: readonly number[]): TypedTensor<'bool'>;\n\n  /**\n   * Construct a new float64 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Float64Array, dims?: readonly number[]): TypedTensor<'float64'>;\n\n  /**\n   * Construct a new uint32 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Uint32Array, dims?: readonly number[]): TypedTensor<'uint32'>;\n\n  /**\n   * Construct a new uint64 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: BigUint64Array, dims?: readonly number[]): TypedTensor<'uint64'>;\n\n  // #endregion\n\n  // #region CPU tensor - fall back to non-generic tensor type declaration\n\n  /**\n   * Construct a new tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(type: Tensor.Type, data: Tensor.DataType|readonly number[]|readonly string[]|readonly bigint[]|readonly boolean[],\n      dims?: readonly number[]): Tensor;\n\n  /**\n   * Construct a new tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Tensor.DataType, dims?: readonly number[]): Tensor;\n  // #endregion\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Tensor = TensorImpl as (TensorConstructor & TensorFactory);\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {resolveBackend} from './backend-impl.js';\nimport {InferenceSessionHandler} from './backend.js';\nimport {InferenceSession as InferenceSessionInterface} from './inference-session.js';\nimport {OnnxValue} from './onnx-value.js';\nimport {Tensor} from './tensor.js';\n\ntype SessionOptions = InferenceSessionInterface.SessionOptions;\ntype RunOptions = InferenceSessionInterface.RunOptions;\ntype FeedsType = InferenceSessionInterface.FeedsType;\ntype FetchesType = InferenceSessionInterface.FetchesType;\ntype ReturnType = InferenceSessionInterface.ReturnType;\n\nexport class InferenceSession implements InferenceSessionInterface {\n  private constructor(handler: InferenceSessionHandler) {\n    this.handler = handler;\n  }\n  run(feeds: FeedsType, options?: RunOptions): Promise<ReturnType>;\n  run(feeds: FeedsType, fetches: FetchesType, options?: RunOptions): Promise<ReturnType>;\n  async run(feeds: FeedsType, arg1?: FetchesType|RunOptions, arg2?: RunOptions): Promise<ReturnType> {\n    const fetches: {[name: string]: OnnxValue|null} = {};\n    let options: RunOptions = {};\n    // check inputs\n    if (typeof feeds !== 'object' || feeds === null || feeds instanceof Tensor || Array.isArray(feeds)) {\n      throw new TypeError(\n          '\\'feeds\\' must be an object that use input names as keys and OnnxValue as corresponding values.');\n    }\n\n    let isFetchesEmpty = true;\n    // determine which override is being used\n    if (typeof arg1 === 'object') {\n      if (arg1 === null) {\n        throw new TypeError('Unexpected argument[1]: cannot be null.');\n      }\n      if (arg1 instanceof Tensor) {\n        throw new TypeError('\\'fetches\\' cannot be a Tensor');\n      }\n\n      if (Array.isArray(arg1)) {\n        if (arg1.length === 0) {\n          throw new TypeError('\\'fetches\\' cannot be an empty array.');\n        }\n        isFetchesEmpty = false;\n        // output names\n        for (const name of arg1) {\n          if (typeof name !== 'string') {\n            throw new TypeError('\\'fetches\\' must be a string array or an object.');\n          }\n          if (this.outputNames.indexOf(name) === -1) {\n            throw new RangeError(`'fetches' contains invalid output name: ${name}.`);\n          }\n          fetches[name] = null;\n        }\n\n        if (typeof arg2 === 'object' && arg2 !== null) {\n          options = arg2;\n        } else if (typeof arg2 !== 'undefined') {\n          throw new TypeError('\\'options\\' must be an object.');\n        }\n      } else {\n        // decide whether arg1 is fetches or options\n        // if any output name is present and its value is valid OnnxValue, we consider it fetches\n        let isFetches = false;\n        const arg1Keys = Object.getOwnPropertyNames(arg1);\n        for (const name of this.outputNames) {\n          if (arg1Keys.indexOf(name) !== -1) {\n            const v = (arg1 as InferenceSessionInterface.NullableOnnxValueMapType)[name];\n            if (v === null || v instanceof Tensor) {\n              isFetches = true;\n              isFetchesEmpty = false;\n              fetches[name] = v;\n            }\n          }\n        }\n\n        if (isFetches) {\n          if (typeof arg2 === 'object' && arg2 !== null) {\n            options = arg2;\n          } else if (typeof arg2 !== 'undefined') {\n            throw new TypeError('\\'options\\' must be an object.');\n          }\n        } else {\n          options = arg1 as RunOptions;\n        }\n      }\n    } else if (typeof arg1 !== 'undefined') {\n      throw new TypeError('Unexpected argument[1]: must be \\'fetches\\' or \\'options\\'.');\n    }\n\n    // check if all inputs are in feed\n    for (const name of this.inputNames) {\n      if (typeof feeds[name] === 'undefined') {\n        throw new Error(`input '${name}' is missing in 'feeds'.`);\n      }\n    }\n\n    // if no fetches is specified, we use the full output names list\n    if (isFetchesEmpty) {\n      for (const name of this.outputNames) {\n        fetches[name] = null;\n      }\n    }\n\n    // feeds, fetches and options are prepared\n\n    const results = await this.handler.run(feeds, fetches, options);\n    const returnValue: {[name: string]: OnnxValue} = {};\n    for (const key in results) {\n      if (Object.hasOwnProperty.call(results, key)) {\n        const result = results[key];\n        if (result instanceof Tensor) {\n          returnValue[key] = result;\n        } else {\n          returnValue[key] = new Tensor(result.type, result.data, result.dims);\n        }\n      }\n    }\n    return returnValue;\n  }\n\n  async release(): Promise<void> {\n    return this.handler.dispose();\n  }\n\n  static create(path: string, options?: SessionOptions): Promise<InferenceSessionInterface>;\n  static create(buffer: ArrayBufferLike, options?: SessionOptions): Promise<InferenceSessionInterface>;\n  static create(buffer: ArrayBufferLike, byteOffset: number, byteLength?: number, options?: SessionOptions):\n      Promise<InferenceSessionInterface>;\n  static create(buffer: Uint8Array, options?: SessionOptions): Promise<InferenceSessionInterface>;\n  static async create(\n      arg0: string|ArrayBufferLike|Uint8Array, arg1?: SessionOptions|number, arg2?: number,\n      arg3?: SessionOptions): Promise<InferenceSessionInterface> {\n    // either load from a file or buffer\n    let filePathOrUint8Array: string|Uint8Array;\n    let options: SessionOptions = {};\n\n    if (typeof arg0 === 'string') {\n      filePathOrUint8Array = arg0;\n      if (typeof arg1 === 'object' && arg1 !== null) {\n        options = arg1;\n      } else if (typeof arg1 !== 'undefined') {\n        throw new TypeError('\\'options\\' must be an object.');\n      }\n    } else if (arg0 instanceof Uint8Array) {\n      filePathOrUint8Array = arg0;\n      if (typeof arg1 === 'object' && arg1 !== null) {\n        options = arg1;\n      } else if (typeof arg1 !== 'undefined') {\n        throw new TypeError('\\'options\\' must be an object.');\n      }\n    } else if (\n        arg0 instanceof ArrayBuffer ||\n        (typeof SharedArrayBuffer !== 'undefined' && arg0 instanceof SharedArrayBuffer)) {\n      const buffer = arg0;\n      let byteOffset = 0;\n      let byteLength = arg0.byteLength;\n      if (typeof arg1 === 'object' && arg1 !== null) {\n        options = arg1;\n      } else if (typeof arg1 === 'number') {\n        byteOffset = arg1;\n        if (!Number.isSafeInteger(byteOffset)) {\n          throw new RangeError('\\'byteOffset\\' must be an integer.');\n        }\n        if (byteOffset < 0 || byteOffset >= buffer.byteLength) {\n          throw new RangeError(`'byteOffset' is out of range [0, ${buffer.byteLength}).`);\n        }\n        byteLength = arg0.byteLength - byteOffset;\n        if (typeof arg2 === 'number') {\n          byteLength = arg2;\n          if (!Number.isSafeInteger(byteLength)) {\n            throw new RangeError('\\'byteLength\\' must be an integer.');\n          }\n          if (byteLength <= 0 || byteOffset + byteLength > buffer.byteLength) {\n            throw new RangeError(`'byteLength' is out of range (0, ${buffer.byteLength - byteOffset}].`);\n          }\n          if (typeof arg3 === 'object' && arg3 !== null) {\n            options = arg3;\n          } else if (typeof arg3 !== 'undefined') {\n            throw new TypeError('\\'options\\' must be an object.');\n          }\n        } else if (typeof arg2 !== 'undefined') {\n          throw new TypeError('\\'byteLength\\' must be a number.');\n        }\n      } else if (typeof arg1 !== 'undefined') {\n        throw new TypeError('\\'options\\' must be an object.');\n      }\n      filePathOrUint8Array = new Uint8Array(buffer, byteOffset, byteLength);\n    } else {\n      throw new TypeError('Unexpected argument[0]: must be \\'path\\' or \\'buffer\\'.');\n    }\n\n    // get backend hints\n    const eps = options.executionProviders || [];\n    const backendHints = eps.map(i => typeof i === 'string' ? i : i.name);\n    const backend = await resolveBackend(backendHints);\n    const handler = await backend.createInferenceSessionHandler(filePathOrUint8Array, options);\n    return new InferenceSession(handler);\n  }\n\n  startProfiling(): void {\n    this.handler.startProfiling();\n  }\n  endProfiling(): void {\n    this.handler.endProfiling();\n  }\n\n  get inputNames(): readonly string[] {\n    return this.handler.inputNames;\n  }\n  get outputNames(): readonly string[] {\n    return this.handler.outputNames;\n  }\n\n  private handler: InferenceSessionHandler;\n}\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession as InferenceSessionImpl} from './inference-session-impl.js';\nimport {OnnxValue, OnnxValueDataLocation} from './onnx-value.js';\n\n/* eslint-disable @typescript-eslint/no-redeclare */\n\nexport declare namespace InferenceSession {\n  // #region input/output types\n\n  type OnnxValueMapType = {readonly [name: string]: OnnxValue};\n  type NullableOnnxValueMapType = {readonly [name: string]: OnnxValue | null};\n\n  /**\n   * A feeds (model inputs) is an object that uses input names as keys and OnnxValue as corresponding values.\n   */\n  type FeedsType = OnnxValueMapType;\n\n  /**\n   * A fetches (model outputs) could be one of the following:\n   *\n   * - Omitted. Use model's output names definition.\n   * - An array of string indicating the output names.\n   * - An object that use output names as keys and OnnxValue or null as corresponding values.\n   *\n   * @remark\n   * different from input argument, in output, OnnxValue is optional. If an OnnxValue is present it will be\n   * used as a pre-allocated value by the inference engine; if omitted, inference engine will allocate buffer\n   * internally.\n   */\n  type FetchesType = readonly string[]|NullableOnnxValueMapType;\n\n  /**\n   * A inferencing return type is an object that uses output names as keys and OnnxValue as corresponding values.\n   */\n  type ReturnType = OnnxValueMapType;\n\n  // #endregion\n\n  // #region session options\n\n  /**\n   * A set of configurations for session behavior.\n   */\n  export interface SessionOptions {\n    /**\n     * An array of execution provider options.\n     *\n     * An execution provider option can be a string indicating the name of the execution provider,\n     * or an object of corresponding type.\n     */\n    executionProviders?: readonly ExecutionProviderConfig[];\n\n    /**\n     * The intra OP threads number.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native).\n     */\n    intraOpNumThreads?: number;\n\n    /**\n     * The inter OP threads number.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native).\n     */\n    interOpNumThreads?: number;\n\n    /**\n     * The free dimension override.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    freeDimensionOverrides?: {readonly [dimensionName: string]: number};\n\n    /**\n     * The optimization level.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    graphOptimizationLevel?: 'disabled'|'basic'|'extended'|'all';\n\n    /**\n     * Whether enable CPU memory arena.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    enableCpuMemArena?: boolean;\n\n    /**\n     * Whether enable memory pattern.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    enableMemPattern?: boolean;\n\n    /**\n     * Execution mode.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    executionMode?: 'sequential'|'parallel';\n\n    /**\n     * Optimized model file path.\n     *\n     * If this setting is specified, the optimized model will be dumped. In browser, a blob will be created\n     * with a pop-up window.\n     */\n    optimizedModelFilePath?: string;\n\n    /**\n     * Wether enable profiling.\n     *\n     * This setting is a placeholder for a future use.\n     */\n    enableProfiling?: boolean;\n\n    /**\n     * File prefix for profiling.\n     *\n     * This setting is a placeholder for a future use.\n     */\n    profileFilePrefix?: string;\n\n    /**\n     * Log ID.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    logId?: string;\n\n    /**\n     * Log severity level. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/common/logging/severity.h\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    logSeverityLevel?: 0|1|2|3|4;\n\n    /**\n     * Log verbosity level.\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     */\n    logVerbosityLevel?: number;\n\n    /**\n     * Specify string as a preferred data location for all outputs, or an object that use output names as keys and a\n     * preferred data location as corresponding values.\n     *\n     * This setting is available only in ONNXRuntime Web for WebGL and WebGPU EP.\n     */\n    preferredOutputLocation?: OnnxValueDataLocation|{readonly [outputName: string]: OnnxValueDataLocation};\n\n    /**\n     * Store configurations for a session. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/session/\n     * onnxruntime_session_options_config_keys.h\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     *\n     * @example\n     * ```js\n     * extra: {\n     *   session: {\n     *     set_denormal_as_zero: \"1\",\n     *     disable_prepacking: \"1\"\n     *   },\n     *   optimization: {\n     *     enable_gelu_approximation: \"1\"\n     *   }\n     * }\n     * ```\n     */\n    extra?: Record<string, unknown>;\n  }\n\n  // #region execution providers\n\n  // Currently, we have the following backends to support execution providers:\n  // Backend Node.js binding: supports 'cpu' and 'cuda'.\n  // Backend WebAssembly: supports 'cpu', 'wasm', 'xnnpack' and 'webnn'.\n  // Backend ONNX.js: supports 'webgl'.\n  // Backend React Native: supports 'cpu', 'xnnpack', 'coreml' (iOS), 'nnapi' (Android).\n  interface ExecutionProviderOptionMap {\n    cpu: CpuExecutionProviderOption;\n    coreml: CoreMlExecutionProviderOption;\n    cuda: CudaExecutionProviderOption;\n    dml: DmlExecutionProviderOption;\n    tensorrt: TensorRtExecutionProviderOption;\n    wasm: WebAssemblyExecutionProviderOption;\n    webgl: WebGLExecutionProviderOption;\n    xnnpack: XnnpackExecutionProviderOption;\n    webgpu: WebGpuExecutionProviderOption;\n    webnn: WebNNExecutionProviderOption;\n    nnapi: NnapiExecutionProviderOption;\n  }\n\n  type ExecutionProviderName = keyof ExecutionProviderOptionMap;\n  type ExecutionProviderConfig =\n      ExecutionProviderOptionMap[ExecutionProviderName]|ExecutionProviderOption|ExecutionProviderName|string;\n\n  export interface ExecutionProviderOption {\n    readonly name: string;\n  }\n  export interface CpuExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'cpu';\n    useArena?: boolean;\n  }\n  export interface CudaExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'cuda';\n    deviceId?: number;\n  }\n  export interface CoreMlExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'coreml';\n    coreMlFlags?: number;\n  }\n  export interface DmlExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'dml';\n    deviceId?: number;\n  }\n  export interface TensorRtExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'tensorrt';\n    deviceId?: number;\n  }\n  export interface WebAssemblyExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'wasm';\n  }\n  export interface WebGLExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'webgl';\n    // TODO: add flags\n  }\n  export interface XnnpackExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'xnnpack';\n  }\n  export interface WebGpuExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'webgpu';\n    preferredLayout?: 'NCHW'|'NHWC';\n  }\n  export interface WebNNExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'webnn';\n    deviceType?: 'cpu'|'gpu';\n    numThreads?: number;\n    powerPreference?: 'default'|'low-power'|'high-performance';\n  }\n  export interface CoreMLExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'coreml';\n    useCPUOnly?: boolean;\n    enableOnSubgraph?: boolean;\n    onlyEnableDeviceWithANE?: boolean;\n  }\n  export interface NnapiExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'nnapi';\n    useFP16?: boolean;\n    useNCHW?: boolean;\n    cpuDisabled?: boolean;\n    cpuOnly?: boolean;\n  }\n  // #endregion\n\n  // #endregion\n\n  // #region run options\n\n  /**\n   * A set of configurations for inference run behavior\n   */\n  export interface RunOptions {\n    /**\n     * Log severity level. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/common/logging/severity.h\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    logSeverityLevel?: 0|1|2|3|4;\n\n    /**\n     * Log verbosity level.\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     */\n    logVerbosityLevel?: number;\n\n    /**\n     * Terminate all incomplete OrtRun calls as soon as possible if true\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     */\n    terminate?: boolean;\n\n    /**\n     * A tag for the Run() calls using this\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    tag?: string;\n\n    /**\n     * Set a single run configuration entry. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/session/\n     * onnxruntime_run_options_config_keys.h\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     *\n     * @example\n     *\n     * ```js\n     * extra: {\n     *   memory: {\n     *     enable_memory_arena_shrinkage: \"1\",\n     *   }\n     * }\n     * ```\n     */\n    extra?: Record<string, unknown>;\n  }\n\n  // #endregion\n\n  // #region value metadata\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-interface\n  interface ValueMetadata {\n    // TBD\n  }\n\n  // #endregion\n}\n\n/**\n * Represent a runtime instance of an ONNX model.\n */\nexport interface InferenceSession {\n  // #region run()\n\n  /**\n   * Execute the model asynchronously with the given feeds and options.\n   *\n   * @param feeds - Representation of the model input. See type description of `InferenceSession.InputType` for detail.\n   * @param options - Optional. A set of options that controls the behavior of model inference.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding values.\n   */\n  run(feeds: InferenceSession.FeedsType, options?: InferenceSession.RunOptions): Promise<InferenceSession.ReturnType>;\n\n  /**\n   * Execute the model asynchronously with the given feeds, fetches and options.\n   *\n   * @param feeds - Representation of the model input. See type description of `InferenceSession.InputType` for detail.\n   * @param fetches - Representation of the model output. See type description of `InferenceSession.OutputType` for\n   * detail.\n   * @param options - Optional. A set of options that controls the behavior of model inference.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding values.\n   */\n  run(feeds: InferenceSession.FeedsType, fetches: InferenceSession.FetchesType,\n      options?: InferenceSession.RunOptions): Promise<InferenceSession.ReturnType>;\n\n  // #endregion\n\n  // #region release()\n\n  /**\n   * Release the inference session and the underlying resources.\n   */\n  release(): Promise<void>;\n\n  // #endregion\n\n  // #region profiling\n\n  /**\n   * Start profiling.\n   */\n  startProfiling(): void;\n\n  /**\n   * End profiling.\n   */\n  endProfiling(): void;\n\n  // #endregion\n\n  // #region metadata\n\n  /**\n   * Get input names of the loaded model.\n   */\n  readonly inputNames: readonly string[];\n\n  /**\n   * Get output names of the loaded model.\n   */\n  readonly outputNames: readonly string[];\n\n  // /**\n  //  * Get input metadata of the loaded model.\n  //  */\n  // readonly inputMetadata: ReadonlyArray<Readonly<InferenceSession.ValueMetadata>>;\n\n  // /**\n  //  * Get output metadata of the loaded model.\n  //  */\n  // readonly outputMetadata: ReadonlyArray<Readonly<InferenceSession.ValueMetadata>>;\n\n  // #endregion\n}\n\nexport interface InferenceSessionFactory {\n  // #region create()\n\n  /**\n   * Create a new inference session and load model asynchronously from an ONNX model file.\n   *\n   * @param uri - The URI or file path of the model to load.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(uri: string, options?: InferenceSession.SessionOptions): Promise<InferenceSession>;\n\n  /**\n   * Create a new inference session and load model asynchronously from an array bufer.\n   *\n   * @param buffer - An ArrayBuffer representation of an ONNX model.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(buffer: ArrayBufferLike, options?: InferenceSession.SessionOptions): Promise<InferenceSession>;\n\n  /**\n   * Create a new inference session and load model asynchronously from segment of an array bufer.\n   *\n   * @param buffer - An ArrayBuffer representation of an ONNX model.\n   * @param byteOffset - The beginning of the specified portion of the array buffer.\n   * @param byteLength - The length in bytes of the array buffer.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(buffer: ArrayBufferLike, byteOffset: number, byteLength?: number, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSession>;\n\n  /**\n   * Create a new inference session and load model asynchronously from a Uint8Array.\n   *\n   * @param buffer - A Uint8Array representation of an ONNX model.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<InferenceSession>;\n\n  // #endregion\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const InferenceSession: InferenceSessionFactory = InferenceSessionImpl;\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from './tensor.js';\n\ntype NonTensorType = never;\n\n/**\n * Type OnnxValue Represents both tensors and non-tensors value for model's inputs/outputs.\n *\n * NOTE: currently not support non-tensor\n */\nexport type OnnxValue = Tensor|NonTensorType;\n\n/**\n * Type OnnxValueDataLocation represents the location of the data of an OnnxValue.\n */\nexport type OnnxValueDataLocation = Tensor.DataLocation;\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {resolveBackend} from './backend-impl.js';\nimport {SessionHandler, TrainingSessionHandler} from './backend.js';\nimport {InferenceSession as InferenceSession} from './inference-session.js';\nimport {OnnxValue} from './onnx-value.js';\nimport {Tensor} from './tensor.js';\nimport {TrainingSession as TrainingSessionInterface, TrainingSessionCreateOptions} from './training-session.js';\n\ntype SessionOptions = InferenceSession.SessionOptions;\ntype FeedsType = InferenceSession.FeedsType;\ntype FetchesType = InferenceSession.FetchesType;\ntype ReturnType = InferenceSession.ReturnType;\ntype RunOptions = InferenceSession.RunOptions;\n\nconst noBackendErrMsg: string = 'Training backend could not be resolved. ' +\n    'Make sure you\\'re using the correct configuration & WebAssembly files.';\n\nexport class TrainingSession implements TrainingSessionInterface {\n  private constructor(handler: TrainingSessionHandler) {\n    this.handler = handler;\n  }\n  private handler: TrainingSessionHandler;\n\n  get inputNames(): readonly string[] {\n    return this.handler.inputNames;\n  }\n  get outputNames(): readonly string[] {\n    return this.handler.outputNames;\n  }\n\n  static async create(trainingOptions: TrainingSessionCreateOptions, sessionOptions?: SessionOptions):\n      Promise<TrainingSession> {\n    const evalModel: string|Uint8Array = trainingOptions.evalModel || '';\n    const optimizerModel: string|Uint8Array = trainingOptions.optimizerModel || '';\n    const options: SessionOptions = sessionOptions || {};\n\n    // get backend hints\n    const eps = options.executionProviders || [];\n    const backendHints = eps.map(i => typeof i === 'string' ? i : i.name);\n    const backend = await resolveBackend(backendHints);\n    if (backend.createTrainingSessionHandler) {\n      const handler = await backend.createTrainingSessionHandler(\n          trainingOptions.checkpointState, trainingOptions.trainModel, evalModel, optimizerModel, options);\n      return new TrainingSession(handler);\n    } else {\n      throw new Error(noBackendErrMsg);\n    }\n  }\n\n  /**\n   * Helper function for runTrainStep and future runStep methods that handles the type-narrowing conversion from\n   * the given parameters to SessionHandler.FetchesType and RunOptions.\n   *\n   * @param feeds the required input\n   * @param arg1 narrowed & converted into the SessionHandler.FetchesType or RunOptions object\n   * @param arg2 optional RunOptions object.\n   * @returns\n   */\n  typeNarrowingForRunStep(feeds: FeedsType, arg1?: FetchesType|RunOptions, arg2?: RunOptions):\n      [SessionHandler.FetchesType, RunOptions] {\n    const fetches: {[name: string]: OnnxValue|null} = {};\n    let options: RunOptions = {};\n    // check inputs\n    if (typeof feeds !== 'object' || feeds === null || feeds instanceof Tensor || Array.isArray(feeds)) {\n      throw new TypeError(\n          '\\'feeds\\' must be an object that use input names as keys and OnnxValue as corresponding values.');\n    }\n\n    let isFetchesEmpty = true;\n    // determine which override is being used\n    if (typeof arg1 === 'object') {\n      if (arg1 === null) {\n        throw new TypeError('Unexpected argument[1]: cannot be null.');\n      }\n      if (arg1 instanceof Tensor) {\n        throw new TypeError('\\'fetches\\' cannot be a Tensor');\n      }\n\n      if (Array.isArray(arg1)) {\n        if (arg1.length === 0) {\n          throw new TypeError('\\'fetches\\' cannot be an empty array.');\n        }\n        isFetchesEmpty = false;\n        // output names\n        for (const name of arg1) {\n          if (typeof name !== 'string') {\n            throw new TypeError('\\'fetches\\' must be a string array or an object.');\n          }\n          if (this.outputNames.indexOf(name) === -1) {\n            throw new RangeError(`'fetches' contains invalid output name: ${name}.`);\n          }\n          fetches[name] = null;\n        }\n\n        if (typeof arg2 === 'object' && arg2 !== null) {\n          options = arg2;\n        } else if (typeof arg2 !== 'undefined') {\n          throw new TypeError('\\'options\\' must be an object.');\n        }\n      } else {\n        // decide whether arg1 is fetches or options\n        // if any output name is present and its value is valid OnnxValue, we consider it fetches\n        let isFetches = false;\n        const arg1Keys = Object.getOwnPropertyNames(arg1);\n        for (const name of this.outputNames) {\n          if (arg1Keys.indexOf(name) !== -1) {\n            const v = (arg1 as InferenceSession.NullableOnnxValueMapType)[name];\n            if (v === null || v instanceof Tensor) {\n              isFetches = true;\n              isFetchesEmpty = false;\n              fetches[name] = v;\n            }\n          }\n        }\n\n        if (isFetches) {\n          if (typeof arg2 === 'object' && arg2 !== null) {\n            options = arg2;\n          } else if (typeof arg2 !== 'undefined') {\n            throw new TypeError('\\'options\\' must be an object.');\n          }\n        } else {\n          options = arg1 as RunOptions;\n        }\n      }\n    } else if (typeof arg1 !== 'undefined') {\n      throw new TypeError('Unexpected argument[1]: must be \\'fetches\\' or \\'options\\'.');\n    }\n\n    // check if all inputs are in feed\n    for (const name of this.inputNames) {\n      if (typeof feeds[name] === 'undefined') {\n        throw new Error(`input '${name}' is missing in 'feeds'.`);\n      }\n    }\n\n    // if no fetches is specified, we use the full output names list\n    if (isFetchesEmpty) {\n      for (const name of this.outputNames) {\n        fetches[name] = null;\n      }\n    }\n\n    return [fetches, options];\n  }\n\n  /**\n   * Helper method for runTrainStep and any other runStep methods. Takes the ReturnType result from the SessionHandler\n   * and changes it into a map of Tensors.\n   *\n   * @param results\n   * @returns\n   */\n  convertHandlerReturnTypeToMapOfTensors(results: SessionHandler.ReturnType): ReturnType {\n    const returnValue: {[name: string]: OnnxValue} = {};\n    for (const key in results) {\n      if (Object.hasOwnProperty.call(results, key)) {\n        const result = results[key];\n        if (result instanceof Tensor) {\n          returnValue[key] = result;\n        } else {\n          returnValue[key] = new Tensor(result.type, result.data, result.dims);\n        }\n      }\n    }\n    return returnValue;\n  }\n\n  runTrainStep(feeds: FeedsType, options?: RunOptions): Promise<ReturnType>;\n  runTrainStep(feeds: FeedsType, fetches: FetchesType, options?: RunOptions): Promise<ReturnType>;\n  async runTrainStep(feeds: FeedsType, arg1?: FetchesType|RunOptions, arg2?: RunOptions): Promise<ReturnType> {\n    const [fetches, options] = this.typeNarrowingForRunStep(feeds, arg1, arg2);\n    const results = await this.handler.runTrainStep(feeds, fetches, options);\n    return this.convertHandlerReturnTypeToMapOfTensors(results);\n  }\n\n  async loadParametersBuffer(_array: Uint8Array, _trainableOnly: boolean): Promise<void> {\n    throw new Error('Method not implemented.');\n  }\n\n  async getContiguousParameters(_trainableOnly: boolean): Promise<Uint8Array> {\n    throw new Error('Method not implemented.');\n  }\n\n  async release(): Promise<void> {\n    return this.handler.dispose();\n  }\n}\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from './inference-session.js';\nimport {TrainingSession as TrainingSessionImpl} from './training-session-impl.js';\n\n/* eslint-disable @typescript-eslint/no-redeclare */\n\nexport declare namespace TrainingSession {\n  /**\n   * Either URI file path (string) or Uint8Array containing model or checkpoint information.\n   */\n  type URIorBuffer = string|Uint8Array;\n}\n\n/**\n * Represent a runtime instance of an ONNX training session,\n * which contains a model that can be trained, and, optionally,\n * an eval and optimizer model.\n */\nexport interface TrainingSession {\n  // #region run()\n\n  /**\n   * Run TrainStep asynchronously with the given feeds and options.\n   *\n   * @param feeds - Representation of the model input. See type description of `InferenceSession.InputType` for\n   detail.\n   * @param options - Optional. A set of options that controls the behavior of model training.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding values.\n   */\n  runTrainStep(feeds: InferenceSession.FeedsType, options?: InferenceSession.RunOptions):\n      Promise<InferenceSession.ReturnType>;\n\n  /**\n   * Run a single train step with the given inputs and options.\n   *\n   * @param feeds - Representation of the model input.\n   * @param fetches - Representation of the model output.\n   * detail.\n   * @param options - Optional. A set of options that controls the behavior of model inference.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding\n   values.\n   */\n  runTrainStep(\n      feeds: InferenceSession.FeedsType, fetches: InferenceSession.FetchesType,\n      options?: InferenceSession.RunOptions): Promise<InferenceSession.ReturnType>;\n\n  // #endregion\n\n  // #region copy parameters\n  /**\n   * Copies from a buffer containing parameters to the TrainingSession parameters.\n   *\n   * @param buffer - buffer containing parameters\n   * @param trainableOnly - True if trainable parameters only to be modified, false otherwise.\n   */\n  loadParametersBuffer(array: Uint8Array, trainableOnly: boolean): Promise<void>;\n\n  /**\n   * Copies from the TrainingSession parameters to a buffer.\n   *\n   * @param trainableOnly - True if trainable parameters only to be copied, false othrwise.\n   * @returns A promise that resolves to a buffer of the requested parameters.\n   */\n  getContiguousParameters(trainableOnly: boolean): Promise<Uint8Array>;\n  // #endregion\n\n  // #region release()\n\n  /**\n   * Release the inference session and the underlying resources.\n   */\n  release(): Promise<void>;\n  // #endregion\n\n  // #region metadata\n\n  /**\n   * Get input names of the loaded model.\n   */\n  readonly inputNames: readonly string[];\n\n  /**\n   * Get output names of the loaded model.\n   */\n  readonly outputNames: readonly string[];\n  // #endregion\n}\n\n/**\n * Represents the optional parameters that can be passed into the TrainingSessionFactory.\n */\nexport interface TrainingSessionCreateOptions {\n  /**\n   * URI or buffer for a .ckpt file that contains the checkpoint for the training model.\n   */\n  checkpointState: TrainingSession.URIorBuffer;\n  /**\n   * URI or buffer for the .onnx training file.\n   */\n  trainModel: TrainingSession.URIorBuffer;\n  /**\n   * Optional. URI or buffer for the .onnx optimizer model file.\n   */\n  optimizerModel?: TrainingSession.URIorBuffer;\n  /**\n   * Optional. URI or buffer for the .onnx eval model file.\n   */\n  evalModel?: TrainingSession.URIorBuffer;\n}\n\n/**\n * Defines method overload possibilities for creating a TrainingSession.\n */\nexport interface TrainingSessionFactory {\n  // #region create()\n\n  /**\n   * Creates a new TrainingSession and asynchronously loads any models passed in through trainingOptions\n   *\n   * @param trainingOptions specify models and checkpoints to load into the Training Session\n   * @param sessionOptions specify configuration for training session behavior\n   *\n   * @returns Promise that resolves to a TrainingSession object\n   */\n  create(trainingOptions: TrainingSessionCreateOptions, sessionOptions?: InferenceSession.SessionOptions):\n      Promise<TrainingSession>;\n\n  // #endregion\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const TrainingSession: TrainingSessionFactory = TrainingSessionImpl;\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * # ONNX Runtime JavaScript API\n *\n * ONNX Runtime JavaScript API is a unified API for all JavaScript usages, including the following NPM packages:\n *\n * - [onnxruntime-node](https://www.npmjs.com/package/onnxruntime-node)\n * - [onnxruntime-web](https://www.npmjs.com/package/onnxruntime-web)\n * - [onnxruntime-react-native](https://www.npmjs.com/package/onnxruntime-react-native)\n *\n * See also:\n * - [Get Started](https://onnxruntime.ai/docs/get-started/with-javascript.html)\n * - [Inference examples](https://github.com/microsoft/onnxruntime-inference-examples/tree/main/js)\n *\n * @packageDocumentation\n */\n\nexport * from './backend.js';\nexport * from './env.js';\nexport * from './inference-session.js';\nexport * from './tensor.js';\nexport * from './onnx-value.js';\nexport * from './training-session.js';\n",
    "export const readFile = undefined;",
    "export const join = undefined;",
    "\nvar ortWasm = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(moduleArg = {}) {\n\nvar d=moduleArg,aa,l;d.ready=new Promise((a,b)=>{aa=a;l=b});var ba=Object.assign({},d),m=\"./this.program\",ca=\"object\"==typeof window,r=\"function\"==typeof importScripts,da=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,w=\"\",x,y,z;\nif(da){var fs=require(\"fs\"),B=require(\"path\");w=r?B.dirname(w)+\"/\":__dirname+\"/\";x=(a,b)=>{a=a.startsWith(\"file://\")?new URL(a):B.normalize(a);return fs.readFileSync(a,b?void 0:\"utf8\")};z=a=>{a=x(a,!0);a.buffer||(a=new Uint8Array(a));return a};y=(a,b,c,e=!0)=>{a=a.startsWith(\"file://\")?new URL(a):B.normalize(a);fs.readFile(a,e?void 0:\"utf8\",(g,h)=>{g?c(g):b(e?h.buffer:h)})};!d.thisProgram&&1<process.argv.length&&(m=process.argv[1].replace(/\\\\/g,\"/\"));process.argv.slice(2);d.inspect=()=>\"[Emscripten Module object]\"}else if(ca||\nr)r?w=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(w=document.currentScript.src),_scriptDir&&(w=_scriptDir),0!==w.indexOf(\"blob:\")?w=w.substr(0,w.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):w=\"\",x=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},r&&(z=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),y=(a,b,c)=>{var e=new XMLHttpRequest;e.open(\"GET\",a,!0);e.responseType=\n\"arraybuffer\";e.onload=()=>{200==e.status||0==e.status&&e.response?b(e.response):c()};e.onerror=c;e.send(null)};var ea=d.print||console.log.bind(console),C=d.printErr||console.error.bind(console);Object.assign(d,ba);ba=null;d.thisProgram&&(m=d.thisProgram);var D;d.wasmBinary&&(D=d.wasmBinary);var noExitRuntime=d.noExitRuntime||!0;\"object\"!=typeof WebAssembly&&E(\"no native wasm support detected\");var F,G,fa=!1,H,I,J,K;\nfunction ha(){var a=F.buffer;d.HEAP8=H=new Int8Array(a);d.HEAP16=new Int16Array(a);d.HEAP32=J=new Int32Array(a);d.HEAPU8=I=new Uint8Array(a);d.HEAPU16=new Uint16Array(a);d.HEAPU32=K=new Uint32Array(a);d.HEAPF32=new Float32Array(a);d.HEAPF64=new Float64Array(a)}var L,ia=[],ja=[],ka=[];function la(){var a=d.preRun.shift();ia.unshift(a)}var M=0,N=null,O=null;\nfunction E(a){if(d.onAbort)d.onAbort(a);a=\"Aborted(\"+a+\")\";C(a);fa=!0;a=new WebAssembly.RuntimeError(a+\". Build with -sASSERTIONS for more info.\");l(a);throw a;}function ma(a){return a.startsWith(\"data:application/octet-stream;base64,\")}var P;P=\"ort-training-wasm-simd.wasm\";if(!ma(P)){var na=P;P=d.locateFile?d.locateFile(na,w):w+na}function oa(a){if(a==P&&D)return new Uint8Array(D);if(z)return z(a);throw\"both async and sync fetching of the wasm failed\";}\nfunction pa(a){if(!D&&(ca||r)){if(\"function\"==typeof fetch&&!a.startsWith(\"file://\"))return fetch(a,{credentials:\"same-origin\"}).then(b=>{if(!b.ok)throw\"failed to load wasm binary file at '\"+a+\"'\";return b.arrayBuffer()}).catch(()=>oa(a));if(y)return new Promise((b,c)=>{y(a,e=>b(new Uint8Array(e)),c)})}return Promise.resolve().then(()=>oa(a))}function qa(a,b,c){return pa(a).then(e=>WebAssembly.instantiate(e,b)).then(e=>e).then(c,e=>{C(\"failed to asynchronously prepare wasm: \"+e);E(e)})}\nfunction ra(a,b){var c=P;return D||\"function\"!=typeof WebAssembly.instantiateStreaming||ma(c)||c.startsWith(\"file://\")||da||\"function\"!=typeof fetch?qa(c,a,b):fetch(c,{credentials:\"same-origin\"}).then(e=>WebAssembly.instantiateStreaming(e,a).then(b,function(g){C(\"wasm streaming compile failed: \"+g);C(\"falling back to ArrayBuffer instantiation\");return qa(c,a,b)}))}var Q,R=a=>{for(;0<a.length;)a.shift()(d)};\nfunction sa(a){this.Ka=a-24;this.Pa=function(b){K[this.Ka+4>>2>>>0]=b};this.Oa=function(b){K[this.Ka+8>>2>>>0]=b};this.Ma=function(b,c){this.Na();this.Pa(b);this.Oa(c)};this.Na=function(){K[this.Ka+16>>2>>>0]=0}}\nvar ta=0,ua=0,va=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0,wa=(a,b,c)=>{b>>>=0;var e=b+c;for(c=b;a[c]&&!(c>=e);)++c;if(16<c-b&&a.buffer&&va)return va.decode(a.subarray(b,c));for(e=\"\";b<c;){var g=a[b++];if(g&128){var h=a[b++]&63;if(192==(g&224))e+=String.fromCharCode((g&31)<<6|h);else{var k=a[b++]&63;g=224==(g&240)?(g&15)<<12|h<<6|k:(g&7)<<18|h<<12|k<<6|a[b++]&63;65536>g?e+=String.fromCharCode(g):(g-=65536,e+=String.fromCharCode(55296|g>>10,56320|g&1023))}}else e+=String.fromCharCode(g)}return e},\nS=(a,b)=>(a>>>=0)?wa(I,a,b):\"\",T=a=>{for(var b=0,c=0;c<a.length;++c){var e=a.charCodeAt(c);127>=e?b++:2047>=e?b+=2:55296<=e&&57343>=e?(b+=4,++c):b+=3}return b},U=(a,b,c,e)=>{c>>>=0;if(!(0<e))return 0;var g=c;e=c+e-1;for(var h=0;h<a.length;++h){var k=a.charCodeAt(h);if(55296<=k&&57343>=k){var p=a.charCodeAt(++h);k=65536+((k&1023)<<10)|p&1023}if(127>=k){if(c>=e)break;b[c++>>>0]=k}else{if(2047>=k){if(c+1>=e)break;b[c++>>>0]=192|k>>6}else{if(65535>=k){if(c+2>=e)break;b[c++>>>0]=224|k>>12}else{if(c+3>=\ne)break;b[c++>>>0]=240|k>>18;b[c++>>>0]=128|k>>12&63}b[c++>>>0]=128|k>>6&63}b[c++>>>0]=128|k&63}}b[c>>>0]=0;return c-g},V=a=>0===a%4&&(0!==a%100||0===a%400),xa=[0,31,60,91,121,152,182,213,244,274,305,335],ya=[0,31,59,90,120,151,181,212,243,273,304,334],Da=a=>{var b=T(a)+1,c=za(b);c&&U(a,I,c,b);return c},W={},Fa=()=>{if(!Ea){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\n\"_\")+\".UTF-8\",_:m||\"./this.program\"},b;for(b in W)void 0===W[b]?delete a[b]:a[b]=W[b];var c=[];for(b in a)c.push(`${b}=${a[b]}`);Ea=c}return Ea},Ea,Ga=[null,[],[]],Ha=[31,29,31,30,31,30,31,31,30,31,30,31],Ia=[31,28,31,30,31,30,31,31,30,31,30,31];function Ja(a){var b=Array(T(a)+1);U(a,b,0,b.length);return b}\nfunction Ka(a,b,c,e){function g(f,n,q){for(f=\"number\"==typeof f?f.toString():f||\"\";f.length<n;)f=q[0]+f;return f}function h(f,n){return g(f,n,\"0\")}function k(f,n){function q(Aa){return 0>Aa?-1:0<Aa?1:0}var A;0===(A=q(f.getFullYear()-n.getFullYear()))&&0===(A=q(f.getMonth()-n.getMonth()))&&(A=q(f.getDate()-n.getDate()));return A}function p(f){switch(f.getDay()){case 0:return new Date(f.getFullYear()-1,11,29);case 1:return f;case 2:return new Date(f.getFullYear(),0,3);case 3:return new Date(f.getFullYear(),\n0,2);case 4:return new Date(f.getFullYear(),0,1);case 5:return new Date(f.getFullYear()-1,11,31);case 6:return new Date(f.getFullYear()-1,11,30)}}function t(f){var n=f.Ga;for(f=new Date((new Date(f.Ha+1900,0,1)).getTime());0<n;){var q=f.getMonth(),A=(V(f.getFullYear())?Ha:Ia)[q];if(n>A-f.getDate())n-=A-f.getDate()+1,f.setDate(1),11>q?f.setMonth(q+1):(f.setMonth(0),f.setFullYear(f.getFullYear()+1));else{f.setDate(f.getDate()+n);break}}q=new Date(f.getFullYear()+1,0,4);n=p(new Date(f.getFullYear(),\n0,4));q=p(q);return 0>=k(n,f)?0>=k(q,f)?f.getFullYear()+1:f.getFullYear():f.getFullYear()-1}a>>>=0;b>>>=0;c>>>=0;e>>>=0;var u=J[e+40>>2>>>0];e={Sa:J[e>>2>>>0],Ra:J[e+4>>2>>>0],Ia:J[e+8>>2>>>0],La:J[e+12>>2>>>0],Ja:J[e+16>>2>>>0],Ha:J[e+20>>2>>>0],Fa:J[e+24>>2>>>0],Ga:J[e+28>>2>>>0],Ua:J[e+32>>2>>>0],Qa:J[e+36>>2>>>0],Ta:u?S(u):\"\"};c=S(c);u={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\n\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var v in u)c=c.replace(new RegExp(v,\"g\"),u[v]);var Ba=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),Ca=\"January February March April May June July August September October November December\".split(\" \");u={\"%a\":f=>Ba[f.Fa].substring(0,3),\"%A\":f=>Ba[f.Fa],\"%b\":f=>\nCa[f.Ja].substring(0,3),\"%B\":f=>Ca[f.Ja],\"%C\":f=>h((f.Ha+1900)/100|0,2),\"%d\":f=>h(f.La,2),\"%e\":f=>g(f.La,2,\" \"),\"%g\":f=>t(f).toString().substring(2),\"%G\":f=>t(f),\"%H\":f=>h(f.Ia,2),\"%I\":f=>{f=f.Ia;0==f?f=12:12<f&&(f-=12);return h(f,2)},\"%j\":f=>{for(var n=0,q=0;q<=f.Ja-1;n+=(V(f.Ha+1900)?Ha:Ia)[q++]);return h(f.La+n,3)},\"%m\":f=>h(f.Ja+1,2),\"%M\":f=>h(f.Ra,2),\"%n\":()=>\"\\n\",\"%p\":f=>0<=f.Ia&&12>f.Ia?\"AM\":\"PM\",\"%S\":f=>h(f.Sa,2),\"%t\":()=>\"\\t\",\"%u\":f=>f.Fa||7,\"%U\":f=>h(Math.floor((f.Ga+7-f.Fa)/7),2),\"%V\":f=>\n{var n=Math.floor((f.Ga+7-(f.Fa+6)%7)/7);2>=(f.Fa+371-f.Ga-2)%7&&n++;if(n)53==n&&(q=(f.Fa+371-f.Ga)%7,4==q||3==q&&V(f.Ha)||(n=1));else{n=52;var q=(f.Fa+7-f.Ga-1)%7;(4==q||5==q&&V(f.Ha%400-1))&&n++}return h(n,2)},\"%w\":f=>f.Fa,\"%W\":f=>h(Math.floor((f.Ga+7-(f.Fa+6)%7)/7),2),\"%y\":f=>(f.Ha+1900).toString().substring(2),\"%Y\":f=>f.Ha+1900,\"%z\":f=>{f=f.Qa;var n=0<=f;f=Math.abs(f)/60;return(n?\"+\":\"-\")+String(\"0000\"+(f/60*100+f%60)).slice(-4)},\"%Z\":f=>f.Ta,\"%%\":()=>\"%\"};c=c.replace(/%%/g,\"\\x00\\x00\");for(v in u)c.includes(v)&&\n(c=c.replace(new RegExp(v,\"g\"),u[v](e)));c=c.replace(/\\0\\0/g,\"%\");v=Ja(c);if(v.length>b)return 0;H.set(v,a>>>0);return v.length-1}var X=[],Y=void 0,La=[];\nfunction Ma(a,b){if(!Y){Y=new WeakMap;var c=L.length;if(Y)for(var e=0;e<0+c;e++){var g=e;var h=X[g];h||(g>=X.length&&(X.length=g+1),X[g]=h=L.get(g));(g=h)&&Y.set(g,e)}}if(c=Y.get(a)||0)return c;if(La.length)c=La.pop();else{try{L.grow(1)}catch(p){if(!(p instanceof RangeError))throw p;throw\"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\";}c=L.length-1}try{e=c,L.set(e,a),X[e]=L.get(e)}catch(p){if(!(p instanceof TypeError))throw p;if(\"function\"==typeof WebAssembly.Function){e=WebAssembly.Function;\ng={i:\"i32\",j:\"i64\",f:\"f32\",d:\"f64\",p:\"i32\"};h={parameters:[],results:\"v\"==b[0]?[]:[g[b[0]]]};for(var k=1;k<b.length;++k)h.parameters.push(g[b[k]]);b=new e(h,a)}else{e=[1];g=b.slice(0,1);b=b.slice(1);h={i:127,p:127,j:126,f:125,d:124};e.push(96);k=b.length;128>k?e.push(k):e.push(k%128|128,k>>7);for(k=0;k<b.length;++k)e.push(h[b[k]]);\"v\"==g?e.push(0):e.push(1,h[g]);b=[0,97,115,109,1,0,0,0,1];g=e.length;128>g?b.push(g):b.push(g%128|128,g>>7);b.push.apply(b,e);b.push(2,7,1,1,101,1,102,0,0,7,5,1,1,102,\n0,0);b=new WebAssembly.Module(new Uint8Array(b));b=(new WebAssembly.Instance(b,{e:{f:a}})).exports.f}e=c;L.set(e,b);X[e]=L.get(e)}Y.set(a,c);return c}\nvar Oa={a:function(a,b,c){a>>>=0;(new sa(a)).Ma(b>>>0,c>>>0);ta=a;ua++;throw ta;},e:function(){return 0},H:function(){},x:function(){},z:function(){},J:function(){return 0},F:function(){},A:function(){},E:function(){},g:function(){},y:function(){},v:function(){},G:function(){},w:function(){},l:()=>!0,o:function(a,b,c){a=b+2097152>>>0<4194305-!!a?(a>>>0)+4294967296*b:NaN;c>>>=0;a=new Date(1E3*a);J[c>>2>>>0]=a.getUTCSeconds();J[c+4>>2>>>0]=a.getUTCMinutes();J[c+8>>2>>>0]=a.getUTCHours();J[c+12>>2>>>\n0]=a.getUTCDate();J[c+16>>2>>>0]=a.getUTCMonth();J[c+20>>2>>>0]=a.getUTCFullYear()-1900;J[c+24>>2>>>0]=a.getUTCDay();J[c+28>>2>>>0]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0},p:function(a,b,c){a=b+2097152>>>0<4194305-!!a?(a>>>0)+4294967296*b:NaN;c>>>=0;a=new Date(1E3*a);J[c>>2>>>0]=a.getSeconds();J[c+4>>2>>>0]=a.getMinutes();J[c+8>>2>>>0]=a.getHours();J[c+12>>2>>>0]=a.getDate();J[c+16>>2>>>0]=a.getMonth();J[c+20>>2>>>0]=a.getFullYear()-1900;J[c+24>>2>>>0]=a.getDay();J[c+28>>2>>>\n0]=(V(a.getFullYear())?xa:ya)[a.getMonth()]+a.getDate()-1|0;J[c+36>>2>>>0]=-(60*a.getTimezoneOffset());b=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();var e=(new Date(a.getFullYear(),0,1)).getTimezoneOffset();J[c+32>>2>>>0]=(b!=e&&a.getTimezoneOffset()==Math.min(e,b))|0},q:function(a){a>>>=0;var b=new Date(J[a+20>>2>>>0]+1900,J[a+16>>2>>>0],J[a+12>>2>>>0],J[a+8>>2>>>0],J[a+4>>2>>>0],J[a>>2>>>0],0),c=J[a+32>>2>>>0],e=b.getTimezoneOffset(),g=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),\nh=(new Date(b.getFullYear(),0,1)).getTimezoneOffset(),k=Math.min(h,g);0>c?J[a+32>>2>>>0]=Number(g!=h&&k==e):0<c!=(k==e)&&(g=Math.max(h,g),b.setTime(b.getTime()+6E4*((0<c?k:g)-e)));J[a+24>>2>>>0]=b.getDay();J[a+28>>2>>>0]=(V(b.getFullYear())?xa:ya)[b.getMonth()]+b.getDate()-1|0;J[a>>2>>>0]=b.getSeconds();J[a+4>>2>>>0]=b.getMinutes();J[a+8>>2>>>0]=b.getHours();J[a+12>>2>>>0]=b.getDate();J[a+16>>2>>>0]=b.getMonth();J[a+20>>2>>>0]=b.getYear();a=b.getTime()/1E3;return Na((Q=a,1<=+Math.abs(Q)?0<Q?+Math.floor(Q/\n4294967296)>>>0:~~+Math.ceil((Q-+(~~Q>>>0))/4294967296)>>>0:0)),a>>>0},m:function(){return-52},n:function(){},t:function(a,b,c){function e(t){return(t=t.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?t[1]:\"GMT\"}c>>>=0;var g=(new Date).getFullYear(),h=new Date(g,0,1),k=new Date(g,6,1);g=h.getTimezoneOffset();var p=k.getTimezoneOffset();K[a>>>0>>2>>>0]=60*Math.max(g,p);J[b>>>0>>2>>>0]=Number(g!=p);a=e(h);b=e(k);a=Da(a);b=Da(b);p<g?(K[c>>2>>>0]=a,K[c+4>>2>>>0]=b):(K[c>>2>>>0]=b,K[c+4>>2>>>0]=a)},d:()=>{E(\"\")},\nh:function(){return Date.now()},u:function(){return 4294901760},b:()=>performance.now(),I:function(a,b,c){b>>>=0;return I.copyWithin(a>>>0>>>0,b>>>0,b+(c>>>0)>>>0)},s:function(a){a>>>=0;var b=I.length;if(4294901760<a)return!1;for(var c=1;4>=c;c*=2){var e=b*(1+.2/c);e=Math.min(e,a+100663296);var g=Math;e=Math.max(a,e);a:{g=g.min.call(g,4294901760,e+(65536-e%65536)%65536)-F.buffer.byteLength+65535>>>16;try{F.grow(g);ha();var h=1;break a}catch(k){}h=void 0}if(h)return!0}return!1},C:function(a,b){a>>>=\n0;b>>>=0;var c=0;Fa().forEach(function(e,g){var h=b+c;g=K[a+4*g>>2>>>0]=h;for(h=0;h<e.length;++h)H[g++>>0>>>0]=e.charCodeAt(h);H[g>>0>>>0]=0;c+=e.length+1});return 0},D:function(a,b){a>>>=0;b>>>=0;var c=Fa();K[a>>2>>>0]=c.length;var e=0;c.forEach(function(g){e+=g.length+1});K[b>>2>>>0]=e;return 0},f:()=>52,k:function(){return 52},r:function(){return 70},j:function(a,b,c,e){b>>>=0;c>>>=0;e>>>=0;for(var g=0,h=0;h<c;h++){var k=K[b>>2>>>0],p=K[b+4>>2>>>0];b+=8;for(var t=0;t<p;t++){var u=I[k+t>>>0],v=\nGa[a];0===u||10===u?((1===a?ea:C)(wa(v,0)),v.length=0):v.push(u)}g+=p}K[e>>2>>>0]=g;return 0},B:Ka,c:function(a,b,c,e){return Ka(a>>>0,b>>>0,c>>>0,e>>>0)},i:function(a,b,c,e){const g=L.length;a=new Uint8Array(I.slice(a+b,a+c));try{var h=new WebAssembly.Module(a),k=new WebAssembly.Instance(h,{env:{memory:F}}),p;for(p in k.exports)Ma(k.exports[p]);return g<L.length?g:e}catch(t){return console.log(t),e}}};\n(function(){function a(c){c=c.exports;G=c=Pa(c);F=G.K;ha();L=G.Aa;ja.unshift(G.L);M--;d.monitorRunDependencies&&d.monitorRunDependencies(M);if(0==M&&(null!==N&&(clearInterval(N),N=null),O)){var e=O;O=null;e()}return c}var b={a:Oa};M++;d.monitorRunDependencies&&d.monitorRunDependencies(M);if(d.instantiateWasm)try{return d.instantiateWasm(b,a)}catch(c){C(\"Module.instantiateWasm callback failed with error: \"+c),l(c)}ra(b,function(c){a(c.instance)}).catch(l);return{}})();\nd._OrtInit=(a,b)=>(d._OrtInit=G.M)(a,b);d._OrtGetLastError=(a,b)=>(d._OrtGetLastError=G.N)(a,b);d._OrtCreateSessionOptions=(a,b,c,e,g,h,k,p,t,u)=>(d._OrtCreateSessionOptions=G.O)(a,b,c,e,g,h,k,p,t,u);d._OrtAppendExecutionProvider=(a,b)=>(d._OrtAppendExecutionProvider=G.P)(a,b);d._OrtAddFreeDimensionOverride=(a,b,c)=>(d._OrtAddFreeDimensionOverride=G.Q)(a,b,c);d._OrtAddSessionConfigEntry=(a,b,c)=>(d._OrtAddSessionConfigEntry=G.R)(a,b,c);d._OrtReleaseSessionOptions=a=>(d._OrtReleaseSessionOptions=G.S)(a);\nd._OrtCreateSession=(a,b,c)=>(d._OrtCreateSession=G.T)(a,b,c);d._OrtReleaseSession=a=>(d._OrtReleaseSession=G.U)(a);d._OrtGetInputOutputCount=(a,b,c)=>(d._OrtGetInputOutputCount=G.V)(a,b,c);d._OrtGetInputName=(a,b)=>(d._OrtGetInputName=G.W)(a,b);d._OrtGetOutputName=(a,b)=>(d._OrtGetOutputName=G.X)(a,b);d._OrtFree=a=>(d._OrtFree=G.Y)(a);d._OrtCreateTensor=(a,b,c,e,g,h)=>(d._OrtCreateTensor=G.Z)(a,b,c,e,g,h);d._OrtGetTensorData=(a,b,c,e,g)=>(d._OrtGetTensorData=G._)(a,b,c,e,g);\nd._OrtReleaseTensor=a=>(d._OrtReleaseTensor=G.$)(a);d._OrtCreateRunOptions=(a,b,c,e)=>(d._OrtCreateRunOptions=G.aa)(a,b,c,e);d._OrtAddRunConfigEntry=(a,b,c)=>(d._OrtAddRunConfigEntry=G.ba)(a,b,c);d._OrtReleaseRunOptions=a=>(d._OrtReleaseRunOptions=G.ca)(a);d._OrtCreateBinding=a=>(d._OrtCreateBinding=G.da)(a);d._OrtBindInput=(a,b,c)=>(d._OrtBindInput=G.ea)(a,b,c);d._OrtBindOutput=(a,b,c,e)=>(d._OrtBindOutput=G.fa)(a,b,c,e);d._OrtClearBoundOutputs=a=>(d._OrtClearBoundOutputs=G.ga)(a);\nd._OrtReleaseBinding=a=>(d._OrtReleaseBinding=G.ha)(a);d._OrtRunWithBinding=(a,b,c,e,g)=>(d._OrtRunWithBinding=G.ia)(a,b,c,e,g);d._OrtRun=(a,b,c,e,g,h,k,p)=>(d._OrtRun=G.ja)(a,b,c,e,g,h,k,p);d._OrtEndProfiling=a=>(d._OrtEndProfiling=G.ka)(a);d._OrtTrainingLoadCheckpoint=(a,b)=>(d._OrtTrainingLoadCheckpoint=G.la)(a,b);d._OrtTrainingReleaseCheckpoint=a=>(d._OrtTrainingReleaseCheckpoint=G.ma)(a);d._OrtTrainingCreateSession=(a,b,c,e,g,h,k,p)=>(d._OrtTrainingCreateSession=G.na)(a,b,c,e,g,h,k,p);\nd._OrtTrainingLazyResetGrad=a=>(d._OrtTrainingLazyResetGrad=G.oa)(a);d._OrtTrainingRunTrainStep=(a,b,c,e,g,h)=>(d._OrtTrainingRunTrainStep=G.pa)(a,b,c,e,g,h);d._OrtTrainingOptimizerStep=(a,b)=>(d._OrtTrainingOptimizerStep=G.qa)(a,b);d._OrtTrainingEvalStep=(a,b,c,e,g,h)=>(d._OrtTrainingEvalStep=G.ra)(a,b,c,e,g,h);d._OrtTrainingGetParametersSize=(a,b,c)=>(d._OrtTrainingGetParametersSize=G.sa)(a,b,c);d._OrtTrainingCopyParametersToBuffer=(a,b,c,e)=>(d._OrtTrainingCopyParametersToBuffer=G.ta)(a,b,c,e);\nd._OrtTrainingCopyParametersFromBuffer=(a,b,c,e)=>(d._OrtTrainingCopyParametersFromBuffer=G.ua)(a,b,c,e);d._OrtTrainingGetModelInputOutputCount=(a,b,c,e)=>(d._OrtTrainingGetModelInputOutputCount=G.va)(a,b,c,e);d._OrtTrainingGetModelInputOutputName=(a,b,c,e)=>(d._OrtTrainingGetModelInputOutputName=G.wa)(a,b,c,e);d._OrtTrainingReleaseSession=a=>(d._OrtTrainingReleaseSession=G.xa)(a);var za=d._malloc=a=>(za=d._malloc=G.ya)(a);d._free=a=>(d._free=G.za)(a);\nvar Na=a=>(Na=G.Ba)(a),Qa=()=>(Qa=G.Ca)(),Ra=a=>(Ra=G.Da)(a),Sa=a=>(Sa=G.Ea)(a);d.___start_em_js=975904;d.___stop_em_js=976516;function Pa(a){a=Object.assign({},a);var b=e=>()=>e()>>>0,c=e=>g=>e(g)>>>0;a.__errno_location=b(a.__errno_location);a.malloc=c(a.malloc);a.stackSave=b(a.stackSave);a.stackAlloc=c(a.stackAlloc);return a}d.stackAlloc=Sa;d.stackSave=Qa;d.stackRestore=Ra;d.addFunction=Ma;d.UTF8ToString=S;d.stringToUTF8=(a,b,c)=>U(a,I,b,c);d.lengthBytesUTF8=T;var Z;\nO=function Ta(){Z||Ua();Z||(O=Ta)};\nfunction Ua(){function a(){if(!Z&&(Z=!0,d.calledRun=!0,!fa)){R(ja);aa(d);if(d.onRuntimeInitialized)d.onRuntimeInitialized();if(d.postRun)for(\"function\"==typeof d.postRun&&(d.postRun=[d.postRun]);d.postRun.length;){var b=d.postRun.shift();ka.unshift(b)}R(ka)}}if(!(0<M)){if(d.preRun)for(\"function\"==typeof d.preRun&&(d.preRun=[d.preRun]);d.preRun.length;)la();R(ia);0<M||(d.setStatus?(d.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){d.setStatus(\"\")},1);a()},1)):a())}}\nif(d.preInit)for(\"function\"==typeof d.preInit&&(d.preInit=[d.preInit]);0<d.preInit.length;)d.preInit.pop()();Ua();\n\n\n  return moduleArg.ready\n}\n\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasm;\nelse if (typeof define === 'function' && define['amd'])\n  define([], () => ortWasm);\n",
    "",
    "",
    "export const cpus = undefined;",
    "\nvar ortWasmThreaded = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(moduleArg = {}) {\n\nfunction aa(){e.buffer!=l.buffer&&m();return l}function n(){e.buffer!=l.buffer&&m();return ba}function p(){e.buffer!=l.buffer&&m();return ca}function t(){e.buffer!=l.buffer&&m();return da}function ea(){e.buffer!=l.buffer&&m();return fa}var w=moduleArg,ha,x;w.ready=new Promise((a,b)=>{ha=a;x=b});\nvar ia=Object.assign({},w),ja=\"./this.program\",z=(a,b)=>{throw b;},ka=\"object\"==typeof window,A=\"function\"==typeof importScripts,C=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,D=w.ENVIRONMENT_IS_PTHREAD||!1,E=\"\";function la(a){return w.locateFile?w.locateFile(a,E):E+a}var ma,F,G;\nif(C){var fs=require(\"fs\"),na=require(\"path\");E=A?na.dirname(E)+\"/\":__dirname+\"/\";ma=(b,c)=>{b=b.startsWith(\"file://\")?new URL(b):na.normalize(b);return fs.readFileSync(b,c?void 0:\"utf8\")};G=b=>{b=ma(b,!0);b.buffer||(b=new Uint8Array(b));return b};F=(b,c,d,g=!0)=>{b=b.startsWith(\"file://\")?new URL(b):na.normalize(b);fs.readFile(b,g?void 0:\"utf8\",(h,k)=>{h?d(h):c(g?k.buffer:k)})};!w.thisProgram&&1<process.argv.length&&(ja=process.argv[1].replace(/\\\\/g,\"/\"));process.argv.slice(2);z=(b,c)=>{process.exitCode=\nb;throw c;};w.inspect=()=>\"[Emscripten Module object]\";let a;try{a=require(\"worker_threads\")}catch(b){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),b;}global.Worker=a.Worker}else if(ka||A)A?E=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(E=document.currentScript.src),(typeof _scriptDir !== \"undefined\" && _scriptDir)&&(E=_scriptDir),0!==E.indexOf(\"blob:\")?E=E.substr(0,E.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):E=\"\",C||(ma=a=>{var b=\nnew XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},A&&(G=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),F=(a,b,c)=>{var d=new XMLHttpRequest;d.open(\"GET\",a,!0);d.responseType=\"arraybuffer\";d.onload=()=>{200==d.status||0==d.status&&d.response?b(d.response):c()};d.onerror=c;d.send(null)});C&&\"undefined\"==typeof performance&&(global.performance=require(\"perf_hooks\").performance);\nvar oa=console.log.bind(console),pa=console.error.bind(console);C&&(oa=(...a)=>fs.writeSync(1,a.join(\" \")+\"\\n\"),pa=(...a)=>fs.writeSync(2,a.join(\" \")+\"\\n\"));var qa=w.print||oa,I=w.printErr||pa;Object.assign(w,ia);ia=null;w.thisProgram&&(ja=w.thisProgram);w.quit&&(z=w.quit);var J;w.wasmBinary&&(J=w.wasmBinary);var noExitRuntime=w.noExitRuntime||!0;\"object\"!=typeof WebAssembly&&K(\"no native wasm support detected\");var e,L,ra,M=!1,N,l,ba,ca,da,fa;\nfunction m(){var a=e.buffer;w.HEAP8=l=new Int8Array(a);w.HEAP16=new Int16Array(a);w.HEAP32=ca=new Int32Array(a);w.HEAPU8=ba=new Uint8Array(a);w.HEAPU16=new Uint16Array(a);w.HEAPU32=da=new Uint32Array(a);w.HEAPF32=new Float32Array(a);w.HEAPF64=fa=new Float64Array(a)}var O=w.INITIAL_MEMORY||16777216;5242880<=O||K(\"INITIAL_MEMORY should be larger than STACK_SIZE, was \"+O+\"! (STACK_SIZE=5242880)\");\nif(D)e=w.wasmMemory;else if(w.wasmMemory)e=w.wasmMemory;else if(e=new WebAssembly.Memory({initial:O/65536,maximum:65536,shared:!0}),!(e.buffer instanceof SharedArrayBuffer))throw I(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),C&&I(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)\"),\nError(\"bad memory\");m();O=e.buffer.byteLength;var P,sa=[],ta=[],ua=[],va=0;function Q(){return noExitRuntime||0<va}var R=0,wa=null,S=null;function xa(){R++;w.monitorRunDependencies&&w.monitorRunDependencies(R)}function ya(){R--;w.monitorRunDependencies&&w.monitorRunDependencies(R);if(0==R&&(null!==wa&&(clearInterval(wa),wa=null),S)){var a=S;S=null;a()}}\nfunction K(a){if(w.onAbort)w.onAbort(a);a=\"Aborted(\"+a+\")\";I(a);M=!0;N=1;a=new WebAssembly.RuntimeError(a+\". Build with -sASSERTIONS for more info.\");x(a);throw a;}function za(a){return a.startsWith(\"data:application/octet-stream;base64,\")}var T;T=\"ort-wasm-threaded.wasm\";za(T)||(T=la(T));function Aa(a){if(a==T&&J)return new Uint8Array(J);if(G)return G(a);throw\"both async and sync fetching of the wasm failed\";}\nfunction Ba(a){if(!J&&(ka||A)){if(\"function\"==typeof fetch&&!a.startsWith(\"file://\"))return fetch(a,{credentials:\"same-origin\"}).then(b=>{if(!b.ok)throw\"failed to load wasm binary file at '\"+a+\"'\";return b.arrayBuffer()}).catch(()=>Aa(a));if(F)return new Promise((b,c)=>{F(a,d=>b(new Uint8Array(d)),c)})}return Promise.resolve().then(()=>Aa(a))}function Ca(a,b,c){return Ba(a).then(d=>WebAssembly.instantiate(d,b)).then(d=>d).then(c,d=>{I(\"failed to asynchronously prepare wasm: \"+d);K(d)})}\nfunction Da(a,b){var c=T;return J||\"function\"!=typeof WebAssembly.instantiateStreaming||za(c)||c.startsWith(\"file://\")||C||\"function\"!=typeof fetch?Ca(c,a,b):fetch(c,{credentials:\"same-origin\"}).then(d=>WebAssembly.instantiateStreaming(d,a).then(b,function(g){I(\"wasm streaming compile failed: \"+g);I(\"falling back to ArrayBuffer instantiation\");return Ca(c,a,b)}))}var U;function Ea(a){this.name=\"ExitStatus\";this.message=`Program terminated with exit(${a})`;this.status=a}\nfunction Fa(a){a.terminate();a.onmessage=()=>{}}function Ga(a){(a=V.Ma[a])||K();V.mb(a)}function Ha(a){var b=V.gb();if(!b)return 6;V.Pa.push(b);V.Ma[a.Oa]=b;b.Oa=a.Oa;var c={cmd:\"run\",start_routine:a.nb,arg:a.fb,pthread_ptr:a.Oa};C&&b.unref();b.postMessage(c,a.tb);return 0}\nvar Ia=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0,Ja=(a,b,c)=>{b>>>=0;var d=b+c;for(c=b;a[c]&&!(c>=d);)++c;if(16<c-b&&a.buffer&&Ia)return Ia.decode(a.buffer instanceof SharedArrayBuffer?a.slice(b,c):a.subarray(b,c));for(d=\"\";b<c;){var g=a[b++];if(g&128){var h=a[b++]&63;if(192==(g&224))d+=String.fromCharCode((g&31)<<6|h);else{var k=a[b++]&63;g=224==(g&240)?(g&15)<<12|h<<6|k:(g&7)<<18|h<<12|k<<6|a[b++]&63;65536>g?d+=String.fromCharCode(g):(g-=65536,d+=String.fromCharCode(55296|g>>\n10,56320|g&1023))}}else d+=String.fromCharCode(g)}return d},Ka=(a,b)=>(a>>>=0)?Ja(n(),a,b):\"\";function La(a){if(D)return W(1,1,a);N=a;if(!Q()){V.ob();if(w.onExit)w.onExit(a);M=!0}z(a,new Ea(a))}\nvar Na=a=>{N=a;if(D)throw Ma(a),\"unwind\";La(a)},V={Sa:[],Pa:[],$a:[],Ma:{},Wa:function(){D?V.ib():V.hb()},hb:function(){sa.unshift(()=>{xa();V.jb(()=>ya())})},ib:function(){V.receiveObjectTransfer=V.lb;V.threadInitTLS=V.Za;V.setExitStatus=V.Ya;noExitRuntime=!1},Ya:function(a){N=a},yb:[\"$terminateWorker\"],ob:function(){for(var a of V.Pa)Fa(a);for(a of V.Sa)Fa(a);V.Sa=[];V.Pa=[];V.Ma=[]},mb:function(a){var b=a.Oa;delete V.Ma[b];V.Sa.push(a);V.Pa.splice(V.Pa.indexOf(a),1);a.Oa=0;Oa(b)},lb:function(){},\nZa:function(){V.$a.forEach(a=>a())},kb:a=>new Promise(b=>{a.onmessage=h=>{h=h.data;var k=h.cmd;if(h.targetThread&&h.targetThread!=Pa()){var q=V.Ma[h.xb];q?q.postMessage(h,h.transferList):I('Internal error! Worker sent a message \"'+k+'\" to target pthread '+h.targetThread+\", but that thread no longer exists!\")}else if(\"checkMailbox\"===k)Qa();else if(\"spawnThread\"===k)Ha(h);else if(\"cleanupThread\"===k)Ga(h.thread);else if(\"killThread\"===k)h=h.thread,k=V.Ma[h],delete V.Ma[h],Fa(k),Oa(h),V.Pa.splice(V.Pa.indexOf(k),\n1),k.Oa=0;else if(\"cancelThread\"===k)V.Ma[h.thread].postMessage({cmd:\"cancel\"});else if(\"loaded\"===k)a.loaded=!0,b(a);else if(\"alert\"===k)alert(\"Thread \"+h.threadId+\": \"+h.text);else if(\"setimmediate\"===h.target)a.postMessage(h);else if(\"callHandler\"===k)w[h.handler](...h.args);else k&&I(\"worker sent an unknown command \"+k)};a.onerror=h=>{I(\"worker sent an error! \"+h.filename+\":\"+h.lineno+\": \"+h.message);throw h;};C&&(a.on(\"message\",function(h){a.onmessage({data:h})}),a.on(\"error\",function(h){a.onerror(h)}));\nvar c=[],d=[\"onExit\",\"onAbort\",\"print\",\"printErr\"],g;for(g of d)w.hasOwnProperty(g)&&c.push(g);a.postMessage({cmd:\"load\",handlers:c,urlOrBlob:w.mainScriptUrlOrBlob||_scriptDir,wasmMemory:e,wasmModule:ra})}),jb:function(a){a()},eb:function(){var a=la(\"ort-wasm-threaded.worker.js\");a=new Worker(a);V.Sa.push(a)},gb:function(){0==V.Sa.length&&(V.eb(),V.kb(V.Sa[0]));return V.Sa.pop()}};w.PThread=V;var Ra=a=>{for(;0<a.length;)a.shift()(w)};\nw.establishStackSpace=function(){var a=Pa(),b=p()[a+52>>2>>>0];a=p()[a+56>>2>>>0];Sa(b,b-a);Ta(b)};function Ma(a){if(D)return W(2,0,a);Na(a)}var X=[],Ua=a=>{var b=X[a];b||(a>=X.length&&(X.length=a+1),X[a]=b=P.get(a));return b};w.invokeEntryPoint=function(a,b){a=Ua(a)(b);Q()?V.Ya(a):Va(a)};\nfunction Wa(a){this.Va=a-24;this.cb=function(b){t()[this.Va+4>>2>>>0]=b};this.bb=function(b){t()[this.Va+8>>2>>>0]=b};this.Wa=function(b,c){this.ab();this.cb(b);this.bb(c)};this.ab=function(){t()[this.Va+16>>2>>>0]=0}}var Xa=0,Ya=0;function Za(a,b,c,d){return D?W(3,1,a,b,c,d):$a(a,b,c,d)}\nfunction $a(a,b,c,d){a>>>=0;b>>>=0;c>>>=0;d>>>=0;if(\"undefined\"==typeof SharedArrayBuffer)return I(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;var g=[];if(D&&0===g.length)return Za(a,b,c,d);a={nb:c,Oa:a,fb:d,tb:g};return D?(a.vb=\"spawnThread\",postMessage(a,g),0):Ha(a)}function ab(a,b,c){return D?W(4,1,a,b,c):0}function bb(a,b){if(D)return W(5,1,a,b)}\nvar cb=a=>{for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);127>=d?b++:2047>=d?b+=2:55296<=d&&57343>=d?(b+=4,++c):b+=3}return b},db=(a,b,c,d)=>{c>>>=0;if(!(0<d))return 0;var g=c;d=c+d-1;for(var h=0;h<a.length;++h){var k=a.charCodeAt(h);if(55296<=k&&57343>=k){var q=a.charCodeAt(++h);k=65536+((k&1023)<<10)|q&1023}if(127>=k){if(c>=d)break;b[c++>>>0]=k}else{if(2047>=k){if(c+1>=d)break;b[c++>>>0]=192|k>>6}else{if(65535>=k){if(c+2>=d)break;b[c++>>>0]=224|k>>12}else{if(c+3>=d)break;b[c++>>>0]=240|k>>\n18;b[c++>>>0]=128|k>>12&63}b[c++>>>0]=128|k>>6&63}b[c++>>>0]=128|k&63}}b[c>>>0]=0;return c-g},eb=(a,b,c)=>db(a,n(),b,c);function fb(a,b){if(D)return W(6,1,a,b)}function gb(a,b,c){if(D)return W(7,1,a,b,c)}function hb(a,b,c){return D?W(8,1,a,b,c):0}function ib(a,b){if(D)return W(9,1,a,b)}function jb(a,b,c){if(D)return W(10,1,a,b,c)}function kb(a,b,c,d){if(D)return W(11,1,a,b,c,d)}function lb(a,b,c,d){if(D)return W(12,1,a,b,c,d)}function mb(a,b,c,d){if(D)return W(13,1,a,b,c,d)}\nfunction nb(a){if(D)return W(14,1,a)}function ob(a,b){if(D)return W(15,1,a,b)}function pb(a,b,c){if(D)return W(16,1,a,b,c)}var qb=a=>{if(!M)try{if(a(),!Q())try{D?Va(N):Na(N)}catch(b){b instanceof Ea||\"unwind\"==b||z(1,b)}}catch(b){b instanceof Ea||\"unwind\"==b||z(1,b)}};function rb(a){a>>>=0;\"function\"===typeof Atomics.ub&&(Atomics.ub(p(),a>>2,a).value.then(Qa),a+=128,Atomics.store(p(),a>>2,1))}w.__emscripten_thread_mailbox_await=rb;function Qa(){var a=Pa();a&&(rb(a),qb(()=>sb()))}w.checkMailbox=Qa;\nvar Y=a=>0===a%4&&(0!==a%100||0===a%400),tb=[0,31,60,91,121,152,182,213,244,274,305,335],ub=[0,31,59,90,120,151,181,212,243,273,304,334];function vb(a,b,c,d,g,h,k,q){return D?W(17,1,a,b,c,d,g,h,k,q):-52}function wb(a,b,c,d,g,h,k){if(D)return W(18,1,a,b,c,d,g,h,k)}var yb=a=>{var b=cb(a)+1,c=xb(b);c&&eb(a,c,b);return c},Ab=a=>{var b=zb();a=a();Ta(b);return a};\nfunction W(a,b){var c=arguments.length-2,d=arguments;return Ab(()=>{for(var g=Bb(8*c),h=g>>3,k=0;k<c;k++){var q=d[2+k];ea()[h+k>>>0]=q}return Cb(a,c,g,b)})}\nvar Db=[],Eb={},Gb=()=>{if(!Fb){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:ja||\"./this.program\"},b;for(b in Eb)void 0===Eb[b]?delete a[b]:a[b]=Eb[b];var c=[];for(b in a)c.push(`${b}=${a[b]}`);Fb=c}return Fb},Fb;\nfunction Hb(a,b){if(D)return W(19,1,a,b);a>>>=0;b>>>=0;var c=0;Gb().forEach(function(d,g){var h=b+c;g=t()[a+4*g>>2>>>0]=h;for(h=0;h<d.length;++h)aa()[g++>>0>>>0]=d.charCodeAt(h);aa()[g>>0>>>0]=0;c+=d.length+1});return 0}function Ib(a,b){if(D)return W(20,1,a,b);a>>>=0;b>>>=0;var c=Gb();t()[a>>2>>>0]=c.length;var d=0;c.forEach(function(g){d+=g.length+1});t()[b>>2>>>0]=d;return 0}function Jb(a){return D?W(21,1,a):52}function Nb(a,b,c,d){return D?W(22,1,a,b,c,d):52}\nfunction Ob(a,b,c,d,g){return D?W(23,1,a,b,c,d,g):70}var Pb=[null,[],[]];function Qb(a,b,c,d){if(D)return W(24,1,a,b,c,d);b>>>=0;c>>>=0;d>>>=0;for(var g=0,h=0;h<c;h++){var k=t()[b>>2>>>0],q=t()[b+4>>2>>>0];b+=8;for(var B=0;B<q;B++){var v=n()[k+B>>>0],y=Pb[a];0===v||10===v?((1===a?qa:I)(Ja(y,0)),y.length=0):y.push(v)}g+=q}t()[d>>2>>>0]=g;return 0}var Rb=[31,29,31,30,31,30,31,31,30,31,30,31],Sb=[31,28,31,30,31,30,31,31,30,31,30,31];function Tb(a){var b=Array(cb(a)+1);db(a,b,0,b.length);return b}\nvar Ub=(a,b)=>{aa().set(a,b>>>0)};\nfunction Vb(a,b,c,d){function g(f,r,u){for(f=\"number\"==typeof f?f.toString():f||\"\";f.length<r;)f=u[0]+f;return f}function h(f,r){return g(f,r,\"0\")}function k(f,r){function u(Kb){return 0>Kb?-1:0<Kb?1:0}var H;0===(H=u(f.getFullYear()-r.getFullYear()))&&0===(H=u(f.getMonth()-r.getMonth()))&&(H=u(f.getDate()-r.getDate()));return H}function q(f){switch(f.getDay()){case 0:return new Date(f.getFullYear()-1,11,29);case 1:return f;case 2:return new Date(f.getFullYear(),0,3);case 3:return new Date(f.getFullYear(),\n0,2);case 4:return new Date(f.getFullYear(),0,1);case 5:return new Date(f.getFullYear()-1,11,31);case 6:return new Date(f.getFullYear()-1,11,30)}}function B(f){var r=f.Qa;for(f=new Date((new Date(f.Ra+1900,0,1)).getTime());0<r;){var u=f.getMonth(),H=(Y(f.getFullYear())?Rb:Sb)[u];if(r>H-f.getDate())r-=H-f.getDate()+1,f.setDate(1),11>u?f.setMonth(u+1):(f.setMonth(0),f.setFullYear(f.getFullYear()+1));else{f.setDate(f.getDate()+r);break}}u=new Date(f.getFullYear()+1,0,4);r=q(new Date(f.getFullYear(),\n0,4));u=q(u);return 0>=k(r,f)?0>=k(u,f)?f.getFullYear()+1:f.getFullYear():f.getFullYear()-1}a>>>=0;b>>>=0;c>>>=0;d>>>=0;var v=p()[d+40>>2>>>0];d={rb:p()[d>>2>>>0],qb:p()[d+4>>2>>>0],Ta:p()[d+8>>2>>>0],Xa:p()[d+12>>2>>>0],Ua:p()[d+16>>2>>>0],Ra:p()[d+20>>2>>>0],Na:p()[d+24>>2>>>0],Qa:p()[d+28>>2>>>0],zb:p()[d+32>>2>>>0],pb:p()[d+36>>2>>>0],sb:v?Ka(v):\"\"};c=Ka(c);v={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\n\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var y in v)c=c.replace(new RegExp(y,\"g\"),v[y]);var Lb=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),Mb=\"January February March April May June July August September October November December\".split(\" \");v={\"%a\":f=>Lb[f.Na].substring(0,3),\n\"%A\":f=>Lb[f.Na],\"%b\":f=>Mb[f.Ua].substring(0,3),\"%B\":f=>Mb[f.Ua],\"%C\":f=>h((f.Ra+1900)/100|0,2),\"%d\":f=>h(f.Xa,2),\"%e\":f=>g(f.Xa,2,\" \"),\"%g\":f=>B(f).toString().substring(2),\"%G\":f=>B(f),\"%H\":f=>h(f.Ta,2),\"%I\":f=>{f=f.Ta;0==f?f=12:12<f&&(f-=12);return h(f,2)},\"%j\":f=>{for(var r=0,u=0;u<=f.Ua-1;r+=(Y(f.Ra+1900)?Rb:Sb)[u++]);return h(f.Xa+r,3)},\"%m\":f=>h(f.Ua+1,2),\"%M\":f=>h(f.qb,2),\"%n\":()=>\"\\n\",\"%p\":f=>0<=f.Ta&&12>f.Ta?\"AM\":\"PM\",\"%S\":f=>h(f.rb,2),\"%t\":()=>\"\\t\",\"%u\":f=>f.Na||7,\"%U\":f=>h(Math.floor((f.Qa+\n7-f.Na)/7),2),\"%V\":f=>{var r=Math.floor((f.Qa+7-(f.Na+6)%7)/7);2>=(f.Na+371-f.Qa-2)%7&&r++;if(r)53==r&&(u=(f.Na+371-f.Qa)%7,4==u||3==u&&Y(f.Ra)||(r=1));else{r=52;var u=(f.Na+7-f.Qa-1)%7;(4==u||5==u&&Y(f.Ra%400-1))&&r++}return h(r,2)},\"%w\":f=>f.Na,\"%W\":f=>h(Math.floor((f.Qa+7-(f.Na+6)%7)/7),2),\"%y\":f=>(f.Ra+1900).toString().substring(2),\"%Y\":f=>f.Ra+1900,\"%z\":f=>{f=f.pb;var r=0<=f;f=Math.abs(f)/60;return(r?\"+\":\"-\")+String(\"0000\"+(f/60*100+f%60)).slice(-4)},\"%Z\":f=>f.sb,\"%%\":()=>\"%\"};c=c.replace(/%%/g,\n\"\\x00\\x00\");for(y in v)c.includes(y)&&(c=c.replace(new RegExp(y,\"g\"),v[y](d)));c=c.replace(/\\0\\0/g,\"%\");y=Tb(c);if(y.length>b)return 0;Ub(y,a);return y.length-1}var Z=void 0,Wb=[];\nfunction Xb(a,b){if(!Z){Z=new WeakMap;var c=P.length;if(Z)for(var d=0;d<0+c;d++){var g=Ua(d);g&&Z.set(g,d)}}if(c=Z.get(a)||0)return c;if(Wb.length)c=Wb.pop();else{try{P.grow(1)}catch(q){if(!(q instanceof RangeError))throw q;throw\"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\";}c=P.length-1}try{d=c,P.set(d,a),X[d]=P.get(d)}catch(q){if(!(q instanceof TypeError))throw q;if(\"function\"==typeof WebAssembly.Function){d=WebAssembly.Function;g={i:\"i32\",j:\"i64\",f:\"f32\",d:\"f64\",p:\"i32\"};for(var h={parameters:[],\nresults:\"v\"==b[0]?[]:[g[b[0]]]},k=1;k<b.length;++k)h.parameters.push(g[b[k]]);b=new d(h,a)}else{d=[1];g=b.slice(0,1);b=b.slice(1);h={i:127,p:127,j:126,f:125,d:124};d.push(96);k=b.length;128>k?d.push(k):d.push(k%128|128,k>>7);for(k=0;k<b.length;++k)d.push(h[b[k]]);\"v\"==g?d.push(0):d.push(1,h[g]);b=[0,97,115,109,1,0,0,0,1];g=d.length;128>g?b.push(g):b.push(g%128|128,g>>7);b.push.apply(b,d);b.push(2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0);b=new WebAssembly.Module(new Uint8Array(b));b=(new WebAssembly.Instance(b,\n{e:{f:a}})).exports.f}d=c;P.set(d,b);X[d]=P.get(d)}Z.set(a,c);return c}V.Wa();\nvar Yb=[null,La,Ma,Za,ab,bb,fb,gb,hb,ib,jb,kb,lb,mb,nb,ob,pb,vb,wb,Hb,Ib,Jb,Nb,Ob,Qb],ac={b:function(a,b,c){a>>>=0;(new Wa(a)).Wa(b>>>0,c>>>0);Xa=a;Ya++;throw Xa;},N:function(a){Zb(a>>>0,!A,1,!ka,131072,!1);V.Za()},k:function(a){a>>>=0;D?postMessage({cmd:\"cleanupThread\",thread:a}):Ga(a)},I:$a,h:ab,T:bb,D:fb,F:gb,U:hb,R:ib,J:jb,Q:kb,o:lb,E:mb,B:nb,S:ob,C:pb,q:()=>!0,z:function(a,b){a>>>=0;a==b>>>0?setTimeout(()=>Qa()):D?postMessage({targetThread:a,cmd:\"checkMailbox\"}):(a=V.Ma[a])&&a.postMessage({cmd:\"checkMailbox\"})},\nL:function(){return-1},M:rb,p:function(a){C&&V.Ma[a>>>0].ref()},t:function(a,b,c){a=b+2097152>>>0<4194305-!!a?(a>>>0)+4294967296*b:NaN;c>>>=0;a=new Date(1E3*a);p()[c>>2>>>0]=a.getUTCSeconds();p()[c+4>>2>>>0]=a.getUTCMinutes();p()[c+8>>2>>>0]=a.getUTCHours();p()[c+12>>2>>>0]=a.getUTCDate();p()[c+16>>2>>>0]=a.getUTCMonth();p()[c+20>>2>>>0]=a.getUTCFullYear()-1900;p()[c+24>>2>>>0]=a.getUTCDay();a=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0;p()[c+28>>2>>>0]=a},u:function(a,b,c){a=b+\n2097152>>>0<4194305-!!a?(a>>>0)+4294967296*b:NaN;c>>>=0;a=new Date(1E3*a);p()[c>>2>>>0]=a.getSeconds();p()[c+4>>2>>>0]=a.getMinutes();p()[c+8>>2>>>0]=a.getHours();p()[c+12>>2>>>0]=a.getDate();p()[c+16>>2>>>0]=a.getMonth();p()[c+20>>2>>>0]=a.getFullYear()-1900;p()[c+24>>2>>>0]=a.getDay();b=(Y(a.getFullYear())?tb:ub)[a.getMonth()]+a.getDate()-1|0;p()[c+28>>2>>>0]=b;p()[c+36>>2>>>0]=-(60*a.getTimezoneOffset());b=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();var d=(new Date(a.getFullYear(),0,1)).getTimezoneOffset();\na=(b!=d&&a.getTimezoneOffset()==Math.min(d,b))|0;p()[c+32>>2>>>0]=a},v:function(a){a>>>=0;var b=new Date(p()[a+20>>2>>>0]+1900,p()[a+16>>2>>>0],p()[a+12>>2>>>0],p()[a+8>>2>>>0],p()[a+4>>2>>>0],p()[a>>2>>>0],0),c=p()[a+32>>2>>>0],d=b.getTimezoneOffset(),g=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),h=(new Date(b.getFullYear(),0,1)).getTimezoneOffset(),k=Math.min(h,g);0>c?p()[a+32>>2>>>0]=Number(g!=h&&k==d):0<c!=(k==d)&&(g=Math.max(h,g),b.setTime(b.getTime()+6E4*((0<c?k:g)-d)));p()[a+24>>2>>>\n0]=b.getDay();c=(Y(b.getFullYear())?tb:ub)[b.getMonth()]+b.getDate()-1|0;p()[a+28>>2>>>0]=c;p()[a>>2>>>0]=b.getSeconds();p()[a+4>>2>>>0]=b.getMinutes();p()[a+8>>2>>>0]=b.getHours();p()[a+12>>2>>>0]=b.getDate();p()[a+16>>2>>>0]=b.getMonth();p()[a+20>>2>>>0]=b.getYear();a=b.getTime()/1E3;return $b((U=a,1<=+Math.abs(U)?0<U?+Math.floor(U/4294967296)>>>0:~~+Math.ceil((U-+(~~U>>>0))/4294967296)>>>0:0)),a>>>0},r:vb,s:wb,y:function(a,b,c){function d(v){return(v=v.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?\nv[1]:\"GMT\"}a>>>=0;b>>>=0;c>>>=0;var g=(new Date).getFullYear(),h=new Date(g,0,1),k=new Date(g,6,1);g=h.getTimezoneOffset();var q=k.getTimezoneOffset(),B=Math.max(g,q);t()[a>>2>>>0]=60*B;p()[b>>2>>>0]=Number(g!=q);a=d(h);b=d(k);a=yb(a);b=yb(b);q<g?(t()[c>>2>>>0]=a,t()[c+4>>2>>>0]=b):(t()[c>>2>>>0]=b,t()[c+4>>2>>>0]=a)},c:()=>{K(\"\")},l:function(){},i:function(){return Date.now()},V:()=>{va+=1;throw\"unwind\";},A:function(){return 4294901760},e:()=>performance.timeOrigin+performance.now(),f:function(){return C?\nrequire(\"os\").cpus().length:navigator.hardwareConcurrency},K:function(a,b,c,d){V.wb=b>>>0;Db.length=c;b=d>>>0>>3;for(d=0;d<c;d++)Db[d]=ea()[b+d>>>0];return Yb[a].apply(null,Db)},x:function(a){a>>>=0;var b=n().length;if(a<=b||4294901760<a)return!1;for(var c=1;4>=c;c*=2){var d=b*(1+.2/c);d=Math.min(d,a+100663296);var g=Math;d=Math.max(a,d);a:{g=g.min.call(g,4294901760,d+(65536-d%65536)%65536)-e.buffer.byteLength+65535>>>16;try{e.grow(g);m();var h=1;break a}catch(k){}h=void 0}if(h)return!0}return!1},\nO:Hb,P:Ib,H:Na,g:Jb,n:Nb,w:Ob,m:Qb,a:e||w.wasmMemory,G:Vb,d:function(a,b,c,d){return Vb(a>>>0,b>>>0,c>>>0,d>>>0)},j:function(a,b,c,d){const g=P.length;a=new Uint8Array(n().slice(a+b,a+c));try{var h=new WebAssembly.Module(a),k=new WebAssembly.Instance(h,{env:{memory:e}}),q;for(q in k.exports)Xb(k.exports[q]);return g<P.length?g:d}catch(B){return console.log(B),d}}};\n(function(){function a(c,d){c=c.exports;L=c=bc(c);V.$a.push(L.za);P=L.Aa;ta.unshift(L.W);ra=d;ya();return c}var b={a:ac};xa();if(w.instantiateWasm)try{return w.instantiateWasm(b,a)}catch(c){I(\"Module.instantiateWasm callback failed with error: \"+c),x(c)}Da(b,function(c){a(c.instance,c.module)}).catch(x);return{}})();w._OrtInit=(a,b)=>(w._OrtInit=L.X)(a,b);w._OrtGetLastError=(a,b)=>(w._OrtGetLastError=L.Y)(a,b);\nw._OrtCreateSessionOptions=(a,b,c,d,g,h,k,q,B,v)=>(w._OrtCreateSessionOptions=L.Z)(a,b,c,d,g,h,k,q,B,v);w._OrtAppendExecutionProvider=(a,b)=>(w._OrtAppendExecutionProvider=L._)(a,b);w._OrtAddFreeDimensionOverride=(a,b,c)=>(w._OrtAddFreeDimensionOverride=L.$)(a,b,c);w._OrtAddSessionConfigEntry=(a,b,c)=>(w._OrtAddSessionConfigEntry=L.aa)(a,b,c);w._OrtReleaseSessionOptions=a=>(w._OrtReleaseSessionOptions=L.ba)(a);w._OrtCreateSession=(a,b,c)=>(w._OrtCreateSession=L.ca)(a,b,c);\nw._OrtReleaseSession=a=>(w._OrtReleaseSession=L.da)(a);w._OrtGetInputOutputCount=(a,b,c)=>(w._OrtGetInputOutputCount=L.ea)(a,b,c);w._OrtGetInputName=(a,b)=>(w._OrtGetInputName=L.fa)(a,b);w._OrtGetOutputName=(a,b)=>(w._OrtGetOutputName=L.ga)(a,b);w._OrtFree=a=>(w._OrtFree=L.ha)(a);w._OrtCreateTensor=(a,b,c,d,g,h)=>(w._OrtCreateTensor=L.ia)(a,b,c,d,g,h);w._OrtGetTensorData=(a,b,c,d,g)=>(w._OrtGetTensorData=L.ja)(a,b,c,d,g);w._OrtReleaseTensor=a=>(w._OrtReleaseTensor=L.ka)(a);\nw._OrtCreateRunOptions=(a,b,c,d)=>(w._OrtCreateRunOptions=L.la)(a,b,c,d);w._OrtAddRunConfigEntry=(a,b,c)=>(w._OrtAddRunConfigEntry=L.ma)(a,b,c);w._OrtReleaseRunOptions=a=>(w._OrtReleaseRunOptions=L.na)(a);w._OrtCreateBinding=a=>(w._OrtCreateBinding=L.oa)(a);w._OrtBindInput=(a,b,c)=>(w._OrtBindInput=L.pa)(a,b,c);w._OrtBindOutput=(a,b,c,d)=>(w._OrtBindOutput=L.qa)(a,b,c,d);w._OrtClearBoundOutputs=a=>(w._OrtClearBoundOutputs=L.ra)(a);w._OrtReleaseBinding=a=>(w._OrtReleaseBinding=L.sa)(a);\nw._OrtRunWithBinding=(a,b,c,d,g)=>(w._OrtRunWithBinding=L.ta)(a,b,c,d,g);w._OrtRun=(a,b,c,d,g,h,k,q)=>(w._OrtRun=L.ua)(a,b,c,d,g,h,k,q);w._OrtEndProfiling=a=>(w._OrtEndProfiling=L.va)(a);var Pa=w._pthread_self=()=>(Pa=w._pthread_self=L.wa)(),xb=w._malloc=a=>(xb=w._malloc=L.xa)(a);w._free=a=>(w._free=L.ya)(a);w.__emscripten_tls_init=()=>(w.__emscripten_tls_init=L.za)();var Zb=w.__emscripten_thread_init=(a,b,c,d,g,h)=>(Zb=w.__emscripten_thread_init=L.Ba)(a,b,c,d,g,h);\nw.__emscripten_thread_crashed=()=>(w.__emscripten_thread_crashed=L.Ca)();var Cb=(a,b,c,d)=>(Cb=L.Da)(a,b,c,d),Oa=a=>(Oa=L.Ea)(a),Va=w.__emscripten_thread_exit=a=>(Va=w.__emscripten_thread_exit=L.Fa)(a),sb=w.__emscripten_check_mailbox=()=>(sb=w.__emscripten_check_mailbox=L.Ga)(),$b=a=>($b=L.Ha)(a),Sa=(a,b)=>(Sa=L.Ia)(a,b),zb=()=>(zb=L.Ja)(),Ta=a=>(Ta=L.Ka)(a),Bb=a=>(Bb=L.La)(a);w.___start_em_js=906844;w.___stop_em_js=907456;\nfunction bc(a){a=Object.assign({},a);var b=d=>()=>d()>>>0,c=d=>g=>d(g)>>>0;a.__errno_location=b(a.__errno_location);a.pthread_self=b(a.pthread_self);a.malloc=c(a.malloc);a.stackSave=b(a.stackSave);a.stackAlloc=c(a.stackAlloc);return a}w.keepRuntimeAlive=Q;w.wasmMemory=e;w.stackAlloc=Bb;w.stackSave=zb;w.stackRestore=Ta;w.addFunction=Xb;w.UTF8ToString=Ka;w.stringToUTF8=eb;w.lengthBytesUTF8=cb;w.ExitStatus=Ea;w.PThread=V;var cc;S=function dc(){cc||ec();cc||(S=dc)};\nfunction ec(){function a(){if(!cc&&(cc=!0,w.calledRun=!0,!M)){D||Ra(ta);ha(w);if(w.onRuntimeInitialized)w.onRuntimeInitialized();if(!D){if(w.postRun)for(\"function\"==typeof w.postRun&&(w.postRun=[w.postRun]);w.postRun.length;){var b=w.postRun.shift();ua.unshift(b)}Ra(ua)}}}if(!(0<R))if(D)ha(w),D||Ra(ta),startWorker(w);else{if(w.preRun)for(\"function\"==typeof w.preRun&&(w.preRun=[w.preRun]);w.preRun.length;)sa.unshift(w.preRun.shift());Ra(sa);0<R||(w.setStatus?(w.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){w.setStatus(\"\")},\n1);a()},1)):a())}}if(w.preInit)for(\"function\"==typeof w.preInit&&(w.preInit=[w.preInit]);0<w.preInit.length;)w.preInit.pop()();ec();\n\n\n  return moduleArg.ready\n}\n\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasmThreaded;\nelse if (typeof define === 'function' && define['amd'])\n  define([], () => ortWasmThreaded);\n",
    "\"use strict\";var Module={},ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require(\"worker_threads\"),parentPort=nodeWorkerThreads.parentPort;parentPort.on(\"message\",e=>onmessage({data:e}));var fs=require(\"fs\");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>(0,eval)(fs.readFileSync(e,\"utf8\")+\"//# sourceURL=\"+e),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(\" \");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(\" \");postMessage({cmd:\"alert\",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason??e};function handleMessage(e){try{if(e.data.cmd===\"load\"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:\"loaded\"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:\"callHandler\",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob==\"string\")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd===\"run\"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!=\"unwind\")throw a}}else e.data.cmd===\"cancel\"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target===\"setimmediate\"||(e.data.cmd===\"checkMailbox\"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(\"worker.js received unknown command \"+e.data.cmd),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed&&Module.__emscripten_thread_crashed(),a}}self.onmessage=handleMessage;\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as path from 'node:path';\nimport {Env} from 'onnxruntime-common';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\n\n/* eslint-disable @typescript-eslint/no-require-imports */\nlet ortWasmFactory: EmscriptenModuleFactory<OrtWasmModule>;\n\nif (!BUILD_DEFS.DISABLE_TRAINING) {\n  ortWasmFactory = require('./binding/ort-training-wasm-simd.js');\n} else {\n  ortWasmFactory =\n      BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm.js') : require('./binding/ort-wasm-simd.jsep.js');\n}\n\nconst ortWasmFactoryThreaded: EmscriptenModuleFactory<OrtWasmModule> = !BUILD_DEFS.DISABLE_WASM_THREAD ?\n    (BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm-threaded.js') :\n                                 require('./binding/ort-wasm-simd-threaded.jsep.js')) :\n    ortWasmFactory;\n/* eslint-enable @typescript-eslint/no-require-imports */\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n\n    // The binary data is generated from the following code by wat2wasm:\n    //\n    // (module\n    //   (type $t0 (func))\n    //   (func $f0 (type $t0)\n    //     (drop\n    //       (i32x4.dot_i16x8_s\n    //         (i8x16.splat\n    //           (i32.const 0))\n    //         (v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)))))\n\n    return WebAssembly.validate(new Uint8Array([\n      0,   97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 30, 1,   28,  0, 65, 0,\n      253, 15, 253, 12,  0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0,  0,  253, 186, 1, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useSimd) {\n    if (!BUILD_DEFS.DISABLE_TRAINING) {\n      return 'ort-training-wasm-simd.wasm';\n    }\n    return useThreads ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-simd.wasm';\n  } else {\n    return useThreads ? 'ort-wasm-threaded.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPaths = flags.wasmPaths;\n  const wasmPrefixOverride = typeof wasmPaths === 'string' ? wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof wasmPaths === 'object' ? wasmPaths[wasmFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads && fileName.endsWith('.worker.js') &&\n            typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by esbuild plugin to load file content as string.\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName.endsWith('.wasm')) {\n          if (wasmPathOverride) {\n            return wasmPathOverride;\n          }\n\n          const prefix = wasmPrefixOverride ?? scriptDirectory;\n\n          if (!BUILD_DEFS.DISABLE_WEBGPU) {\n            if (wasmFileName === 'ort-wasm-simd.wasm') {\n              return prefix + 'ort-wasm-simd.jsep.wasm';\n            } else if (wasmFileName === 'ort-wasm-simd-threaded.wasm') {\n              return prefix + 'ort-wasm-simd-threaded.jsep.wasm';\n            }\n          }\n\n          return prefix + wasmFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode = `var ortWasmThreaded=${factory.toString()};`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n\n/**\n * check web assembly API's last error and throw error if any error occurred.\n * @param message a message used when an error occurred.\n */\nexport const checkLastError = (message: string): void => {\n  const wasm = getInstance();\n\n  const stack = wasm.stackSave();\n  try {\n    const paramsOffset = wasm.stackAlloc(8);\n    wasm._OrtGetLastError(paramsOffset, paramsOffset + 4);\n    const errorCode = wasm.HEAP32[paramsOffset / 4];\n    const errorMessagePointer = wasm.HEAPU32[paramsOffset / 4 + 1];\n    const errorMessage = errorMessagePointer ? wasm.UTF8ToString(errorMessagePointer) : '';\n    throw new Error(`${message} ERROR_CODE: ${errorCode}, ERROR_MESSAGE: ${errorMessage}`);\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError, iterateExtraOptions} from './wasm-utils';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      checkLastError('Can\\'t create run options.');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          checkLastError(`Can't set a run config entry: ${key} - ${value}.`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(alloc => wasm._free(alloc));\n    throw e;\n  }\n};\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError, iterateExtraOptions} from './wasm-utils';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n\n  // if using JSEP with WebGPU, always disable memory pattern\n  if (options.executionProviders &&\n      options.executionProviders.some(ep => (typeof ep === 'string' ? ep : ep.name) === 'webgpu')) {\n    options.enableMemPattern = false;\n  }\n};\n\nconst setExecutionProviders =\n    (sessionOptionsHandle: number, executionProviders: readonly InferenceSession.ExecutionProviderConfig[],\n     allocs: number[]): void => {\n      for (const ep of executionProviders) {\n        let epName = typeof ep === 'string' ? ep : ep.name;\n\n        // check EP name\n        switch (epName) {\n          case 'xnnpack':\n            epName = 'XNNPACK';\n            break;\n          case 'webnn':\n            epName = 'WEBNN';\n            if (typeof ep !== 'string') {\n              const webnnOptions = ep as InferenceSession.WebNNExecutionProviderOption;\n              if (webnnOptions?.deviceType) {\n                const keyDataOffset = allocWasmString('deviceType', allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.deviceType, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(`Can't set a session config entry: 'deviceType' - ${webnnOptions.deviceType}.`);\n                }\n              }\n              if (webnnOptions?.numThreads) {\n                let numThreads = webnnOptions.numThreads;\n                // Just ignore invalid webnnOptions.numThreads.\n                if (typeof numThreads != 'number' || !Number.isInteger(numThreads) || numThreads < 0) {\n                  numThreads = 0;\n                }\n                const keyDataOffset = allocWasmString('numThreads', allocs);\n                const valueDataOffset = allocWasmString(numThreads.toString(), allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(`Can't set a session config entry: 'numThreads' - ${webnnOptions.numThreads}.`);\n                }\n              }\n              if (webnnOptions?.powerPreference) {\n                const keyDataOffset = allocWasmString('powerPreference', allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.powerPreference, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(\n                      `Can't set a session config entry: 'powerPreference' - ${webnnOptions.powerPreference}.`);\n                }\n              }\n            }\n            break;\n          case 'webgpu':\n            epName = 'JS';\n            if (typeof ep !== 'string') {\n              const webgpuOptions = ep as InferenceSession.WebGpuExecutionProviderOption;\n              if (webgpuOptions?.preferredLayout) {\n                if (webgpuOptions.preferredLayout !== 'NCHW' && webgpuOptions.preferredLayout !== 'NHWC') {\n                  throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${webgpuOptions.preferredLayout}`);\n                }\n                const keyDataOffset = allocWasmString('preferredLayout', allocs);\n                const valueDataOffset = allocWasmString(webgpuOptions.preferredLayout, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(\n                      `Can't set a session config entry: 'preferredLayout' - ${webgpuOptions.preferredLayout}.`);\n                }\n              }\n            }\n            break;\n          case 'wasm':\n          case 'cpu':\n            continue;\n          default:\n            throw new Error(`not supported execution provider: ${epName}`);\n        }\n\n        const epNameDataOffset = allocWasmString(epName, allocs);\n        if (getInstance()._OrtAppendExecutionProvider(sessionOptionsHandle, epNameDataOffset) !== 0) {\n          checkLastError(`Can't append execution provider: ${epName}.`);\n        }\n      }\n    };\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel ?? 'all');\n    const executionMode = getExecutionMode(sessionOptions.executionMode ?? 'sequential');\n    const logIdDataOffset =\n        typeof sessionOptions.logId === 'string' ? allocWasmString(sessionOptions.logId, allocs) : 0;\n\n    const logSeverityLevel = sessionOptions.logSeverityLevel ?? 2;  // Default to 2 - warning\n    if (!Number.isInteger(logSeverityLevel) || logSeverityLevel < 0 || logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${logSeverityLevel}`);\n    }\n\n    const logVerbosityLevel = sessionOptions.logVerbosityLevel ?? 0;  // Default to 0 - verbose\n    if (!Number.isInteger(logVerbosityLevel) || logVerbosityLevel < 0 || logVerbosityLevel > 4) {\n      throw new Error(`log verbosity level is not valid: ${logVerbosityLevel}`);\n    }\n\n    const optimizedModelFilePathOffset = typeof sessionOptions.optimizedModelFilePath === 'string' ?\n        allocWasmString(sessionOptions.optimizedModelFilePath, allocs) :\n        0;\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena, !!sessionOptions.enableMemPattern, executionMode,\n        !!sessionOptions.enableProfiling, 0, logIdDataOffset, logSeverityLevel, logVerbosityLevel,\n        optimizedModelFilePathOffset);\n    if (sessionOptionsHandle === 0) {\n      checkLastError('Can\\'t create session options.');\n    }\n\n    if (sessionOptions.executionProviders) {\n      setExecutionProviders(sessionOptionsHandle, sessionOptions.executionProviders, allocs);\n    }\n\n    if (sessionOptions.freeDimensionOverrides) {\n      for (const [name, value] of Object.entries(sessionOptions.freeDimensionOverrides)) {\n        if (typeof name !== 'string') {\n          throw new Error(`free dimension override name must be a string: ${name}`);\n        }\n        if (typeof value !== 'number' || !Number.isInteger(value) || value < 0) {\n          throw new Error(`free dimension override value must be a non-negative integer: ${value}`);\n        }\n        const nameOffset = allocWasmString(name, allocs);\n        if (wasm._OrtAddFreeDimensionOverride(sessionOptionsHandle, nameOffset, value) !== 0) {\n          checkLastError(`Can't set a free dimension override: ${name} - ${value}.`);\n        }\n      }\n    }\n\n    if (sessionOptions.extra !== undefined) {\n      iterateExtraOptions(sessionOptions.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          checkLastError(`Can't set a session config entry: ${key} - ${value}.`);\n        }\n      });\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(alloc => wasm._free(alloc));\n    throw e;\n  }\n};\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from 'onnxruntime-common';\n\n// This file includes common definitions. They do NOT have dependency on the WebAssembly instance.\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nexport const enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n/**\n * Map string tensor data to enum value\n */\nexport const tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float16':\n      return DataType.float16;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\n/**\n * Map enum value to string tensor data\n */\nexport const tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float16:\n      return 'float16';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int64';\n    case DataType.uint64:\n      return 'uint64';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\n/**\n * get tensor element size in bytes by the given data type\n * @returns size in integer or undefined if the data type is not supported\n */\nexport const getTensorElementSize = (dateType: number): number|\n    undefined => [undefined, 4, 1, 1, 2, 2, 4, 8, undefined, 1, 2, 8, 4, 8, undefined, undefined, undefined][dateType];\n\n/**\n * get typed array constructor by the given tensor type\n */\nexport const tensorTypeToTypedArrayConstructor = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float16':\n          return Uint16Array;\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * Map string log level to integer value\n */\nexport const logLevelStringToEnum = (logLevel?: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n\n/**\n * Check whether the given tensor type is supported by GPU buffer\n */\nexport const isGpuBufferSupportedType = (type: Tensor.Type): type is Tensor.GpuBufferDataTypes => type === 'float32' ||\n    type === 'int32' || type === 'int64' || type === 'bool' || type === 'float16' || type === 'uint32';\n\n/**\n * Map string data location to integer value\n */\nexport const dataLocationStringToEnum = (location: Tensor.DataLocation): number => {\n  switch (location) {\n    case 'none':\n      return 0;\n    case 'cpu':\n      return 1;\n    case 'cpu-pinned':\n      return 2;\n    case 'texture':\n      return 3;\n    case 'gpu-buffer':\n      return 4;\n    default:\n      throw new Error(`unsupported data location: ${location}`);\n  }\n};\n\n/**\n * Map integer data location to string value\n */\nexport const dataLocationEnumToString = (location: number): Tensor.DataLocation|undefined =>\n    (['none', 'cpu', 'cpu-pinned', 'texture', 'gpu-buffer'] as const)[location];\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env, InferenceSession, Tensor} from 'onnxruntime-common';\n\nimport {SerializableModeldata, SerializableSessionMetadata, SerializableTensorMetadata, TensorMetadata} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {dataLocationStringToEnum, getTensorElementSize, isGpuBufferSupportedType, logLevelStringToEnum, tensorDataTypeEnumToString, tensorDataTypeStringToEnum, tensorTypeToTypedArrayConstructor} from './wasm-common';\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError} from './wasm-utils';\n\nlet ortEnvInitialized = false;\n\n/**\n * get the input/output count of the session.\n * @param sessionHandle the handle representing the session. should be non-zero.\n * @returns a tuple including 2 numbers, representing the input count and output count.\n */\nconst getSessionInputOutputCount = (sessionHandle: number): [number, number] => {\n  const wasm = getInstance();\n  const stack = wasm.stackSave();\n  try {\n    const dataOffset = wasm.stackAlloc(8);\n    const errorCode = wasm._OrtGetInputOutputCount(sessionHandle, dataOffset, dataOffset + 4);\n    if (errorCode !== 0) {\n      checkLastError('Can\\'t get session input/output count.');\n    }\n    return [wasm.HEAP32[dataOffset / 4], wasm.HEAP32[dataOffset / 4 + 1]];\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n\n/**\n * initialize ORT environment.\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nconst initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    checkLastError('Can\\'t initialize onnxruntime.');\n  }\n};\n\n/**\n * intialize runtime environment.\n * @param env passed in the environment config object.\n */\nexport const initRuntime = async(env: Env): Promise<void> => {\n  // init ORT\n  initOrt(env.wasm.numThreads!, logLevelStringToEnum(env.logLevel));\n\n  if (!BUILD_DEFS.DISABLE_WEBGPU) {\n    // init JSEP if available\n\n    // eslint-disable-next-line @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires\n    const initJsep = require('./jsep/init').init;\n    await initJsep(getInstance(), env);\n  }\n\n  ortEnvInitialized = true;\n};\n\n/**\n * valid data locations for input/output tensors.\n */\ntype SupportedTensorDataLocationForInputOutput = 'cpu'|'cpu-pinned'|'gpu-buffer';\n\ntype IOBindingState = {\n  /**\n   * the handle of IO binding.\n   */\n  readonly handle: number;\n\n  /**\n   * the preferred location for each output tensor.\n   *\n   * value is one of 'cpu', 'cpu-pinned', 'gpu-buffer'.\n   */\n  readonly outputPreferredLocations: readonly SupportedTensorDataLocationForInputOutput[];\n\n  /**\n   * enum value of the preferred location for each output tensor.\n   */\n  readonly outputPreferredLocationsEncoded: readonly number[];\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded; bindingState\n */\ntype SessionMetadata = [\n  inferenceSessionId: number, inputNamesUTF8Encoded: number[], outputNamesUTF8Encoded: number[],\n  bindingState: IOBindingState|null\n];\n\nconst activeSessions = new Map<number, SessionMetadata>();\n\nexport const isOrtEnvInitialized = (): boolean => ortEnvInitialized;\n\n/**\n * allocate the memory and memcpy the model bytes, preparing for creating an instance of InferenceSession.\n * @returns a 2-elements tuple - the pointer and size of the allocated buffer\n */\nexport const createSessionAllocate = (model: Uint8Array): [number, number] => {\n  const wasm = getInstance();\n  const modelDataOffset = wasm._malloc(model.byteLength);\n  if (modelDataOffset === 0) {\n    throw new Error(`Can't create a session. failed to allocate a buffer of size ${model.byteLength}.`);\n  }\n  wasm.HEAPU8.set(model, modelDataOffset);\n  return [modelDataOffset, model.byteLength];\n};\n\n/**\n * create an inference session using the prepared buffer containing the model data.\n * @param modelData a 2-elements tuple containing the pointer and size of the model data buffer.\n * @param options an optional session options object.\n * @returns a 3-elements tuple containing [session handle, input names, output names]\n */\nexport const createSessionFinalize =\n    (modelData: SerializableModeldata, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const wasm = getInstance();\n\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let ioBindingHandle = 0;\n      let allocs: number[] = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNamesUTF8Encoded = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        sessionHandle = wasm._OrtCreateSession(modelData[0], modelData[1], sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          checkLastError('Can\\'t create a session.');\n        }\n\n        const [inputCount, outputCount] = getSessionInputOutputCount(sessionHandle);\n\n        const inputNames = [];\n        const outputNames = [];\n        const outputPreferredLocations: SupportedTensorDataLocationForInputOutput[] = [];\n        for (let i = 0; i < inputCount; i++) {\n          const name = wasm._OrtGetInputName(sessionHandle, i);\n          if (name === 0) {\n            checkLastError('Can\\'t get an input name.');\n          }\n          inputNamesUTF8Encoded.push(name);\n          inputNames.push(wasm.UTF8ToString(name));\n        }\n        for (let i = 0; i < outputCount; i++) {\n          const name = wasm._OrtGetOutputName(sessionHandle, i);\n          if (name === 0) {\n            checkLastError('Can\\'t get an output name.');\n          }\n          outputNamesUTF8Encoded.push(name);\n          const nameString = wasm.UTF8ToString(name);\n          outputNames.push(nameString);\n\n          if (!BUILD_DEFS.DISABLE_WEBGPU) {\n            const location = typeof options?.preferredOutputLocation === 'string' ?\n                options.preferredOutputLocation :\n                options?.preferredOutputLocation?.[nameString] ?? 'cpu';\n            if (location !== 'cpu' && location !== 'cpu-pinned' && location !== 'gpu-buffer') {\n              throw new Error(`Not supported preferred output location: ${location}.`);\n            }\n            outputPreferredLocations.push(location);\n          }\n        }\n\n        // use IO binding only when at least one output is preffered to be on GPU.\n        let bindingState: IOBindingState|null = null;\n        if (!BUILD_DEFS.DISABLE_WEBGPU && outputPreferredLocations.some(l => l === 'gpu-buffer')) {\n          ioBindingHandle = wasm._OrtCreateBinding(sessionHandle);\n          if (ioBindingHandle === 0) {\n            checkLastError('Can\\'t create IO binding.');\n          }\n\n          bindingState = {\n            handle: ioBindingHandle,\n            outputPreferredLocations,\n            outputPreferredLocationsEncoded: outputPreferredLocations.map(l => dataLocationStringToEnum(l)),\n          };\n        }\n\n        activeSessions.set(sessionHandle, [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded, bindingState]);\n        return [sessionHandle, inputNames, outputNames];\n      } catch (e) {\n        inputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n        outputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n\n        if (ioBindingHandle !== 0) {\n          wasm._OrtReleaseBinding(ioBindingHandle);\n        }\n\n        if (sessionHandle !== 0) {\n          wasm._OrtReleaseSession(sessionHandle);\n        }\n        throw e;\n      } finally {\n        wasm._free(modelData[0]);\n        if (sessionOptionsHandle !== 0) {\n          wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        }\n        allocs.forEach(alloc => wasm._free(alloc));\n      }\n    };\n\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSession =\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const modelData: SerializableModeldata = createSessionAllocate(model);\n      return createSessionFinalize(modelData, options);\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error(`cannot release session. invalid session id: ${sessionId}`);\n  }\n  const [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded, ioBindingState] = session;\n\n  if (ioBindingState) {\n    wasm._OrtReleaseBinding(ioBindingState.handle);\n  }\n\n  wasm.jsepUnregisterBuffers?.(sessionId);\n\n  inputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n  outputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions.delete(sessionId);\n};\n\nexport const prepareInputOutputTensor =\n    (tensor: TensorMetadata|null, tensorHandles: number[], allocs: number[], sessionId: number, index: number):\n        void => {\n          if (!tensor) {\n            tensorHandles.push(0);\n            return;\n          }\n\n          const wasm = getInstance();\n\n          const dataType = tensor[0];\n          const dims = tensor[1];\n          const location = tensor[3];\n\n          let rawData: number;\n          let dataByteLength: number;\n\n          if (dataType === 'string' && location === 'gpu-buffer') {\n            throw new Error('String tensor is not supported on GPU.');\n          }\n\n          if (location === 'gpu-buffer') {\n            const gpuBuffer = tensor[2].gpuBuffer as GPUBuffer;\n            const elementSizeInBytes = getTensorElementSize(tensorDataTypeStringToEnum(dataType))!;\n            dataByteLength = dims.reduce((a, b) => a * b, 1) * elementSizeInBytes;\n            rawData = wasm.jsepRegisterBuffer(sessionId, index, gpuBuffer, dataByteLength);\n          } else {\n            const data = tensor[2];\n\n            if (Array.isArray(data)) {\n              // string tensor\n              dataByteLength = 4 * data.length;\n              rawData = wasm._malloc(dataByteLength);\n              allocs.push(rawData);\n              let dataIndex = rawData / 4;\n              for (let i = 0; i < data.length; i++) {\n                if (typeof data[i] !== 'string') {\n                  throw new TypeError(`tensor data at index ${i} is not a string`);\n                }\n                wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], allocs);\n              }\n            } else {\n              dataByteLength = data.byteLength;\n              rawData = wasm._malloc(dataByteLength);\n              allocs.push(rawData);\n              wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), rawData);\n            }\n          }\n\n          const stack = wasm.stackSave();\n          const dimsOffset = wasm.stackAlloc(4 * dims.length);\n          try {\n            let dimIndex = dimsOffset / 4;\n            dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n            const tensor = wasm._OrtCreateTensor(\n                tensorDataTypeStringToEnum(dataType), rawData, dataByteLength, dimsOffset, dims.length,\n                dataLocationStringToEnum(location));\n            if (tensor === 0) {\n              checkLastError(`Can't create tensor for input/output. session=${sessionId}, index=${index}.`);\n            }\n            tensorHandles.push(tensor);\n          } finally {\n            wasm.stackRestore(stack);\n          }\n        };\n\n/**\n * perform inference run\n */\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputTensors: TensorMetadata[], outputIndices: number[],\n    outputTensors: Array<TensorMetadata|null>, options: InferenceSession.RunOptions): Promise<TensorMetadata[]> => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error(`cannot run inference. invalid session id: ${sessionId}`);\n  }\n  const [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded, ioBindingState] = session;\n\n  const inputCount = inputIndices.length;\n  const outputCount = outputIndices.length;\n\n  let runOptionsHandle = 0;\n  let runOptionsAllocs: number[] = [];\n\n  const inputTensorHandles: number[] = [];\n  const outputTensorHandles: number[] = [];\n  const inputOutputAllocs: number[] = [];\n\n  const beforeRunStack = wasm.stackSave();\n  const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n  const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n  const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n  const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n  try {\n    [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n    // create input tensors\n    for (let i = 0; i < inputCount; i++) {\n      prepareInputOutputTensor(inputTensors[i], inputTensorHandles, inputOutputAllocs, sessionId, inputIndices[i]);\n    }\n\n    // create output tensors\n    for (let i = 0; i < outputCount; i++) {\n      prepareInputOutputTensor(\n          outputTensors[i], outputTensorHandles, inputOutputAllocs, sessionId, inputCount + outputIndices[i]);\n    }\n\n    let inputValuesIndex = inputValuesOffset / 4;\n    let inputNamesIndex = inputNamesOffset / 4;\n    let outputValuesIndex = outputValuesOffset / 4;\n    let outputNamesIndex = outputNamesOffset / 4;\n    for (let i = 0; i < inputCount; i++) {\n      wasm.HEAPU32[inputValuesIndex++] = inputTensorHandles[i];\n      wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n    }\n    for (let i = 0; i < outputCount; i++) {\n      wasm.HEAPU32[outputValuesIndex++] = outputTensorHandles[i];\n      wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n    }\n\n    if (!BUILD_DEFS.DISABLE_WEBGPU && ioBindingState) {\n      const {handle, outputPreferredLocations, outputPreferredLocationsEncoded} = ioBindingState;\n\n      if (inputNamesUTF8Encoded.length !== inputCount) {\n        throw new Error(`input count from feeds (${\n            inputCount}) is expected to be always equal to model's input count (${inputNamesUTF8Encoded.length}).`);\n      }\n\n      // process inputs\n      for (let i = 0; i < inputCount; i++) {\n        const index = inputIndices[i];\n        const errorCode = await wasm._OrtBindInput(handle, inputNamesUTF8Encoded[index], inputTensorHandles[i]);\n        if (errorCode !== 0) {\n          checkLastError(`Can't bind input[${i}] for session=${sessionId}.`);\n        }\n      }\n\n      // process pre-allocated outputs\n      for (let i = 0; i < outputCount; i++) {\n        const index = outputIndices[i];\n        const location = outputTensors[i]?.[3];  // undefined means output is not pre-allocated.\n\n        if (location) {\n          // output is pre-allocated. bind the tensor.\n          const errorCode = wasm._OrtBindOutput(handle, outputNamesUTF8Encoded[index], outputTensorHandles[i], 0);\n          if (errorCode !== 0) {\n            checkLastError(`Can't bind pre-allocated output[${i}] for session=${sessionId}.`);\n          }\n        } else {\n          // output is not pre-allocated. reset preferred location.\n          const errorCode =\n              wasm._OrtBindOutput(handle, outputNamesUTF8Encoded[index], 0, outputPreferredLocationsEncoded[index]);\n          if (errorCode !== 0) {\n            checkLastError(`Can't bind output[${i}] to ${outputPreferredLocations[i]} for session=${sessionId}.`);\n          }\n        }\n      }\n    }\n\n    let errorCode: number;\n\n    if (!BUILD_DEFS.DISABLE_WEBGPU && ioBindingState) {\n      errorCode = await wasm._OrtRunWithBinding(\n          sessionHandle, ioBindingState.handle, outputCount, outputValuesOffset, runOptionsHandle);\n    } else {\n      errorCode = await wasm._OrtRun(\n          sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n          outputValuesOffset, runOptionsHandle);\n    }\n\n    if (errorCode !== 0) {\n      checkLastError('failed to call OrtRun().');\n    }\n\n    const output: TensorMetadata[] = [];\n\n    for (let i = 0; i < outputCount; i++) {\n      const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n      if (tensor === outputTensorHandles[i]) {\n        // output tensor is pre-allocated. no need to copy data.\n        output.push(outputTensors[i]!);\n        continue;\n      }\n\n      const beforeGetTensorDataStack = wasm.stackSave();\n      // stack allocate 4 pointer value\n      const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n      let keepOutputTensor = false;\n      let type: Tensor.Type|undefined, dataOffset = 0;\n      try {\n        const errorCode = wasm._OrtGetTensorData(\n            tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n        if (errorCode !== 0) {\n          checkLastError(`Can't access output tensor data on index ${i}.`);\n        }\n        let tensorDataIndex = tensorDataOffset / 4;\n        const dataType = wasm.HEAPU32[tensorDataIndex++];\n        dataOffset = wasm.HEAPU32[tensorDataIndex++];\n        const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n        const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n        const dims = [];\n        for (let i = 0; i < dimsLength; i++) {\n          dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n        }\n        wasm._OrtFree(dimsOffset);\n\n        const size = dims.reduce((a, b) => a * b, 1);\n        type = tensorDataTypeEnumToString(dataType);\n\n        const preferredLocation = ioBindingState?.outputPreferredLocations[outputIndices[i]];\n\n        if (type === 'string') {\n          if (preferredLocation === 'gpu-buffer') {\n            throw new Error('String tensor is not supported on GPU.');\n          }\n          const stringData: string[] = [];\n          let dataIndex = dataOffset / 4;\n          for (let i = 0; i < size; i++) {\n            const offset = wasm.HEAPU32[dataIndex++];\n            const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n            stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n          }\n          output.push([type, dims, stringData, 'cpu']);\n        } else {\n          // If a certain output's preferred location is GPU but the tensor is empty, we still need to create a CPU\n          // tensor for it. There is no mapping GPU buffer for an empty tensor.\n          if (preferredLocation === 'gpu-buffer' && size > 0) {\n            const gpuBuffer = wasm.jsepGetBuffer(dataOffset);\n            const elementSize = getTensorElementSize(dataType);\n            if (elementSize === undefined || !isGpuBufferSupportedType(type)) {\n              throw new Error(`Unsupported data type: ${type}`);\n            }\n\n            // do not release the tensor right now. it will be released when user calls tensor.dispose().\n            keepOutputTensor = true;\n\n            output.push([\n              type, dims, {\n                gpuBuffer,\n                download: wasm.jsepCreateDownloader(gpuBuffer, size * elementSize, type),\n                dispose: () => {\n                  wasm._OrtReleaseTensor(tensor);\n                }\n              },\n              'gpu-buffer'\n            ]);\n          } else {\n            const typedArrayConstructor = tensorTypeToTypedArrayConstructor(type);\n            const data = new typedArrayConstructor(size);\n            new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n            output.push([type, dims, data, 'cpu']);\n          }\n        }\n      } finally {\n        wasm.stackRestore(beforeGetTensorDataStack);\n        if (type === 'string' && dataOffset) {\n          wasm._free(dataOffset);\n        }\n        if (!keepOutputTensor) {\n          wasm._OrtReleaseTensor(tensor);\n        }\n      }\n    }\n\n    if (ioBindingState) {\n      wasm._OrtClearBoundOutputs(ioBindingState.handle);\n    }\n\n    return output;\n  } finally {\n    wasm.stackRestore(beforeRunStack);\n\n    inputTensorHandles.forEach(v => wasm._OrtReleaseTensor(v));\n    outputTensorHandles.forEach(v => wasm._OrtReleaseTensor(v));\n    inputOutputAllocs.forEach(p => wasm._free(p));\n\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    runOptionsAllocs.forEach(p => wasm._free(p));\n  }\n};\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    checkLastError('Can\\'t get an profile file name.');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensorMetadata[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && 'buffer' in data) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n",
    "/*!\n * ONNX Runtime Web v1.17.0\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\"use strict\";(()=>{var At=Object.defineProperty;var Zr=Object.getOwnPropertyDescriptor;var Kr=Object.getOwnPropertyNames;var en=Object.prototype.hasOwnProperty;var Rt=(l,c)=>()=>(l&&(c=l(l=0)),c);var at=(l,c)=>()=>(c||l((c={exports:{}}).exports,c),c.exports),Ct=(l,c)=>{for(var n in c)At(l,n,{get:c[n],enumerable:!0})},tn=(l,c,n,w)=>{if(c&&typeof c==\"object\"||typeof c==\"function\")for(let d of Kr(c))!en.call(l,d)&&d!==n&&At(l,d,{get:()=>c[d],enumerable:!(w=Zr(c,d))||w.enumerable});return l};var ot=l=>tn(At({},\"__esModule\",{value:!0}),l);var Dt={};Ct(Dt,{readFile:()=>rn});var rn,It=Rt(()=>{rn=void 0});var Ft={};Ct(Ft,{join:()=>nn});var nn,xt=Rt(()=>{nn=void 0});var yr=at((hr,Ut)=>{\"use strict\";var gr=(()=>{var l=typeof document<\"u\"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<\"u\"&&(l=l||__filename),function(c={}){var n=c,w,d;n.ready=new Promise((r,a)=>{w=r,d=a});var v=Object.assign({},n),y=\"./this.program\",i=typeof window==\"object\",I=typeof importScripts==\"function\",F=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\",x=\"\",H,U,P;if(F){var k=(It(),ot(Dt)),D=(xt(),ot(Ft));x=I?D.dirname(x)+\"/\":__dirname+\"/\",H=(r,a)=>(r=r.startsWith(\"file://\")?new URL(r):D.normalize(r),k.readFileSync(r,a?void 0:\"utf8\")),P=r=>(r=H(r,!0),r.buffer||(r=new Uint8Array(r)),r),U=(r,a,s,f=!0)=>{r=r.startsWith(\"file://\")?new URL(r):D.normalize(r),k.readFile(r,f?void 0:\"utf8\",(O,b)=>{O?s(O):a(f?b.buffer:b)})},!n.thisProgram&&1<process.argv.length&&(y=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),n.inspect=()=>\"[Emscripten Module object]\"}else(i||I)&&(I?x=self.location.href:typeof document<\"u\"&&document.currentScript&&(x=document.currentScript.src),l&&(x=l),x.indexOf(\"blob:\")!==0?x=x.substr(0,x.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):x=\"\",H=r=>{var a=new XMLHttpRequest;return a.open(\"GET\",r,!1),a.send(null),a.responseText},I&&(P=r=>{var a=new XMLHttpRequest;return a.open(\"GET\",r,!1),a.responseType=\"arraybuffer\",a.send(null),new Uint8Array(a.response)}),U=(r,a,s)=>{var f=new XMLHttpRequest;f.open(\"GET\",r,!0),f.responseType=\"arraybuffer\",f.onload=()=>{f.status==200||f.status==0&&f.response?a(f.response):s()},f.onerror=s,f.send(null)});var S=n.print||console.log.bind(console),B=n.printErr||console.error.bind(console);Object.assign(n,v),v=null,n.thisProgram&&(y=n.thisProgram);var fe;n.wasmBinary&&(fe=n.wasmBinary);var Be=n.noExitRuntime||!0;typeof WebAssembly!=\"object\"&&ue(\"no native wasm support detected\");var pe,E,Oe=!1,we,q,A,te;function ae(){var r=pe.buffer;n.HEAP8=we=new Int8Array(r),n.HEAP16=new Int16Array(r),n.HEAP32=A=new Int32Array(r),n.HEAPU8=q=new Uint8Array(r),n.HEAPU16=new Uint16Array(r),n.HEAPU32=te=new Uint32Array(r),n.HEAPF32=new Float32Array(r),n.HEAPF64=new Float64Array(r)}var Q,_e=[],R=[],T=[];function Pe(){var r=n.preRun.shift();_e.unshift(r)}var Z=0,le=null,G=null;function ue(r){throw n.onAbort&&n.onAbort(r),r=\"Aborted(\"+r+\")\",B(r),Oe=!0,r=new WebAssembly.RuntimeError(r+\". Build with -sASSERTIONS for more info.\"),d(r),r}function Ne(r){return r.startsWith(\"data:application/octet-stream;base64,\")}var ce;if(ce=\"ort-training-wasm-simd.wasm\",!Ne(ce)){var Ie=ce;ce=n.locateFile?n.locateFile(Ie,x):x+Ie}function me(r){if(r==ce&&fe)return new Uint8Array(fe);if(P)return P(r);throw\"both async and sync fetching of the wasm failed\"}function Fe(r){if(!fe&&(i||I)){if(typeof fetch==\"function\"&&!r.startsWith(\"file://\"))return fetch(r,{credentials:\"same-origin\"}).then(a=>{if(!a.ok)throw\"failed to load wasm binary file at '\"+r+\"'\";return a.arrayBuffer()}).catch(()=>me(r));if(U)return new Promise((a,s)=>{U(r,f=>a(new Uint8Array(f)),s)})}return Promise.resolve().then(()=>me(r))}function K(r,a,s){return Fe(r).then(f=>WebAssembly.instantiate(f,a)).then(f=>f).then(s,f=>{B(\"failed to asynchronously prepare wasm: \"+f),ue(f)})}function be(r,a){var s=ce;return fe||typeof WebAssembly.instantiateStreaming!=\"function\"||Ne(s)||s.startsWith(\"file://\")||F||typeof fetch!=\"function\"?K(s,r,a):fetch(s,{credentials:\"same-origin\"}).then(f=>WebAssembly.instantiateStreaming(f,r).then(a,function(O){return B(\"wasm streaming compile failed: \"+O),B(\"falling back to ArrayBuffer instantiation\"),K(s,r,a)}))}var ge,ee=r=>{for(;0<r.length;)r.shift()(n)};function re(r){this.Ka=r-24,this.Pa=function(a){te[this.Ka+4>>2>>>0]=a},this.Oa=function(a){te[this.Ka+8>>2>>>0]=a},this.Ma=function(a,s){this.Na(),this.Pa(a),this.Oa(s)},this.Na=function(){te[this.Ka+16>>2>>>0]=0}}var ve=0,he=0,xe=typeof TextDecoder<\"u\"?new TextDecoder(\"utf8\"):void 0,Ue=(r,a,s)=>{a>>>=0;var f=a+s;for(s=a;r[s]&&!(s>=f);)++s;if(16<s-a&&r.buffer&&xe)return xe.decode(r.subarray(a,s));for(f=\"\";a<s;){var O=r[a++];if(O&128){var b=r[a++]&63;if((O&224)==192)f+=String.fromCharCode((O&31)<<6|b);else{var M=r[a++]&63;O=(O&240)==224?(O&15)<<12|b<<6|M:(O&7)<<18|b<<12|M<<6|r[a++]&63,65536>O?f+=String.fromCharCode(O):(O-=65536,f+=String.fromCharCode(55296|O>>10,56320|O&1023))}}else f+=String.fromCharCode(O)}return f},He=(r,a)=>(r>>>=0)?Ue(q,r,a):\"\",ke=r=>{for(var a=0,s=0;s<r.length;++s){var f=r.charCodeAt(s);127>=f?a++:2047>=f?a+=2:55296<=f&&57343>=f?(a+=4,++s):a+=3}return a},Me=(r,a,s,f)=>{if(s>>>=0,!(0<f))return 0;var O=s;f=s+f-1;for(var b=0;b<r.length;++b){var M=r.charCodeAt(b);if(55296<=M&&57343>=M){var N=r.charCodeAt(++b);M=65536+((M&1023)<<10)|N&1023}if(127>=M){if(s>=f)break;a[s++>>>0]=M}else{if(2047>=M){if(s+1>=f)break;a[s++>>>0]=192|M>>6}else{if(65535>=M){if(s+2>=f)break;a[s++>>>0]=224|M>>12}else{if(s+3>=f)break;a[s++>>>0]=240|M>>18,a[s++>>>0]=128|M>>12&63}a[s++>>>0]=128|M>>6&63}a[s++>>>0]=128|M&63}}return a[s>>>0]=0,s-O},Ae=r=>r%4===0&&(r%100!==0||r%400===0),Re=[0,31,60,91,121,152,182,213,244,274,305,335],Je=[0,31,59,90,120,151,181,212,243,273,304,334],ut=r=>{var a=ke(r)+1,s=We(a);return s&&Me(r,q,s,a),s},ze={},lt=()=>{if(!Se){var r={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:y||\"./this.program\"},a;for(a in ze)ze[a]===void 0?delete r[a]:r[a]=ze[a];var s=[];for(a in r)s.push(`${a}=${r[a]}`);Se=s}return Se},Se,Ge=[null,[],[]],je=[31,29,31,30,31,30,31,31,30,31,30,31],Xe=[31,28,31,30,31,30,31,31,30,31,30,31];function ft(r){var a=Array(ke(r)+1);return Me(r,a,0,a.length),a}function Qe(r,a,s,f){function O(p,L,j){for(p=typeof p==\"number\"?p.toString():p||\"\";p.length<L;)p=j[0]+p;return p}function b(p,L){return O(p,L,\"0\")}function M(p,L){function j(pt){return 0>pt?-1:0<pt?1:0}var Te;return(Te=j(p.getFullYear()-L.getFullYear()))===0&&(Te=j(p.getMonth()-L.getMonth()))===0&&(Te=j(p.getDate()-L.getDate())),Te}function N(p){switch(p.getDay()){case 0:return new Date(p.getFullYear()-1,11,29);case 1:return p;case 2:return new Date(p.getFullYear(),0,3);case 3:return new Date(p.getFullYear(),0,2);case 4:return new Date(p.getFullYear(),0,1);case 5:return new Date(p.getFullYear()-1,11,31);case 6:return new Date(p.getFullYear()-1,11,30)}}function oe(p){var L=p.Ga;for(p=new Date(new Date(p.Ha+1900,0,1).getTime());0<L;){var j=p.getMonth(),Te=(Ae(p.getFullYear())?je:Xe)[j];if(L>Te-p.getDate())L-=Te-p.getDate()+1,p.setDate(1),11>j?p.setMonth(j+1):(p.setMonth(0),p.setFullYear(p.getFullYear()+1));else{p.setDate(p.getDate()+L);break}}return j=new Date(p.getFullYear()+1,0,4),L=N(new Date(p.getFullYear(),0,4)),j=N(j),0>=M(L,p)?0>=M(j,p)?p.getFullYear()+1:p.getFullYear():p.getFullYear()-1}r>>>=0,a>>>=0,s>>>=0,f>>>=0;var ie=A[f+40>>2>>>0];f={Sa:A[f>>2>>>0],Ra:A[f+4>>2>>>0],Ia:A[f+8>>2>>>0],La:A[f+12>>2>>>0],Ja:A[f+16>>2>>>0],Ha:A[f+20>>2>>>0],Fa:A[f+24>>2>>>0],Ga:A[f+28>>2>>>0],Ua:A[f+32>>2>>>0],Qa:A[f+36>>2>>>0],Ta:ie?He(ie):\"\"},s=He(s),ie={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var se in ie)s=s.replace(new RegExp(se,\"g\"),ie[se]);var rt=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),nt=\"January February March April May June July August September October November December\".split(\" \");ie={\"%a\":p=>rt[p.Fa].substring(0,3),\"%A\":p=>rt[p.Fa],\"%b\":p=>nt[p.Ja].substring(0,3),\"%B\":p=>nt[p.Ja],\"%C\":p=>b((p.Ha+1900)/100|0,2),\"%d\":p=>b(p.La,2),\"%e\":p=>O(p.La,2,\" \"),\"%g\":p=>oe(p).toString().substring(2),\"%G\":p=>oe(p),\"%H\":p=>b(p.Ia,2),\"%I\":p=>(p=p.Ia,p==0?p=12:12<p&&(p-=12),b(p,2)),\"%j\":p=>{for(var L=0,j=0;j<=p.Ja-1;L+=(Ae(p.Ha+1900)?je:Xe)[j++]);return b(p.La+L,3)},\"%m\":p=>b(p.Ja+1,2),\"%M\":p=>b(p.Ra,2),\"%n\":()=>`\n`,\"%p\":p=>0<=p.Ia&&12>p.Ia?\"AM\":\"PM\",\"%S\":p=>b(p.Sa,2),\"%t\":()=>\"\t\",\"%u\":p=>p.Fa||7,\"%U\":p=>b(Math.floor((p.Ga+7-p.Fa)/7),2),\"%V\":p=>{var L=Math.floor((p.Ga+7-(p.Fa+6)%7)/7);if(2>=(p.Fa+371-p.Ga-2)%7&&L++,L)L==53&&(j=(p.Fa+371-p.Ga)%7,j==4||j==3&&Ae(p.Ha)||(L=1));else{L=52;var j=(p.Fa+7-p.Ga-1)%7;(j==4||j==5&&Ae(p.Ha%400-1))&&L++}return b(L,2)},\"%w\":p=>p.Fa,\"%W\":p=>b(Math.floor((p.Ga+7-(p.Fa+6)%7)/7),2),\"%y\":p=>(p.Ha+1900).toString().substring(2),\"%Y\":p=>p.Ha+1900,\"%z\":p=>{p=p.Qa;var L=0<=p;return p=Math.abs(p)/60,(L?\"+\":\"-\")+(\"0000\"+(p/60*100+p%60)).slice(-4)},\"%Z\":p=>p.Ta,\"%%\":()=>\"%\"},s=s.replace(/%%/g,\"\\0\\0\");for(se in ie)s.includes(se)&&(s=s.replace(new RegExp(se,\"g\"),ie[se](f)));return s=s.replace(/\\0\\0/g,\"%\"),se=ft(s),se.length>a?0:(we.set(se,r>>>0),se.length-1)}var Ce=[],Ee=void 0,Ze=[];function Ye(r,a){if(!Ee){Ee=new WeakMap;var s=Q.length;if(Ee)for(var f=0;f<0+s;f++){var O=f,b=Ce[O];b||(O>=Ce.length&&(Ce.length=O+1),Ce[O]=b=Q.get(O)),(O=b)&&Ee.set(O,f)}}if(s=Ee.get(r)||0)return s;if(Ze.length)s=Ze.pop();else{try{Q.grow(1)}catch(N){throw N instanceof RangeError?\"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\":N}s=Q.length-1}try{f=s,Q.set(f,r),Ce[f]=Q.get(f)}catch(N){if(!(N instanceof TypeError))throw N;if(typeof WebAssembly.Function==\"function\"){f=WebAssembly.Function,O={i:\"i32\",j:\"i64\",f:\"f32\",d:\"f64\",p:\"i32\"},b={parameters:[],results:a[0]==\"v\"?[]:[O[a[0]]]};for(var M=1;M<a.length;++M)b.parameters.push(O[a[M]]);a=new f(b,r)}else{for(f=[1],O=a.slice(0,1),a=a.slice(1),b={i:127,p:127,j:126,f:125,d:124},f.push(96),M=a.length,128>M?f.push(M):f.push(M%128|128,M>>7),M=0;M<a.length;++M)f.push(b[a[M]]);O==\"v\"?f.push(0):f.push(1,b[O]),a=[0,97,115,109,1,0,0,0,1],O=f.length,128>O?a.push(O):a.push(O%128|128,O>>7),a.push.apply(a,f),a.push(2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0),a=new WebAssembly.Module(new Uint8Array(a)),a=new WebAssembly.Instance(a,{e:{f:r}}).exports.f}f=s,Q.set(f,a),Ce[f]=Q.get(f)}return Ee.set(r,s),s}var C={a:function(r,a,s){throw r>>>=0,new re(r).Ma(a>>>0,s>>>0),ve=r,he++,ve},e:function(){return 0},H:function(){},x:function(){},z:function(){},J:function(){return 0},F:function(){},A:function(){},E:function(){},g:function(){},y:function(){},v:function(){},G:function(){},w:function(){},l:()=>!0,o:function(r,a,s){r=a+2097152>>>0<4194305-!!r?(r>>>0)+4294967296*a:NaN,s>>>=0,r=new Date(1e3*r),A[s>>2>>>0]=r.getUTCSeconds(),A[s+4>>2>>>0]=r.getUTCMinutes(),A[s+8>>2>>>0]=r.getUTCHours(),A[s+12>>2>>>0]=r.getUTCDate(),A[s+16>>2>>>0]=r.getUTCMonth(),A[s+20>>2>>>0]=r.getUTCFullYear()-1900,A[s+24>>2>>>0]=r.getUTCDay(),A[s+28>>2>>>0]=(r.getTime()-Date.UTC(r.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},p:function(r,a,s){r=a+2097152>>>0<4194305-!!r?(r>>>0)+4294967296*a:NaN,s>>>=0,r=new Date(1e3*r),A[s>>2>>>0]=r.getSeconds(),A[s+4>>2>>>0]=r.getMinutes(),A[s+8>>2>>>0]=r.getHours(),A[s+12>>2>>>0]=r.getDate(),A[s+16>>2>>>0]=r.getMonth(),A[s+20>>2>>>0]=r.getFullYear()-1900,A[s+24>>2>>>0]=r.getDay(),A[s+28>>2>>>0]=(Ae(r.getFullYear())?Re:Je)[r.getMonth()]+r.getDate()-1|0,A[s+36>>2>>>0]=-(60*r.getTimezoneOffset()),a=new Date(r.getFullYear(),6,1).getTimezoneOffset();var f=new Date(r.getFullYear(),0,1).getTimezoneOffset();A[s+32>>2>>>0]=(a!=f&&r.getTimezoneOffset()==Math.min(f,a))|0},q:function(r){r>>>=0;var a=new Date(A[r+20>>2>>>0]+1900,A[r+16>>2>>>0],A[r+12>>2>>>0],A[r+8>>2>>>0],A[r+4>>2>>>0],A[r>>2>>>0],0),s=A[r+32>>2>>>0],f=a.getTimezoneOffset(),O=new Date(a.getFullYear(),6,1).getTimezoneOffset(),b=new Date(a.getFullYear(),0,1).getTimezoneOffset(),M=Math.min(b,O);return 0>s?A[r+32>>2>>>0]=+(O!=b&&M==f):0<s!=(M==f)&&(O=Math.max(b,O),a.setTime(a.getTime()+6e4*((0<s?M:O)-f))),A[r+24>>2>>>0]=a.getDay(),A[r+28>>2>>>0]=(Ae(a.getFullYear())?Re:Je)[a.getMonth()]+a.getDate()-1|0,A[r>>2>>>0]=a.getSeconds(),A[r+4>>2>>>0]=a.getMinutes(),A[r+8>>2>>>0]=a.getHours(),A[r+12>>2>>>0]=a.getDate(),A[r+16>>2>>>0]=a.getMonth(),A[r+20>>2>>>0]=a.getYear(),r=a.getTime()/1e3,Ke((ge=r,1<=+Math.abs(ge)?0<ge?+Math.floor(ge/4294967296)>>>0:~~+Math.ceil((ge-+(~~ge>>>0))/4294967296)>>>0:0)),r>>>0},m:function(){return-52},n:function(){},t:function(r,a,s){function f(oe){return(oe=oe.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?oe[1]:\"GMT\"}s>>>=0;var O=new Date().getFullYear(),b=new Date(O,0,1),M=new Date(O,6,1);O=b.getTimezoneOffset();var N=M.getTimezoneOffset();te[r>>>0>>2>>>0]=60*Math.max(O,N),A[a>>>0>>2>>>0]=+(O!=N),r=f(b),a=f(M),r=ut(r),a=ut(a),N<O?(te[s>>2>>>0]=r,te[s+4>>2>>>0]=a):(te[s>>2>>>0]=a,te[s+4>>2>>>0]=r)},d:()=>{ue(\"\")},h:function(){return Date.now()},u:function(){return 4294901760},b:()=>performance.now(),I:function(r,a,s){return a>>>=0,q.copyWithin(r>>>0>>>0,a>>>0,a+(s>>>0)>>>0)},s:function(r){r>>>=0;var a=q.length;if(4294901760<r)return!1;for(var s=1;4>=s;s*=2){var f=a*(1+.2/s);f=Math.min(f,r+100663296);var O=Math;f=Math.max(r,f);e:{O=O.min.call(O,4294901760,f+(65536-f%65536)%65536)-pe.buffer.byteLength+65535>>>16;try{pe.grow(O),ae();var b=1;break e}catch{}b=void 0}if(b)return!0}return!1},C:function(r,a){r>>>=0,a>>>=0;var s=0;return lt().forEach(function(f,O){var b=a+s;for(O=te[r+4*O>>2>>>0]=b,b=0;b<f.length;++b)we[O++>>0>>>0]=f.charCodeAt(b);we[O>>0>>>0]=0,s+=f.length+1}),0},D:function(r,a){r>>>=0,a>>>=0;var s=lt();te[r>>2>>>0]=s.length;var f=0;return s.forEach(function(O){f+=O.length+1}),te[a>>2>>>0]=f,0},f:()=>52,k:function(){return 52},r:function(){return 70},j:function(r,a,s,f){a>>>=0,s>>>=0,f>>>=0;for(var O=0,b=0;b<s;b++){var M=te[a>>2>>>0],N=te[a+4>>2>>>0];a+=8;for(var oe=0;oe<N;oe++){var ie=q[M+oe>>>0],se=Ge[r];ie===0||ie===10?((r===1?S:B)(Ue(se,0)),se.length=0):se.push(ie)}O+=N}return te[f>>2>>>0]=O,0},B:Qe,c:function(r,a,s,f){return Qe(r>>>0,a>>>0,s>>>0,f>>>0)},i:function(r,a,s,f){let O=Q.length;r=new Uint8Array(q.slice(r+a,r+s));try{var b=new WebAssembly.Module(r),M=new WebAssembly.Instance(b,{env:{memory:pe}}),N;for(N in M.exports)Ye(M.exports[N]);return O<Q.length?O:f}catch(oe){return console.log(oe),f}}};(function(){function r(s){if(s=s.exports,E=s=dt(s),pe=E.K,ae(),Q=E.Aa,R.unshift(E.L),Z--,n.monitorRunDependencies&&n.monitorRunDependencies(Z),Z==0&&(le!==null&&(clearInterval(le),le=null),G)){var f=G;G=null,f()}return s}var a={a:C};if(Z++,n.monitorRunDependencies&&n.monitorRunDependencies(Z),n.instantiateWasm)try{return n.instantiateWasm(a,r)}catch(s){B(\"Module.instantiateWasm callback failed with error: \"+s),d(s)}return be(a,function(s){r(s.instance)}).catch(d),{}})(),n._OrtInit=(r,a)=>(n._OrtInit=E.M)(r,a),n._OrtGetLastError=(r,a)=>(n._OrtGetLastError=E.N)(r,a),n._OrtCreateSessionOptions=(r,a,s,f,O,b,M,N,oe,ie)=>(n._OrtCreateSessionOptions=E.O)(r,a,s,f,O,b,M,N,oe,ie),n._OrtAppendExecutionProvider=(r,a)=>(n._OrtAppendExecutionProvider=E.P)(r,a),n._OrtAddFreeDimensionOverride=(r,a,s)=>(n._OrtAddFreeDimensionOverride=E.Q)(r,a,s),n._OrtAddSessionConfigEntry=(r,a,s)=>(n._OrtAddSessionConfigEntry=E.R)(r,a,s),n._OrtReleaseSessionOptions=r=>(n._OrtReleaseSessionOptions=E.S)(r),n._OrtCreateSession=(r,a,s)=>(n._OrtCreateSession=E.T)(r,a,s),n._OrtReleaseSession=r=>(n._OrtReleaseSession=E.U)(r),n._OrtGetInputOutputCount=(r,a,s)=>(n._OrtGetInputOutputCount=E.V)(r,a,s),n._OrtGetInputName=(r,a)=>(n._OrtGetInputName=E.W)(r,a),n._OrtGetOutputName=(r,a)=>(n._OrtGetOutputName=E.X)(r,a),n._OrtFree=r=>(n._OrtFree=E.Y)(r),n._OrtCreateTensor=(r,a,s,f,O,b)=>(n._OrtCreateTensor=E.Z)(r,a,s,f,O,b),n._OrtGetTensorData=(r,a,s,f,O)=>(n._OrtGetTensorData=E._)(r,a,s,f,O),n._OrtReleaseTensor=r=>(n._OrtReleaseTensor=E.$)(r),n._OrtCreateRunOptions=(r,a,s,f)=>(n._OrtCreateRunOptions=E.aa)(r,a,s,f),n._OrtAddRunConfigEntry=(r,a,s)=>(n._OrtAddRunConfigEntry=E.ba)(r,a,s),n._OrtReleaseRunOptions=r=>(n._OrtReleaseRunOptions=E.ca)(r),n._OrtCreateBinding=r=>(n._OrtCreateBinding=E.da)(r),n._OrtBindInput=(r,a,s)=>(n._OrtBindInput=E.ea)(r,a,s),n._OrtBindOutput=(r,a,s,f)=>(n._OrtBindOutput=E.fa)(r,a,s,f),n._OrtClearBoundOutputs=r=>(n._OrtClearBoundOutputs=E.ga)(r),n._OrtReleaseBinding=r=>(n._OrtReleaseBinding=E.ha)(r),n._OrtRunWithBinding=(r,a,s,f,O)=>(n._OrtRunWithBinding=E.ia)(r,a,s,f,O),n._OrtRun=(r,a,s,f,O,b,M,N)=>(n._OrtRun=E.ja)(r,a,s,f,O,b,M,N),n._OrtEndProfiling=r=>(n._OrtEndProfiling=E.ka)(r),n._OrtTrainingLoadCheckpoint=(r,a)=>(n._OrtTrainingLoadCheckpoint=E.la)(r,a),n._OrtTrainingReleaseCheckpoint=r=>(n._OrtTrainingReleaseCheckpoint=E.ma)(r),n._OrtTrainingCreateSession=(r,a,s,f,O,b,M,N)=>(n._OrtTrainingCreateSession=E.na)(r,a,s,f,O,b,M,N),n._OrtTrainingLazyResetGrad=r=>(n._OrtTrainingLazyResetGrad=E.oa)(r),n._OrtTrainingRunTrainStep=(r,a,s,f,O,b)=>(n._OrtTrainingRunTrainStep=E.pa)(r,a,s,f,O,b),n._OrtTrainingOptimizerStep=(r,a)=>(n._OrtTrainingOptimizerStep=E.qa)(r,a),n._OrtTrainingEvalStep=(r,a,s,f,O,b)=>(n._OrtTrainingEvalStep=E.ra)(r,a,s,f,O,b),n._OrtTrainingGetParametersSize=(r,a,s)=>(n._OrtTrainingGetParametersSize=E.sa)(r,a,s),n._OrtTrainingCopyParametersToBuffer=(r,a,s,f)=>(n._OrtTrainingCopyParametersToBuffer=E.ta)(r,a,s,f),n._OrtTrainingCopyParametersFromBuffer=(r,a,s,f)=>(n._OrtTrainingCopyParametersFromBuffer=E.ua)(r,a,s,f),n._OrtTrainingGetModelInputOutputCount=(r,a,s,f)=>(n._OrtTrainingGetModelInputOutputCount=E.va)(r,a,s,f),n._OrtTrainingGetModelInputOutputName=(r,a,s,f)=>(n._OrtTrainingGetModelInputOutputName=E.wa)(r,a,s,f),n._OrtTrainingReleaseSession=r=>(n._OrtTrainingReleaseSession=E.xa)(r);var We=n._malloc=r=>(We=n._malloc=E.ya)(r);n._free=r=>(n._free=E.za)(r);var Ke=r=>(Ke=E.Ba)(r),De=()=>(De=E.Ca)(),et=r=>(et=E.Da)(r),ct=r=>(ct=E.Ea)(r);n.___start_em_js=975904,n.___stop_em_js=976516;function dt(r){r=Object.assign({},r);var a=f=>()=>f()>>>0,s=f=>O=>f(O)>>>0;return r.__errno_location=a(r.__errno_location),r.malloc=s(r.malloc),r.stackSave=a(r.stackSave),r.stackAlloc=s(r.stackAlloc),r}n.stackAlloc=ct,n.stackSave=De,n.stackRestore=et,n.addFunction=Ye,n.UTF8ToString=He,n.stringToUTF8=(r,a,s)=>Me(r,q,a,s),n.lengthBytesUTF8=ke;var $e;G=function r(){$e||tt(),$e||(G=r)};function tt(){function r(){if(!$e&&($e=!0,n.calledRun=!0,!Oe)){if(ee(R),w(n),n.onRuntimeInitialized&&n.onRuntimeInitialized(),n.postRun)for(typeof n.postRun==\"function\"&&(n.postRun=[n.postRun]);n.postRun.length;){var a=n.postRun.shift();T.unshift(a)}ee(T)}}if(!(0<Z)){if(n.preRun)for(typeof n.preRun==\"function\"&&(n.preRun=[n.preRun]);n.preRun.length;)Pe();ee(_e),0<Z||(n.setStatus?(n.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){n.setStatus(\"\")},1),r()},1)):r())}}if(n.preInit)for(typeof n.preInit==\"function\"&&(n.preInit=[n.preInit]);0<n.preInit.length;)n.preInit.pop()();return tt(),c.ready}})();typeof hr==\"object\"&&typeof Ut==\"object\"?Ut.exports=gr:typeof define==\"function\"&&define.amd&&define([],()=>gr)});var Or=at(()=>{});var wr=at(()=>{});var _r={};Ct(_r,{cpus:()=>an});var an,br=Rt(()=>{an=void 0});var Er=at((Sr,Pt)=>{\"use strict\";var vr=(()=>{var l=typeof document<\"u\"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<\"u\"&&(l=l||__filename),function(c={}){function n(){return R.buffer!=G.buffer&&me(),G}function w(){return R.buffer!=G.buffer&&me(),ue}function d(){return R.buffer!=G.buffer&&me(),Ne}function v(){return R.buffer!=G.buffer&&me(),ce}function y(){return R.buffer!=G.buffer&&me(),Ie}var i=c,I,F;i.ready=new Promise((e,t)=>{I=e,F=t});var x=Object.assign({},i),H=\"./this.program\",U=(e,t)=>{throw t},P=typeof window==\"object\",k=typeof importScripts==\"function\",D=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\",S=i.ENVIRONMENT_IS_PTHREAD||!1,B=\"\";function fe(e){return i.locateFile?i.locateFile(e,B):B+e}var Be,pe,E;if(D){var Oe=(It(),ot(Dt)),we=(xt(),ot(Ft));B=k?we.dirname(B)+\"/\":__dirname+\"/\",Be=(t,o)=>(t=t.startsWith(\"file://\")?new URL(t):we.normalize(t),Oe.readFileSync(t,o?void 0:\"utf8\")),E=t=>(t=Be(t,!0),t.buffer||(t=new Uint8Array(t)),t),pe=(t,o,u,g=!0)=>{t=t.startsWith(\"file://\")?new URL(t):we.normalize(t),Oe.readFile(t,g?void 0:\"utf8\",(h,_)=>{h?u(h):o(g?_.buffer:_)})},!i.thisProgram&&1<process.argv.length&&(H=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),U=(t,o)=>{throw process.exitCode=t,o},i.inspect=()=>\"[Emscripten Module object]\";let e;try{e=Or()}catch(t){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),t}global.Worker=e.Worker}else(P||k)&&(k?B=self.location.href:typeof document<\"u\"&&document.currentScript&&(B=document.currentScript.src),typeof l<\"u\"&&l&&(B=l),B.indexOf(\"blob:\")!==0?B=B.substr(0,B.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):B=\"\",D||(Be=e=>{var t=new XMLHttpRequest;return t.open(\"GET\",e,!1),t.send(null),t.responseText},k&&(E=e=>{var t=new XMLHttpRequest;return t.open(\"GET\",e,!1),t.responseType=\"arraybuffer\",t.send(null),new Uint8Array(t.response)}),pe=(e,t,o)=>{var u=new XMLHttpRequest;u.open(\"GET\",e,!0),u.responseType=\"arraybuffer\",u.onload=()=>{u.status==200||u.status==0&&u.response?t(u.response):o()},u.onerror=o,u.send(null)}));D&&typeof performance>\"u\"&&(global.performance=wr().performance);var q=console.log.bind(console),A=console.error.bind(console);D&&(q=(...e)=>Oe.writeSync(1,e.join(\" \")+`\n`),A=(...e)=>Oe.writeSync(2,e.join(\" \")+`\n`));var te=i.print||q,ae=i.printErr||A;Object.assign(i,x),x=null,i.thisProgram&&(H=i.thisProgram),i.quit&&(U=i.quit);var Q;i.wasmBinary&&(Q=i.wasmBinary);var _e=i.noExitRuntime||!0;typeof WebAssembly!=\"object\"&&Me(\"no native wasm support detected\");var R,T,Pe,Z=!1,le,G,ue,Ne,ce,Ie;function me(){var e=R.buffer;i.HEAP8=G=new Int8Array(e),i.HEAP16=new Int16Array(e),i.HEAP32=Ne=new Int32Array(e),i.HEAPU8=ue=new Uint8Array(e),i.HEAPU16=new Uint16Array(e),i.HEAPU32=ce=new Uint32Array(e),i.HEAPF32=new Float32Array(e),i.HEAPF64=Ie=new Float64Array(e)}var Fe=i.INITIAL_MEMORY||16777216;if(5242880<=Fe||Me(\"INITIAL_MEMORY should be larger than STACK_SIZE, was \"+Fe+\"! (STACK_SIZE=5242880)\"),S)R=i.wasmMemory;else if(i.wasmMemory)R=i.wasmMemory;else if(R=new WebAssembly.Memory({initial:Fe/65536,maximum:65536,shared:!0}),!(R.buffer instanceof SharedArrayBuffer))throw ae(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),D&&ae(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)\"),Error(\"bad memory\");me(),Fe=R.buffer.byteLength;var K,be=[],ge=[],ee=[],re=0;function ve(){return _e||0<re}var he=0,xe=null,Ue=null;function He(){he++,i.monitorRunDependencies&&i.monitorRunDependencies(he)}function ke(){if(he--,i.monitorRunDependencies&&i.monitorRunDependencies(he),he==0&&(xe!==null&&(clearInterval(xe),xe=null),Ue)){var e=Ue;Ue=null,e()}}function Me(e){throw i.onAbort&&i.onAbort(e),e=\"Aborted(\"+e+\")\",ae(e),Z=!0,le=1,e=new WebAssembly.RuntimeError(e+\". Build with -sASSERTIONS for more info.\"),F(e),e}function Ae(e){return e.startsWith(\"data:application/octet-stream;base64,\")}var Re;Re=\"ort-wasm-threaded.wasm\",Ae(Re)||(Re=fe(Re));function Je(e){if(e==Re&&Q)return new Uint8Array(Q);if(E)return E(e);throw\"both async and sync fetching of the wasm failed\"}function ut(e){if(!Q&&(P||k)){if(typeof fetch==\"function\"&&!e.startsWith(\"file://\"))return fetch(e,{credentials:\"same-origin\"}).then(t=>{if(!t.ok)throw\"failed to load wasm binary file at '\"+e+\"'\";return t.arrayBuffer()}).catch(()=>Je(e));if(pe)return new Promise((t,o)=>{pe(e,u=>t(new Uint8Array(u)),o)})}return Promise.resolve().then(()=>Je(e))}function ze(e,t,o){return ut(e).then(u=>WebAssembly.instantiate(u,t)).then(u=>u).then(o,u=>{ae(\"failed to asynchronously prepare wasm: \"+u),Me(u)})}function lt(e,t){var o=Re;return Q||typeof WebAssembly.instantiateStreaming!=\"function\"||Ae(o)||o.startsWith(\"file://\")||D||typeof fetch!=\"function\"?ze(o,e,t):fetch(o,{credentials:\"same-origin\"}).then(u=>WebAssembly.instantiateStreaming(u,e).then(t,function(g){return ae(\"wasm streaming compile failed: \"+g),ae(\"falling back to ArrayBuffer instantiation\"),ze(o,e,t)}))}var Se;function Ge(e){this.name=\"ExitStatus\",this.message=`Program terminated with exit(${e})`,this.status=e}function je(e){e.terminate(),e.onmessage=()=>{}}function Xe(e){(e=C.Ma[e])||Me(),C.mb(e)}function ft(e){var t=C.gb();if(!t)return 6;C.Pa.push(t),C.Ma[e.Oa]=t,t.Oa=e.Oa;var o={cmd:\"run\",start_routine:e.nb,arg:e.fb,pthread_ptr:e.Oa};return D&&t.unref(),t.postMessage(o,e.tb),0}var Qe=typeof TextDecoder<\"u\"?new TextDecoder(\"utf8\"):void 0,Ce=(e,t,o)=>{t>>>=0;var u=t+o;for(o=t;e[o]&&!(o>=u);)++o;if(16<o-t&&e.buffer&&Qe)return Qe.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,o):e.subarray(t,o));for(u=\"\";t<o;){var g=e[t++];if(g&128){var h=e[t++]&63;if((g&224)==192)u+=String.fromCharCode((g&31)<<6|h);else{var _=e[t++]&63;g=(g&240)==224?(g&15)<<12|h<<6|_:(g&7)<<18|h<<12|_<<6|e[t++]&63,65536>g?u+=String.fromCharCode(g):(g-=65536,u+=String.fromCharCode(55296|g>>10,56320|g&1023))}}else u+=String.fromCharCode(g)}return u},Ee=(e,t)=>(e>>>=0)?Ce(w(),e,t):\"\";function Ze(e){if(S)return Y(1,1,e);le=e,ve()||(C.ob(),i.onExit&&i.onExit(e),Z=!0),U(e,new Ge(e))}var Ye=e=>{if(le=e,S)throw Ke(e),\"unwind\";Ze(e)},C={Sa:[],Pa:[],$a:[],Ma:{},Wa:function(){S?C.ib():C.hb()},hb:function(){be.unshift(()=>{He(),C.jb(()=>ke())})},ib:function(){C.receiveObjectTransfer=C.lb,C.threadInitTLS=C.Za,C.setExitStatus=C.Ya,_e=!1},Ya:function(e){le=e},yb:[\"$terminateWorker\"],ob:function(){for(var e of C.Pa)je(e);for(e of C.Sa)je(e);C.Sa=[],C.Pa=[],C.Ma=[]},mb:function(e){var t=e.Oa;delete C.Ma[t],C.Sa.push(e),C.Pa.splice(C.Pa.indexOf(e),1),e.Oa=0,St(t)},lb:function(){},Za:function(){C.$a.forEach(e=>e())},kb:e=>new Promise(t=>{e.onmessage=h=>{h=h.data;var _=h.cmd;if(h.targetThread&&h.targetThread!=gt()){var W=C.Ma[h.xb];W?W.postMessage(h,h.transferList):ae('Internal error! Worker sent a message \"'+_+'\" to target pthread '+h.targetThread+\", but that thread no longer exists!\")}else _===\"checkMailbox\"?mt():_===\"spawnThread\"?ft(h):_===\"cleanupThread\"?Xe(h.thread):_===\"killThread\"?(h=h.thread,_=C.Ma[h],delete C.Ma[h],je(_),St(h),C.Pa.splice(C.Pa.indexOf(_),1),_.Oa=0):_===\"cancelThread\"?C.Ma[h.thread].postMessage({cmd:\"cancel\"}):_===\"loaded\"?(e.loaded=!0,t(e)):_===\"alert\"?alert(\"Thread \"+h.threadId+\": \"+h.text):h.target===\"setimmediate\"?e.postMessage(h):_===\"callHandler\"?i[h.handler](...h.args):_&&ae(\"worker sent an unknown command \"+_)},e.onerror=h=>{throw ae(\"worker sent an error! \"+h.filename+\":\"+h.lineno+\": \"+h.message),h},D&&(e.on(\"message\",function(h){e.onmessage({data:h})}),e.on(\"error\",function(h){e.onerror(h)}));var o=[],u=[\"onExit\",\"onAbort\",\"print\",\"printErr\"],g;for(g of u)i.hasOwnProperty(g)&&o.push(g);e.postMessage({cmd:\"load\",handlers:o,urlOrBlob:i.mainScriptUrlOrBlob||l,wasmMemory:R,wasmModule:Pe})}),jb:function(e){e()},eb:function(){var e=fe(\"ort-wasm-threaded.worker.js\");e=new Worker(e),C.Sa.push(e)},gb:function(){return C.Sa.length==0&&(C.eb(),C.kb(C.Sa[0])),C.Sa.pop()}};i.PThread=C;var We=e=>{for(;0<e.length;)e.shift()(i)};i.establishStackSpace=function(){var e=gt(),t=d()[e+52>>2>>>0];e=d()[e+56>>2>>>0],fr(t,t-e),ht(t)};function Ke(e){if(S)return Y(2,0,e);Ye(e)}var De=[],et=e=>{var t=De[e];return t||(e>=De.length&&(De.length=e+1),De[e]=t=K.get(e)),t};i.invokeEntryPoint=function(e,t){e=et(e)(t),ve()?C.Ya(e):Et(e)};function ct(e){this.Va=e-24,this.cb=function(t){v()[this.Va+4>>2>>>0]=t},this.bb=function(t){v()[this.Va+8>>2>>>0]=t},this.Wa=function(t,o){this.ab(),this.cb(t),this.bb(o)},this.ab=function(){v()[this.Va+16>>2>>>0]=0}}var dt=0,$e=0;function tt(e,t,o,u){return S?Y(3,1,e,t,o,u):r(e,t,o,u)}function r(e,t,o,u){if(e>>>=0,t>>>=0,o>>>=0,u>>>=0,typeof SharedArrayBuffer>\"u\")return ae(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;var g=[];return S&&g.length===0?tt(e,t,o,u):(e={nb:o,Oa:e,fb:u,tb:g},S?(e.vb=\"spawnThread\",postMessage(e,g),0):ft(e))}function a(e,t,o){return S?Y(4,1,e,t,o):0}function s(e,t){if(S)return Y(5,1,e,t)}var f=e=>{for(var t=0,o=0;o<e.length;++o){var u=e.charCodeAt(o);127>=u?t++:2047>=u?t+=2:55296<=u&&57343>=u?(t+=4,++o):t+=3}return t},O=(e,t,o,u)=>{if(o>>>=0,!(0<u))return 0;var g=o;u=o+u-1;for(var h=0;h<e.length;++h){var _=e.charCodeAt(h);if(55296<=_&&57343>=_){var W=e.charCodeAt(++h);_=65536+((_&1023)<<10)|W&1023}if(127>=_){if(o>=u)break;t[o++>>>0]=_}else{if(2047>=_){if(o+1>=u)break;t[o++>>>0]=192|_>>6}else{if(65535>=_){if(o+2>=u)break;t[o++>>>0]=224|_>>12}else{if(o+3>=u)break;t[o++>>>0]=240|_>>18,t[o++>>>0]=128|_>>12&63}t[o++>>>0]=128|_>>6&63}t[o++>>>0]=128|_&63}}return t[o>>>0]=0,o-g},b=(e,t,o)=>O(e,w(),t,o);function M(e,t){if(S)return Y(6,1,e,t)}function N(e,t,o){if(S)return Y(7,1,e,t,o)}function oe(e,t,o){return S?Y(8,1,e,t,o):0}function ie(e,t){if(S)return Y(9,1,e,t)}function se(e,t,o){if(S)return Y(10,1,e,t,o)}function rt(e,t,o,u){if(S)return Y(11,1,e,t,o,u)}function nt(e,t,o,u){if(S)return Y(12,1,e,t,o,u)}function p(e,t,o,u){if(S)return Y(13,1,e,t,o,u)}function L(e){if(S)return Y(14,1,e)}function j(e,t){if(S)return Y(15,1,e,t)}function Te(e,t,o){if(S)return Y(16,1,e,t,o)}var pt=e=>{if(!Z)try{if(e(),!ve())try{S?Et(le):Ye(le)}catch(t){t instanceof Ge||t==\"unwind\"||U(1,t)}}catch(t){t instanceof Ge||t==\"unwind\"||U(1,t)}};function wt(e){e>>>=0,typeof Atomics.ub==\"function\"&&(Atomics.ub(d(),e>>2,e).value.then(mt),e+=128,Atomics.store(d(),e>>2,1))}i.__emscripten_thread_mailbox_await=wt;function mt(){var e=gt();e&&(wt(e),pt(()=>ur()))}i.checkMailbox=mt;var Ve=e=>e%4===0&&(e%100!==0||e%400===0),zt=[0,31,60,91,121,152,182,213,244,274,305,335],Gt=[0,31,59,90,120,151,181,212,243,273,304,334];function jt(e,t,o,u,g,h,_,W){return S?Y(17,1,e,t,o,u,g,h,_,W):-52}function Yt(e,t,o,u,g,h,_){if(S)return Y(18,1,e,t,o,u,g,h,_)}var $t=e=>{var t=f(e)+1,o=or(t);return o&&b(e,o,t),o},Yr=e=>{var t=Tt();return e=e(),ht(t),e};function Y(e,t){var o=arguments.length-2,u=arguments;return Yr(()=>{for(var g=Mt(8*o),h=g>>3,_=0;_<o;_++){var W=u[2+_];y()[h+_>>>0]=W}return sr(e,o,g,t)})}var _t=[],bt={},Vt=()=>{if(!vt){var e={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:H||\"./this.program\"},t;for(t in bt)bt[t]===void 0?delete e[t]:e[t]=bt[t];var o=[];for(t in e)o.push(`${t}=${e[t]}`);vt=o}return vt},vt;function qt(e,t){if(S)return Y(19,1,e,t);e>>>=0,t>>>=0;var o=0;return Vt().forEach(function(u,g){var h=t+o;for(g=v()[e+4*g>>2>>>0]=h,h=0;h<u.length;++h)n()[g++>>0>>>0]=u.charCodeAt(h);n()[g>>0>>>0]=0,o+=u.length+1}),0}function Jt(e,t){if(S)return Y(20,1,e,t);e>>>=0,t>>>=0;var o=Vt();v()[e>>2>>>0]=o.length;var u=0;return o.forEach(function(g){u+=g.length+1}),v()[t>>2>>>0]=u,0}function Xt(e){return S?Y(21,1,e):52}function Qt(e,t,o,u){return S?Y(22,1,e,t,o,u):52}function Zt(e,t,o,u,g){return S?Y(23,1,e,t,o,u,g):70}var $r=[null,[],[]];function Kt(e,t,o,u){if(S)return Y(24,1,e,t,o,u);t>>>=0,o>>>=0,u>>>=0;for(var g=0,h=0;h<o;h++){var _=v()[t>>2>>>0],W=v()[t+4>>2>>>0];t+=8;for(var ye=0;ye<W;ye++){var ne=w()[_+ye>>>0],de=$r[e];ne===0||ne===10?((e===1?te:ae)(Ce(de,0)),de.length=0):de.push(ne)}g+=W}return v()[u>>2>>>0]=g,0}var er=[31,29,31,30,31,30,31,31,30,31,30,31],tr=[31,28,31,30,31,30,31,31,30,31,30,31];function Vr(e){var t=Array(f(e)+1);return O(e,t,0,t.length),t}var qr=(e,t)=>{n().set(e,t>>>0)};function rr(e,t,o,u){function g(m,z,$){for(m=typeof m==\"number\"?m.toString():m||\"\";m.length<z;)m=$[0]+m;return m}function h(m,z){return g(m,z,\"0\")}function _(m,z){function $(mr){return 0>mr?-1:0<mr?1:0}var Le;return(Le=$(m.getFullYear()-z.getFullYear()))===0&&(Le=$(m.getMonth()-z.getMonth()))===0&&(Le=$(m.getDate()-z.getDate())),Le}function W(m){switch(m.getDay()){case 0:return new Date(m.getFullYear()-1,11,29);case 1:return m;case 2:return new Date(m.getFullYear(),0,3);case 3:return new Date(m.getFullYear(),0,2);case 4:return new Date(m.getFullYear(),0,1);case 5:return new Date(m.getFullYear()-1,11,31);case 6:return new Date(m.getFullYear()-1,11,30)}}function ye(m){var z=m.Qa;for(m=new Date(new Date(m.Ra+1900,0,1).getTime());0<z;){var $=m.getMonth(),Le=(Ve(m.getFullYear())?er:tr)[$];if(z>Le-m.getDate())z-=Le-m.getDate()+1,m.setDate(1),11>$?m.setMonth($+1):(m.setMonth(0),m.setFullYear(m.getFullYear()+1));else{m.setDate(m.getDate()+z);break}}return $=new Date(m.getFullYear()+1,0,4),z=W(new Date(m.getFullYear(),0,4)),$=W($),0>=_(z,m)?0>=_($,m)?m.getFullYear()+1:m.getFullYear():m.getFullYear()-1}e>>>=0,t>>>=0,o>>>=0,u>>>=0;var ne=d()[u+40>>2>>>0];u={rb:d()[u>>2>>>0],qb:d()[u+4>>2>>>0],Ta:d()[u+8>>2>>>0],Xa:d()[u+12>>2>>>0],Ua:d()[u+16>>2>>>0],Ra:d()[u+20>>2>>>0],Na:d()[u+24>>2>>>0],Qa:d()[u+28>>2>>>0],zb:d()[u+32>>2>>>0],pb:d()[u+36>>2>>>0],sb:ne?Ee(ne):\"\"},o=Ee(o),ne={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var de in ne)o=o.replace(new RegExp(de,\"g\"),ne[de]);var dr=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),pr=\"January February March April May June July August September October November December\".split(\" \");ne={\"%a\":m=>dr[m.Na].substring(0,3),\"%A\":m=>dr[m.Na],\"%b\":m=>pr[m.Ua].substring(0,3),\"%B\":m=>pr[m.Ua],\"%C\":m=>h((m.Ra+1900)/100|0,2),\"%d\":m=>h(m.Xa,2),\"%e\":m=>g(m.Xa,2,\" \"),\"%g\":m=>ye(m).toString().substring(2),\"%G\":m=>ye(m),\"%H\":m=>h(m.Ta,2),\"%I\":m=>(m=m.Ta,m==0?m=12:12<m&&(m-=12),h(m,2)),\"%j\":m=>{for(var z=0,$=0;$<=m.Ua-1;z+=(Ve(m.Ra+1900)?er:tr)[$++]);return h(m.Xa+z,3)},\"%m\":m=>h(m.Ua+1,2),\"%M\":m=>h(m.qb,2),\"%n\":()=>`\n`,\"%p\":m=>0<=m.Ta&&12>m.Ta?\"AM\":\"PM\",\"%S\":m=>h(m.rb,2),\"%t\":()=>\"\t\",\"%u\":m=>m.Na||7,\"%U\":m=>h(Math.floor((m.Qa+7-m.Na)/7),2),\"%V\":m=>{var z=Math.floor((m.Qa+7-(m.Na+6)%7)/7);if(2>=(m.Na+371-m.Qa-2)%7&&z++,z)z==53&&($=(m.Na+371-m.Qa)%7,$==4||$==3&&Ve(m.Ra)||(z=1));else{z=52;var $=(m.Na+7-m.Qa-1)%7;($==4||$==5&&Ve(m.Ra%400-1))&&z++}return h(z,2)},\"%w\":m=>m.Na,\"%W\":m=>h(Math.floor((m.Qa+7-(m.Na+6)%7)/7),2),\"%y\":m=>(m.Ra+1900).toString().substring(2),\"%Y\":m=>m.Ra+1900,\"%z\":m=>{m=m.pb;var z=0<=m;return m=Math.abs(m)/60,(z?\"+\":\"-\")+(\"0000\"+(m/60*100+m%60)).slice(-4)},\"%Z\":m=>m.sb,\"%%\":()=>\"%\"},o=o.replace(/%%/g,\"\\0\\0\");for(de in ne)o.includes(de)&&(o=o.replace(new RegExp(de,\"g\"),ne[de](u)));return o=o.replace(/\\0\\0/g,\"%\"),de=Vr(o),de.length>t?0:(qr(de,e),de.length-1)}var qe=void 0,nr=[];function ar(e,t){if(!qe){qe=new WeakMap;var o=K.length;if(qe)for(var u=0;u<0+o;u++){var g=et(u);g&&qe.set(g,u)}}if(o=qe.get(e)||0)return o;if(nr.length)o=nr.pop();else{try{K.grow(1)}catch(W){throw W instanceof RangeError?\"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\":W}o=K.length-1}try{u=o,K.set(u,e),De[u]=K.get(u)}catch(W){if(!(W instanceof TypeError))throw W;if(typeof WebAssembly.Function==\"function\"){u=WebAssembly.Function,g={i:\"i32\",j:\"i64\",f:\"f32\",d:\"f64\",p:\"i32\"};for(var h={parameters:[],results:t[0]==\"v\"?[]:[g[t[0]]]},_=1;_<t.length;++_)h.parameters.push(g[t[_]]);t=new u(h,e)}else{for(u=[1],g=t.slice(0,1),t=t.slice(1),h={i:127,p:127,j:126,f:125,d:124},u.push(96),_=t.length,128>_?u.push(_):u.push(_%128|128,_>>7),_=0;_<t.length;++_)u.push(h[t[_]]);g==\"v\"?u.push(0):u.push(1,h[g]),t=[0,97,115,109,1,0,0,0,1],g=u.length,128>g?t.push(g):t.push(g%128|128,g>>7),t.push.apply(t,u),t.push(2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0),t=new WebAssembly.Module(new Uint8Array(t)),t=new WebAssembly.Instance(t,{e:{f:e}}).exports.f}u=o,K.set(u,t),De[u]=K.get(u)}return qe.set(e,o),o}C.Wa();var Jr=[null,Ze,Ke,tt,a,s,M,N,oe,ie,se,rt,nt,p,L,j,Te,jt,Yt,qt,Jt,Xt,Qt,Zt,Kt],Xr={b:function(e,t,o){throw e>>>=0,new ct(e).Wa(t>>>0,o>>>0),dt=e,$e++,dt},N:function(e){ir(e>>>0,!k,1,!P,131072,!1),C.Za()},k:function(e){e>>>=0,S?postMessage({cmd:\"cleanupThread\",thread:e}):Xe(e)},I:r,h:a,T:s,D:M,F:N,U:oe,R:ie,J:se,Q:rt,o:nt,E:p,B:L,S:j,C:Te,q:()=>!0,z:function(e,t){e>>>=0,e==t>>>0?setTimeout(()=>mt()):S?postMessage({targetThread:e,cmd:\"checkMailbox\"}):(e=C.Ma[e])&&e.postMessage({cmd:\"checkMailbox\"})},L:function(){return-1},M:wt,p:function(e){D&&C.Ma[e>>>0].ref()},t:function(e,t,o){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,o>>>=0,e=new Date(1e3*e),d()[o>>2>>>0]=e.getUTCSeconds(),d()[o+4>>2>>>0]=e.getUTCMinutes(),d()[o+8>>2>>>0]=e.getUTCHours(),d()[o+12>>2>>>0]=e.getUTCDate(),d()[o+16>>2>>>0]=e.getUTCMonth(),d()[o+20>>2>>>0]=e.getUTCFullYear()-1900,d()[o+24>>2>>>0]=e.getUTCDay(),e=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,d()[o+28>>2>>>0]=e},u:function(e,t,o){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,o>>>=0,e=new Date(1e3*e),d()[o>>2>>>0]=e.getSeconds(),d()[o+4>>2>>>0]=e.getMinutes(),d()[o+8>>2>>>0]=e.getHours(),d()[o+12>>2>>>0]=e.getDate(),d()[o+16>>2>>>0]=e.getMonth(),d()[o+20>>2>>>0]=e.getFullYear()-1900,d()[o+24>>2>>>0]=e.getDay(),t=(Ve(e.getFullYear())?zt:Gt)[e.getMonth()]+e.getDate()-1|0,d()[o+28>>2>>>0]=t,d()[o+36>>2>>>0]=-(60*e.getTimezoneOffset()),t=new Date(e.getFullYear(),6,1).getTimezoneOffset();var u=new Date(e.getFullYear(),0,1).getTimezoneOffset();e=(t!=u&&e.getTimezoneOffset()==Math.min(u,t))|0,d()[o+32>>2>>>0]=e},v:function(e){e>>>=0;var t=new Date(d()[e+20>>2>>>0]+1900,d()[e+16>>2>>>0],d()[e+12>>2>>>0],d()[e+8>>2>>>0],d()[e+4>>2>>>0],d()[e>>2>>>0],0),o=d()[e+32>>2>>>0],u=t.getTimezoneOffset(),g=new Date(t.getFullYear(),6,1).getTimezoneOffset(),h=new Date(t.getFullYear(),0,1).getTimezoneOffset(),_=Math.min(h,g);return 0>o?d()[e+32>>2>>>0]=+(g!=h&&_==u):0<o!=(_==u)&&(g=Math.max(h,g),t.setTime(t.getTime()+6e4*((0<o?_:g)-u))),d()[e+24>>2>>>0]=t.getDay(),o=(Ve(t.getFullYear())?zt:Gt)[t.getMonth()]+t.getDate()-1|0,d()[e+28>>2>>>0]=o,d()[e>>2>>>0]=t.getSeconds(),d()[e+4>>2>>>0]=t.getMinutes(),d()[e+8>>2>>>0]=t.getHours(),d()[e+12>>2>>>0]=t.getDate(),d()[e+16>>2>>>0]=t.getMonth(),d()[e+20>>2>>>0]=t.getYear(),e=t.getTime()/1e3,lr((Se=e,1<=+Math.abs(Se)?0<Se?+Math.floor(Se/4294967296)>>>0:~~+Math.ceil((Se-+(~~Se>>>0))/4294967296)>>>0:0)),e>>>0},r:jt,s:Yt,y:function(e,t,o){function u(ne){return(ne=ne.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?ne[1]:\"GMT\"}e>>>=0,t>>>=0,o>>>=0;var g=new Date().getFullYear(),h=new Date(g,0,1),_=new Date(g,6,1);g=h.getTimezoneOffset();var W=_.getTimezoneOffset(),ye=Math.max(g,W);v()[e>>2>>>0]=60*ye,d()[t>>2>>>0]=+(g!=W),e=u(h),t=u(_),e=$t(e),t=$t(t),W<g?(v()[o>>2>>>0]=e,v()[o+4>>2>>>0]=t):(v()[o>>2>>>0]=t,v()[o+4>>2>>>0]=e)},c:()=>{Me(\"\")},l:function(){},i:function(){return Date.now()},V:()=>{throw re+=1,\"unwind\"},A:function(){return 4294901760},e:()=>performance.timeOrigin+performance.now(),f:function(){return D?(br(),ot(_r)).cpus().length:navigator.hardwareConcurrency},K:function(e,t,o,u){for(C.wb=t>>>0,_t.length=o,t=u>>>0>>3,u=0;u<o;u++)_t[u]=y()[t+u>>>0];return Jr[e].apply(null,_t)},x:function(e){e>>>=0;var t=w().length;if(e<=t||4294901760<e)return!1;for(var o=1;4>=o;o*=2){var u=t*(1+.2/o);u=Math.min(u,e+100663296);var g=Math;u=Math.max(e,u);e:{g=g.min.call(g,4294901760,u+(65536-u%65536)%65536)-R.buffer.byteLength+65535>>>16;try{R.grow(g),me();var h=1;break e}catch{}h=void 0}if(h)return!0}return!1},O:qt,P:Jt,H:Ye,g:Xt,n:Qt,w:Zt,m:Kt,a:R||i.wasmMemory,G:rr,d:function(e,t,o,u){return rr(e>>>0,t>>>0,o>>>0,u>>>0)},j:function(e,t,o,u){let g=K.length;e=new Uint8Array(w().slice(e+t,e+o));try{var h=new WebAssembly.Module(e),_=new WebAssembly.Instance(h,{env:{memory:R}}),W;for(W in _.exports)ar(_.exports[W]);return g<K.length?g:u}catch(ye){return console.log(ye),u}}};(function(){function e(o,u){return o=o.exports,T=o=Qr(o),C.$a.push(T.za),K=T.Aa,ge.unshift(T.W),Pe=u,ke(),o}var t={a:Xr};if(He(),i.instantiateWasm)try{return i.instantiateWasm(t,e)}catch(o){ae(\"Module.instantiateWasm callback failed with error: \"+o),F(o)}return lt(t,function(o){e(o.instance,o.module)}).catch(F),{}})(),i._OrtInit=(e,t)=>(i._OrtInit=T.X)(e,t),i._OrtGetLastError=(e,t)=>(i._OrtGetLastError=T.Y)(e,t),i._OrtCreateSessionOptions=(e,t,o,u,g,h,_,W,ye,ne)=>(i._OrtCreateSessionOptions=T.Z)(e,t,o,u,g,h,_,W,ye,ne),i._OrtAppendExecutionProvider=(e,t)=>(i._OrtAppendExecutionProvider=T._)(e,t),i._OrtAddFreeDimensionOverride=(e,t,o)=>(i._OrtAddFreeDimensionOverride=T.$)(e,t,o),i._OrtAddSessionConfigEntry=(e,t,o)=>(i._OrtAddSessionConfigEntry=T.aa)(e,t,o),i._OrtReleaseSessionOptions=e=>(i._OrtReleaseSessionOptions=T.ba)(e),i._OrtCreateSession=(e,t,o)=>(i._OrtCreateSession=T.ca)(e,t,o),i._OrtReleaseSession=e=>(i._OrtReleaseSession=T.da)(e),i._OrtGetInputOutputCount=(e,t,o)=>(i._OrtGetInputOutputCount=T.ea)(e,t,o),i._OrtGetInputName=(e,t)=>(i._OrtGetInputName=T.fa)(e,t),i._OrtGetOutputName=(e,t)=>(i._OrtGetOutputName=T.ga)(e,t),i._OrtFree=e=>(i._OrtFree=T.ha)(e),i._OrtCreateTensor=(e,t,o,u,g,h)=>(i._OrtCreateTensor=T.ia)(e,t,o,u,g,h),i._OrtGetTensorData=(e,t,o,u,g)=>(i._OrtGetTensorData=T.ja)(e,t,o,u,g),i._OrtReleaseTensor=e=>(i._OrtReleaseTensor=T.ka)(e),i._OrtCreateRunOptions=(e,t,o,u)=>(i._OrtCreateRunOptions=T.la)(e,t,o,u),i._OrtAddRunConfigEntry=(e,t,o)=>(i._OrtAddRunConfigEntry=T.ma)(e,t,o),i._OrtReleaseRunOptions=e=>(i._OrtReleaseRunOptions=T.na)(e),i._OrtCreateBinding=e=>(i._OrtCreateBinding=T.oa)(e),i._OrtBindInput=(e,t,o)=>(i._OrtBindInput=T.pa)(e,t,o),i._OrtBindOutput=(e,t,o,u)=>(i._OrtBindOutput=T.qa)(e,t,o,u),i._OrtClearBoundOutputs=e=>(i._OrtClearBoundOutputs=T.ra)(e),i._OrtReleaseBinding=e=>(i._OrtReleaseBinding=T.sa)(e),i._OrtRunWithBinding=(e,t,o,u,g)=>(i._OrtRunWithBinding=T.ta)(e,t,o,u,g),i._OrtRun=(e,t,o,u,g,h,_,W)=>(i._OrtRun=T.ua)(e,t,o,u,g,h,_,W),i._OrtEndProfiling=e=>(i._OrtEndProfiling=T.va)(e);var gt=i._pthread_self=()=>(gt=i._pthread_self=T.wa)(),or=i._malloc=e=>(or=i._malloc=T.xa)(e);i._free=e=>(i._free=T.ya)(e),i.__emscripten_tls_init=()=>(i.__emscripten_tls_init=T.za)();var ir=i.__emscripten_thread_init=(e,t,o,u,g,h)=>(ir=i.__emscripten_thread_init=T.Ba)(e,t,o,u,g,h);i.__emscripten_thread_crashed=()=>(i.__emscripten_thread_crashed=T.Ca)();var sr=(e,t,o,u)=>(sr=T.Da)(e,t,o,u),St=e=>(St=T.Ea)(e),Et=i.__emscripten_thread_exit=e=>(Et=i.__emscripten_thread_exit=T.Fa)(e),ur=i.__emscripten_check_mailbox=()=>(ur=i.__emscripten_check_mailbox=T.Ga)(),lr=e=>(lr=T.Ha)(e),fr=(e,t)=>(fr=T.Ia)(e,t),Tt=()=>(Tt=T.Ja)(),ht=e=>(ht=T.Ka)(e),Mt=e=>(Mt=T.La)(e);i.___start_em_js=906844,i.___stop_em_js=907456;function Qr(e){e=Object.assign({},e);var t=u=>()=>u()>>>0,o=u=>g=>u(g)>>>0;return e.__errno_location=t(e.__errno_location),e.pthread_self=t(e.pthread_self),e.malloc=o(e.malloc),e.stackSave=t(e.stackSave),e.stackAlloc=o(e.stackAlloc),e}i.keepRuntimeAlive=ve,i.wasmMemory=R,i.stackAlloc=Mt,i.stackSave=Tt,i.stackRestore=ht,i.addFunction=ar,i.UTF8ToString=Ee,i.stringToUTF8=b,i.lengthBytesUTF8=f,i.ExitStatus=Ge,i.PThread=C;var yt;Ue=function e(){yt||cr(),yt||(Ue=e)};function cr(){function e(){if(!yt&&(yt=!0,i.calledRun=!0,!Z)&&(S||We(ge),I(i),i.onRuntimeInitialized&&i.onRuntimeInitialized(),!S)){if(i.postRun)for(typeof i.postRun==\"function\"&&(i.postRun=[i.postRun]);i.postRun.length;){var t=i.postRun.shift();ee.unshift(t)}We(ee)}}if(!(0<he))if(S)I(i),S||We(ge),startWorker(i);else{if(i.preRun)for(typeof i.preRun==\"function\"&&(i.preRun=[i.preRun]);i.preRun.length;)be.unshift(i.preRun.shift());We(be),0<he||(i.setStatus?(i.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){i.setStatus(\"\")},1),e()},1)):e())}}if(i.preInit)for(typeof i.preInit==\"function\"&&(i.preInit=[i.preInit]);0<i.preInit.length;)i.preInit.pop()();return cr(),c.ready}})();typeof Sr==\"object\"&&typeof Pt==\"object\"?Pt.exports=vr:typeof define==\"function\"&&define.amd&&define([],()=>vr)});var Tr=at((vn,on)=>{on.exports='\"use strict\";var Module={},ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require(\"worker_threads\"),parentPort=nodeWorkerThreads.parentPort;parentPort.on(\"message\",e=>onmessage({data:e}));var fs=require(\"fs\");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>(0,eval)(fs.readFileSync(e,\"utf8\")+\"//# sourceURL=\"+e),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(\" \");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(\" \");postMessage({cmd:\"alert\",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason??e};function handleMessage(e){try{if(e.data.cmd===\"load\"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:\"loaded\"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:\"callHandler\",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob==\"string\")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd===\"run\"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!=\"unwind\")throw a}}else e.data.cmd===\"cancel\"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target===\"setimmediate\"||(e.data.cmd===\"checkMailbox\"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(\"worker.js received unknown command \"+e.data.cmd),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed&&Module.__emscripten_thread_crashed(),a}}self.onmessage=handleMessage;\\n'});var Ar;Ar=yr();var sn=Er(),Wt,Lt=!1,Ot=!1,Mr=!1,un=()=>{try{return typeof SharedArrayBuffer>\"u\"?!1:(typeof MessageChannel<\"u\"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch{return!1}},ln=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},fn=(l,c)=>l?\"ort-training-wasm-simd.wasm\":c?\"ort-wasm-threaded.wasm\":\"ort-wasm.wasm\",Rr=async l=>{if(Lt)return Promise.resolve();if(Ot)throw new Error(\"multiple calls to 'initializeWebAssembly()' detected.\");if(Mr)throw new Error(\"previous call to 'initializeWebAssembly()' failed.\");Ot=!0;let c=l.initTimeout,n=l.numThreads,w=l.simd,d=n>1&&un(),v=w&&ln(),y=l.wasmPaths,i=typeof y==\"string\"?y:void 0,I=fn(v,d),F=typeof y==\"object\"?y[I]:void 0,x=!1,H=[];if(c>0&&H.push(new Promise(U=>{setTimeout(()=>{x=!0,U()},c)})),H.push(new Promise((U,P)=>{let k=d?sn:Ar,D={locateFile:(S,B)=>d&&S.endsWith(\".worker.js\")&&typeof Blob<\"u\"?URL.createObjectURL(new Blob([Tr()],{type:\"text/javascript\"})):S.endsWith(\".wasm\")?F||(i??B)+I:B+S};if(d)if(typeof Blob>\"u\")D.mainScriptUrlOrBlob=(void 0)(__dirname,\"ort-wasm-threaded.js\");else{let S=`var ortWasmThreaded=${k.toString()};`;D.mainScriptUrlOrBlob=new Blob([S],{type:\"text/javascript\"})}k(D).then(S=>{Ot=!1,Lt=!0,Wt=S,U()},S=>{Ot=!1,Mr=!0,P(S)})})),await Promise.race(H),x)throw new Error(`WebAssembly backend initializing failed due to timeout: ${c}ms`)},J=()=>{if(Lt&&Wt)return Wt;throw new Error(\"WebAssembly is not initialized yet.\")};var X=(l,c)=>{let n=J(),w=n.lengthBytesUTF8(l)+1,d=n._malloc(w);return n.stringToUTF8(l,d,w),c.push(d),d},it=(l,c,n,w)=>{if(typeof l==\"object\"&&l!==null){if(n.has(l))throw new Error(\"Circular reference in options\");n.add(l)}Object.entries(l).forEach(([d,v])=>{let y=c?c+d:d;if(typeof v==\"object\")it(v,y+\".\",n,w);else if(typeof v==\"string\"||typeof v==\"number\")w(y,v.toString());else if(typeof v==\"boolean\")w(y,v?\"1\":\"0\");else throw new Error(`Can't handle extra config type: ${typeof v}`)})},V=l=>{let c=J(),n=c.stackSave();try{let w=c.stackAlloc(8);c._OrtGetLastError(w,w+4);let d=c.HEAP32[w/4],v=c.HEAPU32[w/4+1],y=v?c.UTF8ToString(v):\"\";throw new Error(`${l} ERROR_CODE: ${d}, ERROR_MESSAGE: ${y}`)}finally{c.stackRestore(n)}};var Cr=l=>{let c=J(),n=0,w=[],d=l||{};try{if(l?.logSeverityLevel===void 0)d.logSeverityLevel=2;else if(typeof l.logSeverityLevel!=\"number\"||!Number.isInteger(l.logSeverityLevel)||l.logSeverityLevel<0||l.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${l.logSeverityLevel}`);if(l?.logVerbosityLevel===void 0)d.logVerbosityLevel=0;else if(typeof l.logVerbosityLevel!=\"number\"||!Number.isInteger(l.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${l.logVerbosityLevel}`);l?.terminate===void 0&&(d.terminate=!1);let v=0;return l?.tag!==void 0&&(v=X(l.tag,w)),n=c._OrtCreateRunOptions(d.logSeverityLevel,d.logVerbosityLevel,!!d.terminate,v),n===0&&V(\"Can't create run options.\"),l?.extra!==void 0&&it(l.extra,\"\",new WeakSet,(y,i)=>{let I=X(y,w),F=X(i,w);c._OrtAddRunConfigEntry(n,I,F)!==0&&V(`Can't set a run config entry: ${y} - ${i}.`)}),[n,w]}catch(v){throw n!==0&&c._OrtReleaseRunOptions(n),w.forEach(y=>c._free(y)),v}};var cn=l=>{switch(l){case\"disabled\":return 0;case\"basic\":return 1;case\"extended\":return 2;case\"all\":return 99;default:throw new Error(`unsupported graph optimization level: ${l}`)}},dn=l=>{switch(l){case\"sequential\":return 0;case\"parallel\":return 1;default:throw new Error(`unsupported execution mode: ${l}`)}},pn=l=>{l.extra||(l.extra={}),l.extra.session||(l.extra.session={});let c=l.extra.session;c.use_ort_model_bytes_directly||(c.use_ort_model_bytes_directly=\"1\"),l.executionProviders&&l.executionProviders.some(n=>(typeof n==\"string\"?n:n.name)===\"webgpu\")&&(l.enableMemPattern=!1)},mn=(l,c,n)=>{for(let w of c){let d=typeof w==\"string\"?w:w.name;switch(d){case\"xnnpack\":d=\"XNNPACK\";break;case\"webnn\":if(d=\"WEBNN\",typeof w!=\"string\"){let y=w;if(y?.deviceType){let i=X(\"deviceType\",n),I=X(y.deviceType,n);J()._OrtAddSessionConfigEntry(l,i,I)!==0&&V(`Can't set a session config entry: 'deviceType' - ${y.deviceType}.`)}if(y?.numThreads){let i=y.numThreads;(typeof i!=\"number\"||!Number.isInteger(i)||i<0)&&(i=0);let I=X(\"numThreads\",n),F=X(i.toString(),n);J()._OrtAddSessionConfigEntry(l,I,F)!==0&&V(`Can't set a session config entry: 'numThreads' - ${y.numThreads}.`)}if(y?.powerPreference){let i=X(\"powerPreference\",n),I=X(y.powerPreference,n);J()._OrtAddSessionConfigEntry(l,i,I)!==0&&V(`Can't set a session config entry: 'powerPreference' - ${y.powerPreference}.`)}}break;case\"webgpu\":if(d=\"JS\",typeof w!=\"string\"){let y=w;if(y?.preferredLayout){if(y.preferredLayout!==\"NCHW\"&&y.preferredLayout!==\"NHWC\")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${y.preferredLayout}`);let i=X(\"preferredLayout\",n),I=X(y.preferredLayout,n);J()._OrtAddSessionConfigEntry(l,i,I)!==0&&V(`Can't set a session config entry: 'preferredLayout' - ${y.preferredLayout}.`)}}break;case\"wasm\":case\"cpu\":continue;default:throw new Error(`not supported execution provider: ${d}`)}let v=X(d,n);J()._OrtAppendExecutionProvider(l,v)!==0&&V(`Can't append execution provider: ${d}.`)}},Dr=l=>{let c=J(),n=0,w=[],d=l||{};pn(d);try{let v=cn(d.graphOptimizationLevel??\"all\"),y=dn(d.executionMode??\"sequential\"),i=typeof d.logId==\"string\"?X(d.logId,w):0,I=d.logSeverityLevel??2;if(!Number.isInteger(I)||I<0||I>4)throw new Error(`log serverity level is not valid: ${I}`);let F=d.logVerbosityLevel??0;if(!Number.isInteger(F)||F<0||F>4)throw new Error(`log verbosity level is not valid: ${F}`);let x=typeof d.optimizedModelFilePath==\"string\"?X(d.optimizedModelFilePath,w):0;if(n=c._OrtCreateSessionOptions(v,!!d.enableCpuMemArena,!!d.enableMemPattern,y,!!d.enableProfiling,0,i,I,F,x),n===0&&V(\"Can't create session options.\"),d.executionProviders&&mn(n,d.executionProviders,w),d.freeDimensionOverrides)for(let[H,U]of Object.entries(d.freeDimensionOverrides)){if(typeof H!=\"string\")throw new Error(`free dimension override name must be a string: ${H}`);if(typeof U!=\"number\"||!Number.isInteger(U)||U<0)throw new Error(`free dimension override value must be a non-negative integer: ${U}`);let P=X(H,w);c._OrtAddFreeDimensionOverride(n,P,U)!==0&&V(`Can't set a free dimension override: ${H} - ${U}.`)}return d.extra!==void 0&&it(d.extra,\"\",new WeakSet,(H,U)=>{let P=X(H,w),k=X(U,w);c._OrtAddSessionConfigEntry(n,P,k)!==0&&V(`Can't set a session config entry: ${H} - ${U}.`)}),[n,w]}catch(v){throw n!==0&&c._OrtReleaseSessionOptions(n),w.forEach(y=>c._free(y)),v}};var Bt=l=>{switch(l){case\"int8\":return 3;case\"uint8\":return 2;case\"bool\":return 9;case\"int16\":return 5;case\"uint16\":return 4;case\"int32\":return 6;case\"uint32\":return 12;case\"float16\":return 10;case\"float32\":return 1;case\"float64\":return 11;case\"string\":return 8;case\"int64\":return 7;case\"uint64\":return 13;default:throw new Error(`unsupported data type: ${l}`)}},Ir=l=>{switch(l){case 3:return\"int8\";case 2:return\"uint8\";case 9:return\"bool\";case 5:return\"int16\";case 4:return\"uint16\";case 6:return\"int32\";case 12:return\"uint32\";case 10:return\"float16\";case 1:return\"float32\";case 11:return\"float64\";case 8:return\"string\";case 7:return\"int64\";case 13:return\"uint64\";default:throw new Error(`unsupported data type: ${l}`)}},Nt=l=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][l],Fr=l=>{switch(l){case\"float16\":return Uint16Array;case\"float32\":return Float32Array;case\"uint8\":return Uint8Array;case\"int8\":return Int8Array;case\"uint16\":return Uint16Array;case\"int16\":return Int16Array;case\"int32\":return Int32Array;case\"bool\":return Uint8Array;case\"float64\":return Float64Array;case\"uint32\":return Uint32Array;case\"int64\":return BigInt64Array;case\"uint64\":return BigUint64Array;default:throw new Error(`unsupported type: ${l}`)}},xr=l=>{switch(l){case\"verbose\":return 0;case\"info\":return 1;case\"warning\":return 2;case\"error\":return 3;case\"fatal\":return 4;default:throw new Error(`unsupported logging level: ${l}`)}},Ur=l=>l===\"float32\"||l===\"int32\"||l===\"int64\"||l===\"bool\"||l===\"float16\"||l===\"uint32\",Pr=l=>{switch(l){case\"none\":return 0;case\"cpu\":return 1;case\"cpu-pinned\":return 2;case\"texture\":return 3;case\"gpu-buffer\":return 4;default:throw new Error(`unsupported data location: ${l}`)}};var Lr=!1,gn=l=>{let c=J(),n=c.stackSave();try{let w=c.stackAlloc(8);return c._OrtGetInputOutputCount(l,w,w+4)!==0&&V(\"Can't get session input/output count.\"),[c.HEAP32[w/4],c.HEAP32[w/4+1]]}finally{c.stackRestore(n)}},hn=(l,c)=>{J()._OrtInit(l,c)!==0&&V(\"Can't initialize onnxruntime.\")},Br=async l=>{hn(l.wasm.numThreads,xr(l.logLevel)),Lr=!0},st=new Map,Nr=()=>Lr,Ht=l=>{let c=J(),n=c._malloc(l.byteLength);if(n===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${l.byteLength}.`);return c.HEAPU8.set(l,n),[n,l.byteLength]},kt=(l,c)=>{let n=J(),w=0,d=0,v=0,y=[],i=[],I=[];try{[d,y]=Dr(c),w=n._OrtCreateSession(l[0],l[1],d),w===0&&V(\"Can't create a session.\");let[F,x]=gn(w),H=[],U=[],P=[];for(let D=0;D<F;D++){let S=n._OrtGetInputName(w,D);S===0&&V(\"Can't get an input name.\"),i.push(S),H.push(n.UTF8ToString(S))}for(let D=0;D<x;D++){let S=n._OrtGetOutputName(w,D);S===0&&V(\"Can't get an output name.\"),I.push(S);let B=n.UTF8ToString(S);U.push(B)}let k=null;return st.set(w,[w,i,I,k]),[w,H,U]}catch(F){throw i.forEach(x=>n._OrtFree(x)),I.forEach(x=>n._OrtFree(x)),v!==0&&n._OrtReleaseBinding(v),w!==0&&n._OrtReleaseSession(w),F}finally{n._free(l[0]),d!==0&&n._OrtReleaseSessionOptions(d),y.forEach(F=>n._free(F))}},Hr=(l,c)=>{let n=Ht(l);return kt(n,c)},kr=l=>{let c=J(),n=st.get(l);if(!n)throw new Error(`cannot release session. invalid session id: ${l}`);let[w,d,v,y]=n;y&&c._OrtReleaseBinding(y.handle),c.jsepUnregisterBuffers?.(l),d.forEach(i=>c._OrtFree(i)),v.forEach(i=>c._OrtFree(i)),c._OrtReleaseSession(w),st.delete(l)},Wr=(l,c,n,w,d)=>{if(!l){c.push(0);return}let v=J(),y=l[0],i=l[1],I=l[3],F,x;if(y===\"string\"&&I===\"gpu-buffer\")throw new Error(\"String tensor is not supported on GPU.\");if(I===\"gpu-buffer\"){let P=l[2].gpuBuffer,k=Nt(Bt(y));x=i.reduce((D,S)=>D*S,1)*k,F=v.jsepRegisterBuffer(w,d,P,x)}else{let P=l[2];if(Array.isArray(P)){x=4*P.length,F=v._malloc(x),n.push(F);let k=F/4;for(let D=0;D<P.length;D++){if(typeof P[D]!=\"string\")throw new TypeError(`tensor data at index ${D} is not a string`);v.HEAPU32[k++]=X(P[D],n)}}else x=P.byteLength,F=v._malloc(x),n.push(F),v.HEAPU8.set(new Uint8Array(P.buffer,P.byteOffset,x),F)}let H=v.stackSave(),U=v.stackAlloc(4*i.length);try{let P=U/4;i.forEach(D=>v.HEAP32[P++]=D);let k=v._OrtCreateTensor(Bt(y),F,x,U,i.length,Pr(I));k===0&&V(`Can't create tensor for input/output. session=${w}, index=${d}.`),c.push(k)}finally{v.stackRestore(H)}},zr=async(l,c,n,w,d,v)=>{let y=J(),i=st.get(l);if(!i)throw new Error(`cannot run inference. invalid session id: ${l}`);let[I,F,x,H]=i,U=c.length,P=w.length,k=0,D=[],S=[],B=[],fe=[],Be=y.stackSave(),pe=y.stackAlloc(U*4),E=y.stackAlloc(U*4),Oe=y.stackAlloc(P*4),we=y.stackAlloc(P*4);try{[k,D]=Cr(v);for(let R=0;R<U;R++)Wr(n[R],S,fe,l,c[R]);for(let R=0;R<P;R++)Wr(d[R],B,fe,l,U+w[R]);let q=pe/4,A=E/4,te=Oe/4,ae=we/4;for(let R=0;R<U;R++)y.HEAPU32[q++]=S[R],y.HEAPU32[A++]=F[c[R]];for(let R=0;R<P;R++)y.HEAPU32[te++]=B[R],y.HEAPU32[ae++]=x[w[R]];let Q;Q=await y._OrtRun(I,E,pe,U,we,P,Oe,k),Q!==0&&V(\"failed to call OrtRun().\");let _e=[];for(let R=0;R<P;R++){let T=y.HEAPU32[Oe/4+R];if(T===B[R]){_e.push(d[R]);continue}let Pe=y.stackSave(),Z=y.stackAlloc(4*4),le=!1,G,ue=0;try{y._OrtGetTensorData(T,Z,Z+4,Z+8,Z+12)!==0&&V(`Can't access output tensor data on index ${R}.`);let ce=Z/4,Ie=y.HEAPU32[ce++];ue=y.HEAPU32[ce++];let me=y.HEAPU32[ce++],Fe=y.HEAPU32[ce++],K=[];for(let ee=0;ee<Fe;ee++)K.push(y.HEAPU32[me/4+ee]);y._OrtFree(me);let be=K.reduce((ee,re)=>ee*re,1);G=Ir(Ie);let ge=H?.outputPreferredLocations[w[R]];if(G===\"string\"){if(ge===\"gpu-buffer\")throw new Error(\"String tensor is not supported on GPU.\");let ee=[],re=ue/4;for(let ve=0;ve<be;ve++){let he=y.HEAPU32[re++],xe=ve===be-1?void 0:y.HEAPU32[re]-he;ee.push(y.UTF8ToString(he,xe))}_e.push([G,K,ee,\"cpu\"])}else if(ge===\"gpu-buffer\"&&be>0){let ee=y.jsepGetBuffer(ue),re=Nt(Ie);if(re===void 0||!Ur(G))throw new Error(`Unsupported data type: ${G}`);le=!0,_e.push([G,K,{gpuBuffer:ee,download:y.jsepCreateDownloader(ee,be*re,G),dispose:()=>{y._OrtReleaseTensor(T)}},\"gpu-buffer\"])}else{let ee=Fr(G),re=new ee(be);new Uint8Array(re.buffer,re.byteOffset,re.byteLength).set(y.HEAPU8.subarray(ue,ue+re.byteLength)),_e.push([G,K,re,\"cpu\"])}}finally{y.stackRestore(Pe),G===\"string\"&&ue&&y._free(ue),le||y._OrtReleaseTensor(T)}}return H&&y._OrtClearBoundOutputs(H.handle),_e}finally{y.stackRestore(Be),S.forEach(q=>y._OrtReleaseTensor(q)),B.forEach(q=>y._OrtReleaseTensor(q)),fe.forEach(q=>y._free(q)),k!==0&&y._OrtReleaseRunOptions(k),D.forEach(q=>y._free(q))}},Gr=l=>{let c=J(),n=st.get(l);if(!n)throw new Error(\"invalid session id\");let w=n[0],d=c._OrtEndProfiling(w);d===0&&V(\"Can't get an profile file name.\"),c._OrtFree(d)},jr=l=>{let c=[];for(let n of l){let w=n[2];!Array.isArray(w)&&\"buffer\"in w&&c.push(w.buffer)}return c};self.onmessage=l=>{switch(l.data.type){case\"init-wasm\":try{Rr(l.data.in).then(()=>postMessage({type:\"init-wasm\"}),c=>postMessage({type:\"init-wasm\",err:c}))}catch(c){postMessage({type:\"init-wasm\",err:c})}break;case\"init-ort\":try{Br(l.data.in).then(()=>postMessage({type:\"init-ort\"}),c=>postMessage({type:\"init-ort\",err:c}))}catch(c){postMessage({type:\"init-ort\",err:c})}break;case\"create_allocate\":try{let{model:c}=l.data.in,n=Ht(c);postMessage({type:\"create_allocate\",out:n})}catch(c){postMessage({type:\"create_allocate\",err:c})}break;case\"create_finalize\":try{let{modeldata:c,options:n}=l.data.in,w=kt(c,n);postMessage({type:\"create_finalize\",out:w})}catch(c){postMessage({type:\"create_finalize\",err:c})}break;case\"create\":try{let{model:c,options:n}=l.data.in,w=Hr(c,n);postMessage({type:\"create\",out:w})}catch(c){postMessage({type:\"create\",err:c})}break;case\"release\":try{let c=l.data.in;kr(c),postMessage({type:\"release\"})}catch(c){postMessage({type:\"release\",err:c})}break;case\"run\":try{let{sessionId:c,inputIndices:n,inputs:w,outputIndices:d,options:v}=l.data.in;zr(c,n,w,d,v).then(y=>{postMessage({type:\"run\",out:y},jr(y))},y=>{postMessage({type:\"run\",err:y})})}catch(c){postMessage({type:\"run\",err:c})}break;case\"end-profiling\":try{let c=l.data.in;Gr(c),postMessage({type:\"end-profiling\"})}catch(c){postMessage({type:\"end-profiling\",err:c})}break;case\"is-ort-env-initialized\":try{let c=Nr();postMessage({type:\"is-ort-env-initialized\",out:c})}catch(c){postMessage({type:\"is-ort-env-initialized\",err:c})}break;default:}};})();\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env, env, InferenceSession} from 'onnxruntime-common';\n\nimport {OrtWasmMessage, SerializableModeldata, SerializableSessionMetadata, SerializableTensorMetadata, TensorMetadata} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\n// resolve; reject\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\n\nlet initWasmCallbacks: PromiseCallbacks;\nlet initOrtCallbacks: PromiseCallbacks;\nconst createSessionAllocateCallbacks: Array<PromiseCallbacks<SerializableModeldata>> = [];\nconst createSessionFinalizeCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensorMetadata[]>> = [];\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\nconst isOrtEnvInitializedCallbacks: Array<PromiseCallbacks<boolean>> = [];\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ort':\n      if (ev.data.err) {\n        initOrtCallbacks[1](ev.data.err);\n      } else {\n        initOrtCallbacks[0]();\n      }\n      break;\n    case 'create_allocate':\n      if (ev.data.err) {\n        createSessionAllocateCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionAllocateCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create_finalize':\n      if (ev.data.err) {\n        createSessionFinalizeCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionFinalizeCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create':\n      if (ev.data.err) {\n        createSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'release':\n      if (ev.data.err) {\n        releaseSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        releaseSessionCallbacks.shift()![0]();\n      }\n      break;\n    case 'run':\n      if (ev.data.err) {\n        runCallbacks.shift()![1](ev.data.err);\n      } else {\n        runCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'end-profiling':\n      if (ev.data.err) {\n        endProfilingCallbacks.shift()![1](ev.data.err);\n      } else {\n        endProfilingCallbacks.shift()![0]();\n      }\n      break;\n    case 'is-ort-env-initialized':\n      if (ev.data.err) {\n        isOrtEnvInitializedCallbacks.shift()![1](ev.data.err);\n      } else {\n        isOrtEnvInitializedCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initializeWebAssemblyInstance = async(): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    if (initialized) {\n      return;\n    }\n    if (initializing) {\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\n    }\n    if (aborted) {\n      throw new Error('previous call to \\'initWasm()\\' failed.');\n    }\n\n    initializing = true;\n\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, +(scriptSrc).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n\n      const workerUrl = URL.createObjectURL(new Blob(\n          [\n            // This require() function is handled by esbuild plugin to load file content as string.\n            // eslint-disable-next-line @typescript-eslint/no-require-imports\n            require('./proxy-worker/main')\n          ],\n          {type: 'text/javascript'}));\n      proxyWorker = new Worker(workerUrl, {name: 'ort-wasm-proxy-worker'});\n      proxyWorker.onerror = (ev: ErrorEvent) => reject(ev);\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      URL.revokeObjectURL(workerUrl);\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    return initializeWebAssembly(env.wasm);\n  }\n};\n\nexport const initializeRuntime = async(env: Env): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      initOrtCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-ort', in : env};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    await core.initRuntime(env);\n  }\n};\n\nexport const createSessionAllocate = async(model: Uint8Array): Promise<SerializableModeldata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableModeldata>((resolve, reject) => {\n      createSessionAllocateCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create_allocate', in : {model}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSessionAllocate(model);\n  }\n};\n\nexport const createSessionFinalize = async(modeldata: SerializableModeldata, options?: InferenceSession.SessionOptions):\n    Promise<SerializableSessionMetadata> => {\n      if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n        ensureWorker();\n        return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n          createSessionFinalizeCallbacks.push([resolve, reject]);\n          const message: OrtWasmMessage = {type: 'create_finalize', in : {modeldata, options}};\n          proxyWorker!.postMessage(message);\n        });\n      } else {\n        return core.createSessionFinalize(modeldata, options);\n      }\n    };\n\nexport const createSession =\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    // check unsupported options\n    if (options?.preferredOutputLocation) {\n      throw new Error('session option \"preferredOutputLocation\" is not supported for proxy.');\n    }\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      createSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      releaseSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: TensorMetadata[], outputIndices: number[],\n    outputs: Array<TensorMetadata|null>, options: InferenceSession.RunOptions): Promise<TensorMetadata[]> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    // check inputs location\n    if (inputs.some(t => t[3] !== 'cpu')) {\n      throw new Error('input tensor on GPU is not supported for proxy.');\n    }\n    // check outputs location\n    if (outputs.some(t => t)) {\n      throw new Error('pre-allocated output tensor is not supported for proxy.');\n    }\n    ensureWorker();\n    return new Promise<SerializableTensorMetadata[]>((resolve, reject) => {\n      runCallbacks.push([resolve, reject]);\n      const serializableInputs = inputs as SerializableTensorMetadata[];  // every input is on CPU.\n      const message: OrtWasmMessage =\n          {type: 'run', in : {sessionId, inputIndices, inputs: serializableInputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(serializableInputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, outputs, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      endProfilingCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n\nexport const isOrtEnvInitialized = async(): Promise<boolean> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<boolean>((resolve, reject) => {\n      isOrtEnvInitializedCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'is-ort-env-initialized'};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    return core.isOrtEnvInitialized();\n  }\n};\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'node:fs/promises';\nimport {env, InferenceSession, InferenceSessionHandler, SessionHandler, Tensor} from 'onnxruntime-common';\n\nimport {SerializableModeldata, TensorMetadata} from './proxy-messages';\nimport {createSession, createSessionAllocate, createSessionFinalize, endProfiling, initializeRuntime, isOrtEnvInitialized, releaseSession, run} from './proxy-wrapper';\nimport {isGpuBufferSupportedType} from './wasm-common';\n\nlet runtimeInitializationPromise: Promise<void>|undefined;\n\nexport const encodeTensorMetadata = (tensor: Tensor, getName: () => string): TensorMetadata => {\n  switch (tensor.location) {\n    case 'cpu':\n      return [tensor.type, tensor.dims, tensor.data, 'cpu'];\n    case 'gpu-buffer':\n      return [tensor.type, tensor.dims, {gpuBuffer: tensor.gpuBuffer}, 'gpu-buffer'];\n    default:\n      throw new Error(`invalid data location: ${tensor.location} for ${getName()}`);\n  }\n};\n\nexport const decodeTensorMetadata = (tensor: TensorMetadata): Tensor => {\n  switch (tensor[3]) {\n    case 'cpu':\n      return new Tensor(tensor[0], tensor[2], tensor[1]);\n    case 'gpu-buffer': {\n      const dataType = tensor[0];\n      if (!isGpuBufferSupportedType(dataType)) {\n        throw new Error(`not supported data type: ${dataType} for deserializing GPU tensor`);\n      }\n      const {gpuBuffer, download, dispose} = tensor[2];\n      return Tensor.fromGpuBuffer(gpuBuffer, {dataType, dims: tensor[1], download, dispose});\n    }\n    default:\n      throw new Error(`invalid data location: ${tensor[3]}`);\n  }\n};\n\nexport class OnnxruntimeWebAssemblySessionHandler implements InferenceSessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async createSessionAllocate(path: string): Promise<SerializableModeldata> {\n    // fetch model from url and move to wasm heap. The arraybufffer that held the http\n    // response is freed once we return\n    const response = await fetch(path);\n    if (response.status !== 200) {\n      throw new Error(`failed to load model: ${path}`);\n    }\n    const arrayBuffer = await response.arrayBuffer();\n    return createSessionAllocate(new Uint8Array(arrayBuffer));\n  }\n\n  async loadModel(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    if (!(await isOrtEnvInitialized())) {\n      if (!runtimeInitializationPromise) {\n        runtimeInitializationPromise = initializeRuntime(env);\n      }\n      await runtimeInitializationPromise;\n      runtimeInitializationPromise = undefined;\n    }\n\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof process !== 'undefined' && process.versions && process.versions.node) {\n        // node\n        const model = await readFile(pathOrBuffer);\n        [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n      } else {\n        // browser\n        // fetch model and move to wasm heap.\n        const modelData: SerializableModeldata = await this.createSessionAllocate(pathOrBuffer);\n        // create the session\n        [this.sessionId, this.inputNames, this.outputNames] = await createSessionFinalize(modelData, options);\n      }\n    } else {\n      [this.sessionId, this.inputNames, this.outputNames] = await createSession(pathOrBuffer, options);\n    }\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputArray: Array<Tensor|null> = [];\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputArray.push(tensor);\n      outputIndices.push(index);\n    });\n\n    const inputs =\n        inputArray.map((t, i) => encodeTensorMetadata(t, () => `input \"${this.inputNames[inputIndices[i]]}\"`));\n    const outputs = outputArray.map(\n        (t, i) => t ? encodeTensorMetadata(t, () => `output \"${this.outputNames[outputIndices[i]]}\"`) : null);\n\n    const results = await run(this.sessionId, inputIndices, inputs, outputIndices, outputs, options);\n\n    const resultMap: SessionHandler.ReturnType = {};\n    for (let i = 0; i < results.length; i++) {\n      resultMap[this.outputNames[outputIndices[i]]] = outputArray[i] ?? decodeTensorMetadata(results[i]);\n    }\n    return resultMap;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {cpus} from 'node:os';\nimport {Backend, env, InferenceSession, InferenceSessionHandler} from 'onnxruntime-common';\n\nimport {initializeWebAssemblyInstance} from './wasm/proxy-wrapper';\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler-inference';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nexport class OnnxruntimeWebAssemblyBackend implements Backend {\n  async init(): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initializeWebAssemblyInstance();\n  }\n  createInferenceSessionHandler(path: string, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSessionHandler>;\n  createInferenceSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSessionHandler>;\n  async createInferenceSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSessionHandler> {\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(pathOrBuffer, options);\n    return Promise.resolve(handler);\n  }\n}\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, Tensor} from 'onnxruntime-common';\n\nimport {SerializableModeldata, SerializableSessionMetadata, TensorMetadata} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {tensorDataTypeEnumToString, tensorTypeToTypedArrayConstructor} from './wasm-common';\nimport {prepareInputOutputTensor} from './wasm-core-impl';\nimport {getInstance} from './wasm-factory';\nimport {checkLastError} from './wasm-utils';\n\nconst NO_TRAIN_FUNCS_MSG =\n    'Built without training API\\'s enabled. Use the onnxruntime-web/training import for training ' +\n    'functionality, and make sure that all the correct artifacts are built & moved to the correct folder if ' +\n    'using a custom build. Check https://onnxruntime.ai/docs/build/web.html for more information.';\n\nexport const createCheckpointHandle = (checkpointData: SerializableModeldata): number => {\n  const wasm = getInstance();\n\n  const [checkpointDataOffset, checkpointDataLength] = checkpointData;\n  let checkpointHandle = 0;\n\n  try {\n    if (wasm._OrtTrainingLoadCheckpoint) {\n      checkpointHandle = wasm._OrtTrainingLoadCheckpoint(checkpointDataOffset, checkpointDataLength);\n    } else {\n      throw new Error(NO_TRAIN_FUNCS_MSG);\n    }\n\n    if (checkpointHandle === 0) {\n      checkLastError('Error occurred when trying to create a CheckpointState.');\n    }\n    return checkpointHandle;\n  } catch (e) {\n    if (wasm._OrtTrainingReleaseCheckpoint && checkpointHandle !== 0) {\n      wasm._OrtTrainingReleaseCheckpoint(checkpointHandle);\n    }\n    throw e;\n  } finally {\n    // free buffer from wasm heap\n    wasm._OrtFree(checkpointData[0]);\n  }\n};\n\nconst getModelInputOutputCount = (trainingSessionId: number, isEvalModel: boolean): [number, number] => {\n  const wasm = getInstance();\n  const stack = wasm.stackSave();\n  try {\n    const dataOffset = wasm.stackAlloc(8);\n    if (wasm._OrtTrainingGetModelInputOutputCount) {\n      const errorCode =\n          wasm._OrtTrainingGetModelInputOutputCount(trainingSessionId, dataOffset, dataOffset + 4, isEvalModel);\n      if (errorCode !== 0) {\n        checkLastError('Can\\'t get session input/output count.');\n      }\n      return [wasm.HEAP32[dataOffset / 4], wasm.HEAP32[dataOffset / 4 + 1]];\n    } else {\n      throw new Error(NO_TRAIN_FUNCS_MSG);\n    }\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n\nconst getModelInputOutputNamesLoop =\n    (trainingSessionId: number, count: number, isInput: boolean, isEvalModel: boolean): [string[], number[]] => {\n      const names = [];\n      const wasm = getInstance();\n\n      const namesUTF8Encoded = [];\n\n      for (let i = 0; i < count; i++) {\n        if (wasm._OrtTrainingGetModelInputOutputName) {\n          const name = wasm._OrtTrainingGetModelInputOutputName(trainingSessionId, i, isInput, isEvalModel);\n          if (name === 0) {\n            checkLastError('Can\\'t get input or output name');\n          }\n\n          namesUTF8Encoded.push(name);\n          names.push(wasm.UTF8ToString(name));\n        } else {\n          throw new Error(NO_TRAIN_FUNCS_MSG);\n        }\n      }\n      return [names, namesUTF8Encoded];\n    };\n\nconst getTrainingModelInputOutputNames = (trainingSessionId: number): [string[], number[], string[], number[]] => {\n  const [inputCount, outputCount] = getModelInputOutputCount(trainingSessionId, false);\n\n  const [inputNames, inputNamesUTF8Encoded] = getModelInputOutputNamesLoop(trainingSessionId, inputCount, true, false);\n  const [outputNames, outputNamesUTF8Encoded] =\n      getModelInputOutputNamesLoop(trainingSessionId, outputCount, false, false);\n\n  return [inputNames, inputNamesUTF8Encoded, outputNames, outputNamesUTF8Encoded];\n};\n\nexport const createTrainingSessionHandle =\n    (checkpointHandle: number, trainModelData: SerializableModeldata, evalModelData: SerializableModeldata,\n     optimizerModelData: SerializableModeldata,\n     options: InferenceSession.SessionOptions): [SerializableSessionMetadata, number[], number[]] => {\n      const wasm = getInstance();\n\n      let trainingSessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let allocs: number[] = [];\n      let inputNamesUTF8Encoded: number[] = [];\n      let outputNamesUTF8Encoded: number[] = [];\n\n      let inputNames: string[] = [];\n      let outputNames: string[] = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n        if (wasm._OrtTrainingCreateSession) {\n          trainingSessionHandle = wasm._OrtTrainingCreateSession(\n              sessionOptionsHandle, checkpointHandle, trainModelData[0], trainModelData[1], evalModelData[0],\n              evalModelData[1], optimizerModelData[0], optimizerModelData[1]);\n        } else {\n          throw new Error(NO_TRAIN_FUNCS_MSG);\n        }\n\n        if (trainingSessionHandle === 0) {\n          checkLastError('Error occurred when trying to create a TrainingSession.');\n        }\n\n        [inputNames, inputNamesUTF8Encoded, outputNames, outputNamesUTF8Encoded] =\n            getTrainingModelInputOutputNames(trainingSessionHandle);\n        return [[trainingSessionHandle, inputNames, outputNames], inputNamesUTF8Encoded, outputNamesUTF8Encoded];\n\n      } catch (e) {\n        if (wasm._OrtTrainingReleaseSession && trainingSessionHandle !== 0) {\n          wasm._OrtTrainingReleaseSession(trainingSessionHandle);\n        }\n        throw e;\n      } finally {\n        wasm._free(trainModelData[0]);\n        wasm._free(evalModelData[0]);\n        wasm._free(optimizerModelData[0]);\n\n        if (sessionOptionsHandle !== 0) {\n          wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        }\n        allocs.forEach(alloc => wasm._free(alloc));\n        inputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n        outputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n      }\n    };\n\n/**\n * Prepares input and output tensors by creating the tensors in the WASM side then creates a list of the handles of the\n * WASM tensors.\n *\n * @param trainingSessionId\n * @param indices for each tensor, the index of the input or output name that the tensor corresponds with\n * @param tensors list of TensorMetaData\n * @param tensorHandles should pass in an empty list of numbers; modified in-place by this method & stores the resulting\n *                      handles of the allocated tensors on the heap\n * @param inputOutputAllocs modified in-place by this method\n * @param indexAdd constant to add to the index that is passed to prepareInputOutputTensor\n */\nconst createAndAllocateTensors =\n    (trainingSessionId: number, indices: number[], tensors: Array<TensorMetadata|null>, tensorHandles: number[],\n     inputOutputAllocs: number[], indexAdd: number) => {\n      const count = indices.length;\n\n      // creates the tensors\n      for (let i = 0; i < count; i++) {\n        prepareInputOutputTensor(\n            tensors[i], tensorHandles, inputOutputAllocs, trainingSessionId, indexAdd + indices[i]);\n      }\n\n      // moves to heap\n      const wasm = getInstance();\n      const valuesOffset = wasm.stackAlloc(count * 4);\n      let valuesIndex = valuesOffset / 4;\n      for (let i = 0; i < count; i++) {\n        wasm.HEAPU32[valuesIndex++] = tensorHandles[i];\n      }\n\n      return valuesOffset;\n    };\n\n/**\n * Retrieves the information from the output tensor handles, copies to an array, and frees the WASM information\n * associated with the tensor handle.\n *\n * @param outputValuesOffset\n * @param outputCount\n * @returns list of TensorMetadata retrieved from the output handles.\n */\nconst moveOutputToTensorMetadataArr =\n    (outputValuesOffset: number, outputCount: number, outputTensorHandles: number[],\n     outputTensors: Array<TensorMetadata|null>) => {\n      const wasm = getInstance();\n      const output: TensorMetadata[] = [];\n\n      for (let i = 0; i < outputCount; i++) {\n        const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n        if (tensor === outputTensorHandles[i]) {\n          // output tensor is pre-allocated. no need to copy data.\n          output.push(outputTensors[i]!);\n          continue;\n        }\n\n        const beforeGetTensorDataStack = wasm.stackSave();\n        // stack allocate 4 pointer value\n        const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n        let type: Tensor.Type|undefined, dataOffset = 0;\n        try {\n          const errorCode = wasm._OrtGetTensorData(\n              tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n          if (errorCode !== 0) {\n            checkLastError(`Can't access output tensor data on index ${i}.`);\n          }\n          let tensorDataIndex = tensorDataOffset / 4;\n          const dataType = wasm.HEAPU32[tensorDataIndex++];\n          dataOffset = wasm.HEAPU32[tensorDataIndex++];\n          const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n          const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n          const dims = [];\n          for (let i = 0; i < dimsLength; i++) {\n            dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n          }\n          wasm._OrtFree(dimsOffset);\n\n          const size = dims.reduce((a, b) => a * b, 1);\n          type = tensorDataTypeEnumToString(dataType);\n\n          if (type === 'string') {\n            const stringData: string[] = [];\n            let dataIndex = dataOffset / 4;\n            for (let i = 0; i < size; i++) {\n              const offset = wasm.HEAPU32[dataIndex++];\n              const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n              stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n            }\n            output.push([type, dims, stringData, 'cpu']);\n          } else {\n            const typedArrayConstructor = tensorTypeToTypedArrayConstructor(type);\n            const data = new typedArrayConstructor(size);\n            new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n            output.push([type, dims, data, 'cpu']);\n          }\n        } finally {\n          wasm.stackRestore(beforeGetTensorDataStack);\n          if (type === 'string' && dataOffset) {\n            wasm._free(dataOffset);\n          }\n          wasm._OrtReleaseTensor(tensor);\n        }\n      }\n\n      return output;\n    };\n\nexport const runTrainStep = async(\n    trainingSessionId: number, inputIndices: number[], inputTensors: TensorMetadata[], outputIndices: number[],\n    outputTensors: Array<TensorMetadata|null>, options: InferenceSession.RunOptions): Promise<TensorMetadata[]> => {\n  const wasm = getInstance();\n\n  const inputCount = inputIndices.length;\n  const outputCount = outputIndices.length;\n\n  let runOptionsHandle = 0;\n  let runOptionsAllocs: number[] = [];\n\n  const inputTensorHandles: number[] = [];\n  const outputTensorHandles: number[] = [];\n  const inputOutputAllocs: number[] = [];\n\n  const beforeRunStack = wasm.stackSave();\n\n  try {\n    // prepare parameters by moving them to heap\n    [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n    // handle inputs -- you don't want anything added to the index\n    const inputValuesOffset = createAndAllocateTensors(\n        trainingSessionId, inputIndices, inputTensors, inputTensorHandles, inputOutputAllocs, 0);\n    // handle outputs\n    // you want inputCount to be added to the index of every output tensor passed to prepareInputOutputTensor\n    const outputValuesOffset = createAndAllocateTensors(\n        trainingSessionId, outputIndices, outputTensors, outputTensorHandles, inputOutputAllocs, inputCount);\n\n    if (wasm._OrtTrainingRunTrainStep) {\n      const errorCode = wasm._OrtTrainingRunTrainStep(\n          trainingSessionId, inputValuesOffset, inputCount, outputValuesOffset, outputCount, runOptionsHandle);\n\n      if (errorCode !== 0) {\n        checkLastError('failed to call OrtTrainingRunTrainStep in the WebAssembly layer');\n      }\n    } else {\n      throw new Error(NO_TRAIN_FUNCS_MSG);\n    }\n\n    return moveOutputToTensorMetadataArr(outputValuesOffset, outputCount, outputTensorHandles, outputTensors);\n  } finally {\n    wasm.stackRestore(beforeRunStack);\n\n    inputTensorHandles.forEach(v => wasm._OrtReleaseTensor(v));\n    outputTensorHandles.forEach(v => wasm._OrtReleaseTensor(v));\n    inputOutputAllocs.forEach(p => wasm._free(p));\n\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    runOptionsAllocs.forEach(p => wasm._free(p));\n  }\n};\n\nexport const releaseTrainingSessionAndCheckpoint =\n    (checkpointId: number, sessionId: number, inputNamesUTF8Encoded: number[], outputNamesUTF8Encoded: number[]):\n        void => {\n          const wasm = getInstance();\n          inputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n          outputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n\n          if (wasm._OrtTrainingReleaseSession) {\n            wasm._OrtTrainingReleaseSession(sessionId);\n          }\n          if (wasm._OrtTrainingReleaseCheckpoint) {\n            wasm._OrtTrainingReleaseCheckpoint(checkpointId);\n          }\n        };\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession, SessionHandler, Tensor, TrainingSessionHandler} from 'onnxruntime-common';\n\nimport {SerializableModeldata, TensorMetadata} from './proxy-messages';\nimport {decodeTensorMetadata, encodeTensorMetadata} from './session-handler-inference';\nimport {createSessionAllocate, initRuntime, isOrtEnvInitialized} from './wasm-core-impl';\nimport {createCheckpointHandle, createTrainingSessionHandle, releaseTrainingSessionAndCheckpoint, runTrainStep} from './wasm-training-core-impl';\n\nexport class OnnxruntimeWebAssemblyTrainingSessionHandler implements TrainingSessionHandler {\n  async loadParametersBuffer(_array: Uint8Array, _trainableOnly: boolean): Promise<void> {\n    throw new Error('Method not implemented.');\n  }\n  async getContiguousParameters(_trainableOnly: boolean): Promise<Uint8Array> {\n    throw new Error('Method not implemented.');\n  }\n  private sessionId: number;\n  private checkpointId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  inputEncodedNames: number[];\n  outputEncodedNames: number[];\n\n  async uriOrBufferToHeap(uriOrBuffer: string|Uint8Array): Promise<SerializableModeldata> {\n    let buffer: Uint8Array;\n    if (typeof uriOrBuffer === 'string') {\n      const response = await fetch(uriOrBuffer);\n      const arrayBuffer = await response.arrayBuffer();\n      buffer = new Uint8Array(arrayBuffer);\n    } else {\n      buffer = uriOrBuffer;\n    }\n    return createSessionAllocate(buffer);\n  }\n\n  async createTrainingSession(\n      checkpointStateUriOrBuffer: string|Uint8Array, trainModelUriOrBuffer: string|Uint8Array,\n      evalModelUriOrBuffer: string|Uint8Array, optimizerModelUriOrBuffer: string|Uint8Array,\n      options: InferenceSession.SessionOptions) {\n    if (!isOrtEnvInitialized()) {\n      await initRuntime(env);\n    }\n    const checkpointData: SerializableModeldata = await this.uriOrBufferToHeap(checkpointStateUriOrBuffer);\n    const trainModelData: SerializableModeldata = await this.uriOrBufferToHeap(trainModelUriOrBuffer);\n    // 0 is supposed to be the nullptr\n    let evalModelData: SerializableModeldata = [0, 0];\n    let optimizerModelData: SerializableModeldata = [0, 0];\n\n    if (evalModelUriOrBuffer !== '') {\n      evalModelData = await this.uriOrBufferToHeap(evalModelUriOrBuffer);\n    }\n    if (optimizerModelUriOrBuffer !== '') {\n      optimizerModelData = await this.uriOrBufferToHeap(optimizerModelUriOrBuffer);\n    }\n\n    this.checkpointId = createCheckpointHandle(checkpointData);\n    [[this.sessionId, this.inputNames, this.outputNames], this.inputEncodedNames, this.outputEncodedNames] =\n        createTrainingSessionHandle(this.checkpointId, trainModelData, evalModelData, optimizerModelData, options);\n  }\n\n  /**\n   * Helper method that converts a feeds or fetches datatype to two arrays, one of values and one that stores the\n   * corresponding name as a number referring to the index in the list of names provided.\n   *\n   * @param feeds meant to match either SessionHandler.FeedsType or SessionHandler.FetchesType\n   * @param names either inputNames or outputNames\n   * @returns a tuple of a list of values and a list of indices.\n   */\n  convertMapIntoValuesArrayAndIndicesArray<T, U>(\n      feeds: {[name: string]: T}, names: string[], mapFunc: (val: T, index: number) => U): [T[], number[], U[]] {\n    const values: T[] = [];\n    const indices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = names.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}`);\n      }\n      values.push(tensor);\n      indices.push(index);\n    });\n\n    const uList = values.map(mapFunc);\n    return [values, indices, uList];\n  }\n\n  /**\n   * Helper method that converts the TensorMetadata that the wasm-core functions return to the\n   * SessionHandler.ReturnType. Any outputs in the provided outputArray that are falsy will be populated with the\n   * corresponding result.\n   *\n   * @param results used to populate the resultMap if there is no value for that outputName already\n   * @param outputArray used to populate the resultMap. If null or undefined, use the corresponding result from results\n   * @param outputIndices specifies which outputName the corresponding value for outputArray refers to.\n   * @returns a map of output names and OnnxValues.\n   */\n  convertTensorMetadataToReturnType(\n      results: TensorMetadata[], outputArray: Array<Tensor|null>, outputIndices: number[]): SessionHandler.ReturnType {\n    const resultMap: SessionHandler.ReturnType = {};\n    for (let i = 0; i < results.length; i++) {\n      resultMap[this.outputNames[outputIndices[i]]] = outputArray[i] ?? decodeTensorMetadata(results[i]);\n    }\n    return resultMap;\n  }\n\n  async runTrainStep(\n      feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType,\n      options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType> {\n    const [, inputIndices, inputs] = this.convertMapIntoValuesArrayAndIndicesArray<Tensor, TensorMetadata>(\n        feeds, this.inputNames,\n        (t, i): TensorMetadata => encodeTensorMetadata(t, () => `input \"${this.inputNames[inputIndices[i]]}\"`));\n\n    const [outputArray, outputIndices, outputs] =\n        this.convertMapIntoValuesArrayAndIndicesArray<Tensor|null, TensorMetadata|null>(\n            fetches, this.outputNames,\n            (t, i): TensorMetadata|null =>\n                t ? encodeTensorMetadata(t, () => `output \"${this.outputNames[outputIndices[i]]}\"`) : null);\n\n    const results = await runTrainStep(this.sessionId, inputIndices, inputs, outputIndices, outputs, options);\n    return this.convertTensorMetadataToReturnType(results, outputArray, outputIndices);\n  }\n\n  async dispose(): Promise<void> {\n    return releaseTrainingSessionAndCheckpoint(\n        this.checkpointId, this.sessionId, this.inputEncodedNames, this.outputEncodedNames);\n  }\n}\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, TrainingSessionHandler} from 'onnxruntime-common';\n\nimport {OnnxruntimeWebAssemblyBackend} from './backend-wasm';\nimport {OnnxruntimeWebAssemblyTrainingSessionHandler} from './wasm/session-handler-training';\n\nclass OnnxruntimeTrainingWebAssemblyBackend extends OnnxruntimeWebAssemblyBackend {\n  async createTrainingSessionHandler(\n      checkpointStateUriOrBuffer: string|Uint8Array, trainModelUriOrBuffer: string|Uint8Array,\n      evalModelUriOrBuffer: string|Uint8Array, optimizerModelUriOrBuffer: string|Uint8Array,\n      options: InferenceSession.SessionOptions): Promise<TrainingSessionHandler> {\n    const handler = new OnnxruntimeWebAssemblyTrainingSessionHandler();\n    await handler.createTrainingSession(\n        checkpointStateUriOrBuffer, trainModelUriOrBuffer, evalModelUriOrBuffer, optimizerModelUriOrBuffer, options);\n    return Promise.resolve(handler);\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeTrainingWebAssemblyBackend();\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports */\n// We use \"require\" instead of \"import\" here because import statement must be put in top level. Our current code does\n// not allow bundler to tree-shaking code as expected because some codes are treated as having side effects.\n// So we import code inside the if-clause to allow bundler remove the code safely.\n\nexport * from 'onnxruntime-common';\nimport * as ort from 'onnxruntime-common';\nexport default ort;\n\nimport {registerBackend, env} from 'onnxruntime-common';\nimport {version} from './version';\n\nif (!BUILD_DEFS.DISABLE_WEBGL) {\n  const onnxjsBackend = require('./backend-onnxjs').onnxjsBackend;\n  registerBackend('webgl', onnxjsBackend, -10);\n}\n\nif (!BUILD_DEFS.DISABLE_WASM) {\n  const wasmBackend = BUILD_DEFS.DISABLE_TRAINING ? require('./backend-wasm-inference').wasmBackend :\n                                                    require('./backend-wasm-training').wasmBackend;\n  if (!BUILD_DEFS.DISABLE_WEBGPU && typeof navigator !== 'undefined' && navigator.gpu) {\n    registerBackend('webgpu', wasmBackend, 5);\n  }\n  registerBackend('cpu', wasmBackend, 10);\n  registerBackend('wasm', wasmBackend, 10);\n  if (BUILD_DEFS.DISABLE_TRAINING) {\n    registerBackend('xnnpack', wasmBackend, 9);\n    registerBackend('webnn', wasmBackend, 9);\n  }\n}\n\nObject.defineProperty(env.versions, 'web', {value: version, enumerable: true});\n",
    "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// This file is generated by /js/scripts/update-version.ts\n// Do not modify file content manually.\n\nexport const version = '1.17.0';\n"
  ],
  "mappings": "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",
  "names": [
    "backends",
    "backendsSortedByPriority",
    "registerBackend",
    "resolveBackend",
    "init_backend_impl",
    "__esmMin",
    "name",
    "backend",
    "priority",
    "currentBackend",
    "i",
    "backendHints",
    "backendNames",
    "errors",
    "backendName",
    "backendInfo",
    "isInitializing",
    "e",
    "init_backend",
    "__esmMin",
    "init_backend_impl",
    "version",
    "init_version",
    "__esmMin",
    "logLevelValue",
    "env",
    "init_env_impl",
    "__esmMin",
    "init_version",
    "version",
    "value",
    "env",
    "init_env",
    "__esmMin",
    "init_env_impl",
    "tensorToDataURL",
    "tensorToImageData",
    "init_tensor_conversion_impl",
    "__esmMin",
    "tensor",
    "options",
    "canvas",
    "pixels2DContext",
    "width",
    "height",
    "inputformat",
    "norm",
    "normMean",
    "normBias",
    "stride",
    "rTensorPointer",
    "gTensorPointer",
    "bTensorPointer",
    "aTensorPointer",
    "i",
    "j",
    "R",
    "G",
    "B",
    "A",
    "image",
    "channels",
    "step",
    "rImagePointer",
    "gImagePointer",
    "bImagePointer",
    "aImagePointer",
    "bufferToTensor",
    "tensorFromImage",
    "tensorFromTexture",
    "tensorFromGpuBuffer",
    "tensorFromPinnedBuffer",
    "init_tensor_factory_impl",
    "__esmMin",
    "init_tensor_impl",
    "buffer",
    "options",
    "height",
    "width",
    "norm",
    "normMean",
    "normBias",
    "inputformat",
    "outputformat",
    "stride",
    "float32Data",
    "step",
    "rImagePointer",
    "gImagePointer",
    "bImagePointer",
    "aImagePointer",
    "rTensorPointer",
    "gTensorPointer",
    "bTensorPointer",
    "aTensorPointer",
    "i",
    "Tensor",
    "image",
    "isHTMLImageEle",
    "isImageDataEle",
    "isImageBitmap",
    "isString",
    "data",
    "bufferToTensorOptions",
    "canvas",
    "pixels2DContext",
    "tempCanvas",
    "resolve",
    "reject",
    "context",
    "newImage",
    "img",
    "texture",
    "download",
    "dispose",
    "dims",
    "gpuBuffer",
    "dataType",
    "type",
    "NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP",
    "NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP",
    "isBigIntChecked",
    "checkBigInt",
    "init_tensor_impl_type_mapping",
    "__esmMin",
    "isBigInt64ArrayAvailable",
    "isBigUint64ArrayAvailable",
    "calculateSize",
    "tensorReshape",
    "init_tensor_utils_impl",
    "__esmMin",
    "init_tensor_impl",
    "dims",
    "size",
    "i",
    "dim",
    "tensor",
    "Tensor",
    "Tensor",
    "init_tensor_impl",
    "__esmMin",
    "init_tensor_conversion_impl",
    "init_tensor_factory_impl",
    "init_tensor_impl_type_mapping",
    "init_tensor_utils_impl",
    "arg0",
    "arg1",
    "arg2",
    "checkBigInt",
    "type",
    "dims",
    "expectedTypedArrayConstructor",
    "NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP",
    "data",
    "maybeDims",
    "typedArrayConstructor",
    "firstElementType",
    "mappedType",
    "NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP",
    "size",
    "calculateSize",
    "image",
    "options",
    "tensorFromImage",
    "texture",
    "tensorFromTexture",
    "gpuBuffer",
    "tensorFromGpuBuffer",
    "buffer",
    "tensorFromPinnedBuffer",
    "tensorToDataURL",
    "tensorToImageData",
    "releaseData",
    "tensorReshape",
    "Tensor",
    "init_tensor",
    "__esmMin",
    "init_tensor_impl",
    "InferenceSession",
    "init_inference_session_impl",
    "__esmMin",
    "init_backend_impl",
    "init_tensor",
    "_InferenceSession",
    "handler",
    "feeds",
    "arg1",
    "arg2",
    "fetches",
    "options",
    "Tensor",
    "isFetchesEmpty",
    "name",
    "isFetches",
    "arg1Keys",
    "v",
    "results",
    "returnValue",
    "key",
    "result",
    "arg0",
    "arg3",
    "filePathOrUint8Array",
    "buffer",
    "byteOffset",
    "byteLength",
    "backendHints",
    "i",
    "resolveBackend",
    "InferenceSession",
    "init_inference_session",
    "__esmMin",
    "init_inference_session_impl",
    "init_onnx_value",
    "__esmMin",
    "noBackendErrMsg",
    "TrainingSession",
    "init_training_session_impl",
    "__esmMin",
    "init_backend_impl",
    "init_tensor",
    "_TrainingSession",
    "handler",
    "trainingOptions",
    "sessionOptions",
    "evalModel",
    "optimizerModel",
    "options",
    "backendHints",
    "i",
    "backend",
    "resolveBackend",
    "feeds",
    "arg1",
    "arg2",
    "fetches",
    "Tensor",
    "isFetchesEmpty",
    "name",
    "isFetches",
    "arg1Keys",
    "v",
    "results",
    "returnValue",
    "key",
    "result",
    "_array",
    "_trainableOnly",
    "TrainingSession",
    "init_training_session",
    "__esmMin",
    "init_training_session_impl",
    "esm_exports",
    "__export",
    "InferenceSession",
    "Tensor",
    "TrainingSession",
    "env",
    "registerBackend",
    "init_esm",
    "__esmMin",
    "init_backend",
    "init_env",
    "init_inference_session",
    "init_tensor",
    "init_onnx_value",
    "init_training_session",
    "fs_exports",
    "__export",
    "readFile",
    "init_fs",
    "__esmMin",
    "path_exports",
    "__export",
    "join",
    "init_path",
    "__esmMin",
    "require_ort_training_wasm_simd",
    "__commonJSMin",
    "exports",
    "module",
    "ortWasm",
    "_scriptDir",
    "moduleArg",
    "d",
    "aa",
    "l",
    "a",
    "b",
    "ba",
    "m",
    "ca",
    "r",
    "da",
    "x",
    "y",
    "z",
    "fs",
    "B",
    "c",
    "e",
    "g",
    "h",
    "ea",
    "C",
    "D",
    "noExitRuntime",
    "E",
    "F",
    "G",
    "fa",
    "H",
    "I",
    "J",
    "K",
    "ha",
    "L",
    "ia",
    "ja",
    "ka",
    "la",
    "M",
    "N",
    "O",
    "ma",
    "P",
    "na",
    "oa",
    "pa",
    "qa",
    "ra",
    "Q",
    "R",
    "sa",
    "ta",
    "ua",
    "va",
    "wa",
    "k",
    "S",
    "T",
    "U",
    "p",
    "V",
    "xa",
    "ya",
    "Da",
    "za",
    "W",
    "Fa",
    "Ea",
    "Ga",
    "Ha",
    "Ia",
    "Ja",
    "Ka",
    "f",
    "n",
    "q",
    "Aa",
    "A",
    "t",
    "u",
    "v",
    "Ba",
    "Ca",
    "X",
    "Y",
    "La",
    "Ma",
    "Oa",
    "Na",
    "Pa",
    "Qa",
    "Ra",
    "Sa",
    "Z",
    "Ta",
    "Ua",
    "require_worker_threads",
    "__commonJSMin",
    "require_perf_hooks",
    "__commonJSMin",
    "os_exports",
    "__export",
    "cpus",
    "init_os",
    "__esmMin",
    "require_ort_wasm_threaded",
    "__commonJSMin",
    "exports",
    "module",
    "ortWasmThreaded",
    "_scriptDir",
    "moduleArg",
    "aa",
    "e",
    "l",
    "m",
    "n",
    "ba",
    "p",
    "ca",
    "t",
    "da",
    "ea",
    "fa",
    "w",
    "ha",
    "x",
    "a",
    "b",
    "ia",
    "ja",
    "z",
    "ka",
    "A",
    "C",
    "D",
    "E",
    "la",
    "ma",
    "F",
    "G",
    "fs",
    "na",
    "c",
    "d",
    "g",
    "h",
    "k",
    "oa",
    "pa",
    "qa",
    "I",
    "J",
    "noExitRuntime",
    "K",
    "L",
    "ra",
    "M",
    "N",
    "O",
    "P",
    "sa",
    "ta",
    "ua",
    "va",
    "Q",
    "R",
    "wa",
    "S",
    "xa",
    "ya",
    "za",
    "T",
    "Aa",
    "Ba",
    "Ca",
    "Da",
    "U",
    "Ea",
    "Fa",
    "Ga",
    "V",
    "Ha",
    "Ia",
    "Ja",
    "Ka",
    "La",
    "W",
    "Na",
    "Ma",
    "Oa",
    "Pa",
    "q",
    "Qa",
    "Ra",
    "Sa",
    "Ta",
    "X",
    "Ua",
    "Va",
    "Wa",
    "Xa",
    "Ya",
    "Za",
    "$a",
    "ab",
    "bb",
    "cb",
    "db",
    "eb",
    "fb",
    "gb",
    "hb",
    "ib",
    "jb",
    "kb",
    "lb",
    "mb",
    "nb",
    "ob",
    "pb",
    "qb",
    "rb",
    "sb",
    "Y",
    "tb",
    "ub",
    "vb",
    "wb",
    "yb",
    "xb",
    "Ab",
    "zb",
    "Bb",
    "Cb",
    "Db",
    "Eb",
    "Gb",
    "Fb",
    "Hb",
    "Ib",
    "Jb",
    "Nb",
    "Ob",
    "Pb",
    "Qb",
    "B",
    "v",
    "y",
    "Rb",
    "Sb",
    "Tb",
    "Ub",
    "Vb",
    "f",
    "r",
    "u",
    "Kb",
    "H",
    "Lb",
    "Mb",
    "Z",
    "Wb",
    "Xb",
    "Yb",
    "ac",
    "Zb",
    "$b",
    "bc",
    "cc",
    "dc",
    "ec",
    "require_ort_wasm_threaded_worker",
    "__commonJSMin",
    "exports",
    "module",
    "ortWasmFactory",
    "ortWasmFactoryThreaded",
    "wasm",
    "initialized",
    "initializing",
    "aborted",
    "isMultiThreadSupported",
    "isSimdSupported",
    "getWasmFileName",
    "initializeWebAssembly",
    "getInstance",
    "init_wasm_factory",
    "__esmMin",
    "useSimd",
    "useThreads",
    "flags",
    "timeout",
    "numThreads",
    "simd",
    "wasmPaths",
    "wasmPrefixOverride",
    "wasmFileName",
    "wasmPathOverride",
    "isTimeout",
    "tasks",
    "resolve",
    "reject",
    "factory",
    "config",
    "fileName",
    "scriptDirectory",
    "scriptSourceCode",
    "module",
    "what",
    "allocWasmString",
    "iterateExtraOptions",
    "checkLastError",
    "init_wasm_utils",
    "__esmMin",
    "init_wasm_factory",
    "data",
    "allocs",
    "wasm",
    "getInstance",
    "dataLength",
    "dataOffset",
    "options",
    "prefix",
    "seen",
    "handler",
    "key",
    "value",
    "name",
    "message",
    "stack",
    "paramsOffset",
    "errorCode",
    "errorMessagePointer",
    "errorMessage",
    "setRunOptions",
    "init_run_options",
    "__esmMin",
    "init_wasm_factory",
    "init_wasm_utils",
    "options",
    "wasm",
    "getInstance",
    "runOptionsHandle",
    "allocs",
    "runOptions",
    "tagDataOffset",
    "allocWasmString",
    "checkLastError",
    "iterateExtraOptions",
    "key",
    "value",
    "keyDataOffset",
    "valueDataOffset",
    "e",
    "alloc",
    "getGraphOptimzationLevel",
    "getExecutionMode",
    "appendDefaultOptions",
    "setExecutionProviders",
    "setSessionOptions",
    "init_session_options",
    "__esmMin",
    "init_wasm_factory",
    "init_wasm_utils",
    "graphOptimizationLevel",
    "executionMode",
    "options",
    "session",
    "ep",
    "sessionOptionsHandle",
    "executionProviders",
    "allocs",
    "epName",
    "webnnOptions",
    "keyDataOffset",
    "allocWasmString",
    "valueDataOffset",
    "getInstance",
    "checkLastError",
    "numThreads",
    "webgpuOptions",
    "epNameDataOffset",
    "wasm",
    "sessionOptions",
    "logIdDataOffset",
    "logSeverityLevel",
    "logVerbosityLevel",
    "optimizedModelFilePathOffset",
    "name",
    "value",
    "nameOffset",
    "iterateExtraOptions",
    "key",
    "e",
    "alloc",
    "tensorDataTypeStringToEnum",
    "tensorDataTypeEnumToString",
    "getTensorElementSize",
    "tensorTypeToTypedArrayConstructor",
    "logLevelStringToEnum",
    "isGpuBufferSupportedType",
    "dataLocationStringToEnum",
    "init_wasm_common",
    "__esmMin",
    "type",
    "typeProto",
    "dateType",
    "logLevel",
    "location",
    "ortEnvInitialized",
    "getSessionInputOutputCount",
    "initOrt",
    "initRuntime",
    "activeSessions",
    "isOrtEnvInitialized",
    "createSessionAllocate",
    "createSessionFinalize",
    "createSession",
    "releaseSession",
    "prepareInputOutputTensor",
    "run",
    "endProfiling",
    "extractTransferableBuffers",
    "init_wasm_core_impl",
    "__esmMin",
    "init_run_options",
    "init_session_options",
    "init_wasm_common",
    "init_wasm_factory",
    "init_wasm_utils",
    "sessionHandle",
    "wasm",
    "getInstance",
    "stack",
    "dataOffset",
    "checkLastError",
    "numThreads",
    "loggingLevel",
    "env",
    "logLevelStringToEnum",
    "model",
    "modelDataOffset",
    "modelData",
    "options",
    "sessionOptionsHandle",
    "ioBindingHandle",
    "allocs",
    "inputNamesUTF8Encoded",
    "outputNamesUTF8Encoded",
    "setSessionOptions",
    "inputCount",
    "outputCount",
    "inputNames",
    "outputNames",
    "outputPreferredLocations",
    "i",
    "name",
    "nameString",
    "bindingState",
    "e",
    "buf",
    "alloc",
    "sessionId",
    "session",
    "ioBindingState",
    "tensor",
    "tensorHandles",
    "index",
    "dataType",
    "dims",
    "location",
    "rawData",
    "dataByteLength",
    "gpuBuffer",
    "elementSizeInBytes",
    "getTensorElementSize",
    "tensorDataTypeStringToEnum",
    "a",
    "b",
    "data",
    "dataIndex",
    "allocWasmString",
    "dimsOffset",
    "dimIndex",
    "d",
    "dataLocationStringToEnum",
    "inputIndices",
    "inputTensors",
    "outputIndices",
    "outputTensors",
    "runOptionsHandle",
    "runOptionsAllocs",
    "inputTensorHandles",
    "outputTensorHandles",
    "inputOutputAllocs",
    "beforeRunStack",
    "inputValuesOffset",
    "inputNamesOffset",
    "outputValuesOffset",
    "outputNamesOffset",
    "setRunOptions",
    "inputValuesIndex",
    "inputNamesIndex",
    "outputValuesIndex",
    "outputNamesIndex",
    "errorCode",
    "output",
    "beforeGetTensorDataStack",
    "tensorDataOffset",
    "keepOutputTensor",
    "type",
    "tensorDataIndex",
    "dimsLength",
    "size",
    "tensorDataTypeEnumToString",
    "preferredLocation",
    "stringData",
    "offset",
    "maxBytesToRead",
    "elementSize",
    "isGpuBufferSupportedType",
    "typedArrayConstructor",
    "tensorTypeToTypedArrayConstructor",
    "v",
    "p",
    "profileFileName",
    "tensors",
    "buffers",
    "require_main",
    "__commonJSMin",
    "exports",
    "module",
    "isProxy",
    "proxyWorker",
    "initializing",
    "initialized",
    "aborted",
    "initWasmCallbacks",
    "initOrtCallbacks",
    "createSessionAllocateCallbacks",
    "createSessionFinalizeCallbacks",
    "createSessionCallbacks",
    "releaseSessionCallbacks",
    "runCallbacks",
    "endProfilingCallbacks",
    "isOrtEnvInitializedCallbacks",
    "ensureWorker",
    "onProxyWorkerMessage",
    "scriptSrc",
    "initializeWebAssemblyInstance",
    "initializeRuntime",
    "createSessionAllocate",
    "createSessionFinalize",
    "createSession",
    "releaseSession",
    "run",
    "endProfiling",
    "isOrtEnvInitialized",
    "init_proxy_wrapper",
    "__esmMin",
    "init_esm",
    "init_wasm_core_impl",
    "init_wasm_factory",
    "env",
    "ev",
    "resolve",
    "reject",
    "workerUrl",
    "message",
    "initializeWebAssembly",
    "initRuntime",
    "model",
    "modeldata",
    "options",
    "sessionId",
    "inputIndices",
    "inputs",
    "outputIndices",
    "outputs",
    "t",
    "serializableInputs",
    "extractTransferableBuffers",
    "runtimeInitializationPromise",
    "encodeTensorMetadata",
    "decodeTensorMetadata",
    "OnnxruntimeWebAssemblySessionHandler",
    "init_session_handler_inference",
    "__esmMin",
    "init_esm",
    "init_proxy_wrapper",
    "init_wasm_common",
    "tensor",
    "getName",
    "Tensor",
    "dataType",
    "isGpuBufferSupportedType",
    "gpuBuffer",
    "download",
    "dispose",
    "path",
    "response",
    "arrayBuffer",
    "createSessionAllocate",
    "pathOrBuffer",
    "options",
    "isOrtEnvInitialized",
    "initializeRuntime",
    "env",
    "model",
    "createSession",
    "modelData",
    "createSessionFinalize",
    "releaseSession",
    "feeds",
    "fetches",
    "inputArray",
    "inputIndices",
    "kvp",
    "name",
    "index",
    "outputArray",
    "outputIndices",
    "inputs",
    "t",
    "i",
    "outputs",
    "results",
    "run",
    "resultMap",
    "endProfiling",
    "initializeFlags",
    "OnnxruntimeWebAssemblyBackend",
    "init_backend_wasm",
    "__esmMin",
    "init_esm",
    "init_proxy_wrapper",
    "init_session_handler_inference",
    "env",
    "numCpuLogicalCores",
    "initializeWebAssemblyInstance",
    "pathOrBuffer",
    "options",
    "handler",
    "OnnxruntimeWebAssemblySessionHandler",
    "NO_TRAIN_FUNCS_MSG",
    "createCheckpointHandle",
    "getModelInputOutputCount",
    "getModelInputOutputNamesLoop",
    "getTrainingModelInputOutputNames",
    "createTrainingSessionHandle",
    "createAndAllocateTensors",
    "moveOutputToTensorMetadataArr",
    "runTrainStep",
    "releaseTrainingSessionAndCheckpoint",
    "init_wasm_training_core_impl",
    "__esmMin",
    "init_run_options",
    "init_session_options",
    "init_wasm_common",
    "init_wasm_core_impl",
    "init_wasm_factory",
    "init_wasm_utils",
    "checkpointData",
    "wasm",
    "getInstance",
    "checkpointDataOffset",
    "checkpointDataLength",
    "checkpointHandle",
    "checkLastError",
    "e",
    "trainingSessionId",
    "isEvalModel",
    "stack",
    "dataOffset",
    "count",
    "isInput",
    "names",
    "namesUTF8Encoded",
    "i",
    "name",
    "inputCount",
    "outputCount",
    "inputNames",
    "inputNamesUTF8Encoded",
    "outputNames",
    "outputNamesUTF8Encoded",
    "trainModelData",
    "evalModelData",
    "optimizerModelData",
    "options",
    "trainingSessionHandle",
    "sessionOptionsHandle",
    "allocs",
    "setSessionOptions",
    "alloc",
    "buf",
    "indices",
    "tensors",
    "tensorHandles",
    "inputOutputAllocs",
    "indexAdd",
    "prepareInputOutputTensor",
    "valuesOffset",
    "valuesIndex",
    "outputValuesOffset",
    "outputTensorHandles",
    "outputTensors",
    "output",
    "tensor",
    "beforeGetTensorDataStack",
    "tensorDataOffset",
    "type",
    "tensorDataIndex",
    "dataType",
    "dimsOffset",
    "dimsLength",
    "dims",
    "size",
    "a",
    "b",
    "tensorDataTypeEnumToString",
    "stringData",
    "dataIndex",
    "offset",
    "maxBytesToRead",
    "typedArrayConstructor",
    "tensorTypeToTypedArrayConstructor",
    "data",
    "inputIndices",
    "inputTensors",
    "outputIndices",
    "runOptionsHandle",
    "runOptionsAllocs",
    "inputTensorHandles",
    "beforeRunStack",
    "setRunOptions",
    "inputValuesOffset",
    "v",
    "p",
    "checkpointId",
    "sessionId",
    "OnnxruntimeWebAssemblyTrainingSessionHandler",
    "init_session_handler_training",
    "__esmMin",
    "init_esm",
    "init_session_handler_inference",
    "init_wasm_core_impl",
    "init_wasm_training_core_impl",
    "_array",
    "_trainableOnly",
    "uriOrBuffer",
    "buffer",
    "arrayBuffer",
    "createSessionAllocate",
    "checkpointStateUriOrBuffer",
    "trainModelUriOrBuffer",
    "evalModelUriOrBuffer",
    "optimizerModelUriOrBuffer",
    "options",
    "isOrtEnvInitialized",
    "initRuntime",
    "env",
    "checkpointData",
    "trainModelData",
    "evalModelData",
    "optimizerModelData",
    "createCheckpointHandle",
    "createTrainingSessionHandle",
    "feeds",
    "names",
    "mapFunc",
    "values",
    "indices",
    "kvp",
    "name",
    "tensor",
    "index",
    "uList",
    "results",
    "outputArray",
    "outputIndices",
    "resultMap",
    "i",
    "decodeTensorMetadata",
    "fetches",
    "inputIndices",
    "inputs",
    "t",
    "encodeTensorMetadata",
    "outputs",
    "runTrainStep",
    "releaseTrainingSessionAndCheckpoint",
    "backend_wasm_training_exports",
    "__export",
    "wasmBackend",
    "OnnxruntimeTrainingWebAssemblyBackend",
    "init_backend_wasm_training",
    "__esmMin",
    "init_backend_wasm",
    "init_session_handler_training",
    "OnnxruntimeWebAssemblyBackend",
    "checkpointStateUriOrBuffer",
    "trainModelUriOrBuffer",
    "evalModelUriOrBuffer",
    "optimizerModelUriOrBuffer",
    "options",
    "handler",
    "OnnxruntimeWebAssemblyTrainingSessionHandler",
    "init_esm",
    "version",
    "lib_default",
    "esm_exports",
    "wasmBackend",
    "registerBackend",
    "env",
    "version"
  ]
}