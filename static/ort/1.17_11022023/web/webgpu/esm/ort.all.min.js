/*!
 * ONNX Runtime Web v1.17.0
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
var py=Object.create;var Do=Object.defineProperty;var hy=Object.getOwnPropertyDescriptor;var my=Object.getOwnPropertyNames;var gy=Object.getPrototypeOf,by=Object.prototype.hasOwnProperty;var P=(n,e)=>()=>(n&&(e=n(n=0)),e);var He=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),Nr=(n,e)=>{for(var r in e)Do(n,r,{get:e[r],enumerable:!0})},Du=(n,e,r,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of my(e))!by.call(n,o)&&o!==r&&Do(n,o,{get:()=>e[o],enumerable:!(t=hy(e,o))||t.enumerable});return n};var cn=(n,e,r)=>(r=n!=null?py(gy(n)):{},Du(e||!n||!n.__esModule?Do(r,"default",{value:n,enumerable:!0}):r,n)),Sr=n=>Du(Do({},"__esModule",{value:!0}),n);var ko,zr,mr,Bo,Ro=P(()=>{ko=new Map,zr=[],mr=(n,e,r)=>{if(e&&typeof e.init=="function"&&typeof e.createInferenceSessionHandler=="function"){let t=ko.get(n);if(t===void 0)ko.set(n,{backend:e,priority:r});else{if(t.priority>r)return;if(t.priority===r&&t.backend!==e)throw new Error(`cannot register backend "${n}" using priority ${r}`)}if(r>=0){let o=zr.indexOf(n);o!==-1&&zr.splice(o,1);for(let i=0;i<zr.length;i++)if(ko.get(zr[i]).priority<=r){zr.splice(i,0,n);return}zr.push(n)}return}throw new TypeError("not a valid backend")},Bo=async n=>{let e=n.length===0?zr:n,r=[];for(let t of e){let o=ko.get(t);if(o){if(o.initialized)return o.backend;if(o.aborted)continue;let i=!!o.initPromise;try{return i||(o.initPromise=o.backend.init()),await o.initPromise,o.initialized=!0,o.backend}catch(u){i||r.push({name:t,err:u}),o.aborted=!0}finally{delete o.initPromise}}}throw new Error(`no available backend found. ERR: ${r.map(t=>`[${t.name}] ${t.err}`).join(", ")}`)}});var ku=P(()=>{Ro()});var Bu,Ru=P(()=>{Bu="1.17.0"});var Mu,ca,Lu=P(()=>{Ru();Mu="warning",ca={wasm:{},webgl:{},webgpu:{},versions:{common:Bu},set logLevel(n){if(n!==void 0){if(typeof n!="string"||["verbose","info","warning","error","fatal"].indexOf(n)===-1)throw new Error(`Unsupported logging level: ${n}`);Mu=n}},get logLevel(){return Mu}};Object.defineProperty(ca,"logLevel",{enumerable:!0})});var xe,Nu=P(()=>{Lu();xe=ca});var zu,Fu,Gu=P(()=>{zu=(n,e)=>{let r=document.createElement("canvas");r.width=n.dims[3],r.height=n.dims[2];let t=r.getContext("2d");if(t!=null){let o,i;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(o=n.dims[2],i=n.dims[3]):(o=n.dims[3],i=n.dims[2]);let u=e?.format!==void 0?e.format:"RGB",a=e?.norm,s,l;a===void 0||a.mean===void 0?s=[255,255,255,255]:typeof a.mean=="number"?s=[a.mean,a.mean,a.mean,a.mean]:(s=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(s[3]=a.mean[3])),a===void 0||a.bias===void 0?l=[0,0,0,0]:typeof a.bias=="number"?l=[a.bias,a.bias,a.bias,a.bias]:(l=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(l[3]=a.bias[3]));let c=i*o,p=0,h=c,g=c*2,y=-1;u==="RGBA"?(p=0,h=c,g=c*2,y=c*3):u==="RGB"?(p=0,h=c,g=c*2):u==="RBG"&&(p=0,g=c,h=c*2);for(let b=0;b<i;b++)for(let w=0;w<o;w++){let S=(n.data[p++]-l[0])*s[0],O=(n.data[h++]-l[1])*s[1],E=(n.data[g++]-l[2])*s[2],B=y===-1?255:(n.data[y++]-l[3])*s[3];t.fillStyle="rgba("+S+","+O+","+E+","+B+")",t.fillRect(w,b,1,1)}return r.toDataURL()}else throw new Error("Can not access image data")},Fu=(n,e)=>{let r=document.createElement("canvas").getContext("2d"),t;if(r!=null){let o,i,u;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(o=n.dims[2],i=n.dims[1],u=n.dims[3]):(o=n.dims[3],i=n.dims[2],u=n.dims[1]);let a=e!==void 0&&e.format!==void 0?e.format:"RGB",s=e?.norm,l,c;s===void 0||s.mean===void 0?l=[255,255,255,255]:typeof s.mean=="number"?l=[s.mean,s.mean,s.mean,s.mean]:(l=[s.mean[0],s.mean[1],s.mean[2],255],s.mean[3]!==void 0&&(l[3]=s.mean[3])),s===void 0||s.bias===void 0?c=[0,0,0,0]:typeof s.bias=="number"?c=[s.bias,s.bias,s.bias,s.bias]:(c=[s.bias[0],s.bias[1],s.bias[2],0],s.bias[3]!==void 0&&(c[3]=s.bias[3]));let p=i*o;if(e!==void 0&&(e.format!==void 0&&u===4&&e.format!=="RGBA"||u===3&&e.format!=="RGB"&&e.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let h=4,g=0,y=1,b=2,w=3,S=0,O=p,E=p*2,B=-1;a==="RGBA"?(S=0,O=p,E=p*2,B=p*3):a==="RGB"?(S=0,O=p,E=p*2):a==="RBG"&&(S=0,E=p,O=p*2),t=r.createImageData(o,i);for(let z=0;z<i*o;g+=h,y+=h,b+=h,w+=h,z++)t.data[g]=(n.data[S++]-c[0])*l[0],t.data[y]=(n.data[O++]-c[1])*l[1],t.data[b]=(n.data[E++]-c[2])*l[2],t.data[w]=B===-1?255:(n.data[B++]-c[3])*l[3]}else throw new Error("Can not access image data");return t}});var da,Wu,Vu,Uu,Hu,ju=P(()=>{Mo();da=(n,e)=>{if(n===void 0)throw new Error("Image buffer must be defined");if(e.height===void 0||e.width===void 0)throw new Error("Image height and width must be defined");if(e.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:r,width:t}=e,o=e.norm??{mean:255,bias:0},i,u;typeof o.mean=="number"?i=[o.mean,o.mean,o.mean,o.mean]:i=[o.mean[0],o.mean[1],o.mean[2],o.mean[3]??255],typeof o.bias=="number"?u=[o.bias,o.bias,o.bias,o.bias]:u=[o.bias[0],o.bias[1],o.bias[2],o.bias[3]??0];let a=e.format!==void 0?e.format:"RGBA",s=e.tensorFormat!==void 0&&e.tensorFormat!==void 0?e.tensorFormat:"RGB",l=r*t,c=s==="RGBA"?new Float32Array(l*4):new Float32Array(l*3),p=4,h=0,g=1,y=2,b=3,w=0,S=l,O=l*2,E=-1;a==="RGB"&&(p=3,h=0,g=1,y=2,b=-1),s==="RGBA"?E=l*3:s==="RBG"?(w=0,O=l,S=l*2):s==="BGR"&&(O=0,S=l,w=l*2);for(let z=0;z<l;z++,h+=p,y+=p,g+=p,b+=p)c[w++]=(n[h]+u[0])/i[0],c[S++]=(n[g]+u[1])/i[1],c[O++]=(n[y]+u[2])/i[2],E!==-1&&b!==-1&&(c[E++]=(n[b]+u[3])/i[3]);return s==="RGBA"?new xt("float32",c,[1,4,r,t]):new xt("float32",c,[1,3,r,t])},Wu=async(n,e)=>{let r=typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement,t=typeof ImageData<"u"&&n instanceof ImageData,o=typeof ImageBitmap<"u"&&n instanceof ImageBitmap,i=typeof n=="string",u,a=e??{};if(r){let s=document.createElement("canvas");s.width=n.width,s.height=n.height;let l=s.getContext("2d");if(l!=null){let c=n.height,p=n.width;if(e!==void 0&&e.resizedHeight!==void 0&&e.resizedWidth!==void 0&&(c=e.resizedHeight,p=e.resizedWidth),e!==void 0){if(a=e,e.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=c,a.width=p}else a.tensorFormat="RGBA",a.height=c,a.width=p;l.drawImage(n,0,0),u=l.getImageData(0,0,p,c).data}else throw new Error("Can not access image data")}else if(t){let s,l;if(e!==void 0&&e.resizedWidth!==void 0&&e.resizedHeight!==void 0?(s=e.resizedHeight,l=e.resizedWidth):(s=n.height,l=n.width),e!==void 0&&(a=e),a.format="RGBA",a.height=s,a.width=l,e!==void 0){let c=document.createElement("canvas");c.width=l,c.height=s;let p=c.getContext("2d");if(p!=null)p.putImageData(n,0,0),u=p.getImageData(0,0,l,s).data;else throw new Error("Can not access image data")}else u=n.data}else if(o){if(e===void 0)throw new Error("Please provide image config with format for Imagebitmap");let s=document.createElement("canvas");s.width=n.width,s.height=n.height;let l=s.getContext("2d");if(l!=null){let c=n.height,p=n.width;return l.drawImage(n,0,0,p,c),u=l.getImageData(0,0,p,c).data,a.height=c,a.width=p,da(u,a)}else throw new Error("Can not access image data")}else{if(i)return new Promise((s,l)=>{let c=document.createElement("canvas"),p=c.getContext("2d");if(!n||!p)return l();let h=new Image;h.crossOrigin="Anonymous",h.src=n,h.onload=()=>{c.width=h.width,c.height=h.height,p.drawImage(h,0,0,c.width,c.height);let g=p.getImageData(0,0,c.width,c.height);a.height=c.height,a.width=c.width,s(da(g.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(u!==void 0)return da(u,a);throw new Error("Input data provided is not supported - aborted tensor creation")},Vu=(n,e)=>{let{width:r,height:t,download:o,dispose:i}=e,u=[1,t,r,4];return new xt({location:"texture",type:"float32",texture:n,dims:u,download:o,dispose:i})},Uu=(n,e)=>{let{dataType:r,dims:t,download:o,dispose:i}=e;return new xt({location:"gpu-buffer",type:r??"float32",gpuBuffer:n,dims:t,download:o,dispose:i})},Hu=(n,e,r)=>new xt({location:"cpu-pinned",type:n,data:e,dims:r??[e.length]})});var Vn,Lo,qu,Ku,Yu=P(()=>{Vn=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["float16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),Lo=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),qu=!1,Ku=()=>{if(!qu){qu=!0;let n=typeof BigInt64Array<"u"&&typeof BigInt64Array.from=="function",e=typeof BigUint64Array<"u"&&typeof BigUint64Array.from=="function";n&&(Vn.set("int64",BigInt64Array),Lo.set(BigInt64Array,"int64")),e&&(Vn.set("uint64",BigUint64Array),Lo.set(BigUint64Array,"uint64"))}}});var Xu,Ju,Zu=P(()=>{Mo();Xu=n=>{let e=1;for(let r=0;r<n.length;r++){let t=n[r];if(typeof t!="number"||!Number.isSafeInteger(t))throw new TypeError(`dims[${r}] must be an integer, got: ${t}`);if(t<0)throw new RangeError(`dims[${r}] must be a non-negative integer, got: ${t}`);e*=t}return e},Ju=(n,e)=>{switch(n.location){case"cpu":return new xt(n.type,n.data,e);case"cpu-pinned":return new xt({location:"cpu-pinned",data:n.data,type:n.type,dims:e});case"texture":return new xt({location:"texture",texture:n.texture,type:n.type,dims:e});case"gpu-buffer":return new xt({location:"gpu-buffer",gpuBuffer:n.gpuBuffer,type:n.type,dims:e});default:throw new Error(`tensorReshape: tensor location ${n.location} is not supported`)}}});var xt,Mo=P(()=>{Gu();ju();Yu();Zu();xt=class{constructor(e,r,t){Ku();let o,i;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,o=e.type,i=e.dims,e.location){case"cpu-pinned":{let a=Vn.get(o);if(!a)throw new TypeError(`unsupported type "${o}" to create tensor from pinned buffer`);if(!(e.data instanceof a))throw new TypeError(`buffer should be of type ${a.name}`);this.cpuData=e.data;break}case"texture":{if(o!=="float32")throw new TypeError(`unsupported type "${o}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(o!=="float32"&&o!=="float16"&&o!=="int32"&&o!=="int64"&&o!=="uint32"&&o!=="bool")throw new TypeError(`unsupported type "${o}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,s;if(typeof e=="string")if(o=e,s=t,e==="string"){if(!Array.isArray(r))throw new TypeError("A string tensor's data must be a string array.");a=r}else{let l=Vn.get(e);if(l===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(r)){if(e==="float16")throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");e==="uint64"||e==="int64"?a=l.from(r,BigInt):a=l.from(r)}else if(r instanceof l)a=r;else throw new TypeError(`A ${o} tensor's data must be type of ${l}`)}else if(s=r,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let l=typeof e[0];if(l==="string")o="string",a=e;else if(l==="boolean")o="bool",a=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${l}.`)}else{let l=Lo.get(e.constructor);if(l===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);o=l,a=e}if(s===void 0)s=[a.length];else if(!Array.isArray(s))throw new TypeError("A tensor's dims must be a number array");i=s,this.cpuData=a,this.dataLocation="cpu"}let u=Xu(i);if(this.cpuData&&u!==this.cpuData.length)throw new Error(`Tensor's size(${u}) does not match data length(${this.cpuData.length}).`);this.type=o,this.dims=i,this.size=u}static async fromImage(e,r){return Wu(e,r)}static fromTexture(e,r){return Vu(e,r)}static fromGpuBuffer(e,r){return Uu(e,r)}static fromPinnedBuffer(e,r,t){return Hu(e,r,t)}toDataURL(e){return zu(this,e)}toImageData(e){return Fu(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,e&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return Ju(this,e)}}});var Et,fa=P(()=>{Mo();Et=xt});var No,Qu=P(()=>{Ro();fa();No=class n{constructor(e){this.handler=e}async run(e,r,t){let o={},i={};if(typeof e!="object"||e===null||e instanceof Et||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let u=!0;if(typeof r=="object"){if(r===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof Et)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(r.length===0)throw new TypeError("'fetches' cannot be an empty array.");u=!1;for(let l of r){if(typeof l!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(l)===-1)throw new RangeError(`'fetches' contains invalid output name: ${l}.`);o[l]=null}if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else{let l=!1,c=Object.getOwnPropertyNames(r);for(let p of this.outputNames)if(c.indexOf(p)!==-1){let h=r[p];(h===null||h instanceof Et)&&(l=!0,u=!1,o[p]=h)}if(l){if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else i=r}}else if(typeof r<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let l of this.inputNames)if(typeof e[l]>"u")throw new Error(`input '${l}' is missing in 'feeds'.`);if(u)for(let l of this.outputNames)o[l]=null;let a=await this.handler.run(e,o,i),s={};for(let l in a)if(Object.hasOwnProperty.call(a,l)){let c=a[l];c instanceof Et?s[l]=c:s[l]=new Et(c.type,c.data,c.dims)}return s}async release(){return this.handler.dispose()}static async create(e,r,t,o){let i,u={};if(typeof e=="string"){if(i=e,typeof r=="object"&&r!==null)u=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof Uint8Array){if(i=e,typeof r=="object"&&r!==null)u=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&e instanceof SharedArrayBuffer){let p=e,h=0,g=e.byteLength;if(typeof r=="object"&&r!==null)u=r;else if(typeof r=="number"){if(h=r,!Number.isSafeInteger(h))throw new RangeError("'byteOffset' must be an integer.");if(h<0||h>=p.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${p.byteLength}).`);if(g=e.byteLength-h,typeof t=="number"){if(g=t,!Number.isSafeInteger(g))throw new RangeError("'byteLength' must be an integer.");if(g<=0||h+g>p.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${p.byteLength-h}].`);if(typeof o=="object"&&o!==null)u=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else if(typeof t<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof r<"u")throw new TypeError("'options' must be an object.");i=new Uint8Array(p,h,g)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let s=(u.executionProviders||[]).map(p=>typeof p=="string"?p:p.name),c=await(await Bo(s)).createInferenceSessionHandler(i,u);return new n(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}});var yy,el=P(()=>{Qu();yy=No});var tl=P(()=>{});var vy,zo,rl=P(()=>{Ro();vy="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",zo=class n{constructor(e){this.handler=e}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}static async create(e,r){let t=e.evalModel||"",o=e.optimizerModel||"",i=r||{},a=(i.executionProviders||[]).map(l=>typeof l=="string"?l:l.name),s=await Bo(a);if(s.createTrainingSessionHandler){let l=await s.createTrainingSessionHandler(e.checkpointState,e.trainModel,t,o,i);return new n(l)}else throw new Error(vy)}async loadParametersBuffer(e,r){throw new Error("Method not implemented.")}async getContiguousParameters(e){throw new Error("Method not implemented.")}async runTrainStep(e,r,t){throw new Error("Method not implemented.")}async release(){return this.handler.dispose()}}});var xy,nl=P(()=>{rl();xy=zo});var pa={};Nr(pa,{InferenceSession:()=>yy,Tensor:()=>Et,TrainingSession:()=>xy,env:()=>xe,registerBackend:()=>mr});var Ct=P(()=>{ku();Nu();el();fa();tl();nl()});function Ir(n,e,r,t){if(e===void 0)return Ty(n);if(r===void 0)Fo(n,e,1);else if(typeof r=="number"&&t===void 0)Fo(n,e,r);else if(typeof r=="string"&&t===void 0)Fo(n,r,1,e);else if(typeof r=="string"&&typeof t=="number")Fo(n,r,t,e);else throw new TypeError("input is valid")}function Ty(n){return{verbose:Ir.verbose.bind(null,n),info:Ir.info.bind(null,n),warning:Ir.warning.bind(null,n),error:Ir.error.bind(null,n),fatal:Ir.fatal.bind(null,n)}}function Fo(n,e,r,t){let o=Un[t||""]||Un[""];il[n]<il[o.minimalSeverity]||(o.logDateTime&&(e=`${new Date().toISOString()}|${e}`),o.logSourceLocation,wy[o.provider].log(n,e,t))}var ha,ma,il,wy,al,Un,ze,Wo,Vo,Uo,Go,Pt=P(()=>{"use strict";ha=class{log(e,r,t){}},ma=class{log(e,r,t){console.log(`${this.color(e)} ${t?"\x1B[35m"+t+"\x1B[0m ":""}${r}`)}color(e){switch(e){case"verbose":return"\x1B[34;40mv\x1B[0m";case"info":return"\x1B[32mi\x1B[0m";case"warning":return"\x1B[30;43mw\x1B[0m";case"error":return"\x1B[31;40me\x1B[0m";case"fatal":return"\x1B[101mf\x1B[0m";default:throw new Error(`unsupported severity: ${e}`)}}},il={verbose:1e3,info:2e3,warning:4e3,error:5e3,fatal:6e3},wy={none:new ha,console:new ma},al={provider:"console",minimalSeverity:"warning",logDateTime:!0,logSourceLocation:!1},Un={"":al};(s=>{function n(l,c){s("verbose",l,c)}s.verbose=n;function e(l,c){s("info",l,c)}s.info=e;function r(l,c){s("warning",l,c)}s.warning=r;function t(l,c){s("error",l,c)}s.error=t;function o(l,c){s("fatal",l,c)}s.fatal=o;function i(l){Un={},u("",l||{})}s.reset=i;function u(l,c){if(l==="*")i(c);else{let p=Un[l]||al;Un[l]={provider:c.provider||p.provider,minimalSeverity:c.minimalSeverity||p.minimalSeverity,logDateTime:c.logDateTime===void 0?p.logDateTime:c.logDateTime,logSourceLocation:c.logSourceLocation===void 0?p.logSourceLocation:c.logSourceLocation}}}s.set=u;function a(l){let c={};l.logLevel&&(c.minimalSeverity=l.logLevel),u("",c)}s.setWithEnv=a})(Ir||={});ze=Ir,Wo=class{constructor(e,r,t,o,i,u){this.category=e;this.name=r;this.startTime=t;this.endCallback=o;this.timer=i;this.ctx=u}async end(){return this.endCallback(this)}async checkTimer(){if(this.ctx===void 0||this.timer===void 0)throw new Error("No webgl timer found");return this.ctx.endTimer(),this.ctx.waitForQueryAndGetTime(this.timer)}},Vo=class{constructor(e,r,t,o){this.category=e;this.name=r;this.startTime=t;this.endTime=o}},Uo=class{constructor(e,r,t){this._started=!1;this._flushPointer=0;this._started=!1,this._maxNumberEvents=e===void 0?1e4:e,this._flushBatchSize=r===void 0?10:r,this._flushIntervalInMilliseconds=t===void 0?5e3:t}static create(e){return e===void 0?new this:new this(e.maxNumberEvents,e.flushBatchSize,e.flushIntervalInMilliseconds)}start(){this._started=!0,this._timingEvents=[],this._flushTime=Go(),this._flushPointer=0}stop(){for(this._started=!1;this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer])}event(e,r,t,o){let i=this._started?this.begin(e,r,o):void 0,u=!1,a=t();if(a&&typeof a.then=="function")return u=!0,new Promise((s,l)=>{a.then(async c=>{i&&await i.end(),s(c)},async c=>{i&&await i.end(),l(c)})});if(!u&&i){let s=i.end();if(s&&typeof s.then=="function")return new Promise((l,c)=>{s.then(()=>{l(a)},p=>{c(p)})})}return a}begin(e,r,t){if(!this._started)throw new Error("profiler is not started yet");if(t===void 0){let o=Go();return this.flush(o),new Wo(e,r,o,i=>this.endSync(i))}else{let o=t.beginTimer();return new Wo(e,r,0,async i=>this.end(i),o,t)}}async end(e){let r=await e.checkTimer();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new Vo(e.category,e.name,e.startTime,r)),this.flush(r))}endSync(e){let r=Go();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new Vo(e.category,e.name,e.startTime,r)),this.flush(r))}logOneEvent(e){ze.verbose(`Profiler.${e.category}`,`${(e.endTime-e.startTime).toFixed(2)}ms on event '${e.name}' at ${e.endTime.toFixed(2)}`)}flush(e){if(this._timingEvents.length-this._flushPointer>=this._flushBatchSize||e-this._flushTime>=this._flushIntervalInMilliseconds){for(let r=this._flushPointer;this._flushPointer<r+this._flushBatchSize&&this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer]);this._flushTime=Go()}}get started(){return this._started}},Go=typeof performance<"u"&&performance.now?()=>performance.now():Date.now});function sl(n,e,r){for(let t of r){let o=t[0],i=t[1],u=t[2],a=t[3],s=t[4];if(n.opType===o){for(let l of e)if((l.domain===i||l.domain==="ai.onnx"&&i==="")&&$y(l.version,u))return{opImpl:a,opInit:s}}}throw new TypeError(`cannot resolve operator '${n.opType}' with opsets: ${e.map(t=>`${t.domain||"ai.onnx"} v${t.version}`).join(", ")}`)}function $y(n,e){if(e.endsWith("+")){let r=Number.parseInt(e.substring(0,e.length-1),10);return!isNaN(r)&&r<=n}else if(e.split("-").length===2){let r=e.split("-"),t=Number.parseInt(r[0],10),o=Number.parseInt(r[1],10);return!isNaN(t)&&!isNaN(o)&&t<=n&&n<=o}else return Number.parseInt(e,10)===n}var ul=P(()=>{"use strict"});var ll=He(ga=>{"use strict";ga.__esModule=!0;var Sy=function(){function n(e){if(!e)throw new TypeError("Invalid argument; `value` has no value.");this.value=n.EMPTY,e&&n.isGuid(e)&&(this.value=e)}return n.isGuid=function(e){var r=e.toString();return e&&(e instanceof n||n.validator.test(r))},n.create=function(){return new n([n.gen(2),n.gen(1),n.gen(1),n.gen(1),n.gen(3)].join("-"))},n.createEmpty=function(){return new n("emptyguid")},n.parse=function(e){return new n(e)},n.raw=function(){return[n.gen(2),n.gen(1),n.gen(1),n.gen(1),n.gen(3)].join("-")},n.gen=function(e){for(var r="",t=0;t<e;t++)r+=((1+Math.random())*65536|0).toString(16).substring(1);return r},n.prototype.equals=function(e){return n.isGuid(e)&&this.value===e.toString()},n.prototype.isEmpty=function(){return this.value===n.EMPTY},n.prototype.toString=function(){return this.value},n.prototype.toJSON=function(){return{value:this.value}},n.validator=new RegExp("^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$","i"),n.EMPTY="00000000-0000-0000-0000-000000000000",n}();ga.Guid=Sy});function je(n,e,r){this.low=n|0,this.high=e|0,this.unsigned=!!r}function bt(n){return(n&&n.__isLong__)===!0}function cl(n){var e=Math.clz32(n&-n);return n?31-e:e}function Fr(n,e){var r,t,o;return e?(n>>>=0,(o=0<=n&&n<256)&&(t=fl[n],t)?t:(r=Me(n,0,!0),o&&(fl[n]=r),r)):(n|=0,(o=-128<=n&&n<128)&&(t=dl[n],t)?t:(r=Me(n,n<0?-1:0,!1),o&&(dl[n]=r),r))}function kt(n,e){if(isNaN(n))return e?gr:jt;if(e){if(n<0)return gr;if(n>=gl)return vl}else{if(n<=-hl)return $t;if(n+1>=hl)return yl}return n<0?kt(-n,e).neg():Me(n%fn|0,n/fn|0,e)}function Me(n,e,r){return new je(n,e,r)}function ya(n,e,r){if(n.length===0)throw Error("empty string");if(typeof e=="number"?(r=e,e=!1):e=!!e,n==="NaN"||n==="Infinity"||n==="+Infinity"||n==="-Infinity")return e?gr:jt;if(r=r||10,r<2||36<r)throw RangeError("radix");var t;if((t=n.indexOf("-"))>0)throw Error("interior hyphen");if(t===0)return ya(n.substring(1),e,r).neg();for(var o=kt(Ho(r,8)),i=jt,u=0;u<n.length;u+=8){var a=Math.min(8,n.length-u),s=parseInt(n.substring(u,u+a),r);if(a<8){var l=kt(Ho(r,a));i=i.mul(l).add(kt(s))}else i=i.mul(o),i=i.add(kt(s))}return i.unsigned=e,i}function qt(n,e){return typeof n=="number"?kt(n,e):typeof n=="string"?ya(n,e):Me(n.low,n.high,typeof e=="boolean"?e:n.unsigned)}var Dt,dl,fl,Ho,pl,Iy,fn,gl,hl,ml,jt,gr,dn,bl,ba,yl,vl,$t,U,br,va=P(()=>{Dt=null;try{Dt=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}je.prototype.__isLong__;Object.defineProperty(je.prototype,"__isLong__",{value:!0});je.isLong=bt;dl={},fl={};je.fromInt=Fr;je.fromNumber=kt;je.fromBits=Me;Ho=Math.pow;je.fromString=ya;je.fromValue=qt;pl=65536,Iy=1<<24,fn=pl*pl,gl=fn*fn,hl=gl/2,ml=Fr(Iy),jt=Fr(0);je.ZERO=jt;gr=Fr(0,!0);je.UZERO=gr;dn=Fr(1);je.ONE=dn;bl=Fr(1,!0);je.UONE=bl;ba=Fr(-1);je.NEG_ONE=ba;yl=Me(-1,2147483647,!1);je.MAX_VALUE=yl;vl=Me(-1,-1,!0);je.MAX_UNSIGNED_VALUE=vl;$t=Me(0,-2147483648,!1);je.MIN_VALUE=$t;U=je.prototype;U.toInt=function(){return this.unsigned?this.low>>>0:this.low};U.toNumber=function(){return this.unsigned?(this.high>>>0)*fn+(this.low>>>0):this.high*fn+(this.low>>>0)};U.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq($t)){var r=kt(e),t=this.div(r),o=t.mul(r).sub(this);return t.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var i=kt(Ho(e,6),this.unsigned),u=this,a="";;){var s=u.div(i),l=u.sub(s.mul(i)).toInt()>>>0,c=l.toString(e);if(u=s,u.isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}};U.getHighBits=function(){return this.high};U.getHighBitsUnsigned=function(){return this.high>>>0};U.getLowBits=function(){return this.low};U.getLowBitsUnsigned=function(){return this.low>>>0};U.getNumBitsAbs=function(){if(this.isNegative())return this.eq($t)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,r=31;r>0&&!(e&1<<r);r--);return this.high!=0?r+33:r+1};U.isZero=function(){return this.high===0&&this.low===0};U.eqz=U.isZero;U.isNegative=function(){return!this.unsigned&&this.high<0};U.isPositive=function(){return this.unsigned||this.high>=0};U.isOdd=function(){return(this.low&1)===1};U.isEven=function(){return(this.low&1)===0};U.equals=function(e){return bt(e)||(e=qt(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};U.eq=U.equals;U.notEquals=function(e){return!this.eq(e)};U.neq=U.notEquals;U.ne=U.notEquals;U.lessThan=function(e){return this.comp(e)<0};U.lt=U.lessThan;U.lessThanOrEqual=function(e){return this.comp(e)<=0};U.lte=U.lessThanOrEqual;U.le=U.lessThanOrEqual;U.greaterThan=function(e){return this.comp(e)>0};U.gt=U.greaterThan;U.greaterThanOrEqual=function(e){return this.comp(e)>=0};U.gte=U.greaterThanOrEqual;U.ge=U.greaterThanOrEqual;U.compare=function(e){if(bt(e)||(e=qt(e)),this.eq(e))return 0;var r=this.isNegative(),t=e.isNegative();return r&&!t?-1:!r&&t?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};U.comp=U.compare;U.negate=function(){return!this.unsigned&&this.eq($t)?$t:this.not().add(dn)};U.neg=U.negate;U.add=function(e){bt(e)||(e=qt(e));var r=this.high>>>16,t=this.high&65535,o=this.low>>>16,i=this.low&65535,u=e.high>>>16,a=e.high&65535,s=e.low>>>16,l=e.low&65535,c=0,p=0,h=0,g=0;return g+=i+l,h+=g>>>16,g&=65535,h+=o+s,p+=h>>>16,h&=65535,p+=t+a,c+=p>>>16,p&=65535,c+=r+u,c&=65535,Me(h<<16|g,c<<16|p,this.unsigned)};U.subtract=function(e){return bt(e)||(e=qt(e)),this.add(e.neg())};U.sub=U.subtract;U.multiply=function(e){if(this.isZero())return this;if(bt(e)||(e=qt(e)),Dt){var r=Dt.mul(this.low,this.high,e.low,e.high);return Me(r,Dt.get_high(),this.unsigned)}if(e.isZero())return this.unsigned?gr:jt;if(this.eq($t))return e.isOdd()?$t:jt;if(e.eq($t))return this.isOdd()?$t:jt;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(ml)&&e.lt(ml))return kt(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,o=this.high&65535,i=this.low>>>16,u=this.low&65535,a=e.high>>>16,s=e.high&65535,l=e.low>>>16,c=e.low&65535,p=0,h=0,g=0,y=0;return y+=u*c,g+=y>>>16,y&=65535,g+=i*c,h+=g>>>16,g&=65535,g+=u*l,h+=g>>>16,g&=65535,h+=o*c,p+=h>>>16,h&=65535,h+=i*l,p+=h>>>16,h&=65535,h+=u*s,p+=h>>>16,h&=65535,p+=t*c+o*l+i*s+u*a,p&=65535,Me(g<<16|y,p<<16|h,this.unsigned)};U.mul=U.multiply;U.divide=function(e){if(bt(e)||(e=qt(e)),e.isZero())throw Error("division by zero");if(Dt){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var r=(this.unsigned?Dt.div_u:Dt.div_s)(this.low,this.high,e.low,e.high);return Me(r,Dt.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?gr:jt;var t,o,i;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return gr;if(e.gt(this.shru(1)))return bl;i=gr}else{if(this.eq($t)){if(e.eq(dn)||e.eq(ba))return $t;if(e.eq($t))return dn;var u=this.shr(1);return t=u.div(e).shl(1),t.eq(jt)?e.isNegative()?dn:ba:(o=this.sub(e.mul(t)),i=t.add(o.div(e)),i)}else if(e.eq($t))return this.unsigned?gr:jt;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=jt}for(o=this;o.gte(e);){t=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(t)/Math.LN2),s=a<=48?1:Ho(2,a-48),l=kt(t),c=l.mul(e);c.isNegative()||c.gt(o);)t-=s,l=kt(t,this.unsigned),c=l.mul(e);l.isZero()&&(l=dn),i=i.add(l),o=o.sub(c)}return i};U.div=U.divide;U.modulo=function(e){if(bt(e)||(e=qt(e)),Dt){var r=(this.unsigned?Dt.rem_u:Dt.rem_s)(this.low,this.high,e.low,e.high);return Me(r,Dt.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};U.mod=U.modulo;U.rem=U.modulo;U.not=function(){return Me(~this.low,~this.high,this.unsigned)};U.countLeadingZeros=function(){return this.high?Math.clz32(this.high):Math.clz32(this.low)+32};U.clz=U.countLeadingZeros;U.countTrailingZeros=function(){return this.low?cl(this.low):cl(this.high)+32};U.ctz=U.countTrailingZeros;U.and=function(e){return bt(e)||(e=qt(e)),Me(this.low&e.low,this.high&e.high,this.unsigned)};U.or=function(e){return bt(e)||(e=qt(e)),Me(this.low|e.low,this.high|e.high,this.unsigned)};U.xor=function(e){return bt(e)||(e=qt(e)),Me(this.low^e.low,this.high^e.high,this.unsigned)};U.shiftLeft=function(e){return bt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Me(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Me(0,this.low<<e-32,this.unsigned)};U.shl=U.shiftLeft;U.shiftRight=function(e){return bt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Me(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Me(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};U.shr=U.shiftRight;U.shiftRightUnsigned=function(e){return bt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Me(this.low>>>e|this.high<<32-e,this.high>>>e,this.unsigned):e===32?Me(this.high,0,this.unsigned):Me(this.high>>>e-32,0,this.unsigned)};U.shru=U.shiftRightUnsigned;U.shr_u=U.shiftRightUnsigned;U.rotateLeft=function(e){var r;return bt(e)&&(e=e.toInt()),(e&=63)===0?this:e===32?Me(this.high,this.low,this.unsigned):e<32?(r=32-e,Me(this.low<<e|this.high>>>r,this.high<<e|this.low>>>r,this.unsigned)):(e-=32,r=32-e,Me(this.high<<e|this.low>>>r,this.low<<e|this.high>>>r,this.unsigned))};U.rotl=U.rotateLeft;U.rotateRight=function(e){var r;return bt(e)&&(e=e.toInt()),(e&=63)===0?this:e===32?Me(this.high,this.low,this.unsigned):e<32?(r=32-e,Me(this.high<<r|this.low>>>e,this.low<<r|this.high>>>e,this.unsigned)):(e-=32,r=32-e,Me(this.low<<r|this.high>>>e,this.high<<r|this.low>>>e,this.unsigned))};U.rotr=U.rotateRight;U.toSigned=function(){return this.unsigned?Me(this.low,this.high,!1):this};U.toUnsigned=function(){return this.unsigned?this:Me(this.low,this.high,!0)};U.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};U.toBytesLE=function(){var e=this.high,r=this.low;return[r&255,r>>>8&255,r>>>16&255,r>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};U.toBytesBE=function(){var e=this.high,r=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,r>>>24,r>>>16&255,r>>>8&255,r&255]};je.fromBytes=function(e,r,t){return t?je.fromBytesLE(e,r):je.fromBytesBE(e,r)};je.fromBytesLE=function(e,r){return new je(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,r)};je.fromBytesBE=function(e,r){return new je(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],r)};br=je});var C,jo=P(()=>{C={};C.Offset;C.Table;C.SIZEOF_SHORT=2;C.SIZEOF_INT=4;C.FILE_IDENTIFIER_LENGTH=4;C.SIZE_PREFIX_LENGTH=4;C.Encoding={UTF8_BYTES:1,UTF16_STRING:2};C.int32=new Int32Array(2);C.float32=new Float32Array(C.int32.buffer);C.float64=new Float64Array(C.int32.buffer);C.isLittleEndian=new Uint16Array(new Uint8Array([1,0]).buffer)[0]===1;C.Long=function(n,e){this.low=n|0,this.high=e|0};C.Long.create=function(n,e){return n==0&&e==0?C.Long.ZERO:new C.Long(n,e)};C.Long.prototype.toFloat64=function(){return(this.low>>>0)+this.high*4294967296};C.Long.prototype.equals=function(n){return this.low==n.low&&this.high==n.high};C.Long.ZERO=new C.Long(0,0);C.Builder=function(n){if(n)var e=n;else var e=1024;this.bb=C.ByteBuffer.allocate(e),this.space=e,this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1};C.Builder.prototype.clear=function(){this.bb.clear(),this.space=this.bb.capacity(),this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1};C.Builder.prototype.forceDefaults=function(n){this.force_defaults=n};C.Builder.prototype.dataBuffer=function(){return this.bb};C.Builder.prototype.asUint8Array=function(){return this.bb.bytes().subarray(this.bb.position(),this.bb.position()+this.offset())};C.Builder.prototype.prep=function(n,e){n>this.minalign&&(this.minalign=n);for(var r=~(this.bb.capacity()-this.space+e)+1&n-1;this.space<r+n+e;){var t=this.bb.capacity();this.bb=C.Builder.growByteBuffer(this.bb),this.space+=this.bb.capacity()-t}this.pad(r)};C.Builder.prototype.pad=function(n){for(var e=0;e<n;e++)this.bb.writeInt8(--this.space,0)};C.Builder.prototype.writeInt8=function(n){this.bb.writeInt8(this.space-=1,n)};C.Builder.prototype.writeInt16=function(n){this.bb.writeInt16(this.space-=2,n)};C.Builder.prototype.writeInt32=function(n){this.bb.writeInt32(this.space-=4,n)};C.Builder.prototype.writeInt64=function(n){this.bb.writeInt64(this.space-=8,n)};C.Builder.prototype.writeFloat32=function(n){this.bb.writeFloat32(this.space-=4,n)};C.Builder.prototype.writeFloat64=function(n){this.bb.writeFloat64(this.space-=8,n)};C.Builder.prototype.addInt8=function(n){this.prep(1,0),this.writeInt8(n)};C.Builder.prototype.addInt16=function(n){this.prep(2,0),this.writeInt16(n)};C.Builder.prototype.addInt32=function(n){this.prep(4,0),this.writeInt32(n)};C.Builder.prototype.addInt64=function(n){this.prep(8,0),this.writeInt64(n)};C.Builder.prototype.addFloat32=function(n){this.prep(4,0),this.writeFloat32(n)};C.Builder.prototype.addFloat64=function(n){this.prep(8,0),this.writeFloat64(n)};C.Builder.prototype.addFieldInt8=function(n,e,r){(this.force_defaults||e!=r)&&(this.addInt8(e),this.slot(n))};C.Builder.prototype.addFieldInt16=function(n,e,r){(this.force_defaults||e!=r)&&(this.addInt16(e),this.slot(n))};C.Builder.prototype.addFieldInt32=function(n,e,r){(this.force_defaults||e!=r)&&(this.addInt32(e),this.slot(n))};C.Builder.prototype.addFieldInt64=function(n,e,r){(this.force_defaults||!e.equals(r))&&(this.addInt64(e),this.slot(n))};C.Builder.prototype.addFieldFloat32=function(n,e,r){(this.force_defaults||e!=r)&&(this.addFloat32(e),this.slot(n))};C.Builder.prototype.addFieldFloat64=function(n,e,r){(this.force_defaults||e!=r)&&(this.addFloat64(e),this.slot(n))};C.Builder.prototype.addFieldOffset=function(n,e,r){(this.force_defaults||e!=r)&&(this.addOffset(e),this.slot(n))};C.Builder.prototype.addFieldStruct=function(n,e,r){e!=r&&(this.nested(e),this.slot(n))};C.Builder.prototype.nested=function(n){if(n!=this.offset())throw new Error("FlatBuffers: struct must be serialized inline.")};C.Builder.prototype.notNested=function(){if(this.isNested)throw new Error("FlatBuffers: object serialization must not be nested.")};C.Builder.prototype.slot=function(n){this.vtable[n]=this.offset()};C.Builder.prototype.offset=function(){return this.bb.capacity()-this.space};C.Builder.growByteBuffer=function(n){var e=n.capacity();if(e&3221225472)throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");var r=e<<1,t=C.ByteBuffer.allocate(r);return t.setPosition(r-e),t.bytes().set(n.bytes(),r-e),t};C.Builder.prototype.addOffset=function(n){this.prep(C.SIZEOF_INT,0),this.writeInt32(this.offset()-n+C.SIZEOF_INT)};C.Builder.prototype.startObject=function(n){this.notNested(),this.vtable==null&&(this.vtable=[]),this.vtable_in_use=n;for(var e=0;e<n;e++)this.vtable[e]=0;this.isNested=!0,this.object_start=this.offset()};C.Builder.prototype.endObject=function(){if(this.vtable==null||!this.isNested)throw new Error("FlatBuffers: endObject called without startObject");this.addInt32(0);for(var n=this.offset(),e=this.vtable_in_use-1;e>=0&&this.vtable[e]==0;e--);for(var r=e+1;e>=0;e--)this.addInt16(this.vtable[e]!=0?n-this.vtable[e]:0);var t=2;this.addInt16(n-this.object_start);var o=(r+t)*C.SIZEOF_SHORT;this.addInt16(o);var i=0,u=this.space;e:for(e=0;e<this.vtables.length;e++){var a=this.bb.capacity()-this.vtables[e];if(o==this.bb.readInt16(a)){for(var s=C.SIZEOF_SHORT;s<o;s+=C.SIZEOF_SHORT)if(this.bb.readInt16(u+s)!=this.bb.readInt16(a+s))continue e;i=this.vtables[e];break}}return i?(this.space=this.bb.capacity()-n,this.bb.writeInt32(this.space,i-n)):(this.vtables.push(this.offset()),this.bb.writeInt32(this.bb.capacity()-n,this.offset()-n)),this.isNested=!1,n};C.Builder.prototype.finish=function(n,e,r){var t=r?C.SIZE_PREFIX_LENGTH:0;if(e){var o=e;if(this.prep(this.minalign,C.SIZEOF_INT+C.FILE_IDENTIFIER_LENGTH+t),o.length!=C.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+C.FILE_IDENTIFIER_LENGTH);for(var i=C.FILE_IDENTIFIER_LENGTH-1;i>=0;i--)this.writeInt8(o.charCodeAt(i))}this.prep(this.minalign,C.SIZEOF_INT+t),this.addOffset(n),t&&this.addInt32(this.bb.capacity()-this.space),this.bb.setPosition(this.space)};C.Builder.prototype.finishSizePrefixed=function(n,e){this.finish(n,e,!0)};C.Builder.prototype.requiredField=function(n,e){var r=this.bb.capacity()-n,t=r-this.bb.readInt32(r),o=this.bb.readInt16(t+e)!=0;if(!o)throw new Error("FlatBuffers: field "+e+" must be set")};C.Builder.prototype.startVector=function(n,e,r){this.notNested(),this.vector_num_elems=e,this.prep(C.SIZEOF_INT,n*e),this.prep(r,n*e)};C.Builder.prototype.endVector=function(){return this.writeInt32(this.vector_num_elems),this.offset()};C.Builder.prototype.createString=function(n){if(n instanceof Uint8Array)var e=n;else for(var e=[],r=0;r<n.length;){var t,o=n.charCodeAt(r++);if(o<55296||o>=56320)t=o;else{var i=n.charCodeAt(r++);t=(o<<10)+i+(65536-56623104-56320)}t<128?e.push(t):(t<2048?e.push(t>>6&31|192):(t<65536?e.push(t>>12&15|224):e.push(t>>18&7|240,t>>12&63|128),e.push(t>>6&63|128)),e.push(t&63|128))}this.addInt8(0),this.startVector(1,e.length,1),this.bb.setPosition(this.space-=e.length);for(var r=0,u=this.space,a=this.bb.bytes();r<e.length;r++)a[u++]=e[r];return this.endVector()};C.Builder.prototype.createLong=function(n,e){return C.Long.create(n,e)};C.ByteBuffer=function(n){this.bytes_=n,this.position_=0};C.ByteBuffer.allocate=function(n){return new C.ByteBuffer(new Uint8Array(n))};C.ByteBuffer.prototype.clear=function(){this.position_=0};C.ByteBuffer.prototype.bytes=function(){return this.bytes_};C.ByteBuffer.prototype.position=function(){return this.position_};C.ByteBuffer.prototype.setPosition=function(n){this.position_=n};C.ByteBuffer.prototype.capacity=function(){return this.bytes_.length};C.ByteBuffer.prototype.readInt8=function(n){return this.readUint8(n)<<24>>24};C.ByteBuffer.prototype.readUint8=function(n){return this.bytes_[n]};C.ByteBuffer.prototype.readInt16=function(n){return this.readUint16(n)<<16>>16};C.ByteBuffer.prototype.readUint16=function(n){return this.bytes_[n]|this.bytes_[n+1]<<8};C.ByteBuffer.prototype.readInt32=function(n){return this.bytes_[n]|this.bytes_[n+1]<<8|this.bytes_[n+2]<<16|this.bytes_[n+3]<<24};C.ByteBuffer.prototype.readUint32=function(n){return this.readInt32(n)>>>0};C.ByteBuffer.prototype.readInt64=function(n){return new C.Long(this.readInt32(n),this.readInt32(n+4))};C.ByteBuffer.prototype.readUint64=function(n){return new C.Long(this.readUint32(n),this.readUint32(n+4))};C.ByteBuffer.prototype.readFloat32=function(n){return C.int32[0]=this.readInt32(n),C.float32[0]};C.ByteBuffer.prototype.readFloat64=function(n){return C.int32[C.isLittleEndian?0:1]=this.readInt32(n),C.int32[C.isLittleEndian?1:0]=this.readInt32(n+4),C.float64[0]};C.ByteBuffer.prototype.writeInt8=function(n,e){this.bytes_[n]=e};C.ByteBuffer.prototype.writeUint8=function(n,e){this.bytes_[n]=e};C.ByteBuffer.prototype.writeInt16=function(n,e){this.bytes_[n]=e,this.bytes_[n+1]=e>>8};C.ByteBuffer.prototype.writeUint16=function(n,e){this.bytes_[n]=e,this.bytes_[n+1]=e>>8};C.ByteBuffer.prototype.writeInt32=function(n,e){this.bytes_[n]=e,this.bytes_[n+1]=e>>8,this.bytes_[n+2]=e>>16,this.bytes_[n+3]=e>>24};C.ByteBuffer.prototype.writeUint32=function(n,e){this.bytes_[n]=e,this.bytes_[n+1]=e>>8,this.bytes_[n+2]=e>>16,this.bytes_[n+3]=e>>24};C.ByteBuffer.prototype.writeInt64=function(n,e){this.writeInt32(n,e.low),this.writeInt32(n+4,e.high)};C.ByteBuffer.prototype.writeUint64=function(n,e){this.writeUint32(n,e.low),this.writeUint32(n+4,e.high)};C.ByteBuffer.prototype.writeFloat32=function(n,e){C.float32[0]=e,this.writeInt32(n,C.int32[0])};C.ByteBuffer.prototype.writeFloat64=function(n,e){C.float64[0]=e,this.writeInt32(n,C.int32[C.isLittleEndian?0:1]),this.writeInt32(n+4,C.int32[C.isLittleEndian?1:0])};C.ByteBuffer.prototype.getBufferIdentifier=function(){if(this.bytes_.length<this.position_+C.SIZEOF_INT+C.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");for(var n="",e=0;e<C.FILE_IDENTIFIER_LENGTH;e++)n+=String.fromCharCode(this.readInt8(this.position_+C.SIZEOF_INT+e));return n};C.ByteBuffer.prototype.__offset=function(n,e){var r=n-this.readInt32(n);return e<this.readInt16(r)?this.readInt16(r+e):0};C.ByteBuffer.prototype.__union=function(n,e){return n.bb_pos=e+this.readInt32(e),n.bb=this,n};C.ByteBuffer.prototype.__string=function(n,e){n+=this.readInt32(n);var r=this.readInt32(n),t="",o=0;if(n+=C.SIZEOF_INT,e===C.Encoding.UTF8_BYTES)return this.bytes_.subarray(n,n+r);for(;o<r;){var i,u=this.readUint8(n+o++);if(u<192)i=u;else{var a=this.readUint8(n+o++);if(u<224)i=(u&31)<<6|a&63;else{var s=this.readUint8(n+o++);if(u<240)i=(u&15)<<12|(a&63)<<6|s&63;else{var l=this.readUint8(n+o++);i=(u&7)<<18|(a&63)<<12|(s&63)<<6|l&63}}}i<65536?t+=String.fromCharCode(i):(i-=65536,t+=String.fromCharCode((i>>10)+55296,(i&1024-1)+56320))}return t};C.ByteBuffer.prototype.__indirect=function(n){return n+this.readInt32(n)};C.ByteBuffer.prototype.__vector=function(n){return n+this.readInt32(n)+C.SIZEOF_INT};C.ByteBuffer.prototype.__vector_len=function(n){return this.readInt32(n+this.readInt32(n))};C.ByteBuffer.prototype.__has_identifier=function(n){if(n.length!=C.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+C.FILE_IDENTIFIER_LENGTH);for(var e=0;e<C.FILE_IDENTIFIER_LENGTH;e++)if(n.charCodeAt(e)!=this.readInt8(this.position_+C.SIZEOF_INT+e))return!1;return!0};C.ByteBuffer.prototype.createLong=function(n,e){return C.Long.create(n,e)}});var oe,Hn=P(()=>{"use strict";jo();(e=>{let n;(t=>{let r;(i=>{let o;(E=>(E[E.UNDEFINED=0]="UNDEFINED",E[E.FLOAT=1]="FLOAT",E[E.INT=2]="INT",E[E.STRING=3]="STRING",E[E.TENSOR=4]="TENSOR",E[E.GRAPH=5]="GRAPH",E[E.FLOATS=6]="FLOATS",E[E.INTS=7]="INTS",E[E.STRINGS=8]="STRINGS",E[E.TENSORS=9]="TENSORS",E[E.GRAPHS=10]="GRAPHS",E[E.SPARSE_TENSOR=11]="SPARSE_TENSOR",E[E.SPARSE_TENSORS=12]="SPARSE_TENSORS"))(o=i.AttributeType||={})})(r=t.fbs||={})})(n=e.experimental||={})})(oe||={});(e=>{let n;(t=>{let r;(i=>{let o;(l=>(l[l.UNKNOWN=0]="UNKNOWN",l[l.VALUE=1]="VALUE",l[l.PARAM=2]="PARAM"))(o=i.DimensionValueType||={})})(r=t.fbs||={})})(n=e.experimental||={})})(oe||={});(e=>{let n;(t=>{let r;(i=>{let o;(R=>(R[R.UNDEFINED=0]="UNDEFINED",R[R.FLOAT=1]="FLOAT",R[R.UINT8=2]="UINT8",R[R.INT8=3]="INT8",R[R.UINT16=4]="UINT16",R[R.INT16=5]="INT16",R[R.INT32=6]="INT32",R[R.INT64=7]="INT64",R[R.STRING=8]="STRING",R[R.BOOL=9]="BOOL",R[R.FLOAT16=10]="FLOAT16",R[R.DOUBLE=11]="DOUBLE",R[R.UINT32=12]="UINT32",R[R.UINT64=13]="UINT64",R[R.COMPLEX64=14]="COMPLEX64",R[R.COMPLEX128=15]="COMPLEX128",R[R.BFLOAT16=16]="BFLOAT16",R[R.FLOAT8E4M3FN=17]="FLOAT8E4M3FN",R[R.FLOAT8E4M3FNUZ=18]="FLOAT8E4M3FNUZ",R[R.FLOAT8E5M2=19]="FLOAT8E5M2",R[R.FLOAT8E5M2FNUZ=20]="FLOAT8E5M2FNUZ"))(o=i.TensorDataType||={})})(r=t.fbs||={})})(n=e.experimental||={})})(oe||={});(e=>{let n;(t=>{let r;(i=>{let o;(s=>(s[s.Primitive=0]="Primitive",s[s.Fused=1]="Fused"))(o=i.NodeType||={})})(r=t.fbs||={})})(n=e.experimental||={})})(oe||={});(e=>{let n;(t=>{let r;(i=>{let o;(c=>(c[c.NONE=0]="NONE",c[c.tensor_type=1]="tensor_type",c[c.sequence_type=2]="sequence_type",c[c.map_type=3]="map_type"))(o=i.TypeInfoValue||={})})(r=t.fbs||={})})(n=e.experimental||={})})(oe||={});(e=>{let n;(t=>{let r;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsShape(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsShape(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}dim(a,s){let l=this.bb.__offset(this.bb_pos,4);return l?(s||new e.experimental.fbs.Dimension).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}dimLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}static startShape(a){a.startObject(1)}static addDim(a,s){a.addFieldOffset(0,s,0)}static createDimVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startDimVector(a,s){a.startVector(4,s,4)}static endShape(a){return a.endObject()}static createShape(a,s){return o.startShape(a),o.addDim(a,s),o.endShape(a)}}i.Shape=o})(r=t.fbs||={})})(n=e.experimental||={})})(oe||={});(e=>{let n;(t=>{let r;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsDimension(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsDimension(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}value(a){let s=this.bb.__offset(this.bb_pos,4);return s?(a||new e.experimental.fbs.DimensionValue).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}denotation(a){let s=this.bb.__offset(this.bb_pos,6);return s?this.bb.__string(this.bb_pos+s,a):null}static startDimension(a){a.startObject(2)}static addValue(a,s){a.addFieldOffset(0,s,0)}static addDenotation(a,s){a.addFieldOffset(1,s,0)}static endDimension(a){return a.endObject()}static createDimension(a,s,l){return o.startDimension(a),o.addValue(a,s),o.addDenotation(a,l),o.endDimension(a)}}i.Dimension=o})(r=t.fbs||={})})(n=e.experimental||={})})(oe||={});(e=>{let n;(t=>{let r;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsDimensionValue(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsDimensionValue(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}dimType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt8(this.bb_pos+a):0}dimValue(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}dimParam(a){let s=this.bb.__offset(this.bb_pos,8);return s?this.bb.__string(this.bb_pos+s,a):null}static startDimensionValue(a){a.startObject(3)}static addDimType(a,s){a.addFieldInt8(0,s,0)}static addDimValue(a,s){a.addFieldInt64(1,s,a.createLong(0,0))}static addDimParam(a,s){a.addFieldOffset(2,s,0)}static endDimensionValue(a){return a.endObject()}static createDimensionValue(a,s,l,c){return o.startDimensionValue(a),o.addDimType(a,s),o.addDimValue(a,l),o.addDimParam(a,c),o.endDimensionValue(a)}}i.DimensionValue=o})(r=t.fbs||={})})(n=e.experimental||={})})(oe||={});(e=>{let n;(t=>{let r;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsTensorTypeAndShape(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTensorTypeAndShape(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}elemType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt32(this.bb_pos+a):0}shape(a){let s=this.bb.__offset(this.bb_pos,6);return s?(a||new e.experimental.fbs.Shape).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}static startTensorTypeAndShape(a){a.startObject(2)}static addElemType(a,s){a.addFieldInt32(0,s,0)}static addShape(a,s){a.addFieldOffset(1,s,0)}static endTensorTypeAndShape(a){return a.endObject()}static createTensorTypeAndShape(a,s,l){return o.startTensorTypeAndShape(a),o.addElemType(a,s),o.addShape(a,l),o.endTensorTypeAndShape(a)}}i.TensorTypeAndShape=o})(r=t.fbs||={})})(n=e.experimental||={})})(oe||={});(e=>{let n;(t=>{let r;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsMapType(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsMapType(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}keyType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt32(this.bb_pos+a):0}valueType(a){let s=this.bb.__offset(this.bb_pos,6);return s?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}static startMapType(a){a.startObject(2)}static addKeyType(a,s){a.addFieldInt32(0,s,0)}static addValueType(a,s){a.addFieldOffset(1,s,0)}static endMapType(a){return a.endObject()}static createMapType(a,s,l){return o.startMapType(a),o.addKeyType(a,s),o.addValueType(a,l),o.endMapType(a)}}i.MapType=o})(r=t.fbs||={})})(n=e.experimental||={})})(oe||={});(e=>{let n;(t=>{let r;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsSequenceType(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSequenceType(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}elemType(a){let s=this.bb.__offset(this.bb_pos,4);return s?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}static startSequenceType(a){a.startObject(1)}static addElemType(a,s){a.addFieldOffset(0,s,0)}static endSequenceType(a){return a.endObject()}static createSequenceType(a,s){return o.startSequenceType(a),o.addElemType(a,s),o.endSequenceType(a)}}i.SequenceType=o})(r=t.fbs||={})})(n=e.experimental||={})})(oe||={});(e=>{let n;(t=>{let r;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}nodeIndex(){return this.bb.readUint32(this.bb_pos)}srcArgIndex(){return this.bb.readInt32(this.bb_pos+4)}dstArgIndex(){return this.bb.readInt32(this.bb_pos+8)}static createEdgeEnd(a,s,l,c){return a.prep(4,12),a.writeInt32(c),a.writeInt32(l),a.writeInt32(s),a.offset()}}i.EdgeEnd=o})(r=t.fbs||={})})(n=e.experimental||={})})(oe||={});(e=>{let n;(t=>{let r;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsNodeEdge(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsNodeEdge(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}nodeIndex(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readUint32(this.bb_pos+a):0}inputEdges(a,s){let l=this.bb.__offset(this.bb_pos,6);return l?(s||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+l)+a*12,this.bb):null}inputEdgesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}outputEdges(a,s){let l=this.bb.__offset(this.bb_pos,8);return l?(s||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+l)+a*12,this.bb):null}outputEdgesLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}static startNodeEdge(a){a.startObject(3)}static addNodeIndex(a,s){a.addFieldInt32(0,s,0)}static addInputEdges(a,s){a.addFieldOffset(1,s,0)}static startInputEdgesVector(a,s){a.startVector(12,s,4)}static addOutputEdges(a,s){a.addFieldOffset(2,s,0)}static startOutputEdgesVector(a,s){a.startVector(12,s,4)}static endNodeEdge(a){return a.endObject()}static createNodeEdge(a,s,l,c){return o.startNodeEdge(a),o.addNodeIndex(a,s),o.addInputEdges(a,l),o.addOutputEdges(a,c),o.endNodeEdge(a)}}i.NodeEdge=o})(r=t.fbs||={})})(n=e.experimental||={})})(oe||={});(e=>{let n;(t=>{let r;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsNode(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsNode(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}docString(a){let s=this.bb.__offset(this.bb_pos,6);return s?this.bb.__string(this.bb_pos+s,a):null}domain(a){let s=this.bb.__offset(this.bb_pos,8);return s?this.bb.__string(this.bb_pos+s,a):null}sinceVersion(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readInt32(this.bb_pos+a):0}index(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.readUint32(this.bb_pos+a):0}opType(a){let s=this.bb.__offset(this.bb_pos,14);return s?this.bb.__string(this.bb_pos+s,a):null}type(){let a=this.bb.__offset(this.bb_pos,16);return a?this.bb.readInt32(this.bb_pos+a):0}executionProviderType(a){let s=this.bb.__offset(this.bb_pos,18);return s?this.bb.__string(this.bb_pos+s,a):null}inputs(a,s){let l=this.bb.__offset(this.bb_pos,20);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}inputsLength(){let a=this.bb.__offset(this.bb_pos,20);return a?this.bb.__vector_len(this.bb_pos+a):0}outputs(a,s){let l=this.bb.__offset(this.bb_pos,22);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}outputsLength(){let a=this.bb.__offset(this.bb_pos,22);return a?this.bb.__vector_len(this.bb_pos+a):0}attributes(a,s){let l=this.bb.__offset(this.bb_pos,24);return l?(s||new e.experimental.fbs.Attribute).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}attributesLength(){let a=this.bb.__offset(this.bb_pos,24);return a?this.bb.__vector_len(this.bb_pos+a):0}inputArgCounts(a){let s=this.bb.__offset(this.bb_pos,26);return s?this.bb.readInt32(this.bb.__vector(this.bb_pos+s)+a*4):0}inputArgCountsLength(){let a=this.bb.__offset(this.bb_pos,26);return a?this.bb.__vector_len(this.bb_pos+a):0}inputArgCountsArray(){let a=this.bb.__offset(this.bb_pos,26);return a?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}implicitInputs(a,s){let l=this.bb.__offset(this.bb_pos,28);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}implicitInputsLength(){let a=this.bb.__offset(this.bb_pos,28);return a?this.bb.__vector_len(this.bb_pos+a):0}static startNode(a){a.startObject(13)}static addName(a,s){a.addFieldOffset(0,s,0)}static addDocString(a,s){a.addFieldOffset(1,s,0)}static addDomain(a,s){a.addFieldOffset(2,s,0)}static addSinceVersion(a,s){a.addFieldInt32(3,s,0)}static addIndex(a,s){a.addFieldInt32(4,s,0)}static addOpType(a,s){a.addFieldOffset(5,s,0)}static addType(a,s){a.addFieldInt32(6,s,0)}static addExecutionProviderType(a,s){a.addFieldOffset(7,s,0)}static addInputs(a,s){a.addFieldOffset(8,s,0)}static createInputsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startInputsVector(a,s){a.startVector(4,s,4)}static addOutputs(a,s){a.addFieldOffset(9,s,0)}static createOutputsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startOutputsVector(a,s){a.startVector(4,s,4)}static addAttributes(a,s){a.addFieldOffset(10,s,0)}static createAttributesVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startAttributesVector(a,s){a.startVector(4,s,4)}static addInputArgCounts(a,s){a.addFieldOffset(11,s,0)}static createInputArgCountsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addInt32(s[l]);return a.endVector()}static startInputArgCountsVector(a,s){a.startVector(4,s,4)}static addImplicitInputs(a,s){a.addFieldOffset(12,s,0)}static createImplicitInputsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startImplicitInputsVector(a,s){a.startVector(4,s,4)}static endNode(a){return a.endObject()}static createNode(a,s,l,c,p,h,g,y,b,w,S,O,E,B){return o.startNode(a),o.addName(a,s),o.addDocString(a,l),o.addDomain(a,c),o.addSinceVersion(a,p),o.addIndex(a,h),o.addOpType(a,g),o.addType(a,y),o.addExecutionProviderType(a,b),o.addInputs(a,w),o.addOutputs(a,S),o.addAttributes(a,O),o.addInputArgCounts(a,E),o.addImplicitInputs(a,B),o.endNode(a)}}i.Node=o})(r=t.fbs||={})})(n=e.experimental||={})})(oe||={});(e=>{let n;(t=>{let r;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsValueInfo(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsValueInfo(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}docString(a){let s=this.bb.__offset(this.bb_pos,6);return s?this.bb.__string(this.bb_pos+s,a):null}type(a){let s=this.bb.__offset(this.bb_pos,8);return s?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}static startValueInfo(a){a.startObject(3)}static addName(a,s){a.addFieldOffset(0,s,0)}static addDocString(a,s){a.addFieldOffset(1,s,0)}static addType(a,s){a.addFieldOffset(2,s,0)}static endValueInfo(a){return a.endObject()}static createValueInfo(a,s,l,c){return o.startValueInfo(a),o.addName(a,s),o.addDocString(a,l),o.addType(a,c),o.endValueInfo(a)}}i.ValueInfo=o})(r=t.fbs||={})})(n=e.experimental||={})})(oe||={});(e=>{let n;(t=>{let r;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsTypeInfo(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTypeInfo(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}denotation(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}valueType(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readUint8(this.bb_pos+a):0}value(a){let s=this.bb.__offset(this.bb_pos,8);return s?this.bb.__union(a,this.bb_pos+s):null}static startTypeInfo(a){a.startObject(3)}static addDenotation(a,s){a.addFieldOffset(0,s,0)}static addValueType(a,s){a.addFieldInt8(1,s,0)}static addValue(a,s){a.addFieldOffset(2,s,0)}static endTypeInfo(a){return a.endObject()}static createTypeInfo(a,s,l,c){return o.startTypeInfo(a),o.addDenotation(a,s),o.addValueType(a,l),o.addValue(a,c),o.endTypeInfo(a)}}i.TypeInfo=o})(r=t.fbs||={})})(n=e.experimental||={})})(oe||={});(e=>{let n;(t=>{let r;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsOperatorSetId(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsOperatorSetId(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}domain(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}version(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}static startOperatorSetId(a){a.startObject(2)}static addDomain(a,s){a.addFieldOffset(0,s,0)}static addVersion(a,s){a.addFieldInt64(1,s,a.createLong(0,0))}static endOperatorSetId(a){return a.endObject()}static createOperatorSetId(a,s,l){return o.startOperatorSetId(a),o.addDomain(a,s),o.addVersion(a,l),o.endOperatorSetId(a)}}i.OperatorSetId=o})(r=t.fbs||={})})(n=e.experimental||={})})(oe||={});(e=>{let n;(t=>{let r;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsTensor(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTensor(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}docString(a){let s=this.bb.__offset(this.bb_pos,6);return s?this.bb.__string(this.bb_pos+s,a):null}dims(a){let s=this.bb.__offset(this.bb_pos,8);return s?this.bb.readInt64(this.bb.__vector(this.bb_pos+s)+a*8):this.bb.createLong(0,0)}dimsLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}dataType(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readInt32(this.bb_pos+a):0}rawData(a){let s=this.bb.__offset(this.bb_pos,12);return s?this.bb.readUint8(this.bb.__vector(this.bb_pos+s)+a):0}rawDataLength(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.__vector_len(this.bb_pos+a):0}rawDataArray(){let a=this.bb.__offset(this.bb_pos,12);return a?new Uint8Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}stringData(a,s){let l=this.bb.__offset(this.bb_pos,14);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}stringDataLength(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.__vector_len(this.bb_pos+a):0}static startTensor(a){a.startObject(6)}static addName(a,s){a.addFieldOffset(0,s,0)}static addDocString(a,s){a.addFieldOffset(1,s,0)}static addDims(a,s){a.addFieldOffset(2,s,0)}static createDimsVector(a,s){a.startVector(8,s.length,8);for(let l=s.length-1;l>=0;l--)a.addInt64(s[l]);return a.endVector()}static startDimsVector(a,s){a.startVector(8,s,8)}static addDataType(a,s){a.addFieldInt32(3,s,0)}static addRawData(a,s){a.addFieldOffset(4,s,0)}static createRawDataVector(a,s){a.startVector(1,s.length,1);for(let l=s.length-1;l>=0;l--)a.addInt8(s[l]);return a.endVector()}static startRawDataVector(a,s){a.startVector(1,s,1)}static addStringData(a,s){a.addFieldOffset(5,s,0)}static createStringDataVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startStringDataVector(a,s){a.startVector(4,s,4)}static endTensor(a){return a.endObject()}static createTensor(a,s,l,c,p,h,g){return o.startTensor(a),o.addName(a,s),o.addDocString(a,l),o.addDims(a,c),o.addDataType(a,p),o.addRawData(a,h),o.addStringData(a,g),o.endTensor(a)}}i.Tensor=o})(r=t.fbs||={})})(n=e.experimental||={})})(oe||={});(e=>{let n;(t=>{let r;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsSparseTensor(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSparseTensor(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}values(a){let s=this.bb.__offset(this.bb_pos,4);return s?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}indices(a){let s=this.bb.__offset(this.bb_pos,6);return s?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}dims(a){let s=this.bb.__offset(this.bb_pos,8);return s?this.bb.readInt64(this.bb.__vector(this.bb_pos+s)+a*8):this.bb.createLong(0,0)}dimsLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}static startSparseTensor(a){a.startObject(3)}static addValues(a,s){a.addFieldOffset(0,s,0)}static addIndices(a,s){a.addFieldOffset(1,s,0)}static addDims(a,s){a.addFieldOffset(2,s,0)}static createDimsVector(a,s){a.startVector(8,s.length,8);for(let l=s.length-1;l>=0;l--)a.addInt64(s[l]);return a.endVector()}static startDimsVector(a,s){a.startVector(8,s,8)}static endSparseTensor(a){return a.endObject()}static createSparseTensor(a,s,l,c){return o.startSparseTensor(a),o.addValues(a,s),o.addIndices(a,l),o.addDims(a,c),o.endSparseTensor(a)}}i.SparseTensor=o})(r=t.fbs||={})})(n=e.experimental||={})})(oe||={});(e=>{let n;(t=>{let r;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsAttribute(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsAttribute(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}docString(a){let s=this.bb.__offset(this.bb_pos,6);return s?this.bb.__string(this.bb_pos+s,a):null}type(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.readInt32(this.bb_pos+a):0}f(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readFloat32(this.bb_pos+a):0}i(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}s(a){let s=this.bb.__offset(this.bb_pos,14);return s?this.bb.__string(this.bb_pos+s,a):null}t(a){let s=this.bb.__offset(this.bb_pos,16);return s?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}g(a){let s=this.bb.__offset(this.bb_pos,18);return s?(a||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}floats(a){let s=this.bb.__offset(this.bb_pos,20);return s?this.bb.readFloat32(this.bb.__vector(this.bb_pos+s)+a*4):0}floatsLength(){let a=this.bb.__offset(this.bb_pos,20);return a?this.bb.__vector_len(this.bb_pos+a):0}floatsArray(){let a=this.bb.__offset(this.bb_pos,20);return a?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}ints(a){let s=this.bb.__offset(this.bb_pos,22);return s?this.bb.readInt64(this.bb.__vector(this.bb_pos+s)+a*8):this.bb.createLong(0,0)}intsLength(){let a=this.bb.__offset(this.bb_pos,22);return a?this.bb.__vector_len(this.bb_pos+a):0}strings(a,s){let l=this.bb.__offset(this.bb_pos,24);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}stringsLength(){let a=this.bb.__offset(this.bb_pos,24);return a?this.bb.__vector_len(this.bb_pos+a):0}tensors(a,s){let l=this.bb.__offset(this.bb_pos,26);return l?(s||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}tensorsLength(){let a=this.bb.__offset(this.bb_pos,26);return a?this.bb.__vector_len(this.bb_pos+a):0}graphs(a,s){let l=this.bb.__offset(this.bb_pos,28);return l?(s||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}graphsLength(){let a=this.bb.__offset(this.bb_pos,28);return a?this.bb.__vector_len(this.bb_pos+a):0}static startAttribute(a){a.startObject(13)}static addName(a,s){a.addFieldOffset(0,s,0)}static addDocString(a,s){a.addFieldOffset(1,s,0)}static addType(a,s){a.addFieldInt32(2,s,0)}static addF(a,s){a.addFieldFloat32(3,s,0)}static addI(a,s){a.addFieldInt64(4,s,a.createLong(0,0))}static addS(a,s){a.addFieldOffset(5,s,0)}static addT(a,s){a.addFieldOffset(6,s,0)}static addG(a,s){a.addFieldOffset(7,s,0)}static addFloats(a,s){a.addFieldOffset(8,s,0)}static createFloatsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addFloat32(s[l]);return a.endVector()}static startFloatsVector(a,s){a.startVector(4,s,4)}static addInts(a,s){a.addFieldOffset(9,s,0)}static createIntsVector(a,s){a.startVector(8,s.length,8);for(let l=s.length-1;l>=0;l--)a.addInt64(s[l]);return a.endVector()}static startIntsVector(a,s){a.startVector(8,s,8)}static addStrings(a,s){a.addFieldOffset(10,s,0)}static createStringsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startStringsVector(a,s){a.startVector(4,s,4)}static addTensors(a,s){a.addFieldOffset(11,s,0)}static createTensorsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startTensorsVector(a,s){a.startVector(4,s,4)}static addGraphs(a,s){a.addFieldOffset(12,s,0)}static createGraphsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startGraphsVector(a,s){a.startVector(4,s,4)}static endAttribute(a){return a.endObject()}static createAttribute(a,s,l,c,p,h,g,y,b,w,S,O,E,B){return o.startAttribute(a),o.addName(a,s),o.addDocString(a,l),o.addType(a,c),o.addF(a,p),o.addI(a,h),o.addS(a,g),o.addT(a,y),o.addG(a,b),o.addFloats(a,w),o.addInts(a,S),o.addStrings(a,O),o.addTensors(a,E),o.addGraphs(a,B),o.endAttribute(a)}}i.Attribute=o})(r=t.fbs||={})})(n=e.experimental||={})})(oe||={});(e=>{let n;(t=>{let r;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsGraph(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsGraph(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}initializers(a,s){let l=this.bb.__offset(this.bb_pos,4);return l?(s||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}initializersLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}nodeArgs(a,s){let l=this.bb.__offset(this.bb_pos,6);return l?(s||new e.experimental.fbs.ValueInfo).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodeArgsLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}nodes(a,s){let l=this.bb.__offset(this.bb_pos,8);return l?(s||new e.experimental.fbs.Node).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodesLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}maxNodeIndex(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readUint32(this.bb_pos+a):0}nodeEdges(a,s){let l=this.bb.__offset(this.bb_pos,12);return l?(s||new e.experimental.fbs.NodeEdge).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodeEdgesLength(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.__vector_len(this.bb_pos+a):0}inputs(a,s){let l=this.bb.__offset(this.bb_pos,14);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}inputsLength(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.__vector_len(this.bb_pos+a):0}outputs(a,s){let l=this.bb.__offset(this.bb_pos,16);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,s):null}outputsLength(){let a=this.bb.__offset(this.bb_pos,16);return a?this.bb.__vector_len(this.bb_pos+a):0}sparseInitializers(a,s){let l=this.bb.__offset(this.bb_pos,18);return l?(s||new e.experimental.fbs.SparseTensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}sparseInitializersLength(){let a=this.bb.__offset(this.bb_pos,18);return a?this.bb.__vector_len(this.bb_pos+a):0}static startGraph(a){a.startObject(8)}static addInitializers(a,s){a.addFieldOffset(0,s,0)}static createInitializersVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startInitializersVector(a,s){a.startVector(4,s,4)}static addNodeArgs(a,s){a.addFieldOffset(1,s,0)}static createNodeArgsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startNodeArgsVector(a,s){a.startVector(4,s,4)}static addNodes(a,s){a.addFieldOffset(2,s,0)}static createNodesVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startNodesVector(a,s){a.startVector(4,s,4)}static addMaxNodeIndex(a,s){a.addFieldInt32(3,s,0)}static addNodeEdges(a,s){a.addFieldOffset(4,s,0)}static createNodeEdgesVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startNodeEdgesVector(a,s){a.startVector(4,s,4)}static addInputs(a,s){a.addFieldOffset(5,s,0)}static createInputsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startInputsVector(a,s){a.startVector(4,s,4)}static addOutputs(a,s){a.addFieldOffset(6,s,0)}static createOutputsVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startOutputsVector(a,s){a.startVector(4,s,4)}static addSparseInitializers(a,s){a.addFieldOffset(7,s,0)}static createSparseInitializersVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startSparseInitializersVector(a,s){a.startVector(4,s,4)}static endGraph(a){return a.endObject()}static createGraph(a,s,l,c,p,h,g,y,b){return o.startGraph(a),o.addInitializers(a,s),o.addNodeArgs(a,l),o.addNodes(a,c),o.addMaxNodeIndex(a,p),o.addNodeEdges(a,h),o.addInputs(a,g),o.addOutputs(a,y),o.addSparseInitializers(a,b),o.endGraph(a)}}i.Graph=o})(r=t.fbs||={})})(n=e.experimental||={})})(oe||={});(e=>{let n;(t=>{let r;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsModel(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsModel(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}irVersion(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}opsetImport(a,s){let l=this.bb.__offset(this.bb_pos,6);return l?(s||new e.experimental.fbs.OperatorSetId).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}opsetImportLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}producerName(a){let s=this.bb.__offset(this.bb_pos,8);return s?this.bb.__string(this.bb_pos+s,a):null}producerVersion(a){let s=this.bb.__offset(this.bb_pos,10);return s?this.bb.__string(this.bb_pos+s,a):null}domain(a){let s=this.bb.__offset(this.bb_pos,12);return s?this.bb.__string(this.bb_pos+s,a):null}modelVersion(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}docString(a){let s=this.bb.__offset(this.bb_pos,16);return s?this.bb.__string(this.bb_pos+s,a):null}graph(a){let s=this.bb.__offset(this.bb_pos,18);return s?(a||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}graphDocString(a){let s=this.bb.__offset(this.bb_pos,20);return s?this.bb.__string(this.bb_pos+s,a):null}static startModel(a){a.startObject(9)}static addIrVersion(a,s){a.addFieldInt64(0,s,a.createLong(0,0))}static addOpsetImport(a,s){a.addFieldOffset(1,s,0)}static createOpsetImportVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startOpsetImportVector(a,s){a.startVector(4,s,4)}static addProducerName(a,s){a.addFieldOffset(2,s,0)}static addProducerVersion(a,s){a.addFieldOffset(3,s,0)}static addDomain(a,s){a.addFieldOffset(4,s,0)}static addModelVersion(a,s){a.addFieldInt64(5,s,a.createLong(0,0))}static addDocString(a,s){a.addFieldOffset(6,s,0)}static addGraph(a,s){a.addFieldOffset(7,s,0)}static addGraphDocString(a,s){a.addFieldOffset(8,s,0)}static endModel(a){return a.endObject()}static createModel(a,s,l,c,p,h,g,y,b,w){return o.startModel(a),o.addIrVersion(a,s),o.addOpsetImport(a,l),o.addProducerName(a,c),o.addProducerVersion(a,p),o.addDomain(a,h),o.addModelVersion(a,g),o.addDocString(a,y),o.addGraph(a,b),o.addGraphDocString(a,w),o.endModel(a)}}i.Model=o})(r=t.fbs||={})})(n=e.experimental||={})})(oe||={});(e=>{let n;(t=>{let r;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsKernelCreateInfos(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsKernelCreateInfos(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}nodeIndices(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.readUint32(this.bb.__vector(this.bb_pos+s)+a*4):0}nodeIndicesLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}nodeIndicesArray(){let a=this.bb.__offset(this.bb_pos,4);return a?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}kernelDefHashes(a){let s=this.bb.__offset(this.bb_pos,6);return s?this.bb.readUint64(this.bb.__vector(this.bb_pos+s)+a*8):this.bb.createLong(0,0)}kernelDefHashesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}static startKernelCreateInfos(a){a.startObject(2)}static addNodeIndices(a,s){a.addFieldOffset(0,s,0)}static createNodeIndicesVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addInt32(s[l]);return a.endVector()}static startNodeIndicesVector(a,s){a.startVector(4,s,4)}static addKernelDefHashes(a,s){a.addFieldOffset(1,s,0)}static createKernelDefHashesVector(a,s){a.startVector(8,s.length,8);for(let l=s.length-1;l>=0;l--)a.addInt64(s[l]);return a.endVector()}static startKernelDefHashesVector(a,s){a.startVector(8,s,8)}static endKernelCreateInfos(a){return a.endObject()}static createKernelCreateInfos(a,s,l){return o.startKernelCreateInfos(a),o.addNodeIndices(a,s),o.addKernelDefHashes(a,l),o.endKernelCreateInfos(a)}}i.KernelCreateInfos=o})(r=t.fbs||={})})(n=e.experimental||={})})(oe||={});(e=>{let n;(t=>{let r;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsSubGraphSessionState(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSubGraphSessionState(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}graphId(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}sessionState(a){let s=this.bb.__offset(this.bb_pos,6);return s?(a||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}static startSubGraphSessionState(a){a.startObject(2)}static addGraphId(a,s){a.addFieldOffset(0,s,0)}static addSessionState(a,s){a.addFieldOffset(1,s,0)}static endSubGraphSessionState(a){let s=a.endObject();return a.requiredField(s,4),s}static createSubGraphSessionState(a,s,l){return o.startSubGraphSessionState(a),o.addGraphId(a,s),o.addSessionState(a,l),o.endSubGraphSessionState(a)}}i.SubGraphSessionState=o})(r=t.fbs||={})})(n=e.experimental||={})})(oe||={});(e=>{let n;(t=>{let r;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsSessionState(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSessionState(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}kernels(a){let s=this.bb.__offset(this.bb_pos,4);return s?(a||new e.experimental.fbs.KernelCreateInfos).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}subGraphSessionStates(a,s){let l=this.bb.__offset(this.bb_pos,6);return l?(s||new e.experimental.fbs.SubGraphSessionState).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}subGraphSessionStatesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}static startSessionState(a){a.startObject(2)}static addKernels(a,s){a.addFieldOffset(0,s,0)}static addSubGraphSessionStates(a,s){a.addFieldOffset(1,s,0)}static createSubGraphSessionStatesVector(a,s){a.startVector(4,s.length,4);for(let l=s.length-1;l>=0;l--)a.addOffset(s[l]);return a.endVector()}static startSubGraphSessionStatesVector(a,s){a.startVector(4,s,4)}static endSessionState(a){return a.endObject()}static createSessionState(a,s,l){return o.startSessionState(a),o.addKernels(a,s),o.addSubGraphSessionStates(a,l),o.endSessionState(a)}}i.SessionState=o})(r=t.fbs||={})})(n=e.experimental||={})})(oe||={});(e=>{let n;(t=>{let r;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,s){return this.bb_pos=a,this.bb=s,this}static getRootAsInferenceSession(a,s){return(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsInferenceSession(a,s){return a.setPosition(a.position()+C.SIZE_PREFIX_LENGTH),(s||new o).__init(a.readInt32(a.position())+a.position(),a)}static bufferHasIdentifier(a){return a.__has_identifier("ORTM")}ortVersion(a){let s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb_pos+s,a):null}model(a){let s=this.bb.__offset(this.bb_pos,6);return s?(a||new e.experimental.fbs.Model).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}sessionState(a){let s=this.bb.__offset(this.bb_pos,8);return s?(a||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+s),this.bb):null}static startInferenceSession(a){a.startObject(3)}static addOrtVersion(a,s){a.addFieldOffset(0,s,0)}static addModel(a,s){a.addFieldOffset(1,s,0)}static addSessionState(a,s){a.addFieldOffset(2,s,0)}static endInferenceSession(a){return a.endObject()}static finishInferenceSessionBuffer(a,s){a.finish(s,"ORTM")}static finishSizePrefixedInferenceSessionBuffer(a,s){a.finish(s,"ORTM",!0)}static createInferenceSession(a,s,l,c){return o.startInferenceSession(a),o.addOrtVersion(a,s),o.addModel(a,l),o.addSessionState(a,c),o.endInferenceSession(a)}}i.InferenceSession=o})(r=t.fbs||={})})(n=e.experimental||={})})(oe||={})});var wl=He((oT,xl)=>{"use strict";xl.exports=_y;function _y(n,e){for(var r=new Array(arguments.length-1),t=0,o=2,i=!0;o<arguments.length;)r[t++]=arguments[o++];return new Promise(function(a,s){r[t]=function(c){if(i)if(i=!1,c)s(c);else{for(var p=new Array(arguments.length-1),h=0;h<p.length;)p[h++]=arguments[h];a.apply(null,p)}};try{n.apply(e||null,r)}catch(l){i&&(i=!1,s(l))}})}});var Il=He(Sl=>{"use strict";var qo=Sl;qo.length=function(e){var r=e.length;if(!r)return 0;for(var t=0;--r%4>1&&e.charAt(r)==="=";)++t;return Math.ceil(e.length*3)/4-t};var pn=new Array(64),$l=new Array(123);for(Kt=0;Kt<64;)$l[pn[Kt]=Kt<26?Kt+65:Kt<52?Kt+71:Kt<62?Kt-4:Kt-59|43]=Kt++;var Kt;qo.encode=function(e,r,t){for(var o=null,i=[],u=0,a=0,s;r<t;){var l=e[r++];switch(a){case 0:i[u++]=pn[l>>2],s=(l&3)<<4,a=1;break;case 1:i[u++]=pn[s|l>>4],s=(l&15)<<2,a=2;break;case 2:i[u++]=pn[s|l>>6],i[u++]=pn[l&63],a=0;break}u>8191&&((o||(o=[])).push(String.fromCharCode.apply(String,i)),u=0)}return a&&(i[u++]=pn[s],i[u++]=61,a===1&&(i[u++]=61)),o?(u&&o.push(String.fromCharCode.apply(String,i.slice(0,u))),o.join("")):String.fromCharCode.apply(String,i.slice(0,u))};var Tl="invalid encoding";qo.decode=function(e,r,t){for(var o=t,i=0,u,a=0;a<e.length;){var s=e.charCodeAt(a++);if(s===61&&i>1)break;if((s=$l[s])===void 0)throw Error(Tl);switch(i){case 0:u=s,i=1;break;case 1:r[t++]=u<<2|(s&48)>>4,u=s,i=2;break;case 2:r[t++]=(u&15)<<4|(s&60)>>2,u=s,i=3;break;case 3:r[t++]=(u&3)<<6|s,i=0;break}}if(i===1)throw Error(Tl);return t-o};qo.test=function(e){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e)}});var Al=He((aT,_l)=>{"use strict";_l.exports=Ko;function Ko(){this._listeners={}}Ko.prototype.on=function(e,r,t){return(this._listeners[e]||(this._listeners[e]=[])).push({fn:r,ctx:t||this}),this};Ko.prototype.off=function(e,r){if(e===void 0)this._listeners={};else if(r===void 0)this._listeners[e]=[];else for(var t=this._listeners[e],o=0;o<t.length;)t[o].fn===r?t.splice(o,1):++o;return this};Ko.prototype.emit=function(e){var r=this._listeners[e];if(r){for(var t=[],o=1;o<arguments.length;)t.push(arguments[o++]);for(o=0;o<r.length;)r[o].fn.apply(r[o++].ctx,t)}return this}});var Bl=He((sT,kl)=>{"use strict";kl.exports=Ol(Ol);function Ol(n){return typeof Float32Array<"u"?function(){var e=new Float32Array([-0]),r=new Uint8Array(e.buffer),t=r[3]===128;function o(s,l,c){e[0]=s,l[c]=r[0],l[c+1]=r[1],l[c+2]=r[2],l[c+3]=r[3]}function i(s,l,c){e[0]=s,l[c]=r[3],l[c+1]=r[2],l[c+2]=r[1],l[c+3]=r[0]}n.writeFloatLE=t?o:i,n.writeFloatBE=t?i:o;function u(s,l){return r[0]=s[l],r[1]=s[l+1],r[2]=s[l+2],r[3]=s[l+3],e[0]}function a(s,l){return r[3]=s[l],r[2]=s[l+1],r[1]=s[l+2],r[0]=s[l+3],e[0]}n.readFloatLE=t?u:a,n.readFloatBE=t?a:u}():function(){function e(t,o,i,u){var a=o<0?1:0;if(a&&(o=-o),o===0)t(1/o>0?0:2147483648,i,u);else if(isNaN(o))t(2143289344,i,u);else if(o>34028234663852886e22)t((a<<31|2139095040)>>>0,i,u);else if(o<11754943508222875e-54)t((a<<31|Math.round(o/1401298464324817e-60))>>>0,i,u);else{var s=Math.floor(Math.log(o)/Math.LN2),l=Math.round(o*Math.pow(2,-s)*8388608)&8388607;t((a<<31|s+127<<23|l)>>>0,i,u)}}n.writeFloatLE=e.bind(null,El),n.writeFloatBE=e.bind(null,Cl);function r(t,o,i){var u=t(o,i),a=(u>>31)*2+1,s=u>>>23&255,l=u&8388607;return s===255?l?NaN:a*(1/0):s===0?a*1401298464324817e-60*l:a*Math.pow(2,s-150)*(l+8388608)}n.readFloatLE=r.bind(null,Pl),n.readFloatBE=r.bind(null,Dl)}(),typeof Float64Array<"u"?function(){var e=new Float64Array([-0]),r=new Uint8Array(e.buffer),t=r[7]===128;function o(s,l,c){e[0]=s,l[c]=r[0],l[c+1]=r[1],l[c+2]=r[2],l[c+3]=r[3],l[c+4]=r[4],l[c+5]=r[5],l[c+6]=r[6],l[c+7]=r[7]}function i(s,l,c){e[0]=s,l[c]=r[7],l[c+1]=r[6],l[c+2]=r[5],l[c+3]=r[4],l[c+4]=r[3],l[c+5]=r[2],l[c+6]=r[1],l[c+7]=r[0]}n.writeDoubleLE=t?o:i,n.writeDoubleBE=t?i:o;function u(s,l){return r[0]=s[l],r[1]=s[l+1],r[2]=s[l+2],r[3]=s[l+3],r[4]=s[l+4],r[5]=s[l+5],r[6]=s[l+6],r[7]=s[l+7],e[0]}function a(s,l){return r[7]=s[l],r[6]=s[l+1],r[5]=s[l+2],r[4]=s[l+3],r[3]=s[l+4],r[2]=s[l+5],r[1]=s[l+6],r[0]=s[l+7],e[0]}n.readDoubleLE=t?u:a,n.readDoubleBE=t?a:u}():function(){function e(t,o,i,u,a,s){var l=u<0?1:0;if(l&&(u=-u),u===0)t(0,a,s+o),t(1/u>0?0:2147483648,a,s+i);else if(isNaN(u))t(0,a,s+o),t(2146959360,a,s+i);else if(u>17976931348623157e292)t(0,a,s+o),t((l<<31|2146435072)>>>0,a,s+i);else{var c;if(u<22250738585072014e-324)c=u/5e-324,t(c>>>0,a,s+o),t((l<<31|c/4294967296)>>>0,a,s+i);else{var p=Math.floor(Math.log(u)/Math.LN2);p===1024&&(p=1023),c=u*Math.pow(2,-p),t(c*4503599627370496>>>0,a,s+o),t((l<<31|p+1023<<20|c*1048576&1048575)>>>0,a,s+i)}}}n.writeDoubleLE=e.bind(null,El,0,4),n.writeDoubleBE=e.bind(null,Cl,4,0);function r(t,o,i,u,a){var s=t(u,a+o),l=t(u,a+i),c=(l>>31)*2+1,p=l>>>20&2047,h=4294967296*(l&1048575)+s;return p===2047?h?NaN:c*(1/0):p===0?c*5e-324*h:c*Math.pow(2,p-1075)*(h+4503599627370496)}n.readDoubleLE=r.bind(null,Pl,0,4),n.readDoubleBE=r.bind(null,Dl,4,0)}(),n}function El(n,e,r){e[r]=n&255,e[r+1]=n>>>8&255,e[r+2]=n>>>16&255,e[r+3]=n>>>24}function Cl(n,e,r){e[r]=n>>>24,e[r+1]=n>>>16&255,e[r+2]=n>>>8&255,e[r+3]=n&255}function Pl(n,e){return(n[e]|n[e+1]<<8|n[e+2]<<16|n[e+3]<<24)>>>0}function Dl(n,e){return(n[e]<<24|n[e+1]<<16|n[e+2]<<8|n[e+3])>>>0}});var Rl=He((exports,module)=>{"use strict";module.exports=inquire;function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(n){}return null}});var Ll=He(Ml=>{"use strict";var xa=Ml;xa.length=function(e){for(var r=0,t=0,o=0;o<e.length;++o)t=e.charCodeAt(o),t<128?r+=1:t<2048?r+=2:(t&64512)===55296&&(e.charCodeAt(o+1)&64512)===56320?(++o,r+=4):r+=3;return r};xa.read=function(e,r,t){var o=t-r;if(o<1)return"";for(var i=null,u=[],a=0,s;r<t;)s=e[r++],s<128?u[a++]=s:s>191&&s<224?u[a++]=(s&31)<<6|e[r++]&63:s>239&&s<365?(s=((s&7)<<18|(e[r++]&63)<<12|(e[r++]&63)<<6|e[r++]&63)-65536,u[a++]=55296+(s>>10),u[a++]=56320+(s&1023)):u[a++]=(s&15)<<12|(e[r++]&63)<<6|e[r++]&63,a>8191&&((i||(i=[])).push(String.fromCharCode.apply(String,u)),a=0);return i?(a&&i.push(String.fromCharCode.apply(String,u.slice(0,a))),i.join("")):String.fromCharCode.apply(String,u.slice(0,a))};xa.write=function(e,r,t){for(var o=t,i,u,a=0;a<e.length;++a)i=e.charCodeAt(a),i<128?r[t++]=i:i<2048?(r[t++]=i>>6|192,r[t++]=i&63|128):(i&64512)===55296&&((u=e.charCodeAt(a+1))&64512)===56320?(i=65536+((i&1023)<<10)+(u&1023),++a,r[t++]=i>>18|240,r[t++]=i>>12&63|128,r[t++]=i>>6&63|128,r[t++]=i&63|128):(r[t++]=i>>12|224,r[t++]=i>>6&63|128,r[t++]=i&63|128);return t-o}});var zl=He((lT,Nl)=>{"use strict";Nl.exports=Ay;function Ay(n,e,r){var t=r||8192,o=t>>>1,i=null,u=t;return function(s){if(s<1||s>o)return n(s);u+s>t&&(i=n(t),u=0);var l=e.call(i,u,u+=s);return u&7&&(u=(u|7)+1),l}}});var Gl=He((cT,Fl)=>{"use strict";Fl.exports=dt;var jn=Ar();function dt(n,e){this.lo=n>>>0,this.hi=e>>>0}var Gr=dt.zero=new dt(0,0);Gr.toNumber=function(){return 0};Gr.zzEncode=Gr.zzDecode=function(){return this};Gr.length=function(){return 1};var Oy=dt.zeroHash="\0\0\0\0\0\0\0\0";dt.fromNumber=function(e){if(e===0)return Gr;var r=e<0;r&&(e=-e);var t=e>>>0,o=(e-t)/4294967296>>>0;return r&&(o=~o>>>0,t=~t>>>0,++t>4294967295&&(t=0,++o>4294967295&&(o=0))),new dt(t,o)};dt.from=function(e){if(typeof e=="number")return dt.fromNumber(e);if(jn.isString(e))if(jn.Long)e=jn.Long.fromString(e);else return dt.fromNumber(parseInt(e,10));return e.low||e.high?new dt(e.low>>>0,e.high>>>0):Gr};dt.prototype.toNumber=function(e){if(!e&&this.hi>>>31){var r=~this.lo+1>>>0,t=~this.hi>>>0;return r||(t=t+1>>>0),-(r+t*4294967296)}return this.lo+this.hi*4294967296};dt.prototype.toLong=function(e){return jn.Long?new jn.Long(this.lo|0,this.hi|0,!!e):{low:this.lo|0,high:this.hi|0,unsigned:!!e}};var _r=String.prototype.charCodeAt;dt.fromHash=function(e){return e===Oy?Gr:new dt((_r.call(e,0)|_r.call(e,1)<<8|_r.call(e,2)<<16|_r.call(e,3)<<24)>>>0,(_r.call(e,4)|_r.call(e,5)<<8|_r.call(e,6)<<16|_r.call(e,7)<<24)>>>0)};dt.prototype.toHash=function(){return String.fromCharCode(this.lo&255,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,this.hi&255,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)};dt.prototype.zzEncode=function(){var e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this};dt.prototype.zzDecode=function(){var e=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this};dt.prototype.length=function(){var e=this.lo,r=(this.lo>>>28|this.hi<<4)>>>0,t=this.hi>>>24;return t===0?r===0?e<16384?e<128?1:2:e<2097152?3:4:r<16384?r<128?5:6:r<2097152?7:8:t<128?9:10}});var Ar=He(wa=>{"use strict";var ae=wa;ae.asPromise=wl();ae.base64=Il();ae.EventEmitter=Al();ae.float=Bl();ae.inquire=Rl();ae.utf8=Ll();ae.pool=zl();ae.LongBits=Gl();ae.isNode=!!(typeof global<"u"&&global&&global.process&&global.process.versions&&global.process.versions.node);ae.global=ae.isNode&&global||typeof window<"u"&&window||typeof self<"u"&&self||wa;ae.emptyArray=Object.freeze?Object.freeze([]):[];ae.emptyObject=Object.freeze?Object.freeze({}):{};ae.isInteger=Number.isInteger||function(e){return typeof e=="number"&&isFinite(e)&&Math.floor(e)===e};ae.isString=function(e){return typeof e=="string"||e instanceof String};ae.isObject=function(e){return e&&typeof e=="object"};ae.isset=ae.isSet=function(e,r){var t=e[r];return t!=null&&e.hasOwnProperty(r)?typeof t!="object"||(Array.isArray(t)?t.length:Object.keys(t).length)>0:!1};ae.Buffer=function(){try{var n=ae.inquire("buffer").Buffer;return n.prototype.utf8Write?n:null}catch{return null}}();ae._Buffer_from=null;ae._Buffer_allocUnsafe=null;ae.newBuffer=function(e){return typeof e=="number"?ae.Buffer?ae._Buffer_allocUnsafe(e):new ae.Array(e):ae.Buffer?ae._Buffer_from(e):typeof Uint8Array>"u"?e:new Uint8Array(e)};ae.Array=typeof Uint8Array<"u"?Uint8Array:Array;ae.Long=ae.global.dcodeIO&&ae.global.dcodeIO.Long||ae.global.Long||ae.inquire("long");ae.key2Re=/^true|false|0|1$/;ae.key32Re=/^-?(?:0|[1-9][0-9]*)$/;ae.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;ae.longToHash=function(e){return e?ae.LongBits.from(e).toHash():ae.LongBits.zeroHash};ae.longFromHash=function(e,r){var t=ae.LongBits.fromHash(e);return ae.Long?ae.Long.fromBits(t.lo,t.hi,r):t.toNumber(!!r)};function Wl(n,e,r){for(var t=Object.keys(e),o=0;o<t.length;++o)(n[t[o]]===void 0||!r)&&(n[t[o]]=e[t[o]]);return n}ae.merge=Wl;ae.lcFirst=function(e){return e.charAt(0).toLowerCase()+e.substring(1)};function Vl(n){function e(r,t){if(!(this instanceof e))return new e(r,t);Object.defineProperty(this,"message",{get:function(){return r}}),Error.captureStackTrace?Error.captureStackTrace(this,e):Object.defineProperty(this,"stack",{value:new Error().stack||""}),t&&Wl(this,t)}return e.prototype=Object.create(Error.prototype,{constructor:{value:e,writable:!0,enumerable:!1,configurable:!0},name:{get:function(){return n},set:void 0,enumerable:!1,configurable:!0},toString:{value:function(){return this.name+": "+this.message},writable:!0,enumerable:!1,configurable:!0}}),e}ae.newError=Vl;ae.ProtocolError=Vl("ProtocolError");ae.oneOfGetter=function(e){for(var r={},t=0;t<e.length;++t)r[e[t]]=1;return function(){for(var o=Object.keys(this),i=o.length-1;i>-1;--i)if(r[o[i]]===1&&this[o[i]]!==void 0&&this[o[i]]!==null)return o[i]}};ae.oneOfSetter=function(e){return function(r){for(var t=0;t<e.length;++t)e[t]!==r&&delete this[e[t]]}};ae.toJSONOptions={longs:String,enums:String,bytes:String,json:!0};ae._configure=function(){var n=ae.Buffer;if(!n){ae._Buffer_from=ae._Buffer_allocUnsafe=null;return}ae._Buffer_from=n.from!==Uint8Array.from&&n.from||function(r,t){return new n(r,t)},ae._Buffer_allocUnsafe=n.allocUnsafe||function(r){return new n(r)}}});var Oa=He((fT,ql)=>{"use strict";ql.exports=ke;var Bt=Ar(),Ta,Yo=Bt.LongBits,Ul=Bt.base64,Hl=Bt.utf8;function qn(n,e,r){this.fn=n,this.len=e,this.next=void 0,this.val=r}function Sa(){}function Ey(n){this.head=n.head,this.tail=n.tail,this.len=n.len,this.next=n.states}function ke(){this.len=0,this.head=new qn(Sa,0,0),this.tail=this.head,this.states=null}var jl=function(){return Bt.Buffer?function(){return(ke.create=function(){return new Ta})()}:function(){return new ke}};ke.create=jl();ke.alloc=function(e){return new Bt.Array(e)};Bt.Array!==Array&&(ke.alloc=Bt.pool(ke.alloc,Bt.Array.prototype.subarray));ke.prototype._push=function(e,r,t){return this.tail=this.tail.next=new qn(e,r,t),this.len+=r,this};function Ia(n,e,r){e[r]=n&255}function Cy(n,e,r){for(;n>127;)e[r++]=n&127|128,n>>>=7;e[r]=n}function _a(n,e){this.len=n,this.next=void 0,this.val=e}_a.prototype=Object.create(qn.prototype);_a.prototype.fn=Cy;ke.prototype.uint32=function(e){return this.len+=(this.tail=this.tail.next=new _a((e=e>>>0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this};ke.prototype.int32=function(e){return e<0?this._push(Aa,10,Yo.fromNumber(e)):this.uint32(e)};ke.prototype.sint32=function(e){return this.uint32((e<<1^e>>31)>>>0)};function Aa(n,e,r){for(;n.hi;)e[r++]=n.lo&127|128,n.lo=(n.lo>>>7|n.hi<<25)>>>0,n.hi>>>=7;for(;n.lo>127;)e[r++]=n.lo&127|128,n.lo=n.lo>>>7;e[r++]=n.lo}ke.prototype.uint64=function(e){var r=Yo.from(e);return this._push(Aa,r.length(),r)};ke.prototype.int64=ke.prototype.uint64;ke.prototype.sint64=function(e){var r=Yo.from(e).zzEncode();return this._push(Aa,r.length(),r)};ke.prototype.bool=function(e){return this._push(Ia,1,e?1:0)};function $a(n,e,r){e[r]=n&255,e[r+1]=n>>>8&255,e[r+2]=n>>>16&255,e[r+3]=n>>>24}ke.prototype.fixed32=function(e){return this._push($a,4,e>>>0)};ke.prototype.sfixed32=ke.prototype.fixed32;ke.prototype.fixed64=function(e){var r=Yo.from(e);return this._push($a,4,r.lo)._push($a,4,r.hi)};ke.prototype.sfixed64=ke.prototype.fixed64;ke.prototype.float=function(e){return this._push(Bt.float.writeFloatLE,4,e)};ke.prototype.double=function(e){return this._push(Bt.float.writeDoubleLE,8,e)};var Py=Bt.Array.prototype.set?function(e,r,t){r.set(e,t)}:function(e,r,t){for(var o=0;o<e.length;++o)r[t+o]=e[o]};ke.prototype.bytes=function(e){var r=e.length>>>0;if(!r)return this._push(Ia,1,0);if(Bt.isString(e)){var t=ke.alloc(r=Ul.length(e));Ul.decode(e,t,0),e=t}return this.uint32(r)._push(Py,r,e)};ke.prototype.string=function(e){var r=Hl.length(e);return r?this.uint32(r)._push(Hl.write,r,e):this._push(Ia,1,0)};ke.prototype.fork=function(){return this.states=new Ey(this),this.head=this.tail=new qn(Sa,0,0),this.len=0,this};ke.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new qn(Sa,0,0),this.len=0),this};ke.prototype.ldelim=function(){var e=this.head,r=this.tail,t=this.len;return this.reset().uint32(t),t&&(this.tail.next=e.next,this.tail=r,this.len+=t),this};ke.prototype.finish=function(){for(var e=this.head.next,r=this.constructor.alloc(this.len),t=0;e;)e.fn(e.val,r,t),t+=e.len,e=e.next;return r};ke._configure=function(n){Ta=n,ke.create=jl(),Ta._configure()}});var Xl=He((pT,Yl)=>{"use strict";Yl.exports=nr;var Kl=Oa();(nr.prototype=Object.create(Kl.prototype)).constructor=nr;var Or=Ar();function nr(){Kl.call(this)}nr._configure=function(){nr.alloc=Or._Buffer_allocUnsafe,nr.writeBytesBuffer=Or.Buffer&&Or.Buffer.prototype instanceof Uint8Array&&Or.Buffer.prototype.set.name==="set"?function(e,r,t){r.set(e,t)}:function(e,r,t){if(e.copy)e.copy(r,t,0,e.length);else for(var o=0;o<e.length;)r[t++]=e[o++]}};nr.prototype.bytes=function(e){Or.isString(e)&&(e=Or._Buffer_from(e,"base64"));var r=e.length>>>0;return this.uint32(r),r&&this._push(nr.writeBytesBuffer,r,e),this};function Dy(n,e,r){n.length<40?Or.utf8.write(n,e,r):e.utf8Write?e.utf8Write(n,r):e.write(n,r)}nr.prototype.string=function(e){var r=Or.Buffer.byteLength(e);return this.uint32(r),r&&this._push(Dy,r,e),this};nr._configure()});var Pa=He((hT,tc)=>{"use strict";tc.exports=tt;var or=Ar(),Ca,Ql=or.LongBits,ky=or.utf8;function Yt(n,e){return RangeError("index out of range: "+n.pos+" + "+(e||1)+" > "+n.len)}function tt(n){this.buf=n,this.pos=0,this.len=n.length}var Jl=typeof Uint8Array<"u"?function(e){if(e instanceof Uint8Array||Array.isArray(e))return new tt(e);throw Error("illegal buffer")}:function(e){if(Array.isArray(e))return new tt(e);throw Error("illegal buffer")},ec=function(){return or.Buffer?function(r){return(tt.create=function(o){return or.Buffer.isBuffer(o)?new Ca(o):Jl(o)})(r)}:Jl};tt.create=ec();tt.prototype._slice=or.Array.prototype.subarray||or.Array.prototype.slice;tt.prototype.uint32=function(){var e=4294967295;return function(){if(e=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(e=(e|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return e;if((this.pos+=5)>this.len)throw this.pos=this.len,Yt(this,10);return e}}();tt.prototype.int32=function(){return this.uint32()|0};tt.prototype.sint32=function(){var e=this.uint32();return e>>>1^-(e&1)|0};function Ea(){var n=new Ql(0,0),e=0;if(this.len-this.pos>4){for(;e<4;++e)if(n.lo=(n.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return n;if(n.lo=(n.lo|(this.buf[this.pos]&127)<<28)>>>0,n.hi=(n.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return n;e=0}else{for(;e<3;++e){if(this.pos>=this.len)throw Yt(this);if(n.lo=(n.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return n}return n.lo=(n.lo|(this.buf[this.pos++]&127)<<e*7)>>>0,n}if(this.len-this.pos>4){for(;e<5;++e)if(n.hi=(n.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return n}else for(;e<5;++e){if(this.pos>=this.len)throw Yt(this);if(n.hi=(n.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return n}throw Error("invalid varint encoding")}tt.prototype.bool=function(){return this.uint32()!==0};function Xo(n,e){return(n[e-4]|n[e-3]<<8|n[e-2]<<16|n[e-1]<<24)>>>0}tt.prototype.fixed32=function(){if(this.pos+4>this.len)throw Yt(this,4);return Xo(this.buf,this.pos+=4)};tt.prototype.sfixed32=function(){if(this.pos+4>this.len)throw Yt(this,4);return Xo(this.buf,this.pos+=4)|0};function Zl(){if(this.pos+8>this.len)throw Yt(this,8);return new Ql(Xo(this.buf,this.pos+=4),Xo(this.buf,this.pos+=4))}tt.prototype.float=function(){if(this.pos+4>this.len)throw Yt(this,4);var e=or.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e};tt.prototype.double=function(){if(this.pos+8>this.len)throw Yt(this,4);var e=or.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e};tt.prototype.bytes=function(){var e=this.uint32(),r=this.pos,t=this.pos+e;if(t>this.len)throw Yt(this,e);return this.pos+=e,Array.isArray(this.buf)?this.buf.slice(r,t):r===t?new this.buf.constructor(0):this._slice.call(this.buf,r,t)};tt.prototype.string=function(){var e=this.bytes();return ky.read(e,0,e.length)};tt.prototype.skip=function(e){if(typeof e=="number"){if(this.pos+e>this.len)throw Yt(this,e);this.pos+=e}else do if(this.pos>=this.len)throw Yt(this);while(this.buf[this.pos++]&128);return this};tt.prototype.skipType=function(n){switch(n){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(n=this.uint32()&7)!==4;)this.skipType(n);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+n+" at offset "+this.pos)}return this};tt._configure=function(n){Ca=n,tt.create=ec(),Ca._configure();var e=or.Long?"toLong":"toNumber";or.merge(tt.prototype,{int64:function(){return Ea.call(this)[e](!1)},uint64:function(){return Ea.call(this)[e](!0)},sint64:function(){return Ea.call(this).zzDecode()[e](!1)},fixed64:function(){return Zl.call(this)[e](!0)},sfixed64:function(){return Zl.call(this)[e](!1)}})}});var ic=He((mT,oc)=>{"use strict";oc.exports=Wr;var nc=Pa();(Wr.prototype=Object.create(nc.prototype)).constructor=Wr;var rc=Ar();function Wr(n){nc.call(this,n)}Wr._configure=function(){rc.Buffer&&(Wr.prototype._slice=rc.Buffer.prototype.slice)};Wr.prototype.string=function(){var e=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+e,this.len))};Wr._configure()});var sc=He((gT,ac)=>{"use strict";ac.exports=Kn;var Da=Ar();(Kn.prototype=Object.create(Da.EventEmitter.prototype)).constructor=Kn;function Kn(n,e,r){if(typeof n!="function")throw TypeError("rpcImpl must be a function");Da.EventEmitter.call(this),this.rpcImpl=n,this.requestDelimited=!!e,this.responseDelimited=!!r}Kn.prototype.rpcCall=function n(e,r,t,o,i){if(!o)throw TypeError("request must be specified");var u=this;if(!i)return Da.asPromise(n,u,e,r,t,o);if(!u.rpcImpl){setTimeout(function(){i(Error("already ended"))},0);return}try{return u.rpcImpl(e,r[u.requestDelimited?"encodeDelimited":"encode"](o).finish(),function(s,l){if(s)return u.emit("error",s,e),i(s);if(l===null){u.end(!0);return}if(!(l instanceof t))try{l=t[u.responseDelimited?"decodeDelimited":"decode"](l)}catch(c){return u.emit("error",c,e),i(c)}return u.emit("data",l,e),i(null,l)})}catch(a){u.emit("error",a,e),setTimeout(function(){i(a)},0);return}};Kn.prototype.end=function(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this}});var lc=He(uc=>{"use strict";var By=uc;By.Service=sc()});var dc=He((yT,cc)=>{"use strict";cc.exports={}});var hc=He(pc=>{"use strict";var St=pc;St.build="minimal";St.Writer=Oa();St.BufferWriter=Xl();St.Reader=Pa();St.BufferReader=ic();St.util=Ar();St.rpc=lc();St.roots=dc();St.configure=fc;function fc(){St.util._configure(),St.Writer._configure(St.BufferWriter),St.Reader._configure(St.BufferReader)}fc()});var gc=He((xT,mc)=>{"use strict";mc.exports=hc()});var hn=He((wT,bc)=>{"use strict";var qe=gc(),q=qe.Reader,rt=qe.Writer,_=qe.util,T=qe.roots.default||(qe.roots.default={});T.onnx=function(){var n={};return n.Version=function(){var e={},r=Object.create(e);return r[e[0]="_START_VERSION"]=0,r[e[1]="IR_VERSION_2017_10_10"]=1,r[e[2]="IR_VERSION_2017_10_30"]=2,r[e[3]="IR_VERSION_2017_11_3"]=3,r[e[4]="IR_VERSION_2019_1_22"]=4,r[e[5]="IR_VERSION_2019_3_18"]=5,r[e[6]="IR_VERSION_2019_9_19"]=6,r[e[7]="IR_VERSION_2020_5_8"]=7,r[e[8]="IR_VERSION_2021_7_30"]=8,r[e[9]="IR_VERSION"]=9,r}(),n.AttributeProto=function(){function e(r){if(this.floats=[],this.ints=[],this.strings=[],this.tensors=[],this.graphs=[],this.sparseTensors=[],this.typeProtos=[],r)for(var t=Object.keys(r),o=0;o<t.length;++o)r[t[o]]!=null&&(this[t[o]]=r[t[o]])}return e.prototype.name="",e.prototype.refAttrName="",e.prototype.docString="",e.prototype.type=0,e.prototype.f=0,e.prototype.i=_.Long?_.Long.fromBits(0,0,!1):0,e.prototype.s=_.newBuffer([]),e.prototype.t=null,e.prototype.g=null,e.prototype.sparseTensor=null,e.prototype.tp=null,e.prototype.floats=_.emptyArray,e.prototype.ints=_.emptyArray,e.prototype.strings=_.emptyArray,e.prototype.tensors=_.emptyArray,e.prototype.graphs=_.emptyArray,e.prototype.sparseTensors=_.emptyArray,e.prototype.typeProtos=_.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=rt.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.f!=null&&Object.hasOwnProperty.call(t,"f")&&o.uint32(21).float(t.f),t.i!=null&&Object.hasOwnProperty.call(t,"i")&&o.uint32(24).int64(t.i),t.s!=null&&Object.hasOwnProperty.call(t,"s")&&o.uint32(34).bytes(t.s),t.t!=null&&Object.hasOwnProperty.call(t,"t")&&T.onnx.TensorProto.encode(t.t,o.uint32(42).fork()).ldelim(),t.g!=null&&Object.hasOwnProperty.call(t,"g")&&T.onnx.GraphProto.encode(t.g,o.uint32(50).fork()).ldelim(),t.floats!=null&&t.floats.length){o.uint32(58).fork();for(var i=0;i<t.floats.length;++i)o.float(t.floats[i]);o.ldelim()}if(t.ints!=null&&t.ints.length){o.uint32(66).fork();for(var i=0;i<t.ints.length;++i)o.int64(t.ints[i]);o.ldelim()}if(t.strings!=null&&t.strings.length)for(var i=0;i<t.strings.length;++i)o.uint32(74).bytes(t.strings[i]);if(t.tensors!=null&&t.tensors.length)for(var i=0;i<t.tensors.length;++i)T.onnx.TensorProto.encode(t.tensors[i],o.uint32(82).fork()).ldelim();if(t.graphs!=null&&t.graphs.length)for(var i=0;i<t.graphs.length;++i)T.onnx.GraphProto.encode(t.graphs[i],o.uint32(90).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(106).string(t.docString),t.tp!=null&&Object.hasOwnProperty.call(t,"tp")&&T.onnx.TypeProto.encode(t.tp,o.uint32(114).fork()).ldelim(),t.typeProtos!=null&&t.typeProtos.length)for(var i=0;i<t.typeProtos.length;++i)T.onnx.TypeProto.encode(t.typeProtos[i],o.uint32(122).fork()).ldelim();if(t.type!=null&&Object.hasOwnProperty.call(t,"type")&&o.uint32(160).int32(t.type),t.refAttrName!=null&&Object.hasOwnProperty.call(t,"refAttrName")&&o.uint32(170).string(t.refAttrName),t.sparseTensor!=null&&Object.hasOwnProperty.call(t,"sparseTensor")&&T.onnx.SparseTensorProto.encode(t.sparseTensor,o.uint32(178).fork()).ldelim(),t.sparseTensors!=null&&t.sparseTensors.length)for(var i=0;i<t.sparseTensors.length;++i)T.onnx.SparseTensorProto.encode(t.sparseTensors[i],o.uint32(186).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof q||(t=q.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.AttributeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.name=t.string();break}case 21:{u.refAttrName=t.string();break}case 13:{u.docString=t.string();break}case 20:{u.type=t.int32();break}case 2:{u.f=t.float();break}case 3:{u.i=t.int64();break}case 4:{u.s=t.bytes();break}case 5:{u.t=T.onnx.TensorProto.decode(t,t.uint32());break}case 6:{u.g=T.onnx.GraphProto.decode(t,t.uint32());break}case 22:{u.sparseTensor=T.onnx.SparseTensorProto.decode(t,t.uint32());break}case 14:{u.tp=T.onnx.TypeProto.decode(t,t.uint32());break}case 7:{if(u.floats&&u.floats.length||(u.floats=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.floats.push(t.float());else u.floats.push(t.float());break}case 8:{if(u.ints&&u.ints.length||(u.ints=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.ints.push(t.int64());else u.ints.push(t.int64());break}case 9:{u.strings&&u.strings.length||(u.strings=[]),u.strings.push(t.bytes());break}case 10:{u.tensors&&u.tensors.length||(u.tensors=[]),u.tensors.push(T.onnx.TensorProto.decode(t,t.uint32()));break}case 11:{u.graphs&&u.graphs.length||(u.graphs=[]),u.graphs.push(T.onnx.GraphProto.decode(t,t.uint32()));break}case 23:{u.sparseTensors&&u.sparseTensors.length||(u.sparseTensors=[]),u.sparseTensors.push(T.onnx.SparseTensorProto.decode(t,t.uint32()));break}case 15:{u.typeProtos&&u.typeProtos.length||(u.typeProtos=[]),u.typeProtos.push(T.onnx.TypeProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof q||(t=new q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!_.isString(t.name))return"name: string expected";if(t.refAttrName!=null&&t.hasOwnProperty("refAttrName")&&!_.isString(t.refAttrName))return"refAttrName: string expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!_.isString(t.docString))return"docString: string expected";if(t.type!=null&&t.hasOwnProperty("type"))switch(t.type){default:return"type: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 11:case 13:case 6:case 7:case 8:case 9:case 10:case 12:case 14:break}if(t.f!=null&&t.hasOwnProperty("f")&&typeof t.f!="number")return"f: number expected";if(t.i!=null&&t.hasOwnProperty("i")&&!_.isInteger(t.i)&&!(t.i&&_.isInteger(t.i.low)&&_.isInteger(t.i.high)))return"i: integer|Long expected";if(t.s!=null&&t.hasOwnProperty("s")&&!(t.s&&typeof t.s.length=="number"||_.isString(t.s)))return"s: buffer expected";if(t.t!=null&&t.hasOwnProperty("t")){var o=T.onnx.TensorProto.verify(t.t);if(o)return"t."+o}if(t.g!=null&&t.hasOwnProperty("g")){var o=T.onnx.GraphProto.verify(t.g);if(o)return"g."+o}if(t.sparseTensor!=null&&t.hasOwnProperty("sparseTensor")){var o=T.onnx.SparseTensorProto.verify(t.sparseTensor);if(o)return"sparseTensor."+o}if(t.tp!=null&&t.hasOwnProperty("tp")){var o=T.onnx.TypeProto.verify(t.tp);if(o)return"tp."+o}if(t.floats!=null&&t.hasOwnProperty("floats")){if(!Array.isArray(t.floats))return"floats: array expected";for(var i=0;i<t.floats.length;++i)if(typeof t.floats[i]!="number")return"floats: number[] expected"}if(t.ints!=null&&t.hasOwnProperty("ints")){if(!Array.isArray(t.ints))return"ints: array expected";for(var i=0;i<t.ints.length;++i)if(!_.isInteger(t.ints[i])&&!(t.ints[i]&&_.isInteger(t.ints[i].low)&&_.isInteger(t.ints[i].high)))return"ints: integer|Long[] expected"}if(t.strings!=null&&t.hasOwnProperty("strings")){if(!Array.isArray(t.strings))return"strings: array expected";for(var i=0;i<t.strings.length;++i)if(!(t.strings[i]&&typeof t.strings[i].length=="number"||_.isString(t.strings[i])))return"strings: buffer[] expected"}if(t.tensors!=null&&t.hasOwnProperty("tensors")){if(!Array.isArray(t.tensors))return"tensors: array expected";for(var i=0;i<t.tensors.length;++i){var o=T.onnx.TensorProto.verify(t.tensors[i]);if(o)return"tensors."+o}}if(t.graphs!=null&&t.hasOwnProperty("graphs")){if(!Array.isArray(t.graphs))return"graphs: array expected";for(var i=0;i<t.graphs.length;++i){var o=T.onnx.GraphProto.verify(t.graphs[i]);if(o)return"graphs."+o}}if(t.sparseTensors!=null&&t.hasOwnProperty("sparseTensors")){if(!Array.isArray(t.sparseTensors))return"sparseTensors: array expected";for(var i=0;i<t.sparseTensors.length;++i){var o=T.onnx.SparseTensorProto.verify(t.sparseTensors[i]);if(o)return"sparseTensors."+o}}if(t.typeProtos!=null&&t.hasOwnProperty("typeProtos")){if(!Array.isArray(t.typeProtos))return"typeProtos: array expected";for(var i=0;i<t.typeProtos.length;++i){var o=T.onnx.TypeProto.verify(t.typeProtos[i]);if(o)return"typeProtos."+o}}return null},e.fromObject=function(t){if(t instanceof T.onnx.AttributeProto)return t;var o=new T.onnx.AttributeProto;switch(t.name!=null&&(o.name=String(t.name)),t.refAttrName!=null&&(o.refAttrName=String(t.refAttrName)),t.docString!=null&&(o.docString=String(t.docString)),t.type){default:if(typeof t.type=="number"){o.type=t.type;break}break;case"UNDEFINED":case 0:o.type=0;break;case"FLOAT":case 1:o.type=1;break;case"INT":case 2:o.type=2;break;case"STRING":case 3:o.type=3;break;case"TENSOR":case 4:o.type=4;break;case"GRAPH":case 5:o.type=5;break;case"SPARSE_TENSOR":case 11:o.type=11;break;case"TYPE_PROTO":case 13:o.type=13;break;case"FLOATS":case 6:o.type=6;break;case"INTS":case 7:o.type=7;break;case"STRINGS":case 8:o.type=8;break;case"TENSORS":case 9:o.type=9;break;case"GRAPHS":case 10:o.type=10;break;case"SPARSE_TENSORS":case 12:o.type=12;break;case"TYPE_PROTOS":case 14:o.type=14;break}if(t.f!=null&&(o.f=Number(t.f)),t.i!=null&&(_.Long?(o.i=_.Long.fromValue(t.i)).unsigned=!1:typeof t.i=="string"?o.i=parseInt(t.i,10):typeof t.i=="number"?o.i=t.i:typeof t.i=="object"&&(o.i=new _.LongBits(t.i.low>>>0,t.i.high>>>0).toNumber())),t.s!=null&&(typeof t.s=="string"?_.base64.decode(t.s,o.s=_.newBuffer(_.base64.length(t.s)),0):t.s.length>=0&&(o.s=t.s)),t.t!=null){if(typeof t.t!="object")throw TypeError(".onnx.AttributeProto.t: object expected");o.t=T.onnx.TensorProto.fromObject(t.t)}if(t.g!=null){if(typeof t.g!="object")throw TypeError(".onnx.AttributeProto.g: object expected");o.g=T.onnx.GraphProto.fromObject(t.g)}if(t.sparseTensor!=null){if(typeof t.sparseTensor!="object")throw TypeError(".onnx.AttributeProto.sparseTensor: object expected");o.sparseTensor=T.onnx.SparseTensorProto.fromObject(t.sparseTensor)}if(t.tp!=null){if(typeof t.tp!="object")throw TypeError(".onnx.AttributeProto.tp: object expected");o.tp=T.onnx.TypeProto.fromObject(t.tp)}if(t.floats){if(!Array.isArray(t.floats))throw TypeError(".onnx.AttributeProto.floats: array expected");o.floats=[];for(var i=0;i<t.floats.length;++i)o.floats[i]=Number(t.floats[i])}if(t.ints){if(!Array.isArray(t.ints))throw TypeError(".onnx.AttributeProto.ints: array expected");o.ints=[];for(var i=0;i<t.ints.length;++i)_.Long?(o.ints[i]=_.Long.fromValue(t.ints[i])).unsigned=!1:typeof t.ints[i]=="string"?o.ints[i]=parseInt(t.ints[i],10):typeof t.ints[i]=="number"?o.ints[i]=t.ints[i]:typeof t.ints[i]=="object"&&(o.ints[i]=new _.LongBits(t.ints[i].low>>>0,t.ints[i].high>>>0).toNumber())}if(t.strings){if(!Array.isArray(t.strings))throw TypeError(".onnx.AttributeProto.strings: array expected");o.strings=[];for(var i=0;i<t.strings.length;++i)typeof t.strings[i]=="string"?_.base64.decode(t.strings[i],o.strings[i]=_.newBuffer(_.base64.length(t.strings[i])),0):t.strings[i].length>=0&&(o.strings[i]=t.strings[i])}if(t.tensors){if(!Array.isArray(t.tensors))throw TypeError(".onnx.AttributeProto.tensors: array expected");o.tensors=[];for(var i=0;i<t.tensors.length;++i){if(typeof t.tensors[i]!="object")throw TypeError(".onnx.AttributeProto.tensors: object expected");o.tensors[i]=T.onnx.TensorProto.fromObject(t.tensors[i])}}if(t.graphs){if(!Array.isArray(t.graphs))throw TypeError(".onnx.AttributeProto.graphs: array expected");o.graphs=[];for(var i=0;i<t.graphs.length;++i){if(typeof t.graphs[i]!="object")throw TypeError(".onnx.AttributeProto.graphs: object expected");o.graphs[i]=T.onnx.GraphProto.fromObject(t.graphs[i])}}if(t.sparseTensors){if(!Array.isArray(t.sparseTensors))throw TypeError(".onnx.AttributeProto.sparseTensors: array expected");o.sparseTensors=[];for(var i=0;i<t.sparseTensors.length;++i){if(typeof t.sparseTensors[i]!="object")throw TypeError(".onnx.AttributeProto.sparseTensors: object expected");o.sparseTensors[i]=T.onnx.SparseTensorProto.fromObject(t.sparseTensors[i])}}if(t.typeProtos){if(!Array.isArray(t.typeProtos))throw TypeError(".onnx.AttributeProto.typeProtos: array expected");o.typeProtos=[];for(var i=0;i<t.typeProtos.length;++i){if(typeof t.typeProtos[i]!="object")throw TypeError(".onnx.AttributeProto.typeProtos: object expected");o.typeProtos[i]=T.onnx.TypeProto.fromObject(t.typeProtos[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.floats=[],i.ints=[],i.strings=[],i.tensors=[],i.graphs=[],i.typeProtos=[],i.sparseTensors=[]),o.defaults){if(i.name="",i.f=0,_.Long){var u=new _.Long(0,0,!1);i.i=o.longs===String?u.toString():o.longs===Number?u.toNumber():u}else i.i=o.longs===String?"0":0;o.bytes===String?i.s="":(i.s=[],o.bytes!==Array&&(i.s=_.newBuffer(i.s))),i.t=null,i.g=null,i.docString="",i.tp=null,i.type=o.enums===String?"UNDEFINED":0,i.refAttrName="",i.sparseTensor=null}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.f!=null&&t.hasOwnProperty("f")&&(i.f=o.json&&!isFinite(t.f)?String(t.f):t.f),t.i!=null&&t.hasOwnProperty("i")&&(typeof t.i=="number"?i.i=o.longs===String?String(t.i):t.i:i.i=o.longs===String?_.Long.prototype.toString.call(t.i):o.longs===Number?new _.LongBits(t.i.low>>>0,t.i.high>>>0).toNumber():t.i),t.s!=null&&t.hasOwnProperty("s")&&(i.s=o.bytes===String?_.base64.encode(t.s,0,t.s.length):o.bytes===Array?Array.prototype.slice.call(t.s):t.s),t.t!=null&&t.hasOwnProperty("t")&&(i.t=T.onnx.TensorProto.toObject(t.t,o)),t.g!=null&&t.hasOwnProperty("g")&&(i.g=T.onnx.GraphProto.toObject(t.g,o)),t.floats&&t.floats.length){i.floats=[];for(var a=0;a<t.floats.length;++a)i.floats[a]=o.json&&!isFinite(t.floats[a])?String(t.floats[a]):t.floats[a]}if(t.ints&&t.ints.length){i.ints=[];for(var a=0;a<t.ints.length;++a)typeof t.ints[a]=="number"?i.ints[a]=o.longs===String?String(t.ints[a]):t.ints[a]:i.ints[a]=o.longs===String?_.Long.prototype.toString.call(t.ints[a]):o.longs===Number?new _.LongBits(t.ints[a].low>>>0,t.ints[a].high>>>0).toNumber():t.ints[a]}if(t.strings&&t.strings.length){i.strings=[];for(var a=0;a<t.strings.length;++a)i.strings[a]=o.bytes===String?_.base64.encode(t.strings[a],0,t.strings[a].length):o.bytes===Array?Array.prototype.slice.call(t.strings[a]):t.strings[a]}if(t.tensors&&t.tensors.length){i.tensors=[];for(var a=0;a<t.tensors.length;++a)i.tensors[a]=T.onnx.TensorProto.toObject(t.tensors[a],o)}if(t.graphs&&t.graphs.length){i.graphs=[];for(var a=0;a<t.graphs.length;++a)i.graphs[a]=T.onnx.GraphProto.toObject(t.graphs[a],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.tp!=null&&t.hasOwnProperty("tp")&&(i.tp=T.onnx.TypeProto.toObject(t.tp,o)),t.typeProtos&&t.typeProtos.length){i.typeProtos=[];for(var a=0;a<t.typeProtos.length;++a)i.typeProtos[a]=T.onnx.TypeProto.toObject(t.typeProtos[a],o)}if(t.type!=null&&t.hasOwnProperty("type")&&(i.type=o.enums===String?T.onnx.AttributeProto.AttributeType[t.type]===void 0?t.type:T.onnx.AttributeProto.AttributeType[t.type]:t.type),t.refAttrName!=null&&t.hasOwnProperty("refAttrName")&&(i.refAttrName=t.refAttrName),t.sparseTensor!=null&&t.hasOwnProperty("sparseTensor")&&(i.sparseTensor=T.onnx.SparseTensorProto.toObject(t.sparseTensor,o)),t.sparseTensors&&t.sparseTensors.length){i.sparseTensors=[];for(var a=0;a<t.sparseTensors.length;++a)i.sparseTensors[a]=T.onnx.SparseTensorProto.toObject(t.sparseTensors[a],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.AttributeProto"},e.AttributeType=function(){var r={},t=Object.create(r);return t[r[0]="UNDEFINED"]=0,t[r[1]="FLOAT"]=1,t[r[2]="INT"]=2,t[r[3]="STRING"]=3,t[r[4]="TENSOR"]=4,t[r[5]="GRAPH"]=5,t[r[11]="SPARSE_TENSOR"]=11,t[r[13]="TYPE_PROTO"]=13,t[r[6]="FLOATS"]=6,t[r[7]="INTS"]=7,t[r[8]="STRINGS"]=8,t[r[9]="TENSORS"]=9,t[r[10]="GRAPHS"]=10,t[r[12]="SPARSE_TENSORS"]=12,t[r[14]="TYPE_PROTOS"]=14,t}(),e}(),n.ValueInfoProto=function(){function e(r){if(r)for(var t=Object.keys(r),o=0;o<t.length;++o)r[t[o]]!=null&&(this[t[o]]=r[t[o]])}return e.prototype.name="",e.prototype.type=null,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=rt.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.type!=null&&Object.hasOwnProperty.call(t,"type")&&T.onnx.TypeProto.encode(t.type,o.uint32(18).fork()).ldelim(),t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(26).string(t.docString),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof q||(t=q.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.ValueInfoProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.name=t.string();break}case 2:{u.type=T.onnx.TypeProto.decode(t,t.uint32());break}case 3:{u.docString=t.string();break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof q||(t=new q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!_.isString(t.name))return"name: string expected";if(t.type!=null&&t.hasOwnProperty("type")){var o=T.onnx.TypeProto.verify(t.type);if(o)return"type."+o}return t.docString!=null&&t.hasOwnProperty("docString")&&!_.isString(t.docString)?"docString: string expected":null},e.fromObject=function(t){if(t instanceof T.onnx.ValueInfoProto)return t;var o=new T.onnx.ValueInfoProto;if(t.name!=null&&(o.name=String(t.name)),t.type!=null){if(typeof t.type!="object")throw TypeError(".onnx.ValueInfoProto.type: object expected");o.type=T.onnx.TypeProto.fromObject(t.type)}return t.docString!=null&&(o.docString=String(t.docString)),o},e.toObject=function(t,o){o||(o={});var i={};return o.defaults&&(i.name="",i.type=null,i.docString=""),t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.type!=null&&t.hasOwnProperty("type")&&(i.type=T.onnx.TypeProto.toObject(t.type,o)),t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.ValueInfoProto"},e}(),n.NodeProto=function(){function e(r){if(this.input=[],this.output=[],this.attribute=[],r)for(var t=Object.keys(r),o=0;o<t.length;++o)r[t[o]]!=null&&(this[t[o]]=r[t[o]])}return e.prototype.input=_.emptyArray,e.prototype.output=_.emptyArray,e.prototype.name="",e.prototype.opType="",e.prototype.domain="",e.prototype.attribute=_.emptyArray,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=rt.create()),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)o.uint32(10).string(t.input[i]);if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)o.uint32(18).string(t.output[i]);if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(26).string(t.name),t.opType!=null&&Object.hasOwnProperty.call(t,"opType")&&o.uint32(34).string(t.opType),t.attribute!=null&&t.attribute.length)for(var i=0;i<t.attribute.length;++i)T.onnx.AttributeProto.encode(t.attribute[i],o.uint32(42).fork()).ldelim();return t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(50).string(t.docString),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(58).string(t.domain),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof q||(t=q.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.NodeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.input&&u.input.length||(u.input=[]),u.input.push(t.string());break}case 2:{u.output&&u.output.length||(u.output=[]),u.output.push(t.string());break}case 3:{u.name=t.string();break}case 4:{u.opType=t.string();break}case 7:{u.domain=t.string();break}case 5:{u.attribute&&u.attribute.length||(u.attribute=[]),u.attribute.push(T.onnx.AttributeProto.decode(t,t.uint32()));break}case 6:{u.docString=t.string();break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof q||(t=new q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o)if(!_.isString(t.input[o]))return"input: string[] expected"}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o)if(!_.isString(t.output[o]))return"output: string[] expected"}if(t.name!=null&&t.hasOwnProperty("name")&&!_.isString(t.name))return"name: string expected";if(t.opType!=null&&t.hasOwnProperty("opType")&&!_.isString(t.opType))return"opType: string expected";if(t.domain!=null&&t.hasOwnProperty("domain")&&!_.isString(t.domain))return"domain: string expected";if(t.attribute!=null&&t.hasOwnProperty("attribute")){if(!Array.isArray(t.attribute))return"attribute: array expected";for(var o=0;o<t.attribute.length;++o){var i=T.onnx.AttributeProto.verify(t.attribute[o]);if(i)return"attribute."+i}}return t.docString!=null&&t.hasOwnProperty("docString")&&!_.isString(t.docString)?"docString: string expected":null},e.fromObject=function(t){if(t instanceof T.onnx.NodeProto)return t;var o=new T.onnx.NodeProto;if(t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.NodeProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i)o.input[i]=String(t.input[i])}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.NodeProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i)o.output[i]=String(t.output[i])}if(t.name!=null&&(o.name=String(t.name)),t.opType!=null&&(o.opType=String(t.opType)),t.domain!=null&&(o.domain=String(t.domain)),t.attribute){if(!Array.isArray(t.attribute))throw TypeError(".onnx.NodeProto.attribute: array expected");o.attribute=[];for(var i=0;i<t.attribute.length;++i){if(typeof t.attribute[i]!="object")throw TypeError(".onnx.NodeProto.attribute: object expected");o.attribute[i]=T.onnx.AttributeProto.fromObject(t.attribute[i])}}return t.docString!=null&&(o.docString=String(t.docString)),o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.input=[],i.output=[],i.attribute=[]),o.defaults&&(i.name="",i.opType="",i.docString="",i.domain=""),t.input&&t.input.length){i.input=[];for(var u=0;u<t.input.length;++u)i.input[u]=t.input[u]}if(t.output&&t.output.length){i.output=[];for(var u=0;u<t.output.length;++u)i.output[u]=t.output[u]}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.opType!=null&&t.hasOwnProperty("opType")&&(i.opType=t.opType),t.attribute&&t.attribute.length){i.attribute=[];for(var u=0;u<t.attribute.length;++u)i.attribute[u]=T.onnx.AttributeProto.toObject(t.attribute[u],o)}return t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.NodeProto"},e}(),n.TrainingInfoProto=function(){function e(r){if(this.initializationBinding=[],this.updateBinding=[],r)for(var t=Object.keys(r),o=0;o<t.length;++o)r[t[o]]!=null&&(this[t[o]]=r[t[o]])}return e.prototype.initialization=null,e.prototype.algorithm=null,e.prototype.initializationBinding=_.emptyArray,e.prototype.updateBinding=_.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=rt.create()),t.initialization!=null&&Object.hasOwnProperty.call(t,"initialization")&&T.onnx.GraphProto.encode(t.initialization,o.uint32(10).fork()).ldelim(),t.algorithm!=null&&Object.hasOwnProperty.call(t,"algorithm")&&T.onnx.GraphProto.encode(t.algorithm,o.uint32(18).fork()).ldelim(),t.initializationBinding!=null&&t.initializationBinding.length)for(var i=0;i<t.initializationBinding.length;++i)T.onnx.StringStringEntryProto.encode(t.initializationBinding[i],o.uint32(26).fork()).ldelim();if(t.updateBinding!=null&&t.updateBinding.length)for(var i=0;i<t.updateBinding.length;++i)T.onnx.StringStringEntryProto.encode(t.updateBinding[i],o.uint32(34).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof q||(t=q.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.TrainingInfoProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.initialization=T.onnx.GraphProto.decode(t,t.uint32());break}case 2:{u.algorithm=T.onnx.GraphProto.decode(t,t.uint32());break}case 3:{u.initializationBinding&&u.initializationBinding.length||(u.initializationBinding=[]),u.initializationBinding.push(T.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 4:{u.updateBinding&&u.updateBinding.length||(u.updateBinding=[]),u.updateBinding.push(T.onnx.StringStringEntryProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof q||(t=new q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.initialization!=null&&t.hasOwnProperty("initialization")){var o=T.onnx.GraphProto.verify(t.initialization);if(o)return"initialization."+o}if(t.algorithm!=null&&t.hasOwnProperty("algorithm")){var o=T.onnx.GraphProto.verify(t.algorithm);if(o)return"algorithm."+o}if(t.initializationBinding!=null&&t.hasOwnProperty("initializationBinding")){if(!Array.isArray(t.initializationBinding))return"initializationBinding: array expected";for(var i=0;i<t.initializationBinding.length;++i){var o=T.onnx.StringStringEntryProto.verify(t.initializationBinding[i]);if(o)return"initializationBinding."+o}}if(t.updateBinding!=null&&t.hasOwnProperty("updateBinding")){if(!Array.isArray(t.updateBinding))return"updateBinding: array expected";for(var i=0;i<t.updateBinding.length;++i){var o=T.onnx.StringStringEntryProto.verify(t.updateBinding[i]);if(o)return"updateBinding."+o}}return null},e.fromObject=function(t){if(t instanceof T.onnx.TrainingInfoProto)return t;var o=new T.onnx.TrainingInfoProto;if(t.initialization!=null){if(typeof t.initialization!="object")throw TypeError(".onnx.TrainingInfoProto.initialization: object expected");o.initialization=T.onnx.GraphProto.fromObject(t.initialization)}if(t.algorithm!=null){if(typeof t.algorithm!="object")throw TypeError(".onnx.TrainingInfoProto.algorithm: object expected");o.algorithm=T.onnx.GraphProto.fromObject(t.algorithm)}if(t.initializationBinding){if(!Array.isArray(t.initializationBinding))throw TypeError(".onnx.TrainingInfoProto.initializationBinding: array expected");o.initializationBinding=[];for(var i=0;i<t.initializationBinding.length;++i){if(typeof t.initializationBinding[i]!="object")throw TypeError(".onnx.TrainingInfoProto.initializationBinding: object expected");o.initializationBinding[i]=T.onnx.StringStringEntryProto.fromObject(t.initializationBinding[i])}}if(t.updateBinding){if(!Array.isArray(t.updateBinding))throw TypeError(".onnx.TrainingInfoProto.updateBinding: array expected");o.updateBinding=[];for(var i=0;i<t.updateBinding.length;++i){if(typeof t.updateBinding[i]!="object")throw TypeError(".onnx.TrainingInfoProto.updateBinding: object expected");o.updateBinding[i]=T.onnx.StringStringEntryProto.fromObject(t.updateBinding[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.initializationBinding=[],i.updateBinding=[]),o.defaults&&(i.initialization=null,i.algorithm=null),t.initialization!=null&&t.hasOwnProperty("initialization")&&(i.initialization=T.onnx.GraphProto.toObject(t.initialization,o)),t.algorithm!=null&&t.hasOwnProperty("algorithm")&&(i.algorithm=T.onnx.GraphProto.toObject(t.algorithm,o)),t.initializationBinding&&t.initializationBinding.length){i.initializationBinding=[];for(var u=0;u<t.initializationBinding.length;++u)i.initializationBinding[u]=T.onnx.StringStringEntryProto.toObject(t.initializationBinding[u],o)}if(t.updateBinding&&t.updateBinding.length){i.updateBinding=[];for(var u=0;u<t.updateBinding.length;++u)i.updateBinding[u]=T.onnx.StringStringEntryProto.toObject(t.updateBinding[u],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TrainingInfoProto"},e}(),n.ModelProto=function(){function e(r){if(this.opsetImport=[],this.metadataProps=[],this.trainingInfo=[],this.functions=[],r)for(var t=Object.keys(r),o=0;o<t.length;++o)r[t[o]]!=null&&(this[t[o]]=r[t[o]])}return e.prototype.irVersion=_.Long?_.Long.fromBits(0,0,!1):0,e.prototype.opsetImport=_.emptyArray,e.prototype.producerName="",e.prototype.producerVersion="",e.prototype.domain="",e.prototype.modelVersion=_.Long?_.Long.fromBits(0,0,!1):0,e.prototype.docString="",e.prototype.graph=null,e.prototype.metadataProps=_.emptyArray,e.prototype.trainingInfo=_.emptyArray,e.prototype.functions=_.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=rt.create()),t.irVersion!=null&&Object.hasOwnProperty.call(t,"irVersion")&&o.uint32(8).int64(t.irVersion),t.producerName!=null&&Object.hasOwnProperty.call(t,"producerName")&&o.uint32(18).string(t.producerName),t.producerVersion!=null&&Object.hasOwnProperty.call(t,"producerVersion")&&o.uint32(26).string(t.producerVersion),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(34).string(t.domain),t.modelVersion!=null&&Object.hasOwnProperty.call(t,"modelVersion")&&o.uint32(40).int64(t.modelVersion),t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(50).string(t.docString),t.graph!=null&&Object.hasOwnProperty.call(t,"graph")&&T.onnx.GraphProto.encode(t.graph,o.uint32(58).fork()).ldelim(),t.opsetImport!=null&&t.opsetImport.length)for(var i=0;i<t.opsetImport.length;++i)T.onnx.OperatorSetIdProto.encode(t.opsetImport[i],o.uint32(66).fork()).ldelim();if(t.metadataProps!=null&&t.metadataProps.length)for(var i=0;i<t.metadataProps.length;++i)T.onnx.StringStringEntryProto.encode(t.metadataProps[i],o.uint32(114).fork()).ldelim();if(t.trainingInfo!=null&&t.trainingInfo.length)for(var i=0;i<t.trainingInfo.length;++i)T.onnx.TrainingInfoProto.encode(t.trainingInfo[i],o.uint32(162).fork()).ldelim();if(t.functions!=null&&t.functions.length)for(var i=0;i<t.functions.length;++i)T.onnx.FunctionProto.encode(t.functions[i],o.uint32(202).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof q||(t=q.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.ModelProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.irVersion=t.int64();break}case 8:{u.opsetImport&&u.opsetImport.length||(u.opsetImport=[]),u.opsetImport.push(T.onnx.OperatorSetIdProto.decode(t,t.uint32()));break}case 2:{u.producerName=t.string();break}case 3:{u.producerVersion=t.string();break}case 4:{u.domain=t.string();break}case 5:{u.modelVersion=t.int64();break}case 6:{u.docString=t.string();break}case 7:{u.graph=T.onnx.GraphProto.decode(t,t.uint32());break}case 14:{u.metadataProps&&u.metadataProps.length||(u.metadataProps=[]),u.metadataProps.push(T.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 20:{u.trainingInfo&&u.trainingInfo.length||(u.trainingInfo=[]),u.trainingInfo.push(T.onnx.TrainingInfoProto.decode(t,t.uint32()));break}case 25:{u.functions&&u.functions.length||(u.functions=[]),u.functions.push(T.onnx.FunctionProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof q||(t=new q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.irVersion!=null&&t.hasOwnProperty("irVersion")&&!_.isInteger(t.irVersion)&&!(t.irVersion&&_.isInteger(t.irVersion.low)&&_.isInteger(t.irVersion.high)))return"irVersion: integer|Long expected";if(t.opsetImport!=null&&t.hasOwnProperty("opsetImport")){if(!Array.isArray(t.opsetImport))return"opsetImport: array expected";for(var o=0;o<t.opsetImport.length;++o){var i=T.onnx.OperatorSetIdProto.verify(t.opsetImport[o]);if(i)return"opsetImport."+i}}if(t.producerName!=null&&t.hasOwnProperty("producerName")&&!_.isString(t.producerName))return"producerName: string expected";if(t.producerVersion!=null&&t.hasOwnProperty("producerVersion")&&!_.isString(t.producerVersion))return"producerVersion: string expected";if(t.domain!=null&&t.hasOwnProperty("domain")&&!_.isString(t.domain))return"domain: string expected";if(t.modelVersion!=null&&t.hasOwnProperty("modelVersion")&&!_.isInteger(t.modelVersion)&&!(t.modelVersion&&_.isInteger(t.modelVersion.low)&&_.isInteger(t.modelVersion.high)))return"modelVersion: integer|Long expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!_.isString(t.docString))return"docString: string expected";if(t.graph!=null&&t.hasOwnProperty("graph")){var i=T.onnx.GraphProto.verify(t.graph);if(i)return"graph."+i}if(t.metadataProps!=null&&t.hasOwnProperty("metadataProps")){if(!Array.isArray(t.metadataProps))return"metadataProps: array expected";for(var o=0;o<t.metadataProps.length;++o){var i=T.onnx.StringStringEntryProto.verify(t.metadataProps[o]);if(i)return"metadataProps."+i}}if(t.trainingInfo!=null&&t.hasOwnProperty("trainingInfo")){if(!Array.isArray(t.trainingInfo))return"trainingInfo: array expected";for(var o=0;o<t.trainingInfo.length;++o){var i=T.onnx.TrainingInfoProto.verify(t.trainingInfo[o]);if(i)return"trainingInfo."+i}}if(t.functions!=null&&t.hasOwnProperty("functions")){if(!Array.isArray(t.functions))return"functions: array expected";for(var o=0;o<t.functions.length;++o){var i=T.onnx.FunctionProto.verify(t.functions[o]);if(i)return"functions."+i}}return null},e.fromObject=function(t){if(t instanceof T.onnx.ModelProto)return t;var o=new T.onnx.ModelProto;if(t.irVersion!=null&&(_.Long?(o.irVersion=_.Long.fromValue(t.irVersion)).unsigned=!1:typeof t.irVersion=="string"?o.irVersion=parseInt(t.irVersion,10):typeof t.irVersion=="number"?o.irVersion=t.irVersion:typeof t.irVersion=="object"&&(o.irVersion=new _.LongBits(t.irVersion.low>>>0,t.irVersion.high>>>0).toNumber())),t.opsetImport){if(!Array.isArray(t.opsetImport))throw TypeError(".onnx.ModelProto.opsetImport: array expected");o.opsetImport=[];for(var i=0;i<t.opsetImport.length;++i){if(typeof t.opsetImport[i]!="object")throw TypeError(".onnx.ModelProto.opsetImport: object expected");o.opsetImport[i]=T.onnx.OperatorSetIdProto.fromObject(t.opsetImport[i])}}if(t.producerName!=null&&(o.producerName=String(t.producerName)),t.producerVersion!=null&&(o.producerVersion=String(t.producerVersion)),t.domain!=null&&(o.domain=String(t.domain)),t.modelVersion!=null&&(_.Long?(o.modelVersion=_.Long.fromValue(t.modelVersion)).unsigned=!1:typeof t.modelVersion=="string"?o.modelVersion=parseInt(t.modelVersion,10):typeof t.modelVersion=="number"?o.modelVersion=t.modelVersion:typeof t.modelVersion=="object"&&(o.modelVersion=new _.LongBits(t.modelVersion.low>>>0,t.modelVersion.high>>>0).toNumber())),t.docString!=null&&(o.docString=String(t.docString)),t.graph!=null){if(typeof t.graph!="object")throw TypeError(".onnx.ModelProto.graph: object expected");o.graph=T.onnx.GraphProto.fromObject(t.graph)}if(t.metadataProps){if(!Array.isArray(t.metadataProps))throw TypeError(".onnx.ModelProto.metadataProps: array expected");o.metadataProps=[];for(var i=0;i<t.metadataProps.length;++i){if(typeof t.metadataProps[i]!="object")throw TypeError(".onnx.ModelProto.metadataProps: object expected");o.metadataProps[i]=T.onnx.StringStringEntryProto.fromObject(t.metadataProps[i])}}if(t.trainingInfo){if(!Array.isArray(t.trainingInfo))throw TypeError(".onnx.ModelProto.trainingInfo: array expected");o.trainingInfo=[];for(var i=0;i<t.trainingInfo.length;++i){if(typeof t.trainingInfo[i]!="object")throw TypeError(".onnx.ModelProto.trainingInfo: object expected");o.trainingInfo[i]=T.onnx.TrainingInfoProto.fromObject(t.trainingInfo[i])}}if(t.functions){if(!Array.isArray(t.functions))throw TypeError(".onnx.ModelProto.functions: array expected");o.functions=[];for(var i=0;i<t.functions.length;++i){if(typeof t.functions[i]!="object")throw TypeError(".onnx.ModelProto.functions: object expected");o.functions[i]=T.onnx.FunctionProto.fromObject(t.functions[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.opsetImport=[],i.metadataProps=[],i.trainingInfo=[],i.functions=[]),o.defaults){if(_.Long){var u=new _.Long(0,0,!1);i.irVersion=o.longs===String?u.toString():o.longs===Number?u.toNumber():u}else i.irVersion=o.longs===String?"0":0;if(i.producerName="",i.producerVersion="",i.domain="",_.Long){var u=new _.Long(0,0,!1);i.modelVersion=o.longs===String?u.toString():o.longs===Number?u.toNumber():u}else i.modelVersion=o.longs===String?"0":0;i.docString="",i.graph=null}if(t.irVersion!=null&&t.hasOwnProperty("irVersion")&&(typeof t.irVersion=="number"?i.irVersion=o.longs===String?String(t.irVersion):t.irVersion:i.irVersion=o.longs===String?_.Long.prototype.toString.call(t.irVersion):o.longs===Number?new _.LongBits(t.irVersion.low>>>0,t.irVersion.high>>>0).toNumber():t.irVersion),t.producerName!=null&&t.hasOwnProperty("producerName")&&(i.producerName=t.producerName),t.producerVersion!=null&&t.hasOwnProperty("producerVersion")&&(i.producerVersion=t.producerVersion),t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.modelVersion!=null&&t.hasOwnProperty("modelVersion")&&(typeof t.modelVersion=="number"?i.modelVersion=o.longs===String?String(t.modelVersion):t.modelVersion:i.modelVersion=o.longs===String?_.Long.prototype.toString.call(t.modelVersion):o.longs===Number?new _.LongBits(t.modelVersion.low>>>0,t.modelVersion.high>>>0).toNumber():t.modelVersion),t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.graph!=null&&t.hasOwnProperty("graph")&&(i.graph=T.onnx.GraphProto.toObject(t.graph,o)),t.opsetImport&&t.opsetImport.length){i.opsetImport=[];for(var a=0;a<t.opsetImport.length;++a)i.opsetImport[a]=T.onnx.OperatorSetIdProto.toObject(t.opsetImport[a],o)}if(t.metadataProps&&t.metadataProps.length){i.metadataProps=[];for(var a=0;a<t.metadataProps.length;++a)i.metadataProps[a]=T.onnx.StringStringEntryProto.toObject(t.metadataProps[a],o)}if(t.trainingInfo&&t.trainingInfo.length){i.trainingInfo=[];for(var a=0;a<t.trainingInfo.length;++a)i.trainingInfo[a]=T.onnx.TrainingInfoProto.toObject(t.trainingInfo[a],o)}if(t.functions&&t.functions.length){i.functions=[];for(var a=0;a<t.functions.length;++a)i.functions[a]=T.onnx.FunctionProto.toObject(t.functions[a],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.ModelProto"},e}(),n.StringStringEntryProto=function(){function e(r){if(r)for(var t=Object.keys(r),o=0;o<t.length;++o)r[t[o]]!=null&&(this[t[o]]=r[t[o]])}return e.prototype.key="",e.prototype.value="",e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=rt.create()),t.key!=null&&Object.hasOwnProperty.call(t,"key")&&o.uint32(10).string(t.key),t.value!=null&&Object.hasOwnProperty.call(t,"value")&&o.uint32(18).string(t.value),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof q||(t=q.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.StringStringEntryProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.key=t.string();break}case 2:{u.value=t.string();break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof q||(t=new q(t)),this.decode(t,t.uint32())},e.verify=function(t){return typeof t!="object"||t===null?"object expected":t.key!=null&&t.hasOwnProperty("key")&&!_.isString(t.key)?"key: string expected":t.value!=null&&t.hasOwnProperty("value")&&!_.isString(t.value)?"value: string expected":null},e.fromObject=function(t){if(t instanceof T.onnx.StringStringEntryProto)return t;var o=new T.onnx.StringStringEntryProto;return t.key!=null&&(o.key=String(t.key)),t.value!=null&&(o.value=String(t.value)),o},e.toObject=function(t,o){o||(o={});var i={};return o.defaults&&(i.key="",i.value=""),t.key!=null&&t.hasOwnProperty("key")&&(i.key=t.key),t.value!=null&&t.hasOwnProperty("value")&&(i.value=t.value),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.StringStringEntryProto"},e}(),n.TensorAnnotation=function(){function e(r){if(this.quantParameterTensorNames=[],r)for(var t=Object.keys(r),o=0;o<t.length;++o)r[t[o]]!=null&&(this[t[o]]=r[t[o]])}return e.prototype.tensorName="",e.prototype.quantParameterTensorNames=_.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=rt.create()),t.tensorName!=null&&Object.hasOwnProperty.call(t,"tensorName")&&o.uint32(10).string(t.tensorName),t.quantParameterTensorNames!=null&&t.quantParameterTensorNames.length)for(var i=0;i<t.quantParameterTensorNames.length;++i)T.onnx.StringStringEntryProto.encode(t.quantParameterTensorNames[i],o.uint32(18).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof q||(t=q.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.TensorAnnotation;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.tensorName=t.string();break}case 2:{u.quantParameterTensorNames&&u.quantParameterTensorNames.length||(u.quantParameterTensorNames=[]),u.quantParameterTensorNames.push(T.onnx.StringStringEntryProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof q||(t=new q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.tensorName!=null&&t.hasOwnProperty("tensorName")&&!_.isString(t.tensorName))return"tensorName: string expected";if(t.quantParameterTensorNames!=null&&t.hasOwnProperty("quantParameterTensorNames")){if(!Array.isArray(t.quantParameterTensorNames))return"quantParameterTensorNames: array expected";for(var o=0;o<t.quantParameterTensorNames.length;++o){var i=T.onnx.StringStringEntryProto.verify(t.quantParameterTensorNames[o]);if(i)return"quantParameterTensorNames."+i}}return null},e.fromObject=function(t){if(t instanceof T.onnx.TensorAnnotation)return t;var o=new T.onnx.TensorAnnotation;if(t.tensorName!=null&&(o.tensorName=String(t.tensorName)),t.quantParameterTensorNames){if(!Array.isArray(t.quantParameterTensorNames))throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: array expected");o.quantParameterTensorNames=[];for(var i=0;i<t.quantParameterTensorNames.length;++i){if(typeof t.quantParameterTensorNames[i]!="object")throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: object expected");o.quantParameterTensorNames[i]=T.onnx.StringStringEntryProto.fromObject(t.quantParameterTensorNames[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.quantParameterTensorNames=[]),o.defaults&&(i.tensorName=""),t.tensorName!=null&&t.hasOwnProperty("tensorName")&&(i.tensorName=t.tensorName),t.quantParameterTensorNames&&t.quantParameterTensorNames.length){i.quantParameterTensorNames=[];for(var u=0;u<t.quantParameterTensorNames.length;++u)i.quantParameterTensorNames[u]=T.onnx.StringStringEntryProto.toObject(t.quantParameterTensorNames[u],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorAnnotation"},e}(),n.GraphProto=function(){function e(r){if(this.node=[],this.initializer=[],this.sparseInitializer=[],this.input=[],this.output=[],this.valueInfo=[],this.quantizationAnnotation=[],r)for(var t=Object.keys(r),o=0;o<t.length;++o)r[t[o]]!=null&&(this[t[o]]=r[t[o]])}return e.prototype.node=_.emptyArray,e.prototype.name="",e.prototype.initializer=_.emptyArray,e.prototype.sparseInitializer=_.emptyArray,e.prototype.docString="",e.prototype.input=_.emptyArray,e.prototype.output=_.emptyArray,e.prototype.valueInfo=_.emptyArray,e.prototype.quantizationAnnotation=_.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=rt.create()),t.node!=null&&t.node.length)for(var i=0;i<t.node.length;++i)T.onnx.NodeProto.encode(t.node[i],o.uint32(10).fork()).ldelim();if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(18).string(t.name),t.initializer!=null&&t.initializer.length)for(var i=0;i<t.initializer.length;++i)T.onnx.TensorProto.encode(t.initializer[i],o.uint32(42).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(82).string(t.docString),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)T.onnx.ValueInfoProto.encode(t.input[i],o.uint32(90).fork()).ldelim();if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)T.onnx.ValueInfoProto.encode(t.output[i],o.uint32(98).fork()).ldelim();if(t.valueInfo!=null&&t.valueInfo.length)for(var i=0;i<t.valueInfo.length;++i)T.onnx.ValueInfoProto.encode(t.valueInfo[i],o.uint32(106).fork()).ldelim();if(t.quantizationAnnotation!=null&&t.quantizationAnnotation.length)for(var i=0;i<t.quantizationAnnotation.length;++i)T.onnx.TensorAnnotation.encode(t.quantizationAnnotation[i],o.uint32(114).fork()).ldelim();if(t.sparseInitializer!=null&&t.sparseInitializer.length)for(var i=0;i<t.sparseInitializer.length;++i)T.onnx.SparseTensorProto.encode(t.sparseInitializer[i],o.uint32(122).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof q||(t=q.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.GraphProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.node&&u.node.length||(u.node=[]),u.node.push(T.onnx.NodeProto.decode(t,t.uint32()));break}case 2:{u.name=t.string();break}case 5:{u.initializer&&u.initializer.length||(u.initializer=[]),u.initializer.push(T.onnx.TensorProto.decode(t,t.uint32()));break}case 15:{u.sparseInitializer&&u.sparseInitializer.length||(u.sparseInitializer=[]),u.sparseInitializer.push(T.onnx.SparseTensorProto.decode(t,t.uint32()));break}case 10:{u.docString=t.string();break}case 11:{u.input&&u.input.length||(u.input=[]),u.input.push(T.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 12:{u.output&&u.output.length||(u.output=[]),u.output.push(T.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 13:{u.valueInfo&&u.valueInfo.length||(u.valueInfo=[]),u.valueInfo.push(T.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 14:{u.quantizationAnnotation&&u.quantizationAnnotation.length||(u.quantizationAnnotation=[]),u.quantizationAnnotation.push(T.onnx.TensorAnnotation.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof q||(t=new q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.node!=null&&t.hasOwnProperty("node")){if(!Array.isArray(t.node))return"node: array expected";for(var o=0;o<t.node.length;++o){var i=T.onnx.NodeProto.verify(t.node[o]);if(i)return"node."+i}}if(t.name!=null&&t.hasOwnProperty("name")&&!_.isString(t.name))return"name: string expected";if(t.initializer!=null&&t.hasOwnProperty("initializer")){if(!Array.isArray(t.initializer))return"initializer: array expected";for(var o=0;o<t.initializer.length;++o){var i=T.onnx.TensorProto.verify(t.initializer[o]);if(i)return"initializer."+i}}if(t.sparseInitializer!=null&&t.hasOwnProperty("sparseInitializer")){if(!Array.isArray(t.sparseInitializer))return"sparseInitializer: array expected";for(var o=0;o<t.sparseInitializer.length;++o){var i=T.onnx.SparseTensorProto.verify(t.sparseInitializer[o]);if(i)return"sparseInitializer."+i}}if(t.docString!=null&&t.hasOwnProperty("docString")&&!_.isString(t.docString))return"docString: string expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o){var i=T.onnx.ValueInfoProto.verify(t.input[o]);if(i)return"input."+i}}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o){var i=T.onnx.ValueInfoProto.verify(t.output[o]);if(i)return"output."+i}}if(t.valueInfo!=null&&t.hasOwnProperty("valueInfo")){if(!Array.isArray(t.valueInfo))return"valueInfo: array expected";for(var o=0;o<t.valueInfo.length;++o){var i=T.onnx.ValueInfoProto.verify(t.valueInfo[o]);if(i)return"valueInfo."+i}}if(t.quantizationAnnotation!=null&&t.hasOwnProperty("quantizationAnnotation")){if(!Array.isArray(t.quantizationAnnotation))return"quantizationAnnotation: array expected";for(var o=0;o<t.quantizationAnnotation.length;++o){var i=T.onnx.TensorAnnotation.verify(t.quantizationAnnotation[o]);if(i)return"quantizationAnnotation."+i}}return null},e.fromObject=function(t){if(t instanceof T.onnx.GraphProto)return t;var o=new T.onnx.GraphProto;if(t.node){if(!Array.isArray(t.node))throw TypeError(".onnx.GraphProto.node: array expected");o.node=[];for(var i=0;i<t.node.length;++i){if(typeof t.node[i]!="object")throw TypeError(".onnx.GraphProto.node: object expected");o.node[i]=T.onnx.NodeProto.fromObject(t.node[i])}}if(t.name!=null&&(o.name=String(t.name)),t.initializer){if(!Array.isArray(t.initializer))throw TypeError(".onnx.GraphProto.initializer: array expected");o.initializer=[];for(var i=0;i<t.initializer.length;++i){if(typeof t.initializer[i]!="object")throw TypeError(".onnx.GraphProto.initializer: object expected");o.initializer[i]=T.onnx.TensorProto.fromObject(t.initializer[i])}}if(t.sparseInitializer){if(!Array.isArray(t.sparseInitializer))throw TypeError(".onnx.GraphProto.sparseInitializer: array expected");o.sparseInitializer=[];for(var i=0;i<t.sparseInitializer.length;++i){if(typeof t.sparseInitializer[i]!="object")throw TypeError(".onnx.GraphProto.sparseInitializer: object expected");o.sparseInitializer[i]=T.onnx.SparseTensorProto.fromObject(t.sparseInitializer[i])}}if(t.docString!=null&&(o.docString=String(t.docString)),t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.GraphProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i){if(typeof t.input[i]!="object")throw TypeError(".onnx.GraphProto.input: object expected");o.input[i]=T.onnx.ValueInfoProto.fromObject(t.input[i])}}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.GraphProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i){if(typeof t.output[i]!="object")throw TypeError(".onnx.GraphProto.output: object expected");o.output[i]=T.onnx.ValueInfoProto.fromObject(t.output[i])}}if(t.valueInfo){if(!Array.isArray(t.valueInfo))throw TypeError(".onnx.GraphProto.valueInfo: array expected");o.valueInfo=[];for(var i=0;i<t.valueInfo.length;++i){if(typeof t.valueInfo[i]!="object")throw TypeError(".onnx.GraphProto.valueInfo: object expected");o.valueInfo[i]=T.onnx.ValueInfoProto.fromObject(t.valueInfo[i])}}if(t.quantizationAnnotation){if(!Array.isArray(t.quantizationAnnotation))throw TypeError(".onnx.GraphProto.quantizationAnnotation: array expected");o.quantizationAnnotation=[];for(var i=0;i<t.quantizationAnnotation.length;++i){if(typeof t.quantizationAnnotation[i]!="object")throw TypeError(".onnx.GraphProto.quantizationAnnotation: object expected");o.quantizationAnnotation[i]=T.onnx.TensorAnnotation.fromObject(t.quantizationAnnotation[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.node=[],i.initializer=[],i.input=[],i.output=[],i.valueInfo=[],i.quantizationAnnotation=[],i.sparseInitializer=[]),o.defaults&&(i.name="",i.docString=""),t.node&&t.node.length){i.node=[];for(var u=0;u<t.node.length;++u)i.node[u]=T.onnx.NodeProto.toObject(t.node[u],o)}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.initializer&&t.initializer.length){i.initializer=[];for(var u=0;u<t.initializer.length;++u)i.initializer[u]=T.onnx.TensorProto.toObject(t.initializer[u],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.input&&t.input.length){i.input=[];for(var u=0;u<t.input.length;++u)i.input[u]=T.onnx.ValueInfoProto.toObject(t.input[u],o)}if(t.output&&t.output.length){i.output=[];for(var u=0;u<t.output.length;++u)i.output[u]=T.onnx.ValueInfoProto.toObject(t.output[u],o)}if(t.valueInfo&&t.valueInfo.length){i.valueInfo=[];for(var u=0;u<t.valueInfo.length;++u)i.valueInfo[u]=T.onnx.ValueInfoProto.toObject(t.valueInfo[u],o)}if(t.quantizationAnnotation&&t.quantizationAnnotation.length){i.quantizationAnnotation=[];for(var u=0;u<t.quantizationAnnotation.length;++u)i.quantizationAnnotation[u]=T.onnx.TensorAnnotation.toObject(t.quantizationAnnotation[u],o)}if(t.sparseInitializer&&t.sparseInitializer.length){i.sparseInitializer=[];for(var u=0;u<t.sparseInitializer.length;++u)i.sparseInitializer[u]=T.onnx.SparseTensorProto.toObject(t.sparseInitializer[u],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.GraphProto"},e}(),n.TensorProto=function(){function e(r){if(this.dims=[],this.floatData=[],this.int32Data=[],this.stringData=[],this.int64Data=[],this.externalData=[],this.doubleData=[],this.uint64Data=[],r)for(var t=Object.keys(r),o=0;o<t.length;++o)r[t[o]]!=null&&(this[t[o]]=r[t[o]])}return e.prototype.dims=_.emptyArray,e.prototype.dataType=0,e.prototype.segment=null,e.prototype.floatData=_.emptyArray,e.prototype.int32Data=_.emptyArray,e.prototype.stringData=_.emptyArray,e.prototype.int64Data=_.emptyArray,e.prototype.name="",e.prototype.docString="",e.prototype.rawData=_.newBuffer([]),e.prototype.externalData=_.emptyArray,e.prototype.dataLocation=0,e.prototype.doubleData=_.emptyArray,e.prototype.uint64Data=_.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=rt.create()),t.dims!=null&&t.dims.length){o.uint32(10).fork();for(var i=0;i<t.dims.length;++i)o.int64(t.dims[i]);o.ldelim()}if(t.dataType!=null&&Object.hasOwnProperty.call(t,"dataType")&&o.uint32(16).int32(t.dataType),t.segment!=null&&Object.hasOwnProperty.call(t,"segment")&&T.onnx.TensorProto.Segment.encode(t.segment,o.uint32(26).fork()).ldelim(),t.floatData!=null&&t.floatData.length){o.uint32(34).fork();for(var i=0;i<t.floatData.length;++i)o.float(t.floatData[i]);o.ldelim()}if(t.int32Data!=null&&t.int32Data.length){o.uint32(42).fork();for(var i=0;i<t.int32Data.length;++i)o.int32(t.int32Data[i]);o.ldelim()}if(t.stringData!=null&&t.stringData.length)for(var i=0;i<t.stringData.length;++i)o.uint32(50).bytes(t.stringData[i]);if(t.int64Data!=null&&t.int64Data.length){o.uint32(58).fork();for(var i=0;i<t.int64Data.length;++i)o.int64(t.int64Data[i]);o.ldelim()}if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(66).string(t.name),t.rawData!=null&&Object.hasOwnProperty.call(t,"rawData")&&o.uint32(74).bytes(t.rawData),t.doubleData!=null&&t.doubleData.length){o.uint32(82).fork();for(var i=0;i<t.doubleData.length;++i)o.double(t.doubleData[i]);o.ldelim()}if(t.uint64Data!=null&&t.uint64Data.length){o.uint32(90).fork();for(var i=0;i<t.uint64Data.length;++i)o.uint64(t.uint64Data[i]);o.ldelim()}if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(98).string(t.docString),t.externalData!=null&&t.externalData.length)for(var i=0;i<t.externalData.length;++i)T.onnx.StringStringEntryProto.encode(t.externalData[i],o.uint32(106).fork()).ldelim();return t.dataLocation!=null&&Object.hasOwnProperty.call(t,"dataLocation")&&o.uint32(112).int32(t.dataLocation),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof q||(t=q.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.TensorProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{if(u.dims&&u.dims.length||(u.dims=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.dims.push(t.int64());else u.dims.push(t.int64());break}case 2:{u.dataType=t.int32();break}case 3:{u.segment=T.onnx.TensorProto.Segment.decode(t,t.uint32());break}case 4:{if(u.floatData&&u.floatData.length||(u.floatData=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.floatData.push(t.float());else u.floatData.push(t.float());break}case 5:{if(u.int32Data&&u.int32Data.length||(u.int32Data=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.int32Data.push(t.int32());else u.int32Data.push(t.int32());break}case 6:{u.stringData&&u.stringData.length||(u.stringData=[]),u.stringData.push(t.bytes());break}case 7:{if(u.int64Data&&u.int64Data.length||(u.int64Data=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.int64Data.push(t.int64());else u.int64Data.push(t.int64());break}case 8:{u.name=t.string();break}case 12:{u.docString=t.string();break}case 9:{u.rawData=t.bytes();break}case 13:{u.externalData&&u.externalData.length||(u.externalData=[]),u.externalData.push(T.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 14:{u.dataLocation=t.int32();break}case 10:{if(u.doubleData&&u.doubleData.length||(u.doubleData=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.doubleData.push(t.double());else u.doubleData.push(t.double());break}case 11:{if(u.uint64Data&&u.uint64Data.length||(u.uint64Data=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.uint64Data.push(t.uint64());else u.uint64Data.push(t.uint64());break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof q||(t=new q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.dims!=null&&t.hasOwnProperty("dims")){if(!Array.isArray(t.dims))return"dims: array expected";for(var o=0;o<t.dims.length;++o)if(!_.isInteger(t.dims[o])&&!(t.dims[o]&&_.isInteger(t.dims[o].low)&&_.isInteger(t.dims[o].high)))return"dims: integer|Long[] expected"}if(t.dataType!=null&&t.hasOwnProperty("dataType")&&!_.isInteger(t.dataType))return"dataType: integer expected";if(t.segment!=null&&t.hasOwnProperty("segment")){var i=T.onnx.TensorProto.Segment.verify(t.segment);if(i)return"segment."+i}if(t.floatData!=null&&t.hasOwnProperty("floatData")){if(!Array.isArray(t.floatData))return"floatData: array expected";for(var o=0;o<t.floatData.length;++o)if(typeof t.floatData[o]!="number")return"floatData: number[] expected"}if(t.int32Data!=null&&t.hasOwnProperty("int32Data")){if(!Array.isArray(t.int32Data))return"int32Data: array expected";for(var o=0;o<t.int32Data.length;++o)if(!_.isInteger(t.int32Data[o]))return"int32Data: integer[] expected"}if(t.stringData!=null&&t.hasOwnProperty("stringData")){if(!Array.isArray(t.stringData))return"stringData: array expected";for(var o=0;o<t.stringData.length;++o)if(!(t.stringData[o]&&typeof t.stringData[o].length=="number"||_.isString(t.stringData[o])))return"stringData: buffer[] expected"}if(t.int64Data!=null&&t.hasOwnProperty("int64Data")){if(!Array.isArray(t.int64Data))return"int64Data: array expected";for(var o=0;o<t.int64Data.length;++o)if(!_.isInteger(t.int64Data[o])&&!(t.int64Data[o]&&_.isInteger(t.int64Data[o].low)&&_.isInteger(t.int64Data[o].high)))return"int64Data: integer|Long[] expected"}if(t.name!=null&&t.hasOwnProperty("name")&&!_.isString(t.name))return"name: string expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!_.isString(t.docString))return"docString: string expected";if(t.rawData!=null&&t.hasOwnProperty("rawData")&&!(t.rawData&&typeof t.rawData.length=="number"||_.isString(t.rawData)))return"rawData: buffer expected";if(t.externalData!=null&&t.hasOwnProperty("externalData")){if(!Array.isArray(t.externalData))return"externalData: array expected";for(var o=0;o<t.externalData.length;++o){var i=T.onnx.StringStringEntryProto.verify(t.externalData[o]);if(i)return"externalData."+i}}if(t.dataLocation!=null&&t.hasOwnProperty("dataLocation"))switch(t.dataLocation){default:return"dataLocation: enum value expected";case 0:case 1:break}if(t.doubleData!=null&&t.hasOwnProperty("doubleData")){if(!Array.isArray(t.doubleData))return"doubleData: array expected";for(var o=0;o<t.doubleData.length;++o)if(typeof t.doubleData[o]!="number")return"doubleData: number[] expected"}if(t.uint64Data!=null&&t.hasOwnProperty("uint64Data")){if(!Array.isArray(t.uint64Data))return"uint64Data: array expected";for(var o=0;o<t.uint64Data.length;++o)if(!_.isInteger(t.uint64Data[o])&&!(t.uint64Data[o]&&_.isInteger(t.uint64Data[o].low)&&_.isInteger(t.uint64Data[o].high)))return"uint64Data: integer|Long[] expected"}return null},e.fromObject=function(t){if(t instanceof T.onnx.TensorProto)return t;var o=new T.onnx.TensorProto;if(t.dims){if(!Array.isArray(t.dims))throw TypeError(".onnx.TensorProto.dims: array expected");o.dims=[];for(var i=0;i<t.dims.length;++i)_.Long?(o.dims[i]=_.Long.fromValue(t.dims[i])).unsigned=!1:typeof t.dims[i]=="string"?o.dims[i]=parseInt(t.dims[i],10):typeof t.dims[i]=="number"?o.dims[i]=t.dims[i]:typeof t.dims[i]=="object"&&(o.dims[i]=new _.LongBits(t.dims[i].low>>>0,t.dims[i].high>>>0).toNumber())}if(t.dataType!=null&&(o.dataType=t.dataType|0),t.segment!=null){if(typeof t.segment!="object")throw TypeError(".onnx.TensorProto.segment: object expected");o.segment=T.onnx.TensorProto.Segment.fromObject(t.segment)}if(t.floatData){if(!Array.isArray(t.floatData))throw TypeError(".onnx.TensorProto.floatData: array expected");o.floatData=[];for(var i=0;i<t.floatData.length;++i)o.floatData[i]=Number(t.floatData[i])}if(t.int32Data){if(!Array.isArray(t.int32Data))throw TypeError(".onnx.TensorProto.int32Data: array expected");o.int32Data=[];for(var i=0;i<t.int32Data.length;++i)o.int32Data[i]=t.int32Data[i]|0}if(t.stringData){if(!Array.isArray(t.stringData))throw TypeError(".onnx.TensorProto.stringData: array expected");o.stringData=[];for(var i=0;i<t.stringData.length;++i)typeof t.stringData[i]=="string"?_.base64.decode(t.stringData[i],o.stringData[i]=_.newBuffer(_.base64.length(t.stringData[i])),0):t.stringData[i].length>=0&&(o.stringData[i]=t.stringData[i])}if(t.int64Data){if(!Array.isArray(t.int64Data))throw TypeError(".onnx.TensorProto.int64Data: array expected");o.int64Data=[];for(var i=0;i<t.int64Data.length;++i)_.Long?(o.int64Data[i]=_.Long.fromValue(t.int64Data[i])).unsigned=!1:typeof t.int64Data[i]=="string"?o.int64Data[i]=parseInt(t.int64Data[i],10):typeof t.int64Data[i]=="number"?o.int64Data[i]=t.int64Data[i]:typeof t.int64Data[i]=="object"&&(o.int64Data[i]=new _.LongBits(t.int64Data[i].low>>>0,t.int64Data[i].high>>>0).toNumber())}if(t.name!=null&&(o.name=String(t.name)),t.docString!=null&&(o.docString=String(t.docString)),t.rawData!=null&&(typeof t.rawData=="string"?_.base64.decode(t.rawData,o.rawData=_.newBuffer(_.base64.length(t.rawData)),0):t.rawData.length>=0&&(o.rawData=t.rawData)),t.externalData){if(!Array.isArray(t.externalData))throw TypeError(".onnx.TensorProto.externalData: array expected");o.externalData=[];for(var i=0;i<t.externalData.length;++i){if(typeof t.externalData[i]!="object")throw TypeError(".onnx.TensorProto.externalData: object expected");o.externalData[i]=T.onnx.StringStringEntryProto.fromObject(t.externalData[i])}}switch(t.dataLocation){default:if(typeof t.dataLocation=="number"){o.dataLocation=t.dataLocation;break}break;case"DEFAULT":case 0:o.dataLocation=0;break;case"EXTERNAL":case 1:o.dataLocation=1;break}if(t.doubleData){if(!Array.isArray(t.doubleData))throw TypeError(".onnx.TensorProto.doubleData: array expected");o.doubleData=[];for(var i=0;i<t.doubleData.length;++i)o.doubleData[i]=Number(t.doubleData[i])}if(t.uint64Data){if(!Array.isArray(t.uint64Data))throw TypeError(".onnx.TensorProto.uint64Data: array expected");o.uint64Data=[];for(var i=0;i<t.uint64Data.length;++i)_.Long?(o.uint64Data[i]=_.Long.fromValue(t.uint64Data[i])).unsigned=!0:typeof t.uint64Data[i]=="string"?o.uint64Data[i]=parseInt(t.uint64Data[i],10):typeof t.uint64Data[i]=="number"?o.uint64Data[i]=t.uint64Data[i]:typeof t.uint64Data[i]=="object"&&(o.uint64Data[i]=new _.LongBits(t.uint64Data[i].low>>>0,t.uint64Data[i].high>>>0).toNumber(!0))}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dims=[],i.floatData=[],i.int32Data=[],i.stringData=[],i.int64Data=[],i.doubleData=[],i.uint64Data=[],i.externalData=[]),o.defaults&&(i.dataType=0,i.segment=null,i.name="",o.bytes===String?i.rawData="":(i.rawData=[],o.bytes!==Array&&(i.rawData=_.newBuffer(i.rawData))),i.docString="",i.dataLocation=o.enums===String?"DEFAULT":0),t.dims&&t.dims.length){i.dims=[];for(var u=0;u<t.dims.length;++u)typeof t.dims[u]=="number"?i.dims[u]=o.longs===String?String(t.dims[u]):t.dims[u]:i.dims[u]=o.longs===String?_.Long.prototype.toString.call(t.dims[u]):o.longs===Number?new _.LongBits(t.dims[u].low>>>0,t.dims[u].high>>>0).toNumber():t.dims[u]}if(t.dataType!=null&&t.hasOwnProperty("dataType")&&(i.dataType=t.dataType),t.segment!=null&&t.hasOwnProperty("segment")&&(i.segment=T.onnx.TensorProto.Segment.toObject(t.segment,o)),t.floatData&&t.floatData.length){i.floatData=[];for(var u=0;u<t.floatData.length;++u)i.floatData[u]=o.json&&!isFinite(t.floatData[u])?String(t.floatData[u]):t.floatData[u]}if(t.int32Data&&t.int32Data.length){i.int32Data=[];for(var u=0;u<t.int32Data.length;++u)i.int32Data[u]=t.int32Data[u]}if(t.stringData&&t.stringData.length){i.stringData=[];for(var u=0;u<t.stringData.length;++u)i.stringData[u]=o.bytes===String?_.base64.encode(t.stringData[u],0,t.stringData[u].length):o.bytes===Array?Array.prototype.slice.call(t.stringData[u]):t.stringData[u]}if(t.int64Data&&t.int64Data.length){i.int64Data=[];for(var u=0;u<t.int64Data.length;++u)typeof t.int64Data[u]=="number"?i.int64Data[u]=o.longs===String?String(t.int64Data[u]):t.int64Data[u]:i.int64Data[u]=o.longs===String?_.Long.prototype.toString.call(t.int64Data[u]):o.longs===Number?new _.LongBits(t.int64Data[u].low>>>0,t.int64Data[u].high>>>0).toNumber():t.int64Data[u]}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.rawData!=null&&t.hasOwnProperty("rawData")&&(i.rawData=o.bytes===String?_.base64.encode(t.rawData,0,t.rawData.length):o.bytes===Array?Array.prototype.slice.call(t.rawData):t.rawData),t.doubleData&&t.doubleData.length){i.doubleData=[];for(var u=0;u<t.doubleData.length;++u)i.doubleData[u]=o.json&&!isFinite(t.doubleData[u])?String(t.doubleData[u]):t.doubleData[u]}if(t.uint64Data&&t.uint64Data.length){i.uint64Data=[];for(var u=0;u<t.uint64Data.length;++u)typeof t.uint64Data[u]=="number"?i.uint64Data[u]=o.longs===String?String(t.uint64Data[u]):t.uint64Data[u]:i.uint64Data[u]=o.longs===String?_.Long.prototype.toString.call(t.uint64Data[u]):o.longs===Number?new _.LongBits(t.uint64Data[u].low>>>0,t.uint64Data[u].high>>>0).toNumber(!0):t.uint64Data[u]}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.externalData&&t.externalData.length){i.externalData=[];for(var u=0;u<t.externalData.length;++u)i.externalData[u]=T.onnx.StringStringEntryProto.toObject(t.externalData[u],o)}return t.dataLocation!=null&&t.hasOwnProperty("dataLocation")&&(i.dataLocation=o.enums===String?T.onnx.TensorProto.DataLocation[t.dataLocation]===void 0?t.dataLocation:T.onnx.TensorProto.DataLocation[t.dataLocation]:t.dataLocation),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorProto"},e.DataType=function(){var r={},t=Object.create(r);return t[r[0]="UNDEFINED"]=0,t[r[1]="FLOAT"]=1,t[r[2]="UINT8"]=2,t[r[3]="INT8"]=3,t[r[4]="UINT16"]=4,t[r[5]="INT16"]=5,t[r[6]="INT32"]=6,t[r[7]="INT64"]=7,t[r[8]="STRING"]=8,t[r[9]="BOOL"]=9,t[r[10]="FLOAT16"]=10,t[r[11]="DOUBLE"]=11,t[r[12]="UINT32"]=12,t[r[13]="UINT64"]=13,t[r[14]="COMPLEX64"]=14,t[r[15]="COMPLEX128"]=15,t[r[16]="BFLOAT16"]=16,t[r[17]="FLOAT8E4M3FN"]=17,t[r[18]="FLOAT8E4M3FNUZ"]=18,t[r[19]="FLOAT8E5M2"]=19,t[r[20]="FLOAT8E5M2FNUZ"]=20,t}(),e.Segment=function(){function r(t){if(t)for(var o=Object.keys(t),i=0;i<o.length;++i)t[o[i]]!=null&&(this[o[i]]=t[o[i]])}return r.prototype.begin=_.Long?_.Long.fromBits(0,0,!1):0,r.prototype.end=_.Long?_.Long.fromBits(0,0,!1):0,r.create=function(o){return new r(o)},r.encode=function(o,i){return i||(i=rt.create()),o.begin!=null&&Object.hasOwnProperty.call(o,"begin")&&i.uint32(8).int64(o.begin),o.end!=null&&Object.hasOwnProperty.call(o,"end")&&i.uint32(16).int64(o.end),i},r.encodeDelimited=function(o,i){return this.encode(o,i).ldelim()},r.decode=function(o,i){o instanceof q||(o=q.create(o));for(var u=i===void 0?o.len:o.pos+i,a=new T.onnx.TensorProto.Segment;o.pos<u;){var s=o.uint32();switch(s>>>3){case 1:{a.begin=o.int64();break}case 2:{a.end=o.int64();break}default:o.skipType(s&7);break}}return a},r.decodeDelimited=function(o){return o instanceof q||(o=new q(o)),this.decode(o,o.uint32())},r.verify=function(o){return typeof o!="object"||o===null?"object expected":o.begin!=null&&o.hasOwnProperty("begin")&&!_.isInteger(o.begin)&&!(o.begin&&_.isInteger(o.begin.low)&&_.isInteger(o.begin.high))?"begin: integer|Long expected":o.end!=null&&o.hasOwnProperty("end")&&!_.isInteger(o.end)&&!(o.end&&_.isInteger(o.end.low)&&_.isInteger(o.end.high))?"end: integer|Long expected":null},r.fromObject=function(o){if(o instanceof T.onnx.TensorProto.Segment)return o;var i=new T.onnx.TensorProto.Segment;return o.begin!=null&&(_.Long?(i.begin=_.Long.fromValue(o.begin)).unsigned=!1:typeof o.begin=="string"?i.begin=parseInt(o.begin,10):typeof o.begin=="number"?i.begin=o.begin:typeof o.begin=="object"&&(i.begin=new _.LongBits(o.begin.low>>>0,o.begin.high>>>0).toNumber())),o.end!=null&&(_.Long?(i.end=_.Long.fromValue(o.end)).unsigned=!1:typeof o.end=="string"?i.end=parseInt(o.end,10):typeof o.end=="number"?i.end=o.end:typeof o.end=="object"&&(i.end=new _.LongBits(o.end.low>>>0,o.end.high>>>0).toNumber())),i},r.toObject=function(o,i){i||(i={});var u={};if(i.defaults){if(_.Long){var a=new _.Long(0,0,!1);u.begin=i.longs===String?a.toString():i.longs===Number?a.toNumber():a}else u.begin=i.longs===String?"0":0;if(_.Long){var a=new _.Long(0,0,!1);u.end=i.longs===String?a.toString():i.longs===Number?a.toNumber():a}else u.end=i.longs===String?"0":0}return o.begin!=null&&o.hasOwnProperty("begin")&&(typeof o.begin=="number"?u.begin=i.longs===String?String(o.begin):o.begin:u.begin=i.longs===String?_.Long.prototype.toString.call(o.begin):i.longs===Number?new _.LongBits(o.begin.low>>>0,o.begin.high>>>0).toNumber():o.begin),o.end!=null&&o.hasOwnProperty("end")&&(typeof o.end=="number"?u.end=i.longs===String?String(o.end):o.end:u.end=i.longs===String?_.Long.prototype.toString.call(o.end):i.longs===Number?new _.LongBits(o.end.low>>>0,o.end.high>>>0).toNumber():o.end),u},r.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},r.getTypeUrl=function(o){return o===void 0&&(o="type.googleapis.com"),o+"/onnx.TensorProto.Segment"},r}(),e.DataLocation=function(){var r={},t=Object.create(r);return t[r[0]="DEFAULT"]=0,t[r[1]="EXTERNAL"]=1,t}(),e}(),n.SparseTensorProto=function(){function e(r){if(this.dims=[],r)for(var t=Object.keys(r),o=0;o<t.length;++o)r[t[o]]!=null&&(this[t[o]]=r[t[o]])}return e.prototype.values=null,e.prototype.indices=null,e.prototype.dims=_.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=rt.create()),t.values!=null&&Object.hasOwnProperty.call(t,"values")&&T.onnx.TensorProto.encode(t.values,o.uint32(10).fork()).ldelim(),t.indices!=null&&Object.hasOwnProperty.call(t,"indices")&&T.onnx.TensorProto.encode(t.indices,o.uint32(18).fork()).ldelim(),t.dims!=null&&t.dims.length){o.uint32(26).fork();for(var i=0;i<t.dims.length;++i)o.int64(t.dims[i]);o.ldelim()}return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof q||(t=q.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.SparseTensorProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.values=T.onnx.TensorProto.decode(t,t.uint32());break}case 2:{u.indices=T.onnx.TensorProto.decode(t,t.uint32());break}case 3:{if(u.dims&&u.dims.length||(u.dims=[]),(a&7)===2)for(var s=t.uint32()+t.pos;t.pos<s;)u.dims.push(t.int64());else u.dims.push(t.int64());break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof q||(t=new q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.values!=null&&t.hasOwnProperty("values")){var o=T.onnx.TensorProto.verify(t.values);if(o)return"values."+o}if(t.indices!=null&&t.hasOwnProperty("indices")){var o=T.onnx.TensorProto.verify(t.indices);if(o)return"indices."+o}if(t.dims!=null&&t.hasOwnProperty("dims")){if(!Array.isArray(t.dims))return"dims: array expected";for(var i=0;i<t.dims.length;++i)if(!_.isInteger(t.dims[i])&&!(t.dims[i]&&_.isInteger(t.dims[i].low)&&_.isInteger(t.dims[i].high)))return"dims: integer|Long[] expected"}return null},e.fromObject=function(t){if(t instanceof T.onnx.SparseTensorProto)return t;var o=new T.onnx.SparseTensorProto;if(t.values!=null){if(typeof t.values!="object")throw TypeError(".onnx.SparseTensorProto.values: object expected");o.values=T.onnx.TensorProto.fromObject(t.values)}if(t.indices!=null){if(typeof t.indices!="object")throw TypeError(".onnx.SparseTensorProto.indices: object expected");o.indices=T.onnx.TensorProto.fromObject(t.indices)}if(t.dims){if(!Array.isArray(t.dims))throw TypeError(".onnx.SparseTensorProto.dims: array expected");o.dims=[];for(var i=0;i<t.dims.length;++i)_.Long?(o.dims[i]=_.Long.fromValue(t.dims[i])).unsigned=!1:typeof t.dims[i]=="string"?o.dims[i]=parseInt(t.dims[i],10):typeof t.dims[i]=="number"?o.dims[i]=t.dims[i]:typeof t.dims[i]=="object"&&(o.dims[i]=new _.LongBits(t.dims[i].low>>>0,t.dims[i].high>>>0).toNumber())}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dims=[]),o.defaults&&(i.values=null,i.indices=null),t.values!=null&&t.hasOwnProperty("values")&&(i.values=T.onnx.TensorProto.toObject(t.values,o)),t.indices!=null&&t.hasOwnProperty("indices")&&(i.indices=T.onnx.TensorProto.toObject(t.indices,o)),t.dims&&t.dims.length){i.dims=[];for(var u=0;u<t.dims.length;++u)typeof t.dims[u]=="number"?i.dims[u]=o.longs===String?String(t.dims[u]):t.dims[u]:i.dims[u]=o.longs===String?_.Long.prototype.toString.call(t.dims[u]):o.longs===Number?new _.LongBits(t.dims[u].low>>>0,t.dims[u].high>>>0).toNumber():t.dims[u]}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.SparseTensorProto"},e}(),n.TensorShapeProto=function(){function e(r){if(this.dim=[],r)for(var t=Object.keys(r),o=0;o<t.length;++o)r[t[o]]!=null&&(this[t[o]]=r[t[o]])}return e.prototype.dim=_.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=rt.create()),t.dim!=null&&t.dim.length)for(var i=0;i<t.dim.length;++i)T.onnx.TensorShapeProto.Dimension.encode(t.dim[i],o.uint32(10).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof q||(t=q.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.TensorShapeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.dim&&u.dim.length||(u.dim=[]),u.dim.push(T.onnx.TensorShapeProto.Dimension.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof q||(t=new q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.dim!=null&&t.hasOwnProperty("dim")){if(!Array.isArray(t.dim))return"dim: array expected";for(var o=0;o<t.dim.length;++o){var i=T.onnx.TensorShapeProto.Dimension.verify(t.dim[o]);if(i)return"dim."+i}}return null},e.fromObject=function(t){if(t instanceof T.onnx.TensorShapeProto)return t;var o=new T.onnx.TensorShapeProto;if(t.dim){if(!Array.isArray(t.dim))throw TypeError(".onnx.TensorShapeProto.dim: array expected");o.dim=[];for(var i=0;i<t.dim.length;++i){if(typeof t.dim[i]!="object")throw TypeError(".onnx.TensorShapeProto.dim: object expected");o.dim[i]=T.onnx.TensorShapeProto.Dimension.fromObject(t.dim[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dim=[]),t.dim&&t.dim.length){i.dim=[];for(var u=0;u<t.dim.length;++u)i.dim[u]=T.onnx.TensorShapeProto.Dimension.toObject(t.dim[u],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorShapeProto"},e.Dimension=function(){function r(o){if(o)for(var i=Object.keys(o),u=0;u<i.length;++u)o[i[u]]!=null&&(this[i[u]]=o[i[u]])}r.prototype.dimValue=null,r.prototype.dimParam=null,r.prototype.denotation="";var t;return Object.defineProperty(r.prototype,"value",{get:_.oneOfGetter(t=["dimValue","dimParam"]),set:_.oneOfSetter(t)}),r.create=function(i){return new r(i)},r.encode=function(i,u){return u||(u=rt.create()),i.dimValue!=null&&Object.hasOwnProperty.call(i,"dimValue")&&u.uint32(8).int64(i.dimValue),i.dimParam!=null&&Object.hasOwnProperty.call(i,"dimParam")&&u.uint32(18).string(i.dimParam),i.denotation!=null&&Object.hasOwnProperty.call(i,"denotation")&&u.uint32(26).string(i.denotation),u},r.encodeDelimited=function(i,u){return this.encode(i,u).ldelim()},r.decode=function(i,u){i instanceof q||(i=q.create(i));for(var a=u===void 0?i.len:i.pos+u,s=new T.onnx.TensorShapeProto.Dimension;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{s.dimValue=i.int64();break}case 2:{s.dimParam=i.string();break}case 3:{s.denotation=i.string();break}default:i.skipType(l&7);break}}return s},r.decodeDelimited=function(i){return i instanceof q||(i=new q(i)),this.decode(i,i.uint32())},r.verify=function(i){if(typeof i!="object"||i===null)return"object expected";var u={};if(i.dimValue!=null&&i.hasOwnProperty("dimValue")&&(u.value=1,!_.isInteger(i.dimValue)&&!(i.dimValue&&_.isInteger(i.dimValue.low)&&_.isInteger(i.dimValue.high))))return"dimValue: integer|Long expected";if(i.dimParam!=null&&i.hasOwnProperty("dimParam")){if(u.value===1)return"value: multiple values";if(u.value=1,!_.isString(i.dimParam))return"dimParam: string expected"}return i.denotation!=null&&i.hasOwnProperty("denotation")&&!_.isString(i.denotation)?"denotation: string expected":null},r.fromObject=function(i){if(i instanceof T.onnx.TensorShapeProto.Dimension)return i;var u=new T.onnx.TensorShapeProto.Dimension;return i.dimValue!=null&&(_.Long?(u.dimValue=_.Long.fromValue(i.dimValue)).unsigned=!1:typeof i.dimValue=="string"?u.dimValue=parseInt(i.dimValue,10):typeof i.dimValue=="number"?u.dimValue=i.dimValue:typeof i.dimValue=="object"&&(u.dimValue=new _.LongBits(i.dimValue.low>>>0,i.dimValue.high>>>0).toNumber())),i.dimParam!=null&&(u.dimParam=String(i.dimParam)),i.denotation!=null&&(u.denotation=String(i.denotation)),u},r.toObject=function(i,u){u||(u={});var a={};return u.defaults&&(a.denotation=""),i.dimValue!=null&&i.hasOwnProperty("dimValue")&&(typeof i.dimValue=="number"?a.dimValue=u.longs===String?String(i.dimValue):i.dimValue:a.dimValue=u.longs===String?_.Long.prototype.toString.call(i.dimValue):u.longs===Number?new _.LongBits(i.dimValue.low>>>0,i.dimValue.high>>>0).toNumber():i.dimValue,u.oneofs&&(a.value="dimValue")),i.dimParam!=null&&i.hasOwnProperty("dimParam")&&(a.dimParam=i.dimParam,u.oneofs&&(a.value="dimParam")),i.denotation!=null&&i.hasOwnProperty("denotation")&&(a.denotation=i.denotation),a},r.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},r.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TensorShapeProto.Dimension"},r}(),e}(),n.TypeProto=function(){function e(t){if(t)for(var o=Object.keys(t),i=0;i<o.length;++i)t[o[i]]!=null&&(this[o[i]]=t[o[i]])}e.prototype.tensorType=null,e.prototype.sequenceType=null,e.prototype.mapType=null,e.prototype.optionalType=null,e.prototype.sparseTensorType=null,e.prototype.denotation="";var r;return Object.defineProperty(e.prototype,"value",{get:_.oneOfGetter(r=["tensorType","sequenceType","mapType","optionalType","sparseTensorType"]),set:_.oneOfSetter(r)}),e.create=function(o){return new e(o)},e.encode=function(o,i){return i||(i=rt.create()),o.tensorType!=null&&Object.hasOwnProperty.call(o,"tensorType")&&T.onnx.TypeProto.Tensor.encode(o.tensorType,i.uint32(10).fork()).ldelim(),o.sequenceType!=null&&Object.hasOwnProperty.call(o,"sequenceType")&&T.onnx.TypeProto.Sequence.encode(o.sequenceType,i.uint32(34).fork()).ldelim(),o.mapType!=null&&Object.hasOwnProperty.call(o,"mapType")&&T.onnx.TypeProto.Map.encode(o.mapType,i.uint32(42).fork()).ldelim(),o.denotation!=null&&Object.hasOwnProperty.call(o,"denotation")&&i.uint32(50).string(o.denotation),o.sparseTensorType!=null&&Object.hasOwnProperty.call(o,"sparseTensorType")&&T.onnx.TypeProto.SparseTensor.encode(o.sparseTensorType,i.uint32(66).fork()).ldelim(),o.optionalType!=null&&Object.hasOwnProperty.call(o,"optionalType")&&T.onnx.TypeProto.Optional.encode(o.optionalType,i.uint32(74).fork()).ldelim(),i},e.encodeDelimited=function(o,i){return this.encode(o,i).ldelim()},e.decode=function(o,i){o instanceof q||(o=q.create(o));for(var u=i===void 0?o.len:o.pos+i,a=new T.onnx.TypeProto;o.pos<u;){var s=o.uint32();switch(s>>>3){case 1:{a.tensorType=T.onnx.TypeProto.Tensor.decode(o,o.uint32());break}case 4:{a.sequenceType=T.onnx.TypeProto.Sequence.decode(o,o.uint32());break}case 5:{a.mapType=T.onnx.TypeProto.Map.decode(o,o.uint32());break}case 9:{a.optionalType=T.onnx.TypeProto.Optional.decode(o,o.uint32());break}case 8:{a.sparseTensorType=T.onnx.TypeProto.SparseTensor.decode(o,o.uint32());break}case 6:{a.denotation=o.string();break}default:o.skipType(s&7);break}}return a},e.decodeDelimited=function(o){return o instanceof q||(o=new q(o)),this.decode(o,o.uint32())},e.verify=function(o){if(typeof o!="object"||o===null)return"object expected";var i={};if(o.tensorType!=null&&o.hasOwnProperty("tensorType")){i.value=1;{var u=T.onnx.TypeProto.Tensor.verify(o.tensorType);if(u)return"tensorType."+u}}if(o.sequenceType!=null&&o.hasOwnProperty("sequenceType")){if(i.value===1)return"value: multiple values";i.value=1;{var u=T.onnx.TypeProto.Sequence.verify(o.sequenceType);if(u)return"sequenceType."+u}}if(o.mapType!=null&&o.hasOwnProperty("mapType")){if(i.value===1)return"value: multiple values";i.value=1;{var u=T.onnx.TypeProto.Map.verify(o.mapType);if(u)return"mapType."+u}}if(o.optionalType!=null&&o.hasOwnProperty("optionalType")){if(i.value===1)return"value: multiple values";i.value=1;{var u=T.onnx.TypeProto.Optional.verify(o.optionalType);if(u)return"optionalType."+u}}if(o.sparseTensorType!=null&&o.hasOwnProperty("sparseTensorType")){if(i.value===1)return"value: multiple values";i.value=1;{var u=T.onnx.TypeProto.SparseTensor.verify(o.sparseTensorType);if(u)return"sparseTensorType."+u}}return o.denotation!=null&&o.hasOwnProperty("denotation")&&!_.isString(o.denotation)?"denotation: string expected":null},e.fromObject=function(o){if(o instanceof T.onnx.TypeProto)return o;var i=new T.onnx.TypeProto;if(o.tensorType!=null){if(typeof o.tensorType!="object")throw TypeError(".onnx.TypeProto.tensorType: object expected");i.tensorType=T.onnx.TypeProto.Tensor.fromObject(o.tensorType)}if(o.sequenceType!=null){if(typeof o.sequenceType!="object")throw TypeError(".onnx.TypeProto.sequenceType: object expected");i.sequenceType=T.onnx.TypeProto.Sequence.fromObject(o.sequenceType)}if(o.mapType!=null){if(typeof o.mapType!="object")throw TypeError(".onnx.TypeProto.mapType: object expected");i.mapType=T.onnx.TypeProto.Map.fromObject(o.mapType)}if(o.optionalType!=null){if(typeof o.optionalType!="object")throw TypeError(".onnx.TypeProto.optionalType: object expected");i.optionalType=T.onnx.TypeProto.Optional.fromObject(o.optionalType)}if(o.sparseTensorType!=null){if(typeof o.sparseTensorType!="object")throw TypeError(".onnx.TypeProto.sparseTensorType: object expected");i.sparseTensorType=T.onnx.TypeProto.SparseTensor.fromObject(o.sparseTensorType)}return o.denotation!=null&&(i.denotation=String(o.denotation)),i},e.toObject=function(o,i){i||(i={});var u={};return i.defaults&&(u.denotation=""),o.tensorType!=null&&o.hasOwnProperty("tensorType")&&(u.tensorType=T.onnx.TypeProto.Tensor.toObject(o.tensorType,i),i.oneofs&&(u.value="tensorType")),o.sequenceType!=null&&o.hasOwnProperty("sequenceType")&&(u.sequenceType=T.onnx.TypeProto.Sequence.toObject(o.sequenceType,i),i.oneofs&&(u.value="sequenceType")),o.mapType!=null&&o.hasOwnProperty("mapType")&&(u.mapType=T.onnx.TypeProto.Map.toObject(o.mapType,i),i.oneofs&&(u.value="mapType")),o.denotation!=null&&o.hasOwnProperty("denotation")&&(u.denotation=o.denotation),o.sparseTensorType!=null&&o.hasOwnProperty("sparseTensorType")&&(u.sparseTensorType=T.onnx.TypeProto.SparseTensor.toObject(o.sparseTensorType,i),i.oneofs&&(u.value="sparseTensorType")),o.optionalType!=null&&o.hasOwnProperty("optionalType")&&(u.optionalType=T.onnx.TypeProto.Optional.toObject(o.optionalType,i),i.oneofs&&(u.value="optionalType")),u},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(o){return o===void 0&&(o="type.googleapis.com"),o+"/onnx.TypeProto"},e.Tensor=function(){function t(o){if(o)for(var i=Object.keys(o),u=0;u<i.length;++u)o[i[u]]!=null&&(this[i[u]]=o[i[u]])}return t.prototype.elemType=0,t.prototype.shape=null,t.create=function(i){return new t(i)},t.encode=function(i,u){return u||(u=rt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&u.uint32(8).int32(i.elemType),i.shape!=null&&Object.hasOwnProperty.call(i,"shape")&&T.onnx.TensorShapeProto.encode(i.shape,u.uint32(18).fork()).ldelim(),u},t.encodeDelimited=function(i,u){return this.encode(i,u).ldelim()},t.decode=function(i,u){i instanceof q||(i=q.create(i));for(var a=u===void 0?i.len:i.pos+u,s=new T.onnx.TypeProto.Tensor;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{s.elemType=i.int32();break}case 2:{s.shape=T.onnx.TensorShapeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return s},t.decodeDelimited=function(i){return i instanceof q||(i=new q(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")&&!_.isInteger(i.elemType))return"elemType: integer expected";if(i.shape!=null&&i.hasOwnProperty("shape")){var u=T.onnx.TensorShapeProto.verify(i.shape);if(u)return"shape."+u}return null},t.fromObject=function(i){if(i instanceof T.onnx.TypeProto.Tensor)return i;var u=new T.onnx.TypeProto.Tensor;if(i.elemType!=null&&(u.elemType=i.elemType|0),i.shape!=null){if(typeof i.shape!="object")throw TypeError(".onnx.TypeProto.Tensor.shape: object expected");u.shape=T.onnx.TensorShapeProto.fromObject(i.shape)}return u},t.toObject=function(i,u){u||(u={});var a={};return u.defaults&&(a.elemType=0,a.shape=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=i.elemType),i.shape!=null&&i.hasOwnProperty("shape")&&(a.shape=T.onnx.TensorShapeProto.toObject(i.shape,u)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Tensor"},t}(),e.Sequence=function(){function t(o){if(o)for(var i=Object.keys(o),u=0;u<i.length;++u)o[i[u]]!=null&&(this[i[u]]=o[i[u]])}return t.prototype.elemType=null,t.create=function(i){return new t(i)},t.encode=function(i,u){return u||(u=rt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&T.onnx.TypeProto.encode(i.elemType,u.uint32(10).fork()).ldelim(),u},t.encodeDelimited=function(i,u){return this.encode(i,u).ldelim()},t.decode=function(i,u){i instanceof q||(i=q.create(i));for(var a=u===void 0?i.len:i.pos+u,s=new T.onnx.TypeProto.Sequence;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{s.elemType=T.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return s},t.decodeDelimited=function(i){return i instanceof q||(i=new q(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")){var u=T.onnx.TypeProto.verify(i.elemType);if(u)return"elemType."+u}return null},t.fromObject=function(i){if(i instanceof T.onnx.TypeProto.Sequence)return i;var u=new T.onnx.TypeProto.Sequence;if(i.elemType!=null){if(typeof i.elemType!="object")throw TypeError(".onnx.TypeProto.Sequence.elemType: object expected");u.elemType=T.onnx.TypeProto.fromObject(i.elemType)}return u},t.toObject=function(i,u){u||(u={});var a={};return u.defaults&&(a.elemType=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=T.onnx.TypeProto.toObject(i.elemType,u)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Sequence"},t}(),e.Map=function(){function t(o){if(o)for(var i=Object.keys(o),u=0;u<i.length;++u)o[i[u]]!=null&&(this[i[u]]=o[i[u]])}return t.prototype.keyType=0,t.prototype.valueType=null,t.create=function(i){return new t(i)},t.encode=function(i,u){return u||(u=rt.create()),i.keyType!=null&&Object.hasOwnProperty.call(i,"keyType")&&u.uint32(8).int32(i.keyType),i.valueType!=null&&Object.hasOwnProperty.call(i,"valueType")&&T.onnx.TypeProto.encode(i.valueType,u.uint32(18).fork()).ldelim(),u},t.encodeDelimited=function(i,u){return this.encode(i,u).ldelim()},t.decode=function(i,u){i instanceof q||(i=q.create(i));for(var a=u===void 0?i.len:i.pos+u,s=new T.onnx.TypeProto.Map;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{s.keyType=i.int32();break}case 2:{s.valueType=T.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return s},t.decodeDelimited=function(i){return i instanceof q||(i=new q(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.keyType!=null&&i.hasOwnProperty("keyType")&&!_.isInteger(i.keyType))return"keyType: integer expected";if(i.valueType!=null&&i.hasOwnProperty("valueType")){var u=T.onnx.TypeProto.verify(i.valueType);if(u)return"valueType."+u}return null},t.fromObject=function(i){if(i instanceof T.onnx.TypeProto.Map)return i;var u=new T.onnx.TypeProto.Map;if(i.keyType!=null&&(u.keyType=i.keyType|0),i.valueType!=null){if(typeof i.valueType!="object")throw TypeError(".onnx.TypeProto.Map.valueType: object expected");u.valueType=T.onnx.TypeProto.fromObject(i.valueType)}return u},t.toObject=function(i,u){u||(u={});var a={};return u.defaults&&(a.keyType=0,a.valueType=null),i.keyType!=null&&i.hasOwnProperty("keyType")&&(a.keyType=i.keyType),i.valueType!=null&&i.hasOwnProperty("valueType")&&(a.valueType=T.onnx.TypeProto.toObject(i.valueType,u)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Map"},t}(),e.Optional=function(){function t(o){if(o)for(var i=Object.keys(o),u=0;u<i.length;++u)o[i[u]]!=null&&(this[i[u]]=o[i[u]])}return t.prototype.elemType=null,t.create=function(i){return new t(i)},t.encode=function(i,u){return u||(u=rt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&T.onnx.TypeProto.encode(i.elemType,u.uint32(10).fork()).ldelim(),u},t.encodeDelimited=function(i,u){return this.encode(i,u).ldelim()},t.decode=function(i,u){i instanceof q||(i=q.create(i));for(var a=u===void 0?i.len:i.pos+u,s=new T.onnx.TypeProto.Optional;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{s.elemType=T.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return s},t.decodeDelimited=function(i){return i instanceof q||(i=new q(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")){var u=T.onnx.TypeProto.verify(i.elemType);if(u)return"elemType."+u}return null},t.fromObject=function(i){if(i instanceof T.onnx.TypeProto.Optional)return i;var u=new T.onnx.TypeProto.Optional;if(i.elemType!=null){if(typeof i.elemType!="object")throw TypeError(".onnx.TypeProto.Optional.elemType: object expected");u.elemType=T.onnx.TypeProto.fromObject(i.elemType)}return u},t.toObject=function(i,u){u||(u={});var a={};return u.defaults&&(a.elemType=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=T.onnx.TypeProto.toObject(i.elemType,u)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Optional"},t}(),e.SparseTensor=function(){function t(o){if(o)for(var i=Object.keys(o),u=0;u<i.length;++u)o[i[u]]!=null&&(this[i[u]]=o[i[u]])}return t.prototype.elemType=0,t.prototype.shape=null,t.create=function(i){return new t(i)},t.encode=function(i,u){return u||(u=rt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&u.uint32(8).int32(i.elemType),i.shape!=null&&Object.hasOwnProperty.call(i,"shape")&&T.onnx.TensorShapeProto.encode(i.shape,u.uint32(18).fork()).ldelim(),u},t.encodeDelimited=function(i,u){return this.encode(i,u).ldelim()},t.decode=function(i,u){i instanceof q||(i=q.create(i));for(var a=u===void 0?i.len:i.pos+u,s=new T.onnx.TypeProto.SparseTensor;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{s.elemType=i.int32();break}case 2:{s.shape=T.onnx.TensorShapeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return s},t.decodeDelimited=function(i){return i instanceof q||(i=new q(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")&&!_.isInteger(i.elemType))return"elemType: integer expected";if(i.shape!=null&&i.hasOwnProperty("shape")){var u=T.onnx.TensorShapeProto.verify(i.shape);if(u)return"shape."+u}return null},t.fromObject=function(i){if(i instanceof T.onnx.TypeProto.SparseTensor)return i;var u=new T.onnx.TypeProto.SparseTensor;if(i.elemType!=null&&(u.elemType=i.elemType|0),i.shape!=null){if(typeof i.shape!="object")throw TypeError(".onnx.TypeProto.SparseTensor.shape: object expected");u.shape=T.onnx.TensorShapeProto.fromObject(i.shape)}return u},t.toObject=function(i,u){u||(u={});var a={};return u.defaults&&(a.elemType=0,a.shape=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=i.elemType),i.shape!=null&&i.hasOwnProperty("shape")&&(a.shape=T.onnx.TensorShapeProto.toObject(i.shape,u)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.SparseTensor"},t}(),e}(),n.OperatorSetIdProto=function(){function e(r){if(r)for(var t=Object.keys(r),o=0;o<t.length;++o)r[t[o]]!=null&&(this[t[o]]=r[t[o]])}return e.prototype.domain="",e.prototype.version=_.Long?_.Long.fromBits(0,0,!1):0,e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=rt.create()),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(10).string(t.domain),t.version!=null&&Object.hasOwnProperty.call(t,"version")&&o.uint32(16).int64(t.version),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof q||(t=q.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.OperatorSetIdProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.domain=t.string();break}case 2:{u.version=t.int64();break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof q||(t=new q(t)),this.decode(t,t.uint32())},e.verify=function(t){return typeof t!="object"||t===null?"object expected":t.domain!=null&&t.hasOwnProperty("domain")&&!_.isString(t.domain)?"domain: string expected":t.version!=null&&t.hasOwnProperty("version")&&!_.isInteger(t.version)&&!(t.version&&_.isInteger(t.version.low)&&_.isInteger(t.version.high))?"version: integer|Long expected":null},e.fromObject=function(t){if(t instanceof T.onnx.OperatorSetIdProto)return t;var o=new T.onnx.OperatorSetIdProto;return t.domain!=null&&(o.domain=String(t.domain)),t.version!=null&&(_.Long?(o.version=_.Long.fromValue(t.version)).unsigned=!1:typeof t.version=="string"?o.version=parseInt(t.version,10):typeof t.version=="number"?o.version=t.version:typeof t.version=="object"&&(o.version=new _.LongBits(t.version.low>>>0,t.version.high>>>0).toNumber())),o},e.toObject=function(t,o){o||(o={});var i={};if(o.defaults)if(i.domain="",_.Long){var u=new _.Long(0,0,!1);i.version=o.longs===String?u.toString():o.longs===Number?u.toNumber():u}else i.version=o.longs===String?"0":0;return t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.version!=null&&t.hasOwnProperty("version")&&(typeof t.version=="number"?i.version=o.longs===String?String(t.version):t.version:i.version=o.longs===String?_.Long.prototype.toString.call(t.version):o.longs===Number?new _.LongBits(t.version.low>>>0,t.version.high>>>0).toNumber():t.version),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.OperatorSetIdProto"},e}(),n.OperatorStatus=function(){var e={},r=Object.create(e);return r[e[0]="EXPERIMENTAL"]=0,r[e[1]="STABLE"]=1,r}(),n.FunctionProto=function(){function e(r){if(this.input=[],this.output=[],this.attribute=[],this.attributeProto=[],this.node=[],this.opsetImport=[],r)for(var t=Object.keys(r),o=0;o<t.length;++o)r[t[o]]!=null&&(this[t[o]]=r[t[o]])}return e.prototype.name="",e.prototype.input=_.emptyArray,e.prototype.output=_.emptyArray,e.prototype.attribute=_.emptyArray,e.prototype.attributeProto=_.emptyArray,e.prototype.node=_.emptyArray,e.prototype.docString="",e.prototype.opsetImport=_.emptyArray,e.prototype.domain="",e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=rt.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)o.uint32(34).string(t.input[i]);if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)o.uint32(42).string(t.output[i]);if(t.attribute!=null&&t.attribute.length)for(var i=0;i<t.attribute.length;++i)o.uint32(50).string(t.attribute[i]);if(t.node!=null&&t.node.length)for(var i=0;i<t.node.length;++i)T.onnx.NodeProto.encode(t.node[i],o.uint32(58).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(66).string(t.docString),t.opsetImport!=null&&t.opsetImport.length)for(var i=0;i<t.opsetImport.length;++i)T.onnx.OperatorSetIdProto.encode(t.opsetImport[i],o.uint32(74).fork()).ldelim();if(t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(82).string(t.domain),t.attributeProto!=null&&t.attributeProto.length)for(var i=0;i<t.attributeProto.length;++i)T.onnx.AttributeProto.encode(t.attributeProto[i],o.uint32(90).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof q||(t=q.create(t));for(var i=o===void 0?t.len:t.pos+o,u=new T.onnx.FunctionProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{u.name=t.string();break}case 4:{u.input&&u.input.length||(u.input=[]),u.input.push(t.string());break}case 5:{u.output&&u.output.length||(u.output=[]),u.output.push(t.string());break}case 6:{u.attribute&&u.attribute.length||(u.attribute=[]),u.attribute.push(t.string());break}case 11:{u.attributeProto&&u.attributeProto.length||(u.attributeProto=[]),u.attributeProto.push(T.onnx.AttributeProto.decode(t,t.uint32()));break}case 7:{u.node&&u.node.length||(u.node=[]),u.node.push(T.onnx.NodeProto.decode(t,t.uint32()));break}case 8:{u.docString=t.string();break}case 9:{u.opsetImport&&u.opsetImport.length||(u.opsetImport=[]),u.opsetImport.push(T.onnx.OperatorSetIdProto.decode(t,t.uint32()));break}case 10:{u.domain=t.string();break}default:t.skipType(a&7);break}}return u},e.decodeDelimited=function(t){return t instanceof q||(t=new q(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!_.isString(t.name))return"name: string expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o)if(!_.isString(t.input[o]))return"input: string[] expected"}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o)if(!_.isString(t.output[o]))return"output: string[] expected"}if(t.attribute!=null&&t.hasOwnProperty("attribute")){if(!Array.isArray(t.attribute))return"attribute: array expected";for(var o=0;o<t.attribute.length;++o)if(!_.isString(t.attribute[o]))return"attribute: string[] expected"}if(t.attributeProto!=null&&t.hasOwnProperty("attributeProto")){if(!Array.isArray(t.attributeProto))return"attributeProto: array expected";for(var o=0;o<t.attributeProto.length;++o){var i=T.onnx.AttributeProto.verify(t.attributeProto[o]);if(i)return"attributeProto."+i}}if(t.node!=null&&t.hasOwnProperty("node")){if(!Array.isArray(t.node))return"node: array expected";for(var o=0;o<t.node.length;++o){var i=T.onnx.NodeProto.verify(t.node[o]);if(i)return"node."+i}}if(t.docString!=null&&t.hasOwnProperty("docString")&&!_.isString(t.docString))return"docString: string expected";if(t.opsetImport!=null&&t.hasOwnProperty("opsetImport")){if(!Array.isArray(t.opsetImport))return"opsetImport: array expected";for(var o=0;o<t.opsetImport.length;++o){var i=T.onnx.OperatorSetIdProto.verify(t.opsetImport[o]);if(i)return"opsetImport."+i}}return t.domain!=null&&t.hasOwnProperty("domain")&&!_.isString(t.domain)?"domain: string expected":null},e.fromObject=function(t){if(t instanceof T.onnx.FunctionProto)return t;var o=new T.onnx.FunctionProto;if(t.name!=null&&(o.name=String(t.name)),t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.FunctionProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i)o.input[i]=String(t.input[i])}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.FunctionProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i)o.output[i]=String(t.output[i])}if(t.attribute){if(!Array.isArray(t.attribute))throw TypeError(".onnx.FunctionProto.attribute: array expected");o.attribute=[];for(var i=0;i<t.attribute.length;++i)o.attribute[i]=String(t.attribute[i])}if(t.attributeProto){if(!Array.isArray(t.attributeProto))throw TypeError(".onnx.FunctionProto.attributeProto: array expected");o.attributeProto=[];for(var i=0;i<t.attributeProto.length;++i){if(typeof t.attributeProto[i]!="object")throw TypeError(".onnx.FunctionProto.attributeProto: object expected");o.attributeProto[i]=T.onnx.AttributeProto.fromObject(t.attributeProto[i])}}if(t.node){if(!Array.isArray(t.node))throw TypeError(".onnx.FunctionProto.node: array expected");o.node=[];for(var i=0;i<t.node.length;++i){if(typeof t.node[i]!="object")throw TypeError(".onnx.FunctionProto.node: object expected");o.node[i]=T.onnx.NodeProto.fromObject(t.node[i])}}if(t.docString!=null&&(o.docString=String(t.docString)),t.opsetImport){if(!Array.isArray(t.opsetImport))throw TypeError(".onnx.FunctionProto.opsetImport: array expected");o.opsetImport=[];for(var i=0;i<t.opsetImport.length;++i){if(typeof t.opsetImport[i]!="object")throw TypeError(".onnx.FunctionProto.opsetImport: object expected");o.opsetImport[i]=T.onnx.OperatorSetIdProto.fromObject(t.opsetImport[i])}}return t.domain!=null&&(o.domain=String(t.domain)),o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.input=[],i.output=[],i.attribute=[],i.node=[],i.opsetImport=[],i.attributeProto=[]),o.defaults&&(i.name="",i.docString="",i.domain=""),t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.input&&t.input.length){i.input=[];for(var u=0;u<t.input.length;++u)i.input[u]=t.input[u]}if(t.output&&t.output.length){i.output=[];for(var u=0;u<t.output.length;++u)i.output[u]=t.output[u]}if(t.attribute&&t.attribute.length){i.attribute=[];for(var u=0;u<t.attribute.length;++u)i.attribute[u]=t.attribute[u]}if(t.node&&t.node.length){i.node=[];for(var u=0;u<t.node.length;++u)i.node[u]=T.onnx.NodeProto.toObject(t.node[u],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.opsetImport&&t.opsetImport.length){i.opsetImport=[];for(var u=0;u<t.opsetImport.length;++u)i.opsetImport[u]=T.onnx.OperatorSetIdProto.toObject(t.opsetImport[u],o)}if(t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.attributeProto&&t.attributeProto.length){i.attributeProto=[];for(var u=0;u<t.attributeProto.length;++u)i.attributeProto[u]=T.onnx.AttributeProto.toObject(t.attributeProto[u],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,qe.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.FunctionProto"},e}(),n}();bc.exports=T});function mn(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function Xn(n){return new TextDecoder().decode(n)}var Ke,Vr,ka,wt,Jo,mt,It,re,Yn,Ur,Hr,jr,Le=P(()=>{"use strict";jo();va();Ke=cn(hn());qr();Vr=class{static arraysEqual(e,r){if(e.length!==r.length)return!1;for(let t=0;t<e.length;t++)if(e[t]!==r[t])return!1;return!0}},ka=class{static preprocessInputShapes(e,r){let t=e.length===1?[1,e[0]]:e,o=r.length===1?[r[0],1]:r;return[t,o]}static postprocessOutputShape(e,r,t){r===1&&e.splice(e.length-2,1),t===1&&e.pop()}static calcMatMulShape(e,r){return e[1]!==r[0]?void 0:[e[0],r[1]]}},wt=class n{static calcShape(e,r,t=!1){let o=e.length,i=r.length;if(o===0)return r;if(i===0)return e;let u=Math.max(e.length,r.length),a=new Array(u);if(t){if(o<2||i<2)return;let s=ka.calcMatMulShape([e[o-2],e[o-1]],[r[i-2],r[i-1]]);if(s===void 0)return;[a[u-2],a[u-1]]=s}for(let s=t?3:1;s<=u;s++){let l=o-s<0?1:e[o-s],c=i-s<0?1:r[i-s];if(l!==c&&l>1&&c>1)return;a[u-s]=Math.max(l,c)}return a}static index(e,r){let t=new Array(r.length);return n.fillIndex(e,r,t),t}static fillIndex(e,r,t){let o=e.length-r.length;for(let i=0;i<r.length;i++)t[i]=e[o+i]%r[i]}static calc(e,r,t,o,i){let u=n.calcShape(e.dims,r.dims);if(u){if(o&&!re.areEqual(u,e.dims))return;let a=re.size(u),s=o?e:new ut(u,i||e.type);if(u.length===0)s.set([],t(e.get([]),r.get([])));else{let l=new Array(u.length),c=new Array(e.dims.length),p=new Array(r.dims.length),h=0,g=0,y=!1,b=!1;e.dims.length===0&&(h=e.get([]),y=!0),r.dims.length===0&&(g=r.get([]),b=!0);let w;for(let S=0;S<a;S++){w=S;for(let O=u.length-1;O>=0;O--)l[O]=w%u[O],w=Math.floor(w/u[O]);y||(n.fillIndex(l,e.dims,c),h=e.get(c)),b||(n.fillIndex(l,r.dims,p),g=r.get(p)),s.set(l,t(h,g))}}return s}}static isValidBroadcast(e,r){let t=e.length,o=r.length;if(t>o)return!1;for(let i=1;i<=t;i++)if(e[t-i]!==1&&e[t-i]!==r[o-i])return!1;return!0}static getBroadcastDims(e,r){let t=e.length,o=[];for(let i=0;i<t;i++){let u=t-1-i,a=e[u]||1;(r[r.length-1-i]||1)>1&&a===1&&o.unshift(u)}return o}},Jo=class{static getShapeOfGemmResult(e,r,t,o,i){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let u,a,s;r?(u=e[1],a=e[0]):(u=e[0],a=e[1]);let l=-1;if(o?(s=t[0],l=1):(s=t[1],l=0),t[l]!==a)throw new Error("dimension mismatch");if(u<=0||s<=0||a<=0)throw new Error("invalid shape specified");if(i&&!wt.isValidBroadcast(i,[u,s]))throw new Error("gemm: invalid bias shape for broadcast");return[u,s,a]}},mt=class n{static tensorDataTypeFromProto(e){switch(e){case Ke.onnx.TensorProto.DataType.INT8:return"int8";case Ke.onnx.TensorProto.DataType.UINT8:return"uint8";case Ke.onnx.TensorProto.DataType.BOOL:return"bool";case Ke.onnx.TensorProto.DataType.INT16:return"int16";case Ke.onnx.TensorProto.DataType.UINT16:return"uint16";case Ke.onnx.TensorProto.DataType.INT32:return"int32";case Ke.onnx.TensorProto.DataType.UINT32:return"uint32";case Ke.onnx.TensorProto.DataType.FLOAT:return"float32";case Ke.onnx.TensorProto.DataType.DOUBLE:return"float64";case Ke.onnx.TensorProto.DataType.STRING:return"string";case Ke.onnx.TensorProto.DataType.INT64:return"int32";case Ke.onnx.TensorProto.DataType.UINT64:return"uint32";default:throw new Error(`unsupported data type: ${Ke.onnx.TensorProto.DataType[e]}`)}}static tensorDataTypeStringToEnum(e){switch(e){case"int8":return Ke.onnx.TensorProto.DataType.INT8;case"uint8":return Ke.onnx.TensorProto.DataType.UINT8;case"bool":return Ke.onnx.TensorProto.DataType.BOOL;case"int16":return Ke.onnx.TensorProto.DataType.INT16;case"uint16":return Ke.onnx.TensorProto.DataType.UINT16;case"int32":return Ke.onnx.TensorProto.DataType.INT32;case"uint32":return Ke.onnx.TensorProto.DataType.UINT32;case"float32":return Ke.onnx.TensorProto.DataType.FLOAT;case"float64":return Ke.onnx.TensorProto.DataType.DOUBLE;case"string":return Ke.onnx.TensorProto.DataType.STRING;case"int64":return Ke.onnx.TensorProto.DataType.INT64;case"uint64":return Ke.onnx.TensorProto.DataType.UINT64;default:throw new Error(`unsupported data type: ${e}`)}}static tensorDimsFromProto(e){return e.map(r=>br.isLong(r)?r.toNumber():r)}static tensorValueTypeFromProto(e){return{tensorType:n.tensorDataTypeFromProto(e.elemType),shape:{dims:n.tensorDimsFromProto(e.shape.dim.map(r=>r.dimValue))}}}static tensorDimsFromORTFormat(e){let r=[];for(let t=0;t<e.dimsLength();t++)r.push(It.longToNumber(e.dims(t)));return r}static tensorAttributesFromORTFormat(e){let r=[];for(let t=0;t<e.attributesLength();t++)r.push(e.attributes(t));return r}},It=class{static longToNumber(e,r){return br.isLong(e)?e.toNumber():e instanceof C.Long?br.fromValue({low:e.low,high:e.high,unsigned:r??!1}).toNumber():e}static isLong(e){return br.isLong(e)||e instanceof C.Long}},re=class n{static size(e){return n.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,r){if(r<0||r>e.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return n.getSizeFromDimensionRange(e,r,e.length)}static sizeToDimension(e,r){if(r<0||r>e.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${e.length} dimensions.`);return n.getSizeFromDimensionRange(e,0,r)}static getSizeFromDimensionRange(e,r,t){let o=1;for(let i=r;i<t;i++){if(e[i]<=0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.");o*=e[i]}return o}static computeStrides(e){let r=e.length;if(r===0)return[];if(r===1)return[1];let t=new Array(r);t[r-1]=1,t[r-2]=e[r-1];for(let o=r-3;o>=0;--o)t[o]=t[o+1]*e[o+1];return t}static transpose(e){return e.slice().reverse()}static indicesToOffset(e,r,t){t===void 0&&(t=e.length);let o=0;for(let i=0;i<t;++i)o+=r[i]*e[i];return o}static offsetToIndices(e,r){let t=r.length;if(t===0)return[];if(t===1)return[e*r[0]];let o=new Array(r.length);for(let i=0;i<o.length-1;++i)o[i]=Math.floor(e/r[i]),e-=o[i]*r[i];return o[o.length-1]=e,o}static normalizeAxis(e,r){if(e<-r&&e>=r)throw new Error("unsupported axis for this operation.");return e<0?e+r:e}static normalizeAxes(e,r){return e.map(t=>this.normalizeAxis(t,r))}static incrementIndex(e,r,t){if(r.length===0||e.length===0)throw new Error("Index incrementing unsupported for scalar Tensor");if(t===void 0)t=r.length;else if(t<=0||t>r.length)throw new Error("Incorrect axis to increment on");for(let o=t-1;o>=0&&(e[o]++,!(e[o]<r[o]));--o)e[o]=0}static calculateReshapedDims(e,r){if(r.length===0){if(e.length===0||n.size(e)===1)return[];throw new Error("cannot reshape to a scalar Tensor")}let t=r.length,o=new Array(t),i=-1,u=1;for(let s=0;s<t;s++){if(r[s]<-1)throw new Error("a dimension in shape hints cannot be less than -1");if(r[s]===-1){if(i!==-1)throw new Error("at most one dimension in shape hints can be -1");i=s}else{if(r[s]===0){if(s>=e.length)throw new Error("the dimension with value zero exceeds the dimension size of the input tensor");o[s]=e[s]}else o[s]=r[s];u*=o[s]}}let a=n.size(e);if(i!==-1){if(a%u!==0)throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${e}] Output shape: [${r}]`);o[i]=a/u}else if(u!==a)throw new Error("reshapedDims and originalDims don't have matching sizes");return o}static sortBasedOnPerm(e,r){return r?r.map(t=>e[t]):e.slice().reverse()}static padShape(e,r){let t=e.length;return e.map((o,i)=>o+r[i]+r[i+t])}static areEqual(e,r){return e.length!==r.length?!1:e.every((t,o)=>t===r[o])}static validateDimsAndCalcSize(e){if(e.length>6)throw new TypeError("Only rank 0 to 6 is supported for tensor shape.");let r=1;for(let t of e){if(!Number.isInteger(t))throw new TypeError(`Invalid shape: ${t} is not an integer`);if(t<0||t>2147483647)throw new TypeError(`Invalid shape: length ${t} is not allowed`);r*=t}return r}static flattenShape(e,r){r<0&&(r+=e.length);let t=e.reduce((u,a)=>u*a,1),o=e.slice(r).reduce((u,a)=>u*a,1);return[t/o,o]}static squeezeShape(e,r){let t=new Array;r=n.normalizeAxes(r,e.length);for(let o=0;o<e.length;o++){let i=r.indexOf(o)>=0;if(i&&e[o]!==1)throw new Error("squeeze an axis of size different than 1");(r.length===0&&e[o]>1||r.length>0&&!i)&&t.push(e[o])}return t}static unsqueezeShape(e,r){let t=new Array(e.length+r.length);t.fill(0);for(let i=0;i<r.length;i++){let u=n.normalizeAxis(r[i],t.length);if(u>=t.length)throw new Error("'axes' has an out of range axis");if(t[u]!==0)throw new Error("'axes' has a duplicate axis");t[u]=1}let o=0;for(let i=0;i<t.length;i++)t[i]===0&&(t[i]=e[o++]);if(o!==e.length)throw new Error("the unsqueezed dimension could not be established");return t}},Yn=class n{static splitShape(e,r,t,o){if(t.length===0){if(!o)throw new Error("need to know number of outputs when the 'split' attribute is not specified");n.determineSplit(e[r],o,t)}let i=[],u=[0];for(let a=0;a<t.length;++a){a!==0&&u.push(u[a-1]+t[a-1]);let s=e.slice();s[r]=t[a],i.push(s)}return[i,u]}static determineSplit(e,r,t){if(e%r!==0)throw new Error("cannot split tensor to equal sized parts");for(let o=0;o<r;++o)t.push(e/r)}},Ur=class n{static adjustPoolAttributes(e,r,t,o,i,u){if(!e&&t.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let a=0;a<r.length-2;a++)a>=t.length?t.push(r[a+2]):t[a]=r[a+2];for(let a=0;a<t.length;a++)if(a<o.length){if(o[a]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let a=0;a<t.length;a++)if(a<i.length){if(i[a]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let a=0;a<t.length*2;a++)if(a<u.length){if(u[a]<0)throw new Error("pad should be greater than or equal to 1")}else u.push(0);for(let a=0;a<t.length;a++){if(t[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(u[a]>=t[a]||u[a+t.length]>=t[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,r,t,o,i,u){if(u){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let a=0;a<e.length-2;a++)n.adjustPadAndReturnShape(e[a+2],r[a],t[a],o[a],i,a,a+e.length-2,u)}}static computePoolOutputShape(e,r,t,o,i,u,a){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let s=[r[0],r[1]];return n.computeShapeHelper(e,r,s,t,o,i,u,a),s}static computeConvOutputShape(e,r,t,o,i,u,a){if(e.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let s=[e[0],r[0]];return n.computeShapeHelper(!1,e,s,t,o,i,u,a),s}static computeShapeHelper(e,r,t,o,i,u,a,s){if(e)for(let l=0;l<r.length-2;l++)t.push(1);else for(let l=0;l<r.length-2;l++)t.push(n.adjustPadAndReturnShape(r[l+2],o[l],i[l],u[l],a,l,l+r.length-2,s))}static adjustPadAndReturnShape(e,r,t,o,i,u,a,s){let l=t*(o-1)+1;if(s&&s!=="NOTSET")switch(s){case"VALID":return i[u]=0,i[a]=0,Math.floor((e-l)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(t!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let p=((e+r-1)/r-1)*r+o-e;return i[u]=Math.floor(s==="SAME_LOWER"?(p+1)/2:p/2),i[a]=p-i[u],Math.floor((e+p-o)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+i[u]+i[a]-l)/r+1)}},Hr=-34028234663852886e22,jr=34028234663852886e22});function Ry(n){switch(n){case"bool":case"int8":case"uint8":return 1;case"int16":case"uint16":return 2;case"int32":case"uint32":case"float32":return 4;case"float64":return 8;default:throw new Error(`cannot calculate sizeof() on type ${n}`)}}function yc(n){switch(n){case Te.onnx.TensorProto.DataType.UINT8:case Te.onnx.TensorProto.DataType.INT8:case Te.onnx.TensorProto.DataType.BOOL:return 1;case Te.onnx.TensorProto.DataType.UINT16:case Te.onnx.TensorProto.DataType.INT16:return 2;case Te.onnx.TensorProto.DataType.FLOAT:case Te.onnx.TensorProto.DataType.INT32:case Te.onnx.TensorProto.DataType.UINT32:return 4;case Te.onnx.TensorProto.DataType.INT64:case Te.onnx.TensorProto.DataType.DOUBLE:case Te.onnx.TensorProto.DataType.UINT64:return 8;default:throw new Error(`cannot calculate sizeof() on type ${Te.onnx.TensorProto.DataType[n]}`)}}function My(n,e){return new(wc(e))(n)}function wc(n){switch(n){case"bool":case"uint8":return Uint8Array;case"int8":return Int8Array;case"int16":return Int16Array;case"uint16":return Uint16Array;case"int32":return Int32Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"float32":return Float32Array;case"float64":return Float64Array;default:throw new Error("unspecified error")}}function Ra(n,e){if(e===Te.onnx.TensorProto.DataType.INT64||e===Ba.TensorDataType.INT64){if(n.greaterThanOrEqual(2147483648)||n.lessThan(-2147483648))throw new TypeError("int64 is not supported")}else if(e===Te.onnx.TensorProto.DataType.UINT32||e===Ba.TensorDataType.UINT32||e===Te.onnx.TensorProto.DataType.UINT64||e===Ba.TensorDataType.UINT64){if(n.greaterThanOrEqual(4294967296)||n.lessThan(0))throw new TypeError("uint64 is not supported")}else throw new TypeError(`not a LONG type: ${Te.onnx.TensorProto.DataType[e]}`);return n.toNumber()}function vc(n,e,r){switch(e){case Te.onnx.TensorProto.DataType.BOOL:case Te.onnx.TensorProto.DataType.UINT8:return n.getUint8(r);case Te.onnx.TensorProto.DataType.INT8:return n.getInt8(r);case Te.onnx.TensorProto.DataType.UINT16:return n.getUint16(r,!0);case Te.onnx.TensorProto.DataType.INT16:return n.getInt16(r,!0);case Te.onnx.TensorProto.DataType.FLOAT:return n.getFloat32(r,!0);case Te.onnx.TensorProto.DataType.INT32:return n.getInt32(r,!0);case Te.onnx.TensorProto.DataType.UINT32:return n.getUint32(r,!0);case Te.onnx.TensorProto.DataType.INT64:return Ra(br.fromBits(n.getUint32(r,!0),n.getUint32(r+4,!0),!1),e);case Te.onnx.TensorProto.DataType.DOUBLE:return n.getFloat64(r,!0);case Te.onnx.TensorProto.DataType.UINT64:return Ra(br.fromBits(n.getUint32(r,!0),n.getUint32(r+4,!0),!0),e);default:throw new Error(`cannot read from DataView for type ${Te.onnx.TensorProto.DataType[e]}`)}}var xc,Te,Ba,ut,qr=P(()=>{"use strict";xc=cn(ll());va();Hn();Te=cn(hn());Le();Ba=oe.experimental.fbs,ut=class n{constructor(e,r,t,o,i,u=xc.Guid.create()){this.dims=e;this.type=r;this.dataProvider=t;this.asyncDataProvider=o;this.cache=i;this.dataId=u;this.size=re.validateDimsAndCalcSize(e);let a=this.size,s=t===void 0&&o===void 0&&i===void 0;if(i!==void 0&&i.length!==a)throw new RangeError("Input dims doesn't match data length.");if(r==="string"){if(i!==void 0&&(!Array.isArray(i)||!i.every(l=>typeof l=="string")))throw new TypeError("cache should be a string array");s&&(this.cache=new Array(a))}else{if(i!==void 0){let l=wc(r);if(!(i instanceof l))throw new TypeError(`cache should be type ${l.name}`)}if(s){let l=new ArrayBuffer(a*Ry(r));this.cache=My(l,r)}}}get data(){if(this.cache===void 0){let e=this.dataProvider(this.dataId);if(e.length!==this.size)throw new Error("Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.");this.cache=e}return this.cache}get stringData(){if(this.type!=="string")throw new TypeError("data type is not string");return this.data}get integerData(){switch(this.type){case"uint8":case"int8":case"uint16":case"int16":case"int32":case"uint32":case"bool":return this.data;default:throw new TypeError("data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)")}}get floatData(){switch(this.type){case"float32":case"float64":return this.data;default:throw new TypeError("data type is not float (float32, float64)")}}get numberData(){if(this.type!=="string")return this.data;throw new TypeError("type cannot be non-number (string)")}get(e){return this.data[re.indicesToOffset(e,this.strides)]}set(e,r){this.data[re.indicesToOffset(e,this.strides)]=r}async getData(){return this.cache===void 0&&(this.cache=await this.asyncDataProvider(this.dataId)),this.cache}get strides(){return this._strides||(this._strides=re.computeStrides(this.dims)),this._strides}static fromProto(e){if(!e)throw new Error("cannot construct Value from an empty tensor");let r=mt.tensorDataTypeFromProto(e.dataType),t=mt.tensorDimsFromProto(e.dims),o=new n(t,r);if(r==="string")e.stringData.forEach((i,u)=>{o.data[u]=Xn(i)});else if(e.rawData&&typeof e.rawData.byteLength=="number"&&e.rawData.byteLength>0){let i=o.data,u=new DataView(e.rawData.buffer,e.rawData.byteOffset,e.rawData.byteLength),a=yc(e.dataType),s=e.rawData.byteLength/a;if(e.rawData.byteLength%a!==0)throw new Error("invalid buffer length");if(i.length!==s)throw new Error("buffer length mismatch");for(let l=0;l<s;l++){let c=vc(u,e.dataType,l*a);i[l]=c}}else{let i;switch(e.dataType){case Te.onnx.TensorProto.DataType.FLOAT:i=e.floatData;break;case Te.onnx.TensorProto.DataType.INT32:case Te.onnx.TensorProto.DataType.INT16:case Te.onnx.TensorProto.DataType.UINT16:case Te.onnx.TensorProto.DataType.INT8:case Te.onnx.TensorProto.DataType.UINT8:case Te.onnx.TensorProto.DataType.BOOL:i=e.int32Data;break;case Te.onnx.TensorProto.DataType.INT64:i=e.int64Data;break;case Te.onnx.TensorProto.DataType.DOUBLE:i=e.doubleData;break;case Te.onnx.TensorProto.DataType.UINT32:case Te.onnx.TensorProto.DataType.UINT64:i=e.uint64Data;break;default:throw new Error("unspecific error")}if(i==null)throw new Error("failed to populate data from a tensorproto value");let u=o.data;if(u.length!==i.length)throw new Error("array length mismatch");for(let a=0;a<i.length;a++){let s=i[a];br.isLong(s)?u[a]=Ra(s,e.dataType):u[a]=s}}return o}static fromData(e,r,t){return new n(r,t,void 0,void 0,e)}static fromOrtTensor(e){if(!e)throw new Error("cannot construct Value from an empty tensor");let r=mt.tensorDimsFromORTFormat(e),t=mt.tensorDataTypeFromProto(e.dataType()),o=new n(r,t);if(t==="string")for(let i=0;i<e.stringDataLength();i++)o.data[i]=e.stringData(i);else if(e.rawDataArray()&&typeof e.rawDataLength()=="number"&&e.rawDataLength()>0){let i=o.data,u=new DataView(e.rawDataArray().buffer,e.rawDataArray().byteOffset,e.rawDataLength()),a=yc(e.dataType()),s=e.rawDataLength()/a;if(e.rawDataLength()%a!==0)throw new Error("invalid buffer length");if(i.length!==s)throw new Error("buffer length mismatch");for(let l=0;l<s;l++){let c=vc(u,e.dataType(),l*a);i[l]=c}}return o}}});function se(n){return n===1?Ly:Ny}function Tc(n){let e=se(n);return`${e.version}
      precision highp float;
      ${e.attribute} vec3 position;
      ${e.attribute} vec2 textureCoord;

      ${e.varyingVertex} vec2 TexCoords;

      void main()
      {
          gl_Position = vec4(position, 1.0);
          TexCoords = textureCoord;
      }`}function $c(n){let e=se(n);return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFrag} vec2 TexCoords;
    ${e.outputDeclaration}
    const vec2 halfCR = vec2(0.5, 0.5);

    // Custom vector types to handle higher dimenalities.
    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    `}function Sc(n,e){let r=se(n);return`
  void main() {
    int indices[${e}];
    toVec(TexCoords, indices);
    vec4 result = vec4(process(indices));
    ${r.output} = result;
  }
  `}var Ly,Ny,Je=P(()=>{"use strict";Ly={version:"",attribute:"attribute",varyingVertex:"varying",varyingFrag:"varying",texture2D:"texture2D",output:"gl_FragColor",outputDeclaration:""},Ny={version:"#version 300 es",attribute:"in",varyingVertex:"out",varyingFrag:"in",texture2D:"texture",output:"outputColor",outputDeclaration:"out vec4 outputColor;"}});var Oe=P(()=>{"use strict"});async function Ma(n,e=t=>0,r){return new Promise((t,o)=>{let i=0,u=()=>{if(n()){t();return}i++;let a=e(i);if(r!=null&&i>=r){o();return}setTimeout(u,a)};u()})}function Zo(n){return mn(typeof n<"u"&&n.length!==0,()=>"empty string found for sampler name"),"get"+n.charAt(0).toUpperCase()+n.slice(1)}function Ic(n){return mn(typeof n<"u"&&n.length!==0,()=>"empty string found for sampler name"),"get"+n.charAt(0).toUpperCase()+n.slice(1)+"AtOutCoords"}function gn(n,e){let r=JSON.parse(JSON.stringify(n));return r=e,r}function bn(n,e){return e.map(r=>n[r]).join(", ")}function Tt(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function Xt(n=6){return["x","y","z","w","u","v"].slice(0,n)}var ir=P(()=>{"use strict";Le()});function zy(n,e){return Xt(e).map(r=>`${n}.${r}`)}function yn(n,e){return e===1?[n]:zy(n,e)}function ar(){return`
    float getChannel(vec4 frag, int dim) {
      int modCoord = imod(dim, 2);
      return modCoord == 0 ? frag.r : frag.g;
    }

    float getChannel(vec4 frag, vec2 innerDims) {
      vec2 modCoord = mod(innerDims, 2.);
      return modCoord.x == 0. ?
        (modCoord.y == 0. ? frag.r : frag.g) :
        (modCoord.y == 0. ? frag.b : frag.a);
    }
  `}var Kr=P(()=>{"use strict";ir()});function Gy(n,e,r){if(n===0)return"false";if(n===1)return`rc > ${e[0]}`;let t="";for(let o=n-2;o<n;o++)t+=`${r[o]} >= ${e[o-n+2]}`,o<n-1&&(t+="||");return t}function Wy(n,e){let r=n.length;if(r===0)return"getA(), 0, 0, 0";if(r===1)return`getA(rc),
            rc + 1 >= ${n[0]} ? 0. : getA(rc + 1),
            0, 0`;let t="r, c",o="r, cp1",i="rp1, c",u="rp1, cp1",a="";if(r>2)for(let s=0;s<r-2;++s)a=a+`${e[s]},`;return`getA(${a}${t}),
          rEdge ? 0. : getA(${a}${i}),
          cEdge ? 0. : getA(${a}${o}),
          rEdge || cEdge ? 0. : getA(${a}${u})`}function Vy(n,e,r,t){return n===0||n===1?"":`
    int r = ${e[n-2]};
    int c = ${e[n-1]};
    int rp1 = ${e[n-2]} + 1;
    int cp1 = ${e[n-1]} + 1;
    bool rEdge = rp1 >= ${t};
    bool cEdge = cp1 >= ${r};
    `}var _c,Fy,Ac,Oc=P(()=>{"use strict";Je();Oe();ir();Kr();_c={name:"pack",inputNames:["A"],inputTypes:[1]},Fy=(n,e)=>{let r=se(n.session.backend.glContext.version),t=e.dims,o=t.length,i=e.dims.length,u=Tt(i),a=yn("rc",i),s=Vy(i,a,t[t.length-2],t[t.length-1]),l;o===0?l=[1,1]:o===1?l=[t[0],1]:l=[t[i-1],t[i-2]];let c=Gy(i,l,a),p=Wy(t,a),h=`
        void main() {
          ${u} rc = getOutputCoords();

          if(${c}) {
            ${r.output} = vec4(0);
          } else {
            ${s}

            ${r.output} = vec4(${p});
          }
        }
      `;return{..._c,hasMain:!0,output:{dims:e.dims,type:e.type,textureType:2},shaderSource:h}},Ac=(n,e)=>({..._c,get:()=>Fy(n,e)})});function La(n){if(n.length===0)return[1,1,1];let e=1;for(let r=0;r<n.length-2;++r)e*=n[r];return[e,n.length>1?n[n.length-2]:1,n[n.length-1]]}function Cc(n,e){let r=!1;return n.length===0||e.length===0?r=!0:n.length<2||e.length<2?r=n[n.length-1]===e[e.length-1]:r=n[n.length-1]===e[e.length-1]&&n[n.length-2]===e[e.length-2],r}function jy(n){let e=re.computeStrides(n),r=["b","r","c"],t="index";return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e.map((i,u)=>{let a=`int ${r[u]} = ${t} / ${i}`,s=u===e.length-1?`int ${r[u+1]} = ${t} - ${r[u]} * ${i}`:`index -= ${r[u]} * ${i}`;return`${a}; ${s};`}).join("")}
      return ivec3(b, r, c);
    }
  `}function qy(n){let e=re.computeStrides(n);return`
  int getFlattenedIndex(ivec3 coords) {
    // reverse y, z order
    return coords.x * ${e[0]} + coords.z * ${e[1]} + coords.y;
  }
`}var Uy,Hy,Ec,Pc=P(()=>{"use strict";Le();Je();Oe();Kr();Uy=n=>({name:"Reshape (packed)",inputTypes:[2],inputNames:["A"],cacheHint:`${n}`}),Hy=(n,e,r,t)=>{let o=e.dims,i=t,u="";for(let l=0;l<4;l++){let c="";switch(l){case 0:c="outputCoords = rc;";break;case 1:c="outputCoords = ivec3(rc.x, rc.y+1, rc.z);";break;case 2:c="outputCoords = ivec3(rc.x, rc.y, rc.z+1);";break;case 3:c="outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);";break;default:throw new Error}u+=`
        ${c}
        ${l>0?"if(outputCoords.y < rows && outputCoords.z < cols){":""}
          int flattenedIndex = getFlattenedIndex(outputCoords);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);
          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${l}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);

        ${l>0?"}":""}
      `}let a=se(n.session.backend.glContext.version),s=`
      ${jy(o)}
      ${qy(i)}
      ${ar()}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.0);

        ivec3 outputCoords;
        int rows = ${i[2]};
        int cols = ${i[1]};

        ${u}
        ${a.output} = result;
      }
    `;return{...r,output:{dims:i,type:e.type,textureType:2},shaderSource:s,hasMain:!0}},Ec=(n,e,r)=>{let t=Uy(r);return{...t,get:()=>Hy(n,e,t,r)}}});var Na,Dc=P(()=>{"use strict";Je();Oe();Na=(n,e)=>{let r=e.shape,t=se(n.session.backend.glContext.version),o=`
    const float FLOAT_MAX = 1.70141184e38;
    const float FLOAT_MIN = 1.17549435e-38;

    bool isNaN(float val) {
      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;
    }

    highp vec4 encodeAsUint8(highp float v) {
      if (isNaN(v)) {
        return vec4(255, 255, 255, 255);
      }

      highp float av = abs(v);

      if(av < FLOAT_MIN) {
        return vec4(0.0, 0.0, 0.0, 0.0);
      } else if(v > FLOAT_MAX) {
        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
      } else if(v < -FLOAT_MAX) {
        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
      }

      highp vec4 c = vec4(0,0,0,0);

      highp float e = floor(log2(av));
      highp float m = exp2(fract(log2(av))) - 1.0;

      c[2] = floor(128.0 * m);
      m -= c[2] / 128.0;
      c[1] = floor(32768.0 * m);
      m -= c[1] / 32768.0;
      c[0] = floor(8388608.0 * m);

      highp float ebias = e + 127.0;
      c[3] = floor(ebias / 2.0);
      ebias -= c[3] * 2.0;
      c[2] += floor(ebias) * 128.0;

      c[3] += 128.0 * step(0.0, -v);

      return c / 255.0;
    }

    void main() {
      float value = ${t.texture2D}(X,TexCoords).r;
      ${t.output} = encodeAsUint8(value);
    }`,i={name:"Uint8Encode",inputTypes:[0],inputNames:["X"],output:{dims:r,type:e.tensor.type,textureType:3},shaderSource:o,hasMain:!0};return n.executeProgram(i,[e.tensor])}});function Yy(n,e){if(n===1)return"rc";let r="";for(let t=0;t<n;t++)r+=e[t],t<n-1&&(r+=",");return r}var kc,Ky,Bc,Rc=P(()=>{"use strict";Je();Oe();ir();Kr();kc={name:"unpack",inputNames:["A"],inputTypes:[2]},Ky=(n,e)=>{let r=e.dims.length,t=yn("rc",r),o=t.slice(-2),i=Tt(r),u=ar(),s=e.dims.length===0?"":Yy(r,t),l=r<=1?"rc":`vec2(${o.join(",")})`,c=se(n.session.backend.glContext.version),p=`
    ${u}
    void main() {
      ${i} rc = getOutputCoords();

       // Sample the texture with the coords to get the rgba channel value.
       vec4 packedInput = getA(${s});

       ${c.output} = vec4(getChannel(packedInput, ${l}), 0, 0, 0);
     }
   `;return{...kc,hasMain:!0,output:{dims:e.dims,type:e.type,textureType:0},shaderSource:p}},Bc=(n,e)=>({...kc,get:()=>Ky(n,e)})});var Qo,Jn,ei,Zn=P(()=>{"use strict";Pt();Qo=class{constructor(e,r=1){if(r===1)this.internalFormat=e.R32F,this.format=e.RED,this.textureType=e.FLOAT,this.channelSize=r;else if(r===4)this.internalFormat=e.RGBA32F,this.format=e.RGBA,this.textureType=e.FLOAT,this.channelSize=r;else throw new Error(`Invalid number of channels: ${r}`)}encode(e,r){let t,o;return e.constructor!==Float32Array&&(ze.warning("Encoder","data was not of type Float32; creating new Float32Array"),o=new Float32Array(e)),r*this.channelSize>e.length?(ze.warning("Encoder","Source data too small. Allocating larger array"),o=e,t=this.allocate(r*this.channelSize),o.forEach((i,u)=>t[u]=i)):(o=e,t=o),t}allocate(e){return new Float32Array(e*4)}decode(e,r){return this.channelSize===1?e.filter((o,i)=>i%4===0).subarray(0,r):e.subarray(0,r)}},Jn=class{constructor(e,r=1,t){if(r!==1&&r!==4)throw new Error(`Invalid number of channels: ${r}`);this.internalFormat=e.RGBA,this.format=e.RGBA,this.channelSize=r,this.textureType=t||e.FLOAT}encode(e,r){let t=e;return this.channelSize===1&&(ze.verbose("Encoder","Exploding into a larger array"),t=this.allocate(r),e.forEach((o,i)=>t[i*4]=o)),t}allocate(e){return new Float32Array(e*4)}decode(e,r){return this.channelSize===1?e.filter((o,i)=>i%4===0).subarray(0,r):e.subarray(0,r)}},ei=class{constructor(e,r=1){this.channelSize=4;if(r===1)this.internalFormat=e.ALPHA,this.format=e.ALPHA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=r;else if(r===4)this.internalFormat=e.RGBA,this.format=e.RGBA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=r;else throw new Error(`Invalid number of channels: ${r}`)}encode(e,r){return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}allocate(e){return new Uint8Array(e*this.channelSize)}decode(e,r){if(e instanceof Uint8Array)return e.subarray(0,r);throw new Error(`Invalid array type: ${e.constructor}`)}}});var Qn,Mc,za,Lc=P(()=>{"use strict";Le();Oe();Qn=(n,e,r)=>{let t=r===0||r===1?1:4,o=r===2,i=r===1||r===2,u=r===4?e.length-1:void 0,a=r===4?e.map((s,l)=>l===e.length-1?s*4:s):void 0;return za(n,e,t,a,{isPacked:o,reverseWH:i,breakAxis:u})},Mc=(n,e,r)=>{let t=Qn(n,e,r);return[t.width,t.height]},za=(n,e,r=1,t,o)=>{let i=!!(o&&o.isPacked),[u,a]=n.computeTextureWH(i&&t||e,o),s=e.length,l=e.slice(0);if(s===0&&(l=[1]),r===1)t=e;else if(i){if(r!==4)throw new Error("a packed texture must be 4-channel");t=e,s>0&&(l[s-1]=Math.ceil(l[s-1]/2)),s>1&&(l[s-2]=Math.ceil(l[s-2]/2))}else if(!t)throw new Error("Unpacked shape is needed when using channels > 1");return{width:u,height:a,channels:r,isPacked:i,shape:l,strides:re.computeStrides(l),unpackedShape:t,reversedWH:o&&o.reverseWH}}});var Jy,ti,zc=P(()=>{"use strict";Pt();qr();Le();Oc();Pc();Dc();Rc();Zn();Lc();Oe();Jy=(n,e)=>{let r=e.map(o=>`${o.unpackedShape.join(",")};${o.width}x${o.height}`).join("_"),t=n.name;return n.cacheHint&&(t+="["+n.cacheHint+"]"),t+=":"+r,t},ti=class{constructor(e){this.session=e;this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map}calculateTextureWidthAndHeight(e,r){return Mc(this.session.layoutStrategy,e,r)}executeProgram(e,r){if(r.length<e.inputNames.length)throw new Error(`Input size mustn't be less than ${e.inputNames.length}.`);if(e.inputNames.length!==e.inputTypes.length)throw new Error("input names size does not match input types");let t=[];for(let l=0;l<e.inputNames.length;++l)t[l]=this.getOrCreateTextureData(r[l],e.inputTypes[l]);let o=Jy(e,t),i=this.session.programManager.getArtifact(o),u=i?i.programInfo:typeof e.get=="function"?e.get():e,a=Qn(this.session.layoutStrategy,u.output.dims,u.output.textureType),s=this.createTextureData(a,u.output.type);return i||(i=this.session.programManager.build(u,t,s),this.session.programManager.setArtifact(o,i)),this.runProgram(i,t,s),s}run(e,r){return this.executeProgram(e,r).tensor}runProgram(e,r,t){for(let o=0;o<r.length;++o)if(!!r[o].isPacked!=(e.programInfo.inputTypes[o]===2))throw new Error(`input[${o}] property packed inconsistent`);if(!!t.isPacked!=(e.programInfo.output.textureType===2))throw new Error("output property packed inconsistent");this.session.programManager.run(e,r,t)}getOrCreateTextureData(e,r){let t=this.getTextureData(e.dataId,r===2);if(!t&&(t=this.getTextureData(e.dataId,r!==2),t))return r===2?this.pack(t):this.unpack(t);if(!t){let o=Qn(this.session.layoutStrategy,e.dims,r);if(r===4){let a=e.dims;if(a.length===4){let s=[a[0],Math.ceil(a[1]*a[2]*a[3]/4)],l=Qn(this.session.layoutStrategy,s,r),c=e.numberData;if(a[1]*a[2]*a[3]%4!==0){let p=a[0],h=a[1]*a[2]*a[3],g=Math.ceil(h*1/4)*4,y=p*g;c=new Float32Array(y);for(let b=0;b<p;++b){let w=b*h,S=b*g+b%1*h;c.set(e.numberData.subarray(w,w+h),S)}}return this.createTextureData(l,e.type,c,e,1)}}if(r===2){let i=za(this.session.layoutStrategy,e.dims,1,[],{reverseWH:!0}),u=this.createTextureData(i,e.type,e.numberData,e,1);t=this.pack(u)}else t=this.createTextureData(o,e.type,e.numberData,e,1)}return t}createTextureDataFromLayoutBindTensor(e,r,t,o){return this.createTextureData(e,r,t,o,1)}createTextureData(e,r,t,o,i){ze.verbose("InferenceHandler",`Creating TextureData: layout:[${JSON.stringify(e)}]`);let u=this.session.textureManager.createTextureFromLayout(r,e,t,i);return this.createTextureDataFromTexture(e,r,u,o)}reshapeUnpacked(e,r){let t=this.getOrCreateTextureData(e,0),o={channels:t.channels,height:t.height,width:t.width,shape:r.length!==0?r:[1],strides:re.computeStrides(r),unpackedShape:r};return this.createTextureDataFromTexture(o,e.type,t.texture).tensor}reshapePacked(e,r){let t=this.getOrCreateTextureData(e,2);if(Cc(e.dims,r)){let l={channels:t.channels,height:t.height,width:t.width,shape:r.length!==0?r:[1],strides:re.computeStrides(r),unpackedShape:r,isPacked:!0};return this.createTextureDataFromTexture(l,e.type,t.texture).tensor}let o=La(e.dims),i=La(r),u=this.reshapePacked(e,o),a=this.run(Ec(this,u,i),[u]);return this.reshapePacked(a,r)}cast(e,r){let t=this.getOrCreateTextureData(e,0);return this.createTextureDataFromTexture(t,r,t.texture).tensor}createTextureDataFromTexture(e,r,t,o,i){let u={...e,tensor:o||new ut(e.unpackedShape,r,a=>this.readTexture(u),async a=>this.readTextureAsync(u),void 0,i),texture:t};return this.setTextureData(u.tensor.dataId,u,e.isPacked),u}getTextureData(e,r=!1){return this.session.isInitializer(e)?this.session.getTextureData(e,r):r?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,r,t=!1){this.session.isInitializer(e)?this.session.setTextureData(e,r,t):(t?this.packedTextureDataCache:this.unpackedTextureDataCache).set(e,r)}isTextureLayoutCached(e,r=!1){return!!this.getTextureData(e.dataId,r)}dispose(){this.session.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(e=>this.session.textureManager.releaseTexture(e)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(e=>this.session.textureManager.releaseTexture(e)),this.unpackedTextureDataCache=new Map}readTexture(e){return e.isPacked?this.readTexture(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTexture(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat(Na(this,e))}async readTextureAsync(e){return e.isPacked?this.readTextureAsync(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTextureAsync(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat(Na(this,e))}pack(e){return this.executeProgram(Ac(this,e.tensor),[e.tensor])}unpack(e){return this.executeProgram(Bc(this,e.tensor),[e.tensor])}}});var Fa,we,ft=P(()=>{"use strict";Fa=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this._cacheKey||(this._cacheKey=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this._cacheKey}},we=n=>new Fa(n)});var Fc,Gc,Wc,Zy,Qy,Vc=P(()=>{"use strict";ft();Je();Oe();Fc={name:"BatchNormalization",inputNames:["A","Scale","B","Mean","Variance"],inputTypes:[0,0,0,0,0]},Gc=(n,e,r)=>(Qy(e),[n.run({...Fc,cacheHint:r.cacheKey,get:()=>Zy(n,e,r)},e)]),Wc=n=>{let e=n.attributes.getFloat("epsilon",1e-5),r=n.attributes.getFloat("momentum",.9),t=n.attributes.getInt("spatial",1);return we({epsilon:e,momentum:r,spatial:t})},Zy=(n,e,r)=>{let t=se(n.session.backend.glContext.version),o=e[0].dims.length,[i,u]=n.calculateTextureWidthAndHeight(e[1].dims,0),a=`
  float process(int[${o}] indices) {
    vec2 position = offsetToCoords(indices[1], ${i}, ${u});
    float scale = getColorAsFloat(${t.texture2D}(Scale, position));
    float mean = getColorAsFloat(${t.texture2D}(Mean, position));
    float variance = getColorAsFloat(${t.texture2D}(Variance, position));
    float b = getColorAsFloat(${t.texture2D}(B, position));

    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${r.epsilon})) ) + b;
  }`;return{...Fc,output:{dims:e[0].dims,type:e[0].type,textureType:0},shaderSource:a}},Qy=n=>{if(!n||n.length!==5)throw new Error("BatchNormalization requires 5 inputs.");let e=n[0],r=n[1],t=n[2],o=n[3],i=n[4];if(e.dims.length<3||r.dims.length!==1||t.dims.length!==1||o.dims.length!==1||i.dims.length!==1)throw new Error("invalid input shape.");if(r.dims[0]!==e.dims[1]||t.dims[0]!==e.dims[1]||o.dims[0]!==e.dims[1]||i.dims[0]!==e.dims[1])throw new Error("invalid input shape.");if(e.type!=="float32"&&e.type!=="float64"||r.type!=="float32"&&r.type!=="float64"||t.type!=="float32"&&t.type!=="float64"||o.type!=="float32"&&o.type!=="float64"||i.type!=="float32"&&i.type!=="float64")throw new Error("invalid input tensor types.")}});var ri,Rt,Y,eo,ni,yr=P(()=>{"use strict";ri=class{constructor(e,r,t,o){this.glContext=e;this.programInfo=r;this.inputTextureLayouts=t;this.outputTextureLayout=o}},Rt=class{constructor(e){this.context=e}},Y=class{constructor(e,r){this.routineBody=e;this.dependencies=r}},eo=class{constructor(e,r,t){this.name=e;t?this.dependencies=t:this.dependencies=[],r&&(this.routineBody=r)}addDependency(e){e&&this.dependencies.push(e)}},ni=class{static returnOrderedNodes(e){if(!e||e.length===0)return[];if(e.length===1)return e;let r=new Set,t=new Set,o=new Array;return this.createOrderedNodes(e,r,t,o),o}static createOrderedNodes(e,r,t,o){for(let i=0;i<e.length;++i)this.dfsTraverse(e[i],r,t,o)}static dfsTraverse(e,r,t,o){if(!e||t.has(e.name))return;if(r.has(e.name))throw new Error("Cyclic dependency detected. Can't topologically sort routines needed for shader.");r.add(e.name);let i=e.dependencies;if(i&&i.length>0)for(let u=0;u<i.length;++u)this.dfsTraverse(i[u],r,t,o);o.push(e),t.add(e.name),r.delete(e.name)}}});function t0(){let n="add_";return{body:`
  float ${n}(float a, float b) {
    return a + b;
  }
  vec4 ${n}(vec4 v1, vec4 v2) {
    return v1 + v2;
  }
  `,name:n,type:0}}function r0(){let n="div_";return{body:`
  float ${n}(float a, float b) {
    return a / b;
  }
  vec4 ${n}(vec4 v1, vec4 v2) {
    return v1 / v2;
  }
  `,name:n,type:0}}function n0(){let n="mul_";return{body:`
  float ${n}(float a, float b) {
    return a * b;
  }
  vec4 ${n}(vec4 v1, vec4 v2) {
    return v1 * v2;
  }
  `,name:n,type:0}}function o0(){let n="sub_";return{body:`
  float ${n}(float a, float b) {
    return a - b;
  }
  vec4 ${n}(vec4 v1, vec4 v2) {
    return v1 - v2;
  }
  `,name:n,type:0}}function i0(){let n="equal_";return{body:`
  float ${n}(float a, float b) {
    return float(a == b);
  }
  vec4 ${n}(vec4 v1, vec4 v2) {
    return vec4(equal(v1, v2));
  }
  `,name:n,type:0}}function a0(){let n="greater_";return{body:`
  float ${n}(float a, float b) {
    return float(a > b);
  }
  vec4 ${n}(vec4 v1, vec4 v2) {
    return vec4( v1.r > v2.r ,
      v1.g > v2.g,
      v1.b > v2.b,
      v1.a > v2.a );
  }
  `,name:n,type:0}}function s0(){let n="less_";return{body:`
  float ${n}(float a, float b) {
    return float(a < b);
  }
  vec4 ${n}(vec4 v1, vec4 v2) {
    return vec4( v1.r < v2.r ,
                v1.g < v2.g,
                v1.b < v2.b,
                v1.a < v2.a );
  }
  `,name:n,type:0}}function u0(){let n="and_";return{body:`
  float ${n}(float a, float b) {
    return float( bool(a) && bool(b) );
  }
  vec4 ${n}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r && b2.r ,
                b1.g && b2.g,
                b1.b && b2.b,
                b1.a && b2.a );
  }
  `,name:n,type:0}}function l0(){let n="or_";return{body:`
  float ${n}(float a, float b) {
    return float( bool(a) || bool(b) );
  }
  vec4 ${n}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r || b2.r ,
                b1.g || b2.g,
                b1.b || b2.b,
                b1.a || b2.a );
  }
  `,name:n,type:0}}function c0(){let n="xor_";return{body:`
  float ${n}(float a, float b) {
    return float( bool(a) ^^ bool(b) );
  }
  vec4 ${n}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r ^^ b2.r ,
                b1.g ^^ b2.g,
                b1.b ^^ b2.b,
                b1.a ^^ b2.a );
  }
  `,name:n,type:0}}function d0(){return p0("pow")}function f0(){let n="prelu_";return{body:`
  float ${n}(float a, float b) {
    return a < 0.0 ? a * b: a;
  }
  vec4 ${n}(vec4 v1, vec4 v2) {
    return vec4(
      v1.r < 0.0 ? v1.r * v2.r: v1.r,
      v1.g < 0.0 ? v1.g * v2.g: v1.g,
      v1.b < 0.0 ? v1.b * v2.b: v1.b,
      v1.a < 0.0 ? v1.a * v2.a: v1.a
      );
  }
  `,name:n,type:0}}function p0(n){let e=`${n}_`;return{body:`
  float ${e}(float a, float b) {
    return ${n}(a, b);
  }
  vec4 ${e}(vec4 v1, vec4 v2) {
    return ${n}(v1, v2);
  }
  `,name:e,type:0}}var Mt,h0,Uc,Hc,jc,qc,Kc,Yc,Xc,Jc,Zc,Qc,ed,td,rd=P(()=>{"use strict";Le();yr();Je();Oe();Mt=(n,e,r,t=e[0].type,o)=>{let i=n.session.pack?2:0;return{name:r.name,inputNames:["A","B"],inputTypes:[i,i],cacheHint:o,get:()=>h0(n,e,r,t)}},h0=(n,e,r,t=e[0].type)=>{let o=n.session.pack?2:0,i=!re.areEqual(e[0].dims,e[1].dims),u=e[0].dims,a=n.session.pack;if(i){let c=wt.calcShape(e[0].dims,e[1].dims,!1);if(!c)throw new Error("Can't perform binary op on the given tensors");u=c;let p=u.length,h=e[0].dims.length!==0?e[0].dims.length:1,g=e[1].dims.length!==0?e[1].dims.length:1,y=e[0].dims.length!==0?"bcastIndices_A(indices, aindices);":"aindices[0] = 0;",b=e[1].dims.length!==0?"bcastIndices_B(indices, bindices);":"bindices[0] = 0;",w=se(n.session.backend.glContext.version),S=a?`
      ${r.body}
      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();
        vec4 result = ${r.name}(a, b);
        ${w.output} = result;
      }`:`
      ${r.body}
      float process(int indices[${p}]) {
        int aindices[${h}];
        int bindices[${g}];
        ${y}
        ${b}
        return ${r.name}(_A(aindices), _B(bindices));
      }`;return{name:r.name,inputNames:["A","B"],inputTypes:[o,o],output:{dims:u,type:t,textureType:o},shaderSource:S,hasMain:a}}let s=se(n.session.backend.glContext.version),l=`
    ${r.body}
    void main() {
      vec4 v1 = ${s.texture2D}(A, TexCoords);
      vec4 v2 = ${s.texture2D}(B, TexCoords);
      vec4 result = ${r.name}(v1, v2);
      ${s.output} = result;
    }
    `;return{name:r.name,inputNames:["A","B"],inputTypes:[o,o],output:{dims:e[0].dims,type:t,textureType:o},shaderSource:l,hasMain:!0}},Uc=(n,e)=>[n.run(Mt(n,e,t0()),e)],Hc=(n,e)=>[n.run(Mt(n,e,u0(),"bool"),e)],jc=(n,e)=>[n.run(Mt(n,e,r0()),e)],qc=(n,e)=>[n.run(Mt(n,e,i0(),"bool"),e)],Kc=(n,e)=>[n.run(Mt(n,e,a0(),"bool"),e)],Yc=(n,e)=>[n.run(Mt(n,e,s0(),"bool"),e)],Xc=(n,e)=>[n.run(Mt(n,e,n0()),e)],Jc=(n,e)=>[n.run(Mt(n,e,l0(),"bool"),e)],Zc=(n,e)=>[n.run(Mt(n,e,d0()),e)],Qc=(n,e)=>[n.run(Mt(n,e,f0()),e)],ed=(n,e)=>[n.run(Mt(n,e,o0()),e)],td=(n,e)=>[n.run(Mt(n,e,c0(),"bool"),e)]});var nd,od,g0,id=P(()=>{"use strict";Le();nd=(n,e,r)=>(g0(e),[n.cast(e[0],r)]),od=n=>mt.tensorDataTypeFromProto(n.attributes.getInt("to")),g0=n=>{if(!n||n.length!==1)throw new Error("Cast requires 1 input.");if(n[0].type==="string")throw new Error("Invalid input type.")}});var b0,y0,ad,oi,sd=P(()=>{"use strict";Je();Oe();ir();Kr();b0=(n,e)=>({name:"Concat (packed)",inputNames:Array.from({length:n},(r,t)=>`X${t}`),inputTypes:Array(n).fill(2),cacheHint:e}),y0=(n,e,r,t)=>{let o=r[0].dims.slice();if(t>=o.length||t<-1*o.length)throw new Error("axis specified for concat doesn't match input dimensionality");t<0&&(t=o.length+t);let i=o.slice(0);for(let z=1;z<r.length;z++){let M=r[z].dims.slice();for(let G=0;G<o.length;G++)if(G===t)i[t]+=M[G];else if(o[G]!==M[G])throw new Error("non concat dimensions must match")}let u=i.length,a=yn("coords",u),s=Tt(u),l=ar(),c=r.map(z=>z.dims),p=Xt(u),h=new Array(c.length-1);h[0]=c[0][t];for(let z=1;z<h.length;z++)h[z]=h[z-1]+c[z][t];let g=p[t],y=p.slice(-2),b=p.join(),w=`if (${g} < ${h[0]}) {
        return getChannel(
            getX0(${b}), vec2(${y.join()}));
        }`;for(let z=1;z<h.length;z++){let M=h[z-1];w+=`
            if (${g} < ${h[z]}  && ${g} >= ${h[z-1]}) {
              return getChannel(
                getX${z}(${oi(p,g,M)}),
                vec2(${oi(y,g,M)}));
            }`}let S=h.length,O=h[h.length-1];w+=`
            return getChannel(
              getX${S}(${oi(p,g,O)}),
              vec2(${oi(y,g,O)}));`;let E=se(n.session.backend.glContext.version),B=`
          ${l}
          float getValue(${p.map(z=>"int "+z)}) {
            ${w}
          }

          void main() {
            ${s} coords = getOutputCoords();
            int lastDim = coords.${p[u-1]};
            coords.${p[u-1]} = coords.${p[u-2]};
            coords.${p[u-2]} = lastDim;

            vec4 result = vec4(getValue(${a}), 0., 0., 0.);

            ${a[u-1]} = ${a[u-1]} + 1;
            if (${a[u-1]} < ${i[u-1]}) {
              result.g = getValue(${a});
            }

            ${a[u-2]} = ${a[u-2]} + 1;
            if (${a[u-2]} < ${i[u-2]}) {
              result.a = getValue(${a});
            }

            ${a[u-1]} = ${a[u-1]} - 1;
            if (${a[u-2]} < ${i[u-2]} &&
                ${a[u-1]} < ${i[u-1]}) {
              result.b = getValue(${a});
            }
            ${E.output} = result;
          }
        `;return{...e,output:{dims:i,type:r[0].type,textureType:2},shaderSource:B,hasMain:!0}},ad=(n,e,r)=>{let t=b0(e.length,r.cacheKey);return{...t,get:()=>y0(n,t,e,r.axis)}},oi=(n,e,r)=>{let t=n.indexOf(e);return n.map((i,u)=>u===t?`${i} - ${r}`:i).join()}});var ud,v0,x0,w0,ld,T0,$0,S0,cd,I0,dd=P(()=>{"use strict";ft();Oe();sd();ud=(n,e,r)=>(I0(e),n.session.pack&&e[0].dims.length>1?[n.run(ad(n,e,r),e)]:[n.run(w0(n,e,r),e)]),v0=(n,e)=>({name:"Concat",inputNames:Array.from({length:n},(r,t)=>`X${t}`),inputTypes:Array(n).fill(0),cacheHint:e}),x0=(n,e,r,t)=>{let o=r[0].dims.slice();if(t>=o.length||t<-1*o.length)throw new Error("axis specified for concat doesn't match input dimensionality");t<0&&(t=o.length+t);let i=o.slice(0);for(let g=1;g<r.length;g++){let y=r[g].dims.slice();for(let b=0;b<o.length;b++)if(b===t)i[t]+=y[b];else if(o[b]!==y[b])throw new Error("non concat dimensions must match")}let u=i.length,a=new Array(r.length),s=0;for(let g=0;g<a.length;++g)s+=r[g].dims[t],a[g]=s;let l="";r.length<5?l=ld(a):l=T0(a);let c=$0(r.length,u),p=S0(a),h=`
        ${c}
        ${p}
        ${l}
        float process(int indices[${u}]) {
          int textureIndex = getTextureWhereDataResides (indices[${t}]);

          if(textureIndex != 0) {
            indices[${t}] = indices[${t}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));
          }

          return fetchDataFromCorrectTexture(textureIndex, indices);
        }`;return{...e,output:{dims:i,type:r[0].type,textureType:0},shaderSource:h}},w0=(n,e,r)=>{let t=v0(e.length,r.cacheKey);return{...t,get:()=>x0(n,t,e,r.axis)}},ld=n=>`int getTextureWhereDataResides(int index) {
      ${n.map((r,t)=>`if(index<${r}) {return ${t};}
`).join("")}
    }`,T0=n=>ld(n),$0=(n,e)=>{let r=[`float fetchDataFromCorrectTexture(int textureIndex, int indices[${e}]) {`];for(let t=0;t<n;++t)t===0?r.push(`	if (textureIndex == ${t}) { return _X${t}(indices); }`):t===n-1?r.push(`	else { return _X${t}(indices); }`):r.push(`	else if (textureIndex == ${t}) { return _X${t}(indices); }`);return r.push("	}"),r.join(`
`)},S0=n=>{let e=["int getSizeInConcatAxisValueFromIndex(int index) {"];for(let r=0;r<n.length;++r)r===0?e.push(`	if (index == ${r}) { return ${n[r]}; }`):r===n.length-1?e.push(`	else { return ${n[r]}; }`):e.push(`	else if (index == ${r}) { return ${n[r]}; }`);return e.push("	}"),e.join(`
`)},cd=n=>we({axis:n.attributes.getInt("axis")}),I0=n=>{if(!n||n.length<1)throw new Error("too few inputs");let e=n[0].type,r=n[0].dims.length;if(e==="string")throw new Error("string tensor is not supported yet");for(let t of n){if(t.type!==e)throw new Error("input tensors should be one type");if(t.dims.length!==r)throw new Error("input tensors should have the same shape")}}});function _0(){return Lt("abs")}function A0(){return Lt("acos")}function O0(){return Lt("asin")}function E0(){return Lt("atan")}function C0(){return Lt("ceil")}function P0(){return Lt("cos")}function D0(n){let e="elu";return{body:`
  const float alpha = float(${n});

  float ${e}_(float a) {
    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;
  }
  vec4 ${e}_(vec4 v) {
    return vec4(${e}_(v.x), ${e}_(v.y), ${e}_(v.z), ${e}_(v.w));
  }
  `,name:e,type:0}}function k0(){return Lt("exp")}function B0(){return Lt("floor")}function Ga(n,e){let r="clip";return{body:`
  const float min = float(${n});
  const float max = float(${e});

  float ${r}_(float a) {
    return clamp(a, min, max);
  }
  vec4 ${r}_(vec4 v) {
    return clamp(v, min, max);
  }
  `,name:r,type:0}}function R0(){let n="indentity";return{body:`
  float ${n}_(float a) {
    return a;
  }
  vec4 ${n}_(vec4 v) {
    return v;
  }
  `,name:n,type:0}}function M0(n){let e="leakyRelu";return{body:`
  const float alpha = float(${n});

  float ${e}_(float a) {
    return a < 0.0 ? a * alpha : a;
  }
  vec4 ${e}_(vec4 v) {
    return vec4(${e}_(v.x), ${e}_(v.y), ${e}_(v.z), ${e}_(v.w));
  }
  `,name:e,type:0}}function L0(){return Lt("log")}function N0(){let n="neg";return{body:`
  float ${n}_(float a) {
    return -a;
  }
  vec4 ${n}_(vec4 v) {
    return -v;
  }
  `,name:n,type:0}}function z0(){let n="not";return{body:`
  float ${n}_(float a) {
    return float( ! bool(a) );
  }
  bool ${n}_(bool a) {
    return !a;
  }
  vec4 ${n}_(vec4 v) {
    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));
  }
  bvec4 ${n}_(bvec4 v) {
    return bvec4(!v.x, !v.y, !v.z, !v.w);
  }
  `,name:n,type:0}}function F0(){return Lt("sin")}function Wa(){let n="relu";return{body:`
  float ${n}_(float a) {
    return max( a, 0.0 );
  }
  vec4 ${n}_(vec4 v) {
    return max( v, 0.0 );
  }
  `,name:n,type:0}}function Va(){let n="sigmoid";return{body:`
  float ${n}_(float a) {
    return 1.0 / (1.0 + exp(-a));
  }
  vec4 ${n}_(vec4 v) {
    return 1.0 / (1.0 + exp(-v));
  }
  `,name:n,type:0}}function G0(){return Lt("sqrt")}function W0(){return Lt("tan")}function V0(){let n="tanh";return{body:`
  float ${n}_(float a) {
    a = clamp(a, -10., 10.);
    a = exp(2.*a);
    return (a - 1.) / (a + 1.);
  }
  vec4 ${n}_(vec4 v) {
    v = clamp(v, -10., 10.);
    v = exp(2.*v);
    return (v - 1.) / (v + 1.);
  }
  `,name:n,type:0}}function Lt(n){return{body:`
  float ${n}_(float a) {
    return ${n}(a);
  }
  vec4 ${n}_(vec4 v) {
    return ${n}(v);
  }
  `,name:n,type:0}}var U0,nt,fd,pd,hd,md,Ua,gd,bd,H0,yd,vd,xd,wd,Td,$d,Ha,Sd,Id,_d,Ad,Od,Ed,Cd,Pd,Dd,kd,Bd,ja=P(()=>{"use strict";ft();Le();yr();Je();Oe();U0=(n,e,r,t)=>{let o=n.session.pack?2:0,i=se(n.session.backend.glContext.version);return{...e,output:{dims:r.dims,type:r.type,textureType:o},shaderSource:`
     ${t.body}
     void main() {
       vec4 v = ${i.texture2D}(A, TexCoords);
       v = ${t.name}_(v);
       ${i.output} = v;
     }
     `,hasMain:!0}},nt=(n,e,r,t)=>{let o=n.session.pack?2:0,i={name:r.name,inputTypes:[o],inputNames:["A"],cacheHint:t};return{...i,get:()=>U0(n,i,e,r)}},fd=(n,e)=>[n.run(nt(n,e[0],_0()),e)],pd=(n,e)=>[n.run(nt(n,e[0],A0()),e)],hd=(n,e)=>[n.run(nt(n,e[0],O0()),e)],md=(n,e)=>[n.run(nt(n,e[0],E0()),e)],Ua=(n,e,r)=>[n.run(nt(n,e[0],Ga(r.min,r.max),r.cacheKey),e)],gd=n=>we({min:n.attributes.getFloat("min",Hr),max:n.attributes.getFloat("max",jr)}),bd=(n,e)=>{let r=H0(n,e);return Ua(n,[e[0]],r)},H0=(n,e)=>{if(e.length>=3&&(!n.session.isInitializer(e[1].dataId)||!n.session.isInitializer(e[2].dataId)))throw new Error("dynamic clip attributes are not allowed");let r=e.length>=3?e[1].numberData[0]:Hr,t=e.length>=3?e[2].numberData[0]:jr;return we({min:r,max:t})},yd=(n,e)=>[n.run(nt(n,e[0],C0()),e)],vd=(n,e)=>[n.run(nt(n,e[0],P0()),e)],xd=(n,e,r)=>[n.run(nt(n,e[0],D0(r.alpha),r.cacheKey),e)],wd=n=>we({alpha:n.attributes.getFloat("alpha",1)}),Td=(n,e)=>[n.run(nt(n,e[0],k0()),e)],$d=(n,e)=>[n.run(nt(n,e[0],B0()),e)],Ha=(n,e)=>[n.run(nt(n,e[0],R0()),e)],Sd=(n,e,r)=>[n.run(nt(n,e[0],M0(r.alpha),r.cacheKey),e)],Id=n=>we({alpha:n.attributes.getFloat("alpha",.01)}),_d=(n,e)=>[n.run(nt(n,e[0],L0()),e)],Ad=(n,e)=>[n.run(nt(n,e[0],N0()),e)],Od=(n,e)=>[n.run(nt(n,e[0],z0()),e)],Ed=(n,e)=>[n.run(nt(n,e[0],Wa()),e)],Cd=(n,e)=>[n.run(nt(n,e[0],Va()),e)],Pd=(n,e)=>[n.run(nt(n,e[0],F0()),e)],Dd=(n,e)=>[n.run(nt(n,e[0],G0()),e)],kd=(n,e)=>[n.run(nt(n,e[0],W0()),e)],Bd=(n,e)=>[n.run(nt(n,e[0],V0()),e)]});function sr(n){let e;switch(n.activation){case"Relu":e=Wa();break;case"Sigmoid":e=Va();break;case"Clip":e=Ga(n.clipMin,n.clipMax);break;default:return{activationFunction:"",applyActivation:""}}let r=e.name,t=e.body,o=`value = ${r}_(value);`;return{activationFunction:t,applyActivation:o}}var vn,Yr=P(()=>{"use strict";Le();ja();vn=n=>{let e=n.getString("activation","");if(e==="Clip"){let[r,t]=n.getFloats("activation_params",[Hr,jr]);return{activation:e,clipMax:t,clipMin:r,activationCacheKey:`${e}:${r},${t}`}}return{activation:e,activationCacheKey:e}}});var q0,K0,Rd,Md=P(()=>{"use strict";Pt();Je();Oe();ii();Yr();q0=(n,e)=>({name:"GroupedConv",inputNames:n?["X","W","Bias"]:["X","W"],inputTypes:n?[0,0,0]:[0,0],cacheHint:e}),K0=(n,e,r,t)=>{let i=e.length>2?"value += getBias(output_channel);":"",u=e[0].dims.slice(),a=e[1].dims.slice(),s=a[0]/t.group;ze.verbose("GroupedConv",`autpPad:${t.autoPad}, dilations:${t.dilations}, group:${t.group}, kernelShape:${t.kernelShape}, pads:${t.pads}, strides:${t.strides}`);let l=xn(u,a,t.dilations,t.pads,t.strides),c=se(n.session.backend.glContext.version),{activationFunction:p,applyActivation:h}=sr(t),g=`
  const ivec2 strides = ivec2(${t.strides[0]}, ${t.strides[1]});
  const ivec2 pads = ivec2(${t.pads[0]}, ${t.pads[1]});
  ${p}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;
    ivec2 xRCCorner = coords.zw * strides - pads;
    int group_id = output_channel / ${s};

    float value = 0.0;
    for (int wInChannel = 0; wInChannel < ${a[1]}; wInChannel++) {
      int input_channel = group_id * ${a[1]} + wInChannel;
      for (int wHeight = 0; wHeight < ${a[2]}; wHeight++) {
        int xHeight = xRCCorner.x + wHeight * ${t.dilations[0]};

        if (xHeight < 0 || xHeight >= ${u[2]}) {
          continue;
        }

        for (int wWidth = 0; wWidth < ${a[3]}; wWidth++) {
          int xWidth = xRCCorner.y + wWidth * ${t.dilations[1]};
          if (xWidth < 0 || xWidth >= ${u[3]}) {
            continue;
          }

          float xVal = getX(batch, input_channel, xWidth, xHeight);
          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);
          value += xVal*wVal;
        }
      }
    }
    ${i}
    ${h}
    ${c.output} = vec4(value, .0, .0, .0);
  }
`;return{...r,output:{dims:l,type:e[0].type,textureType:0},shaderSource:g,hasMain:!0}},Rd=(n,e,r)=>{let t=q0(e.length>2,r.cacheKey);return{...t,get:()=>K0(n,e,t,r)}}});var Y0,X0,Ld,Nd=P(()=>{"use strict";Je();Oe();Kr();Y0=n=>({name:"Im2Col (packed)",inputNames:["A"],inputTypes:[2],cacheHint:n}),X0=(n,e,r,t,o,i)=>{let u=r.dims,a=t.dims,s=2,l=3,c=o.length,p=[a[1]*a[2]*a[3],o[2]*o[3]],h=a[2]*a[3],g=ar(),y=se(n.session.backend.glContext.version),b="";for(let S=0;S<=1;S++)for(let O=0;O<=1;O++)b+=`
            blockIndex = rc.x + ${O};
            pos = rc.y + ${S};

            if(blockIndex < ${p[1]} && pos < ${p[0]}) {
              offsetY = int(blockIndex / (${o[c-1]})) * ${i.strides[0]} -
                ${i.pads[0]};
              d0 = offsetY + ${i.dilations[0]} * (imod(pos, ${h}) / ${a[2]});

              if(d0 < ${u[s]} && d0 >= 0) {
                offsetX = imod(blockIndex, ${o[c-1]}) * ${i.strides[1]} -
                  ${i.pads[1]};
                d1 = offsetX + ${i.dilations[1]} * imod(imod(pos, ${h}), ${a[2]});

                if(d1 < ${u[l]} && d1 >= 0) {

                  ch = int(float(pos)/ ${h}.);
                    innerDims = vec2(d0, d1);
                    result[${S*2+O}] = getChannel(
                      getA(0, ch, int(innerDims.x),
                      int(innerDims.y)), innerDims);
                }
              }
            }

          `;let w=`
      ${g}

      void main() {
        ivec2 rc = getOutputCoords();
          vec4 result = vec4(0.0);
          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
          vec2 innerDims;
          ${b}
          ${y.output} = result;
      }
            `;return{...e,output:{dims:p,type:r.type,textureType:2},shaderSource:w,hasMain:!0}},Ld=(n,e,r,t,o)=>{let i=Y0(o.cacheKey);return{...i,get:()=>X0(n,i,e,r,t,o)}}});function Z0(n,e,r){let t=e[0].dims,o=e[1].dims,i=wt.calcShape(t,o,!0);if(!i)throw new Error("Can't use matmul on the given tensors");let u=Tt(i.length),a=Xt(),{activationFunction:s,applyActivation:l}=sr(r),c=e.length>2,p=c?"value += getBiasForMatmul();":"",h=c?`${Ka(u,a,e[2].dims,i,!1)}`:"",g=i.length,y=t.length,b=o.length,w=t[t.length-1],S=`
    ${s}
    ${h}
    float process(int indices[${g}]) {
        int a[${y}];
        int b[${b}];
        bcastMatmulIndices_A(indices, a);
        bcastMatmulIndices_B(indices, b);

        float value;
        for (int k=0; k<${w}; ++k) {
            a[${y-1}] = k;
            b[${b-2}] = k;
            value += _A(a) * _B(b);
        }
        ${p}
        ${l}
        return value;
    }`;return{...n,output:{dims:i,type:e[0].type,textureType:0},shaderSource:S}}function qa(n,e){let r=J0(n.length>2,e.activationCacheKey);return{...r,get:()=>Z0(r,n,e)}}function Ka(n,e,r,t,o){let i="",u=r.length,a=t.length,s=a-u;a<2&&u>0?i="coords":i=r.map((b,w)=>`coords.${e[w+s]}`).join(", ");let c=wt.getBroadcastDims(r,t).map(b=>`coords.${e[b+s]} = 0;`).join(`
`),h=re.size(r)===1,g="vec4(outputValue.xx, outputValue.yy)";return h&&(g="vec4(outputValue.x)"),o?`
vec4 getBiasForMatmul() {
  ${n} coords = getOutputCoords();
  ${c}
  vec4 outputValue = getBias(${i});
  return ${g};
}`:`
float getBiasForMatmul() {
  ${n} coords = getOutputCoords();
  ${c}
  return getBias(coords.x);
}`}var zd,Fd,J0,Q0,ai=P(()=>{"use strict";Le();Oe();ir();Yr();Ya();zd=(n,e,r)=>(Q0(e),n.session.pack?[n.run(si(n,e,r),e)]:[n.run(qa(e,r),e)]),Fd=n=>vn(n.attributes),J0=(n,e)=>({name:"MatMul",inputNames:n?["A","B","Bias"]:["A","B"],inputTypes:n?[0,0,0]:[0,0],cacheHint:e});Q0=n=>{if(!n||n.length!==2)throw new Error("MatMul requires 2 inputs.");if(n[0].dims[n[0].dims.length-1]!==n[1].dims[n[1].dims.length-2])throw new Error("shared dimension does not match.");if(n[0].type!=="float32"&&n[0].type!=="float64"||n[1].type!=="float32"&&n[1].type!=="float64")throw new Error("inputs should be float type");if(n[0].type!==n[1].type)throw new Error("inputs types should match")}});function rv(n,e,r,t){let o=[],i=[],u=r[0].dims,a=r[1].dims,s=u.length,l=a.length,c=t.length,p=c-s,h=c-l;o=u.map((E,B)=>`coords.${e[B+p]}`),o[s-1]="i*2",o.join(", "),i=a.map((E,B)=>`coords.${e[B+h]}`),i[l-2]="i*2",i.join(", ");let g=wt.getBroadcastDims(u,t),y=wt.getBroadcastDims(a,t),b=g.map(E=>`coords.${e[E+p]} = 0;`).join(`
`),w=y.map(E=>`coords.${e[E+h]} = 0;`).join(`
`),S=`int lastDim = coords.${e[c-1]};
  coords.${e[c-1]} = coords.${e[c-2]};
  coords.${e[c-2]} = lastDim;`;return`
vec4 getAAtOutCoordsMatmul(int i) {
  ${n} coords = getOutputCoords();
  ${S}
  ${b}
  vec4 outputValue = getA(${o});
  return outputValue;
}

vec4 getBAtOutCoordsMatmul(int i) {
  ${n} coords = getOutputCoords();
  ${S}
  ${w}
  vec4 outputValue = getB(${i});
  return outputValue;
}`}function nv(n,e){let r="";for(let t=0;t<e-2;t++)r+=`rc.${n[t]}, `;return r+=`rc.${n[e-2]}, i*2`,r}function ov(n,e){let r="";for(let t=0;t<e-2;t++)r+=`rc.${n[t]}, `;return r+=`i*2, rc.${n[e-1]}`,r}var ev,tv,si,Ya=P(()=>{"use strict";Le();Je();Oe();ir();Yr();ai();ev=(n,e)=>({name:"MatMul (packed)",inputNames:n?["A","B","Bias"]:["A","B"],inputTypes:n?[2,2,2]:[2,2],cacheHint:e}),tv=(n,e,r,t)=>{let o=r.length>2,i=o?"value += getBiasForMatmul();":"",u=r[0].dims,a=r[1].dims,s=wt.calcShape(u,a,!0),l=!re.areEqual(r[0].dims,r[1].dims);if(!s)throw new Error("Can't use matmul on the given tensors");let c=u[u.length-1],p=Math.ceil(c/2),h=u.length,g=a.length,y=se(n.session.backend.glContext.version),b=Tt(s.length),w=s.length,S=Xt(),{activationFunction:O,applyActivation:E}=sr(t),B=o?`${Ka(b,S,r[2].dims,s,!0)}`:"",z=l?`${rv(b,S,r,s)}`:"",M=l?"getAAtOutCoordsMatmul(i)":`getA(${nv(S,h)})`,G=l?"getBAtOutCoordsMatmul(i)":`getB(${ov(S,g)})`,K=l?"":`${b} rc =
          getOutputCoords(); int lastDim = rc.${S[w-1]}; rc.${S[w-1]} =
          rc.${S[w-2]}; rc.${S[w-2]} = lastDim;
      `,Z=`
            ${z}
            ${B}
            ${O}
            void main() {
              ${K}

              vec4 value = vec4(0);
              for (int i = 0; i < ${p}; i++) {
                vec4 a = ${M};
                vec4 b = ${G};

                value += (a.rrbb * b.rgrg);
                value += (a.ggaa * b.baba);
              }
              ${i}
              ${E}
              ${y.output} = value;
            }`;return{...e,output:{dims:s,type:r[0].type,textureType:2},shaderSource:Z,hasMain:!0}},si=(n,e,r)=>{let t=ev(e.length>2,r.activationCacheKey);return{...t,get:()=>tv(n,t,e,r)}}});var Gd,Wd=P(()=>{"use strict";ii();Nd();Ya();Gd=(n,e,r)=>{let t=e[0].dims,o=e[1].dims,i=xn(t,o,r.dilations,r.pads,r.strides),u=n.run(Ld(n,e[0],e[1],i,r),[e[0]]),a=n.reshapePacked(e[1],[o[0],o[1]*o[2]*o[3]]),s=e.length===3?[a,u,e[2]]:[a,u],l=n.run(si(n,s,r),s);return n.reshapePacked(l,i)}});var iv,av,Vd,Xa,Ja=P(()=>{"use strict";Oe();iv=n=>({name:"Im2Col",inputNames:["X"],inputTypes:[0],cacheHint:n}),av=(n,e,r,t,o,i)=>{let u=r.dims,a=t.dims,s=o.length,l=Xa(u,a,o,4),c=`
        const int XC = ${u[1]};
        const int XH = ${u[2]};
        const int XW = ${u[3]};
        const int KH = ${i.kernelShape[0]};
        const int KW = ${i.kernelShape[1]};
        const int dilationH = ${i.dilations[0]};
        const int dilationW = ${i.dilations[1]};
        const int strideH = ${i.strides[0]};
        const int strideW = ${i.strides[1]};
        const int padH = ${i.pads[0]};
        const int padW = ${i.pads[1]};
        const int KHKW = KH*KW;
        const int XCKHKW = XC * KHKW;
        const int outputChannels = 4;
        vec4 process(int indices[${s}]) {
          int b  = indices[0]; // batch size
          int oh = indices[1] * strideH - padH; //output height
          int ow = indices[2] * strideW - padW; //output width
          int p = indices[3] * outputChannels; //patch
          vec4 value = vec4(0.0);
          for(int i=0; i < outputChannels; ++i) {
            if(p < XCKHKW) {
              int patchC = p / KHKW;
              int patchH = (p - patchC*KHKW) / KW;
              int patchW = (p - patchC*KHKW) - patchH * KW;
              int xh2 = oh + patchH * dilationH;
              int xw2 = ow + patchW * dilationW;
              int x[${u.length}];
              x[0] = b;
              x[1] = patchC;
              x[2] = xh2;
              x[3] = xw2;
              if(xh2 >= 0 &&
                  xh2 < XH &&
                  xw2 >= 0 &&
                  xw2 < XW) {
                value[i] = _X(x);
              }
            }
            ++p;
          }
          return value;
        }
        `;return{...e,output:{dims:l,type:r.type,textureType:4},shaderSource:c}},Vd=(n,e,r,t,o)=>{let i=iv(o.cacheKey);return{...i,get:()=>av(n,i,e,r,t,o)}},Xa=(n,e,r,t=4)=>[r[0],r[2],r[3],Math.ceil(n[1]*e[2]*e[3]/t)]});var sv,uv,Ud,Hd=P(()=>{"use strict";Le();Je();Oe();Yr();Ja();sv=(n,e)=>({name:"ConvDotProduct",inputNames:n?["Im2Col","K","B"]:["Im2Col","K"],inputTypes:n?[0,4,0]:[0,4],cacheKey:e.activationCacheKey}),uv=(n,e,r,t,o)=>{let i=r[0].dims,u=r[1].dims,a=[u[0],Math.ceil(i[1]*u[2]*u[3]/4)],s=Xa(i,u,t),[l,c]=n.calculateTextureWidthAndHeight(a,4),p=re.computeStrides(s),[h,g]=n.calculateTextureWidthAndHeight(s,4),y=t.length,b=r.length<3?"0.0":"_B(b)",w=Math.ceil(i[1]*u[2]*u[3]/4),{activationFunction:S,applyActivation:O}=sr(o),E=se(n.session.backend.glContext.version),B=`
${S}
float process(int indices[${y}]) {
  int b[1];
  b[0] = indices[1];
  int im2col[4];
  im2col[0] = indices[0];
  im2col[1] = indices[2];
  im2col[2] = indices[3];
  int im2colOffset = im2col[0] * ${p[0]} + im2col[1] * ${p[1]} + im2col[2] * ${p[2]};
  int kernelOffset = indices[1] * ${a[1]};
  float value = ${b};
  for (int i = 0; i < ${w}; ++i) {
    vec2 im2colCoords = offsetToCoords(im2colOffset, ${h}, ${g});
    vec2 kernelCoords = offsetToCoords(kernelOffset, ${l}, ${c});
    value += dot(${E.texture2D}(Im2Col, im2colCoords), ${E.texture2D}(K, kernelCoords));
    ++im2colOffset;
    ++kernelOffset;
  }
  ${O}
  return value;
}`;return{...e,output:{dims:t,type:r[0].type,textureType:0},shaderSource:B}},Ud=(n,e,r,t)=>{let o=sv(e.length>2,t);return{...o,get:()=>uv(n,o,e,r,t)}}});var xn,Za,lv,cv,dv,fv,Qa,pv,ii=P(()=>{"use strict";ft();Le();Md();Wd();Hd();Yr();Ja();ai();xn=(n,e,r,t,o)=>{let i=n[0],u=n.slice(2),a=u.length,s=e[0],c=e.slice(2).map((y,b)=>y+(y-1)*(r[b]-1)),h=u.map((y,b)=>y+t[b]+t[b+a]).map((y,b)=>Math.floor((y-c[b]+o[b])/o[b]));return[i,s].concat(...h)},Za=(n,e,r)=>(pv(e,r),lv(n,e,r)),lv=(n,e,r)=>{let t=fv(r,e),o=n.session.pack,i=t.kernelShape[0]===1&&t.kernelShape[1]===1;return t.group>1?[n.run(Rd(n,e,t),e)]:i&&o?[cv(n,e,t)]:o&&e[0].dims.length===4&&e[0].dims[0]===1&&!i?[Gd(n,e,t)]:[dv(n,e,t)]},cv=(n,e,r)=>{let t=e[0].dims,o=e[1].dims,i=xn(t,o,r.dilations,r.pads,r.strides),u=n.reshapeUnpacked(e[0],[t[1],t[2]*t[3]]),a=n.reshapeUnpacked(e[1],[o[0],o[1]]),s=e.length>2?[a,u,e[2]]:[a,u],l=n.run(qa(s,r),s);return n.reshapeUnpacked(l,i)},dv=(n,e,r)=>{let t=e[0].dims,o=e[1].dims,i=xn(t,o,r.dilations,r.pads,r.strides),u=n.run(Vd(n,e[0],e[1],i,r),[e[0]]),a=e.length===3?[u,e[1],e[2]]:[u,e[1]];return n.run(Ud(n,e,i,r),a)},fv=(n,e)=>{let r=n.kernelShape.slice();if(n.kernelShape.length===0)for(let i=2;i<e[1].dims.length;++i)r.push(e[1].dims[i]);let t=n.pads.slice();Ur.adjustPadsBasedOnAutoPad(e[0].dims,n.strides,n.dilations,r,t,n.autoPad);let o=Object.assign({},n);return Object.assign(o,{kernelShape:r,pads:t,cacheKey:n.cacheKey}),o},Qa=n=>{let e=n.attributes,r=vn(e),t=e.getString("auto_pad","NOTSET"),o=e.getInts("dilations",[1,1]),i=e.getInt("group",1),u=e.getInts("kernel_shape",[]),a=e.getInts("pads",[0,0,0,0]),s=e.getInts("strides",[1,1]);return we({autoPad:t,dilations:o,group:i,kernelShape:u,pads:a,strides:s,...r})},pv=(n,e)=>{if(!n||n.length!==2&&n.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(n[0].dims.length!==4||n[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");let r=n[0].dims[1],t=n[1].dims[1]*e.group;if(r!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(n.length===3&&(n[2].dims.length!==1||n[1].dims[0]!==n[2].dims[0]))throw new Error("invalid bias");let o=n[0].dims.length-2;if(e.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(e.strides.length!==o)throw new Error(`strides should be ${o}D`);if(e.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==n[1].dims.length-2)throw new Error("invalid kernel shape");if(n[0].type!=="float32"||n[1].type!=="float32")throw new Error("Conv input(X,W) should be float tensor");if(n.length===3&&n[2].type!=="float32")throw new Error("Conv input(bias) should be float tensor")}});var hv,mv,gv,jd,bv,yv,vv,xv,wv,Tv,qd,$v,Kd=P(()=>{"use strict";ft();Je();Oe();Yr();hv=(n,e,r,t,o,i)=>(n-1)*e+r+(t-1)*o+1-i,mv=(n,e,r,t,o)=>{let i=Math.floor(n/2);e==="SAME_UPPER"?(r[t]=i,r[o]=n-i):e==="SAME_LOWER"&&(r[t]=n-i,r[o]=i)},gv=(n,e,r,t,o,i,u,a)=>{let s=n.length-2,l=a.length===0;for(let c=0;c<s;++c){let p=l?n[c+2]*i[c]:a[c],h=hv(n[c+2],i[c],o[c],e[c],r[c],p);mv(h,t,o,c,c+s),l&&a.push(i[c]*(n[c+2]-1)+u[c]+(e[c]-1)*r[c]+1-o[c]-o[c+s])}},jd=(n,e,r)=>($v(e,r),bv(n,e,r)),bv=(n,e,r)=>{let t=Tv(r,e);return[wv(n,e,t)]},yv=(n,e)=>({name:"ConvTranspose",inputNames:n?["X","W","B"]:["X","W"],inputTypes:n?[0,0,0]:[0,0],cacheHint:e}),vv=(n,e,r,t)=>{let i=e.length>2?"getB(output_channel)":"0.0",u=e[0].dims,a=e[1].dims,s=a[1],l=a[0]/t.group,c=[e[0].dims[0],e[1].dims[1]*t.group,...t.outputShape],p=se(n.session.backend.glContext.version),{activationFunction:h,applyActivation:g}=sr(t),y=`
  const ivec2 strides = ivec2(${t.strides[0]}, ${t.strides[1]});
  const ivec2 pads = ivec2(${t.pads[0]}, ${t.pads[1]});
  ${h}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;

    ivec2 loc = coords.zw + pads;

    int group_id = output_channel / ${s};
    int wOutChannel = output_channel - group_id * ${s};

    float value = ${i};
    for (int inChannelOffset = 0; inChannelOffset < ${l}; inChannelOffset++) {
      int input_channel = group_id * ${l} + inChannelOffset;
      for (int wWOff = 0; wWOff < ${a[2]}; wWOff++) {
        for (int wHOff = 0; wHOff < ${a[3]}; wHOff++) {
          ivec2 wOff = ivec2(wWOff * ${t.dilations[0]}, wHOff * ${t.dilations[1]});
          ivec2 wLoc = loc - wOff;
          ivec2 wLocIn = wLoc / strides;
          if (
            wLocIn * strides == wLoc &&
            wLocIn.x >= 0 && wLocIn.x < ${u[2]} &&
            wLocIn.y >= 0 && wLocIn.y < ${u[3]}
          ) {
            float xVal = getX(batch, input_channel, wLocIn.y, wLocIn.x);
            float wVal = getW(input_channel, wOutChannel, wHOff, wWOff);
            value += xVal * wVal;
          }
        }
      }
    }
    ${g}
    ${p.output} = vec4(value, .0, .0, .0);
  }
`;return{...r,output:{dims:c,type:e[0].type,textureType:0},shaderSource:y,hasMain:!0}},xv=(n,e,r)=>{let t=yv(e.length>2,r.cacheKey);return{...t,get:()=>vv(n,e,t,r)}},wv=(n,e,r)=>n.run(xv(n,e,r),e),Tv=(n,e)=>{let r=n.kernelShape.slice();if(n.kernelShape.length===0)for(let a=2;a<e[1].dims.length;++a)r.push(e[1].dims[a]);let t=n.pads.slice(),o=n.outputShape.slice(),i=e[0].dims;gv(i,r,n.dilations,n.autoPad,t,n.strides,n.outputPadding,o);let u=Object.assign({},n);return Object.assign(u,{kernelShape:r,pads:t,outputShape:o,cacheKey:n.cacheKey}),u},qd=n=>{let e=n.attributes,r=vn(e),t=e.getString("auto_pad","NOTSET"),o=e.getInts("dilations",[1,1]),i=e.getInt("group",1),u=e.getInts("kernel_shape",[]),a=e.getInts("output_padding",[0,0]),s=e.getInts("output_shape",[]),l=e.getInts("pads",[0,0,0,0]),c=e.getInts("strides",[1,1]);return we({autoPad:t,dilations:o,group:i,kernelShape:u,outputPadding:a,outputShape:s,pads:l,strides:c,...r})},$v=(n,e)=>{if(!n||n.length!==2&&n.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(n[0].dims.length!==4||n[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");let r=n[0].dims[1],t=n[1].dims[0];if(r!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=n[1].dims[1]*e.group;if(n.length===3&&(n[2].dims.length!==1||n[2].dims[0]!==o))throw new Error("invalid bias");let i=n[0].dims.length-2;if(e.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(e.strides.length!==i)throw new Error(`strides should be ${i}D`);if(e.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(e.outputPadding.length!==i)throw new Error(`output_padding should be ${i}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==n[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==n[0].dims.length-2)throw new Error("invalid output shape");if(n[0].type!=="float32"||n[1].type!=="float32")throw new Error("ConvTranspose input(X,W) should be float tensor");if(n.length===3&&n[2].type!=="float32")throw new Error("ConvTranspose input(bias) should be float tensor")}});var Yd,Xr,Xd,Sv,Jd,Iv,_v,Av,ui=P(()=>{"use strict";ft();Le();Oe();Yd={name:"Transpose",inputNames:["A"],inputTypes:[0]},Xr=(n,e,r)=>(Av(e),[n.run({...Yd,cacheHint:r.cacheKey,get:()=>Sv(n,e[0],r.perm)},e)]),Xd=n=>we({perm:n.attributes.getInts("perm",[])}),Sv=(n,e,r)=>{let t=e.dims;r=Jd(t,r);let o=Iv(t,r),i=t.length,u=`
      ${_v("perm",r,i)}
      float process(int indices[${i}]) {
        int a[${i}];
        perm(a, indices);
        return _A(a);
      }`;return{...Yd,output:{dims:o,type:e.type,textureType:0},shaderSource:u}},Jd=(n,e)=>(e&&e.length!==n.length&&(e=[...n.keys()].reverse()),e),Iv=(n,e)=>(e=Jd(n,e),re.sortBasedOnPerm(n,e)),_v=(n,e,r)=>{let t=[];t.push(`void ${n}(out int a[${r}], int src[${r}]) {`);for(let o=0;o<r;++o)t.push(`	a[${e[o]}]=src[${o}];`);return t.push("	}"),t.join(`
`)},Av=n=>{if(!n||n.length!==1)throw new Error("Transpose requires 1 input.");if(n[0].type!=="float32"&&n[0].type!=="float64")throw new Error("input should be float tensor")}});var Zd,Qd,Ov,ef=P(()=>{"use strict";ui();Zd=(n,e,r)=>{Ov(e);let t=r.blocksize,o=t*t,i=r.mode==="DCR"?[0,3,4,1,5,2]:[0,1,4,2,5,3],u=r.mode==="DCR"?[e[0].dims[0],t,t,e[0].dims[1]/o,e[0].dims[2],e[0].dims[3]]:[e[0].dims[0],e[0].dims[1]/o,t,t,e[0].dims[2],e[0].dims[3]],a=n.reshapeUnpacked(e[0],u),s={perm:i,cacheKey:`${i}`},[l]=Xr(n,[a],s),c=[e[0].dims[0],e[0].dims[1]/o,e[0].dims[2]*t,e[0].dims[3]*t];return[n.reshapeUnpacked(l,c)]},Qd=n=>{let e=n.attributes.getInt("blocksize");if(e<1)throw new Error(`blocksize must be >= 1, but got : ${e} for DepthToSpace`);let r=n.attributes.getString("mode","DCR");if(r!=="DCR"&&r!=="CRD")throw new Error(`unrecognized mode: ${r} for DepthToSpace`);return{mode:r,blocksize:e}},Ov=n=>{if(n.length!==1)throw new Error(`DepthToSpace expect 1 inputs, but got ${n.length}`);if(n[0].type==="string"||n[0].dims.length!==4)throw new TypeError("DepthToSpace input should be a 4-D numeric tensor")}});var tf,rf,Ev,nf=P(()=>{"use strict";Le();tf=(n,e,r)=>{Ev(e,r);let t=re.flattenShape(e[0].dims,r);return[n.reshapeUnpacked(e[0],t)]},rf=n=>n.attributes.getInt("axis",1),Ev=(n,e)=>{if(!n||n.length!==1)throw new Error("Flatten requires 1 input.");let r=n[0].dims.length;if(r===0)throw new Error("scalar tensor is not supported.");if(e<-r||e>r)throw new Error("Invalid axis");if(n[0].type==="string")throw new Error("string tensor is not supported.")}});var Er,to=P(()=>{"use strict";Er=["float32","float64","int32","int16","int8","uint16","uint32","uint8"]});var of,af,Cv,Pv,Dv,kv,sf=P(()=>{"use strict";ft();to();Le();Oe();of=(n,e,r)=>(kv(e,r.axis),[n.run(Dv(n,e,r),e)]),af=n=>we({axis:n.attributes.getInt("axis",0)}),Cv={name:"Gather",inputNames:["A","B"],inputTypes:[0,0]},Pv=(n,e,r,t)=>{let o=r[0].dims.slice(),i=r[1].dims.slice(),u=new Array(o.length+i.length-1);t=re.normalizeAxis(t,o.length);let a=[];for(let h=0;h<u.length;h++)h<t?(u[h]=o[h],a.push(`inputIdx[${h}] = outputIdx[${h}];`)):h<t+i.length?(u[h]=i[h-t],a.push(`indexDataIdx[${h-t}] = outputIdx[${h}];`)):(u[h]=o[h-i.length+1],a.push(`inputIdx[${h-i.length+1}] = outputIdx[${h}];`));let s=u.length||1,l=o.length,c=i.length||1,p=`
      float process(int outputIdx[${s}]) {
        int inputIdx[${l}];
        int indexDataIdx[${c}];
        indexDataIdx[0] = 0;
        ${a.join(`
        `)}
        int idx = int(_B(indexDataIdx));
        inputIdx[${t}] = idx < 0 ? idx + ${o[t]} : idx;
        return _A(inputIdx);
      }`;return{...e,output:{dims:u,type:r[0].type,textureType:0},shaderSource:p}},Dv=(n,e,r)=>{let t={...Cv,cacheHint:r.cacheKey};return{...t,get:()=>Pv(n,t,e,r.axis)}},kv=(n,e)=>{if(!n||n.length!==2)throw new Error("Gather requires 2 inputs.");let r=n[0].dims.length;if(r<1)throw new Error("Invalid input shape.");if(e<-r||e>r-1)throw new Error("Invalid axis.");if(Er.indexOf(n[0].type)===-1)throw new Error("Invaid input type.");if(n[1].type!=="int32"&&n[1].type!=="int16")throw new Error("Invaid input type.")}});var es,uf,lf,cf,Bv,Rv,Mv,df=P(()=>{"use strict";ft();Le();Oe();es=(n,e,r)=>(Mv(e,r),[n.run(Bv(e,r),e)]),uf=(n,e)=>{let r=n.attributes.getInt("transA",0)!==0,t=n.attributes.getInt("transB",0)!==0,o=n.attributes.getFloat("alpha",1),i=n.attributes.getFloat("beta",1);return we({transA:r,transB:t,alpha:o,beta:i,isOptionalC:e})},lf=n=>uf(n,!1),cf=n=>uf(n,!0),Bv=(n,e)=>{let r={name:"Gemm",inputNames:n.length===3?["A","B","C"]:["A","B"],inputTypes:n.length===3?[0,0,0]:[0,0],key:e.cacheKey};return{...r,get:()=>Rv(r,n,e)}},Rv=(n,e,r)=>{let t=e[0].dims.slice(),o=e[1].dims.slice(),[i,u]=Jo.getShapeOfGemmResult(t,r.transA,o,r.transB,e.length===3?e[2].dims:void 0),a=[i,u];if(!a)throw new Error("Can't use gemm on the given tensors");let s=t[t.length-1],l="";r.transA&&(s=t[0]),r.transA&&r.transB?l="value += _A_T(a) * _B_T(b);":r.transA&&!r.transB?l="value += _A_T(a) * _B(b);":!r.transA&&r.transB?l="value += _A(a) * _B_T(b);":!r.transA&&!r.transB&&(l="value += _A(a) * _B(b);");let c=a.length,p=e.length===3?`int c[${e[2].dims.length}];`:"",h=e.length===3?"bcastIndices_C(indices, c);":"",g=e.length===3?"value += beta * _C(c);":"",y=`
      float process(int indices[${c}]) {
          int a[${c}];
          int b[${c}];
          ${p}

          copyVec(indices, a);
          copyVec(indices, b);
          ${h}

          float value = 0.0;
          for (int k=0; k<${s}; ++k) {
              a[${c-1}] = k;
              b[${c-2}] = k;
              ${l}
          }

          value = value * alpha;
          ${g}
          return value;
      }`;return{...n,output:{dims:a,type:e[0].type,textureType:0},variables:[{name:"alpha",type:"float",data:r.alpha},{name:"beta",type:"float",data:r.beta}],shaderSource:y}},Mv=(n,e)=>{if(!n)throw new Error("Input is missing");if(e.isOptionalC&&(n.length<2||n.length>3))throw new Error("Invaid input shape.");if(!e.isOptionalC&&n.length!==3)throw new Error("Gemm requires 3 inputs");if(n.length===3&&n[2].dims.length!==1&&n[2].dims.length!==2)throw new Error("Invalid input shape of C");if(n[0].type!=="float32"&&n[0].type!=="float64"||n[1].type!=="float32"&&n[1].type!=="float64"||n.length===3&&n[2].type!=="float32"&&n[2].type!=="float64")throw new Error("Invalid input type.");if(n[0].type!==n[1].type||n.length===3&&n[0].type!==n[2].type)throw new Error("Input types are mismatched")}});var ff,pf,Lv,Nv,zv,Fv,Gv,hf=P(()=>{"use strict";ft();Oe();ff=(n,e,r)=>(Gv(e),[n.run(zv(n,e,r),e)]),pf=n=>{let e=n.attributes.getFloat("scale"),r=n.attributes.getFloats("bias");return we({scale:e,bias:r})},Lv={name:"ImageScaler",inputNames:["X"],inputTypes:[0]},Nv=(n,e,r,t)=>{let o=r[0].dims.slice(),i=o.length,a=`
      ${Fv(t.bias.length)}
      float process(int indices[${i}]) {
        return _X(indices) * scale + getBias(bias, indices[1]);
      }`;return{...e,output:{dims:o,type:r[0].type,textureType:0},variables:[{name:"bias",type:"float",arrayLength:t.bias.length,data:t.bias},{name:"scale",type:"float",data:t.scale}],shaderSource:a}},zv=(n,e,r)=>{let t={...Lv,cacheHint:r.cacheKey};return{...t,get:()=>Nv(n,t,e,r)}},Fv=n=>{let e=[`float getBias(float bias[${n}], int channel) {`];for(let r=0;r<n;++r)r===0?e.push(`	if (channel == ${r}) { return bias[${r}]; }`):r===n-1?e.push(`	else { return bias[${r}]; }`):e.push(`	else if (channel == ${r}) { return bias[${r}]; }`);return e.push("	}"),e.join(`
`)},Gv=n=>{if(!n||n.length!==1)throw new Error("ImageScaler requires 1 input.");if(n[0].dims.length!==4)throw new Error("Invalid input shape.");if(n[0].type!=="float32"&&n[0].type!=="float64")throw new Error("Invalid input type.")}});var gf,bf,mf,Wv,Vv,Uv,Hv,jv,qv,yf=P(()=>{"use strict";Je();Oe();gf=(n,e,r)=>{qv(e);let t=n.run(Vv(e[0]),e);return[n.run(jv(n,e[0],r,t.dims),[e[0],t,e[1],e[2]])]},bf=n=>n.attributes.getFloat("epsilon",1e-5),mf={name:"InstanceNormalization_MeanAndVariance",inputNames:["X"],inputTypes:[0]},Wv=(n,e)=>{let r=e.dims.slice(),t=r[1],o=r[2]*r[3],i=[r[0],t],u=`
      vec4 process(int[2] indices) {
        vec4 v = vec4(0.0);
        int a[4];
        a[0] = indices[0];
        a[1] = indices[1];
        float temp = 0.0;
        for(int a2=0; a2<${r[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${r[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += x;
          }
        }
        float mean = temp / float(${o});
        temp = 0.0;
        for(int a2=0; a2<${r[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${r[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += (x - mean) * (x - mean);
          }
        }
        v.r = mean;
        v.g = temp / float(${o});

        return v;
      }`;return{...n,output:{dims:i,type:e.type,textureType:4},shaderSource:u}},Vv=n=>({...mf,get:()=>Wv(mf,n)}),Uv={name:"InstanceNormalization_ComputeOutput",inputNames:["X","MeanAndVariance","Scale","B"],inputTypes:[0,4,0,0]},Hv=(n,e,r,t,o)=>{let i=se(n.session.backend.glContext.version),[u,a]=n.calculateTextureWidthAndHeight(o,4),[s,l]=[u/4,a],c=`
      vec4 get_MeanAndVariance(int[2] mv) {
        int offset = indicesToOffset_MeanAndVariance(mv);
        vec2 coords = offsetToCoords(offset, ${s}, ${l});
        return ${i.texture2D}(MeanAndVariance, coords);
      }

      float process(int[4] indices) {
        int mv[2];
        mv[0] = indices[0];
        mv[1] = indices[1];
        vec4 mean_and_variance = get_MeanAndVariance(mv);
        float mean = mean_and_variance.r;
        float variance = mean_and_variance.g;

        int sb[1];
        sb[0] = indices[1];
        float scale = _Scale(sb);
        float b = _B(sb);

        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;
      }`;return{...e,output:{dims:r.dims,type:r.type,textureType:0},variables:[{name:"epsilon",type:"float",data:t}],shaderSource:c}},jv=(n,e,r,t)=>{let o={...Uv,cacheHint:`${r}`};return{...o,get:()=>Hv(n,o,e,r,t)}},qv=n=>{if(!n||n.length!==3)throw new Error("InstanceNormalization requires 3 inputs.");let e=n[0],r=n[1],t=n[2];if(e.dims.length<3||r.dims.length!==1||t.dims.length!==1)throw new Error("Invalid input shape.");if(r.dims[0]!==e.dims[1]||t.dims[0]!==e.dims[1])throw new Error("Input shapes are mismatched.");if(e.type!=="float32"&&e.type!=="float64"||r.type!=="float32"&&r.type!=="float64"||t.type!=="float32"&&t.type!=="float64")throw new Error("Invalid input type.");if(n[0].dims.length!==4)throw new Error("Only support 4-D input shape.")}});function Kv(n,e){let r=n[0].dims[1],t=n[0].dims.length,o=-Math.floor((e.size-1)/2),i=Math.ceil((e.size-1)/2),u=`float(${e.alpha}) / float(${e.size})`,a=`float(${e.bias})`,s=`float(${e.beta})`,l=`
    float process(int indices[${t}]) {
        int c = indices[1];
        float x = _X(indices);
        float square_sum = 0.0;

        for (int i = ${o}; i <= ${i}; i++) {
          int idx = c + i;
          if (c >= 0 && c < ${r}) {
            indices[1] = idx;
            float j = _X(indices);
            square_sum += j * j;
          }
        }
        return x / pow(${a} + ${u} * square_sum, ${s});
    }`;return{...wf,cacheHint:e.cacheKey,output:{dims:n[0].dims,type:n[0].type,textureType:0},shaderSource:l}}function Yv(n,e){return{...wf,cacheHint:e.cacheKey,get:()=>Kv(n,e)}}var vf,xf,wf,Xv,Tf=P(()=>{"use strict";ft();Oe();vf=(n,e,r)=>(Xv(e),[n.run(Yv(e,r),e)]),xf=n=>{let e=n.attributes.getFloat("alpha",1e-4),r=n.attributes.getFloat("beta",.75),t=n.attributes.getFloat("bias",1),o=n.attributes.getInt("size");return we({alpha:e,beta:r,bias:t,size:o})},wf={name:"LRN",inputNames:["X"],inputTypes:[0]};Xv=n=>{if(!n||n.length!==1)throw new Error("LRN requires 1 input.");if(n[0].dims.length!==4)throw new Error('currently only support LRN for input with "NCHW" format');if(n[0].type!=="float32")throw new Error("input should be float type")}});var Jv,ts,$f,Sf,If,Zv,Qv,ex,tx,rx,nx,ox,ix,_f=P(()=>{"use strict";ft();Le();Je();Oe();Jv={name:"Pad",inputNames:["A"],inputTypes:[0]},ts=(n,e,r)=>(ex(e),[n.run({...Jv,cacheHint:r.cacheKey,get:()=>Qv(n,e[0],r)},e)]),$f=n=>{let e=n.attributes.getString("mode","constant"),r=n.attributes.getFloat("value",0),t=n.attributes.getInts("pads");return we({mode:e,value:r,pads:t})},Sf=(n,e,r)=>{tx(e);let t=Zv(n,e,r);return ts(n,[e[0]],t)},If=n=>n.attributes.getString("mode","constant"),Zv=(n,e,r)=>{if(!n.session.isInitializer(e[1].dataId)||e.length>=3&&!n.session.isInitializer(e[2].dataId))throw new Error("dynamic pad attributes are not allowed");let t=Array.from(e[1].integerData),o=e.length>=3?e[2].floatData[0]:0;return we({mode:r,pads:t,value:o})},Qv=(n,e,r)=>{let t=re.padShape(e.dims.slice(),r.pads),o=t.length,u=`
      ${rx(n,e,r)}
      float process(int[${o}] indices) {
          return padA(indices);
      }`;return{name:"Pad",inputNames:["A"],inputTypes:[0],output:{dims:t,type:e.type,textureType:0},shaderSource:u}},ex=n=>{if(!n||n.length!==1)throw new Error("Pad requires 1 input");if(n[0].type!=="float32"&&n[0].type!=="float64")throw new Error("Invalid input type.")},tx=n=>{if(!n||n.length!==2&&n.length!==3)throw new Error("Pad requires 2 or 3 inputs");if(n[1].type!=="int32")throw new Error("Invalid input type.");if(n.length>=3&&n[2].type==="string")throw new Error("Invalid input type.")},rx=(n,e,r)=>{let t=se(n.session.backend.glContext.version),[o,i]=n.calculateTextureWidthAndHeight(e.dims,0),u=re.computeStrides(e.dims);switch(r.mode){case"constant":return nx(t,e.dims,u,o,i,r.pads,r.value);case"reflect":return ox(t,e.dims,u,o,i,r.pads);case"edge":return ix(t,e.dims,u,o,i,r.pads);default:throw new Error("Invalid mode")}},nx=(n,e,r,t,o,i,u)=>{let a=e.length,s="";for(let l=a-1;l>=0;--l)s+=`
        k = m[${l}] - ${i[l]};
        if (k < 0)  return constant;
        if (k >= ${e[l]}) return constant;
        offset += k * ${r[l]};
        `;return`
      float padA(int m[${a}]) {
        const float constant = float(${u});
        int offset = 0;
        int k = 0;
        ${s}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${n.texture2D}(A, coords));
        return value;
      }
      `},ox=(n,e,r,t,o,i)=>{let u=e.length,a="";for(let s=u-1;s>=0;--s)a+=`
        k = m[${s}] - ${i[s]};
        if (k < 0) { k = -k; }
        {
          const int _2n_1 = ${2*(e[s]-1)};
          k = int( mod( float(k), float(_2n_1) ) ) ;
          if(k >= ${e[s]}) { k = _2n_1 - k; }
        }
        offset += k * ${r[s]};
        `;return`
      float padA(int m[${u}]) {
        int offset = 0;
        int k = 0;
        ${a}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${n.texture2D}(A, coords));
        return value;
      }
      `},ix=(n,e,r,t,o,i)=>{let u=e.length,a="";for(let s=u-1;s>=0;--s)a+=`
        k = m[${s}] - ${i[s]};
        if (k < 0)  k = 0;
        if (k >= ${e[s]}) k = ${e[s]-1};
        offset += k * ${r[s]};
      `;return`
      float padA(int m[${u}]) {
        int offset = 0;
        int k = 0;
        ${a}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${n.texture2D}(A, coords));
        return value;
      }
      `}});var Of,Ef,Cf,Pf,Df,kf,Bf,Rf,Mf,ax,Af,Lf,ci,Nf,li,sx,zf=P(()=>{"use strict";ft();Le();Oe();Of=(n,e,r)=>{ci(e);let t={name:"AveragePool",inputNames:["X"],inputTypes:[0],cacheHint:r.cacheKey};return[n.run({...t,get:()=>Cf(e,t,!1,r)},e)]},Ef=n=>{let e=n.attributes.getString("auto_pad","NOTSET"),r=n.attributes.getInt("ceil_mode",0),t=n.attributes.getInt("count_include_pad",0)!==0,o=n.attributes.getInts("kernel_shape"),i=n.attributes.getInts("strides",[]),u=n.attributes.getInts("pads",[]);if(r!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return we({autoPad:e,ceilMode:r,countIncludePad:t,kernelShape:o,strides:i,pads:u})},Cf=(n,e,r,t)=>{let[o,i]=Mf(n,t,r),u=re.size(o.kernelShape),a="value += _X(x);",s="";o.countIncludePad?s+=`value /= float(${u});`:s+=`value /= float(${u} - pad);`;let c=`
        ${Nf(n[0].dims,o,a,s,"0.0")}
      `;return{...e,output:{dims:i,type:n[0].type,textureType:0},shaderSource:c}},Pf=(n,e,r)=>{ci(e);let t={name:"GlobalAveragePool",inputNames:["X"],inputTypes:[0],cacheHint:`${r.countIncludePad}`};return[n.run({...t,get:()=>Cf(e,t,!0,r)},e)]},Df=n=>{let e=n.attributes.getInt("count_include_pad",0)!==0;return we({autoPad:"",ceilMode:0,countIncludePad:e,kernelShape:[],strides:[],pads:[]})},kf=(n,e,r)=>{ci(e);let t={name:"MaxPool",inputNames:["X"],inputTypes:[0],cacheHint:r.cacheKey};return[n.run({...t,get:()=>Rf(e,t,!1,r)},e)]},Bf=n=>{let e=n.attributes.getString("auto_pad","NOTSET"),r=n.attributes.getInt("ceil_mode",0),t=n.attributes.getInts("kernel_shape"),o=n.attributes.getInts("strides",[]),i=n.attributes.getInts("pads",[]),u=n.attributes.getInt("storage_order",0),a=n.attributes.getInts("dilations",[]);if(u!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(r!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return we({autoPad:e,ceilMode:r,countIncludePad:!1,kernelShape:t,strides:o,pads:i,storageOrder:u,dilations:a})},Rf=(n,e,r,t)=>{let[o,i]=Mf(n,t,r),u=`
      value = max(_X(x), value);
    `,a="",l=`
      ${Nf(n[0].dims,o,u,a,"-1e5")}
    `;return{...e,output:{dims:i,type:n[0].type,textureType:0},shaderSource:l}},Mf=(n,e,r)=>{let t=n[0].dims.slice(),o=Object.hasOwnProperty.call(e,"dilations"),i=e.kernelShape.slice(),u=e.strides.slice(),a=o?e.dilations.slice():[],s=e.pads.slice();Ur.adjustPoolAttributes(r,t,i,u,a,s);let l=Ur.computePoolOutputShape(r,t,u,a,i,s,e.autoPad),c=Object.assign({},e);return o?Object.assign(c,{kernelShape:i,strides:u,pads:s,dilations:a,cacheKey:e.cacheKey}):Object.assign(c,{kernelShape:i,strides:u,pads:s,cacheKey:e.cacheKey}),[c,l]},ax={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},Af={name:"GlobalMaxPool",inputNames:["X"],inputTypes:[0]},Lf=(n,e)=>(ci(e),[n.run({...Af,get:()=>Rf(e,Af,!0,ax)},e)]),ci=n=>{if(!n||n.length!==1)throw new Error("Pool ops requires 1 input.");if(n[0].type!=="float32"&&n[0].type!=="float64")throw new Error("Invalid input type.")},Nf=(n,e,r,t,o)=>{let i=n.length;if(e.kernelShape.length<=2){let u=e.kernelShape[e.kernelShape.length-1],a=e.strides[e.strides.length-1],s=e.pads[e.pads.length/2-1],l=e.pads[e.pads.length-1],c=n[i-1],p="",h="",g="";if(s+l!==0?p=`
          for (int i = 0; i < ${u}; i++) {
            x[${i} - 1] = indices[${i} - 1] * ${a} - ${s} + i;
            if (x[${i} - 1] < 0 || x[${i} - 1] >= ${c}) {
              pad++;
              continue;
            }
            ${r}
          }`:p=`
          for (int i = 0; i < ${u}; i++) {
            x[${i} - 1] = indices[${i} - 1] * ${a} - ${s} + i;
            ${r}
          }`,e.kernelShape.length===2){let b=e.kernelShape[e.kernelShape.length-2],w=e.strides[e.strides.length-2],S=e.pads[e.pads.length/2-2],O=e.pads[e.pads.length-2],E=n[i-2];S+O!==0?h=`
            for (int j = 0; j < ${b}; j++) {
              x[${i} - 2] = indices[${i} - 2] * ${w} - ${S} + j;
              if (x[${i} - 2] < 0 || x[${i} - 2] >= ${E}) {
                pad+= ${u};
                continue;
              }
          `:h=`
            for (int j = 0; j < ${b}; j++) {
              x[${i} - 2] = indices[${i} - 2] * ${w} - ${S} + j;
            `,g=`
          }
        `}return`
        float process(int indices[${i}]) {
          int x[${i}];
          copyVec(indices, x);

          float value = ${o};
          int pad = 0;
          ${h}
          ${p}
          ${g}
          ${t}
          return value;
        }
      `}else{let u=re.size(e.kernelShape),a=re.computeStrides(e.kernelShape),s=a.length,l=e.pads.length,c=sx(s),p=li(n,"inputDims"),h=li(e.pads,"pads"),g=li(a,"kernelStrides"),y=li(e.strides,"strides"),b=e.pads.reduce((O,E)=>O+E),w="";return b?w=`
            if (x[j] >= inputDims[j] || x[j] < 0) {
              pad++;
              isPad = true;
              break;
            }
          }
          if (!isPad) {
            ${r}
          }`:w=`
          }
          ${r}
        `,`
        ${c}
        float process(int indices[${i}]) {
          int x[${i}];
          copyVec(indices, x);
          int offset[${s}];
          int pads[${l}];
          int inputDims[${i}];
          int kernelStrides[${s}];
          int strides[${s}];
          ${h}
          ${p}
          ${y}
          ${g}

          float value = ${o};
          int pad = 0;
          bool isPad = false;
          for (int i = 0; i < ${u}; i++) {
            offsetToIndices(i, kernelStrides, offset);
            isPad = false;
            for (int j = ${i} - ${s}; j < ${i}; j++) {
              x[j] = indices[j] * strides[j - ${i} + ${s}]
                + offset[j - ${i} + ${s}] - pads[j - 2];
              ${w}
          }
          ${t}

          return value;
        }
      `}},li=(n,e)=>{let r="";for(let t=0;t<n.length;t++)r+=`
      ${e}[${t}] = ${n[t]};
    `;return r},sx=n=>`
  void offsetToIndices(int offset, int[${n}] strides, out int[${n}] indices) {
    if (${n} == 0) {
      return;
    }
    for (int i = 0; i < ${n} - 1; ++i) {
      indices[i] = offset / strides[i];
      offset -= indices[i] * strides[i];
    }
    indices[${n} - 1] = offset;
  }`});var Jr,Cr,ux,lx,Ff,Gf,Wf,Vf,Uf,Hf,jf,qf=P(()=>{"use strict";ft();to();Le();Oe();Jr=(n,e,r,t,o)=>{lx(e);let i={name:t,inputNames:["A"],inputTypes:[0]};return[n.run({...i,cacheHint:r.cacheKey,get:()=>ux(n,e,r,t,o,i)},e)]},Cr=n=>{let e=n.attributes.getInts("axes",[]),r=n.attributes.getInt("keepdims",1)===1;return we({axes:e,keepDims:r})},ux=(n,e,r,t,o,i)=>{let u=[],a=e[0].dims.length||1,s=[],l=re.normalizeAxes(r.axes,e[0].dims.length),c=o(e,l),p=c[1];for(let y=0;y<e[0].dims.length;y++)l.indexOf(y)>=0||l.length===0?(r.keepDims&&u.push(1),p=`
          for(int j${y} = 0; j${y} < ${e[0].dims[y]}; j${y}++) {
            inputIdx[${y}] = j${y};
            ${p}
          }`):(s.push(`inputIdx[${y}] = outputIdx[${u.length}];`),u.push(e[0].dims[y]));let g=`
      float process(int outputIdx[${u.length||1}]) {
        float value;                 // final result
        int inputIdx[${a}];      // addressing input data
        ${s.join(`
`)}
        ${c[0]}       // init ops for reduce max/min
        ${p}
        ${c[2]}       // final computation for reduce mean
        return value;
      }`;return{...i,output:{dims:u,type:e[0].type,textureType:0},shaderSource:g}},lx=n=>{if(!n||n.length!==1)throw new Error("Reduce op requires 1 input.");if(Er.indexOf(n[0].type)===-1)throw new Error("Invalid input type.")},Ff=(n,e,r)=>Jr(n,e,r,"ReduceSum",()=>["value = 0.0;","value += _A(inputIdx);",""]),Gf=(n,e,r)=>Jr(n,e,r,"ReduceMean",(o,i)=>{let u=1;for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&(u*=o[0].dims[a]);return["value = 0.0;","value += _A(inputIdx);",`value /= ${u}.;`]}),Wf=(n,e,r)=>Jr(n,e,r,"ReduceMax",(o,i)=>{let u=[];for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&u.push(`inputIdx[${a}] = 0;`);return[`${u.join(`
`)}
value = _A(inputIdx);`,"value = max(value, _A(inputIdx));",""]}),Vf=(n,e,r)=>Jr(n,e,r,"ReduceMin",(o,i)=>{let u=[];for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&u.push(`inputIdx[${a}] = 0;`);return[`${u.join(`
`)}
value = _A(inputIdx);`,"value = min(value, _A(inputIdx));",""]}),Uf=(n,e,r)=>Jr(n,e,r,"ReduceProd",()=>["value = 1.0;","value *= _A(inputIdx);",""]),Hf=(n,e,r)=>Jr(n,e,r,"ReduceLogSum",()=>["value = 0.0;","value += _A(inputIdx);","value = log(value);"]),jf=(n,e,r)=>Jr(n,e,r,"ReduceLogSumSquare",()=>["float t; value = 0.0;","t = _A(inputIdx); value += t * t;",""])});var Kf,Yf=P(()=>{"use strict";Le();Kf=(n,e)=>{let r=re.calculateReshapedDims(e[0].dims,e[1].integerData);return n.session.pack?[n.reshapePacked(e[0],r)]:[n.reshapeUnpacked(e[0],r)]}});var Xf,rs,Jf,Zf,ro,cx,ns,di,os=P(()=>{"use strict";ft();Je();Oe();Xf={name:"Upsample",inputNames:["X"],inputTypes:[0]},rs=(n,e,r)=>(ns(e,r),[n.run({...Xf,cacheHint:r.cacheKey,get:()=>cx(n,e,r)},e)]),Jf=n=>ro(n,7),Zf=n=>ro(n,9),ro=(n,e)=>{let r=e>=10,t=n.attributes.getString("mode","nearest");if(t!=="nearest"&&t!=="linear"&&(e<11||t!=="cubic"))throw new Error(`unrecognized mode: ${t}`);let o=[];e<9&&(o=n.attributes.getFloats("scales"),di(o,t,r));let i=n.attributes.getFloat("extrapolation_value",0),u=e>10?n.attributes.getString("coordinate_transformation_mode","half_pixel"):"asymmetric";if(["asymmetric","pytorch_half_pixel","tf_half_pixel_for_nn","align_corners","tf_crop_and_resize","half_pixel"].indexOf(u)===-1)throw new Error(`coordinate_transform_mode '${u}' is not supported`);let a=u==="tf_crop_and_resize",s=a,l=t==="nearest"&&e>=11?n.attributes.getString("nearest_mode","round_prefer_floor"):"";if(["round_prefer_floor","round_prefer_ceil","floor","ceil",""].indexOf(l)===-1)throw new Error(`nearest_mode '${l}' is not supported`);let c=n.attributes.getFloat("cubic_coeff_a",-.75),p=n.attributes.getInt("exclude_outside",0)!==0;if(p&&t!=="cubic")throw new Error("exclude_outside can be set to 1 only when mode is CUBIC.");let h=e<11?!0:t==="nearest"&&u==="asymmetric"&&l==="floor",g=0,y=0,b=0;return e>10?n.inputs.length>2?(g=1,y=2,b=3):(y=1,b=2):e===9&&(y=1),we({opset:e,isResize:r,mode:t,scales:o,extrapolationValue:i,coordinateTransformMode:u,useExtrapolation:s,needRoiInput:a,nearestMode:l,cubicCoefficientA:c,excludeOutside:p,useNearest2xOptimization:h,roiInputIdx:g,scalesInputIdx:y,sizesInputIdx:b})},cx=(n,e,r)=>{let t=se(n.session.backend.glContext.version),[o,i]=n.calculateTextureWidthAndHeight(e[0].dims,0),u=e[0].dims.map((b,w)=>Math.floor(b*r.scales[w])),[a,s]=n.calculateTextureWidthAndHeight(u,0),l=u.length,c=new Array(l),p=new Array(l),h=`
      int output_pitches[${l}];
      int input_pitches[${l}];
      `;for(let b=l-1;b>=0;b--)c[b]=b===l-1?1:c[b+1]*u[b+1],p[b]=b===l-1?1:p[b+1]*e[0].dims[b+1],h+=`
        output_pitches[${b}] = ${c[b]};
        input_pitches[${b}] = ${p[b]};
        `;let g=`
      float getInputFloat(int index) {
        vec2 coords = offsetToCoords(index, ${o}, ${i});
        float value = getColorAsFloat(${t.texture2D}(X, coords));
        return value;
      }
      `,y=r.mode==="nearest"?`
    ${g}
    float process(int indices[${l}]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${s});

      ${h}

      int d, m;
      for (int dim = 0; dim < ${l}; ++dim) {
        d = output_index / output_pitches[dim];
        m = output_index - d * output_pitches[dim];
        output_index = m;

        if (scales[dim] != 1 && d > 0) {
          int d2 = d / scales[dim];
          m = d - d2 * scales[dim];
          d = d2;
        }
        input_index += input_pitches[dim] * d;
      }

      return getInputFloat(input_index);
    }`:l===4?`
    ${g}
    float process(int indices[4]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${s});

      ${h}

      int m;
      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m / output_pitches[1];
      m = m - index_of_dim1 * output_pitches[1];
      index_of_dim2 = m / output_pitches[2];
      m = m - index_of_dim2 * output_pitches[2];
      index_of_dim3 = m;

      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;
      index_of_input_dim2 = index_of_dim2 / scales[2];
      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];
      index_of_input_dim3 = index_of_dim3 / scales[3];
      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];

      input_index = index_of_dim0 * input_pitches[0] +
            index_of_dim1 * input_pitches[1] +
            index_of_input_dim2 * input_pitches[2] +
            index_of_input_dim3;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim2 = false;
      if (index_of_input_dim2 == (${e[0].dims[2]} - 1)) {
        // It's the end in dimension 2
        x01 = x00;
        end_of_dim2 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[2]);
      }

      if (index_of_input_dim3 == (input_pitches[2] - 1)) {
        // It's the end in dimension 3
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);
    }`:`
    ${g}
    float process(int indices[2]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${s});

      ${h}

      int m;
      int index_of_dim0, index_of_dim1;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m;

      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;
      index_of_input_dim0 = index_of_dim0 / scales[0];
      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];
      index_of_input_dim1 = index_of_dim1 / scales[1];
      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];

      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim0 = false;
      if (index_of_input_dim0 == (${e[0].dims[0]} - 1)) {
        // It's the end in dimension 0
        x01 = x00;
        end_of_dim0 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[0]);
      }

      if (index_of_input_dim1 == (input_pitches[0] - 1)) {
        // It's the end in dimension 1
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);
    }`;return{...Xf,output:{dims:u,type:e[0].type,textureType:0},shaderSource:y,variables:[{name:"scales",type:"int",arrayLength:r.scales.length,data:r.scales.map(b=>Math.ceil(b))}]}},ns=(n,e)=>{if(!n||e.opset<9&&n.length!==1||e.opset>=9&&e.opset<11&&n.length!==2||e.opset>=11&&n.length<2)throw new Error("invalid inputs.");if(e.scales.length>0&&n[0].dims.length!==e.scales.length)throw new Error("Invalid input shape.");if(n[0].type==="string")throw new Error("Invalid input tensor types.")},di=(n,e,r)=>{if(r){for(let t of n)if(t<=0)throw new Error("Scale value should be greater than 0.")}else for(let t of n)if(t<1)throw new Error("Scale value should be greater than or equal to 1.");if((e==="linear"||e==="cubic")&&n.length!==2&&(n.length!==4||n[0]!==1||n[1]!==1))throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic')         or 4-D inputs with the corresponding outermost 2 scale values being 1         in the ${r?"Resize":"Upsample"} opeartor.`)}});var is,as,Qf,ep,dx,fx,px,hx,tp=P(()=>{"use strict";Je();Oe();ir();Kr();os();is={name:"Resize",inputNames:["A"],inputTypes:[2]},as=(n,e,r)=>(ns(e,r),[n.run({...is,cacheHint:r.cacheKey,get:()=>dx(n,e,r)},e)]),Qf=n=>ro(n,10),ep=n=>ro(n,11),dx=(n,e,r)=>{let t=se(n.session.backend.glContext.version),[o,i]=fx(e,r);if(o.every(E=>E===1)&&r.coordinateTransformMode!=="tf_crop_and_resize")return{...is,output:{dims:i,type:e[0].type,textureType:2},hasMain:!0,shaderSource:`void main() {
                    vec4 v = ${t.texture2D}(X, TexCoords);
                    ${t.output} = v;
                }`};let a=i.length;if(a<2)throw new Error(`output dimension should be at least 2, but got ${a}`);let s=i[a-2],l=i[a-1],c=e[0].dims;if(a!==c.length)throw new Error(`output dimension should match input ${c.length}, but got ${a}`);let p=c[a-2],h=c[a-1],g=o[a-2],y=o[a-1],b="";if(r.mode!=="linear")throw new Error(`resize (packed) does not support mode: '${r.mode}'`);switch(r.coordinateTransformMode){case"asymmetric":b=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return vec4(coords) / scaleWHWH;
                    }
                `;break;case"half_pixel":b=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;
                    }
                `;break;case"pytorch_half_pixel":b=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 fcoords = vec4(coords);
                        return vec4(
                            ${l}.0 > 1.0 ? (fcoords.x + 0.5) / scaleWHWH.x - 0.5 : 0.0,
                            ${s}.0 > 1.0 ? (fcoords.y + 0.5) / scaleWHWH.y - 0.5 : 0.0,
                            ${l}.0 > 1.0 ? (fcoords.z + 0.5) / scaleWHWH.z - 0.5 : 0.0,
                            ${s}.0 > 1.0 ? (fcoords.w + 0.5) / scaleWHWH.w - 0.5 : 0.0
                          );
                    }
                `;break;case"align_corners":b=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 resized = vec4(${l}.0 - 1.0, ${s}.0 - 1.0, ${l}.0 - 1.0,
                            ${s}.0 - 1.0);
                        vec4 original = vec4(${h}.0 - 1.0, ${p}.0 - 1.0, ${h}.0 - 1.0,
                            ${p}.0 - 1.0);
                        vec4 new_scale = original / resized;
                        return vec4(coords) * new_scale;
                    }
                `;break;default:throw new Error(`resize (packed) does not support coordinateTransformMode:                                 '${r.coordinateTransformMode}'`)}let w=Tt(a),S=ar(),O=`
            const vec2 inputWH = vec2(${p}.0, ${h}.0);
            const vec4 scaleWHWH = vec4(float(${g}), float(${y}), float(${g}), float(${y}));
            ${S}
            ${b}
            float getAValue(int x10, int r, int c, int d) {
                return getChannel(getA(x10, r, c, d), vec2(c, d));
            }
            void main() {
                ${w} rc = getOutputCoords();

                int batch = rc[0];
                int depth = rc[1];

                // retrieve the 4 coordinates that is used in the 4 packed output values.
                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);

                // calculate the source index in fraction
                vec4 sourceFrac = getSourceFracIndex(coords);

                // get the lower and upper bound of the 4 values that will be packed into one texel.
                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));
                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));
                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));
                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));

                bool hasNextRow = rc.w < ${s-1};
                bool hasNextCol = rc.z < ${l-1};

                // pack x00, x01, x10, x11's top-left corner into one vec4 structure
                vec4 topLeft = vec4(
                    getAValue(batch, depth, x00.x, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);

                // pack x00, x01, x10, x11's top-right corner into one vec4 structure
                vec4 topRight = vec4(
                    getAValue(batch, depth, x00.x, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);

                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure
                vec4 bottomLeft = vec4(
                    getAValue(batch, depth, x00.z, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);

                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure
                vec4 bottomRight = vec4(
                    getAValue(batch, depth, x00.z, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);

                // calculate the interpolation fraction on u and v direction
                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);
                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));

                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);
                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);
                vec4 newValue = mix(top, bottom, clampFrac.xxzz);

                ${t.output} = vec4(newValue);
            }
        `;return{...is,output:{dims:i,type:e[0].type,textureType:2},hasMain:!0,shaderSource:O}},fx=(n,e)=>{let t=n[0].dims,o=e.scales,i;if(o.length===0){let a=n[e.scalesInputIdx];if(a&&a.size!==0){if(n[e.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");o=px(a,e.mode,e.isResize)}else{let s=n[e.sizesInputIdx];if(!s||s.size===0)throw new Error("Either scales or sizes MUST be provided as input.");i=Array.from(s.integerData),o=hx(i,t,e.mode,e.isResize)}}else if(n[e.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");let u=i||t.map((a,s)=>Math.floor(a*o[s]));return[o,u]},px=(n,e,r)=>{let t=Array.from(n.floatData);return di(t,e,r),t},hx=(n,e,r,t)=>{let o=e.length,i=new Array(o);for(let u=0,a=o;u<a;u++)if(e[u]===0){if(n[u]!==0)throw new Error("Input dim is zero but required output dim is non-zero.");i[u]=1}else i[u]=n[u]/e[u];return di(i,r,t),i}});var rp,mx,np=P(()=>{"use strict";qr();rp=(n,e)=>(mx(e),[new ut([e[0].dims.length],"int32",void 0,void 0,new Int32Array(e[0].dims))]),mx=n=>{if(!n||n.length!==1)throw new Error("Shape requires 1 input.")}});var ss,op,ip,ap,gx,sp,bx,yx,up=P(()=>{"use strict";ft();to();Le();Oe();ss={name:"Slice",inputNames:["A"],inputTypes:[0]},op=(n,e,r)=>(gx(e),[n.run({...ss,cacheHint:r.cacheKey,get:()=>ap(n,e[0],r)},e)]),ip=n=>{let e=n.attributes.getInts("starts"),r=n.attributes.getInts("ends"),t=n.attributes.getInts("axes",[]);return we({starts:e,ends:r,axes:t})},ap=(n,e,r)=>{let t=r.axes.length===0?e.dims.slice(0).map((p,h)=>h):r.axes,o=re.normalizeAxes(t,e.dims.length),i=r.starts.map((p,h)=>p>e.dims[o[h]]-1?e.dims[o[h]]:re.normalizeAxis(p,e.dims[o[h]])),u=r.ends.map((p,h)=>p>e.dims[o[h]]-1?e.dims[o[h]]:re.normalizeAxis(p,e.dims[o[h]])),a=e.dims.slice(),s=[];for(let p=0;p<o.length;p++)a[o[p]]=u[p]-i[p],i[p]>0&&s.push(`outputIdx[${o[p]}] += ${i[p]};`);let c=`
      float process(int outputIdx[${a.length}]) {
        ${s.join(`
      `)}
        return _A(outputIdx);
      }`;return{...ss,output:{dims:a,type:e.type,textureType:0},shaderSource:c}},gx=n=>{if(!n||n.length!==1)throw new Error("Slice requires 1 input.");if(Er.indexOf(n[0].type)===-1)throw new Error("Invalid input type.")},sp=(n,e)=>{yx(e);let r=bx(n,e);return[n.run({...ss,cacheHint:r.cacheKey,get:()=>ap(n,e[0],r)},[e[0]])]},bx=(n,e)=>{if(!n.session.isInitializer(e[1].dataId)||!n.session.isInitializer(e[2].dataId)||e.length>=4&&!n.session.isInitializer(e[3].dataId)||e.length>=5&&!n.session.isInitializer(e[4].dataId))throw new Error("dynamic slice attributes are not allowed");if(e.length>=5&&e[4].integerData.some(u=>u!==1))throw new Error("currently non-1 steps is not supported for Slice");let r=Array.from(e[1].integerData),t=Array.from(e[2].integerData),o=e.length>=4?Array.from(e[3].integerData):[],i=`${o};${r};${t}`;return{starts:r,ends:t,axes:o,cacheKey:i}},yx=n=>{if(!n||n.length<3||n.length>5)throw new Error("Invalid input number.");if(n[1].type!=="int32"||n[1].dims.length!==1)throw new Error("Invalid input type.");if(n[2].type!=="int32"||n[2].dims.length!==1)throw new Error("Invalid input type.");if(n.length>=4&&(n[3].type!=="int32"||n[3].dims.length!==1))throw new Error("Invalid input type.");if(n.length>=5&&(n[4].type!=="int32"||n[4].dims.length!==1))throw new Error("Invalid input type.")}});var lp,cp,dp,fp,pp,hp,mp,gp,vx,xx,wx,bp,yp=P(()=>{"use strict";ft();Le();Je();Oe();ui();lp={name:"SoftmaxComputeMax",inputNames:["A"],inputTypes:[0]},cp={name:"SoftmaxComputeScale",inputNames:["A","Max"],inputTypes:[0,0]},dp={name:"SoftMax",inputNames:["A","Max","Norm"],inputTypes:[0,0,0]},fp=(n,e,r)=>{bp(e);let t=e[0].dims.slice(),o=re.normalizeAxis(r.axis,t.length),i=re.sizeToDimension(t,o),u=re.sizeFromDimension(t,o);return gp(n,e,r,i,u)},pp=n=>we({axis:n.attributes.getInt("axis",1)}),hp=n=>we({axis:n.attributes.getInt("axis",-1)}),mp=(n,e,r)=>{bp(e);let t=e[0].dims.slice(),o=re.normalizeAxis(r.axis,t.length),i=t.length,u=o!==i-1,a=[],s=[],l=[],c;u&&(s=Array.from({length:i}).map((y,b)=>b),s[o]=i-1,s[i-1]=o,s.map(y=>a.push(t[y])),c=we({perm:s}),l=Xr(n,e,c));let p=u?re.sizeToDimension(a,i-1):re.sizeToDimension(t,i-1),h=u?re.sizeFromDimension(a,i-1):re.sizeFromDimension(t,i-1),g=gp(n,u?l:e,r,p,h);return u?Xr(n,g,c):g},gp=(n,e,r,t,o)=>{let i=vx(n,e[0],t,o,[t]),u=n.run({...lp,cacheHint:r.cacheKey,get:()=>i},e),a=xx(n,e[0],t,o,i.output.dims,[t]),s=n.run({...cp,cacheHint:r.cacheKey,get:()=>a},[e[0],u]),l=wx(n,e[0],t,o,i.output.dims,a.output.dims);return[n.run({...dp,cacheHint:r.cacheKey,get:()=>l},[e[0],u,s])]},vx=(n,e,r,t,o)=>{let[i,u]=n.calculateTextureWidthAndHeight(e.dims,0),a=o.length;if(r<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(o.length!==1)throw new Error("Dimensionality of the output should be 1");if(o[0]!==r)throw new Error("Shape of the output should be equal to logical row count");let s=se(n.session.backend.glContext.version),l=`
      float process(int[${a}] indices) {
        int logical_row_start_offset = indices[0] * ${t};

        float max = getColorAsFloat(${s.texture2D}(A, offsetToCoords(logical_row_start_offset, ${i},
        ${u} )));
        for(int i=1; i<${t}; ++i)
        {
          float current = getColorAsFloat(${s.texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${i}, ${u})));
          if(current > max)
          max = current;
        }

        return max;
      }`;return{...lp,output:{dims:o,type:e.type,textureType:0},shaderSource:l}},xx=(n,e,r,t,o,i)=>{let[u,a]=n.calculateTextureWidthAndHeight(e.dims,0),s=i.length;if(r<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(i.length!==1)throw new Error("Dimensionality of the output should be 1");if(i[0]!==r)throw new Error("Shape of the output should be equal to logical row count");if(o.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(o[0]!==r)throw new Error("Shape of the intermediate results should be equal to logical row count");let l=se(n.session.backend.glContext.version),c=`
      float process(int[${s}] indices) {
        int logical_row_start_offset = indices[0] * ${t};

        float norm_factor = 0.0;
        float max = _Max(indices);
        for(int i=0; i<${t}; ++i)
        {
          norm_factor += exp(getColorAsFloat(${l.texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${u}, ${a}))) - max);
        }

        return norm_factor;
      }`;return{...cp,output:{dims:i,type:e.type,textureType:0},shaderSource:c}},wx=(n,e,r,t,o,i)=>{let[u,a]=n.calculateTextureWidthAndHeight(e.dims,0),s=e.dims.length;if(r<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(o.length!==1||i.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(o[0]!==r||i[0]!==r)throw new Error("Shape of the intermediate results should be equal to logical row count");let l=`
      float process(int[${s}] indices) {

      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)
      int offset = coordsToOffset(TexCoords, ${u}, ${a});

      //determine the logical row for this index
      int logical_row_index[1];
      logical_row_index[0] = offset / ${t};

      float norm_factor = _Norm(logical_row_index);

      // avoid possible division by 0
      // if norm_facor is 0, all elements are zero
      // if so, return 0
      if(norm_factor == 0.0)
        return 0.0;

      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;
    }`;return{...dp,output:{dims:e.dims,type:e.type,textureType:0},shaderSource:l}},bp=n=>{if(!n||n.length!==1)throw new Error("Softmax requires 1 input.");if(n[0].type!=="float32"&&n[0].type!=="float64")throw new Error("Invalid input type")}});var vp,xp,wp,Tx,$x,Sx,Tp=P(()=>{"use strict";ft();Le();Oe();vp={name:"Split",inputNames:["A"],inputTypes:[0]},xp=(n,e,r)=>{Sx(e);let t=re.normalizeAxis(r.axis,e[0].dims.length),o=Tx(n,e,t,r),i=[];for(let u=0;u<o;++u)i.push(n.run({...vp,cacheHint:`${r.cacheKey};${u}`,get:()=>$x(n,e[0],r,t,u)},e));return i},wp=n=>{let e=n.attributes.getInt("axis",0),r=n.attributes.getInts("split",[]),t=n.outputs.length;return we({axis:e,split:r,numOutputs:t})},Tx=(n,e,r,t)=>{let[,o]=Yn.splitShape(e[0].dims,r,t.split,t.numOutputs);return o.length},$x=(n,e,r,t,o)=>{let[i,u]=Yn.splitShape(e.dims,t,r.split,r.numOutputs),a=u[o],s=i[o],c=`
      float process(int indices[${s.length}]) {
        indices[${t}] += ${a};
        return _A(indices);
      }
    `;return{...vp,cacheHint:`${r.cacheKey}:${o}`,output:{dims:s,type:e.type,textureType:0},shaderSource:c}},Sx=n=>{if(!n||n.length!==1)throw new Error("Split requires one input.");if(n[0].type!=="int8"&&n[0].type!=="uint8"&&n[0].type!=="int16"&&n[0].type!=="uint16"&&n[0].type!=="int32"&&n[0].type!=="uint32"&&n[0].type!=="float32"&&n[0].type!=="float64"&&n[0].type!=="bool")throw new Error("Invalid input type.")}});var us,$p,Sp,Ix,_x,Ip=P(()=>{"use strict";Le();us=(n,e,r)=>{Ix(e);let t=re.squeezeShape(e[0].dims,r);return[n.reshapeUnpacked(e[0],t)]},$p=(n,e)=>(_x(e),us(n,[e[0]],Array.from(e[1].integerData))),Sp=n=>n.attributes.getInts("axes"),Ix=n=>{if(!n||n.length!==1)throw new Error("Squeeze requires 1 input.");if(n[0].type==="string")throw new Error("invalid input tensor types.")},_x=n=>{if(!n||n.length!==2)throw new Error("Squeeze requires 2 inputs.");if(n[1].type!=="int32")throw new Error("Invalid input type.")}});var _p,Ax,Ox,Ap=P(()=>{"use strict";Je();Oe();_p=(n,e)=>{Ox(e);let r={name:"Sum",inputNames:e.map((o,i)=>`X${i}`),inputTypes:new Array(e.length).fill(0)};return[n.run({...r,get:()=>Ax(n,e,r)},e)]},Ax=(n,e,r)=>{let t=se(n.session.backend.glContext.version),o=e[0].dims.slice(),u=`
      void main() {
        vec4 result = ${e.map((a,s)=>`${t.texture2D}(X${s},TexCoords)`).join(" + ")};
        ${t.output} = result;
      }
    `;return{...r,output:{dims:o,type:e[0].type,textureType:0},hasMain:!0,shaderSource:u}},Ox=n=>{if(!n||n.length===0)throw new Error("Sum requires inputs.");let e=n[0].dims.length;for(let r=1;r<n.length;r++){if(e!==n[r].dims.length)throw new Error("Input shapes are mismatched.");for(let t=0;t<e;t++)if(n[0].dims[t]!==n[r].dims[t])throw new Error("Input shapes are not matched.")}if(n[0].type!=="float32"&&n[0].type!=="float64")throw new Error("Invalid input type.");for(let r=1;r<n.length;r++)if(n[0].type!==n[r].type)throw new Error("Input types are not matched.")}});var Op,Ex,Cx,Ep=P(()=>{"use strict";to();Oe();Op=(n,e)=>{Cx(e);let r={name:"Tile",inputNames:["A"],inputTypes:[0]};return[n.run({...r,get:()=>Ex(n,e,r)},e)]},Ex=(n,e,r)=>{let t=e[0].dims.slice(),o=new Array(t.length),i=[];for(let s=0;s<t.length;s++)o[s]=t[s]*e[1].numberData[s],i.push(`inputIdx[${s}] = int(mod(float(outputIdx[${s}]), ${t[s]}.));`);let u=o.length,a=`
      float process(int outputIdx[${u}]) {
        int inputIdx[${u}];
        ${i.join(`
`)}
        return _A(inputIdx);
      }
    `;return{...r,output:{dims:o,type:e[0].type,textureType:0},shaderSource:a}},Cx=n=>{if(!n||n.length!==2)throw new Error("Tile requires 2 input.");if(n[1].dims.length!==1)throw new Error("The second input shape must 1 dimension.");if(n[1].dims[0]!==n[0].dims.length)throw new Error("Invalid input shape.");if(Er.indexOf(n[0].type)===-1)throw new Error("Invalid input type.");if(n[1].type!=="int32"&&n[1].type!=="int16")throw new Error("Invalid repeat type.")}});var ls,Cp,Pp,Px,Dx,Dp=P(()=>{"use strict";Le();ls=(n,e,r)=>{Px(e);let t=re.unsqueezeShape(e[0].dims,r);return[n.reshapeUnpacked(e[0],t)]},Cp=(n,e)=>(Dx(e),ls(n,[e[0]],Array.from(e[1].integerData))),Pp=n=>n.attributes.getInts("axes"),Px=n=>{if(!n||n.length!==1)throw new Error("Unsqueeze requires 1 input.");if(n[0].type==="string")throw new Error("invalid input tensor types.")},Dx=n=>{if(!n||n.length!==2)throw new Error("Unsqueeze requires 2 inputs.");if(n[1].type!=="int32")throw new Error("Invalid input type.")}});var kp,Bp=P(()=>{"use strict";Vc();rd();id();dd();ii();Kd();ef();nf();sf();df();hf();yf();Tf();ai();_f();zf();qf();Yf();tp();np();up();yp();Tp();Ip();Ap();Ep();ui();ja();Dp();os();kp=[["Abs","","6+",fd],["Acos","","7+",pd],["Add","","7+",Uc],["And","","7+",Hc],["Asin","","7+",hd],["Atan","","7+",md],["AveragePool","","7+",Of,Ef],["BatchNormalization","","7+",Gc,Wc],["Cast","","6+",nd,od],["Ceil","","6+",yd],["Clip","","6-10",Ua,gd],["Clip","","11+",bd],["Concat","","4+",ud,cd],["Conv","","1+",Za,Qa],["ConvTranspose","","1+",jd,qd],["Cos","","7+",vd],["Div","","7+",jc],["Dropout","","7+",Ha],["DepthToSpace","","1+",Zd,Qd],["Equal","","7+",qc],["Elu","","6+",xd,wd],["Exp","","6+",Td],["Flatten","","1+",tf,rf],["Floor","","6+",$d],["FusedConv","com.microsoft","1+",Za,Qa],["Gather","","1+",of,af],["Gemm","","7-10",es,lf],["Gemm","","11+",es,cf],["GlobalAveragePool","","1+",Pf,Df],["GlobalMaxPool","","1+",Lf],["Greater","","7+",Kc],["Identity","","1+",Ha],["ImageScaler","","1+",ff,pf],["InstanceNormalization","","6+",gf,bf],["LeakyRelu","","6+",Sd,Id],["Less","","7+",Yc],["LRN","","1+",vf,xf],["Log","","6+",_d],["MatMul","","1+",zd,Fd],["MaxPool","","1+",kf,Bf],["Mul","","7+",Xc],["Neg","","6+",Ad],["Not","","1+",Od],["Or","","7+",Jc],["Pad","","2-10",ts,$f],["Pad","","11+",Sf,If],["Pow","","7+",Zc],["PRelu","","7+",Qc],["ReduceLogSum","","1+",Hf,Cr],["ReduceMax","","1+",Wf,Cr],["ReduceMean","","1+",Gf,Cr],["ReduceMin","","1+",Vf,Cr],["ReduceProd","","1+",Uf,Cr],["ReduceSum","","1-12",Ff,Cr],["ReduceSumSquare","","1+",jf,Cr],["Relu","","6+",Ed],["Reshape","","5+",Kf],["Resize","","10",as,Qf],["Resize","","11+",as,ep],["Shape","","1+",rp],["Sigmoid","","6+",Cd],["Sin","","7+",Pd],["Slice","","10+",sp],["Slice","","1-9",op,ip],["Softmax","","1-12",fp,pp],["Softmax","","13+",mp,hp],["Split","","2-12",xp,wp],["Sqrt","","6+",Dd],["Squeeze","","1-12",us,Sp],["Squeeze","","13+",$p],["Sub","","7+",ed],["Sum","","6+",_p],["Tan","","7+",kd],["Tanh","","6+",Bd],["Tile","","6+",Op],["Transpose","","1+",Xr,Xd],["Upsample","","7-8",rs,Jf],["Upsample","","9",rs,Zf],["Unsqueeze","","1-12",ls,Pp],["Unsqueeze","","13+",Cp],["Xor","","7+",td]]});function Mp(n){let e={},r;for(;(r=Rp.exec(n))!==null;){let t=r[3].split(",").map(o=>{let i=o.trim().split(" ");return i&&i.length===2?{type:i[0],name:i[1]}:null}).filter(o=>o!==null);e[r[2]]={params:t,body:r[4]}}for(let t in e){let o=kx.replace("__FUNC__",t),i=new RegExp(o,"gm");for(;(r=i.exec(n))!==null;){let u=r[1],a=r[2],s=r[3].split(","),l=u?`${u} ${a};`:"",c=e[t].body,p="";e[t].params.forEach((g,y)=>{g&&(p+=`${g.type} ${g.name} = ${s[y]};
`)}),c=`${p}
 ${c}`,c=c.replace("return",`${a} = `);let h=`
      ${l}
      {
        ${c}
      }
      `;n=n.replace(r[0],h)}}return n=n.replace(Rp,""),n}var Rp,kx,Lp=P(()=>{"use strict";Rp=/@inline[\s\n\r]+(\w+)[\s\n\r]+([0-9a-zA-Z_]+)\s*\(([^)]*)\)\s*{(([^}]|[\n\r])*)}/gm,kx="(\\w+)?\\s+([_0-9a-zA-Z]+)\\s+=\\s+__FUNC__\\((.*)\\)\\s*;"});function wn(n,e){let r=[],t=[],o=e!=null&&Array.isArray(e)&&e.length===0,i=e==null||o?null:Bx(e,n).sort(),u=0;for(let a=0;a<n.length;++a){if(i!=null){if(i[u]===a&&n[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${n[a]}' is not 1`);(i[u]==null||i[u]>a)&&n[a]===1&&(r.push(n[a]),t.push(a)),i[u]<=a&&u++}n[a]!==1&&(r.push(n[a]),t.push(a))}return{newShape:r,keptDims:t}}function Bx(n,e){let r=e.length;return n=n==null?e.map((t,o)=>o):[].concat(n),mn(n.every(t=>t>=-r&&t<r),()=>`All values in axis param must be in range [-${r}, ${r}) but got axis ${n}`),mn(n.every(Rx),()=>`All values in axis param must be integers but got axis ${n}`),n.map(t=>t<0?r+t:t)}function Rx(n){return n%1===0}function Mx(n){if(n.length===0)return 1;let e=n[0];for(let r=1;r<n.length;r++)e*=n[r];return e}function Np(n){let e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}var fi,cs=P(()=>{"use strict";Pt();Le();fi=class{constructor(e){this.maxTextureSize=e}computeTextureWH(e,r){let t=this.computeTexture(e,r);return r&&r.isPacked&&(t[0]/=2,t[1]/=2),r&&r.reverseWH?[t[1],t[0]]:t}computeTexture(e,r){let t=r&&r.isPacked;if(e.length===0)return t?[2,2]:[1,1];let o=this.maxTextureSize;if(r&&r.breakAxis!==void 0){let a=r.breakAxis>=e.length?1:e.slice(r.breakAxis).reduce((l,c)=>l*c),s=r.breakAxis<=0?1:e.slice(0,r.breakAxis).reduce((l,c)=>l*c);if(a>o||s>o)ze.verbose("TextureLayout",`Given width/height preferences were unattainable: shape:${e}, breakAxis:${r.breakAxis}`);else return[a,s]}let i=e.slice(0);t&&(o=o*2,i=i.map((a,s)=>s>=i.length-2?i[s]%2===0?i[s]:i[s]+1:i[s]),i.length===1&&(i=[2,i[0]])),i.length!==2&&(i=wn(i).newShape);let u=Mx(i);return i.length<=1&&u<=o?[1,u]:i.length===2&&i[0]<=o&&i[1]<=o?i:i.length===3&&i[0]*i[1]<=o&&i[2]<=o?[i[0]*i[1],i[2]]:i.length===3&&i[0]<=o&&i[1]*i[2]<=o?[i[0],i[1]*i[2]]:i.length===4&&i[0]*i[1]*i[2]<=o&&i[3]<=o?[i[0]*i[1]*i[2],i[3]]:i.length===4&&i[0]<=o&&i[1]*i[2]*i[3]<=o?[i[0],i[1]*i[2]*i[3]]:t?Np(u/4).map(a=>a*2):Np(u)}}});var pi,zp=P(()=>{"use strict";Le();yr();Je();cs();ir();pi=class extends Rt{constructor(r){super(r)}getFunctions(){return{...this.offsetToCoords(),...this.coordsToOffset(),...this.toVec(),...this.valueFrom(),...this.getCommonUtilFuncs(),...this.getInputsSamplingSnippets(),...this.getOutputSamplingSnippet()}}getCustomTypes(){return{}}offsetToCoords(){let r="offsetToCoords";return{offsetToCoords:new Y(`
      vec2 ${r}(int offset, int width, int height) {
        int t = offset / width;
        int s = offset - t*width;
        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);
        return coords;
      }
      `)}}coordsToOffset(){let r="coordsToOffset";return{coordsToOffset:new Y(`
      int ${r}(vec2 coords, int width, int height) {
        float s = coords.s * float(width);
        float t = coords.t * float(height);
        int offset = int(t) * width + int(s);
        return offset;
      }
      `)}}getOutputSamplingSnippet(){let r=this.context.outputTextureLayout;return r.isPacked?this.getPackedOutputSamplingSnippet(r):this.getUnpackedOutputSamplingSnippet(r)}getPackedOutputSamplingSnippet(r){let t=r.unpackedShape,o=[r.width,r.height],i={},u="getOutputCoords";switch(t.length){case 0:i[u]=this.getOutputScalarCoords();break;case 1:i[u]=this.getOutputPacked1DCoords(t,o);break;case 2:i[u]=this.getOutputPacked2DCoords(t,o);break;case 3:i[u]=this.getOutputPacked3DCoords(t,o);break;default:i[u]=this.getOutputPackedNDCoords(t,o)}let s=`
      void setOutput(vec4 val) {
        ${se(this.context.glContext.version).output} = val;
      }
    `,l="floatTextureSetRGBA";return i[l]=new Y(s),i}getUnpackedOutputSamplingSnippet(r){let t=r.unpackedShape,o=[r.width,r.height],i={},u="getOutputCoords";switch(t.length){case 0:i[u]=this.getOutputScalarCoords();break;case 1:i[u]=this.getOutputUnpacked1DCoords(t,o);break;case 2:i[u]=this.getOutputUnpacked2DCoords(t,o);break;case 3:i[u]=this.getOutputUnpacked3DCoords(t,o);break;case 4:i[u]=this.getOutputUnpacked4DCoords(t,o);break;case 5:i[u]=this.getOutputUnpacked5DCoords(t,o);break;case 6:i[u]=this.getOutputUnpacked6DCoords(t,o);break;default:throw new Error(`Unsupported output dimensionality: ${t.length}`)}let s=`
        void setOutput(float val) {
          ${se(this.context.glContext.version).output} = vec4(val, 0, 0, 0);
        }
    `,l="floatTextureSetR";return i[l]=new Y(s),i}getOutputScalarCoords(){return new Y(`
      int getOutputCoords() {
        return 0;
      }
    `)}getOutputPacked1DCoords(r,t){let o=t,i="";return o[0]===1?(i=`
          int getOutputCoords() {
            return 2 * int(TexCoords.y * ${o[1]}.0);
          }
        `,new Y(i)):o[1]===1?(i=`
          int getOutputCoords() {
            return 2 * int(TexCoords.x * ${o[0]}.0);
          }
        `,new Y(i)):(i=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                 vec2(${o[0]}, ${o[1]}));
          return 2 * (resTexRC.y * ${o[0]} + resTexRC.x);
        }
      `,new Y(i))}getOutputPacked2DCoords(r,t){let o="";if(Vr.arraysEqual(r,t))return o=`
        ivec2 getOutputCoords() {
          return 2 * ivec2(TexCoords.xy * vec2(${t[0]}, ${t[1]}));
        }
      `,new Y(o);let i=t,u=Math.ceil(r[1]/2);return o=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${i[0]}, ${i[1]}));

          int index = resTexRC.y * ${i[0]} + resTexRC.x;

          // reverse r and c order for packed texture
          int r = imod(index, ${u}) * 2;
          int c = 2 * (index / ${u});

          return ivec2(r, c);
        }
      `,new Y(o)}getOutputPacked3DCoords(r,t){let o=[t[0],t[1]],i=Math.ceil(r[2]/2),u=i*Math.ceil(r[1]/2),a=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${o[0]}, ${o[1]}));
          int index = resTexRC.y * ${o[0]} + resTexRC.x;

          int b = index / ${u};
          index -= b * ${u};

          // reverse r and c order for packed texture
          int r = imod(index, ${i}) * 2;
          int c = 2 * (index / ${i});

          return ivec3(b, r, c);
        }
      `;return new Y(a)}getOutputPackedNDCoords(r,t){let o=[t[0],t[1]],i=Math.ceil(r[r.length-1]/2),u=i*Math.ceil(r[r.length-2]/2),a=u,s="",l="b, r, c";for(let p=2;p<r.length-1;p++)a*=r[r.length-p-1],s=`
      int b${p} = index / ${a};
      index -= b${p} * ${a};
    `+s,l=`b${p}, `+l;let c=`
      ivec${r.length} getOutputCoords() {
        ivec2 resTexRC = ivec2(TexCoords.xy *
                              vec2(${o[0]}, ${o[1]}));
        int index = resTexRC.y * ${o[0]} + resTexRC.x;

        ${s}

        int b = index / ${u};
        index -= b * ${u};

        // reverse r and c order for packed texture
        int r = imod(index, ${i}) * 2;
        int c = 2 * (index / ${i});

        return ivec${r.length}(${l});
      }
    `;return new Y(c)}getOutputUnpacked1DCoords(r,t){let o=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          return resTexRC.y * ${t[0]} + resTexRC.x;
        }
      `;return new Y(o)}getOutputUnpacked2DCoords(r,t){let o=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          int r = index / ${r[1]};
          int c = index - r * ${r[1]};
          return ivec2(r, c);
        }
      `;return new Y(o)}getOutputUnpacked3DCoords(r,t){let o="",i=r.length,u=null;i<2&&(u=[]),u=new Array(i-1),u[i-2]=r[i-1];for(let l=i-3;l>=0;--l)u[l]=u[l+1]*r[l+1];let a=["r","c","d"],s=u.map((l,c)=>{let p=`int ${a[c]} = index / ${l}`,h=c===u.length-1?`int ${a[c+1]} = index - ${a[c]} * ${l}`:`index -= ${a[c]} * ${l}`;return`${p}; ${h};`}).join("");return o=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${s}
          return ivec3(r, c, d);
        }
      `,new Y(o)}getOutputUnpacked4DCoords(r,t){let o="",i=r.length,u=null;i<2&&(u=[]),u=new Array(i-1),u[i-2]=r[i-1];for(let l=i-3;l>=0;--l)u[l]=u[l+1]*r[l+1];let a=["r","c","d","d2"],s=u.map((l,c)=>{let p=`int ${a[c]} = index / ${l}`,h=c===u.length-1?`int ${a[c+1]} = index - ${a[c]} * ${l}`:`index -= ${a[c]} * ${l}`;return`${p}; ${h};`}).join("");return o=`
      ivec4 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${s}
          return ivec4(r, c, d, d2);
        }
      `,new Y(o)}getOutputUnpacked5DCoords(r,t){let o="",i=r.length,u=null;i<2&&(u=[]),u=new Array(i-1),u[i-2]=r[i-1];for(let l=i-3;l>=0;--l)u[l]=u[l+1]*r[l+1];let a=["r","c","d","d2","d3"],s=u.map((l,c)=>{let p=`int ${a[c]} = index / ${l}`,h=c===u.length-1?`int ${a[c+1]} = index - ${a[c]} * ${l}`:`index -= ${a[c]} * ${l}`;return`${p}; ${h};`}).join("");return o=`
      ivec5 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${s}
          return ivec5(r, c, d, d2, d3);
        }
      `,new Y(o)}getOutputUnpacked6DCoords(r,t){let o="",i=r.length,u=null;i<2&&(u=[]),u=new Array(i-1),u[i-2]=r[i-1];for(let l=i-3;l>=0;--l)u[l]=u[l+1]*r[l+1];let a=["r","c","d","d2","d3","d4"],s=u.map((l,c)=>{let p=`int ${a[c]} = index / ${l}`,h=c===u.length-1?`int ${a[c+1]} = index - ${a[c]} * ${l}`:`index -= ${a[c]} * ${l}`;return`${p}; ${h};`}).join("");return o=`
     ivec6 getOutputCoords() {
         ivec2 resTexRC = ivec2(TexCoords.xy *
                               vec2(${t[0]}, ${t[1]}));
         int index = resTexRC.y * ${t[0]} + resTexRC.x;
         ${s}
         return ivec6(r, c, d, d2, d3, d4);
       }
     `,new Y(o)}getCommonUtilFuncs(){let r={},t="uvFromFlat";r[t]=new Y(`
    vec2 uvFromFlat(int texNumR, int texNumC, int index) {
      int texC = index / texNumR;
      int texR = index - texC * texNumR;
      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to
      //       v.
      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);
    }
    `),t="packedUVfrom1D",r[t]=new Y(`
      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
        int texelIndex = index / 2;
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="packedUVfrom2D",r[t]=new Y(`
      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {
        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="packedUVfrom3D",r[t]=new Y(`
      vec2 packedUVfrom3D(int texNumR, int texNumC,
          int texelsInBatch, int texelsInLogicalRow, int b,
          int row, int col) {
        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = index / texNumC;
        int texC = index - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="sampleTexture";let o=se(this.context.glContext.version);return r[t]=new Y(`
        float sampleTexture(sampler2D textureSampler, vec2 uv) {
            return ${o.texture2D}(textureSampler, uv).r;
        }`),r}getInputsSamplingSnippets(){let r={},t=this.context.outputTextureLayout;return this.context.programInfo.inputNames.forEach((o,i)=>{let u=this.context.inputTextureLayouts[i],a=Zo(o);u.isPacked?r[a]=this.getPackedSamplerFromInput(a,o,u):r[a]=this.getUnpackedSamplerFromInput(a,o,u);let s=Ic(o);u.unpackedShape.length<=t.unpackedShape.length&&(u.isPacked?r[s]=this.getPackedSamplerAtOutputCoords(s,u,t,o):r[s]=this.getUnpackedSamplerAtOutputCoords(s,u,t,o))}),r}getPackedSamplerAtOutputCoords(r,t,o,i){let u=t.unpackedShape,a=o.unpackedShape,l=Zo(i),c=u.length,p=a.length,h=wt.getBroadcastDims(u,a),g=Tt(p),y=p-c,b,w=Xt();c===0?b="":p<2&&h.length>=1?b="coords = 0;":b=h.map(Z=>`coords.${w[Z+y]} = 0;`).join(`
`);let S="";p<2&&c>0?S="coords":S=u.map((Z,me)=>`coords.${w[me+y]}`).join(", ");let O="return outputValue;",B=re.size(u)===1,M=re.size(a)===1;if(c===1&&!B&&!M)O=`
        return vec4(outputValue.xy, outputValue.xy);
      `;else if(B&&!M)p===1?O=`
          return vec4(outputValue.x, outputValue.x, 0., 0.);
        `:O=`
          return vec4(outputValue.x);
        `;else if(h.length){let Z=c-2,me=c-1;h.indexOf(Z)>-1&&h.indexOf(me)>-1?O="return vec4(outputValue.x);":h.indexOf(Z)>-1?O="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":h.indexOf(me)>-1&&(O="return vec4(outputValue.xx, outputValue.zz);")}let G=`
        int lastDim = coords.${w[p-1]};
        coords.${w[p-1]} = coords.${w[p-2]};
        coords.${w[p-2]} = lastDim;
      `,K=`
      vec4 ${r}() {
        ${g} coords = getOutputCoords();
        ${G}
        ${b}
        vec4 outputValue = ${l}(${S});
        ${O}
      }
    `;return new Y(K,["coordinates.getOutputCoords"])}getUnpackedSamplerAtOutputCoords(r,t,o,i){let u=[o.width,o.height],a=[t.width,t.height],s=t.unpackedShape.length,l=o.unpackedShape.length,c=t.unpackedShape,p=o.unpackedShape,h=Zo(i);if(s===l&&Vr.arraysEqual(a,u)){let B=`
          float ${r}() {
            return sampleTexture(${i}, TexCoords);
          }
        `;return new Y(B,["coordinates.sampleTexture"])}let g=Tt(l),y=wt.getBroadcastDims(c,p),b=l-s,w,S=Xt();s===0?w="":l<2&&y.length>=1?w="coords = 0;":w=y.map(B=>`coords.${S[B+b]} = 0;`).join(`
`);let O="";l<2&&s>0?O="coords":O=t.unpackedShape.map((B,z)=>`coords.${S[z+b]}`).join(", ");let E=`
        float ${r}() {
          ${g} coords = getOutputCoords();
          ${w}
          return ${h}(${O});
        }
      `;return new Y(E,["coordinates.getOutputCoords"])}getPackedSamplerFromInput(r,t,o){switch(o.unpackedShape.length){case 0:return this.getPackedSamplerScalar(r,t);case 1:return this.getPackedSampler1D(r,t,o);case 2:return this.getPackedSampler2D(r,t,o);case 3:return this.getPackedSampler3D(r,t,o);default:return this.getPackedSamplerND(r,t,o)}}getUnpackedSamplerFromInput(r,t,o){let i=o.unpackedShape;switch(i.length){case 0:return this.getUnpackedSamplerScalar(r,t,o);case 1:return this.getUnpackedSampler1D(r,t,o);case 2:return this.getUnpackedSampler2D(r,t,o);case 3:return this.getUnpackedSampler3D(r,t,o);case 4:return this.getUnpackedSampler4D(r,t,o);case 5:return this.getUnpackedSampler5D(r,t,o);case 6:return this.getUnpackedSampler6D(r,t,o);default:throw new Error(`Unsupported dimension ${i.length}-D`)}}getPackedSamplerScalar(r,t){let o=se(this.context.glContext.version),i=`
          vec4 ${r}() {
            return ${o.texture2D}(${t}, halfCR);
          }
        `;return new Y(i)}getPackedSampler1D(r,t,o){let i=[o.width,o.height],u=[i[1],i[0]],a=se(this.context.glContext.version),l=`vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
      ${u[0]}, ${u[1]}, index);
      return ${a.texture2D}(${t}, uv);
    }`;return new Y(l,["coordinates.packedUVfrom1D"])}getPackedSampler2D(r,t,o){let i=o.unpackedShape,u=[o.width,o.height],a=se(this.context.glContext.version),s=u[0],l=u[1];if(u!=null&&Vr.arraysEqual(i,u)){let y=`vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${s}.0);
        return ${a.texture2D}(${t}, uv);
      }`;return new Y(y)}let c=u,p=Math.ceil(i[1]/2),g=`vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c[1]}, ${c[0]}, ${p}, row, col);
      return ${a.texture2D}(${t}, uv);
    }`;return new Y(g,["coordinates.packedUVfrom2D"])}getPackedSampler3D(r,t,o){let i=o.unpackedShape,u=[o.width,o.height],a=[u[0],u[1]],s=se(this.context.glContext.version);if(i[0]===1){let b=i.slice(1),w=[1,2],S=gn(i,b),O=["b","row","col"],E=JSON.parse(JSON.stringify(o));E.unpackedShape=S;let B=this.getPackedSamplerFromInput(r,t,E),M=`${B.routineBody}
      vec4 ${r}(int b, int row, int col) {
        return ${r}(${bn(O,w)});
      } `;return new Y(M,B.dependencies)}let l=a[0],c=a[1],p=Math.ceil(i[2]/2),h=p*Math.ceil(i[1]/2),y=`vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${c}, ${l}, ${h}, ${p}, b, row, col);
      return ${s.texture2D}(${t}, uv);}`;return new Y(y,["coordinates.packedUVfrom3D"])}getPackedSamplerND(r,t,o){let i=o.unpackedShape,u=i.length,a=[o.width,o.height],s=se(this.context.glContext.version),l=[a[0],a[1]],c=l[1],p=l[0],h=Math.ceil(i[u-1]/2),g=h*Math.ceil(i[u-2]/2),y="int b, int row, int col",b=`b * ${g} + (row / 2) * ${h} + (col / 2)`;for(let O=2;O<u-1;O++)y=`int b${O}, `+y,g*=i[u-O-1],b=`b${O} * ${g} + `+b;let S=`vec4 ${r}(${y}) {
      int index = ${b};
      int texR = index / ${p};
      int texC = index - texR * ${p};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${c});
      return ${s.texture2D}(${t}, uv);
    }`;return new Y(S)}getUnpackedSamplerScalar(r,t,o){let[i,u]=[o.width,o.height];if(i===1&&u===1){let s=`
          float ${r}() {
            return sampleTexture(${t}, halfCR);
          }
        `;return new Y(s,["coordinates.sampleTexture"])}let a=`
        float ${r}() {
          int offset_${t} = coordsToOffset(TexCoords, ${i}, ${u});
          vec2 uv = uvFromFlat(${i}, ${u}, offset_${t});
          return sampleTexture(${t}, uv);
        }
      `;return new Y(a,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler1D(r,t,o){let i=o.width,u=o.height;if(u===1&&i===1){let s=`
        float ${r}(int index) {
          return sampleTexture(${t}, halfCR);
        }
      `;return new Y(s,["coordinates.sampleTexture"])}if(u===1){let s=`
          float ${r}(int index) {
            vec2 uv = vec2((float(index) + 0.5) / ${i}.0, 0.5);
            return sampleTexture(${t}, uv);
          }
        `;return new Y(s,["coordinates.sampleTexture"])}if(i===1){let s=`
          float ${r}(int index) {
            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${u}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new Y(s,["coordinates.sampleTexture"])}let a=`
        float ${r}(int index) {
          vec2 uv = uvFromFlat(${i}, ${u}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new Y(a,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler2D(r,t,o){let i=o.unpackedShape,u=[o.height,o.width];if(u!=null&&Vr.arraysEqual(i,u)){let g=u[1],y=u[0],b=`
          float ${r}(int row, int col) {
            vec2 uv = (vec2(row, col) + halfCR) / vec2(${g}.0, ${y}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new Y(b,["coordinates.sampleTexture"])}let{newShape:a,keptDims:s}=wn(i),l=a;if(l.length<i.length){let g=gn(i,l),y=JSON.parse(JSON.stringify(o));y.unpackedShape=g;let b=["col","row"],w=`
          ${this.getUnpackedSamplerFromInput(r,t,y).routineBody}
          float ${r}(int row, int col) {
            return ${r}(${bn(b,s)});
          }
        `;return new Y(w,["coordinates.sampleTexture"])}let c=u[1],p=u[0];if(p===1){let g=`
          float ${r}(int row, int col) {
            int offset_${t} = coordsToOffset(TexCoords, ${c}, ${p});
            float index = dot(vec3(row, col, offset_${t}), vec3(${i[1]}, 1, 1));
            vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new Y(g,["coordinates.sampleTexture","coordinates.coordsToOffset"])}if(c===1){let g=`
          float ${r}(int row, int col) {
            int offset_${t} = coordsToOffset(TexCoords, ${c}, ${p});
            float index = dot(vec3(row, col, offset_${t}), vec3(${i[1]}, 1, 1));
            vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);
            return sampleTexture(${t}, uv);
          }
        `;return new Y(g,["coordinates.sampleTexture","coordinates.coordsToOffset"])}let h=`
        float ${r}(int row, int col) {
          int index = col * ${i[1]} + row;
          vec2 uv = uvFromFlat(${c}, ${p}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new Y(h,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler3D(r,t,o){let i=o.unpackedShape,u=i[1]*i[2],a=i[2],{newShape:s,keptDims:l}=wn(i),c=s;if(c.length<i.length){let y=gn(i,c),b=["batch","col","row"],w=JSON.parse(JSON.stringify(o));w.unpackedShape=y;let S=this.getUnpackedSamplerFromInput(r,t,w),O=l.reverse(),E=`
          ${S.routineBody}
          float ${r}(int batch, int row, int col) {
            return ${r}(${bn(b,O)});
          }
        `;return new Y(E,S.dependencies)}let p=o.width,h=o.height,g=`
          float ${r}(int depth, int row, int col) {
            // Explicitly use integer operations as dot() only works on floats.
            int index = depth * ${u} + col * ${a} + row;
            vec2 uv = uvFromFlat(${p}, ${h}, index);
            return sampleTexture(${t}, uv);
          }
      `;return new Y(g,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler4D(r,t,o){let i=o.unpackedShape,u=i[3],a=i[2]*u,s=i[1]*a,l=o.width,c=o.height,p=`
        float ${r}(int row, int col, int depth, int depth2) {
          int index = row * ${s} + col * ${a} +
              depth2 * ${u} + depth;
          vec2 uv = uvFromFlat(${l}, ${c}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new Y(p,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler5D(r,t,o){let i=o.unpackedShape,u=i[4],a=i[3]*u,s=i[2]*a,l=i[1]*s,{newShape:c,keptDims:p}=wn(i);if(c.length<i.length){let b=gn(i,c),w=["row","col","depth","depth2","depth3"],S=JSON.parse(JSON.stringify(o));S.unpackedShape=b;let O=`
          ${this.getUnpackedSamplerFromInput(r,t,S).routineBody}
          float ${r}(int row, int col, int depth, int depth2, int depth3) {
            return ${r}(${bn(w,p)});
          }
        `;return new Y(O,["coordinates.sampleTexture","coordinates.uvFromFlat"])}let h=o.width,g=o.height,y=`
        float ${r}(int row, int col, int depth, int depth2, int depth3) {
          int index = row * ${l} + col * ${s} + depth * ${a} +
          depth3 * ${u} + depth2;
          vec2 uv = uvFromFlat(${h}, ${g}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new Y(y,["coordinates.sampleTexture","coordinates.uvFromFlat"])}getUnpackedSampler6D(r,t,o){let i=o.unpackedShape,u=i[5],a=i[4]*u,s=i[3]*a,l=i[2]*s,c=i[1]*l,{newShape:p,keptDims:h}=wn(i);if(p.length<i.length){let w=gn(i,p),S=["row","col","depth","depth2","depth3","depth4"],O=JSON.parse(JSON.stringify(o));O.unpackedShape=w;let E=`
            ${this.getUnpackedSamplerFromInput(r,t,O).routineBody}
            float ${r}(int row, int col, int depth,
              int depth2, int depth3, int depth4) {
              return ${r}(${bn(S,h)});
            }
          `;return new Y(E,["coordinates.sampleTexture","coordinates.uvFromFlat"])}let g=o.width,y=o.height,b=`
          float ${r}(int row, int col, int depth,
            int depth2, int depth3, int depth4) {
            int index = row * ${c} + col * ${l} + depth * ${s} +
            depth2 * ${a} + depth3 * ${u} + depth4;
            vec2 uv = uvFromFlat(${g}, ${y}, index);
            return sampleTexture(${t}, uv);
          }
        `;return new Y(b,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}toVec(){let r=this.context.outputTextureLayout,t=r.shape.length,o=r.strides,i=r.width,u=r.height,a=[];for(let l=0;l<t-1;++l)a.push(`
        c[${l}] = offset / ${o[l]};`),a.push(`
        offset -= c[${l}] * ${o[l]};`);a.push(`
        c[${t-1}] = offset;`);let s=`
      void toVec(vec2 texCoords, out int c[${t}]) {
        int offset = coordsToOffset(texCoords, ${i}, ${u});
        ${a.join("")}
      }
      void toVec(int offset, out int c[${t}]) {
        ${a.join("")}
      }
    `;return{toVec:new Y(s,["coordinates.coordsToOffset"])}}valueFrom(){let r={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o],a=(i.unpackedShape.length>0?i.unpackedShape:i.shape).length,s=`_${t}`;r[s]=new Y(this.getValueFromSingle(t,a,i.width,i.height,!1),[`shapeUtils.indicesToOffset${s}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"]),s=s+"_T",r[s]=new Y(this.getValueFromSingle(t,a,i.width,i.height,!0),[`shapeUtils.indicesToOffset${s}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"])}),r}getValueFromSingle(r,t,o,i,u){let a=`_${r}`;u&&(a=a+"_T");let s=se(this.context.glContext.version);return`
        float ${a}(int m[${t}]) {
          int offset = indicesToOffset${a}(m);
          vec2 coords = offsetToCoords(offset, ${o}, ${i});
          float value = getColorAsFloat(${s.texture2D}(${r}, coords));
          return value;
        }
        `}getPackedValueFrom(r,t,o,i,u){let a=`_${r}_Pack`;u&&(a=a+"_T");let s=se(this.context.glContext.version);return`
        vec4 ${a}(int m[${t}]) {
          int offset = indicesToOffset_${r}(m);
          vec2 coords = offsetToCoords(offset, ${o}, ${i});
          return ${s.texture2D}(${r}, coords);
        }
        `}}});var hi,Fp=P(()=>{"use strict";yr();hi=class n extends Rt{constructor(e){super(e)}getFunctions(){return{...this.encodeFloat32(),...this.decodeFloat32()}}getCustomTypes(){return{}}encodeFloat32(){return{encode:new Y(`highp vec4 encode(highp float f) {
        return vec4(f, 0.0, 0.0, 0.0);
      }
        `)}}decodeFloat32(){return{decode:new Y(`highp float decode(highp vec4 rgba) {
        return rgba.r;
      }
        `)}}encodeUint8(){let e=n.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{encode:new Y(`
      highp vec4 encode(highp float f) {
        highp float F = abs(f);
        highp float Sign = step(0.0,-f);
        highp float Exponent = floor(log2(F));
        highp float Mantissa = (exp2(- Exponent) * F);
        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));
        highp vec4 rgba;
        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));
        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);
        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));
        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));
        ${e}
        rgba = rgba / 255.0; // values need to be normalized to [0,1]
        return rgba;
    }
        `)}}decodeUint8(){let e=n.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{decode:new Y(`
        highp float decode(highp vec4 rgba) {
          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]
          ${e}
          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;
          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;
          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);
          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));
          return Result;
      }
        `)}}static isLittleEndian(){let e=new ArrayBuffer(4),r=new Uint32Array(e),t=new Uint8Array(e);if(r[0]=3735928559,t[0]===239)return!0;if(t[0]===222)return!1;throw new Error("unknown endianness")}}});var mi,Gp=P(()=>{"use strict";yr();Je();mi=class extends Rt{constructor(e){super(e)}getFunctions(){return{...this.setFragColor(),...this.getColorAsFloat()}}getCustomTypes(){return{}}setFragColor(){let e=se(this.context.glContext.version);return{setFragColor:new Y(`
        void setFragColor(float value) {
            ${e.output} = encode(value);
        }
        `,["encoding.encode"])}}getColorAsFloat(){return{getColorAsFloat:new Y(`
        float getColorAsFloat(vec4 color) {
            return decode(color);
        }
        `,["encoding.decode"])}}}});var gi,Wp=P(()=>{"use strict";yr();gi=class n extends Rt{constructor(e){super(e)}getFunctions(){return{...this.bcastIndex(),...this.bcastMatmulIndex(),...this.offsetToIndices(),...this.indicesToOffset(),...this.incrementIndices()}}getCustomTypes(){return{}}bcastIndex(){let e=this.context.outputTextureLayout.shape.length,r={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o].unpackedShape;if(i.length<=e){let u=i.length,a=e-u,s=`bcastIndices_${t}`,l="";for(let p=0;p<u;++p)l+=`
          realIndices[${p}] = int( mod(float(bcastedIndices[${a+p}]), ${i[p]}.0) );
          `;let c=`
        void ${s} (int bcastedIndices[${e}], out int realIndices[${u}]) {
          ${l}
        }
        `;r[s]=new Y(c)}}),r}bcastMatmulIndex(){let e=this.context.outputTextureLayout.shape.length,r={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o].shape;if(!(i.length<2||i.length>e)){let u=i.length,a=e-u,s=`bcastMatmulIndices_${t}`,l="";for(let p=0;p<u-2;++p)l+=`
          realIndices[${p}] = int( mod(float(bcastedIndices[${a+p}]), ${i[p]}.0) );
          `;let c=`
        void ${s}(int bcastedIndices[${e}], out int realIndices[${u}]) {
          ${l}
          realIndices[${u-1}] = bcastedIndices[${e-1}];
          realIndices[${u-2}] = bcastedIndices[${e-2}];
        }
        `;r[s]=new Y(c)}}),r}indicesToOffset(){let e={};return this.context.programInfo.inputNames.forEach((r,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=this.context.inputTextureLayouts[t].strides,u=o.length,a=`indicesToOffset_${r}`;e[a]=new Y(n.indexToOffsetSingle(a,u,i)),a=`indicesToOffset_${r}_T`,e[a]=new Y(n.indexToOffsetSingle(a,u,i.slice().reverse()))}),e}static indexToOffsetSingle(e,r,t){let o="";for(let i=r-1;i>=0;--i)o+=`
        offset += indices[${i}] * ${t[i]};
        `;return`
      int ${e}(int indices[${r}]) {
        int offset = 0;
        ${o}
        return offset;
      }
      `}offsetToIndices(){let e={};return this.context.programInfo.inputNames.forEach((r,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=this.context.inputTextureLayouts[t].strides,u=o.length,a=`offsetToIndices_${r}`;e[a]=new Y(n.offsetToIndicesSingle(a,u,i)),a=`offsetToIndices_${r}_T`,e[a]=new Y(n.offsetToIndicesSingle(a,u,i.slice().reverse()))}),e}static offsetToIndicesSingle(e,r,t){let o=[];for(let i=0;i<r-1;++i)o.push(`
      indices[${i}] = offset / ${t[i]};`),o.push(`
        offset -= indices[${i}] * ${t[i]};`);return o.push(`
      indices[${r-1}] = offset;`),`
      void ${e}(int offset, out int indices[${r}]) {
        ${o.join("")}
      }
      `}incrementIndices(){let e={};return this.context.programInfo.inputNames.forEach((r,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=o.length,u=`incrementIndices_${r}`,a="";for(let l=0;l<i;++l)a+=`
        shape[${l}] = ${o[l]};`;let s=`
        void ${u}(int axis, out int indices[${i}]) {
          int shape[${i}];
          ${a};
          for(int i = ${i} -1 ; i >= 0; --i) {
            if(i > axis) continue;
            indices[i] += 1;
            if(indices[i] < shape[i]) {
              break;
            }
            indices[i] = 0;
          }
        }
        `;e[u]=new Y(s)}),e}}});var bi,Vp=P(()=>{"use strict";yr();bi=class extends Rt{constructor(e){super(e)}getCustomTypes(){return{}}getFunctions(){return{...this.binaryVecFunctions(),...this.copyVec(),...this.setVecItem(),...this.getVecItem()}}binaryVecFunctions(){let r=this.context.outputTextureLayout.shape.length,t={add:"+=",sub:"-=",mul:"*=",div:"/="},o={};for(let i in t){let u=`${i}Vec`,a="";for(let l=0;l<r;++l)a+=`
          dest[${l}] ${t[i]} src[${l}];
          `;let s=`
        void ${u}(int src[${r}], out int dest[${r}]) {
          ${a}
        }
        `;o[u]=new Y(s)}return o}copyVec(){let r=this.context.outputTextureLayout.shape.length,t="";for(let i=0;i<r;++i)t+=`
        dest[${i}] = src[${i}];
        `;let o=`
      void copyVec(int src[${r}], out int dest[${r}]) {
        ${t}
      }
      `;return{copyVec:new Y(o)}}setVecItem(){let r=this.context.outputTextureLayout.shape.length,t=`
        if(index < 0)
            index =${r} + index;
        if (index == 0)
            m[0] = value;
        `;for(let i=1;i<r-1;++i)t+=`
        else if (index == ${i})
            m[${i}] = value;
            `;t+=`
        else
            m[${r-1}] = value;
        `;let o=`
      void setVecItem(out int m[${r}], int index, int value) {
        ${t}
      }
        `;return{setVecItem:new Y(o)}}getVecItem(){let r=this.context.outputTextureLayout.shape.length,t=`
        if(index < 0)
            index = ${r} + index;
        if (index == 0)
            return m[0];
      `;for(let i=1;i<r-1;++i)t+=`
        else if (index == ${i})
            return m[${i}];
      `;t+=`
        else
            return m[${r-1}];
        `;let o=`
      int getVecItem(int m[${r}], int index) {
        ${t}
      }
    `;return{getVecItem:new Y(o)}}}});var ds,Up=P(()=>{"use strict";zp();Fp();Gp();Wp();Vp();ds={encoding:hi,fragcolor:mi,vec:bi,shapeUtils:gi,coordinates:pi}});var yi,Hp=P(()=>{"use strict";yr();Lp();Up();Je();yi=class{constructor(e,r,t,o){this.libs={};this.glslLibRoutineDependencyGraph={};this.context=new ri(e,r,t,o),Object.keys(ds).forEach(u=>{let a=new ds[u](this.context);this.libs[u]=a});let i=this.glslLibRoutineDependencyGraph;for(let u in this.libs){let s=this.libs[u].getFunctions();for(let l in s){let c=u+"."+l,p;i[c]?(p=i[c],p.routineBody=s[l].routineBody):(p=new eo(c,s[l].routineBody),i[c]=p);let h=s[l].dependencies;if(h)for(let g=0;g<h.length;++g)if(i[h[g]])p.addDependency(i[h[g]]);else{let y=new eo(h[g]);i[h[g]]=y,p.addDependency(y)}}}}preprocess(){let e=this.context.programInfo,r=e.shaderSource;return this.context.programInfo.hasMain||(r=`${r}
      ${Sc(this.context.glContext.version,this.context.outputTextureLayout.shape.length)}`),r=Mp(r),`${$c(this.context.glContext.version)}
    ${this.getUniforms(e.inputNames,e.variables)}
    ${this.getImports(r)}
    ${r}`}getImports(e){let r=this.selectGlslLibRoutinesToBeIncluded(e);if(r.length===0)return"";let t="";for(let o=0;o<r.length;++o)if(r[o].routineBody)t+=r[o].routineBody+`
`;else throw new Error(`Missing body for the Glsl Library routine: ${r[o].name}`);return t}selectGlslLibRoutinesToBeIncluded(e){let r=[];return Object.keys(this.glslLibRoutineDependencyGraph).forEach(t=>{let o=t.split(".")[1];e.indexOf(o)!==-1&&r.push(this.glslLibRoutineDependencyGraph[t])}),ni.returnOrderedNodes(r)}getUniforms(e,r){let t=[];if(e)for(let o of e)t.push(`uniform sampler2D ${o};`);if(r)for(let o of r)t.push(`uniform ${o.type} ${o.name}${o.arrayLength?`[${o.arrayLength}]`:""};`);return t.join(`
`)}}});var vi,jp=P(()=>{"use strict";Ct();Pt();Hp();Je();vi=class{constructor(e,r,t){this.profiler=e;this.glContext=r;this.textureLayoutStrategy=t;this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,r){this.repo.set(e,r)}run(e,r,t){this.profiler.event("op",`ProgramManager.run ${e.programInfo.name??"unknown kernel"}`,()=>{let o=this.glContext.gl,i=e.program;o.useProgram(i);try{this.bindOutput(t),this.attributesBound||this.bindAttributes(e.attribLocations),this.bindUniforms(e.uniformLocations,e.programInfo.variables??[],r)}catch(u){throw ze.error("ProgramManager",e.programInfo.shaderSource),u}this.profiler.event("backend","GlContext.draw()",()=>{this.glContext.draw()})},this.glContext)}dispose(){this.vertexShader&&this.glContext.deleteShader(this.vertexShader),this.repo.forEach(e=>this.glContext.deleteProgram(e.program))}build(e,r,t){return this.profiler.event("backend","ProgramManager.build",()=>{let o=new yi(this.glContext,e,r,t),i=o.preprocess(),u=this.compile(i);return{programInfo:e,program:u,uniformLocations:this.getUniformLocations(u,o.context.programInfo.inputNames,o.context.programInfo.variables),attribLocations:this.getAttribLocations(u)}})}compile(e){if(!this.vertexShader){ze.verbose("ProrgramManager","Compiling and caching Vertex shader for the first time");let o=Tc(this.glContext.version);this.vertexShader=this.glContext.compileShader(o,this.glContext.gl.VERTEX_SHADER)}xe.debug&&ze.verbose("ProrgramManager",`FragShader:
${e}
`);let r=this.glContext.compileShader(e,this.glContext.gl.FRAGMENT_SHADER),t=this.glContext.createProgram(this.vertexShader,r);return this.glContext.deleteShader(r),t}bindOutput(e){let r=e.width,t=e.height;ze.verbose("ProrgramManager",`Binding output texture to Framebuffer: w/h=${r}/${t}, shape=${e.shape}, type=${e.tensor.type}`),this.glContext.attachFramebuffer(e.texture,r,t)}bindAttributes(e){let r=e.position,t=e.textureCoord;this.glContext.setVertexAttributes(r,t),this.attributesBound=!0}bindUniforms(e,r,t){let o=this.glContext.gl,i=0;for(let{name:u,type:a,location:s,arrayLength:l}of e){let c=r.find(p=>p.name===u)?.data;if(a!=="sampler2D"&&!c)throw new Error(`variable '${u}' does not have data defined in program info`);switch(a){case"sampler2D":this.bindTexture(t[i],s,i),i++;break;case"float":l?o.uniform1fv(s,c):o.uniform1f(s,c);break;case"int":l?o.uniform1iv(s,c):o.uniform1i(s,c);break;default:throw new Error(`Uniform not implemented: ${a}`)}}}bindTexture(e,r,t){this.glContext.bindTextureToUniform(e.texture,t,r)}getAttribLocations(e){return{position:this.getAttribLocation(e,"position"),textureCoord:this.getAttribLocation(e,"textureCoord")}}getUniformLocations(e,r,t){let o=[];if(r)for(let i of r)o.push({name:i,type:"sampler2D",location:this.getUniformLocation(e,i)});if(t)for(let i of t)o.push({...i,location:this.getUniformLocation(e,i.name)});return o}getUniformLocation(e,r){let o=this.glContext.gl.getUniformLocation(e,r);if(o===null)throw new Error(`Uniform ${r} not found.`);return o}getAttribLocation(e,r){return this.glContext.gl.getAttribLocation(e,r)}}});var xi,qp=P(()=>{"use strict";Pt();Zn();xi=class{constructor(e,r,t,o){this.glContext=e;this.layoutStrategy=r;this.profiler=t;this.config=o;this.pendingRead=new Map;o.reuseTextures&&(this.inUseTextures=new Map,this.idleTextures=new Map,this.textureLookup=new Map)}createTextureFromLayout(e,r,t,o){let i=this.toEncoderType(e),u=this.glContext.getEncoder(i,r.channels||1,o);if(r.isPacked&&o===1)throw new Error("not implemented");let a=r.width,s=r.height,l,c;if(this.config.reuseTextures){l=`${a}x${s}_${u.format}_${u.internalFormat}_${u.textureType}`,c=this.inUseTextures.get(l),c||(c=[],this.inUseTextures.set(l,c));let h=this.idleTextures.get(l);if(h&&h.length>0){let g=h.pop();return c.push(g),o===1&&this.glContext.updateTexture(g,a,s,u,this.toTextureData(e,t)),g}}ze.verbose("TextureManager",`Creating new texture of size ${r.width}x${r.height}`);let p=this.glContext.allocateTexture(a,s,u,this.toTextureData(e,t));return this.config.reuseTextures&&(c.push(p),this.textureLookup.set(p,l)),p}readTexture(e,r,t){return t||(t=1),this.profiler.event("backend","TextureManager.readTexture",()=>{let o=e.shape.reduce((u,a)=>u*a)*t,i=this.glContext.readTexture(e.texture,e.width,e.height,o,this.toEncoderType(r),t);return this.toTensorData(r,i)})}async readTextureAsync(e,r,t){let o=e.tensor.dataId;if(t||(t=1),this.pendingRead.has(o)){let i=this.pendingRead.get(o);return new Promise(u=>i?.push(u))}return this.profiler.event("backend","TextureManager.readTextureAsync",async()=>{this.pendingRead.set(o,[]);let i=e.shape.reduce((l,c)=>l*c)*t;await this.glContext.createAndWaitForFence();let u=this.glContext.readTexture(e.texture,e.width,e.height,i,this.toEncoderType(r),t),a=this.toTensorData(r,u),s=this.pendingRead.get(o);return this.pendingRead.delete(o),s?.forEach(l=>l(a)),a})}readUint8TextureAsFloat(e){return this.profiler.event("backend","TextureManager.readUint8TextureAsFloat",()=>{let r=e.shape.reduce((o,i)=>o*i),t=this.glContext.readTexture(e.texture,e.width,e.height,r*4,"byte",4);return new Float32Array(t.buffer,t.byteOffset,r)})}releaseTexture(e,r){let t;if(this.config.reuseTextures&&(t=this.textureLookup.get(e.texture),t)){r&&this.textureLookup.delete(t);let o=this.inUseTextures.get(t);if(o){let i=o.indexOf(e.texture);if(i!==-1){o.splice(i,1);let u=this.idleTextures.get(t);u||(u=[],this.idleTextures.set(t,u)),u.push(e.texture)}}}(!t||r)&&(ze.verbose("TextureManager",`Deleting texture of size ${e.width}x${e.height}`),this.glContext.deleteTexture(e.texture))}toTensorData(e,r){switch(e){case"int16":return r instanceof Int16Array?r:Int16Array.from(r);case"int32":return r instanceof Int32Array?r:Int32Array.from(r);case"int8":return r instanceof Int8Array?r:Int8Array.from(r);case"uint16":return r instanceof Uint16Array?r:Uint16Array.from(r);case"uint32":return r instanceof Uint32Array?r:Uint32Array.from(r);case"uint8":case"bool":return r instanceof Uint8Array?r:Uint8Array.from(r);case"float32":return r instanceof Float32Array?r:Float32Array.from(r);case"float64":return r instanceof Float64Array?r:Float64Array.from(r);default:throw new Error(`TensorData type ${e} is not supported`)}}toTextureData(e,r){if(r)return r instanceof Float32Array?r:new Float32Array(r)}toEncoderType(e){return"float"}clearActiveTextures(){this.glContext.clearActiveTextures()}}});var wi,Kp=P(()=>{"use strict";Pt();ul();zc();Bp();jp();cs();qp();wi=class{constructor(e,r){this.backend=e;this.context=r;this.layoutStrategy=new fi(e.glContext.maxTextureSize),this.programManager=new vi(this.context.profiler,e.glContext,this.layoutStrategy),this.textureManager=new xi(e.glContext,this.layoutStrategy,this.context.profiler,{reuseTextures:e.textureCacheMode==="full"}),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map,this.pack=e.pack,this.pack2unpackMap=new Map,this.unpack2packMap=new Map}createInferenceHandler(){return new ti(this)}onGraphInitialized(e){let r=e.getValues().filter(t=>t.from===-1&&t.tensor).map(t=>t.tensor.dataId);this.initializers=new Set(r)}isInitializer(e){return this.initializers?this.initializers.has(e):!1}addInitializer(e){this.initializers.add(e)}getTextureData(e,r){return r?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,r,t=!1){ze.verbose("WebGLSessionHandler","Storing Texture data in cache"),t?this.packedTextureDataCache.set(e,r):this.unpackedTextureDataCache.set(e,r)}dispose(){this.programManager.dispose(),this.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(e=>this.textureManager.releaseTexture(e,!0)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(e=>this.textureManager.releaseTexture(e,!0)),this.unpackedTextureDataCache=new Map}resolve(e,r,t){let o=sl(e,r,kp);return{impl:o.opImpl,context:o.opInit?o.opInit(e,t):e}}}});function Lx(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}var no,Yp=P(()=>{"use strict";Ct();Zn();Zn();ir();no=class{constructor(e,r){this.frameBufferBound=!1;this.itemsToPoll=[];this.gl=e,this.version=r,this.getExtensions(),this.vertexbuffer=this.createVertexbuffer(),this.framebuffer=this.createFramebuffer(),this.queryVitalParameters()}allocateTexture(e,r,t,o){let i=this.gl,u=i.createTexture();i.bindTexture(i.TEXTURE_2D,u),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE);let a=o?t.encode(o,e*r):null;return i.texImage2D(i.TEXTURE_2D,0,t.internalFormat,e,r,0,t.format,t.textureType,a),this.checkError(),u}updateTexture(e,r,t,o,i){let u=this.gl;u.bindTexture(u.TEXTURE_2D,e);let a=o.encode(i,r*t);u.texSubImage2D(u.TEXTURE_2D,0,0,0,r,t,o.format,o.textureType,a),this.checkError()}attachFramebuffer(e,r,t){let o=this.gl;o.bindTexture(o.TEXTURE_2D,e),o.bindFramebuffer(o.FRAMEBUFFER,this.framebuffer),o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,e,0),this.checkError(),o.viewport(0,0,r,t),o.scissor(0,0,r,t)}readTexture(e,r,t,o,i,u){let a=this.gl;u||(u=1),this.frameBufferBound||this.attachFramebuffer(e,r,t);let s=this.getEncoder(i,u),l=s.allocate(r*t);return a.bindTexture(a.TEXTURE_2D,e),a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,e,0),a.readPixels(0,0,r,t,a.RGBA,s.textureType,l),this.checkError(),s.decode(l,o)}isFramebufferReady(){return!0}getActiveTexture(){let e=this.gl;return`TEXTURE${e.getParameter(this.gl.ACTIVE_TEXTURE)-e.TEXTURE0}`}getTextureBinding(){return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D)}getFramebufferBinding(){return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING)}setVertexAttributes(e,r){let t=this.gl;t.vertexAttribPointer(e,3,t.FLOAT,!1,20,0),t.enableVertexAttribArray(e),r!==-1&&(t.vertexAttribPointer(r,2,t.FLOAT,!1,20,12),t.enableVertexAttribArray(r)),this.checkError()}createProgram(e,r){let t=this.gl,o=t.createProgram();return t.attachShader(o,e),t.attachShader(o,r),t.linkProgram(o),o}compileShader(e,r){let t=this.gl,o=t.createShader(r);if(!o)throw new Error(`createShader() returned null with type ${r}`);if(t.shaderSource(o,e),t.compileShader(o),t.getShaderParameter(o,t.COMPILE_STATUS)===!1)throw new Error(`Failed to compile shader: ${t.getShaderInfoLog(o)}
Shader source:
${e}`);return o}deleteShader(e){this.gl.deleteShader(e)}bindTextureToUniform(e,r,t){let o=this.gl;o.activeTexture(o.TEXTURE0+r),this.checkError(),o.bindTexture(o.TEXTURE_2D,e),this.checkError(),o.uniform1i(t,r),this.checkError()}draw(){this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4),this.checkError()}checkError(){if(xe.debug){let e=this.gl,r=e.getError(),t="";switch(r){case e.NO_ERROR:return;case e.INVALID_ENUM:t="INVALID_ENUM";break;case e.INVALID_VALUE:t="INVALID_VALUE";break;case e.INVALID_OPERATION:t="INVALID_OPERATION";break;case e.INVALID_FRAMEBUFFER_OPERATION:t="INVALID_FRAMEBUFFER_OPERATION";break;case e.OUT_OF_MEMORY:t="OUT_OF_MEMORY";break;case e.CONTEXT_LOST_WEBGL:t="CONTEXT_LOST_WEBGL";break;default:t=`Unknown WebGL Error: ${r.toString(16)}`}throw new Error(t)}}deleteTexture(e){this.gl.deleteTexture(e)}deleteProgram(e){this.gl.deleteProgram(e)}getEncoder(e,r,t=0){if(this.version===2)return new Qo(this.gl,r);switch(e){case"float":return t===1||this.isRenderFloat32Supported?new Jn(this.gl,r):new Jn(this.gl,r,this.textureHalfFloatExtension.HALF_FLOAT_OES);case"int":throw new Error("not implemented");case"byte":return new ei(this.gl,r);default:throw new Error(`Invalid dataType: ${e}`)}}clearActiveTextures(){let e=this.gl;for(let r=0;r<this.maxTextureImageUnits;++r)e.activeTexture(e.TEXTURE0+r),e.bindTexture(e.TEXTURE_2D,null)}dispose(){if(this.disposed)return;let e=this.gl;e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(this.framebuffer),e.bindBuffer(e.ARRAY_BUFFER,null),e.deleteBuffer(this.vertexbuffer),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null),e.finish(),this.disposed=!0}createDefaultGeometry(){return new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0])}createVertexbuffer(){let e=this.gl,r=e.createBuffer();if(!r)throw new Error("createBuffer() returned null");let t=this.createDefaultGeometry();return e.bindBuffer(e.ARRAY_BUFFER,r),e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW),this.checkError(),r}createFramebuffer(){let e=this.gl.createFramebuffer();if(!e)throw new Error("createFramebuffer returned null");return e}queryVitalParameters(){let e=this.gl;if(this.isFloatTextureAttachableToFrameBuffer=this.checkFloatTextureAttachableToFrameBuffer(),this.isRenderFloat32Supported=this.checkRenderFloat32(),this.isFloat32DownloadSupported=this.checkFloat32Download(),this.version===1&&!this.textureHalfFloatExtension&&!this.isRenderFloat32Supported)throw new Error("both float32 and float16 TextureType are not supported");this.isBlendSupported=!this.isRenderFloat32Supported||this.checkFloat32Blend(),this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.maxTextureImageUnits=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this.version}getExtensions(){this.version===2?(this.colorBufferFloatExtension=this.gl.getExtension("EXT_color_buffer_float"),this.disjointTimerQueryWebgl2Extension=this.gl.getExtension("EXT_disjoint_timer_query_webgl2")):(this.textureFloatExtension=this.gl.getExtension("OES_texture_float"),this.textureHalfFloatExtension=this.gl.getExtension("OES_texture_half_float"))}checkFloatTextureAttachableToFrameBuffer(){let e=this.gl,r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);let t=this.version===2?e.RGBA32F:e.RGBA;e.texImage2D(e.TEXTURE_2D,0,t,1,1,0,e.RGBA,e.FLOAT,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(o),i}checkRenderFloat32(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension)return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Download(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension||!this.gl.getExtension("WEBGL_color_buffer_float"))return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Blend(){let e=this.gl,r,t,o,i,u;try{r=e.createTexture(),t=e.createFramebuffer(),e.bindTexture(e.TEXTURE_2D,r);let a=this.version===2?e.RGBA32F:e.RGBA;return e.texImage2D(e.TEXTURE_2D,0,a,1,1,0,e.RGBA,e.FLOAT,null),e.bindFramebuffer(e.FRAMEBUFFER,t),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0),e.enable(e.BLEND),o=e.createShader(e.VERTEX_SHADER),!o||(e.shaderSource(o,"void main(){}"),e.compileShader(o),i=e.createShader(e.FRAGMENT_SHADER),!i)||(e.shaderSource(i,"precision highp float;void main(){gl_FragColor=vec4(0.5);}"),e.compileShader(i),u=e.createProgram(),!u)?!1:(e.attachShader(u,o),e.attachShader(u,i),e.linkProgram(u),e.useProgram(u),e.drawArrays(e.POINTS,0,1),e.getError()===e.NO_ERROR)}finally{e.disable(e.BLEND),u&&e.deleteProgram(u),o&&e.deleteShader(o),i&&e.deleteShader(i),t&&(e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(t)),r&&(e.bindTexture(e.TEXTURE_2D,null),e.deleteTexture(r))}}beginTimer(){if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let e=this.gl,r=this.disjointTimerQueryWebgl2Extension,t=e.createQuery();return e.beginQuery(r.TIME_ELAPSED_EXT,t),t}else throw new Error("WebGL1 profiling currently not supported.")}endTimer(){if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let e=this.gl,r=this.disjointTimerQueryWebgl2Extension;e.endQuery(r.TIME_ELAPSED_EXT);return}else throw new Error("WebGL1 profiling currently not supported")}isTimerResultAvailable(e){let r=!1,t=!1;if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let o=this.gl,i=this.disjointTimerQueryWebgl2Extension;r=o.getQueryParameter(e,o.QUERY_RESULT_AVAILABLE),t=o.getParameter(i.GPU_DISJOINT_EXT)}else throw new Error("WebGL1 profiling currently not supported");return r&&!t}getTimerResult(e){let r=0;if(this.version===2){let t=this.gl;r=t.getQueryParameter(e,t.QUERY_RESULT),t.deleteQuery(e)}else throw new Error("WebGL1 profiling currently not supported");return r/1e6}async waitForQueryAndGetTime(e){return await Ma(()=>this.isTimerResultAvailable(e)),this.getTimerResult(e)}async createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let r,t=e,o=t.fenceSync(t.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),o===null?r=()=>!0:r=()=>{let i=t.clientWaitSync(o,0,0);return i===t.ALREADY_SIGNALED||i===t.CONDITION_SATISFIED},{query:o,isFencePassed:r}}async pollFence(e){return new Promise(r=>{this.addItemToPoll(()=>e.isFencePassed(),()=>r())})}pollItems(){let e=Lx(this.itemsToPoll.map(r=>r.isDoneFn));for(let r=0;r<=e;++r){let{resolveFn:t}=this.itemsToPoll[r];t()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}async addItemToPoll(e,r){this.itemsToPoll.push({isDoneFn:e,resolveFn:r}),!(this.itemsToPoll.length>1)&&await Ma(()=>(this.pollItems(),this.itemsToPoll.length===0))}}});function fs(n){let e;if((!n||n==="webgl2")&&"webgl2"in Tn?e=Tn.webgl2:(!n||n==="webgl")&&"webgl"in Tn&&(e=Tn.webgl),!e)try{let t=zx();e=Xp(t,n)}catch{let o=Nx();e=Xp(o,n)}n=n||e.version===1?"webgl":"webgl2";let r=e.gl;return Tn[n]=e,r.isContextLost()?(delete Tn[n],fs(n)):(r.disable(r.DEPTH_TEST),r.disable(r.STENCIL_TEST),r.disable(r.BLEND),r.disable(r.DITHER),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SAMPLE_COVERAGE),r.enable(r.SCISSOR_TEST),r.enable(r.CULL_FACE),r.cullFace(r.BACK),e)}function Xp(n,e){let r={alpha:!1,depth:!1,antialias:!1,stencil:!1,preserveDrawingBuffer:!1,premultipliedAlpha:!1,failIfMajorPerformanceCaveat:!1},t,o=r;if((!e||e==="webgl2")&&(t=n.getContext("webgl2",o),t))try{return new no(t,2)}catch(i){ze.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl2'. Error: ${i}`)}if((!e||e==="webgl")&&(t=n.getContext("webgl",o)||n.getContext("experimental-webgl",o),t))try{return new no(t,1)}catch(i){ze.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${i}`)}throw new Error("WebGL is not supported")}function Nx(){if(typeof document>"u")throw new TypeError("failed to create canvas: document is not supported");let n=document.createElement("canvas");return n.width=1,n.height=1,n}function zx(){if(typeof OffscreenCanvas>"u")throw new TypeError("failed to create offscreen canvas: OffscreenCanvas is not supported");return new OffscreenCanvas(1,1)}var Tn,Jp=P(()=>{"use strict";Pt();Yp();Tn={}});var Ti,Zp=P(()=>{"use strict";Ct();Pt();Kp();Jp();Ti=class{get contextId(){return xe.webgl.contextId}set contextId(e){xe.webgl.contextId=e}get matmulMaxBatchSize(){return xe.webgl.matmulMaxBatchSize}set matmulMaxBatchSize(e){xe.webgl.matmulMaxBatchSize=e}get textureCacheMode(){return xe.webgl.textureCacheMode}set textureCacheMode(e){xe.webgl.textureCacheMode=e}get pack(){return xe.webgl.pack}set pack(e){xe.webgl.pack=e}get async(){return xe.webgl.async}set async(e){xe.webgl.async=e}initialize(){try{return this.glContext=fs(this.contextId),typeof this.matmulMaxBatchSize!="number"&&(this.matmulMaxBatchSize=16),typeof this.textureCacheMode!="string"&&(this.textureCacheMode="full"),typeof this.pack!="boolean"&&(this.pack=!1),typeof this.async!="boolean"&&(this.async=!1),ze.setWithEnv(xe),xe.webgl.context||Object.defineProperty(xe.webgl,"context",{value:this.glContext.gl}),ze.verbose("WebGLBackend",`Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${this.async}.`),!0}catch(e){return ze.warning("WebGLBackend",`Unable to initialize WebGLBackend. ${e}`),!1}}createSessionHandler(e){return new wi(this,e)}dispose(){this.glContext.dispose()}}});async function ps(n){if(n){let e=typeof n=="string"?[n]:n;for(let r of e){let t=Qp.get(r);if(t)return t;let o=await Gx(r);if(o)return o}}else return ps(["webgl"]);throw new Error("no available backend to use")}async function Gx(n){let e=Fx;if(typeof e[n]<"u"&&Wx(e[n])){let r=e[n],t=r.initialize();if(typeof t=="object"&&"then"in t&&(t=await t),t)return Qp.set(n,r),r}}function Wx(n){let e=n;return"initialize"in e&&typeof e.initialize=="function"&&"createSessionHandler"in e&&typeof e.createSessionHandler=="function"&&"dispose"in e&&typeof e.dispose=="function"}var Qp,Fx,eh=P(()=>{"use strict";Zp();Qp=new Map,Fx={webgl:new Ti}});var hs,$i,th=P(()=>{"use strict";Pt();hs=class{constructor(e,r){this.op=e;this.node=r}},$i=class{constructor(e,r,t){this.graph=e;this.profiler=t;this.initialize(r)}initialize(e){this.profiler.event("session","ExecutionPlan.initialize",()=>{let r=this.graph.getNodes();if(r.length!==e.length)throw new Error("The size of nodes and OPs do not match.");this._ops=e.map((t,o)=>new hs(t,r[o])),this.reset(),this._starter=[],this._ops.forEach((t,o)=>{let i=!0;for(let u of t.node.inputs)if(!this._values[u]&&this.graph.getInputIndices().indexOf(u)===-1){i=!1;break}i&&this._starter.push(o)})})}reset(){this._values=this.graph.getValues().map(e=>e.tensor)}async execute(e,r){return this.profiler.event("session","ExecutionPlan.execute",async()=>{this.reset();let t=e.createInferenceHandler(),o=this.graph.getInputIndices();if(r.length!==o.length)throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${r.length} expected: ${o.length}`);r.forEach((c,p)=>{let h=o[p];this._values[h]=c});let i=this._starter.slice(0),u=this.graph.getValues(),a=this.graph.getNodes(),s=0;for(;s<i.length;){let c=i[s++],p=this._ops[c],h=p.node.inputs.map(w=>this._values[w]);if(h.indexOf(void 0)!==-1)throw new Error(`unresolved input detected: op: ${p.node}`);let g=h;ze.verbose("ExecPlan",`Runing op:${p.node.name} (${g.map((w,S)=>`'${p.node.inputs[S]}': ${w.type}[${w.dims.join(",")}]`).join(", ")})`);let y=await this.profiler.event("node",p.node.name,async()=>p.op.impl(t,g,p.op.context));if(y.length!==p.node.outputs.length)throw new Error("the size of output does not match model definition.");y.forEach((w,S)=>{let O=p.node.outputs[S];if(this._values[O])throw new Error(`output [${O}] already has value: op:${p.node.name}`);this._values[O]=w});let b=new Set;y.forEach((w,S)=>{let O=p.node.outputs[S];for(let E of u[O].to){let B=a[E],z=!0;for(let M of B.inputs)if(!this._values[M]){z=!1;break}z&&b.add(E)}}),i.push(...b)}let l=[];for(let c=0;c<this.graph.getOutputIndices().length;c++){let p=this.graph.getOutputIndices()[c],h=this._values[p];if(h===void 0)throw new Error(`required output [${p}] does not have value`);p===0?await h.getData():h.data,l.push(h)}return ze.verbose("ExecPlan","disposing of inferenceHandler"),t.dispose(),l})}}});var _e,Nt,oo,rh=P(()=>{"use strict";Hn();_e=cn(hn());qr();Le();Nt=oe.experimental.fbs,oo=class n{constructor(e){if(this._attributes=new Map,e!=null){for(let r of e)r instanceof _e.onnx.AttributeProto?this._attributes.set(r.name,[n.getValue(r),n.getType(r)]):r instanceof Nt.Attribute&&this._attributes.set(r.name(),[n.getValue(r),n.getType(r)]);if(this._attributes.size<e.length)throw new Error("duplicated attribute names")}}set(e,r,t){this._attributes.set(e,[t,r])}delete(e){this._attributes.delete(e)}getFloat(e,r){return this.get(e,"float",r)}getInt(e,r){return this.get(e,"int",r)}getString(e,r){return this.get(e,"string",r)}getTensor(e,r){return this.get(e,"tensor",r)}getFloats(e,r){return this.get(e,"floats",r)}getInts(e,r){return this.get(e,"ints",r)}getStrings(e,r){return this.get(e,"strings",r)}getTensors(e,r){return this.get(e,"tensors",r)}get(e,r,t){let o=this._attributes.get(e);if(o===void 0){if(t!==void 0)return t;throw new Error(`required attribute not found: ${e}`)}if(o[1]!==r)throw new Error(`type mismatch: expected ${r} but got ${o[1]}`);return o[0]}static getType(e){let r=e instanceof _e.onnx.AttributeProto?e.type:e.type();switch(r){case _e.onnx.AttributeProto.AttributeType.FLOAT:return"float";case _e.onnx.AttributeProto.AttributeType.INT:return"int";case _e.onnx.AttributeProto.AttributeType.STRING:return"string";case _e.onnx.AttributeProto.AttributeType.TENSOR:return"tensor";case _e.onnx.AttributeProto.AttributeType.FLOATS:return"floats";case _e.onnx.AttributeProto.AttributeType.INTS:return"ints";case _e.onnx.AttributeProto.AttributeType.STRINGS:return"strings";case _e.onnx.AttributeProto.AttributeType.TENSORS:return"tensors";default:throw new Error(`attribute type is not supported yet: ${_e.onnx.AttributeProto.AttributeType[r]}`)}}static getValue(e){let r=e instanceof _e.onnx.AttributeProto?e.type:e.type();if(r===_e.onnx.AttributeProto.AttributeType.GRAPH||r===_e.onnx.AttributeProto.AttributeType.GRAPHS)throw new Error("graph attribute is not supported yet");let t=this.getValueNoCheck(e);if(r===_e.onnx.AttributeProto.AttributeType.INT&&It.isLong(t))return It.longToNumber(t);if(r===_e.onnx.AttributeProto.AttributeType.INTS){let o=t,i=new Array(o.length);for(let u=0;u<o.length;u++){let a=o[u];i[u]=It.longToNumber(a)}return i}if(r===_e.onnx.AttributeProto.AttributeType.TENSOR)return e instanceof _e.onnx.AttributeProto?ut.fromProto(t):ut.fromOrtTensor(t);if(r===_e.onnx.AttributeProto.AttributeType.TENSORS){if(e instanceof _e.onnx.AttributeProto)return t.map(i=>ut.fromProto(i));if(e instanceof Nt.Attribute)return t.map(i=>ut.fromOrtTensor(i))}return r===_e.onnx.AttributeProto.AttributeType.STRING&&e instanceof _e.onnx.AttributeProto?Xn(t):r===_e.onnx.AttributeProto.AttributeType.STRINGS&&e instanceof _e.onnx.AttributeProto?t.map(Xn):t}static getValueNoCheck(e){return e instanceof _e.onnx.AttributeProto?this.getValueNoCheckFromOnnxFormat(e):this.getValueNoCheckFromOrtFormat(e)}static getValueNoCheckFromOnnxFormat(e){switch(e.type){case _e.onnx.AttributeProto.AttributeType.FLOAT:return e.f;case _e.onnx.AttributeProto.AttributeType.INT:return e.i;case _e.onnx.AttributeProto.AttributeType.STRING:return e.s;case _e.onnx.AttributeProto.AttributeType.TENSOR:return e.t;case _e.onnx.AttributeProto.AttributeType.GRAPH:return e.g;case _e.onnx.AttributeProto.AttributeType.FLOATS:return e.floats;case _e.onnx.AttributeProto.AttributeType.INTS:return e.ints;case _e.onnx.AttributeProto.AttributeType.STRINGS:return e.strings;case _e.onnx.AttributeProto.AttributeType.TENSORS:return e.tensors;case _e.onnx.AttributeProto.AttributeType.GRAPHS:return e.graphs;default:throw new Error(`unsupported attribute type: ${_e.onnx.AttributeProto.AttributeType[e.type]}`)}}static getValueNoCheckFromOrtFormat(e){switch(e.type()){case Nt.AttributeType.FLOAT:return e.f();case Nt.AttributeType.INT:return e.i();case Nt.AttributeType.STRING:return e.s();case Nt.AttributeType.TENSOR:return e.t();case Nt.AttributeType.GRAPH:return e.g();case Nt.AttributeType.FLOATS:return e.floatsArray();case Nt.AttributeType.INTS:{let r=[];for(let t=0;t<e.intsLength();t++)r.push(e.ints(t));return r}case Nt.AttributeType.STRINGS:{let r=[];for(let t=0;t<e.stringsLength();t++)r.push(e.strings(t));return r}case Nt.AttributeType.TENSORS:{let r=[];for(let t=0;t<e.tensorsLength();t++)r.push(e.tensors(t));return r}default:throw new Error(`unsupported attribute type: ${Nt.AttributeType[e.type()]}`)}}}});var gs,Si,bs,ur,Ii,ms,nh=P(()=>{"use strict";rh();Hn();gs=cn(hn());qr();Le();Si=oe.experimental.fbs,bs={from:(n,e)=>new ms(n,e)},ur=class{constructor(e){this._from=void 0,this._to=[],this.tensor=void 0,this.type=void 0,e&&(this.type=mt.tensorValueTypeFromProto(e.type.tensorType))}get from(){return this._from}get to(){return this._to}},Ii=class{constructor(e,r){e instanceof gs.onnx.NodeProto?(this.name=e.name,this.opType=e.opType,this.attributes=new oo(e.attribute)):e instanceof Si.Node&&(this.name=r??e.name(),this.opType=e.opType(),this.attributes=new oo(mt.tensorAttributesFromORTFormat(e))),this.inputs=[],this.outputs=[],this.executeNode=!0}},ms=class{constructor(e,r){if(!e)throw new TypeError("graph is empty");this.buildGraph(e),this.transformGraph(r),this.checkIsAcyclic()}getInputIndices(){return this._allInputIndices}getInputNames(){return this._allInputNames}getOutputIndices(){return this._allOutputIndices}getOutputNames(){return this._allOutputNames}getValues(){return this._allData}getNodes(){return this._nodes}buildGraph(e){if(e instanceof gs.onnx.GraphProto)this.buildGraphFromOnnxFormat(e);else if(e instanceof Si.Graph)this.buildGraphFromOrtFormat(e);else throw new TypeError("Graph type is not supported.")}buildGraphFromOnnxFormat(e){let r=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];let t=new Map;if(!e.input)throw new Error("missing information in graph: input");let o=[];for(let i of e.input){if(r.has(i.name))throw new Error(`duplicated input name: ${i.name}`);let u=this._allData.push(new ur(i))-1;r.set(i.name,u),o.push(i.name)}if(!e.initializer)throw new Error("missing information in graph: initializer");for(let i of e.initializer){let u=r.get(i.name);if(u===void 0){let a=new ur;a.type={shape:{dims:mt.tensorDimsFromProto(i.dims)},tensorType:mt.tensorDataTypeFromProto(i.dataType)},u=this._allData.push(a)-1,r.set(i.name,u)}this._allData[u]._from=-1,this._allData[u].tensor=ut.fromProto(i)}for(let i=0;i<this._allData.length;i++)this._allData[i].tensor||(this._allInputIndices.push(i),this._allInputNames.push(o[i]));if(!e.output)throw new Error("missing information in graph: output");for(let i of e.output){if(r.has(i.name))throw new Error(`duplicated output name: ${i.name}`);let u=this._allData.push(new ur(i))-1;r.set(i.name,u),this._allOutputIndices.push(u),this._allOutputNames.push(i.name)}if(!e.node)throw new Error("missing information in graph: node");for(let i of e.node){if(!i.name)for(let a=0;;a++){let s=`unnamed_${i.opType}_${a}`;if(!t.has(s)){i.name=s;break}}if(t.has(i.name))throw new Error(`duplicated node name: ${i.name}`);let u=this._nodes.push(new Ii(i))-1;t.set(i.name,u)}for(let i=0;i<this._nodes.length;i++){let u=this._nodes[i],a=e.node[i];if(!a.output)throw new Error(`missing output for node: ${a.name}`);for(let s of a.output){let l=r.get(s);if(typeof l>"u"&&(l=this._allData.push(new ur)-1,r.set(s,l)),u.outputs.push(l),this._allData[l]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${l}`);if(this._allData[l]._from=i,a.opType==="Constant"){if(!a.attribute||a.attribute.length!==1||!a.attribute[0].t)throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(!a.output||a.output.length!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");u.outputs.pop(),u.executeNode=!1,this._allData[l]._from=-1,this._allData[l].tensor=ut.fromProto(a.attribute[0].t)}}}for(let i=0;i<this._nodes.length;i++){let u=this._nodes[i],a=e.node[i];if(!a.input)throw new Error(`missing input for node: ${a.name}`);for(let s of a.input){let l=r.get(s);if(typeof l>"u"){if(s===""&&(a.input.length===3||a.input.length===4)&&a.opType==="Resize")continue;throw new Error(`unrecognized input '${s}' for node: ${a.name}`)}u.inputs.push(l),this._allData[l]._to.push(i)}}return!0}buildGraphFromOrtFormat(e){let r=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];let t=new Map,o=[];for(let i=0;i<e.inputsLength();i++){let u=e.inputs(i);if(r.has(u))throw new Error(`duplicated input name: ${u}`);for(let a=0;a<e.nodeArgsLength();a++)if(e.nodeArgs(a)?.name()===u){let s=new ur;if(e.nodeArgs(a)?.type()?.valueType()!==Si.TypeInfoValue.tensor_type)throw new Error("Unexpected value type for the nodeArg.");let c=e.nodeArgs(a).type().value(new Si.TensorTypeAndShape),p=mt.tensorDataTypeFromProto(c.elemType()),h=c.shape(),g=[];for(let b=0;b<h.dimLength();b++)g.push(It.longToNumber(h.dim(b).value().dimValue()));s.type={shape:{dims:g},tensorType:p};let y=this._allData.push(s)-1;r.set(u,y),o.push(u)}}for(let i=0;i<e.initializersLength();i++){let u=e.initializers(i),a=r.get(u.name());if(a===void 0){let s=new ur,l=mt.tensorDimsFromORTFormat(u),c=mt.tensorDataTypeFromProto(u.dataType());s.type={shape:{dims:l},tensorType:c},a=this._allData.push(s)-1,r.set(u.name(),a)}this._allData[a]._from=-1,this._allData[a].tensor=ut.fromOrtTensor(u)}for(let i=0;i<this._allData.length;i++)this._allData[i].tensor||(this._allInputIndices.push(i),this._allInputNames.push(o[i]));for(let i=0;i<e.outputsLength();i++){let u=e.outputs(i);if(r.has(u))throw new Error(`duplicated output name: ${u}`);let a=this._allData.push(new ur)-1;r.set(u,a),this._allOutputIndices.push(a),this._allOutputNames.push(u)}if(!e.nodes)throw new Error("missing information in graph: node");for(let i=0;i<e.nodesLength();i++){let u=e.nodes(i),a=u.name();if(!a)for(let l=0;a=`unnamed_${u.opType()}_${l}`,!!t.has(a);l++);if(t.has(a))throw new Error(`duplicated node name: ${a}`);let s=this._nodes.push(new Ii(u,a))-1;t.set(a,s)}for(let i=0;i<this._nodes.length;i++){let u=this._nodes[i],a=e.nodes(i);if(a==null)throw new Error(`No node exists at index ${i}`);if(a?.outputsLength()===0)throw new Error(`missing output for node: ${a.name}`);for(let s=0;s<a?.outputsLength();s++){let l=a?.outputs(s),c=r.get(l);if(typeof c>"u"&&(c=this._allData.push(new ur)-1,r.set(l,c)),u.outputs.push(c),this._allData[c]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${c}`);if(this._allData[c]._from=i,a.opType()==="Constant"){if(a.attributesLength()!==1||!a.attributes(0).t())throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(a.outputsLength()!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");u.outputs.pop(),u.executeNode=!1,this._allData[c]._from=-1,this._allData[c].tensor=ut.fromOrtTensor(a.attributes(0).t())}}}for(let i=0;i<this._nodes.length;i++){let u=this._nodes[i],a=e.nodes(i);if(a.inputsLength()===0)throw new Error(`missing input for node: ${a.name}`);for(let s=0;s<a.inputsLength();s++){let l=a.inputs(s),c=r.get(l);if(typeof c>"u")throw new Error(`unrecognized input '${l}' for node: ${a.name()}`);u.inputs.push(c),this._allData[c]._to.push(i)}}}checkIsAcyclic(){let e=new Set;this._allInputIndices.forEach(o=>{this._allData[o]._to.forEach(u=>{e.add(u)})});let r=Array.from(e),t=new Array(this._nodes.length).fill("white");for(;r.length>0;){let o=r.pop();t[o]==="gray"?t[o]="black":(r.push(o),t[o]="gray",this._nodes[o].outputs.forEach(i=>{let u=this._allData[i];if(typeof u.tensor<"u")throw new Error("node outputs should not be initialized");if(u._from!==o)throw new Error("from property of the Value object doesn't match index of Node being processed");u._to.forEach(a=>{if(t[a]==="gray")throw new Error("model graph is cyclic");t[a]==="white"&&r.push(a)})}))}}transformGraph(e){this.removeAllIdentityNodes(),this.removeAllDropoutNodes(),this.fuseConvActivationNodes(),e&&e.transformGraph(this),this.finalizeGraph()}finalizeGraph(){let e=0,r=new Array(this._nodes.length,0),t=0;for(let o=0;o<this._nodes.length;o++)r[o]=t,this._nodes[o].executeNode?(t!==o&&(this._nodes[t]=this._nodes[o]),t++):this._nodes[o].outputs.forEach(i=>{this._allData[i]._from=-2});this._nodes.splice(t,this._nodes.length-t);for(let o=0;o<this._allData.length;o++){let i=this._allData[o];i._from!==void 0&&i._from!==-1&&i._from!==-2&&(i._from=r[i._from]);for(let u=0;u<i._to.length;u++)if(i._to[u]>=0)i._to[u]=r[i._to[u]];else throw new Error("Trying to update a removed node")}e=0;for(let o=0;o<this._allData.length;o++){if(this._allData[o].from===-2&&this._allOutputIndices.indexOf(o+e)===-1){e++,this._allData.splice(o,1),o--;continue}if(e>0){let i=-1;this._allData[o].from!==void 0&&this._allData[o].from!==-1?(i=this._nodes[this._allData[o].from].outputs.indexOf(o+e),i!==-1&&(this._nodes[this._allData[o].from].outputs[i]=o)):(i=this._allInputIndices.indexOf(o+e),i!==-1&&(this._allInputIndices[i]=o)),this._allData[o].to.forEach(u=>{i=this._nodes[u].inputs.indexOf(o+e),i!==-1&&(this._nodes[u].inputs[i]=o)}),this._allData[o].to.length===0&&(i=this._allOutputIndices.indexOf(o+e),i!==-1&&(this._allOutputIndices[i]=o))}}}deleteNode(e){let r=this._nodes[e];if(r.outputs.length>1){for(let a=1;a<r.outputs.length;a++)if(this._allData[r.outputs[a]].to.length>0)throw new Error("Node deletion with more than one output connected to other nodes is not supported. ")}r.executeNode=!1;let t=r.inputs[0],o=r.outputs[0],i=this._allData[o].to;for(let a=0;a<r.inputs.length;a++){let s=this._allData[r.inputs[a]].to.indexOf(e);if(s===-1)throw new Error("The Value object doesn't have the current Node in it's 'to' property ");this._allData[r.inputs[a]].to.splice(s,1)}this._allData[o]._to=[];let u=this._allOutputIndices.indexOf(o);if(u!==-1&&(this._allOutputIndices[u]=t),i&&i.length>0)for(let a of i){let s=this._nodes[a].inputs.indexOf(o);if(s===-1)throw new Error("The Node object doesn't have the output Value in it's 'inputs' property ");this._nodes[a].inputs[s]=t,this._allData[t].to.push(a)}}removeAllDropoutNodes(){let e=0;for(let r of this._nodes){if(r.opType==="Dropout"){if(r.inputs.length!==1)throw new Error("Dropout nodes should only contain one input. ");if(r.outputs.length!==1&&r.outputs.length!==2)throw new Error("Dropout nodes should contain either 1 or 2 output(s)");if(r.outputs.length===2&&this._allData[r.outputs[1]]._to.length!==0)throw new Error("Dropout nodes's second output should not be referenced by other nodes");this.deleteNode(e)}e++}}removeAllIdentityNodes(){let e=0;for(let r of this._nodes)r.opType==="Identity"&&this.deleteNode(e),e++}isActivation(e){switch(e.opType){case"Relu":case"Sigmoid":case"Clip":return!0;default:return!1}}fuseConvActivationNodes(){for(let e of this._nodes)if(e.opType==="Conv"){let r=this._allData[e.outputs[0]]._to;if(r.length===1&&this.isActivation(this._nodes[r[0]])){let t=this._nodes[r[0]];if(t.opType==="Clip")if(t.inputs.length===1)try{e.attributes.set("activation_params","floats",[t.attributes.getFloat("min"),t.attributes.getFloat("max")])}catch{e.attributes.set("activation_params","floats",[Hr,jr])}else if(t.inputs.length>=3&&this._allData[t.inputs[1]].tensor!==void 0&&this._allData[t.inputs[2]].tensor!==void 0)e.attributes.set("activation_params","floats",[this._allData[t.inputs[1]].tensor.floatData[0],this._allData[t.inputs[2]].tensor.floatData[0]]);else continue;e.attributes.set("activation","string",t.opType),this.deleteNode(r[0])}}}}});var oh,Vx,_i,ih=P(()=>{"use strict";jo();nh();Hn();oh=cn(hn());Le();Vx=oe.experimental.fbs,_i=class{constructor(){}load(e,r,t){if(!t)try{this.loadFromOnnxFormat(e,r);return}catch(o){if(t!==void 0)throw o}this.loadFromOrtFormat(e,r)}loadFromOnnxFormat(e,r){let t=oh.onnx.ModelProto.decode(e);if(It.longToNumber(t.irVersion)<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=t.opsetImport.map(i=>({domain:i.domain,version:It.longToNumber(i.version)})),this._graph=bs.from(t.graph,r)}loadFromOrtFormat(e,r){let t=new C.ByteBuffer(e),o=Vx.InferenceSession.getRootAsInferenceSession(t).model();if(It.longToNumber(o.irVersion())<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=[];for(let u=0;u<o.opsetImportLength();u++){let a=o.opsetImport(u);this._opsets.push({domain:a?.domain(),version:It.longToNumber(a.version())})}this._graph=bs.from(o.graph(),r)}get graph(){return this._graph}get opsets(){return this._opsets}}});var Ai,ah=P(()=>{"use strict";eh();th();Pt();ih();Ai=class{constructor(e={}){this._initialized=!1,this.backendHint=e.backendHint,this.profiler=Uo.create(e.profiler),this.context={profiler:this.profiler,graphInputTypes:[],graphInputDims:[]}}get inputNames(){return this._model.graph.getInputNames()}get outputNames(){return this._model.graph.getOutputNames()}startProfiling(){this.profiler.start()}endProfiling(){this.profiler.stop()}async loadModel(e,r,t){await this.profiler.event("session","Session.loadModel",async()=>{let o=await ps(this.backendHint);if(this.sessionHandler=o.createSessionHandler(this.context),this._model=new _i,typeof e=="string"){let i=e.endsWith(".ort");if(typeof process<"u"&&process.versions&&process.versions.node){let u=await(void 0)(e);this.initialize(u,i)}else{let a=await(await fetch(e)).arrayBuffer();this.initialize(new Uint8Array(a),i)}}else if(ArrayBuffer.isView(e))this.initialize(e);else{let i=new Uint8Array(e,r||0,t||e.byteLength);this.initialize(i)}})}initialize(e,r){if(this._initialized)throw new Error("already initialized");this.profiler.event("session","Session.initialize",()=>{let t=this.sessionHandler.transformGraph?this.sessionHandler:void 0;this._model.load(e,t,r),this.sessionHandler.onGraphInitialized&&this.sessionHandler.onGraphInitialized(this._model.graph),this.initializeOps(this._model.graph),this._executionPlan=new $i(this._model.graph,this._ops,this.profiler)}),this._initialized=!0}async run(e){if(!this._initialized)throw new Error("session not initialized yet");return this.profiler.event("session","Session.run",async()=>{let r=this.normalizeAndValidateInputs(e),t=await this._executionPlan.execute(this.sessionHandler,r);return this.createOutput(t)})}normalizeAndValidateInputs(e){let r=this._model.graph.getInputNames();if(Array.isArray(e)){if(e.length!==r.length)throw new Error(`incorrect input array length: expected ${r.length} but got ${e.length}`)}else{if(e.size!==r.length)throw new Error(`incorrect input map size: expected ${r.length} but got ${e.size}`);let t=new Array(e.size),o=0;for(let i=0;i<r.length;++i){let u=e.get(r[i]);if(!u)throw new Error(`missing input tensor for: '${name}'`);t[o++]=u}e=t}if(!this.context.graphInputTypes||this.context.graphInputTypes.length===0||!this.context.graphInputDims||this.context.graphInputDims.length===0){let t=this._model.graph.getInputIndices(),o=this._model.graph.getValues(),i=new Array(t.length);for(let u=0;u<t.length;++u){let a=o[t[u]];i[u]=a.type.shape.dims,this.context.graphInputTypes.push(a.type.tensorType),this.context.graphInputDims.push(e[u].dims)}this.validateInputTensorDims(i,e,!0)}else this.validateInputTensorDims(this.context.graphInputDims,e,!1);return this.validateInputTensorTypes(this.context.graphInputTypes,e),e}validateInputTensorTypes(e,r){for(let t=0;t<r.length;t++){let o=e[t],i=r[t].type;if(o!==i)throw new Error(`input tensor[${t}] check failed: expected type '${o}' but got ${i}`)}}validateInputTensorDims(e,r,t){for(let o=0;o<r.length;o++){let i=e[o],u=r[o].dims;if(!this.compareTensorDims(i,u,t))throw new Error(`input tensor[${o}] check failed: expected shape '[${i.join(",")}]' but got [${u.join(",")}]`)}}compareTensorDims(e,r,t){if(e.length!==r.length)return!1;for(let o=0;o<e.length;++o)if(e[o]!==r[o]&&(!t||e[o]!==0))return!1;return!0}createOutput(e){let r=this._model.graph.getOutputNames();if(e.length!==r.length)throw new Error("expected number of outputs do not match number of generated outputs");let t=new Map;for(let o=0;o<r.length;++o)t.set(r[o],e[o]);return t}initializeOps(e){let r=e.getNodes();this._ops=new Array(r.length);for(let t=0;t<r.length;t++)this._ops[t]=this.sessionHandler.resolve(r[t],this._model.opsets,e)}}});var Oi,sh=P(()=>{"use strict";Ct();qr();Oi=class{constructor(e){this.session=e;this.inputNames=this.session.inputNames,this.outputNames=this.session.outputNames}async dispose(){}async run(e,r,t){let o=new Map;for(let a in e)if(Object.hasOwnProperty.call(e,a)){let s=e[a];o.set(a,new ut(s.dims,s.type,void 0,void 0,s.data))}let i=await this.session.run(o),u={};return i.forEach((a,s)=>{u[s]=new Et(a.type,a.data,a.dims)}),u}startProfiling(){this.session.startProfiling()}endProfiling(){this.session.endProfiling()}}});var uh={};Nr(uh,{onnxjsBackend:()=>Hx});var ys,Hx,lh=P(()=>{"use strict";ah();sh();ys=class{async init(){}async createInferenceSessionHandler(e,r){let t=new Ai(r);return typeof e=="string"?await t.loadModel(e):await t.loadModel(e),new Oi(t)}},Hx=new ys});var vs={};Nr(vs,{readFile:()=>jx});var jx,xs=P(()=>{jx=void 0});var ws={};Nr(ws,{join:()=>qx});var qx,Ts=P(()=>{qx=void 0});var fh=He((dh,$s)=>{"use strict";var ch=(()=>{var n=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(n=n||__filename),function(e={}){var r=e,t,o;r.ready=new Promise((f,v)=>{t=f,o=v}),r.jsepInit=(f,v,$,A,k,j,J,Q)=>{r.Za=f,r.Oa=v,r.Qa=$,r.Ja=A,r.Pa=k,r.ra=j,r.Ra=J,r.Sa=Q,v=(ne,ie,le)=>(...Se)=>{let Ee=Ot,L=ie?.();Se=ne(...Se);let ye=ie?.();return L!==ye&&(ne=ye,le(L),ie=le=null),Ot!=Ee?wo():Se},$=ne=>async(...ie)=>{try{if(r.Da)throw Error("Session already started");let le=r.Da={Ta:ie[0],errors:[]},Se=await ne(...ie);if(r.Da!==le)throw Error("Session mismatch");f.flush();let Ee=le.errors;if(0<Ee.length){let L=await Promise.all(Ee);if(L=L.filter(ye=>ye),0<L.length)throw Error(L.join(`
`))}return Se}finally{r.Da=null}},r._OrtRun=$(v(r._OrtRun,()=>r._OrtRun,ne=>r._OrtRun=ne)),r._OrtRunWithBinding=$(v(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,ne=>r._OrtRunWithBinding=ne)),r._OrtBindInput=v(r._OrtBindInput,()=>r._OrtBindInput,ne=>r._OrtBindInput=ne),r.jsepRegisterBuffer=(ne,ie,le,Se)=>f.registerBuffer(ne,ie,le,Se),r.jsepUnregisterBuffers=ne=>{f.unregisterBuffers(ne)},r.jsepGetBuffer=ne=>f.getBuffer(ne),r.jsepCreateDownloader=(ne,ie,le)=>f.createDownloader(ne,ie,le)};var i=Object.assign({},r),u="./this.program",a=(f,v)=>{throw v},s=typeof window=="object",l=typeof importScripts=="function",c=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",p="",h,g,y;if(c){var b=(xs(),Sr(vs)),w=(Ts(),Sr(ws));p=l?w.dirname(p)+"/":__dirname+"/",h=(f,v)=>(f=f.startsWith("file://")?new URL(f):w.normalize(f),b.readFileSync(f,v?void 0:"utf8")),y=f=>(f=h(f,!0),f.buffer||(f=new Uint8Array(f)),f),g=(f,v,$,A=!0)=>{f=f.startsWith("file://")?new URL(f):w.normalize(f),b.readFile(f,A?void 0:"utf8",(k,j)=>{k?$(k):v(A?j.buffer:j)})},!r.thisProgram&&1<process.argv.length&&(u=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),a=(f,v)=>{throw process.exitCode=f,v},r.inspect=()=>"[Emscripten Module object]"}else(s||l)&&(l?p=self.location.href:typeof document<"u"&&document.currentScript&&(p=document.currentScript.src),n&&(p=n),p.indexOf("blob:")!==0?p=p.substr(0,p.replace(/[?#].*/,"").lastIndexOf("/")+1):p="",h=f=>{var v=new XMLHttpRequest;return v.open("GET",f,!1),v.send(null),v.responseText},l&&(y=f=>{var v=new XMLHttpRequest;return v.open("GET",f,!1),v.responseType="arraybuffer",v.send(null),new Uint8Array(v.response)}),g=(f,v,$)=>{var A=new XMLHttpRequest;A.open("GET",f,!0),A.responseType="arraybuffer",A.onload=()=>{A.status==200||A.status==0&&A.response?v(A.response):$()},A.onerror=$,A.send(null)});var S=r.print||console.log.bind(console),O=r.printErr||console.error.bind(console);Object.assign(r,i),i=null,r.thisProgram&&(u=r.thisProgram),r.quit&&(a=r.quit);var E;r.wasmBinary&&(E=r.wasmBinary);var B=r.noExitRuntime||!0;typeof WebAssembly!="object"&&yt("no native wasm support detected");var z,M,G=!1,K,Z,me,R,te,Ve;function ge(){var f=z.buffer;r.HEAP8=Z=new Int8Array(f),r.HEAP16=new Int16Array(f),r.HEAP32=R=new Int32Array(f),r.HEAPU8=me=new Uint8Array(f),r.HEAPU16=new Uint16Array(f),r.HEAPU32=te=new Uint32Array(f),r.HEAPF32=new Float32Array(f),r.HEAPF64=Ve=new Float64Array(f)}var Ne=[],ee=[],Ue=[];function st(){var f=r.preRun.shift();Ne.unshift(f)}var We=0,Xe=null,Qt=null;function yt(f){throw r.onAbort&&r.onAbort(f),f="Aborted("+f+")",O(f),G=!0,K=1,f=new WebAssembly.RuntimeError(f+". Build with -sASSERTIONS for more info."),o(f),f}function pr(f){return f.startsWith("data:application/octet-stream;base64,")}var H;if(H="ort-wasm-simd.wasm",!pr(H)){var $e=H;H=r.locateFile?r.locateFile($e,p):p+$e}function Ie(f){if(f==H&&E)return new Uint8Array(E);if(y)return y(f);throw"both async and sync fetching of the wasm failed"}function gt(f){if(!E&&(s||l)){if(typeof fetch=="function"&&!f.startsWith("file://"))return fetch(f,{credentials:"same-origin"}).then(v=>{if(!v.ok)throw"failed to load wasm binary file at '"+f+"'";return v.arrayBuffer()}).catch(()=>Ie(f));if(g)return new Promise((v,$)=>{g(f,A=>v(new Uint8Array(A)),$)})}return Promise.resolve().then(()=>Ie(f))}function vt(f,v,$){return gt(f).then(A=>WebAssembly.instantiate(A,v)).then(A=>A).then($,A=>{O("failed to asynchronously prepare wasm: "+A),yt(A)})}function et(f,v){var $=H;return E||typeof WebAssembly.instantiateStreaming!="function"||pr($)||$.startsWith("file://")||c||typeof fetch!="function"?vt($,f,v):fetch($,{credentials:"same-origin"}).then(A=>WebAssembly.instantiateStreaming(A,f).then(v,function(k){return O("wasm streaming compile failed: "+k),O("falling back to ArrayBuffer instantiation"),vt($,f,v)}))}var Ze,Ft={915152:f=>{r.ra("Abs",f,void 0)},915203:f=>{r.ra("Neg",f,void 0)},915254:f=>{r.ra("Floor",f,void 0)},915307:f=>{r.ra("Ceil",f,void 0)},915359:f=>{r.ra("Reciprocal",f,void 0)},915417:f=>{r.ra("Sqrt",f,void 0)},915469:f=>{r.ra("Exp",f,void 0)},915520:f=>{r.ra("Erf",f,void 0)},915571:f=>{r.ra("Sigmoid",f,void 0)},915626:f=>{r.ra("Log",f,void 0)},915677:f=>{r.ra("Sin",f,void 0)},915728:f=>{r.ra("Cos",f,void 0)},915779:f=>{r.ra("Tan",f,void 0)},915830:f=>{r.ra("Asin",f,void 0)},915882:f=>{r.ra("Acos",f,void 0)},915934:f=>{r.ra("Atan",f,void 0)},915986:f=>{r.ra("Sinh",f,void 0)},916038:f=>{r.ra("Cosh",f,void 0)},916090:f=>{r.ra("Asinh",f,void 0)},916143:f=>{r.ra("Acosh",f,void 0)},916196:f=>{r.ra("Atanh",f,void 0)},916249:f=>{r.ra("Tanh",f,void 0)},916301:f=>{r.ra("Not",f,void 0)},916352:(f,v,$)=>{r.ra("ClipV10",f,{min:v,max:$})},916424:f=>{r.ra("Clip",f,void 0)},916476:(f,v)=>{r.ra("Elu",f,{alpha:v})},916534:f=>{r.ra("Relu",f,void 0)},916586:(f,v)=>{r.ra("LeakyRelu",f,{alpha:v})},916650:(f,v)=>{r.ra("ThresholdedRelu",f,{alpha:v})},916720:(f,v)=>{r.ra("Cast",f,{to:v})},916778:f=>{r.ra("Add",f,void 0)},916829:f=>{r.ra("Sub",f,void 0)},916880:f=>{r.ra("Mul",f,void 0)},916931:f=>{r.ra("Div",f,void 0)},916982:f=>{r.ra("Pow",f,void 0)},917033:f=>{r.ra("Equal",f,void 0)},917086:f=>{r.ra("Greater",f,void 0)},917141:f=>{r.ra("GreaterOrEqual",f,void 0)},917203:f=>{r.ra("Less",f,void 0)},917255:f=>{r.ra("LessOrEqual",f,void 0)},917314:(f,v,$,A,k)=>{r.ra("ReduceMean",f,{keepDims:!!v,noopWithEmptyAxes:!!$,axes:A?Array.from(R.subarray(k>>>0,k+A>>>0)):[]})},917478:(f,v,$,A,k)=>{r.ra("ReduceMax",f,{keepDims:!!v,noopWithEmptyAxes:!!$,axes:A?Array.from(R.subarray(k>>>0,k+A>>>0)):[]})},917641:(f,v,$,A,k)=>{r.ra("ReduceMin",f,{keepDims:!!v,noopWithEmptyAxes:!!$,axes:A?Array.from(R.subarray(k>>>0,k+A>>>0)):[]})},917804:(f,v,$,A,k)=>{r.ra("ReduceProd",f,{keepDims:!!v,noopWithEmptyAxes:!!$,axes:A?Array.from(R.subarray(k>>>0,k+A>>>0)):[]})},917968:(f,v,$,A,k)=>{r.ra("ReduceSum",f,{keepDims:!!v,noopWithEmptyAxes:!!$,axes:A?Array.from(R.subarray(k>>>0,k+A>>>0)):[]})},918131:(f,v,$,A,k)=>{r.ra("ReduceL1",f,{keepDims:!!v,noopWithEmptyAxes:!!$,axes:A?Array.from(R.subarray(k>>>0,k+A>>>0)):[]})},918293:(f,v,$,A,k)=>{r.ra("ReduceL2",f,{keepDims:!!v,noopWithEmptyAxes:!!$,axes:A?Array.from(R.subarray(k>>>0,k+A>>>0)):[]})},918455:(f,v,$,A,k)=>{r.ra("ReduceLogSum",f,{keepDims:!!v,noopWithEmptyAxes:!!$,axes:A?Array.from(R.subarray(k>>>0,k+A>>>0)):[]})},918621:(f,v,$,A,k)=>{r.ra("ReduceSumSquare",f,{keepDims:!!v,noopWithEmptyAxes:!!$,axes:A?Array.from(R.subarray(k>>>0,k+A>>>0)):[]})},918790:(f,v,$,A,k)=>{r.ra("ReduceLogSumExp",f,{keepDims:!!v,noopWithEmptyAxes:!!$,axes:A?Array.from(R.subarray(k>>>0,k+A>>>0)):[]})},918959:f=>{r.ra("Where",f,void 0)},919012:(f,v,$)=>{r.ra("Transpose",f,{perm:v?Array.from(R.subarray($>>>0,$+v>>>0)):[]})},919125:(f,v,$,A,k,j,J,Q,ne,ie)=>{r.ra("Conv",f,{format:ne?"NHWC":"NCHW",auto_pad:v,dilations:[$],group:A,kernel_shape:[k],pads:[j,J],strides:[Q],w_is_const:()=>!!Z[ie>>>0]})},919353:(f,v,$,A,k,j,J,Q,ne,ie,le,Se,Ee,L,ye)=>{r.ra("Conv",f,{format:L?"NHWC":"NCHW",auto_pad:v,dilations:[$,A],group:k,kernel_shape:[j,J],pads:[Q,ne,ie,le],strides:[Se,Ee],w_is_const:()=>!!Z[ye>>>0]})},919612:(f,v,$,A,k,j,J,Q,ne,ie)=>{r.ra("Conv",f,{format:ne?"NHWC":"NCHW",auto_pad:v,dilations:[$],group:A,kernel_shape:[k],pads:[j,J],strides:[Q],w_is_const:()=>!!Z[ie>>>0]})},919840:(f,v,$,A,k,j,J,Q,ne,ie,le,Se,Ee,L,ye)=>{r.ra("Conv",f,{format:L?"NHWC":"NCHW",auto_pad:v,dilations:[$,A],group:k,kernel_shape:[j,J],pads:[Q,ne,ie,le],strides:[Se,Ee],w_is_const:()=>!!Z[ye>>>0]})},920099:(f,v,$,A,k,j,J,Q,ne,ie,le,Se,Ee,L)=>{r.ra("ConvTranspose",f,{format:ne?"NHWC":"NCHW",autoPad:v,dilations:[$],group:A,kernel_shape:[k],pads:[j,J],strides:[Q],wIsConst:()=>!!Z[ie>>>0],outputPadding:le?Array.from(R.subarray(Se>>>0,Se+le>>>0)):[],outputShape:Ee?Array.from(R.subarray(L>>>0,L+Ee>>>0)):[]})},920479:(f,v,$,A,k,j,J,Q,ne,ie,le,Se,Ee)=>{r.ra("ConvTranspose",f,{format:Q?"NHWC":"NCHW",autoPad:v,dilations:Array.from(R.subarray($>>>0,$+2>>>0)),group:A,kernelShape:Array.from(R.subarray(k>>>0,k+2>>>0)),pads:Array.from(R.subarray(j>>>0,j+4>>>0)),strides:Array.from(R.subarray(J>>>0,J+2>>>0)),wIsConst:()=>!!Z[ne>>>0],outputPadding:0<ie?Array.from(R.subarray(le>>>0,le+ie>>>0)):[],outputShape:0<Se?Array.from(R.subarray(Ee>>>0,Ee+Se>>>0)):[]})},921002:(f,v,$,A,k,j,J,Q,ne,ie,le,Se,Ee,L)=>{r.ra("ConvTranspose",f,{format:ne?"NHWC":"NCHW",autoPad:v,dilations:[$],group:A,kernel_shape:[k],pads:[j,J],strides:[Q],wIsConst:()=>!!Z[ie>>>0],outputPadding:le?Array.from(R.subarray(Se>>>0,Se+le>>>0)):[],outputShape:Ee?Array.from(R.subarray(L>>>0,L+Ee>>>0)):[]})},921382:(f,v,$,A,k,j,J,Q,ne,ie,le,Se,Ee)=>{r.ra("ConvTranspose",f,{format:Q?"NHWC":"NCHW",autoPad:v,dilations:Array.from(R.subarray($>>>0,$+2>>>0)),group:A,kernelShape:Array.from(R.subarray(k>>>0,k+2>>>0)),pads:Array.from(R.subarray(j>>>0,j+4>>>0)),strides:Array.from(R.subarray(J>>>0,J+2>>>0)),wIsConst:()=>!!Z[ne>>>0],outputPadding:0<ie?Array.from(R.subarray(le>>>0,le+ie>>>0)):[],outputShape:0<Se?Array.from(R.subarray(Ee>>>0,Ee+Se>>>0)):[]})},921905:(f,v)=>{r.ra("GlobalAveragePool",f,{format:v?"NHWC":"NCHW"})},921996:(f,v,$,A,k,j,J,Q,ne,ie,le,Se,Ee,L,ye,Pe)=>{r.ra("AveragePool",f,{format:Pe?"NHWC":"NCHW",auto_pad:v,ceil_mode:$,count_include_pad:A,storage_order:k,dilations:[j,J],kernel_shape:[Q,ne],pads:[ie,le,Se,Ee],strides:[L,ye]})},922280:(f,v)=>{r.ra("GlobalAveragePool",f,{format:v?"NHWC":"NCHW"})},922371:(f,v,$,A,k,j,J,Q,ne,ie,le,Se,Ee,L,ye,Pe)=>{r.ra("AveragePool",f,{format:Pe?"NHWC":"NCHW",auto_pad:v,ceil_mode:$,count_include_pad:A,storage_order:k,dilations:[j,J],kernel_shape:[Q,ne],pads:[ie,le,Se,Ee],strides:[L,ye]})},922655:(f,v)=>{r.ra("GlobalMaxPool",f,{format:v?"NHWC":"NCHW"})},922742:(f,v,$,A,k,j,J,Q,ne,ie,le,Se,Ee,L,ye,Pe)=>{r.ra("MaxPool",f,{format:Pe?"NHWC":"NCHW",auto_pad:v,ceil_mode:$,count_include_pad:A,storage_order:k,dilations:[j,J],kernel_shape:[Q,ne],pads:[ie,le,Se,Ee],strides:[L,ye]})},923022:(f,v)=>{r.ra("GlobalMaxPool",f,{format:v?"NHWC":"NCHW"})},923109:(f,v,$,A,k,j,J,Q,ne,ie,le,Se,Ee,L,ye,Pe)=>{r.ra("MaxPool",f,{format:Pe?"NHWC":"NCHW",auto_pad:v,ceil_mode:$,count_include_pad:A,storage_order:k,dilations:[j,J],kernel_shape:[Q,ne],pads:[ie,le,Se,Ee],strides:[L,ye]})},923389:(f,v,$,A,k)=>{r.ra("Gemm",f,{alpha:v,beta:$,transA:A,transB:k})},923493:f=>{r.ra("MatMul",f,void 0)},923547:(f,v,$,A)=>{r.ra("ArgMax",f,{keepDims:!!v,selectLastIndex:!!$,axis:A})},923655:(f,v,$,A)=>{r.ra("ArgMin",f,{keepDims:!!v,selectLastIndex:!!$,axis:A})},923763:(f,v)=>{r.ra("Softmax",f,{axis:v})},923826:(f,v)=>{r.ra("Concat",f,{axis:v})},923886:(f,v,$,A,k)=>{r.ra("Split",f,{axis:v,numOutputs:$,splitSizes:A?Array.from(R.subarray(k>>>0,k+A>>>0)):[]})},924031:f=>{r.ra("Expand",f,void 0)},924085:(f,v)=>{r.ra("Gather",f,{axis:Number(v)})},924156:(f,v)=>{r.ra("GatherElements",f,{axis:Number(v)})},924235:(f,v,$,A,k,j,J,Q,ne,ie,le)=>{r.ra("Resize",f,{antialias:v,axes:$?Array.from(R.subarray(A>>>0,A+$>>>0)):[],coordinateTransformMode:Vt(k),cubicCoeffA:j,excludeOutside:J,extrapolationValue:Q,keepAspectRatioPolicy:Vt(ne),mode:Vt(ie),nearestMode:Vt(le)})},924586:(f,v,$,A,k,j,J)=>{r.ra("Slice",f,{starts:v?Array.from(R.subarray($>>>0,$+v>>>0)):[],ends:A?Array.from(R.subarray(k>>>0,k+A>>>0)):[],axes:j?Array.from(R.subarray(J>>>0,J+j>>>0)):[]})},924817:f=>{r.ra("Tile",f,void 0)},924869:(f,v,$)=>{r.ra("LayerNormalization",f,{axis:Number(v),epsilon:Number($)})},924976:(f,v,$)=>{r.ra("InstanceNormalization",f,{epsilon:v,format:$?"NHWC":"NCHW"})},925090:(f,v,$)=>{r.ra("InstanceNormalization",f,{epsilon:v,format:$?"NHWC":"NCHW"})},925204:f=>{r.ra("Range",f,void 0)},925257:(f,v)=>{r.ra("Einsum",f,{equation:Vt(v)})},925338:(f,v,$,A,k)=>{r.ra("Pad",f,{mode:v,value:$,pads:A?Array.from(R.subarray(k>>>0,k+A>>>0)):[]})},925470:f=>{r.ra("Gelu",f,void 0)},925522:f=>{r.ra("BiasAdd",f,void 0)},925577:f=>{r.ra("BiasSplitGelu",f,void 0)},925638:(f,v)=>{r.ra("SkipLayerNormalization",f,{epsilon:v})},925719:f=>{r.Ra(f)},925753:(f,v)=>r.Sa(f,v,r.Da.Ta,r.Da.errors),925865:f=>r.Oa(f),925898:f=>r.Qa(f),925930:(f,v,$)=>{r.Ja(f,v,$,!0)},925969:(f,v,$)=>{r.Ja(f,v,$)}};function Gt(f){this.name="ExitStatus",this.message=`Program terminated with exit(${f})`,this.status=f}var At=f=>{for(;0<f.length;)f.shift()(r)};function In(f){this.Ha=f-24,this.Ma=function(v){te[this.Ha+4>>2>>>0]=v},this.La=function(v){te[this.Ha+8>>2>>>0]=v},this.Ya=function(v,$){this.Ka(),this.Ma(v),this.La($)},this.Ka=function(){te[this.Ha+16>>2>>>0]=0}}var wr=0,go=0,_n=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Wt=(f,v,$)=>{v>>>=0;var A=v+$;for($=v;f[$]&&!($>=A);)++$;if(16<$-v&&f.buffer&&_n)return _n.decode(f.subarray(v,$));for(A="";v<$;){var k=f[v++];if(k&128){var j=f[v++]&63;if((k&224)==192)A+=String.fromCharCode((k&31)<<6|j);else{var J=f[v++]&63;k=(k&240)==224?(k&15)<<12|j<<6|J:(k&7)<<18|j<<12|J<<6|f[v++]&63,65536>k?A+=String.fromCharCode(k):(k-=65536,A+=String.fromCharCode(55296|k>>10,56320|k&1023))}}else A+=String.fromCharCode(k)}return A},Vt=(f,v)=>(f>>>=0)?Wt(me,f,v):"",er=f=>{for(var v=0,$=0;$<f.length;++$){var A=f.charCodeAt($);127>=A?v++:2047>=A?v+=2:55296<=A&&57343>=A?(v+=4,++$):v+=3}return v},en=(f,v,$,A)=>{if($>>>=0,!(0<A))return 0;var k=$;A=$+A-1;for(var j=0;j<f.length;++j){var J=f.charCodeAt(j);if(55296<=J&&57343>=J){var Q=f.charCodeAt(++j);J=65536+((J&1023)<<10)|Q&1023}if(127>=J){if($>=A)break;v[$++>>>0]=J}else{if(2047>=J){if($+1>=A)break;v[$++>>>0]=192|J>>6}else{if(65535>=J){if($+2>=A)break;v[$++>>>0]=224|J>>12}else{if($+3>=A)break;v[$++>>>0]=240|J>>18,v[$++>>>0]=128|J>>12&63}v[$++>>>0]=128|J>>6&63}v[$++>>>0]=128|J&63}}return v[$>>>0]=0,$-k},Tr=f=>f%4===0&&(f%100!==0||f%400===0),An=[0,31,60,91,121,152,182,213,244,274,305,335],bo=[0,31,59,90,120,151,181,212,243,273,304,334],hr=f=>{var v=er(f)+1,$=sn(v);return $&&en(f,me,$,v),$},Br=[],Rr=(f,v)=>{Br.length=0;var $;for(v>>=2;$=me[f++>>>0];)v+=$!=105&v,Br.push($==105?R[v>>>0]:Ve[v++>>>1]),++v;return Br},Mr={},On=()=>{if(!tn){var f={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:u||"./this.program"},v;for(v in Mr)Mr[v]===void 0?delete f[v]:f[v]=Mr[v];var $=[];for(v in f)$.push(`${v}=${f[v]}`);tn=$}return tn},tn,yo=[null,[],[]],En=[31,29,31,30,31,30,31,31,30,31,30,31],ht=[31,28,31,30,31,30,31,31,30,31,30,31];function vo(f){var v=Array(er(f)+1);return en(f,v,0,v.length),v}function rn(f,v,$,A){function k(L,ye,Pe){for(L=typeof L=="number"?L.toString():L||"";L.length<ye;)L=Pe[0]+L;return L}function j(L,ye){return k(L,ye,"0")}function J(L,ye){function Pe(_o){return 0>_o?-1:0<_o?1:0}var tr;return(tr=Pe(L.getFullYear()-ye.getFullYear()))===0&&(tr=Pe(L.getMonth()-ye.getMonth()))===0&&(tr=Pe(L.getDate()-ye.getDate())),tr}function Q(L){switch(L.getDay()){case 0:return new Date(L.getFullYear()-1,11,29);case 1:return L;case 2:return new Date(L.getFullYear(),0,3);case 3:return new Date(L.getFullYear(),0,2);case 4:return new Date(L.getFullYear(),0,1);case 5:return new Date(L.getFullYear()-1,11,31);case 6:return new Date(L.getFullYear()-1,11,30)}}function ne(L){var ye=L.Ba;for(L=new Date(new Date(L.Ca+1900,0,1).getTime());0<ye;){var Pe=L.getMonth(),tr=(Tr(L.getFullYear())?En:ht)[Pe];if(ye>tr-L.getDate())ye-=tr-L.getDate()+1,L.setDate(1),11>Pe?L.setMonth(Pe+1):(L.setMonth(0),L.setFullYear(L.getFullYear()+1));else{L.setDate(L.getDate()+ye);break}}return Pe=new Date(L.getFullYear()+1,0,4),ye=Q(new Date(L.getFullYear(),0,4)),Pe=Q(Pe),0>=J(ye,L)?0>=J(Pe,L)?L.getFullYear()+1:L.getFullYear():L.getFullYear()-1}f>>>=0,v>>>=0,$>>>=0,A>>>=0;var ie=R[A+40>>2>>>0];A={Wa:R[A>>2>>>0],Va:R[A+4>>2>>>0],Ea:R[A+8>>2>>>0],Ia:R[A+12>>2>>>0],Fa:R[A+16>>2>>>0],Ca:R[A+20>>2>>>0],wa:R[A+24>>2>>>0],Ba:R[A+28>>2>>>0],$a:R[A+32>>2>>>0],Ua:R[A+36>>2>>>0],Xa:ie?Vt(ie):""},$=Vt($),ie={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var le in ie)$=$.replace(new RegExp(le,"g"),ie[le]);var Se="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Ee="January February March April May June July August September October November December".split(" ");ie={"%a":L=>Se[L.wa].substring(0,3),"%A":L=>Se[L.wa],"%b":L=>Ee[L.Fa].substring(0,3),"%B":L=>Ee[L.Fa],"%C":L=>j((L.Ca+1900)/100|0,2),"%d":L=>j(L.Ia,2),"%e":L=>k(L.Ia,2," "),"%g":L=>ne(L).toString().substring(2),"%G":L=>ne(L),"%H":L=>j(L.Ea,2),"%I":L=>(L=L.Ea,L==0?L=12:12<L&&(L-=12),j(L,2)),"%j":L=>{for(var ye=0,Pe=0;Pe<=L.Fa-1;ye+=(Tr(L.Ca+1900)?En:ht)[Pe++]);return j(L.Ia+ye,3)},"%m":L=>j(L.Fa+1,2),"%M":L=>j(L.Va,2),"%n":()=>`
`,"%p":L=>0<=L.Ea&&12>L.Ea?"AM":"PM","%S":L=>j(L.Wa,2),"%t":()=>"	","%u":L=>L.wa||7,"%U":L=>j(Math.floor((L.Ba+7-L.wa)/7),2),"%V":L=>{var ye=Math.floor((L.Ba+7-(L.wa+6)%7)/7);if(2>=(L.wa+371-L.Ba-2)%7&&ye++,ye)ye==53&&(Pe=(L.wa+371-L.Ba)%7,Pe==4||Pe==3&&Tr(L.Ca)||(ye=1));else{ye=52;var Pe=(L.wa+7-L.Ba-1)%7;(Pe==4||Pe==5&&Tr(L.Ca%400-1))&&ye++}return j(ye,2)},"%w":L=>L.wa,"%W":L=>j(Math.floor((L.Ba+7-(L.wa+6)%7)/7),2),"%y":L=>(L.Ca+1900).toString().substring(2),"%Y":L=>L.Ca+1900,"%z":L=>{L=L.Ua;var ye=0<=L;return L=Math.abs(L)/60,(ye?"+":"-")+("0000"+(L/60*100+L%60)).slice(-4)},"%Z":L=>L.Xa,"%%":()=>"%"},$=$.replace(/%%/g,"\0\0");for(le in ie)$.includes(le)&&($=$.replace(new RegExp(le,"g"),ie[le](A)));return $=$.replace(/\0\0/g,"%"),le=vo($),le.length>v?0:(Z.set(le,f>>>0),le.length-1)}function fe(f){try{f()}catch(v){yt(v)}}function nn(f){var v={},$;for($ in f)(function(A){var k=f[A];v[A]=typeof k=="function"?function(){on.push(A);try{return k.apply(null,arguments)}finally{G||(on.pop()===A||yt(),Ot&&Ut===1&&on.length===0&&(Ut=0,fe(Fn),typeof Fibers<"u"&&Fibers.ab()))}}:k})($);return v}var Ut=0,Ot=null,Cn=0,on=[],Pn={},Dn={},xo=0,an=null,kn=[];function wo(){return new Promise((f,v)=>{an={resolve:f,reject:v}})}function To(){var f=sn(65548),v=f+12;te[f>>2>>>0]=v,te[f+4>>2>>>0]=v+65536,v=on[0];var $=Pn[v];return $===void 0&&($=xo++,Pn[v]=$,Dn[$]=v),R[f+8>>2>>>0]=$,f}function $o(f){if(!G){if(Ut===0){var v=!1,$=!1;f((A=0)=>{if(!G&&(Cn=A,v=!0,$)){Ut=2,fe(()=>Gn(Ot)),typeof Browser<"u"&&Browser.Ga.Na&&Browser.Ga.resume(),A=!1;try{var k=(0,M[Dn[R[Ot+8>>2>>>0]]])()}catch(Q){k=Q,A=!0}var j=!1;if(!Ot){var J=an;J&&(an=null,(A?J.reject:J.resolve)(k),j=!0)}if(A&&!j)throw k}}),$=!0,v||(Ut=1,Ot=To(),typeof Browser<"u"&&Browser.Ga.Na&&Browser.Ga.pause(),fe(()=>zn(Ot)))}else Ut===2?(Ut=0,fe(un),Bn(Ot),Ot=null,kn.forEach(A=>{if(!G)try{if(A(),!B)try{K=K=A=K,B||(r.onExit&&r.onExit(A),G=!0),a(A,new Gt(A))}catch(k){k instanceof Gt||k=="unwind"||a(1,k)}}catch(k){k instanceof Gt||k=="unwind"||a(1,k)}})):yt(`invalid state: ${Ut}`);return Cn}}function So(f){return $o(v=>{f().then(v)})}var Io={n:function(f,v,$){return So(async()=>{await r.Pa(f,v,$)})},a:function(f,v,$){throw f>>>=0,new In(f).Ya(v>>>0,$>>>0),wr=f,go++,wr},g:function(){return 0},J:function(){},z:function(){},B:function(){},L:function(){return 0},H:function(){},C:function(){},G:function(){},l:function(){},A:function(){},x:function(){},I:function(){},y:function(){},m:()=>!0,q:function(f,v,$){f=v+2097152>>>0<4194305-!!f?(f>>>0)+4294967296*v:NaN,$>>>=0,f=new Date(1e3*f),R[$>>2>>>0]=f.getUTCSeconds(),R[$+4>>2>>>0]=f.getUTCMinutes(),R[$+8>>2>>>0]=f.getUTCHours(),R[$+12>>2>>>0]=f.getUTCDate(),R[$+16>>2>>>0]=f.getUTCMonth(),R[$+20>>2>>>0]=f.getUTCFullYear()-1900,R[$+24>>2>>>0]=f.getUTCDay(),R[$+28>>2>>>0]=(f.getTime()-Date.UTC(f.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},r:function(f,v,$){f=v+2097152>>>0<4194305-!!f?(f>>>0)+4294967296*v:NaN,$>>>=0,f=new Date(1e3*f),R[$>>2>>>0]=f.getSeconds(),R[$+4>>2>>>0]=f.getMinutes(),R[$+8>>2>>>0]=f.getHours(),R[$+12>>2>>>0]=f.getDate(),R[$+16>>2>>>0]=f.getMonth(),R[$+20>>2>>>0]=f.getFullYear()-1900,R[$+24>>2>>>0]=f.getDay(),R[$+28>>2>>>0]=(Tr(f.getFullYear())?An:bo)[f.getMonth()]+f.getDate()-1|0,R[$+36>>2>>>0]=-(60*f.getTimezoneOffset()),v=new Date(f.getFullYear(),6,1).getTimezoneOffset();var A=new Date(f.getFullYear(),0,1).getTimezoneOffset();R[$+32>>2>>>0]=(v!=A&&f.getTimezoneOffset()==Math.min(A,v))|0},s:function(f){f>>>=0;var v=new Date(R[f+20>>2>>>0]+1900,R[f+16>>2>>>0],R[f+12>>2>>>0],R[f+8>>2>>>0],R[f+4>>2>>>0],R[f>>2>>>0],0),$=R[f+32>>2>>>0],A=v.getTimezoneOffset(),k=new Date(v.getFullYear(),6,1).getTimezoneOffset(),j=new Date(v.getFullYear(),0,1).getTimezoneOffset(),J=Math.min(j,k);return 0>$?R[f+32>>2>>>0]=+(k!=j&&J==A):0<$!=(J==A)&&(k=Math.max(j,k),v.setTime(v.getTime()+6e4*((0<$?J:k)-A))),R[f+24>>2>>>0]=v.getDay(),R[f+28>>2>>>0]=(Tr(v.getFullYear())?An:bo)[v.getMonth()]+v.getDate()-1|0,R[f>>2>>>0]=v.getSeconds(),R[f+4>>2>>>0]=v.getMinutes(),R[f+8>>2>>>0]=v.getHours(),R[f+12>>2>>>0]=v.getDate(),R[f+16>>2>>>0]=v.getMonth(),R[f+20>>2>>>0]=v.getYear(),f=v.getTime()/1e3,Rn((Ze=f,1<=+Math.abs(Ze)?0<Ze?+Math.floor(Ze/4294967296)>>>0:~~+Math.ceil((Ze-+(~~Ze>>>0))/4294967296)>>>0:0)),f>>>0},o:function(){return-52},p:function(){},v:function(f,v,$){function A(ne){return(ne=ne.toTimeString().match(/\(([A-Za-z ]+)\)$/))?ne[1]:"GMT"}$>>>=0;var k=new Date().getFullYear(),j=new Date(k,0,1),J=new Date(k,6,1);k=j.getTimezoneOffset();var Q=J.getTimezoneOffset();te[f>>>0>>2>>>0]=60*Math.max(k,Q),R[v>>>0>>2>>>0]=+(k!=Q),f=A(j),v=A(J),f=hr(f),v=hr(v),Q<k?(te[$>>2>>>0]=f,te[$+4>>2>>>0]=v):(te[$>>2>>>0]=v,te[$+4>>2>>>0]=f)},e:()=>{yt("")},b:function(f,v,$){return f>>>=0,v=Rr(v>>>0,$>>>0),Ft[f].apply(null,v)},i:function(f,v,$){return f>>>=0,v=Rr(v>>>0,$>>>0),Ft[f].apply(null,v)},h:function(){return Date.now()},w:function(){return 4294901760},c:()=>performance.now(),K:function(f,v,$){return v>>>=0,me.copyWithin(f>>>0>>>0,v>>>0,v+($>>>0)>>>0)},u:function(f){f>>>=0;var v=me.length;if(4294901760<f)return!1;for(var $=1;4>=$;$*=2){var A=v*(1+.2/$);A=Math.min(A,f+100663296);var k=Math;A=Math.max(f,A);e:{k=k.min.call(k,4294901760,A+(65536-A%65536)%65536)-z.buffer.byteLength+65535>>>16;try{z.grow(k),ge();var j=1;break e}catch{}j=void 0}if(j)return!0}return!1},D:function(f,v){f>>>=0,v>>>=0;var $=0;return On().forEach(function(A,k){var j=v+$;for(k=te[f+4*k>>2>>>0]=j,j=0;j<A.length;++j)Z[k++>>0>>>0]=A.charCodeAt(j);Z[k>>0>>>0]=0,$+=A.length+1}),0},E:function(f,v){f>>>=0,v>>>=0;var $=On();te[f>>2>>>0]=$.length;var A=0;return $.forEach(function(k){A+=k.length+1}),te[v>>2>>>0]=A,0},f:()=>52,k:function(){return 52},t:function(){return 70},j:function(f,v,$,A){v>>>=0,$>>>=0,A>>>=0;for(var k=0,j=0;j<$;j++){var J=te[v>>2>>>0],Q=te[v+4>>2>>>0];v+=8;for(var ne=0;ne<Q;ne++){var ie=me[J+ne>>>0],le=yo[f];ie===0||ie===10?((f===1?S:O)(Wt(le,0)),le.length=0):le.push(ie)}k+=Q}return te[A>>2>>>0]=k,0},F:rn,d:function(f,v,$,A){return rn(f>>>0,v>>>0,$>>>0,A>>>0)}};(function(){function f($){if($=$.exports,$=nn($),M=$=ln($),z=M.M,ge(),ee.unshift(M.N),We--,r.monitorRunDependencies&&r.monitorRunDependencies(We),We==0&&(Xe!==null&&(clearInterval(Xe),Xe=null),Qt)){var A=Qt;Qt=null,A()}return $}var v={a:Io};if(We++,r.monitorRunDependencies&&r.monitorRunDependencies(We),r.instantiateWasm)try{return r.instantiateWasm(v,f)}catch($){O("Module.instantiateWasm callback failed with error: "+$),o($)}return et(v,function($){f($.instance)}).catch(o),{}})(),r._OrtInit=(f,v)=>(r._OrtInit=M.O)(f,v),r._OrtGetLastError=(f,v)=>(r._OrtGetLastError=M.P)(f,v),r._OrtCreateSessionOptions=(f,v,$,A,k,j,J,Q,ne,ie)=>(r._OrtCreateSessionOptions=M.Q)(f,v,$,A,k,j,J,Q,ne,ie),r._OrtAppendExecutionProvider=(f,v)=>(r._OrtAppendExecutionProvider=M.R)(f,v),r._OrtAddFreeDimensionOverride=(f,v,$)=>(r._OrtAddFreeDimensionOverride=M.S)(f,v,$),r._OrtAddSessionConfigEntry=(f,v,$)=>(r._OrtAddSessionConfigEntry=M.T)(f,v,$),r._OrtReleaseSessionOptions=f=>(r._OrtReleaseSessionOptions=M.U)(f),r._OrtCreateSession=(f,v,$)=>(r._OrtCreateSession=M.V)(f,v,$),r._OrtReleaseSession=f=>(r._OrtReleaseSession=M.W)(f),r._OrtGetInputOutputCount=(f,v,$)=>(r._OrtGetInputOutputCount=M.X)(f,v,$),r._OrtGetInputName=(f,v)=>(r._OrtGetInputName=M.Y)(f,v),r._OrtGetOutputName=(f,v)=>(r._OrtGetOutputName=M.Z)(f,v),r._OrtFree=f=>(r._OrtFree=M._)(f),r._OrtCreateTensor=(f,v,$,A,k,j)=>(r._OrtCreateTensor=M.$)(f,v,$,A,k,j),r._OrtGetTensorData=(f,v,$,A,k)=>(r._OrtGetTensorData=M.aa)(f,v,$,A,k),r._OrtReleaseTensor=f=>(r._OrtReleaseTensor=M.ba)(f),r._OrtCreateRunOptions=(f,v,$,A)=>(r._OrtCreateRunOptions=M.ca)(f,v,$,A),r._OrtAddRunConfigEntry=(f,v,$)=>(r._OrtAddRunConfigEntry=M.da)(f,v,$),r._OrtReleaseRunOptions=f=>(r._OrtReleaseRunOptions=M.ea)(f),r._OrtCreateBinding=f=>(r._OrtCreateBinding=M.fa)(f),r._OrtBindInput=(f,v,$)=>(r._OrtBindInput=M.ga)(f,v,$),r._OrtBindOutput=(f,v,$,A)=>(r._OrtBindOutput=M.ha)(f,v,$,A),r._OrtClearBoundOutputs=f=>(r._OrtClearBoundOutputs=M.ia)(f),r._OrtReleaseBinding=f=>(r._OrtReleaseBinding=M.ja)(f),r._OrtRunWithBinding=(f,v,$,A,k)=>(r._OrtRunWithBinding=M.ka)(f,v,$,A,k),r._OrtRun=(f,v,$,A,k,j,J,Q)=>(r._OrtRun=M.la)(f,v,$,A,k,j,J,Q),r._OrtEndProfiling=f=>(r._OrtEndProfiling=M.ma)(f),r._JsepOutput=(f,v,$)=>(r._JsepOutput=M.na)(f,v,$),r._JsepGetNodeName=f=>(r._JsepGetNodeName=M.oa)(f);var sn=r._malloc=f=>(sn=r._malloc=M.pa)(f),Bn=r._free=f=>(Bn=r._free=M.qa)(f),Rn=f=>(Rn=M.sa)(f),Mn=()=>(Mn=M.ta)(),Ln=f=>(Ln=M.ua)(f),Nn=f=>(Nn=M.va)(f),zn=f=>(zn=M.xa)(f),Fn=()=>(Fn=M.ya)(),Gn=f=>(Gn=M.za)(f),un=()=>(un=M.Aa)();r.___start_em_js=926002,r.___stop_em_js=926163;function ln(f){f=Object.assign({},f);var v=A=>()=>A()>>>0,$=A=>k=>A(k)>>>0;return f.__errno_location=v(f.__errno_location),f.malloc=$(f.malloc),f.stackSave=v(f.stackSave),f.stackAlloc=$(f.stackAlloc),f}r.stackAlloc=Nn,r.stackSave=Mn,r.stackRestore=Ln,r.UTF8ToString=Vt,r.stringToUTF8=(f,v,$)=>en(f,me,v,$),r.lengthBytesUTF8=er;var Ht;Qt=function f(){Ht||Wn(),Ht||(Qt=f)};function Wn(){function f(){if(!Ht&&(Ht=!0,r.calledRun=!0,!G)){if(At(ee),t(r),r.onRuntimeInitialized&&r.onRuntimeInitialized(),r.postRun)for(typeof r.postRun=="function"&&(r.postRun=[r.postRun]);r.postRun.length;){var v=r.postRun.shift();Ue.unshift(v)}At(Ue)}}if(!(0<We)){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;)st();At(Ne),0<We||(r.setStatus?(r.setStatus("Running..."),setTimeout(function(){setTimeout(function(){r.setStatus("")},1),f()},1)):f())}}if(r.preInit)for(typeof r.preInit=="function"&&(r.preInit=[r.preInit]);0<r.preInit.length;)r.preInit.pop()();return Wn(),e.ready}})();typeof dh=="object"&&typeof $s=="object"?$s.exports=ch:typeof define=="function"&&define.amd&&define([],()=>ch)});var ph=He(()=>{});var hh=He(()=>{});var mh={};Nr(mh,{cpus:()=>Kx});var Kx,gh=P(()=>{Kx=void 0});var vh=He((yh,Ss)=>{"use strict";var bh=(()=>{var n=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(n=n||__filename),function(e={}){function r(){return Ne.buffer!=Xe.buffer&&Ie(),Xe}function t(){return Ne.buffer!=Xe.buffer&&Ie(),Qt}function o(){return Ne.buffer!=Xe.buffer&&Ie(),yt}function i(){return Ne.buffer!=Xe.buffer&&Ie(),pr}function u(){return Ne.buffer!=Xe.buffer&&Ie(),H}function a(){return Ne.buffer!=Xe.buffer&&Ie(),$e}var s=e,l,c;s.ready=new Promise((d,m)=>{l=d,c=m}),s.jsepInit=(d,m,x,I,D,F,V,he)=>{s.Qb=d,s.wb=m,s.yb=x,s.jb=I,s.xb=D,s.Ea=F,s.zb=V,s.Ab=he,m=(de,ce,pe)=>(...Ae)=>{let Re=rr,N=ce?.();Ae=de(...Ae);let ve=ce?.();return N!==ve&&(de=ve,pe(N),ce=pe=null),rr!=Re?iy():Ae},x=de=>async(...ce)=>{try{if(s.bb)throw Error("Session already started");let pe=s.bb={Fb:ce[0],errors:[]},Ae=await de(...ce);if(s.bb!==pe)throw Error("Session mismatch");d.flush();let Re=pe.errors;if(0<Re.length){let N=await Promise.all(Re);if(N=N.filter(ve=>ve),0<N.length)throw Error(N.join(`
`))}return Ae}finally{s.bb=null}},s._OrtRun=x(m(s._OrtRun,()=>s._OrtRun,de=>s._OrtRun=de)),s._OrtRunWithBinding=x(m(s._OrtRunWithBinding,()=>s._OrtRunWithBinding,de=>s._OrtRunWithBinding=de)),s._OrtBindInput=m(s._OrtBindInput,()=>s._OrtBindInput,de=>s._OrtBindInput=de),s.jsepRegisterBuffer=(de,ce,pe,Ae)=>d.registerBuffer(de,ce,pe,Ae),s.jsepUnregisterBuffers=de=>{d.unregisterBuffers(de)},s.jsepGetBuffer=de=>d.getBuffer(de),s.jsepCreateDownloader=(de,ce,pe)=>d.createDownloader(de,ce,pe)};var p=Object.assign({},s),h="./this.program",g=(d,m)=>{throw m},y=typeof window=="object",b=typeof importScripts=="function",w=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",S=s.ENVIRONMENT_IS_PTHREAD||!1,O="";function E(d){return s.locateFile?s.locateFile(d,O):O+d}var B,z,M;if(w){var G=(xs(),Sr(vs)),K=(Ts(),Sr(ws));O=b?K.dirname(O)+"/":__dirname+"/",B=(m,x)=>(m=m.startsWith("file://")?new URL(m):K.normalize(m),G.readFileSync(m,x?void 0:"utf8")),M=m=>(m=B(m,!0),m.buffer||(m=new Uint8Array(m)),m),z=(m,x,I,D=!0)=>{m=m.startsWith("file://")?new URL(m):K.normalize(m),G.readFile(m,D?void 0:"utf8",(F,V)=>{F?I(F):x(D?V.buffer:V)})},!s.thisProgram&&1<process.argv.length&&(h=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),g=(m,x)=>{throw process.exitCode=m,x},s.inspect=()=>"[Emscripten Module object]";let d;try{d=ph()}catch(m){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),m}global.Worker=d.Worker}else(y||b)&&(b?O=self.location.href:typeof document<"u"&&document.currentScript&&(O=document.currentScript.src),typeof n<"u"&&n&&(O=n),O.indexOf("blob:")!==0?O=O.substr(0,O.replace(/[?#].*/,"").lastIndexOf("/")+1):O="",w||(B=d=>{var m=new XMLHttpRequest;return m.open("GET",d,!1),m.send(null),m.responseText},b&&(M=d=>{var m=new XMLHttpRequest;return m.open("GET",d,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),z=(d,m,x)=>{var I=new XMLHttpRequest;I.open("GET",d,!0),I.responseType="arraybuffer",I.onload=()=>{I.status==200||I.status==0&&I.response?m(I.response):x()},I.onerror=x,I.send(null)}));w&&typeof performance>"u"&&(global.performance=hh().performance);var Z=console.log.bind(console),me=console.error.bind(console);w&&(Z=(...d)=>G.writeSync(1,d.join(" ")+`
`),me=(...d)=>G.writeSync(2,d.join(" ")+`
`));var R=s.print||Z,te=s.printErr||me;Object.assign(s,p),p=null,s.thisProgram&&(h=s.thisProgram),s.quit&&(g=s.quit);var Ve;s.wasmBinary&&(Ve=s.wasmBinary);var ge=s.noExitRuntime||!0;typeof WebAssembly!="object"&&Wt("no native wasm support detected");var Ne,ee,Ue,st=!1,We,Xe,Qt,yt,pr,H,$e;function Ie(){var d=Ne.buffer;s.HEAP8=Xe=new Int8Array(d),s.HEAP16=new Int16Array(d),s.HEAP32=yt=new Int32Array(d),s.HEAPU8=Qt=new Uint8Array(d),s.HEAPU16=new Uint16Array(d),s.HEAPU32=pr=new Uint32Array(d),s.HEAPF32=H=new Float32Array(d),s.HEAPF64=$e=new Float64Array(d)}var gt=s.INITIAL_MEMORY||16777216;if(5242880<=gt||Wt("INITIAL_MEMORY should be larger than STACK_SIZE, was "+gt+"! (STACK_SIZE=5242880)"),S)Ne=s.wasmMemory;else if(s.wasmMemory)Ne=s.wasmMemory;else if(Ne=new WebAssembly.Memory({initial:gt/65536,maximum:65536,shared:!0}),!(Ne.buffer instanceof SharedArrayBuffer))throw te("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),w&&te("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");Ie(),gt=Ne.buffer.byteLength;var vt=[],et=[],Ze=[],Ft=0;function Gt(){return ge||0<Ft}var At=0,In=null,wr=null;function go(){At++,s.monitorRunDependencies&&s.monitorRunDependencies(At)}function _n(){if(At--,s.monitorRunDependencies&&s.monitorRunDependencies(At),At==0&&(In!==null&&(clearInterval(In),In=null),wr)){var d=wr;wr=null,d()}}function Wt(d){throw s.onAbort&&s.onAbort(d),d="Aborted("+d+")",te(d),st=!0,We=1,d=new WebAssembly.RuntimeError(d+". Build with -sASSERTIONS for more info."),c(d),d}function Vt(d){return d.startsWith("data:application/octet-stream;base64,")}var er;er="ort-wasm-simd-threaded.wasm",Vt(er)||(er=E(er));function en(d){if(d==er&&Ve)return new Uint8Array(Ve);if(M)return M(d);throw"both async and sync fetching of the wasm failed"}function Tr(d){if(!Ve&&(y||b)){if(typeof fetch=="function"&&!d.startsWith("file://"))return fetch(d,{credentials:"same-origin"}).then(m=>{if(!m.ok)throw"failed to load wasm binary file at '"+d+"'";return m.arrayBuffer()}).catch(()=>en(d));if(z)return new Promise((m,x)=>{z(d,I=>m(new Uint8Array(I)),x)})}return Promise.resolve().then(()=>en(d))}function An(d,m,x){return Tr(d).then(I=>WebAssembly.instantiate(I,m)).then(I=>I).then(x,I=>{te("failed to asynchronously prepare wasm: "+I),Wt(I)})}function bo(d,m){var x=er;return Ve||typeof WebAssembly.instantiateStreaming!="function"||Vt(x)||x.startsWith("file://")||w||typeof fetch!="function"?An(x,d,m):fetch(x,{credentials:"same-origin"}).then(I=>WebAssembly.instantiateStreaming(I,d).then(m,function(D){return te("wasm streaming compile failed: "+D),te("falling back to ArrayBuffer instantiation"),An(x,d,m)}))}var hr,Br={1420080:d=>{s.Ea("Abs",d,void 0)},1420131:d=>{s.Ea("Neg",d,void 0)},1420182:d=>{s.Ea("Floor",d,void 0)},1420235:d=>{s.Ea("Ceil",d,void 0)},1420287:d=>{s.Ea("Reciprocal",d,void 0)},1420345:d=>{s.Ea("Sqrt",d,void 0)},1420397:d=>{s.Ea("Exp",d,void 0)},1420448:d=>{s.Ea("Erf",d,void 0)},1420499:d=>{s.Ea("Sigmoid",d,void 0)},1420554:d=>{s.Ea("Log",d,void 0)},1420605:d=>{s.Ea("Sin",d,void 0)},1420656:d=>{s.Ea("Cos",d,void 0)},1420707:d=>{s.Ea("Tan",d,void 0)},1420758:d=>{s.Ea("Asin",d,void 0)},1420810:d=>{s.Ea("Acos",d,void 0)},1420862:d=>{s.Ea("Atan",d,void 0)},1420914:d=>{s.Ea("Sinh",d,void 0)},1420966:d=>{s.Ea("Cosh",d,void 0)},1421018:d=>{s.Ea("Asinh",d,void 0)},1421071:d=>{s.Ea("Acosh",d,void 0)},1421124:d=>{s.Ea("Atanh",d,void 0)},1421177:d=>{s.Ea("Tanh",d,void 0)},1421229:d=>{s.Ea("Not",d,void 0)},1421280:(d,m,x)=>{s.Ea("ClipV10",d,{min:m,max:x})},1421352:d=>{s.Ea("Clip",d,void 0)},1421404:(d,m)=>{s.Ea("Elu",d,{alpha:m})},1421462:d=>{s.Ea("Relu",d,void 0)},1421514:(d,m)=>{s.Ea("LeakyRelu",d,{alpha:m})},1421578:(d,m)=>{s.Ea("ThresholdedRelu",d,{alpha:m})},1421648:d=>{s.zb(d)},1421682:(d,m)=>s.Ab(d,m,s.bb.Fb,s.bb.errors),1421794:(d,m)=>{s.Ea("Cast",d,{to:m})},1421852:d=>{s.Ea("Add",d,void 0)},1421903:d=>{s.Ea("Sub",d,void 0)},1421954:d=>{s.Ea("Mul",d,void 0)},1422005:d=>{s.Ea("Div",d,void 0)},1422056:d=>{s.Ea("Pow",d,void 0)},1422107:d=>{s.Ea("Equal",d,void 0)},1422160:d=>{s.Ea("Greater",d,void 0)},1422215:d=>{s.Ea("GreaterOrEqual",d,void 0)},1422277:d=>{s.Ea("Less",d,void 0)},1422329:d=>{s.Ea("LessOrEqual",d,void 0)},1422388:(d,m,x,I,D)=>{s.Ea("ReduceMean",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(D>>>0,D+I>>>0)):[]})},1422552:(d,m,x,I,D)=>{s.Ea("ReduceMax",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(D>>>0,D+I>>>0)):[]})},1422715:(d,m,x,I,D)=>{s.Ea("ReduceMin",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(D>>>0,D+I>>>0)):[]})},1422878:(d,m,x,I,D)=>{s.Ea("ReduceProd",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(D>>>0,D+I>>>0)):[]})},1423042:(d,m,x,I,D)=>{s.Ea("ReduceSum",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(D>>>0,D+I>>>0)):[]})},1423205:(d,m,x,I,D)=>{s.Ea("ReduceL1",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(D>>>0,D+I>>>0)):[]})},1423367:(d,m,x,I,D)=>{s.Ea("ReduceL2",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(D>>>0,D+I>>>0)):[]})},1423529:(d,m,x,I,D)=>{s.Ea("ReduceLogSum",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(D>>>0,D+I>>>0)):[]})},1423695:(d,m,x,I,D)=>{s.Ea("ReduceSumSquare",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(D>>>0,D+I>>>0)):[]})},1423864:(d,m,x,I,D)=>{s.Ea("ReduceLogSumExp",d,{keepDims:!!m,noopWithEmptyAxes:!!x,axes:I?Array.from(o().subarray(D>>>0,D+I>>>0)):[]})},1424033:d=>{s.Ea("Where",d,void 0)},1424086:(d,m,x)=>{s.Ea("Transpose",d,{perm:m?Array.from(o().subarray(x>>>0,x+m>>>0)):[]})},1424199:(d,m,x,I,D,F,V,he,de,ce,pe,Ae,Re)=>{s.Ea("Conv",d,{format:de?"NHWC":"NCHW",auto_pad:m,dilations:[x],group:I,kernel_shape:[D],pads:F?Array.from(o().subarray(V>>>0,V+F>>>0)):[],strides:[he],w_is_const:()=>!!r()[ce>>>0],activation:ht(pe),activation_params:Ae?Array.from(u().subarray(Re>>>0,Re+Ae>>>0)):[]})},1424580:(d,m,x,I,D,F,V,he,de,ce,pe,Ae,Re,N,ve,De)=>{s.Ea("Conv",d,{format:Ae?"NHWC":"NCHW",auto_pad:m,dilations:[x,I],group:D,kernel_shape:[F,V],pads:he?Array.from(o().subarray(de>>>0,de+he>>>0)):[],strides:[ce,pe],w_is_const:()=>!!r()[Re>>>0],activation:ht(N),activation_params:ve?Array.from(u().subarray(De>>>0,De+ve>>>0)):[]})},1424982:(d,m,x,I,D,F,V,he,de,ce,pe,Ae,Re,N,ve)=>{s.Ea("ConvTranspose",d,{format:de?"NHWC":"NCHW",autoPad:m,dilations:[x],group:I,kernel_shape:[D],pads:[F,V],strides:[he],wIsConst:()=>!!r()[ce>>>0],outputPadding:pe?Array.from(o().subarray(Ae>>>0,Ae+pe>>>0)):[],outputShape:Re?Array.from(o().subarray(N>>>0,N+Re>>>0)):[],activation:ht(ve)})},1425396:(d,m,x,I,D,F,V,he,de,ce,pe,Ae,Re,N)=>{s.Ea("ConvTranspose",d,{format:he?"NHWC":"NCHW",autoPad:m,dilations:Array.from(o().subarray(x>>>0,x+2>>>0)),group:I,kernelShape:Array.from(o().subarray(D>>>0,D+2>>>0)),pads:Array.from(o().subarray(F>>>0,F+4>>>0)),strides:Array.from(o().subarray(V>>>0,V+2>>>0)),wIsConst:()=>!!r()[de>>>0],outputPadding:0<ce?Array.from(o().subarray(pe>>>0,pe+ce>>>0)):[],outputShape:0<Ae?Array.from(o().subarray(Re>>>0,Re+Ae>>>0)):[],activation:ht(N)})},1425953:(d,m,x,I,D,F,V,he,de,ce,pe,Ae,Re,N,ve)=>{s.Ea("ConvTranspose",d,{format:de?"NHWC":"NCHW",autoPad:m,dilations:[x],group:I,kernel_shape:[D],pads:[F,V],strides:[he],wIsConst:()=>!!r()[ce>>>0],outputPadding:pe?Array.from(o().subarray(Ae>>>0,Ae+pe>>>0)):[],outputShape:Re?Array.from(o().subarray(N>>>0,N+Re>>>0)):[],activation:ht(ve)})},1426367:(d,m,x,I,D,F,V,he,de,ce,pe,Ae,Re,N)=>{s.Ea("ConvTranspose",d,{format:he?"NHWC":"NCHW",autoPad:m,dilations:Array.from(o().subarray(x>>>0,x+2>>>0)),group:I,kernelShape:Array.from(o().subarray(D>>>0,D+2>>>0)),pads:Array.from(o().subarray(F>>>0,F+4>>>0)),strides:Array.from(o().subarray(V>>>0,V+2>>>0)),wIsConst:()=>!!r()[de>>>0],outputPadding:0<ce?Array.from(o().subarray(pe>>>0,pe+ce>>>0)):[],outputShape:0<Ae?Array.from(o().subarray(Re>>>0,Re+Ae>>>0)):[],activation:ht(N)})},1426924:(d,m)=>{s.Ea("GlobalAveragePool",d,{format:m?"NHWC":"NCHW"})},1427015:(d,m,x,I,D,F,V,he,de,ce,pe,Ae,Re,N,ve,De)=>{s.Ea("AveragePool",d,{format:De?"NHWC":"NCHW",auto_pad:m,ceil_mode:x,count_include_pad:I,storage_order:D,dilations:[F,V],kernel_shape:[he,de],pads:[ce,pe,Ae,Re],strides:[N,ve]})},1427299:(d,m)=>{s.Ea("GlobalAveragePool",d,{format:m?"NHWC":"NCHW"})},1427390:(d,m,x,I,D,F,V,he,de,ce,pe,Ae,Re,N,ve,De)=>{s.Ea("AveragePool",d,{format:De?"NHWC":"NCHW",auto_pad:m,ceil_mode:x,count_include_pad:I,storage_order:D,dilations:[F,V],kernel_shape:[he,de],pads:[ce,pe,Ae,Re],strides:[N,ve]})},1427674:(d,m)=>{s.Ea("GlobalMaxPool",d,{format:m?"NHWC":"NCHW"})},1427761:(d,m,x,I,D,F,V,he,de,ce,pe,Ae,Re,N,ve,De)=>{s.Ea("MaxPool",d,{format:De?"NHWC":"NCHW",auto_pad:m,ceil_mode:x,count_include_pad:I,storage_order:D,dilations:[F,V],kernel_shape:[he,de],pads:[ce,pe,Ae,Re],strides:[N,ve]})},1428041:(d,m)=>{s.Ea("GlobalMaxPool",d,{format:m?"NHWC":"NCHW"})},1428128:(d,m,x,I,D,F,V,he,de,ce,pe,Ae,Re,N,ve,De)=>{s.Ea("MaxPool",d,{format:De?"NHWC":"NCHW",auto_pad:m,ceil_mode:x,count_include_pad:I,storage_order:D,dilations:[F,V],kernel_shape:[he,de],pads:[ce,pe,Ae,Re],strides:[N,ve]})},1428408:(d,m,x,I,D)=>{s.Ea("Gemm",d,{alpha:m,beta:x,transA:I,transB:D})},1428512:d=>{s.Ea("MatMul",d,void 0)},1428566:(d,m,x,I)=>{s.Ea("ArgMax",d,{keepDims:!!m,selectLastIndex:!!x,axis:I})},1428674:(d,m,x,I)=>{s.Ea("ArgMin",d,{keepDims:!!m,selectLastIndex:!!x,axis:I})},1428782:(d,m)=>{s.Ea("Softmax",d,{axis:m})},1428845:(d,m)=>{s.Ea("Concat",d,{axis:m})},1428905:(d,m,x,I,D)=>{s.Ea("Split",d,{axis:m,numOutputs:x,splitSizes:I?Array.from(o().subarray(D>>>0,D+I>>>0)):[]})},1429050:d=>{s.Ea("Expand",d,void 0)},1429104:(d,m)=>{s.Ea("Gather",d,{axis:Number(m)})},1429175:(d,m)=>{s.Ea("GatherElements",d,{axis:Number(m)})},1429254:(d,m,x,I,D,F,V,he,de,ce,pe)=>{s.Ea("Resize",d,{antialias:m,axes:x?Array.from(o().subarray(I>>>0,I+x>>>0)):[],coordinateTransformMode:ht(D),cubicCoeffA:F,excludeOutside:V,extrapolationValue:he,keepAspectRatioPolicy:ht(de),mode:ht(ce),nearestMode:ht(pe)})},1429605:(d,m,x,I,D,F,V)=>{s.Ea("Slice",d,{starts:m?Array.from(o().subarray(x>>>0,x+m>>>0)):[],ends:I?Array.from(o().subarray(D>>>0,D+I>>>0)):[],axes:F?Array.from(o().subarray(V>>>0,V+F>>>0)):[]})},1429836:d=>{s.Ea("Tile",d,void 0)},1429888:(d,m,x)=>{s.Ea("LayerNormalization",d,{axis:Number(m),epsilon:Number(x)})},1429995:(d,m,x)=>{s.Ea("InstanceNormalization",d,{epsilon:m,format:x?"NHWC":"NCHW"})},1430109:(d,m,x)=>{s.Ea("InstanceNormalization",d,{epsilon:m,format:x?"NHWC":"NCHW"})},1430223:d=>{s.Ea("Range",d,void 0)},1430276:(d,m)=>{s.Ea("Einsum",d,{equation:ht(m)})},1430357:(d,m,x,I,D)=>{s.Ea("Pad",d,{mode:m,value:x,pads:I?Array.from(o().subarray(D>>>0,D+I>>>0)):[]})},1430489:d=>{s.Ea("Gelu",d,void 0)},1430541:d=>{s.Ea("BiasAdd",d,void 0)},1430596:d=>{s.Ea("BiasSplitGelu",d,void 0)},1430657:(d,m)=>{s.Ea("SkipLayerNormalization",d,{epsilon:m})},1430738:d=>s.wb(d),1430771:d=>s.yb(d),1430803:(d,m,x)=>{s.jb(d,m,x,!0)},1430842:(d,m,x)=>{s.jb(d,m,x)}};function Rr(d){this.name="ExitStatus",this.message=`Program terminated with exit(${d})`,this.status=d}function Mr(d){d.terminate(),d.onmessage=()=>{}}function On(d){(d=fe.Qa[d])||Wt(),fe.Eb(d)}function tn(d){var m=fe.tb();if(!m)return 6;fe.Ya.push(m),fe.Qa[d.Xa]=m,m.Xa=d.Xa;var x={cmd:"run",start_routine:d.Gb,arg:d.rb,pthread_ptr:d.Xa};return w&&m.unref(),m.postMessage(x,d.Mb),0}var yo=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,En=(d,m,x)=>{m>>>=0;var I=m+x;for(x=m;d[x]&&!(x>=I);)++x;if(16<x-m&&d.buffer&&yo)return yo.decode(d.buffer instanceof SharedArrayBuffer?d.slice(m,x):d.subarray(m,x));for(I="";m<x;){var D=d[m++];if(D&128){var F=d[m++]&63;if((D&224)==192)I+=String.fromCharCode((D&31)<<6|F);else{var V=d[m++]&63;D=(D&240)==224?(D&15)<<12|F<<6|V:(D&7)<<18|F<<12|V<<6|d[m++]&63,65536>D?I+=String.fromCharCode(D):(D-=65536,I+=String.fromCharCode(55296|D>>10,56320|D&1023))}}else I+=String.fromCharCode(D)}return I},ht=(d,m)=>(d>>>=0)?En(t(),d,m):"";function vo(d){if(S)return Q(1,1,d);We=d,Gt()||(fe.Hb(),s.onExit&&s.onExit(d),st=!0),g(d,new Rr(d))}var rn=d=>{if(We=d,S)throw Ut(d),"unwind";vo(d)},fe={ab:[],Ya:[],mb:[],Qa:{},gb:function(){S?fe.vb():fe.ub()},ub:function(){vt.unshift(()=>{go(),fe.Bb(()=>_n())})},vb:function(){fe.receiveObjectTransfer=fe.Db,fe.threadInitTLS=fe.lb,fe.setExitStatus=fe.kb,ge=!1},kb:function(d){We=d},Sb:["$terminateWorker"],Hb:function(){for(var d of fe.Ya)Mr(d);for(d of fe.ab)Mr(d);fe.ab=[],fe.Ya=[],fe.Qa=[]},Eb:function(d){var m=d.Xa;delete fe.Qa[m],fe.ab.push(d),fe.Ya.splice(fe.Ya.indexOf(d),1),d.Xa=0,aa(m)},Db:function(){},lb:function(){fe.mb.forEach(d=>d())},Cb:d=>new Promise(m=>{d.onmessage=F=>{F=F.data;var V=F.cmd;if(F.targetThread&&F.targetThread!=Eo()){var he=fe.Qa[F.Rb];he?he.postMessage(F,F.transferList):te('Internal error! Worker sent a message "'+V+'" to target pthread '+F.targetThread+", but that thread no longer exists!")}else V==="checkMailbox"?ln():V==="spawnThread"?tn(F):V==="cleanupThread"?On(F.thread):V==="killThread"?(F=F.thread,V=fe.Qa[F],delete fe.Qa[F],Mr(V),aa(F),fe.Ya.splice(fe.Ya.indexOf(V),1),V.Xa=0):V==="cancelThread"?fe.Qa[F.thread].postMessage({cmd:"cancel"}):V==="loaded"?(d.loaded=!0,m(d)):V==="alert"?alert("Thread "+F.threadId+": "+F.text):F.target==="setimmediate"?d.postMessage(F):V==="callHandler"?s[F.handler](...F.args):V&&te("worker sent an unknown command "+V)},d.onerror=F=>{throw te("worker sent an error! "+F.filename+":"+F.lineno+": "+F.message),F},w&&(d.on("message",function(F){d.onmessage({data:F})}),d.on("error",function(F){d.onerror(F)}));var x=[],I=["onExit","onAbort","print","printErr"],D;for(D of I)s.hasOwnProperty(D)&&x.push(D);d.postMessage({cmd:"load",handlers:x,urlOrBlob:s.mainScriptUrlOrBlob||n,wasmMemory:Ne,wasmModule:Ue})}),Bb:function(d){d()},qb:function(){var d=E("ort-wasm-simd-threaded.worker.js");d=new Worker(d),fe.ab.push(d)},tb:function(){return fe.ab.length==0&&(fe.qb(),fe.Cb(fe.ab[0])),fe.ab.pop()}};s.PThread=fe;var nn=d=>{for(;0<d.length;)d.shift()(s)};s.establishStackSpace=function(){var d=Eo(),m=o()[d+52>>2>>>0];d=o()[d+56>>2>>>0],Su(m,m-d),Co(m)};function Ut(d){if(S)return Q(2,0,d);rn(d)}s.invokeEntryPoint=function(d,m){d=Iu.apply(null,[d,m]),Gt()?fe.kb(d):sa(d)};function Ot(d){this.fb=d-24,this.pb=function(m){i()[this.fb+4>>2>>>0]=m},this.ob=function(m){i()[this.fb+8>>2>>>0]=m},this.gb=function(m,x){this.nb(),this.pb(m),this.ob(x)},this.nb=function(){i()[this.fb+16>>2>>>0]=0}}var Cn=0,on=0;function Pn(d,m,x,I){return S?Q(3,1,d,m,x,I):Dn(d,m,x,I)}function Dn(d,m,x,I){if(d>>>=0,m>>>=0,x>>>=0,I>>>=0,typeof SharedArrayBuffer>"u")return te("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var D=[];return S&&D.length===0?Pn(d,m,x,I):(d={Gb:x,Xa:d,rb:I,Mb:D},S?(d.Ob="spawnThread",postMessage(d,D),0):tn(d))}function xo(d,m,x){return S?Q(4,1,d,m,x):0}function an(d,m){if(S)return Q(5,1,d,m)}var kn=d=>{for(var m=0,x=0;x<d.length;++x){var I=d.charCodeAt(x);127>=I?m++:2047>=I?m+=2:55296<=I&&57343>=I?(m+=4,++x):m+=3}return m},wo=(d,m,x,I)=>{if(x>>>=0,!(0<I))return 0;var D=x;I=x+I-1;for(var F=0;F<d.length;++F){var V=d.charCodeAt(F);if(55296<=V&&57343>=V){var he=d.charCodeAt(++F);V=65536+((V&1023)<<10)|he&1023}if(127>=V){if(x>=I)break;m[x++>>>0]=V}else{if(2047>=V){if(x+1>=I)break;m[x++>>>0]=192|V>>6}else{if(65535>=V){if(x+2>=I)break;m[x++>>>0]=224|V>>12}else{if(x+3>=I)break;m[x++>>>0]=240|V>>18,m[x++>>>0]=128|V>>12&63}m[x++>>>0]=128|V>>6&63}m[x++>>>0]=128|V&63}}return m[x>>>0]=0,x-D},To=(d,m,x)=>wo(d,t(),m,x);function $o(d,m){if(S)return Q(6,1,d,m)}function So(d,m,x){if(S)return Q(7,1,d,m,x)}function Io(d,m,x){return S?Q(8,1,d,m,x):0}function sn(d,m){if(S)return Q(9,1,d,m)}function Bn(d,m,x){if(S)return Q(10,1,d,m,x)}function Rn(d,m,x,I){if(S)return Q(11,1,d,m,x,I)}function Mn(d,m,x,I){if(S)return Q(12,1,d,m,x,I)}function Ln(d,m,x,I){if(S)return Q(13,1,d,m,x,I)}function Nn(d){if(S)return Q(14,1,d)}function zn(d,m){if(S)return Q(15,1,d,m)}function Fn(d,m,x){if(S)return Q(16,1,d,m,x)}var Gn=d=>{if(!st)try{if(d(),!Gt())try{S?sa(We):rn(We)}catch(m){m instanceof Rr||m=="unwind"||g(1,m)}}catch(m){m instanceof Rr||m=="unwind"||g(1,m)}};function un(d){d>>>=0,typeof Atomics.Nb=="function"&&(Atomics.Nb(o(),d>>2,d).value.then(ln),d+=128,Atomics.store(o(),d>>2,1))}s.__emscripten_thread_mailbox_await=un;function ln(){var d=Eo();d&&(un(d),Gn(()=>Tu()))}s.checkMailbox=ln;var Ht=d=>d%4===0&&(d%100!==0||d%400===0),Wn=[0,31,60,91,121,152,182,213,244,274,305,335],f=[0,31,59,90,120,151,181,212,243,273,304,334];function v(d,m,x,I,D,F,V,he){return S?Q(17,1,d,m,x,I,D,F,V,he):-52}function $(d,m,x,I,D,F,V){if(S)return Q(18,1,d,m,x,I,D,F,V)}var A=d=>{var m=kn(d)+1,x=ia(m);return x&&To(d,x,m),x},k=[],j=(d,m)=>{k.length=0;var x;for(m>>=2;x=t()[d++>>>0];)m+=x!=105&m,k.push(x==105?o()[m>>>0]:a()[m++>>>1]),++m;return k},J=d=>{var m=ua();return d=d(),Co(m),d};function Q(d,m){var x=arguments.length-2,I=arguments;return J(()=>{for(var D=la(8*x),F=D>>3,V=0;V<x;V++){var he=I[2+V];a()[F+V>>>0]=he}return wu(d,x,D,m)})}var ne=[],ie={},le=()=>{if(!Se){var d={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:h||"./this.program"},m;for(m in ie)ie[m]===void 0?delete d[m]:d[m]=ie[m];var x=[];for(m in d)x.push(`${m}=${d[m]}`);Se=x}return Se},Se;function Ee(d,m){if(S)return Q(19,1,d,m);d>>>=0,m>>>=0;var x=0;return le().forEach(function(I,D){var F=m+x;for(D=i()[d+4*D>>2>>>0]=F,F=0;F<I.length;++F)r()[D++>>0>>>0]=I.charCodeAt(F);r()[D>>0>>>0]=0,x+=I.length+1}),0}function L(d,m){if(S)return Q(20,1,d,m);d>>>=0,m>>>=0;var x=le();i()[d>>2>>>0]=x.length;var I=0;return x.forEach(function(D){I+=D.length+1}),i()[m>>2>>>0]=I,0}function ye(d){return S?Q(21,1,d):52}function Pe(d,m,x,I){return S?Q(22,1,d,m,x,I):52}function tr(d,m,x,I,D){return S?Q(23,1,d,m,x,I,D):70}var _o=[null,[],[]];function fu(d,m,x,I){if(S)return Q(24,1,d,m,x,I);m>>>=0,x>>>=0,I>>>=0;for(var D=0,F=0;F<x;F++){var V=i()[m>>2>>>0],he=i()[m+4>>2>>>0];m+=8;for(var de=0;de<he;de++){var ce=t()[V+de>>>0],pe=_o[d];ce===0||ce===10?((d===1?R:te)(En(pe,0)),pe.length=0):pe.push(ce)}D+=he}return i()[I>>2>>>0]=D,0}var pu=[31,29,31,30,31,30,31,31,30,31,30,31],hu=[31,28,31,30,31,30,31,31,30,31,30,31];function ey(d){var m=Array(kn(d)+1);return wo(d,m,0,m.length),m}var ty=(d,m)=>{r().set(d,m>>>0)};function mu(d,m,x,I){function D(N,ve,De){for(N=typeof N=="number"?N.toString():N||"";N.length<ve;)N=De[0]+N;return N}function F(N,ve){return D(N,ve,"0")}function V(N,ve){function De(Pu){return 0>Pu?-1:0<Pu?1:0}var Lr;return(Lr=De(N.getFullYear()-ve.getFullYear()))===0&&(Lr=De(N.getMonth()-ve.getMonth()))===0&&(Lr=De(N.getDate()-ve.getDate())),Lr}function he(N){switch(N.getDay()){case 0:return new Date(N.getFullYear()-1,11,29);case 1:return N;case 2:return new Date(N.getFullYear(),0,3);case 3:return new Date(N.getFullYear(),0,2);case 4:return new Date(N.getFullYear(),0,1);case 5:return new Date(N.getFullYear()-1,11,31);case 6:return new Date(N.getFullYear()-1,11,30)}}function de(N){var ve=N.Za;for(N=new Date(new Date(N.$a+1900,0,1).getTime());0<ve;){var De=N.getMonth(),Lr=(Ht(N.getFullYear())?pu:hu)[De];if(ve>Lr-N.getDate())ve-=Lr-N.getDate()+1,N.setDate(1),11>De?N.setMonth(De+1):(N.setMonth(0),N.setFullYear(N.getFullYear()+1));else{N.setDate(N.getDate()+ve);break}}return De=new Date(N.getFullYear()+1,0,4),ve=he(new Date(N.getFullYear(),0,4)),De=he(De),0>=V(ve,N)?0>=V(De,N)?N.getFullYear()+1:N.getFullYear():N.getFullYear()-1}d>>>=0,m>>>=0,x>>>=0,I>>>=0;var ce=o()[I+40>>2>>>0];I={Kb:o()[I>>2>>>0],Jb:o()[I+4>>2>>>0],cb:o()[I+8>>2>>>0],ib:o()[I+12>>2>>>0],eb:o()[I+16>>2>>>0],$a:o()[I+20>>2>>>0],Wa:o()[I+24>>2>>>0],Za:o()[I+28>>2>>>0],Tb:o()[I+32>>2>>>0],Ib:o()[I+36>>2>>>0],Lb:ce?ht(ce):""},x=ht(x),ce={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var pe in ce)x=x.replace(new RegExp(pe,"g"),ce[pe]);var Ae="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Re="January February March April May June July August September October November December".split(" ");ce={"%a":N=>Ae[N.Wa].substring(0,3),"%A":N=>Ae[N.Wa],"%b":N=>Re[N.eb].substring(0,3),"%B":N=>Re[N.eb],"%C":N=>F((N.$a+1900)/100|0,2),"%d":N=>F(N.ib,2),"%e":N=>D(N.ib,2," "),"%g":N=>de(N).toString().substring(2),"%G":N=>de(N),"%H":N=>F(N.cb,2),"%I":N=>(N=N.cb,N==0?N=12:12<N&&(N-=12),F(N,2)),"%j":N=>{for(var ve=0,De=0;De<=N.eb-1;ve+=(Ht(N.$a+1900)?pu:hu)[De++]);return F(N.ib+ve,3)},"%m":N=>F(N.eb+1,2),"%M":N=>F(N.Jb,2),"%n":()=>`
`,"%p":N=>0<=N.cb&&12>N.cb?"AM":"PM","%S":N=>F(N.Kb,2),"%t":()=>"	","%u":N=>N.Wa||7,"%U":N=>F(Math.floor((N.Za+7-N.Wa)/7),2),"%V":N=>{var ve=Math.floor((N.Za+7-(N.Wa+6)%7)/7);if(2>=(N.Wa+371-N.Za-2)%7&&ve++,ve)ve==53&&(De=(N.Wa+371-N.Za)%7,De==4||De==3&&Ht(N.$a)||(ve=1));else{ve=52;var De=(N.Wa+7-N.Za-1)%7;(De==4||De==5&&Ht(N.$a%400-1))&&ve++}return F(ve,2)},"%w":N=>N.Wa,"%W":N=>F(Math.floor((N.Za+7-(N.Wa+6)%7)/7),2),"%y":N=>(N.$a+1900).toString().substring(2),"%Y":N=>N.$a+1900,"%z":N=>{N=N.Ib;var ve=0<=N;return N=Math.abs(N)/60,(ve?"+":"-")+("0000"+(N/60*100+N%60)).slice(-4)},"%Z":N=>N.Lb,"%%":()=>"%"},x=x.replace(/%%/g,"\0\0");for(pe in ce)x.includes(pe)&&(x=x.replace(new RegExp(pe,"g"),ce[pe](I)));return x=x.replace(/\0\0/g,"%"),pe=ey(x),pe.length>m?0:(ty(pe,d),pe.length-1)}function Ao(d){try{d()}catch(m){Wt(m)}}function ry(d){var m={},x;for(x in d)(function(I){var D=d[I];m[I]=typeof D=="function"?function(){Oo.push(I);try{return D.apply(null,arguments)}finally{st||(Oo.pop()===I||Wt(),rr&&$r===1&&Oo.length===0&&($r=0,Ft+=1,Ao(Au),typeof Fibers<"u"&&Fibers.Ub()))}}:D})(x);return m}var $r=0,rr=null,gu=0,Oo=[],bu={},yu={},ny=0,oa=null,oy=[];function iy(){return new Promise((d,m)=>{oa={resolve:d,reject:m}})}function ay(){var d=ia(65548),m=d+12;i()[d>>2>>>0]=m,i()[d+4>>2>>>0]=m+65536,m=Oo[0];var x=bu[m];return x===void 0&&(x=ny++,bu[m]=x,yu[x]=m),m=x,o()[d+8>>2>>>0]=m,d}function sy(){var d=o()[rr+8>>2>>>0];return d=ee[yu[d]],--Ft,d()}function uy(d){if(!st){if($r===0){var m=!1,x=!1;d((I=0)=>{if(!st&&(gu=I,m=!0,x)){$r=2,Ao(()=>Ou(rr)),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.resume(),I=!1;try{var D=sy()}catch(he){D=he,I=!0}var F=!1;if(!rr){var V=oa;V&&(oa=null,(I?V.reject:V.resolve)(D),F=!0)}if(I&&!F)throw D}}),x=!0,m||($r=1,rr=ay(),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.pause(),Ao(()=>_u(rr)))}else $r===2?($r=0,Ao(Eu),vu(rr),rr=null,oy.forEach(I=>Gn(I))):Wt(`invalid state: ${$r}`);return gu}}function ly(d){return uy(m=>{d().then(m)})}fe.gb();var cy=[null,vo,Ut,Pn,xo,an,$o,So,Io,sn,Bn,Rn,Mn,Ln,Nn,zn,Fn,v,$,Ee,L,ye,Pe,tr,fu],dy={r:function(d,m,x){return ly(async()=>{await s.xb(d,m,x)})},b:function(d,m,x){throw d>>>=0,new Ot(d).gb(m>>>0,x>>>0),Cn=d,on++,Cn},P:function(d){xu(d>>>0,!b,1,!y,131072,!1),fe.lb()},n:function(d){d>>>=0,S?postMessage({cmd:"cleanupThread",thread:d}):On(d)},K:Dn,g:xo,V:an,F:$o,H:So,y:Io,T:sn,L:Bn,S:Rn,p:Mn,G:Ln,D:Nn,U:zn,E:Fn,q:()=>!0,B:function(d,m){d>>>=0,d==m>>>0?setTimeout(()=>ln()):S?postMessage({targetThread:d,cmd:"checkMailbox"}):(d=fe.Qa[d])&&d.postMessage({cmd:"checkMailbox"})},N:function(){return-1},O:un,X:function(d){w&&fe.Qa[d>>>0].ref()},u:function(d,m,x){d=m+2097152>>>0<4194305-!!d?(d>>>0)+4294967296*m:NaN,x>>>=0,d=new Date(1e3*d),o()[x>>2>>>0]=d.getUTCSeconds(),o()[x+4>>2>>>0]=d.getUTCMinutes(),o()[x+8>>2>>>0]=d.getUTCHours(),o()[x+12>>2>>>0]=d.getUTCDate(),o()[x+16>>2>>>0]=d.getUTCMonth(),o()[x+20>>2>>>0]=d.getUTCFullYear()-1900,o()[x+24>>2>>>0]=d.getUTCDay(),d=(d.getTime()-Date.UTC(d.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,o()[x+28>>2>>>0]=d},v:function(d,m,x){d=m+2097152>>>0<4194305-!!d?(d>>>0)+4294967296*m:NaN,x>>>=0,d=new Date(1e3*d),o()[x>>2>>>0]=d.getSeconds(),o()[x+4>>2>>>0]=d.getMinutes(),o()[x+8>>2>>>0]=d.getHours(),o()[x+12>>2>>>0]=d.getDate(),o()[x+16>>2>>>0]=d.getMonth(),o()[x+20>>2>>>0]=d.getFullYear()-1900,o()[x+24>>2>>>0]=d.getDay(),m=(Ht(d.getFullYear())?Wn:f)[d.getMonth()]+d.getDate()-1|0,o()[x+28>>2>>>0]=m,o()[x+36>>2>>>0]=-(60*d.getTimezoneOffset()),m=new Date(d.getFullYear(),6,1).getTimezoneOffset();var I=new Date(d.getFullYear(),0,1).getTimezoneOffset();d=(m!=I&&d.getTimezoneOffset()==Math.min(I,m))|0,o()[x+32>>2>>>0]=d},w:function(d){d>>>=0;var m=new Date(o()[d+20>>2>>>0]+1900,o()[d+16>>2>>>0],o()[d+12>>2>>>0],o()[d+8>>2>>>0],o()[d+4>>2>>>0],o()[d>>2>>>0],0),x=o()[d+32>>2>>>0],I=m.getTimezoneOffset(),D=new Date(m.getFullYear(),6,1).getTimezoneOffset(),F=new Date(m.getFullYear(),0,1).getTimezoneOffset(),V=Math.min(F,D);return 0>x?o()[d+32>>2>>>0]=+(D!=F&&V==I):0<x!=(V==I)&&(D=Math.max(F,D),m.setTime(m.getTime()+6e4*((0<x?V:D)-I))),o()[d+24>>2>>>0]=m.getDay(),x=(Ht(m.getFullYear())?Wn:f)[m.getMonth()]+m.getDate()-1|0,o()[d+28>>2>>>0]=x,o()[d>>2>>>0]=m.getSeconds(),o()[d+4>>2>>>0]=m.getMinutes(),o()[d+8>>2>>>0]=m.getHours(),o()[d+12>>2>>>0]=m.getDate(),o()[d+16>>2>>>0]=m.getMonth(),o()[d+20>>2>>>0]=m.getYear(),d=m.getTime()/1e3,$u((hr=d,1<=+Math.abs(hr)?0<hr?+Math.floor(hr/4294967296)>>>0:~~+Math.ceil((hr-+(~~hr>>>0))/4294967296)>>>0:0)),d>>>0},s:v,t:$,A:function(d,m,x){function I(ce){return(ce=ce.toTimeString().match(/\(([A-Za-z ]+)\)$/))?ce[1]:"GMT"}d>>>=0,m>>>=0,x>>>=0;var D=new Date().getFullYear(),F=new Date(D,0,1),V=new Date(D,6,1);D=F.getTimezoneOffset();var he=V.getTimezoneOffset(),de=Math.max(D,he);i()[d>>2>>>0]=60*de,o()[m>>2>>>0]=+(D!=he),d=I(F),m=I(V),d=A(d),m=A(m),he<D?(i()[x>>2>>>0]=d,i()[x+4>>2>>>0]=m):(i()[x>>2>>>0]=m,i()[x+4>>2>>>0]=d)},e:()=>{Wt("")},c:function(d,m,x){return d>>>=0,m=j(m>>>0,x>>>0),Br[d].apply(null,m)},l:function(d,m,x){return d>>>=0,m=j(m>>>0,x>>>0),Br[d].apply(null,m)},o:function(){},k:function(){return Date.now()},W:()=>{throw Ft+=1,"unwind"},C:function(){return 4294901760},d:()=>performance.timeOrigin+performance.now(),i:function(){return w?(gh(),Sr(mh)).cpus().length:navigator.hardwareConcurrency},M:function(d,m,x,I){for(fe.Pb=m>>>0,ne.length=x,m=I>>>0>>3,I=0;I<x;I++)ne[I]=a()[m+I>>>0];return(0>d?Br[-d-1]:cy[d]).apply(null,ne)},z:function(d){d>>>=0;var m=t().length;if(d<=m||4294901760<d)return!1;for(var x=1;4>=x;x*=2){var I=m*(1+.2/x);I=Math.min(I,d+100663296);var D=Math;I=Math.max(d,I);e:{D=D.min.call(D,4294901760,I+(65536-I%65536)%65536)-Ne.buffer.byteLength+65535>>>16;try{Ne.grow(D),Ie();var F=1;break e}catch{}F=void 0}if(F)return!0}return!1},Q:Ee,R:L,J:rn,h:ye,m:Pe,x:tr,j:fu,a:Ne||s.wasmMemory,I:mu,f:function(d,m,x,I){return mu(d>>>0,m>>>0,x>>>0,I>>>0)}};(function(){function d(x,I){return x=x.exports,x=ry(x),ee=x=fy(x),fe.mb.push(ee.Da),et.unshift(ee.Y),Ue=I,_n(),x}var m={a:dy};if(go(),s.instantiateWasm)try{return s.instantiateWasm(m,d)}catch(x){te("Module.instantiateWasm callback failed with error: "+x),c(x)}return bo(m,function(x){d(x.instance,x.module)}).catch(c),{}})(),s._OrtInit=(d,m)=>(s._OrtInit=ee.Z)(d,m),s._OrtGetLastError=(d,m)=>(s._OrtGetLastError=ee._)(d,m),s._OrtCreateSessionOptions=(d,m,x,I,D,F,V,he,de,ce)=>(s._OrtCreateSessionOptions=ee.$)(d,m,x,I,D,F,V,he,de,ce),s._OrtAppendExecutionProvider=(d,m)=>(s._OrtAppendExecutionProvider=ee.aa)(d,m),s._OrtAddFreeDimensionOverride=(d,m,x)=>(s._OrtAddFreeDimensionOverride=ee.ba)(d,m,x),s._OrtAddSessionConfigEntry=(d,m,x)=>(s._OrtAddSessionConfigEntry=ee.ca)(d,m,x),s._OrtReleaseSessionOptions=d=>(s._OrtReleaseSessionOptions=ee.da)(d),s._OrtCreateSession=(d,m,x)=>(s._OrtCreateSession=ee.ea)(d,m,x),s._OrtReleaseSession=d=>(s._OrtReleaseSession=ee.fa)(d),s._OrtGetInputOutputCount=(d,m,x)=>(s._OrtGetInputOutputCount=ee.ga)(d,m,x),s._OrtGetInputName=(d,m)=>(s._OrtGetInputName=ee.ha)(d,m),s._OrtGetOutputName=(d,m)=>(s._OrtGetOutputName=ee.ia)(d,m),s._OrtFree=d=>(s._OrtFree=ee.ja)(d),s._OrtCreateTensor=(d,m,x,I,D,F)=>(s._OrtCreateTensor=ee.ka)(d,m,x,I,D,F),s._OrtGetTensorData=(d,m,x,I,D)=>(s._OrtGetTensorData=ee.la)(d,m,x,I,D),s._OrtReleaseTensor=d=>(s._OrtReleaseTensor=ee.ma)(d),s._OrtCreateRunOptions=(d,m,x,I)=>(s._OrtCreateRunOptions=ee.na)(d,m,x,I),s._OrtAddRunConfigEntry=(d,m,x)=>(s._OrtAddRunConfigEntry=ee.oa)(d,m,x),s._OrtReleaseRunOptions=d=>(s._OrtReleaseRunOptions=ee.pa)(d),s._OrtCreateBinding=d=>(s._OrtCreateBinding=ee.qa)(d),s._OrtBindInput=(d,m,x)=>(s._OrtBindInput=ee.ra)(d,m,x),s._OrtBindOutput=(d,m,x,I)=>(s._OrtBindOutput=ee.sa)(d,m,x,I),s._OrtClearBoundOutputs=d=>(s._OrtClearBoundOutputs=ee.ta)(d),s._OrtReleaseBinding=d=>(s._OrtReleaseBinding=ee.ua)(d),s._OrtRunWithBinding=(d,m,x,I,D)=>(s._OrtRunWithBinding=ee.va)(d,m,x,I,D),s._OrtRun=(d,m,x,I,D,F,V,he)=>(s._OrtRun=ee.wa)(d,m,x,I,D,F,V,he),s._OrtEndProfiling=d=>(s._OrtEndProfiling=ee.xa)(d),s._JsepOutput=(d,m,x)=>(s._JsepOutput=ee.ya)(d,m,x),s._JsepGetNodeName=d=>(s._JsepGetNodeName=ee.za)(d);var Eo=s._pthread_self=()=>(Eo=s._pthread_self=ee.Aa)(),ia=s._malloc=d=>(ia=s._malloc=ee.Ba)(d),vu=s._free=d=>(vu=s._free=ee.Ca)(d);s.__emscripten_tls_init=()=>(s.__emscripten_tls_init=ee.Da)();var xu=s.__emscripten_thread_init=(d,m,x,I,D,F)=>(xu=s.__emscripten_thread_init=ee.Fa)(d,m,x,I,D,F);s.__emscripten_thread_crashed=()=>(s.__emscripten_thread_crashed=ee.Ga)();var wu=(d,m,x,I)=>(wu=ee.Ha)(d,m,x,I),aa=d=>(aa=ee.Ia)(d),sa=s.__emscripten_thread_exit=d=>(sa=s.__emscripten_thread_exit=ee.Ja)(d),Tu=s.__emscripten_check_mailbox=()=>(Tu=s.__emscripten_check_mailbox=ee.Ka)(),$u=d=>($u=ee.La)(d),Su=(d,m)=>(Su=ee.Ma)(d,m),ua=()=>(ua=ee.Na)(),Co=d=>(Co=ee.Oa)(d),la=d=>(la=ee.Pa)(d),Iu=s.dynCall_ii=(d,m)=>(Iu=s.dynCall_ii=ee.Ra)(d,m),_u=d=>(_u=ee.Sa)(d),Au=()=>(Au=ee.Ta)(),Ou=d=>(Ou=ee.Ua)(d),Eu=()=>(Eu=ee.Va)();s.___start_em_js=1430875,s.___stop_em_js=1431036;function fy(d){d=Object.assign({},d);var m=I=>()=>I()>>>0,x=I=>D=>I(D)>>>0;return d.__errno_location=m(d.__errno_location),d.pthread_self=m(d.pthread_self),d.malloc=x(d.malloc),d.stackSave=m(d.stackSave),d.stackAlloc=x(d.stackAlloc),d}s.keepRuntimeAlive=Gt,s.wasmMemory=Ne,s.stackAlloc=la,s.stackSave=ua,s.stackRestore=Co,s.UTF8ToString=ht,s.stringToUTF8=To,s.lengthBytesUTF8=kn,s.ExitStatus=Rr,s.PThread=fe;var Po;wr=function d(){Po||Cu(),Po||(wr=d)};function Cu(){function d(){if(!Po&&(Po=!0,s.calledRun=!0,!st)&&(S||nn(et),l(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),!S)){if(s.postRun)for(typeof s.postRun=="function"&&(s.postRun=[s.postRun]);s.postRun.length;){var m=s.postRun.shift();Ze.unshift(m)}nn(Ze)}}if(!(0<At))if(S)l(s),S||nn(et),startWorker(s);else{if(s.preRun)for(typeof s.preRun=="function"&&(s.preRun=[s.preRun]);s.preRun.length;)vt.unshift(s.preRun.shift());nn(vt),0<At||(s.setStatus?(s.setStatus("Running..."),setTimeout(function(){setTimeout(function(){s.setStatus("")},1),d()},1)):d())}}if(s.preInit)for(typeof s.preInit=="function"&&(s.preInit=[s.preInit]);0<s.preInit.length;)s.preInit.pop()();return Cu(),e.ready}})();typeof yh=="object"&&typeof Ss=="object"?Ss.exports=bh:typeof define=="function"&&define.amd&&define([],()=>bh)});var xh=He((WE,Yx)=>{Yx.exports='"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>(0,eval)(fs.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason??e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err("worker.js received unknown command "+e.data.cmd),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed&&Module.__emscripten_thread_crashed(),a}}self.onmessage=handleMessage;\n'});var Th,Xx,Is,_s,Ei,wh,Jx,Zx,Qx,$h,ot,$n=P(()=>{"use strict";Th=fh();Xx=vh(),_s=!1,Ei=!1,wh=!1,Jx=()=>{try{return typeof SharedArrayBuffer>"u"?!1:(typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch{return!1}},Zx=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Qx=(n,e)=>n?e?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":e?"ort-wasm-threaded.wasm":"ort-wasm.wasm",$h=async n=>{if(_s)return Promise.resolve();if(Ei)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(wh)throw new Error("previous call to 'initializeWebAssembly()' failed.");Ei=!0;let e=n.initTimeout,r=n.numThreads,t=n.simd,o=r>1&&Jx(),i=t&&Zx(),u=n.wasmPaths,a=typeof u=="string"?u:void 0,s=Qx(i,o),l=typeof u=="object"?u[s]:void 0,c=!1,p=[];if(e>0&&p.push(new Promise(h=>{setTimeout(()=>{c=!0,h()},e)})),p.push(new Promise((h,g)=>{let y=o?Xx:Th,b={locateFile:(w,S)=>{if(o&&w.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([xh()],{type:"text/javascript"}));if(w.endsWith(".wasm")){if(l)return l;let O=a??S;return s==="ort-wasm-simd.wasm"?O+"ort-wasm-simd.jsep.wasm":s==="ort-wasm-simd-threaded.wasm"?O+"ort-wasm-simd-threaded.jsep.wasm":O+s}return S+w}};if(o)if(typeof Blob>"u")b.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let w=`var ortWasmThreaded=${y.toString()};`;b.mainScriptUrlOrBlob=new Blob([w],{type:"text/javascript"})}y(b).then(w=>{Ei=!1,_s=!0,Is=w,h()},w=>{Ei=!1,wh=!0,g(w)})})),await Promise.race(p),c)throw new Error(`WebAssembly backend initializing failed due to timeout: ${e}ms`)},ot=()=>{if(_s&&Is)return Is;throw new Error("WebAssembly is not initialized yet.")}});var lt,io,Ye,Ci=P(()=>{"use strict";$n();lt=(n,e)=>{let r=ot(),t=r.lengthBytesUTF8(n)+1,o=r._malloc(t);return r.stringToUTF8(n,o,t),e.push(o),o},io=(n,e,r,t)=>{if(typeof n=="object"&&n!==null){if(r.has(n))throw new Error("Circular reference in options");r.add(n)}Object.entries(n).forEach(([o,i])=>{let u=e?e+o:o;if(typeof i=="object")io(i,u+".",r,t);else if(typeof i=="string"||typeof i=="number")t(u,i.toString());else if(typeof i=="boolean")t(u,i?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof i}`)})},Ye=n=>{let e=ot(),r=e.stackSave();try{let t=e.stackAlloc(8);e._OrtGetLastError(t,t+4);let o=e.HEAP32[t/4],i=e.HEAPU32[t/4+1],u=i?e.UTF8ToString(i):"";throw new Error(`${n} ERROR_CODE: ${o}, ERROR_MESSAGE: ${u}`)}finally{e.stackRestore(r)}}});var Sh,Ih=P(()=>{"use strict";$n();Ci();Sh=n=>{let e=ot(),r=0,t=[],o=n||{};try{if(n?.logSeverityLevel===void 0)o.logSeverityLevel=2;else if(typeof n.logSeverityLevel!="number"||!Number.isInteger(n.logSeverityLevel)||n.logSeverityLevel<0||n.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${n.logSeverityLevel}`);if(n?.logVerbosityLevel===void 0)o.logVerbosityLevel=0;else if(typeof n.logVerbosityLevel!="number"||!Number.isInteger(n.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${n.logVerbosityLevel}`);n?.terminate===void 0&&(o.terminate=!1);let i=0;return n?.tag!==void 0&&(i=lt(n.tag,t)),r=e._OrtCreateRunOptions(o.logSeverityLevel,o.logVerbosityLevel,!!o.terminate,i),r===0&&Ye("Can't create run options."),n?.extra!==void 0&&io(n.extra,"",new WeakSet,(u,a)=>{let s=lt(u,t),l=lt(a,t);e._OrtAddRunConfigEntry(r,s,l)!==0&&Ye(`Can't set a run config entry: ${u} - ${a}.`)}),[r,t]}catch(i){throw r!==0&&e._OrtReleaseRunOptions(r),t.forEach(u=>e._free(u)),i}}});var ew,tw,rw,nw,_h,Ah=P(()=>{"use strict";$n();Ci();ew=n=>{switch(n){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${n}`)}},tw=n=>{switch(n){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${n}`)}},rw=n=>{n.extra||(n.extra={}),n.extra.session||(n.extra.session={});let e=n.extra.session;e.use_ort_model_bytes_directly||(e.use_ort_model_bytes_directly="1"),n.executionProviders&&n.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(n.enableMemPattern=!1)},nw=(n,e,r)=>{for(let t of e){let o=typeof t=="string"?t:t.name;switch(o){case"xnnpack":o="XNNPACK";break;case"webnn":if(o="WEBNN",typeof t!="string"){let u=t;if(u?.deviceType){let a=lt("deviceType",r),s=lt(u.deviceType,r);ot()._OrtAddSessionConfigEntry(n,a,s)!==0&&Ye(`Can't set a session config entry: 'deviceType' - ${u.deviceType}.`)}if(u?.powerPreference){let a=lt("powerPreference",r),s=lt(u.powerPreference,r);ot()._OrtAddSessionConfigEntry(n,a,s)!==0&&Ye(`Can't set a session config entry: 'powerPreference' - ${u.powerPreference}.`)}}break;case"webgpu":if(o="JS",typeof t!="string"){let u=t;if(u?.preferredLayout){if(u.preferredLayout!=="NCHW"&&u.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${u.preferredLayout}`);let a=lt("preferredLayout",r),s=lt(u.preferredLayout,r);ot()._OrtAddSessionConfigEntry(n,a,s)!==0&&Ye(`Can't set a session config entry: 'preferredLayout' - ${u.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${o}`)}let i=lt(o,r);ot()._OrtAppendExecutionProvider(n,i)!==0&&Ye(`Can't append execution provider: ${o}.`)}},_h=n=>{let e=ot(),r=0,t=[],o=n||{};rw(o);try{let i=ew(o.graphOptimizationLevel??"all"),u=tw(o.executionMode??"sequential"),a=typeof o.logId=="string"?lt(o.logId,t):0,s=o.logSeverityLevel??2;if(!Number.isInteger(s)||s<0||s>4)throw new Error(`log serverity level is not valid: ${s}`);let l=o.logVerbosityLevel??0;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log verbosity level is not valid: ${l}`);let c=typeof o.optimizedModelFilePath=="string"?lt(o.optimizedModelFilePath,t):0;if(r=e._OrtCreateSessionOptions(i,!!o.enableCpuMemArena,!!o.enableMemPattern,u,!!o.enableProfiling,0,a,s,l,c),r===0&&Ye("Can't create session options."),o.executionProviders&&nw(r,o.executionProviders,t),o.freeDimensionOverrides)for(let[p,h]of Object.entries(o.freeDimensionOverrides)){if(typeof p!="string")throw new Error(`free dimension override name must be a string: ${p}`);if(typeof h!="number"||!Number.isInteger(h)||h<0)throw new Error(`free dimension override value must be a non-negative integer: ${h}`);let g=lt(p,t);e._OrtAddFreeDimensionOverride(r,g,h)!==0&&Ye(`Can't set a free dimension override: ${p} - ${h}.`)}return o.extra!==void 0&&io(o.extra,"",new WeakSet,(p,h)=>{let g=lt(p,t),y=lt(h,t);e._OrtAddSessionConfigEntry(r,g,y)!==0&&Ye(`Can't set a session config entry: ${p} - ${h}.`)}),[r,t]}catch(i){throw r!==0&&e._OrtReleaseSessionOptions(r),t.forEach(u=>e._free(u)),i}}});var As,ao,so,Pi,uo,Di,Os,ct=P(()=>{"use strict";As=n=>{switch(n){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${n}`)}},ao=n=>{switch(n){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${n}`)}},so=n=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][n],Pi=n=>{switch(n){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${n}`)}},uo=n=>{switch(n){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${n}`)}},Di=n=>n==="float32"||n==="int32"||n==="int64"||n==="bool"||n==="float16"||n==="uint32",Os=n=>{switch(n){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${n}`)}}});var ow,iw,Oh,Eh,Ch,aw,Qe,Pr=P(()=>{"use strict";ct();ow=["V","I","W","E","F"],iw=(n,e)=>{console.log(`[${ow[n]},${new Date().toISOString()}]${e}`)},Ch=(n,e)=>{Oh=n,Eh=e},aw=(n,e)=>{let r=uo(n),t=uo(Oh);r>=t&&iw(r,typeof e=="function"?e():e)},Qe=(...n)=>{Eh&&aw(...n)}});var Ph,Dh=P(()=>{"use strict";ct();Ph=(n,e)=>new(Pi(e))(n)});var kh=P(()=>{"use strict"});var ki,sw,Bh,Cs,Es,Rh,Mh=P(()=>{"use strict";Pr();kh();ki=n=>Math.ceil(n/16)*16,sw=1,Bh=()=>sw++,Cs=async(n,e,r,t)=>{let o=ki(r),i=n.device.createBuffer({size:o,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let u=n.getCommandEncoder();n.endComputePass(),u.copyBufferToBuffer(e,0,i,0,o),n.flush(),await i.mapAsync(GPUMapMode.READ);let a=i.getMappedRange();if(t){let s=t();return s.set(new Uint8Array(a,0,r)),s}else return new Uint8Array(a.slice(0,r))}finally{i.destroy()}},Es=class{constructor(e){this.backend=e;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map}upload(e,r){let t=r.buffer,o=r.byteOffset,i=r.byteLength,u=ki(i),a=this.storageCache.get(e);if(!a)throw new Error("gpu data for uploading does not exist");if(a.originalSize!==i)throw new Error(`inconsistent data size. gpu data size=${a.originalSize}, data size=${i}`);let s=this.backend.device.createBuffer({mappedAtCreation:!0,size:u,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=s.getMappedRange();new Uint8Array(l).set(new Uint8Array(t,o,i)),s.unmap();let c=this.backend.getCommandEncoder();this.backend.endComputePass(),c.copyBufferToBuffer(s,0,a.gpuData.buffer,0,u),Qe("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`),this.buffersForUploadingPending.push(s)}memcpy(e,r){let t=this.storageCache.get(e);if(!t)throw new Error("source gpu data for memcpy does not exist");let o=this.storageCache.get(r);if(!o)throw new Error("destination gpu data for memcpy does not exist");if(t.originalSize!==o.originalSize)throw new Error("inconsistent source and destination gpu data size");let i=ki(t.originalSize),u=this.backend.getCommandEncoder();this.backend.endComputePass(),u.copyBufferToBuffer(t.gpuData.buffer,0,o.gpuData.buffer,0,i)}registerExternalBuffer(e,r,t){let o;if(t){if(o=this.externalBuffers.get(t),o===void 0)throw new Error("previous buffer is not registered");if(e===t)return Qe("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${o}, buffer is the same, skip.`),o;this.externalBuffers.delete(t)}else o=Bh();return this.storageCache.set(o,{gpuData:{id:o,type:0,buffer:e},originalSize:r}),this.externalBuffers.set(e,o),Qe("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${o}, registered.`),o}unregisterExternalBuffer(e){let r=this.externalBuffers.get(e);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(e),Qe("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(e,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let t=ki(e),o,i=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,u=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(i||u){let s=i?this.freeBuffers:this.freeUniformBuffers,l=s.get(t);l||(l=[],s.set(t,l)),l.length>0?o=l.pop():o=this.backend.device.createBuffer({size:t,usage:r})}else o=this.backend.device.createBuffer({size:t,usage:r});let a={id:Bh(),type:0,buffer:o};return this.storageCache.set(a.id,{gpuData:a,originalSize:e}),Qe("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${a.id}`),a}get(e){return this.storageCache.get(e)?.gpuData}release(e){let r=this.storageCache.get(e);if(!r)throw new Error("releasing data does not exist");return Qe("verbose",()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(e),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(e,r){let t=this.storageCache.get(e);if(!t)throw new Error("data does not exist");await Cs(this.backend,t.gpuData.buffer,t.originalSize,r)}refreshPendingBuffers(){for(let e of this.buffersForUploadingPending)e.destroy();this.buffersForUploadingPending=[];for(let e of this.buffersPending)(e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(e.size).push(e):(e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(e.size).push(e):e.destroy();this.buffersPending=[]}dispose(){this.freeBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map}},Rh=(...n)=>new Es(...n)});var Ps,be,it=P(()=>{"use strict";Ps=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this._cacheKey||(this._cacheKey=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this._cacheKey}},be=n=>new Ps(n)});var Ds,lr,W,Zr,Bi,Ri,Mi,Ce=P(()=>{"use strict";Ds=class{static calcMatMulShape(e,r){return e[1]!==r[0]?void 0:[e[0],r[1]]}},lr=class{static calcShape(e,r,t=!1){let o=e.length,i=r.length;if(o===0)return r;if(i===0)return e;let u=Math.max(e.length,r.length),a=new Array(u);if(t){if(o<2||i<2)return;let s=Ds.calcMatMulShape([e[o-2],e[o-1]],[r[i-2],r[i-1]]);if(s===void 0)return;[a[u-2],a[u-1]]=s}for(let s=t?3:1;s<=u;s++){let l=o-s<0?1:e[o-s],c=i-s<0?1:r[i-s];if(l!==c&&l>1&&c>1)return;a[u-s]=Math.max(l,c)}return a}static isValidBroadcast(e,r){let t=e.length,o=r.length;if(t>o)return!1;for(let i=1;i<=t;i++)if(e[t-i]!==1&&e[t-i]!==r[o-i])return!1;return!0}},W=class n{static size(e){return n.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,r){if(r<0||r>e.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return n.getSizeFromDimensionRange(e,r,e.length)}static sizeToDimension(e,r){if(r<0||r>e.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${e.length} dimensions.`);return n.getSizeFromDimensionRange(e,0,r)}static getSizeFromDimensionRange(e,r,t){let o=1;for(let i=r;i<t;i++){if(e[i]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");o*=e[i]}return o}static computeStrides(e){let r=e.length;if(r===0)return[];if(r===1)return[1];let t=new Array(r);t[r-1]=1,t[r-2]=e[r-1];for(let o=r-3;o>=0;--o)t[o]=t[o+1]*e[o+1];return t}static normalizeAxis(e,r){if(e<-r&&e>=r)throw new Error("unsupported axis for this operation.");return e<0?e+r:e}static normalizeAxes(e,r){return e.map(t=>this.normalizeAxis(t,r??e.length))}static sortBasedOnPerm(e,r){return r?r.map(t=>e[t]):e.slice().reverse()}static padShape(e,r){let t=e.length;return e.map((o,i)=>o+r[i]+r[i+t])}static areEqual(e,r){return e.length!==r.length?!1:e.every((t,o)=>t===r[o])}},Zr=class n{static adjustPoolAttributes(e,r,t,o,i,u){if(!e&&t.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let a=0;a<r.length-2;a++)a>=t.length?t.push(r[a+2]):t[a]=r[a+2];for(let a=0;a<t.length;a++)if(a<o.length){if(o[a]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let a=0;a<t.length;a++)if(a<i.length){if(i[a]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let a=0;a<t.length*2;a++)if(a<u.length){if(u[a]<0)throw new Error("pad should be greater than or equal to 1")}else u.push(0);for(let a=0;a<t.length;a++){if(t[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(u[a]>=t[a]||u[a+t.length]>=t[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,r,t,o,i,u,a){if(a){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let s=0;s<e.length-2;s++)n.adjustPadAndReturnShape(e[s+(u?1:2)],r[s],t[s],o[s],i,s,s+e.length-2,a)}}static computePoolOutputShape(e,r,t,o,i,u,a){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let s=[r[0],r[1]];return n.computeShapeHelper(e,r,s,t,o,i,u,a),s}static computeConvOutputShape(e,r,t,o,i,u,a){if(e.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let s=[e[0],r[0]];return n.computeShapeHelper(!1,e,s,t,o,i,u,a),s}static computeShapeHelper(e,r,t,o,i,u,a,s){if(e)for(let l=0;l<r.length-2;l++)t.push(1);else for(let l=0;l<r.length-2;l++)t.push(n.adjustPadAndReturnShape(r[l+2],o[l],i[l],u[l],a,l,l+r.length-2,s))}static adjustPadAndReturnShape(e,r,t,o,i,u,a,s){let l=t*(o-1)+1;if(s&&s!=="NOTSET")switch(s){case"VALID":return i[u]=0,i[a]=0,Math.floor((e-l)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(t!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let p=((e+r-1)/r-1)*r+o-e;return i[u]=Math.floor(s==="SAME_LOWER"?(p+1)/2:p/2),i[a]=p-i[u],Math.floor((e+p-o)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+i[u]+i[a]-l)/r+1)}},Bi=class{static getShapeOfGemmResult(e,r,t,o,i){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let u,a,s;r?(u=e[1],a=e[0]):(u=e[0],a=e[1]);let l=-1;if(o?(s=t[0],l=1):(s=t[1],l=0),t[l]!==a)throw new Error("dimension mismatch");if(u<=0||s<=0||a<=0)throw new Error("invalid shape specified");if(i&&!lr.isValidBroadcast(i,[u,s]))throw new Error("gemm: invalid bias shape for broadcast");return[u,s,a]}},Ri=-34028234663852886e22,Mi=34028234663852886e22});var uw,Lh,at,Bs,vr,Jt,Qr,Dr,Nh,X,ue,ks,zh,Rs,Fh,Fe=P(()=>{"use strict";ct();Ce();uw=64,Lh=(n,e)=>{if(e===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(n){case 10:return e>1?`vec${e}<f16>`:"f16";case 1:return e>1?`vec${e}<f32>`:"f32";case 6:return e>1?`vec${e}<i32>`:"i32";case 12:return e>1?`vec${e}<u32>`:"u32";case 7:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(e!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${n}`)}},at=(n,e=1)=>{let r=Lh(n,e);return typeof r=="string"?r:r[0]},Bs=n=>[{type:"uint32",data:n},{type:"uint32",data:W.computeStrides(n)}],vr=n=>n%4===0?4:n%2===0?2:1,Jt=(n="f32",e,r="0")=>!e||e===1?`${n}(${r})`:`vec${e}<${n}>(${r})`,Qr=(n,e,r)=>n==="f32"?r:e===1?`f32(${r})`:`vec${e}f(${r})`,Dr=(n,e)=>e===4?`(${n}.x + ${n}.y + ${n}.z + ${n}.w)`:e===2?`(${n}.x + ${n}.y)`:e===3?`(${n}.x + ${n}.y + ${n}.z)`:n,Nh=(n,e,r,t,o)=>{let i=typeof r=="number",u=i?r:r.length,a=[...new Array(u).keys()],s=u<2?"u32":u<=4?`vec${u}<u32>`:`array<u32, ${u}>`,l=Lh(e,o),c=typeof l=="string"?l:l[1],p=typeof l=="string"?l:l[0],h={indices:s,value:c,storage:p,tensor:e},g=H=>typeof H=="string"?H:`${H}u`,y={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},b=i?"uniforms.":"",w=`${b}${n}_shape`,S=`${b}${n}_strides`,O="";for(let H=0;H<u-1;H++)O+=`
    let dim${H} = current / ${S}[${H}];
    let rest${H} = current % ${S}[${H}];
    indices[${H}] = dim${H};
    current = rest${H};
    `;O+=`indices[${u-1}] = current;`;let E=u<2?"":`
  fn o2i_${n}(offset: u32) -> ${h.indices} {
    var indices: ${h.indices};
    var current = offset;
    ${O}
    return indices;
  }`,B=H=>(y.offsetToIndices=!0,u<2?H:`o2i_${n}(${H})`),z=[];if(u>=2)for(let H=u-1;H>=0;H--)z.push(`${S}[${H}] * (indices[${H}])`);let M=u<2?"":`
  fn i2o_${n}(indices: ${h.indices}) -> u32 {
    return ${z.join("+")};
  }`,G=H=>(y.indicesToOffset=!0,u<2?H:`i2o_${n}(${H})`),K=(...H)=>u===0?"0u":`${h.indices}(${H.map(g).join(",")})`,Z=(H,$e)=>u<2?`${H}`:`${H}[${$e}]`,me=(H,$e,Ie)=>u<2?`${H}=${Ie};`:`${H}[${$e}]=${Ie};`,R={},te=(H,$e)=>{y.broadcastedIndicesToOffset=!0;let Ie=`${$e.name}broadcastedIndicesTo${n}Offset`;if(Ie in R)return`${Ie}(${H})`;let gt=[];for(let vt=u-1;vt>=0;vt--){let et=$e.indicesGet("outputIndices",vt+$e.rank-u);gt.push(`${Z(S,vt)} * (${et} % ${Z(w,vt)})`)}return R[Ie]=`fn ${Ie}(outputIndices: ${$e.type.indices}) -> u32 {
             return ${gt.length>0?gt.join("+"):"0u"};
           }`,`${Ie}(${H})`},Ve=(H,$e)=>(()=>{if(h.storage===h.value)return`${n}[${H}]=${$e};`;if(h.storage==="vec2<u32>"&&h.value==="i32")return`${n}[${H}]=vec2<u32>(u32(${$e}), select(0u, 0xFFFFFFFFu, ${$e} < 0));`;if(h.storage==="vec2<u32>"&&h.value==="u32")return`${n}[${H}]=vec2<u32>(u32(${$e}), 0u);`;if(h.storage==="u32"&&h.value==="vec4<bool>")return`${n}[${H}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${$e}));`;throw new Error(`not supported combination of storage type ${h.storage} and value type ${h.value} yet`)})(),ge=H=>(()=>{if(h.storage===h.value)return`${n}[${H}]`;if(h.storage==="vec2<u32>"&&h.value==="i32")return`i32(${n}[${H}].x)`;if(h.storage==="vec2<u32>"&&h.value==="u32")return`u32(${n}[${H}].x)`;if(h.storage==="u32"&&h.value==="vec4<bool>")return`vec4<bool>(bool(${n}[${H}] & 0xFFu), bool(${n}[${H}] & 0xFF00u), bool(${n}[${H}] & 0xFF0000u), bool(${n}[${H}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${h.storage} and value type ${h.value} yet`)})(),Ne=u<2?"":`
  fn get_${n}ByIndices(indices: ${h.indices}) -> ${c} {
    return ${ge(`i2o_${n}(indices)`)};
  }`,ee=u<2?"":(()=>{let H=a.map(Ie=>`d${Ie}: u32`).join(", "),$e=a.map(Ie=>`d${Ie}`).join(", ");return`
  fn get_${n}(${H}) -> ${c} {
    return get_${n}ByIndices(${K($e)});
  }`})(),Ue=(...H)=>{if(H.length!==u)throw new Error(`indices length must be ${u}`);let $e=H.map(g).join(",");return u===0?ge("0u"):u===1?ge($e[0]):(y.get=!0,y.getByIndices=!0,y.indicesToOffset=!0,`get_${n}(${$e})`)},st=H=>u<2?ge(H):(y.getByIndices=!0,y.indicesToOffset=!0,`get_${n}ByIndices(${H})`),We=u<2?"":`
  fn set_${n}ByIndices(indices: ${h.indices}, value: ${c}) {
    ${Ve(`i2o_${n}(indices)`,"value")}
  }`,Xe=u<2?"":(()=>{let H=a.map(Ie=>`d${Ie}: u32`).join(", "),$e=a.map(Ie=>`d${Ie}`).join(", ");return`
  fn set_${n}(${H}, value: ${c}) {
    set_${n}ByIndices(${K($e)}, value);
  }`})();return{impl:()=>{let H=[];return i||(H.push(`const ${w} = ${h.indices}(${r.join(",")});`),H.push(`const ${S} = ${h.indices}(${W.computeStrides(r).join(",")});`)),y.offsetToIndices&&H.push(E),y.indicesToOffset&&H.push(M),y.broadcastedIndicesToOffset&&Object.values(R).forEach($e=>H.push($e)),y.set&&H.push(Xe),y.setByIndices&&H.push(We),y.get&&H.push(ee),y.getByIndices&&H.push(Ne),H.join(`
`)},type:h,offsetToIndices:B,indicesToOffset:G,broadcastedIndicesToOffset:te,indices:K,indicesGet:Z,indicesSet:me,set:(...H)=>{if(H.length!==u+1)throw new Error(`indices length must be ${u}`);let $e=H[u];if(typeof $e!="string")throw new Error("value must be string");let Ie=H.slice(0,u).map(g).join(",");return u===0?Ve("0u",$e):u===1?Ve(Ie[0],$e):(y.set=!0,y.setByIndices=!0,y.indicesToOffset=!0,`set_${n}(${Ie}, ${$e})`)},setByOffset:Ve,setByIndices:(H,$e)=>u<2?Ve(H,$e):(y.setByIndices=!0,y.indicesToOffset=!0,`set_${n}ByIndices(${H}, ${$e});`),get:Ue,getByOffset:ge,getByIndices:st,usage:t?"input":"output",name:n,strides:S,shape:w,rank:u}},X=(n,e,r,t=1)=>Nh(n,e,r,!0,t),ue=(n,e,r,t=1)=>Nh(n,e,r,!1,t),ks=class{constructor(e){this.normalizedDispatchGroup=e;this.indicesHelpers=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=uw){let r=typeof e=="number"?e:e[0],t=typeof e=="number"?1:e[1],o=typeof e=="number"?1:e[2],i=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,u=i?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_index) local_index : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>`,a=i?"let global_idx = global_id.x;":`let global_idx = (workgroup_id.z * ${this.normalizedDispatchGroup[0]*this.normalizedDispatchGroup[1]}u +
          workgroup_id.y * ${this.normalizedDispatchGroup[0]}u + workgroup_id.x) * ${r*t*o}u + local_index;`;return`@compute @workgroup_size(${r}, ${t}, ${o})
  fn main(${u}) {
    ${a}
  `}declareVariable(e,r){this.indicesHelpers.push(e),e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:e.type.indices}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:e.type.indices});let t=e.usage==="input"?"read":"read_write",o=e.type.storage;return`@group(0) @binding(${r}) var<storage, ${t}> ${e.name}: array<${o}>;`}declareVariables(...e){return e.map(r=>this.declareVariable(r,this.variableIndex++)).join(`
`)}registerUniform(e,r){return this.uniforms.push({name:e,type:r}),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:r,type:t}of this.uniforms)e.push(`${r}:${t}`);return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.indicesHelpers.map(e=>e.impl()).join(`
`)}},zh=n=>new ks(n),Rs=(n,e)=>{let r=n.length,t=[];for(let o=0;o<r;o++){let i=r-1-o,u=n[i]||1;(e[e.length-1-o]||1)>1&&u===1&&t.unshift(i)}return t},Fh=n=>n<=4});var cr,lw,Li,cw,dr,Gh,Wh,Vh,Uh,Hh,jh,qh,Kh,Yh,Xh,Zt,Ms=P(()=>{"use strict";Ce();it();Fe();cr=n=>{if(!n||n.length===0||n.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(n.length===2&&n[1].dims.length!==1)throw new Error("Invalid axes input dims.")},lw=n=>["","",`var value = ${n.getByOffset("inputOffset")};`,""],Li=(n,e,r,t,o,i,u=!1,a=!1)=>{let s=[],l=r[0].dims,c=W.normalizeAxes(o,r[0].dims.length),p=!a&&c.length===0;l.forEach((G,K)=>{p||c.indexOf(K)>=0?u&&s.push(1):s.push(G)});let h=[],g=X("_A",r[0].dataType,l),y=ue("output",i,s),b=t(g,y,c),w=`inputOffset = ${g.indicesToOffset("inputIndices")};`,S=`let ${w};`,O=`var ${w};`,E=b[1]===""?"":O,B=(b[1]===""?S:w)+`
`+b[2];for(let G=0,K=0;G<r[0].dims.length;G++)p||c.indexOf(G)>=0?(u&&K++,B=`for(var j${G}: u32 = 0; j${G} < ${r[0].dims[G]}; j${G}++) {
                ${b[2].includes("lastIndex")?`let lastIndex = j${G};`:""}
                ${g.indicesSet("inputIndices",G,`j${G}`)}
                ${B}
              }`):(h.push(`${g.indicesSet("inputIndices",G,y.indicesGet("outputIndices",K))};`),K++);let z=W.size(s);return{name:n,shaderCache:e,getShaderSource:G=>`
        ${G.declareVariables(g,y)}

        ${G.mainStart()}
          ${G.guardAgainstOutOfBoundsWorkgroupSizes(z)}
          var inputIndices: ${g.type.indices};
          let outputIndices = ${y.offsetToIndices("global_idx")};

          ${h.join(`
`)}
          ${b[0]}       // init ops for reduce max/min
          ${E}
          ${b[1]}
          ${B}
          ${b[3]}
          ${b.length===4?y.setByOffset("global_idx","value"):b.slice(4).join(`
`)}
        }`,getRunData:()=>({outputs:[{dims:s,dataType:i}],dispatchGroup:{x:Math.ceil(z/64)}})}},cw=(n,e)=>{let r=[];return n[1].dims[0]>0&&n[1].getBigInt64Array().forEach(t=>r.push(Number(t))),be({axes:r,keepDims:e.keepDims,noopWithEmptyAxes:e.noopWithEmptyAxes})},dr=(n,e,r,t)=>{let o=n.inputs,i=o.length===1?r:cw(o,r);n.compute(Li(e,{hint:i.cacheKey},[o[0]],i.noopWithEmptyAxes&&i.axes.length===0?lw:t,i.axes,o[0].dataType,i.keepDims,i.noopWithEmptyAxes),{inputs:[0]})},Gh=(n,e)=>{cr(n.inputs),dr(n,"ReduceLogSum",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${t.getByOffset("inputOffset")};`,"value = log(value);"])},Wh=(n,e)=>{cr(n.inputs),dr(n,"ReduceL1",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += abs(${t.getByOffset("inputOffset")});`,""])},Vh=(n,e)=>{cr(n.inputs),dr(n,"ReduceL2",e,(t,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${t.getByOffset("inputOffset")}; value += (t * t);`,"value = sqrt(value);"])},Uh=(n,e)=>{cr(n.inputs),dr(n,"ReduceLogSumExp",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += exp(${t.getByOffset("inputOffset")});`,"value = log(value);"])},Hh=(n,e)=>{cr(n.inputs),dr(n,"ReduceMax",e,(t,o,i)=>{let u=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&u.push(t.indicesSet("inputIndices",a,0));return[`${u.join(`
`)}`,`var value = ${t.getByOffset("inputOffset")};`,`value = max(value, ${t.getByOffset("inputOffset")});`,""]})},jh=(n,e)=>{cr(n.inputs),dr(n,"ReduceMean",e,(t,o,i)=>{let u=1;for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&(u*=n.inputs[0].dims[a]);return["var sum = f32(0);","",`sum += f32(${t.getByOffset("inputOffset")});`,`let value = ${o.type.value}(sum / ${u});`]})},qh=(n,e)=>{cr(n.inputs),dr(n,"ReduceMin",e,(t,o,i)=>{let u=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&u.push(`inputIndices[${a}] = 0;`);return[`${u.join(`
`)}`,`var value = ${t.getByOffset("inputOffset")};`,`value = min(value, ${t.getByOffset("inputOffset")});`,""]})},Kh=(n,e)=>{cr(n.inputs),dr(n,"ReduceProd",e,(t,o)=>[`var value = ${o.type.storage}(1);`,"",`value *= ${t.getByOffset("inputOffset")};`,""])},Yh=(n,e)=>{cr(n.inputs),dr(n,"ReduceSum",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${t.getByOffset("inputOffset")};`,""])},Xh=(n,e)=>{cr(n.inputs),dr(n,"ReduceSumSquare",e,(t,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${t.getByOffset("inputOffset")}; value += t * t;`,""])},Zt=n=>be(n)});var Jh,Zh,Qh,em,Ls,tm=P(()=>{"use strict";ct();it();Ms();Jh=n=>{if(!n||n.length===0||n.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(n[0].dataType!==1)throw new Error("Invalid input type.")},Zh=(n,e)=>be({axis:e.axis,keepDims:e.keepDims,selectLastIndex:e.selectLastIndex}),Qh=(n,e)=>{Jh(n.inputs);let r=(o,i,u)=>{let a=[];for(let s=0;s<o.rank;s++)(u.indexOf(s)>=0||u.length===0)&&a.push(`inputIndices[${s}] = 0;`);return[`${a.join(`
`)}`,`var value = ${o.getByOffset("inputOffset")};
var bestIndex : i32 = 0;`,`if (${o.getByOffset("inputOffset")} ${e.selectLastIndex>0?"<=":"<"} value) {
         value = ${o.getByOffset("inputOffset")};
         bestIndex = i32(lastIndex);
       }`,"",i.setByOffset("global_idx","bestIndex")]},t=n.inputs.length===1?e:Zh(n.inputs,e);n.compute(Li("ArgMin",{hint:t.cacheKey},[n.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},em=(n,e)=>{Jh(n.inputs);let r=(o,i,u)=>{let a=[];for(let s=0;s<o.rank;s++)(u.indexOf(s)>=0||u.length===0)&&a.push(`inputIndices[${s}] = 0;`);return[`${a.join(`
`)}`,`var value = ${o.getByOffset("inputOffset")};
var bestIndex : i32 = 0;`,`if (${o.getByOffset("inputOffset")} ${e.selectLastIndex>0?">=":">"} value) {
         value = ${o.getByOffset("inputOffset")};
         bestIndex = i32(lastIndex);
       }`,"",i.setByOffset("global_idx","bestIndex")]},t=n.inputs.length===1?e:Zh(n.inputs,e);n.compute(Li("argMax",{hint:t.cacheKey},[n.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},Ls=n=>be(n)});var dw,fw,rm,nm=P(()=>{"use strict";Ce();Fe();dw=n=>{if(n[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(n[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(n[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(n[0].dims[2]!==n[1].dims[0])throw new Error("last dimension of input and bias are not the same")},fw=n=>{let e=n[0].dims,r=n[0].dims[2],t=W.size(e)/4,o=n[0].dataType,i=X("input",o,e,4),u=X("bias",o,[r],4),a=X("residual",o,e,4),s=ue("output",o,e,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:e,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(t/64)}}),getShaderSource:c=>`
  const channels = ${r}u / 4;
  ${c.declareVariables(i,u,a,s)}

  ${c.mainStart()}
    ${c.guardAgainstOutOfBoundsWorkgroupSizes(t)}
    let value = ${i.getByOffset("global_idx")}
      + ${u.getByOffset("global_idx % channels")} + ${a.getByOffset("global_idx")};
    ${s.setByOffset("global_idx","value")}
  }`}},rm=n=>{dw(n.inputs),n.compute(fw(n.inputs))}});var pw,Ge,om,im,am,sm,um,lm,cm,dm,fm,Ns,hw,pm,hm,mm,gm,Ni,bm,zi,ym,vm,xm,wm,Tm,$m,Sm,Im,_m,Am,Om,Em,Cm,Pm,Dm,km,Bm,zs=P(()=>{"use strict";ct();Ce();it();Fe();pw=(n,e,r,t,o,i)=>{let u=Math.ceil(e/4),a="";typeof o=="string"?a=`${o}(a)`:a=o("a");let s=X("inputData",r,[u],4),l=ue("outputData",t,[u],4);return`
  ${n.declareVariables(s,l)}

  ${i??""}

  ${n.mainStart()}
    ${n.guardAgainstOutOfBoundsWorkgroupSizes(u)}

    let a = ${s.getByOffset("global_idx")};
    ${l.setByOffset("global_idx",a)}
  }`},Ge=(n,e,r,t,o,i=n.dataType)=>({name:e,shaderCache:{hint:o},getShaderSource:u=>pw(u,W.size(n.dims),n.dataType,i,r,t),getRunData:u=>({outputs:[{dims:n.dims,dataType:i}],dispatchGroup:{x:Math.ceil(W.size(u[0].dims)/64/4)}})}),om=n=>{n.compute(Ge(n.inputs[0],"Abs","abs"))},im=n=>{n.compute(Ge(n.inputs[0],"Acos","acos"))},am=n=>{n.compute(Ge(n.inputs[0],"Acosh","acosh"))},sm=n=>{n.compute(Ge(n.inputs[0],"Asin","asin"))},um=n=>{n.compute(Ge(n.inputs[0],"Asinh","asinh"))},lm=n=>{n.compute(Ge(n.inputs[0],"Atan","atan"))},cm=n=>{n.compute(Ge(n.inputs[0],"Atanh","atanh"))},dm=n=>be(n),fm=(n,e)=>{let r;switch(e.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${e.to}`)}n.compute(Ge(n.inputs[0],"Cast",r,void 0,e.cacheKey,e.to))},Ns=(n,e)=>{let r=at(n.inputs[0].dataType);n.compute(Ge(n.inputs[0],"Clip",t=>`clamp(${t}, clip_min_, clip_max_)`,`
    const clip_min_: vec4<${r}> = vec4(${r}(${e.min}));
    const clip_max_: vec4<${r}> = vec4(${r}(${e.max}));
`,e.cacheKey),{inputs:[0]})},hw=n=>{let e=n.length>=2?n[1].getFloat32Array()[0]:Ri,r=n.length>=3?n[2].getFloat32Array()[0]:Mi;return be({min:e,max:r})},pm=n=>{let e=hw(n.inputs);Ns(n,e)},hm=n=>{n.compute(Ge(n.inputs[0],"Ceil","ceil"))},mm=n=>{n.compute(Ge(n.inputs[0],"Cos","cos"))},gm=n=>{n.compute(Ge(n.inputs[0],"Cosh","cosh"))},Ni=n=>be(n),bm=(n,e)=>{n.compute(Ge(n.inputs[0],"Elu",r=>`elu_vf32(${r})`,`
  const elu_alpha_: f32 = f32(${e.alpha});

  fn elu_f32(a: f32) -> f32 {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<f32>) -> vec4<f32> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,e.cacheKey))},zi=(n,e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: ${n}) -> ${n} {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,ym=n=>{let e=at(n.inputs[0].dataType);n.compute(Ge(n.inputs[0],"Erf",r=>`erf_vf32(${r})`,zi(`vec4<${e}>`,e)))},vm=n=>{n.compute(Ge(n.inputs[0],"Exp","exp"))},xm=n=>{n.compute(Ge(n.inputs[0],"Floor","floor"))},wm=n=>{let e=at(n.inputs[0].dataType);n.compute(Ge(n.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,zi(`vec4<${e}>`,e)))},Tm=(n,e)=>{n.compute(Ge(n.inputs[0],"LeakyRelu",r=>`select(leaky_relu_alpha_ * ${r}, ${r}, ${r} >= vec4<f32>(0.0))`,`const leaky_relu_alpha_: f32 = f32(${e.alpha});`,e.cacheKey))},$m=n=>{n.compute(Ge(n.inputs[0],"Not",e=>`!${e}`))},Sm=n=>{n.compute(Ge(n.inputs[0],"Neg",e=>`-${e}`))},Im=n=>{n.compute(Ge(n.inputs[0],"Reciprocal",e=>`1.0/${e}`))},_m=n=>{n.compute(Ge(n.inputs[0],"Relu",e=>`select(vec4<f32>(0.0), ${e}, ${e} > vec4<f32>(0.0))`))},Am=n=>{n.compute(Ge(n.inputs[0],"Sigmoid",e=>`(1.0 / (1.0 + exp(-${e})))`))},Om=n=>{n.compute(Ge(n.inputs[0],"Sin","sin"))},Em=n=>{n.compute(Ge(n.inputs[0],"Sinh","sinh"))},Cm=n=>{n.compute(Ge(n.inputs[0],"Sqrt","sqrt"))},Pm=n=>{n.compute(Ge(n.inputs[0],"Tan","tan"))},Dm=n=>{n.compute(Ge(n.inputs[0],"Tanh","tanh"))},km=(n,e)=>(n.compute(Ge(n.inputs[0],"ThresholdedRelu",r=>`select(vec4<f32>(0.0), ${r}, ${r} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_: vec4<f32> = vec4<f32>(${e.alpha});`,e.cacheKey)),0),Bm=n=>{n.compute(Ge(n.inputs[0],"Log","log"))}});var gw,bw,Rm,Mm=P(()=>{"use strict";Ce();Fe();zs();gw=n=>{if(n[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(n[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(n[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(n[0].dims[2]!==n[1].dims[0])throw new Error("last dimension of input and bias are not the same")},bw=n=>{let e=n[0].dims.slice();e[2]=e[2]/2;let r=X("input",n[0].dataType,n[0].dims,4),t=X("bias",n[0].dataType,[n[0].dims[2]],4),o=ue("output",n[0].dataType,e,4),i=W.size(e)/4;return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:e,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:a=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${n[0].dims[2]/4/2}u;

  ${a.declareVariables(r,t,o)}

  ${zi("vec4f")}

  ${a.mainStart()}
    ${a.guardAgainstOutOfBoundsWorkgroupSizes(i)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${o.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},Rm=n=>{gw(n.inputs),n.compute(bw(n.inputs))}});var yw,vw,fr,Lm,Nm,zm,Fm,Gm,Wm,Vm,Um,Hm,jm,qm=P(()=>{"use strict";ct();Ce();Fe();yw=(n,e,r,t,o,i,u,a,s,l,c)=>{let p=W.size(t),h=Math.ceil(p/4),g,y;typeof u=="string"?g=y=(B,z)=>`${u}((${B}),(${z}))`:typeof u=="function"?g=y=u:(g=u.scalar,y=u.vector);let b="",w=ue("outputData",l,t,4),S=X("aData",a,e,4),O=X("bData",s,r,4);if(i){let B=z=>{let M=W.computeStrides(z),G=[];for(let K=z.length-1;K>=0;K--){let Z=w.indicesGet("outputIndices",K+t.length-z.length);G.push(`${M[K]}u * (${Z} % ${z[K]}u)`)}return G.length>0?G.join("+"):"0u"};b=`
          fn calcOffsetA(outputIndices: ${w.type.indices}) -> u32 {
            return ${B(e)};
          }

          fn calcOffsetB(outputIndices: ${w.type.indices}) -> u32 {
            return ${B(r)};
          }
        `}let E;if(o)if(i){let B=W.size(e)===1,z=W.size(r)===1;B||z?E=w.setByOffset("global_idx",y(B?`${S.type.value}(${S.getByOffset("0")}.x)`:S.getByOffset("global_idx"),z?`${O.type.value}(${O.getByOffset("0")}.x)`:O.getByOffset("global_idx"))):E=`
            let outputIndices = ${w.offsetToIndices("global_idx * 4u")};
            let offsetA = calcOffsetA(outputIndices);
            let offsetB = calcOffsetB(outputIndices);
            ${w.setByOffset("global_idx",y(S.getByOffset("offsetA / 4u"),O.getByOffset("offsetB / 4u")))}
          `}else E=w.setByOffset("global_idx",y(S.getByOffset("global_idx"),O.getByOffset("global_idx")));else{if(!i)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let B=(z,M,G="")=>{let K=`aData[indexA${M}][componentA${M}]`,Z=`bData[indexB${M}][componentB${M}]`;return`
            let outputIndices${M} = ${w.offsetToIndices(`global_idx * 4u + ${M}u`)};
            let offsetA${M} = calcOffsetA(outputIndices${M});
            let offsetB${M} = calcOffsetB(outputIndices${M});
            let indexA${M} = offsetA${M} / 4u;
            let indexB${M} = offsetB${M} / 4u;
            let componentA${M} = offsetA${M} % 4u;
            let componentB${M} = offsetB${M} % 4u;
            ${z}[${M}] = ${G}(${g(K,Z)});
          `};l===9?E=`
            var data = vec4<u32>(0);
            ${B("data",0,"u32")}
            ${B("data",1,"u32")}
            ${B("data",2,"u32")}
            ${B("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:E=`
            ${B("outputData[global_idx]",0)}
            ${B("outputData[global_idx]",1)}
            ${B("outputData[global_idx]",2)}
            ${B("outputData[global_idx]",3)}
          `}return`
        ${n.declareVariables(S,O,w)}

        ${c??""}
        ${b}

        ${n.mainStart()}
        ${n.guardAgainstOutOfBoundsWorkgroupSizes(h)}
        ${E}
      }`},vw=(n,e,r,t,o,i,u=r.dataType)=>{let a=!W.areEqual(r.dims,t.dims),s=r.dims,l=W.size(r.dims),c=!1;if(a){let p=lr.calcShape(r.dims,t.dims,!1);if(!p)throw new Error("Can't perform binary op on the given tensors");s=p,l=W.size(s);let h=W.size(r.dims)===1,g=W.size(t.dims)===1,y=1;for(let b=1;b<s.length;b++){let w=r.dims[r.dims.length-b]??1,S=t.dims[t.dims.length-b]??1;if(w===S)y*=w;else break}(y%4===0||h||g)&&(c=!0)}else c=!0;return{name:n,shaderCache:{hint:e},getShaderSource:p=>yw(p,r.dims,t.dims,s,c,a,o,r.dataType,t.dataType,u,i),getRunData:()=>({outputs:[{dims:s,dataType:u}],dispatchGroup:{x:Math.ceil(l/64/4)}})}},fr=(n,e,r,t,o,i)=>{n.compute(vw(e,o??"",n.inputs[0],n.inputs[1],r,t,i))},Lm=n=>{fr(n,"Add",(e,r)=>`${e}+${r}`)},Nm=n=>{fr(n,"Div",(e,r)=>`${e}/${r}`)},zm=n=>{fr(n,"Equal",{scalar:(e,r)=>`u32(${e}==${r})`,vector:(e,r)=>`vec4<u32>(${e}==${r})`},void 0,void 0,9)},Fm=n=>{fr(n,"Mul",(e,r)=>`${e}*${r}`)},Gm=n=>{let e=X("input",n.inputs[0].dataType,n.inputs[0].dims).type.value;fr(n,"Pow",{scalar:(t,o)=>`pow_custom(${t},${o})`,vector:(t,o)=>`pow_vector_custom(${t},${o})`},`
    fn pow_custom(a : ${e}, b : ${e}) -> ${e} {
      if (b == ${e}(0.0)) {
        return ${e}(1.0);
      } else if (a < ${e}(0.0) && f32(b) != floor(f32(b))) {
        return ${e}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${e}(1.0), round(f32(abs(b) % ${e}(2.0))) != 1.0) * ${e}(${e==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${e}>, b : vec4<${e}>) -> vec4<${e}> {
      // TODO: implement vectorized pow
      return vec4<${e}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},Wm=n=>{fr(n,"Sub",(e,r)=>`${e}-${r}`)},Vm=n=>{fr(n,"Greater",{scalar:(e,r)=>`u32(${e}>${r})`,vector:(e,r)=>`vec4<u32>(${e}>${r})`},void 0,void 0,9)},Um=n=>{fr(n,"Less",{scalar:(e,r)=>`u32(${e}<${r})`,vector:(e,r)=>`vec4<u32>(${e}<${r})`},void 0,void 0,9)},Hm=n=>{fr(n,"GreaterOrEqual",{scalar:(e,r)=>`u32(${e}>=${r})`,vector:(e,r)=>`vec4<u32>(${e}>=${r})`},void 0,void 0,9)},jm=n=>{fr(n,"LessOrEqual",{scalar:(e,r)=>`u32(${e}<=${r})`,vector:(e,r)=>`vec4<u32>(${e}<=${r})`},void 0,void 0,9)}});var ww,Tw,$w,Sw,Km,Ym,Xm=P(()=>{"use strict";Ce();it();Fe();ww=n=>{if(!n||n.length<1)throw new Error("too few inputs");let e=n[0].dataType,r=n[0].dims.length;for(let t of n){if(t.dataType!==e)throw new Error("input tensors should be one type");if(t.dims.length!==r)throw new Error("input tensors should have the same shape")}},Tw=n=>`
  fn calculateInputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${n}u; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${n}u;
  }`,$w=(n,e)=>{let r=n.length,t=[];for(let o=0;o<r;++o){let i=e.setByOffset("global_idx",n[o].getByIndices("indices"));r===1?t.push(i):o===0?t.push(`if (inputIndex == ${o}u) { ${i} }`):o===r-1?t.push(`else { ${i} }`):t.push(`else if (inputIndex == ${o}) { ${i} }`)}return t.join(`
`)},Sw=(n,e)=>{let r=n[0].dims.slice();if(e>=r.length||e<-1*r.length)throw new Error("axis specified for concat doesn't match input dimensionality");let t=e<0?r.length+e:e,o=r.slice(0);for(let g=1;g<n.length;g++){let y=n[g].dims.slice();for(let b=0;b<r.length;b++)if(b===t)o[t]+=y[b];else if(r[b]!==y[b])throw new Error("non concat dimensions must match")}let i=W.size(o),u=new Array(n.length),a=new Array(n.length),s=n[0].dataType,l=0;for(let g=0;g<n.length;++g)l+=n[g].dims[t],u[g]=l,a[g]=X(`input${g}`,s,n[g].dims);let c=ue("output",s,o),p=c.indicesGet("indices",t),h=g=>`
  ${g.declareVariables(...a,c)}

  const sizeInConcatAxis = array<u32, ${u.length}>(${u.map(y=>`${y}u`).join(",")});
  ${Tw(u.length)}

  ${g.mainStart()}
    ${g.guardAgainstOutOfBoundsWorkgroupSizes(i)}

    var indices = ${c.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${p});
    if (inputIndex != 0u) {
      ${p} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${$w(a,c)}
  }`;return{name:"Concat",shaderCache:{hint:`${e}`},getRunData:()=>({outputs:[{dims:o,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:h}},Km=(n,e)=>{ww(n.inputs),n.compute(Sw(n.inputs,e.axis))},Ym=n=>be({axis:n.axis})});var pt,Fi,Gi,Wi=P(()=>{"use strict";pt=(n,e)=>{switch(n){case 1:return e;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${n}-component is not supported.`)}},Fi=(n,e=!1,r=!1,t=3)=>"",Gi=(n,e)=>`
      ${n?"value = value + getBiasByOutputCoords(coords);":""}
      // TODO uncomment the following line when activation is supported above.
      // ${e?"value = activation(value, coords);":""}
      `});var Vi,Fs=P(()=>{"use strict";Vi=`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    outShapeStrides.x, outShapeStrides.y, outShapeStrides.z, 1));
}
`});var Ui,Hi,lo=P(()=>{"use strict";Ce();Ui=(n,e=!1)=>{switch(n.activation){case"Relu":return{activationFunction:"",applyActivation:"value = max(value, 0.0);"};case"Sigmoid":return{activationFunction:"",applyActivation:"value = (1.0 / (1.0 + exp(-value)));"};case"Clip":return{activationFunction:`const clip_min_=f32(${n.clipMin});const clip_max_=f32(${n.clipMax});`,applyActivation:e?"value = clamp(value, vec4(clip_min_), vec4(clip_max_));":"value = clamp(value, clip_min_, clip_max_);"};default:return{activationFunction:"",applyActivation:""}}},Hi=n=>{let e=n?.activation||"";if(e==="Clip"){let[r,t]=n?.activation_params||[Ri,Mi];return{activation:e,clipMax:t,clipMin:r,activationCacheKey:`${e}:${r},${t}`}}return{activation:e,activationCacheKey:e}}});var Iw,_w,co,Jm,Aw,fo,Ow,ji,po=P(()=>{"use strict";Ce();Fe();lo();Wi();Iw=(n,e)=>n?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${e?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${e?", batchIndices":""});
        `,_w=(n,e)=>n?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${e===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,co=(n,e,r="f32",t,o=!1,i=32,u=!1,a=32)=>{let s=e[1]*n[1],l=e[0]*n[0],c=o?s:i,p=o?i:s,h=c/e[0],g=i/e[1];if(!((o&&h===4&&n[1]===4||!o&&(h===3||h===4))&&c%e[0]===0&&i%e[1]===0&&n[0]===4))throw new Error(`If transposeA ${o} is true, innerElementSize ${h} and workPerThread[1] ${n[1]} must be 4.
      Otherwise, innerElementSize ${h} must be 3 or 4.
  tileAWidth ${c} must be divisible by workgroupSize[0]${e[0]}. tileInner ${i} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${n[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${h}<${r}>, ${c/h}>, ${p}>;
var<workgroup> mm_Bsub: array<array<vec4<${r}>, ${l/n[0]}>, ${i}>;

const rowPerThread = ${n[1]};
const colPerThread = ${n[0]};
const innerElementSize = ${h};
const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${u?"0":"i32(globalId.z)"};
  ${t?`let batchIndices = ${t.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${s};

  let numTiles = ${u?`${Math.ceil(a/i)}`:"(dimInner - 1) / tileInner + 1"};
  var kStart = ${u?`i32(globalId.z) * ${a}`:"0"};

  var acc: array<vec4<${r}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${g};
  for (var t = 0; t < numTiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${Iw(o,t)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${g}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${t?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${h===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${_w(o,h)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},Jm=(n,e)=>n?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${e?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${e?", batchIndices":""});
            `,Aw=n=>n?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",fo=(n,e,r="f32",t,o=!1,i=32,u=!1,a=32,s=!1)=>{let l=n[1]*e[1],c=n[0]*e[0],p=o?l:i,h=o?i:l;if(!(h%e[1]===0&&p%e[0]===0&&i%e[1]===0))throw new Error(`tileAHight ${h} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${p} must be divisible by workgroupSize[0]${e[0]}, tileInner ${i} must be divisible by workgroupSize[1]${e[1]}`);let g=h/e[1],y=p/e[0],b=i/e[1],w=s?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${l};
    let globalColStart = i32(workgroupId.x) * ${c};

    // Loop over shared dimension.
    for (var t = 0; t < numTiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${h}; inputRow = inputRow + ${e[1]}) {
        for (var inputCol = localCol; inputCol < ${p}; inputCol = inputCol + ${e[0]}) {
          ${Jm(o,t)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${i}; inputRow = inputRow + ${e[1]}) {
            for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${e[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${t?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${r}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${o?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${e[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${e[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${l};

let tileRowA = i32(localId.y) * ${g};
let tileColA = i32(localId.x) * ${y};
let tileRowB = i32(localId.y) * ${b};
// Loop over shared dimension.
for (var t = 0; t < numTiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${g}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${y}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${Jm(o,t)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${b}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${t?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${r}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${Aw(o)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${r}, ${p}>, ${h}>;
  var<workgroup> mm_Bsub : array<array<${r}, ${c}>, ${i}>;
  const rowPerThread = ${n[1]};
  const colPerThread = ${n[0]};
  const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${u?"0":"i32(globalId.z)"};
    ${t?`let batchIndices = ${t.offsetToIndices("u32(batch)")};`:""}
    let numTiles = ${u?`${Math.ceil(a/i)}`:"(dimInner - 1) / tileInner + 1"};
    var kStart = ${u?`i32(globalId.z) * ${a}`:"0"};

    var acc : array<array<${r}, colPerThread>, rowPerThread>;

    // Without this initialization strange values show up in acc.
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = 0.0;
      }
    }
    ${w}
  }
`},Ow=(n,e,r,t,o,i=!1)=>{let u=o[0],a=o[1],s=o[2],l=t[0],c=t[1],p=t[2],h=t[3],g=Rs(u,s),y=Rs(a,s),b=at(t[0].type.tensor),w=()=>{let E=c.rank,B=l.rank,z=`var aIndices: ${c.type.indices};`;for(let M=E-2-1,G=B-1;M>=0;M--,G--)z+=`
aIndices[${M}] = ${B>1?`batchIndices[${G}]`:"batchIndices"};`;return g.forEach(M=>{z+=`
aIndices[${M}] = 0;`}),z+=`
aIndices[${E-2}] = u32(row);
                   aIndices[${E-1}] = u32(colIn);`,z},S=()=>{let E=p.rank,B=l.rank,z=`var bIndices: ${p.type.indices};`;for(let M=E-2-1,G=B-1;M>=0;M--,G--)z+=`
bIndices[${M}] = ${B>1?`batchIndices[${G}]`:"batchIndices"};`;return y.forEach(M=>{z+=`
bIndices[${M}] = 0;`}),z+=`
bIndices[${E-2}] = u32(row);
                   bIndices[${E-1}] = u32(colIn);`,z};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${pt(n,b)} {
      var value = ${pt(n,b)}(0.0);
      let col = colIn * ${n};
      if(row < dimAOuter && col < dimInner)
      {
        ${w()}
        value = ${c.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${pt(n,b)} {
      var value = ${pt(n,b)}(0.0);
      let col = colIn * ${n};
      if(row < dimInner && col < dimBOuter)
      {
        ${S()}
        value = ${p.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${pt(n,b)}) {
      let col = colIn * ${n};
      if (row < dimAOuter && col < dimBOuter) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${e?`value = value + ${i?"bias[colIn]":`${pt(n,b)}(bias[row])`};`:""}
        ${r}
        ${h.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},ji=(n,e,r,t,o=!1)=>{let i=n[0].dims,u=n[1].dims,a=i.slice(0,-2),s=u.slice(0,-2),l=t?t.slice(0,-2):r.slice(0,-2),c=X("batchDims",n[0].dataType,l),p=[c],h=[a,s,l],g=W.size(l),y=i[i.length-2],b=i[i.length-1],w=u[u.length-1],S=b%4===0&&w%4===0,{activationFunction:O,applyActivation:E}=Ui(e,S),B=y<=8?[4,1,1]:[4,4,1],z=[8,8,1],M=[Math.ceil(w/z[0]/B[0]),Math.ceil(y/z[1]/B[1]),Math.ceil(g/z[2]/B[2])],G=at(n[0].dataType),K=S?4:1,Z=X("a",n[0].dataType,[...a,y,b/K],K),me=X("b",n[1].dataType,[...s,b,w/K],K),R=ue("result",n[0].dataType,[g,y,w/K],K);p.push(Z),p.push(me),p.push(R);let te=[Z,me],Ve=n.length>2,ge=Ow(K,Ve,E,p,h,o);if(Ve){let ee=o?K:1;te.push(X("bias",n[2].dataType,n[2].dims,ee))}let Ne=ee=>`
  const dimAOuter: i32 = ${y};
  const dimBOuter: i32 = ${w};
  const dimInner: i32 = ${b};
  ${ee.declareVariables(...te,R)}
  ${O}
  ${ge}
  ${S?co(B,z,G,c):fo(B,z,G,c)}
                   ${c.impl()}`;return{name:"MatMul",shaderCache:{hint:e.activationCacheKey},getRunData:()=>({outputs:[{dims:r,dataType:n[0].dataType}],dispatchGroup:{x:M[0],y:M[1],z:M[2]}}),getShaderSource:Ne}}});var Ew,Zm,Qm=P(()=>{"use strict";Pr();Ce();Fe();Wi();Fs();po();Ew=(n,e,r,t,o=!1,i,u=!1,a=4,s=4,l=4,c="f32")=>{let p=me=>{switch(me){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${c}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${me} is not supported.`)}},h=me=>{switch(me){case 1:return"return w[row * wShape[3] + colIn];";case 4:return"return w[row * wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${me} is not supported.`)}},g=n?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,y=n?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,b=n?"xShape[1]":"xShape[2]",w=n?"xShape[2]":"xShape[3]",S=n?"row":"col",O=n?"col":"row",E=`
    let inChannels = wShape[2];
    let outWidth = ${n?"outShape[2]":"outShape[3]"};
    let outRow = ${S} / outWidth;
    let outCol = ${S} % outWidth;

    let WRow = ${O} / (filterDims[1] * inChannels);
    let WCol = ${O} / inChannels % filterDims[1];
    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];
    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];
    let xCh = ${O} % inChannels;
    var resData = ${pt(a,c)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${b} && xCol >= 0 && xCol < ${w}) {
      ${g}
      let xIndex = getIndexFromCoords4D(coord, xShape);
      ${p(a)}
    }
    return resData;`,B=n?e&&t?`
    let col = colIn * ${a};
    ${E}`:`
    let col = colIn * ${a};
    if (row < dimAOuter && col < dimInner) {
      ${E}
    }
    return ${pt(a,c)}(0.0);`:t&&r?`
    let col = colIn * ${a};
    ${E}`:`
    let col = colIn * ${a};
    if (row < dimInner && col < dimBOuter) {
      ${E}
    }
    return ${pt(a,c)}(0.0);`,z=`${h(s)}`,M=pt(l,c),G=n?pt(a,c):pt(s,c),K=n?pt(s,c):pt(a,c);return`
    ${Fi(i,u,l===4,4)}
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${G} {
      ${n?B:z}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${K} {
      ${n?z:B}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${M}) {
      let col = colIn * ${l};
      if (row < dimAOuter && col < dimBOuter)
      {
      var value = valueIn;
      let outWidth = ${n?"outShape[2]":"outShape[3]"};
      ${y}
      ${Gi(o,i)}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},Zm=(n,e,r,t,o,i,u,a)=>{let s=e.format==="NHWC",l=s?n[0].dims[3]:n[0].dims[1],c=r[0],p=s?r[2]:r[3],h=s?r[1]:r[2],g=s?r[3]:r[1],y=s&&(l%4===0||l%3===0)&&g%4===0,b=s?g:p*h,w=s?p*h:g,S=[8,8,1],O=t<=8?[4,1,1]:[4,4,1],E=[Math.ceil(b/S[0]/O[0]),Math.ceil(w/S[1]/O[1]),Math.ceil(c/S[2]/O[2])];Qe("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${E}`);let B=y?s&&l%4!==0?3:4:O[0],z=S[1]*O[1],M=S[0]*O[0],G=Math.max(S[0]*B,S[1]),K=t%z===0,Z=o%M===0,me=i%G===0,R=y?[B,4,4]:[1,1,1],te=at(n[0].dataType),Ve=[`@group(0) @binding(0) var<storage, read> x: array<${y&&B===4?`vec4<${te}>`:te}>;`,`@group(0) @binding(1) var<storage, read> w: array<${y?`vec4<${te}>`:te}>;`],ge=`
      fn setOutputAtIndex(flatIndex : i32, value : ${y?`vec4<${te}>`:te}) {
        result[flatIndex] = ${y?`vec4<${te}>`:te}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${y?`vec4<${te}>`:te}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${y?"/ 4":""}, value);
      }`;return u&&(Ve.push(`@group(0) @binding(2) var<storage, read> bias: array<${y?`vec4<${te}>`:te}>;`),ge+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${y?`vec4<${te}>`:te} {
          return bias[coords.${s?"w":"y"}${y?"/ 4":""}];
        }`),{name:"Conv2DMatMul",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:n[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]}}),getShaderSource:()=>`
        ${Vi}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${Ve.join("")}
        @group(0) @binding(${Ve.length}) var<storage, read_write> result: array<${y?`vec4<${te}>`:te}>;
        //@group(0) @binding(${Ve.length+1}) var<uniform> uniforms: Uniforms;

        const xShape : vec4<i32> = vec4<i32>(${n[0].dims.join(",")});
        const wShape : vec4<i32> = vec4<i32>(${n[1].dims.join(",")});
        const outShape : vec4<i32> = vec4<i32>(${r.join(",")});
        const outShapeStrides : vec3<i32> = vec3<i32>(${W.computeStrides(r).slice(0,3).join(",")});
        const filterDims : vec2<i32> = vec2<i32>(${e.kernelShape[0]}, ${e.kernelShape[1]});
        const pad : vec2<i32> = vec2<i32>(${e.pads[0]}, ${e.pads[1]});
        const stride : vec2<i32> = vec2<i32>(${e.strides[0]}, ${e.strides[1]});
        const dilation : vec2<i32> = vec2<i32>(${e.dilations[0]}, ${e.dilations[1]});
        const dimAOuter : i32 = ${t};
        const dimBOuter : i32 = ${o};
        const dimInner : i32 = ${i};
        ${ge}
        ${Ew(s,K,Z,me,u,e.activation.toLowerCase(),!1,R[0],R[1],R[2],te)}
            ${y?co(O,S,te,void 0,!s,G):fo(O,S,te,void 0,!s,G,!1,void 0,a)}`}}});var Gs,eg=P(()=>{"use strict";Ce();Fe();Vs();lo();Gs=(n,e,r)=>{let t=n.length>2,o=t?"value += b[output_channel];":"",i=n[0].dims,u=n[1].dims,a=u[0]/e.group,{activationFunction:s,applyActivation:l}=Ui(e),c=e.format==="NHWC",p=Ws(i,u,e.dilations,e.pads,e.strides,c),h=W.size(p),g=ue("output",n[0].dataType,p),y=X("x",n[0].dataType,i),b=X("w",n[1].dataType,u),w=[y,b];t&&w.push(X("b",n[2].dataType,n[2].dims));let S=O=>`
  const strides: vec2<u32> = vec2(${e.strides[0]}u, ${e.strides[1]}u);
  const pads: vec2<u32> = vec2(${e.pads[0]}u, ${e.pads[1]}u);

  ${O.declareVariables(...w,g)}

  ${s}

  ${O.mainStart()}
    ${O.guardAgainstOutOfBoundsWorkgroupSizes(h)}

    let outputIndices = ${g.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${c?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${c?1:2}], outputIndices[${c?2:3}]) * strides - pads;
    let group_id: u32 = output_channel / ${a}u;

    var value: ${g.type.value} = ${g.type.value}(0);
    for (var wInChannel: u32 = 0u; wInChannel < ${u[1]}u; wInChannel++) {
      let input_channel = group_id * ${u[1]}u + wInChannel;
      for (var wHeight: u32 = 0u; wHeight < ${u[2]}u; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * ${e.dilations[0]}u;

        if (xHeight < 0u || xHeight >= ${i[c?1:2]}u) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < ${u[3]}u; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * ${e.dilations[1]}u;
          if (xWidth < 0u || xWidth >= ${i[c?2:3]}u) {
            continue;
          }

          let xVal = ${c?y.get("batch","xHeight","xWidth","input_channel"):y.get("batch","input_channel","xHeight","xWidth")};
          let wVal = ${b.get("output_channel","wInChannel","wHeight","wWidth")};
          value += xVal*wVal;
        }
      }
    }
    ${o}
    ${l}
    ${g.setByOffset("global_idx","value")}
  }`;return{name:"GroupedConv",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:r?r(p):p,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)}}),getShaderSource:S}}});var Cw,tg,Pw,Dw,Sn,rg,ng,qi=P(()=>{"use strict";Ce();it();Fe();Cw=n=>{if(!n||n.length!==1)throw new Error("Transpose requires 1 input.")},tg=(n,e)=>e&&e.length!==n?[...new Array(n).keys()].reverse():e,Pw=(n,e)=>W.sortBasedOnPerm(n,tg(n.length,e)),Dw=(n,e,r,t)=>{let o=[];o.push(`fn perm(i: ${t.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`);for(let i=0;i<e;++i)o.push(r.indicesSet("a",n[i],`i[${i}]`));return o.push("return a;}"),o.join(`
`)},Sn=(n,e)=>{let r=n.dataType,t=n.dims.length,o=tg(t,e),i=Fh(t),u=Pw(n.dims,o),a=i?u.length:u,s=i?t:n.dims,l=ue("output",r,a),c=X("a",r,s),p=h=>`
  ${h.registerUniform("output_size","u32").declareVariables(c,l)}

  ${Dw(o,t,c,l)}

  ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${l.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${l.setByOffset("global_idx",c.getByIndices("aIndices"))}
  }`;return{name:"Transpose",shaderCache:{hint:`${e}`,inputDependencies:i?["rank"]:["dims"]},getRunData:h=>{let g=W.size(u);return{outputs:[{dims:u,dataType:h[0].dataType}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:i?[{type:"uint32",data:g},...Bs(h[0].dims),...Bs(u)]:[{type:"uint32",data:g}]}},getShaderSource:p}},rg=(n,e)=>{Cw(n.inputs),n.compute(Sn(n.inputs[0],e.perm))},ng=n=>be({perm:n.perm})});var Ws,og,kw,ig,Us,Bw,Rw,Hs,Vs=P(()=>{"use strict";Ce();it();Qm();po();eg();lo();qi();Ws=(n,e,r,t,o,i)=>{let u=n[0],a=n.slice(i?1:2,i?3:4),s=a.length,l=e[0],p=e.slice(2).map((y,b)=>y+(y-1)*(r[b]-1)),g=a.map((y,b)=>y+t[b]+t[b+s]).map((y,b)=>Math.floor((y-p[b]+o[b])/o[b]));return g.splice(0,0,u),g.splice(i?3:1,0,l),g},og=[2,3,1,0],kw=(n,e)=>{if(!n||n.length!==2&&n.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(n[0].dims.length!==4&&n[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(n[0].dims.length!==n[1].dims.length)throw new Error("filter does not have same dimension as input");let r=n[0].dims[e.format==="NHWC"?n[0].dims.length-1:1],t=n[1].dims[1]*e.group;if(r!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(n.length===3&&(n[2].dims.length!==1||n[1].dims[0]!==n[2].dims[0]))throw new Error("invalid bias");let o=n[0].dims.length-2;if(e.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(e.strides.length!==o)throw new Error(`strides should be ${o}D`);if(e.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==n[1].dims.length-2)throw new Error("invalid kernel shape")},ig=(n,e)=>{let r=n.kernelShape.slice();for(let i=2;i<e[1].dims.length;++i)r[i-2]===0&&(r[i-2]=e[1].dims[i]);let t=n.pads.slice();Zr.adjustPadsBasedOnAutoPad(e[0].dims,n.strides,n.dilations,r,t,n.format==="NHWC",n.autoPad);let o=Object.assign({},n);return Object.assign(o,{kernelShape:r,pads:t,cacheKey:n.cacheKey}),o},Us=n=>{let e=Hi(n),r=n.format,t=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][n.auto_pad],o=n.dilations,i=n.group,u=n.kernel_shape,a=n.pads,s=n.strides,l=n.w_is_const();return be({autoPad:t,format:r,dilations:o,group:i,kernelShape:u,pads:a,strides:s,wIsConst:l,...e})},Bw=(n,e,r)=>{let t=ig(r,e);if(r.group!==1){n.compute(Gs(e,t));return}let o=r.format==="NHWC",i=e.length===3,u=e[0].dims[o?1:2],a=e[0].dims[o?2:3],s=e[0].dims[o?3:1],l=e[1].dims[2],c=e[1].dims[3],p=Ws(e[0].dims,e[1].dims,r.dilations,t.pads,r.strides,o),h=p[o?1:2],g=p[o?2:3],y=p[o?3:1],b=o&&l===u&&c===a&&r.pads[0]===0&&r.pads[1]===0;if(b||l===1&&c===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let M=p[0],G,K,Z,me=[];if(o){let R=n.kernelCustomData.wT??n.compute(Sn(e[1],og),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!n.kernelCustomData.wT&&(n.kernelCustomData.wT=R),b){let te=u*a*s;G=e[0].reshape([1,M,te]),K=R.reshape([1,te,y]),Z=[1,M,y]}else G=e[0].reshape([M,u*a,s]),K=R.reshape([1,s,y]),Z=[M,h*g,y];me.push(G),me.push(K)}else G=e[0].reshape([M,s,u*a]),K=e[1].reshape([1,y,s]),Z=[M,y,h*g],me.push(K),me.push(G);i&&me.push(e[2]),n.compute(ji(me,t,p,Z,o),{inputs:me});return}let w=!0,S=n.kernelCustomData.wT??n.compute(Sn(e[1],og),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!n.kernelCustomData.wT&&(n.kernelCustomData.wT=S);let O=[e[0],S];i&&O.push(e[2]);let E=o?h*g:y,B=o?y:h*g,z=l*c*s;n.compute(Zm(O,t,p,E,B,z,i,w),{inputs:O})},Rw=(n,e)=>{let r=e.format==="NHWC",t=[n.inputs[0].reshape(r?[n.inputs[0].dims[0],1,n.inputs[0].dims[1],n.inputs[0].dims[2]]:[n.inputs[0].dims[0],n.inputs[0].dims[1],1,n.inputs[0].dims[2]]),n.inputs[1].reshape([n.inputs[1].dims[0],n.inputs[1].dims[1],1,n.inputs[1].dims[2]])];n.inputs.length===3&&t.push(n.inputs[2]);let o=[0,e.pads[0],0,e.pads[1]],i=[1].concat(e.strides),u=[1].concat(e.dilations),a=[1].concat(e.kernelShape),s=ig({...e,pads:o,strides:i,dilations:u,kernelShape:a},t);n.compute(Gs(t,s,l=>r?[l[0],l[2],l[3]]:[]))},Hs=(n,e)=>{kw(n.inputs,e),n.inputs[0].dims.length===3?Rw(n,e):Bw(n,n.inputs,e)}});var Mw,ag,sg=P(()=>{"use strict";Pr();Ce();Wi();Fs();po();Mw=(n,e=!1,r,t=!1,o=4)=>{let i=pt(o,"f32"),u=S=>{switch(S){case 1:return"return W[getIndexFromCoords4D(coord, wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${S} is not supported.`)}},a=n?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,s=n?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,l=n?"outBackprop[1]":"outBackprop[2]",c=n?"outBackprop[2]":"outBackprop[3]",p=n?"row":"col",h=n?"col":"row",g=`
      let inChannels = ${n?"outBackprop[3]":"outBackprop[1]"};
      let outWidth = ${n?"outShape[2]":"outShape[3]"};
      let outRow = ${p} / outWidth;
      let outCol = ${p} % outWidth;

      let WRow = ${h} / (filterDims[1] * inChannels);
      let WCol = ${h} / inChannels % filterDims[1];
      let xR = f32(outRow - pads[0] + dilation[0] * WRow) / f32(strides[0]);
      let xC = f32(outCol - pads[1] + dilation[1] * WCol) / f32(strides[1]);
      if (xR < 0.0 || xR >= f32(${l}) || fract(xR) > 0.0) {
        return ${i}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${c}) || fract(xC) > 0.0) {
        return ${i}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${h} % inChannels;
      ${a}
      return x[getIndexFromCoords4D(coord, xShape)/${o}];`,y=n?`
      let col = colIn * ${o};
      if (row < dimAOuter && col < dimInner) {
        ${g}
      }
      return ${i}(0.0);`:`
      let col = colIn * ${o};
      if (row < dimInner && col < dimBOuter) {
        ${g}
      }
      return ${i}(0.0);`,b=`
      let col = colIn * ${o};
      let inChannels = ${n?"outBackprop[3]":"outBackprop[1]"};
      let coordX = filterDims.x - 1 - row / (filterDims[1] * inChannels);
      let coordY = filterDims.y - 1 - (row / inChannels) % filterDims[1];
      if (${n?"row < dimInner && col < dimBOuter":"row < dimInner && col < dimAOuter"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${u(o)}
      }
      return ${i}(0.0);
      `;return`
  ${Fi(r,t,o===4,4)}
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${i} {
    ${n?y:b}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${i} {
    ${n?b:y}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${i}) {
    let col = colIn * ${o};
    if (row < dimAOuter && col < dimBOuter) {
      var value = valueInput;
      let outWidth = ${n?"outShape[2]":"outShape[3]"};
      ${s}
      ${Gi(e,r)}
      result[getIndexFromCoords4D(coords, outShape)/${o}] = value;
    }
  }`},ag=(n,e,r,t,o,i,u,a)=>{let s=e.format==="NHWC",l=s?n[0].dims[3]:n[0].dims[1],c=r[0],p=s?r[2]:r[3],h=s?r[1]:r[2],g=s?r[3]:r[1],y=s?l%4===0&&g%4===0:p%4===0&&g%4===0,b=s?g:p*h,w=s?p*h:g,S=y?[8,8,1]:[b<=4||w<=4?4:16,b>4&&w<=4?4:16,1],O=y?[4,4,1]:[b<=4?1:4,b>4&&w<=4?1:4,1],E=[Math.ceil(b/S[0]/O[0]),Math.ceil(w/S[1]/O[1]),Math.ceil(c/S[2]/O[2])];Qe("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${E}`);let B=y?4:1,z=Math.max(S[0]*B,S[1]),M=[`@group(0) @binding(0) var<storage, read> x: array<${y?"vec4<f32>":"f32"}>;`,"@group(0) @binding(1) var<storage, read> W: array<f32>;"],G="";return u&&(M.push(`@group(0) @binding(2) var<storage, read> bias: array<${y?"vec4<f32>":"f32"}>;`),G+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${y?"vec4<f32>":"f32"} {
          return bias[coords.${s?"w":"y"}${y?"/ 4":""}];
        }`),{name:"Conv2DTransposeMatMul",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:n[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]}}),getShaderSource:()=>`
        ${Vi}
        ${M.join(`
`)}
        @group(0) @binding(${M.length}) var<storage, read_write> result: array<${y?"vec4<f32>":"f32"}>;
        const outBackprop : vec4<i32> = vec4<i32>(${n[0].dims.join(",")});
        const xShape : vec4<i32> = vec4<i32>(${n[0].dims.join(",")});
        const wShape : vec4<i32> = vec4<i32>(${n[1].dims.join(",")});
        const outShape : vec4<i32> = vec4<i32>(${r.join(",")});
        const outShapeStrides : vec3<i32> = vec3<i32>(${W.computeStrides(r).slice(0,3).join(",")});
        const filterDims : vec2<i32> = vec2<i32>(${e.kernelShape[s?1:2]}, ${e.kernelShape[s?2:3]});
        const effectiveFilterDims : vec2<i32> = filterDims + vec2<i32>(
              ${e.dilations[0]<=1?0:(e.kernelShape[s?1:2]-1)*(e.dilations[0]-1)},
              ${e.dilations[1]<=1?0:(e.kernelShape[s?2:3]-1)*(e.dilations[1]-1)});
        const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${e.pads[0]+e.pads[2]})/2,
                                         i32(effectiveFilterDims[1]) - 1 - (${e.pads[1]+e.pads[3]})/2);
        const strides : vec2<i32> = vec2<i32>(${e.strides[0]}, ${e.strides[1]});
        const dilation : vec2<i32> = vec2<i32>(${e.dilations[0]}, ${e.dilations[1]});
        const dimAOuter : i32 = ${t};
        const dimBOuter : i32 = ${o};
        const dimInner : i32 = ${i};
        ${G}
        ${Mw(s,u,e.activation.toLowerCase(),!1,B)}
        ${y?co(O,S,"f32",void 0,!s,z):fo(O,S,"f32",void 0,!s,z,!1,void 0,a)}`}}});var Lw,js,ug=P(()=>{"use strict";Pr();Ce();Fe();Lw=(n,e,r,t,o,i,u=!1,a)=>{let s=r.format==="NHWC",l=s?1:2,c=s?2:3,p=s?3:1,h=W.size(t),g=u?2:1,y=r.group,b=e[1].dims,w=b[0]/y,S=b[1],O=`
  fn setOutputAtIndex(flatIndex : u32, value : ${u?`vec4<${a}>`:a}) {
    result[flatIndex] = ${u?`vec4<${a}>`:a}(value);
  }`;o&&(O+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${u?`vec4<${a}>`:a} {
      return bias[coords.${s?"w":"y"}${u?"/ 4":""}];
    }`);let E=u?4:1,B=X("W",e[1].dataType,e[1].dims,E),z=X("Dy",e[0].dataType,e[0].dims,E),M=[z,B];o&&M.push(X("bias",e[2].dataType,[t[p]],E));let G=ue("result",e[0].dataType,t,E),K=`{
        let batch: u32 = ${i?"global_id.z":"workgroup_id.z"} / outShape[1];
        let r = ${i?"global_id.z":"workgroup_id.z"} % outShape[1];
        let c = ${i?"global_id.y":"workgroup_id.y"} * ${g};
        let d1: u32 = ${i?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${a}>, ${g}>;
        for (var i = 0; i < ${g}; i++) {
          dotProd[i] = vec4<${a}>(0.0);
        }
        for (var wR: u32 = 0; wR < filterDims[0]; wR = wR + 1) {
          var dyR = (${a}(dyCorner.x) + ${a}(wR)) / ${a}(strides.x);
          let wRPerm = filterDims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${a}(outBackprop[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < filterDims[1]; wC = wC + 1) {
            let dyC = (${a}(dyCorner.y) + ${a}(wC)) / ${a}(strides.y);
            let dyC2 = (${a}(dyCorner.y) + 1.0 + ${a}(wC)) / ${a}(strides.y);
            let wCPerm = filterDims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${a}(outBackprop[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${a}(outBackprop[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = outBackprop[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${z.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${a}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${z.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${a}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = outBackprop[${p}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${z.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${a}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = outBackprop[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${z.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${a}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${g}; i = i + 1) {
          let value = dotProd[i] + ${o?"bias[c+i]":"0.0"};
          ${G.set("batch","r","c + i","d1","value")};
        }
      }`,Z=`
          let outputIndices = ${G.offsetToIndices("global_idx")};
          let batch = ${G.indicesGet("outputIndices",0)};
          let d1 = ${G.indicesGet("outputIndices",p)};
          let r = ${G.indicesGet("outputIndices",l)};
          let c = ${G.indicesGet("outputIndices",c)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / ${S};
          let wOutChannel = d1 - groupId * ${S};
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = 0.0;
          for (var wR: u32 = 0; wR < effectiveFilterDims.x; wR = wR + 1) {
            if (wR % dilations.x != 0) {
              continue;
            }
            let dyR = (${a}(dyRCorner) + ${a}(wR)) / ${a}(strides[0]);
            let wRPerm = filterDims.x - 1 - wR / dilations.x;
            if (dyR < 0.0 || dyR >= ${a}(outBackprop[${l}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < effectiveFilterDims.y; wC = wC + 1) {
              if (wC % dilations.y != 0) {
                continue;
              }
              let dyC = (${a}(dyCCorner) + ${a}(wC)) / ${a}(strides.y);
              let wCPerm = filterDims.y - 1 - wC / dilations.y;
              if (dyC < 0.0 || dyC >= ${a}(outBackprop[${c}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * ${w};
              for (var d2: u32 = 0; d2 < ${w}; d2 = d2 + 1) {
                let xValue = ${s?z.get("batch","idyR","idyC","inputChannel"):z.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${B.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${o?"bias[d1]":"0.0"};
          ${G.setByOffset("global_idx","value")};
        `;return`
  ${n.declareVariables(...M,G)}
  ${O}
  const outShape : vec4<u32> = vec4<u32>(${t.join(",")});
  const outBackprop : vec4<u32> = vec4<u32>(${e[0].dims.join(",")});
  const strides : vec2<u32> = vec2<u32>(${r.strides[0]}, ${r.strides[1]});
  const filterDims : vec2<u32> = vec2<u32>(${r.kernelShape[s?1:2]}, ${r.kernelShape[s?2:3]});
  const dilations : vec2<u32> = vec2<u32>(${r.dilations[0]}, ${r.dilations[1]});
  const effectiveFilterDims : vec2<u32> = filterDims + vec2<u32>(
          ${r.dilations[0]<=1?0:(r.kernelShape[s?1:2]-1)*(r.dilations[0]-1)},
          ${r.dilations[1]<=1?0:(r.kernelShape[s?2:3]-1)*(r.dilations[1]-1)});
  const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${r.pads[0]+r.pads[2]})/2,
                                     i32(effectiveFilterDims[1]) - 1 - (${r.pads[1]+r.pads[3]})/2);
    ${n.mainStart()}
    ${n.guardAgainstOutOfBoundsWorkgroupSizes(h)};
  ${u?K:Z}}`},js=(n,e,r)=>{let t=n.length>2,o=e.outputShape,i=W.size(o),u=[Math.ceil(i/64),1,1];Qe("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${u}`);let a=at(n[0].dataType);return{name:"ConvTranspose2D",shaderCache:{hint:e.cacheKey},getRunData:()=>({dispatchGroup:{x:u[0],y:u[1],z:u[2]},outputs:[{dims:r?r(o):o,dataType:n[0].dataType}]}),getShaderSource:s=>Lw(s,n,e,o,t,u[1]===1&&u[2]===1,!1,a)}}});var Nw,zw,Fw,lg,cg,Gw,Ww,Vw,Uw,dg,fg=P(()=>{"use strict";it();sg();ug();lo();qi();Nw=(n,e,r,t,o,i)=>(n-1)*e+r+(t-1)*o+1-i,zw=(n,e,r,t,o)=>{let i=Math.floor(n/2);e==="SAME_UPPER"?(r[t]=i,r[o]=n-i):e==="SAME_LOWER"&&(r[t]=n-i,r[o]=i)},Fw=(n,e,r,t,o,i,u,a,s,l)=>{let c=n.length-2,p=l.length===0;if(s.length===0)for(let y=0;y<c;++y)s.push(0);let h=n[0],g=e[a?3:1]*o;for(let y=0,b=n.length-c-(a?1:0);y<c;++y,++b){let w=n[b],S=p?w*u[y]:l[y],O=Nw(w,u[y],i[y],e[b],r[y],S);zw(O,t,i,y,y+c),p&&l.push(u[y]*(w-1)+s[y]+(e[b]-1)*r[y]+1-i[y]-i[y+c])}l.splice(0,0,h),l.splice(a?3:1,0,g)},lg=(n,e)=>{let r=n.kernelShape.slice();if(n.kernelShape.length===0||n.kernelShape.reduce((h,g)=>h*g,1)===0){r.length=0;for(let h=2;h<e[1].dims.length;++h)r.push(e[1].dims[h])}let t=n.format==="NHWC";r.splice(0,0,e[1].dims[0]),r.splice(t?3:1,0,e[1].dims[1]);let o=n.pads.slice(),i=n.outputShape.slice(),u=n.outputPadding.slice(),a=e[0].dims,s=n.dilations.slice();if(s.reduce((h,g)=>h+g,0)===0){let h=e[0].dims.length-2;s=new Array(h).fill(1)}let l=n.strides.slice();if(l.reduce((h,g)=>h+g,0)===0){let h=e[0].dims.length-2;l=new Array(h).fill(1)}Fw(a,r,s,n.autoPad,n.group,o,l,t,u,i);let c=Object.assign({},n),p=n.cacheKey+[r.join("n,"),o.join(","),l.join(","),u.join(","),i.join(","),s.join(",")].join("_");return Object.assign(c,{kernelShape:r,pads:o,outputPadding:u,outputShape:i,dilations:s,strides:l,cacheKey:p}),c},cg=n=>{let e=Hi(n),r=n.format,t=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof n.autoPad>"u"?0:n.autoPad],o=n.dilations,i=n.group,u=n.kernelShape,a=n.pads,s=n.strides,l=n.wIsConst(),c=n.outputPadding,p=n.outputShape;return be({autoPad:t,format:r,dilations:o,group:i,kernelShape:u,outputPadding:c,outputShape:p,pads:a,strides:s,wIsConst:l,...e})},Gw=(n,e)=>{if(!n||n.length!==2&&n.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(n[0].dims.length!==4&&n[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(n[0].dims.length!==n[1].dims.length)throw new Error("filter does not have same dimension as input");let r=n[0].dims[e.format==="NHWC"?n[0].dims.length-1:1],t=n[1].dims[0];if(r!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=n[1].dims[1]*e.group;if(n.length===3&&(n[2].dims.length!==1||n[2].dims[0]!==o))throw new Error("invalid bias");let i=n[0].dims.length-2;if(e.dilations.reduce((c,p)=>c+p,0)>0&&e.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(e.strides.reduce((c,p)=>c+p,0)>0&&e.strides.length!==i)throw new Error(`strides should be ${i}D`);if(e.pads.reduce((c,p)=>c+p,0)>0&&e.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(e.outputPadding.length!==i&&e.outputPadding.length!==0)throw new Error(`output_padding should be ${i}D`);if(e.kernelShape.reduce((c,p)=>c+p,0)>0&&e.kernelShape.length!==0&&e.kernelShape.length!==n[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==n[0].dims.length-2)throw new Error("invalid output shape")},Ww=[2,3,1,0],Vw=(n,e,r)=>{let t=lg(r,e),o=r.format==="NHWC",i=e.length===3;if(t.group!==1){n.compute(js(e,t));return}let u=t.outputShape,a=u[o?1:2],s=u[o?2:3],l=u[o?3:1],c=e[1].dims[2],p=e[1].dims[3],h=e[0].dims[o?3:1],g=o?a*s:l,y=o?l:a*s,b=c*p*h,w=!0,S=n.kernelCustomData.wT??n.compute(Sn(e[1],Ww),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!n.kernelCustomData.wT&&(n.kernelCustomData.wT=S);let O=[e[0],S];i&&(!o&&e[2].dims.length===1?O.push(e[2].reshape([e[2].dims[0],1,1])):O.push(e[2])),n.compute(ag(O,t,u,g,y,b,i,w),{inputs:O})},Uw=(n,e)=>{let r=e.format==="NHWC",t=[n.inputs[0].reshape(r?[n.inputs[0].dims[0],1,n.inputs[0].dims[1],n.inputs[0].dims[2]]:[n.inputs[0].dims[0],n.inputs[0].dims[1],1,n.inputs[0].dims[2]]),n.inputs[1].reshape([n.inputs[1].dims[0],n.inputs[1].dims[1],1,n.inputs[1].dims[2]])];t.length===3&&t.push(n.inputs[2]);let o=e.kernelShape;(o.length===0||o[0]===0)&&(o=[n.inputs[1].dims[2]]);let i=e.dilations;(i.length===0||i[0]===0)&&(i=[1]);let u=e.strides;(u.length===0||u[0]===0)&&(u=[1]);let a=e.pads;a.length===0&&(a=[0,0]),a=[0,a[0],0,a[1]],u=[1].concat(u),i=[1].concat(i),o=[1].concat(o);let s=lg({...e,pads:a,strides:u,dilations:i,kernelShape:o},t);n.compute(js(t,s,l=>r?[l[0],l[2],l[3]]:[l[0],l[1],l[3]]))},dg=(n,e)=>{Gw(n.inputs,e),n.inputs[0].dims.length===3?Uw(n,e):Vw(n,n.inputs,e)}});var qs,Ki,pg,Hw,jw,Ks,Ys,qw,hg,mg,gg=P(()=>{"use strict";Ce();it();Fe();qs="[a-zA-Z]|\\.\\.\\.",Ki="("+qs+")+",pg="^"+Ki+"$",Hw="("+Ki+",)*"+Ki,jw="^"+Hw+"$",Ks=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,r){let t=this.symbolToIndices.get(e);t===void 0?t=[r]:t.push(r),this.symbolToIndices.set(e,t)}},Ys=class{constructor(e,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[t,o]=r.includes("->")?r.split("->",2):[r,""];if(!t.match(RegExp(jw)))throw new Error("Invalid LHS term");if(t.split(",").forEach((a,s)=>{let l=e[s].dims.slice();if(!a.match(RegExp(pg)))throw new Error("Invalid LHS term");let c=this.processTerm(a,!0,l,s);this.lhs.push(c)}),o==="")o+=[...this.symbolToInfo.entries()].filter(([a,s])=>s.count===1||a==="...").map(([a])=>a).join("");else if(!o.match(RegExp(Ki)))throw new Error("Invalid RHS");o.match(RegExp(qs,"g"))?.forEach(a=>{if(a==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let s=this.symbolToInfo.get(a);if(s===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(s.dimValue)}}),this.rhs=this.processTerm(o,!0,this.outputDims)}addSymbol(e,r,t){let o=this.symbolToInfo.get(e);if(o!==void 0){if(o.dimValue!==r&&o.count!==1)throw new Error("Dimension mismatch");o.count++,o.inputIndices.push(t)}else o={count:1,dimValue:r,inputIndices:[t]};this.symbolToInfo.set(e,o)}processTerm(e,r,t,o=-1){let i=t.length,u=!1,a=[],s=0;if(!e.match(RegExp(pg))&&!r&&e!=="")throw new Error("Invalid LHS term");let l=e.match(RegExp(qs,"g")),c=new Ks(o);return l?.forEach((p,h)=>{if(p==="..."){if(u)throw new Error("Only one ellipsis is allowed per input term");u=!0;let g=i-l.length+1;if(g<0)throw new Error("Ellipsis out of bounds");if(a=t.slice(s,s+g),this.hasEllipsis){if(this.ellipsisDims.length!==a.length||this.ellipsisDims.toString()!==a.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=a;else throw new Error("Ellipsis must be specified in the LHS");for(let y=0;y<a.length;y++){let b=String.fromCharCode("0".charCodeAt(0)+h);c.addSymbol(b,h+y),this.addSymbol(b,t[s++],o)}}else c.addSymbol(p,h),this.addSymbol(p,t[s++],o)}),c}},qw=(n,e)=>{let r=n[0].dataType,t=new Array(n.length);for(let E=0;E<n.length;++E)t[E]=X(`input${E}`,r,n[E].dims);let o=e.outputDims,i=W.size(o),u=ue("output",r,o),a=[],s=Array.from(e.rhs.symbolToIndices.keys()),l="var prod = 1.0;",c="var sum = 0.0;",p="sum += prod;",h=[],g=[],y=[],b=[],w=e.symbolToInfo.size===s.length;e.symbolToInfo.forEach((E,B)=>{if(s.includes(B)){let z=s.indexOf(B);e.lhs.forEach((M,G)=>{if(E.inputIndices.includes(G)){let K=M.symbolToIndices.get(B);if(K===void 0)throw new Error("Invalid symbol error");K.forEach(Z=>{a.push(`${t[G].indicesSet(`input${G}Indices`,Z,u.indicesGet("outputIndices",z))}`)})}})}else e.lhs.forEach((z,M)=>{let G=e.symbolToInfo.get(B);if(G===void 0)throw new Error("Invalid symbol error");if(G.inputIndices.includes(M)){let K=z.symbolToIndices.get(B);if(K===void 0)throw new Error("Invalid symbol error");K.forEach(Z=>{h.push(`${t[M].indicesSet(`input${M}Indices`,Z,`${B}`)}`)}),b.push(`prod *= ${t[M].getByIndices(`input${M}Indices`)};`)}}),g.push(`for(var ${B}: u32 = 0; ${B} < ${e.symbolToInfo.get(B)?.dimValue}; ${B}++) {`),y.push("}")});let S=w?[...a,`let sum = ${t.map((E,B)=>E.getByIndices(`input${B}Indices`)).join(" * ")};`]:[...a,c,...g,...h,l,...b,p,...y],O=E=>`
      ${E.declareVariables(...t,u)}

      ${E.mainStart()}
        ${E.guardAgainstOutOfBoundsWorkgroupSizes(i)}
        var outputIndices = ${u.offsetToIndices("global_idx")};
        ${t.map((B,z)=>`var input${z}Indices: ${t[z].type.indices};`).join(`
`)}
        ${S.join(`
`)};
        ${u.setByOffset("global_idx","sum")};
      }`;return{name:"Einsum",shaderCache:{hint:e.equation},getRunData:()=>({outputs:[{dims:o,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:O}},hg=(n,e)=>{let r=new Ys(n.inputs,e.equation);n.compute(qw(n.inputs,r))},mg=n=>{let e=n.equation.replace(/\s+/g,"");return be({equation:e})}});var Kw,bg,Yw,Xw,yg,vg=P(()=>{"use strict";Ce();Fe();Kw=n=>{if(!n||n.length!==2)throw new Error("Expand requires 2 input.");let e=n[0].dims,r=Array.from(n[1].getBigInt64Array(),Number),t=r.length<e.length?0:r.length-e.length,o=e.length<r.length?0:e.length-r.length;for(;t<r.length&&o<e.length;++t,++o)if(r[t]!==e[o]&&r[t]!==1&&e[o]!==1)throw new Error("Expand requires shape to be broadcastable to input")},bg=(n,e)=>{let r=n.length-e.length,t=[];for(let o=0;o<r;++o)t.push(n[o]);for(let o=0;o<e.length;++o)t.push(e[o]===1?n[o+r]:e[o]);return t},Yw=(n,e)=>n.length>e.length?bg(n,e):bg(e,n),Xw=n=>{let e=n[0].dims,r=Array.from(n[1].getBigInt64Array(),Number),t=Yw(e,r),o=W.size(t),i=n[0].dataType,u=X("input",i,e),a=ue("output",i,t),s=l=>`
  const inputShape = ${u.indices(...e)};
  ${l.declareVariables(u,a)}
  ${l.mainStart()}
  ${l.guardAgainstOutOfBoundsWorkgroupSizes(o)}
    let outputIndices = ${a.offsetToIndices("global_idx")};
    var inputIndices: ${u.type.indices};
    for (var i = 0; i < ${e.length}; i++) {
      if (${u.indicesGet("inputShape","i")} == 1) {
        ${u.indicesSet("inputIndices","i",0)}
      } else {
        ${u.indicesSet("inputIndices","i",a.indicesGet("outputIndices",`i + ${t.length-e.length}`))}
      }
    }
    ${a.setByOffset("global_idx",u.getByIndices("inputIndices"))}
  }`;return{name:"Expand",shaderCache:{hint:`${t}`},getShaderSource:s,getRunData:()=>({outputs:[{dims:t,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}})}},yg=n=>{Kw(n.inputs),n.compute(Xw(n.inputs),{inputs:[0]})}});var Jw,Zw,xg,wg,Tg=P(()=>{"use strict";Ce();it();Fe();Jw=n=>{if(!n||n.length!==2)throw new Error("Gather requires 2 inputs.")},Zw=(n,e)=>{let r=n[0].dims,t=n[1].dims,o=r.length,i=W.normalizeAxis(e.axis,o),u=r.slice(0);u.splice(i,1,...t);let a=r[i],s=W.size(u),l=X("data",n[0].dataType,n[0].dims),c=X("inputIndices",n[1].dataType,n[1].dims),p=ue("output",n[0].dataType,u),h=()=>{let y=t.length,b=`var indicesIndices  = ${c.type.indices}(0);`;for(let w=0;w<y;w++)b+=`${y>1?`indicesIndices[${w}]`:"indicesIndices"} = ${u.length>1?`outputIndices[${i+w}]`:"outputIndices"};`;b+=`
        var idx = ${c.getByIndices("indicesIndices")};
        if (idx < 0) {
          idx = idx + ${a};
        }
        var dataIndices = ${l.type.indices}(0);
      `;for(let w=0,S=0;w<o;w++)w===i?(b+=`${o>1?`dataIndices[${w}]`:"dataIndices"} = u32(idx);`,S+=y):(b+=`${o>1?`dataIndices[${w}]`:"dataIndices"} = ${u.length>1?`outputIndices[${S}]`:"outputIndices"};`,S++);return b},g=y=>`
      ${y.declareVariables(l,c,p)}
      ${y.mainStart()}
        ${y.guardAgainstOutOfBoundsWorkgroupSizes(s)}
        let outputIndices = ${p.offsetToIndices("global_idx")};
        ${h()};
        let value = ${l.getByIndices("dataIndices")};
        ${p.setByOffset("global_idx","value")};
      }`;return{name:"Gather",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:u,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:g}},xg=n=>be({axis:n.axis}),wg=(n,e)=>{let r=n.inputs;Jw(r),n.compute(Zw(n.inputs,e))}});var Qw,e2,$g,Sg,Ig=P(()=>{"use strict";Ce();it();Fe();Qw=n=>{if(!n||n.length!==2)throw new Error("GatherElements requires 2 inputs.");if(n[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(n[0].dims.length!==n[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},e2=(n,e)=>{let r=n[0].dims,t=n[0].dataType,o=r.length,i=W.computeStrides(r),u=W.size(r),a=n[1].dims,s=n[1].dataType,l=W.size(a),c=W.normalizeAxis(e.axis,o),p=r[c],h=a.slice(0),g=W.size(h),y=X("input",t,r),b=X("indices",s,[l]),w=ue("output",t,h),S=O=>`
      const inputStrides = array<u32, ${i.length}>(${i.map(E=>`${E}u`).join(",")});
      ${O.declareVariables(y,b,w)}
      ${O.mainStart()}
      ${O.guardAgainstOutOfBoundsWorkgroupSizes(g)}

      let outputIndices = ${w.offsetToIndices("global_idx")};

      var idx = ${b.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + ${p};
      }

      var srcOffset = u32(0);

      for (var i = 0; i < ${r.length}; i++) {
        if (i == ${c}) {
          srcOffset +=  u32(idx) * inputStrides[i];
        } else {
          srcOffset += ${w.indicesGet("outputIndices","i")} * inputStrides[i];
        }
      }

      // Should never hit this with valid values in indices
      // This is a guard against malicious data in the indices input
      if (srcOffset < 0 || srcOffset >= ${u}) {
        return;
      }

      output[global_idx] = input[srcOffset];
  }`;return{name:"GatherElements",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:h,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(g/64)}}),getShaderSource:S}},$g=n=>be({axis:n.axis}),Sg=(n,e)=>{let r=n.inputs;Qw(r),n.compute(e2(n.inputs,e))}});var t2,r2,n2,_g,Ag,Og=P(()=>{"use strict";Ce();it();Fe();t2=n=>{if(!n)throw new Error("Input is missing");if(n.length<2||n.length>3)throw new Error("Invaid input number.");if(n.length===3&&n[2].dims.length>2)throw new Error("Invalid input shape of C");if(n[0].dataType!==n[1].dataType||n.length===3&&n[0].dataType!==n[2].dataType)throw new Error("Input types are mismatched")},r2=(n,e,r)=>{if(r.length===0)return"0u";let t=r.length===1&&n!==1||r.length===2&&r[0]!==n,o=r[r.length-1]!==e,i="0u";return t||(i+=`+ m * ${r[r.length-1]}u`),o||(i+="+n"),i},n2=(n,e)=>{let r=n[0].dims.slice(),t=n[1].dims.slice(),[o,i,u]=Bi.getShapeOfGemmResult(r,e.transA,t,e.transB,n.length===3?n[2].dims:void 0),a=[o,i];if(!a)throw new Error("Can't use gemm on the given tensors");let s=W.size(a),l="";e.transA&&e.transB?l="value += a[k * M + m] * b[n * K + k];":e.transA&&!e.transB?l="value += a[k * M + m] * b[k * N + n];":!e.transA&&e.transB?l="value += a[m * K + k] * b[n * K + k];":!e.transA&&!e.transB&&(l="value += a[m * K + k] * b[k * N + n];");let c=at(n[0].dataType),p=e.alpha===1?"":"value *= alpha;",h=n.length===3?`value += beta * c[${r2(o,i,n[2].dims)}];`:"",g=[`@group(0) @binding(0) var<storage, read> a : array<${c}>;`,`@group(0) @binding(1) var<storage, read> b : array<${c}>;`];n.length===3&&g.push(`@group(0) @binding(2) var<storage, read> c : array<${c}>;`);let y=b=>`
  const M: u32 = ${o}u;
  const N: u32 = ${i}u;
  const K: u32 = ${u}u;
  const alpha = ${c}(${e.alpha});
  const beta = ${c}(${e.beta});

  ${g.join(`
`)}
  @group(0) @binding(${n.length}) var<storage, read_write> output : array<${c}>;

  ${b.mainStart()}
    ${b.guardAgainstOutOfBoundsWorkgroupSizes(s)}

    let m = global_id.x / N;
    let n = global_id.x % N;

    var value = ${c}(0);
    for (var k: u32 = 0u; k<${u}u; k++) {
      ${l}
    }

    ${p}
    ${h}
    output[global_id.x] = value;

  }`;return{name:"Gemm",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:a,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:y}},_g=(n,e)=>{t2(n.inputs),n.compute(n2(n.inputs,e))},Ag=n=>be(n)});var o2,i2,a2,s2,Eg,Cg,Pg=P(()=>{"use strict";ct();Ce();it();Fe();o2={name:"InstanceNormalization"},i2=(n,e)=>{let r=n[0].dims,t=r,o=2,i=W.sizeToDimension(r,o),u=W.sizeFromDimension(r,o),a=r[1],s=X("x",n[0].dataType,[r[0],r[1],u]),l=X("scale",n[1].dataType,n[1].dims),c=X("bias",n[2].dataType,n[2].dims),p=ue("output",n[0].dataType,[r[0],r[1],u]),h=[s,l,c,p],g=s.type.value,y=64,b=w=>`

  const C: u32 = ${a};
  const normSize: u32 = ${u};
  const epsilon: f32 = ${e.epsilon};
  var<workgroup> meanShared : ${g};
  var<workgroup> squaredNormShared : ${g};
  var<workgroup> workgroupShared : array<${g}, ${y}>;
  const workgroupSize = ${y}u;
  ${w.declareVariables(...h)}
  ${w.mainStart(y)}
    let norm = global_idx / workgroupSize;
    let batch = norm / C;
    let channel = norm % C;
    let localIndex = local_id.x;

    // initialize workgroup memory
    var initial: ${g} = 0;
    for (var h = localIndex; h < normSize; h += workgroupSize) {
      initial = initial + ${s.get("batch","channel","h")};
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the mean of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      meanShared = workgroupShared[0] / ${g}(normSize);
    }
    workgroupBarrier();

    // reinitialize workgroup memory.
    initial = 0;
    for (var h = localIndex; h < normSize; h += workgroupSize) {
      let deviation =  ${s.get("batch","channel","h")} - meanShared;
      initial = initial + deviation * deviation;
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the sum of square of deviation of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      squaredNormShared = workgroupShared[0];
    }
    workgroupBarrier();

    let invStdDev = 1 / sqrt(squaredNormShared / ${g}(normSize) + epsilon);
    let channelScale = invStdDev * ${l.getByOffset("channel")};
    let channelShift = ${c.getByOffset("channel")} - meanShared * channelScale;
    for (var h = localIndex; h < normSize; h += workgroupSize) {
      let value = ${s.get("batch","channel","h")} * channelScale + channelShift;
      ${p.set("batch","channel","h","value")};
    }
  }`;return{...o2,shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:t,dataType:n[0].dataType}],dispatchGroup:{x:i}}),getShaderSource:b}},a2=(n,e,r,t,o,i,u,a)=>{let s=vr(u),l=X("input",e.dataType,e.dims,s),c=X("scale",r.dataType,r.dims,s),p=X("bias",t.dataType,t.dims,s),h=64,g=s===1?"vec2f":`mat2x${s}f`,y=s===1?"f32":`vec${s}f`,b=(z,M)=>`${g}(${z}, ${M})`,w=o*u/s,S=Math.ceil(i/h),O=z=>`
  const H: u32 = ${i};
  const C: u32 = ${u/s};
  const imageSize: u32 = ${i*u/s};

  ${z.declareVariables(l)}
  @group(0) @binding(1) var<storage, read_write> output : array<${g}>;

  ${z.mainStart(h)}
    let currentImageNumber = global_idx / ${h} / C;
    let currentChannelNumber = (global_idx / ${h}) % C;
    let wgId = global_idx % ${h};
    let wgOffset = wgId * ${S};
    if (wgOffset >= H) {
        return;
    }
    let wgMax = min(wgOffset + ${S}, H);

    let offset = currentImageNumber * imageSize + currentChannelNumber;
    var sum = ${Jt("f32",s)};
    var squaredSum = ${Jt("f32",s)};
    for (var i: u32 = wgOffset; i < wgMax; i++) {
        let value = ${y}(input[offset + i * C]);
        sum += value;
        squaredSum += value * value;
    }
    output[global_idx] = ${b("sum","squaredSum")};
  }`,E=n.compute({name:"InstanceNormComputeMean",shaderCache:{hint:JSON.stringify({components:s,n:o,h:i,c:u})},getRunData:()=>({outputs:[{dims:[o,u,h,2],dataType:1}],dispatchGroup:{x:o*u/s}}),getShaderSource:O},{inputs:[e],outputs:[-1]})[0],B=z=>`
  const H: u32 = ${i};
  const C: u32 = ${u/s};
  const imageSize: u32 = ${h*u/s};
  const epsilon: f32 = ${a};

  @group(0) @binding(0) var<storage, read> input : array<${g}>;
  @group(0) @binding(1) var<storage, read> scale : array<${c.type.storage}>;
  @group(0) @binding(2) var<storage, read> bias : array<${p.type.storage}>;
  @group(0) @binding(3) var<storage, read_write> output : array<${g}>;

  ${z.mainStart()}
    ${z.guardAgainstOutOfBoundsWorkgroupSizes(w)}
    let currentImageNumber = global_idx / C;
    let currentChannelNumber = global_idx % C;

    let offset = currentImageNumber * imageSize;
    var sum = ${Jt("f32",s)};
    var squaredSum = ${Jt("f32",s)};
    for (var i: u32 = 0; i < ${h}; i++) {
        let value = input[offset + i + currentChannelNumber * ${h}];
        sum += value[0];
        squaredSum += value[1];
    }
    sum = sum / f32(H);
    squaredSum = squaredSum / f32(H);
    let invStdDev = 1 / sqrt(squaredSum - sum * sum + epsilon);
    let channelScale = invStdDev * ${y}(scale[currentChannelNumber]);
    let channelShift = ${y}(bias[currentChannelNumber]) - sum * channelScale;

    output[global_idx] = ${b("channelScale","channelShift")};
  }`;return n.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:JSON.stringify({components:s,n:o,h:i,c:u,epsilon:a})},getRunData:()=>({outputs:[{dims:[o,u,2],dataType:1}],dispatchGroup:{x:Math.ceil(w/64)}}),getShaderSource:B},{inputs:[E,r,t],outputs:[-1]})[0]},s2=(n,e,r)=>{let t=e[0].dims,o=t,i=t[0],u=t[t.length-1],a=W.sizeFromDimension(t,1)/u,s=vr(u),l=W.size(o)/s,c=X("input",e[0].dataType,e[0].dims,s),p=ue("output",e[0].dataType,o,s),h=at(e[0].dataType),g=s===1?"vec2f":`mat2x${s}f`,y=s===1?h:`vec${s}<${h}>`,b=a2(n,e[0],e[1],e[2],i,a,u,r.epsilon),w=S=>`
  const H: u32 = ${a};
  const C: u32 = ${u/s};

  @group(0) @binding(0) var<storage, read> input : array<${c.type.storage}>;
  @group(0) @binding(1) var<storage, read> scaleInput : array<${g}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${p.type.storage}>;

  ${S.mainStart()}
    let currentImageNumber = global_idx / (C * H);
    let currentChannelNumber = global_idx % C;

    let scaleOffset = currentImageNumber * C + currentChannelNumber;
    let scale = scaleInput[scaleOffset];
    output[global_idx] = fma(input[global_idx], ${y}(scale[0]), ${y}(scale[1]));
  }`;n.compute({name:"InstanceNormalization",shaderCache:{hint:`${r.cacheKey}`},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)}}),getShaderSource:w},{inputs:[e[0],b]})},Eg=n=>be({epsilon:n.epsilon,format:n.format}),Cg=(n,e)=>{e.format==="NHWC"?s2(n,n.inputs,e):n.compute(i2(n.inputs,e))}});var u2,l2,Dg,kg,Bg=P(()=>{"use strict";ct();Ce();it();Fe();u2=n=>{if(!n||n.length<2)throw new Error("layerNorm requires at least 2 inputs.")},l2=(n,e,r)=>{let t=n[0].dims,o=n[1],i=n[2],u=t,a=W.normalizeAxis(e.axis,t.length),s=W.sizeToDimension(t,a),l=W.sizeFromDimension(t,a),c=W.size(o.dims),p=i?W.size(i.dims):0;if(c!==l||i&&p!==l)throw new Error(`Size of X.shape()[axis:] == ${l}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${c} and bias size of ${p}`);let h=[];for(let B=0;B<t.length;++B)B<a?h.push(t[B]):h.push(1);let g=vr(l),y=at(n[0].dataType),b=[X("x",n[0].dataType,n[0].dims,g),X("scale",o.dataType,o.dims,g)];i&&b.push(X("bias",i.dataType,i.dims,g)),b.push(ue("output",n[0].dataType,u,g));let w=r>1,S=r>2;w&&b.push(ue("meanDataOutput",1,h)),S&&b.push(ue("invStdOutput",1,h));let O=B=>`
  const normSize: f32 = ${l};
  const normSizeVectorized: u32 = ${l/g};
  const epsilon: f32 = ${e.epsilon};

  ${B.declareVariables(...b)}
  ${B.mainStart()}
    ${B.guardAgainstOutOfBoundsWorkgroupSizes(s)}
    let offset = global_idx * normSizeVectorized;
    var meanVector = ${Jt("f32",g)};
    var meanSquareVector = ${Jt("f32",g)};

    for (var h: u32 = 0u; h < normSizeVectorized; h++) {
      let value = ${Qr(y,g,"x[h + offset]")};
      meanVector += value;
      meanSquareVector += value * value;
    }
    let mean = ${Dr("meanVector",g)} / normSize;
    let meanSquare = sqrt(${Dr("meanSquareVector",g)} 
      / normSize - mean * mean + epsilon);

    for (var j: u32 = 0; j < normSizeVectorized; j++) {
      let f32input = ${Qr(y,g,"x[j + offset]")};
      let f32scale = ${Qr(y,g,"scale[j]")};
      output[j + offset] = ${b[0].type.value}((f32input - mean) / meanSquare * f32scale
        ${i?`+ ${Qr(y,g,"bias[j]")}`:""}
      );
    }

    ${w?"meanDataOutput[global_idx] = mean":""};
    ${S?"invStdOutput[global_idx] = 1 / meanSquare":""};
  }`,E=[{dims:u,dataType:n[0].dataType}];return w&&E.push({dims:h,dataType:1}),S&&E.push({dims:h,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${e.cacheKey}|${r}|${n.length}`},getRunData:()=>({outputs:E,dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:O}},Dg=n=>be({axis:n.axis,epsilon:n.epsilon}),kg=(n,e)=>{u2(n.inputs),n.compute(l2(n.inputs,e,n.outputCount))}});var c2,Rg,Mg=P(()=>{"use strict";Ce();po();c2=n=>{if(!n||n.length!==2)throw new Error("MatMul requires 2 inputs.");if(n[0].dims[n[0].dims.length-1]!==n[1].dims[n[1].dims.length-2])throw new Error("shared dimension does not match.")},Rg=n=>{c2(n.inputs);let e=lr.calcShape(n.inputs[0].dims,n.inputs[1].dims,!0);if(!e)throw new Error("Can't use matmul on the given tensors");n.compute(ji(n.inputs,{activation:"",activationCacheKey:""},e))}});var d2,f2,p2,h2,m2,g2,b2,y2,v2,Lg,Ng,zg=P(()=>{"use strict";ct();Ce();it();Fe();d2=n=>{if(!n||n.length<1)throw new Error("Too few inputs");if(n[0].dataType!==1)throw new Error("Input type must be float.");if(n.length>=2){let e=n[0].dims.length*2===n[1].dims[0];if(n.length===4&&(e=n[3].dims[0]*2===n[1].dims[0]),!e)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},f2=(n,e,r,t,o,i,u)=>{let a=r.length,s="";for(let l=a-1;l>=0;--l)s+=`
            k = i32(${n.indicesGet("indices",l)}) - ${o[l]};
            if (k < 0) {
              break;
            }
            if (k >= ${r[l]}) {
              break;
            }
            offset += k * ${t[l]};
        `;return`
          value = ${i}(${u});
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${s}
            value = x[offset];
          }
      `},p2=(n,e,r,t,o)=>{let i=r.length,u="";for(let a=i-1;a>=0;--a)u+=`
                k = i32(${n.indicesGet("indices",a)}) - ${o[a]};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = ${2*(r[a]-1)};
                  k = k % _2n_1;
                  if(k >= ${r[a]}) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * ${t[a]};
            `;return`
              var offset = 0;
              var k = 0;
              ${u}
              value = x[offset];
          `},h2=(n,e,r,t,o)=>{let i=r.length,u="";for(let a=i-1;a>=0;--a)u+=`
                k = i32(${n.indicesGet("indices",a)}) - ${o[a]};
                if (k < 0) {
                  k = 0;
                }
                if (k >= ${r[a]}) {
                  k = ${r[a]-1};
                }
                offset += k * ${t[a]};
            `;return`
              var offset = 0;
              var k = 0;
              ${u}
              value = x[offset];
          `},m2=(n,e,r,t,o)=>{let i=r.length,u="";for(let a=i-1;a>=0;--a)u+=`
                k = i32(${n.indicesGet("indices",a)}) - ${o[a]};
                if (k < 0)  {
                  k += ${r[a]};
                }
                if (k >= ${r[a]}) {
                  k -= ${r[a]};
                }
                offset += k * ${t[a]};
            `;return`
              var offset = 0;
              var k = 0;
              ${u}
              value = x[offset];
          `},g2=(n,e,r,t,o,i)=>{switch(o.mode){case 0:return f2(n,e,r,t,o.pads,i,o.value);case 1:return p2(n,e,r,t,o.pads);case 2:return h2(n,e,r,t,o.pads);case 3:return m2(n,e,r,t,o.pads);default:throw new Error("Invalid mode")}},b2=(n,e,r,t)=>{let o=e[0].dims,i=W.padShape(o.slice(),r.pads),u=W.size(i),a=W.computeStrides(o),s=ue("output",e[0].dataType,i),l=X("x",e[0].dataType,o),c=g2(s,i,o,a,r,t);return`
              ${n.declareVariables(l,s)}
              ${n.mainStart()}
              ${n.guardAgainstOutOfBoundsWorkgroupSizes(u)}

              let indices = ${s.offsetToIndices("global_idx")};

              var value = ${t}(0);
              ${c}
              output[global_idx] = value;
          }`},y2=(n,e)=>{let r=W.padShape(n[0].dims.slice(),e.pads);return{name:"Pad",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(W.size(r)/64)}}),getShaderSource:t=>b2(t,n,e,"f32")}},v2=(n,e)=>{if(n.length>1){let r=n[1].getBigInt64Array(),t=n.length>=3&&n[2].data?n[2].getFloat32Array()[0]:0,o=n[0].dims.length,i=new Int32Array(2*o).fill(0);if(n.length>=4){let a=n[3].getBigInt64Array();for(let s=0;s<a.length;s++)i[Number(a[s])]=Number(r[s]),i[Number(a[s])+o]=Number(r[s+a.length])}else r.forEach((a,s)=>i[Number(s)]=Number(a));let u=[];return i.forEach(a=>u.push(a)),be({mode:e.mode,value:t,pads:u})}else return e},Lg=(n,e)=>{d2(n.inputs);let r=v2(n.inputs,e);n.compute(y2(n.inputs,r),{inputs:[0]})},Ng=n=>{let e=n.mode,r=n.value,t=n.pads;return be({mode:e,value:r,pads:t})}});var Yi,Fg,Gg,Wg,Vg,Ug,Hg,jg,qg,Kg,Yg,Xg,Jg,Zg,Qg,eb=P(()=>{"use strict";Ce();it();Fe();Yi=n=>{if(!n||n.length!==1)throw new Error("Pool ops requires 1 input.");if(n[0].dims.length!==4&&n[0].dims.length!==3)throw new Error("Pool ops supports 1-D or 2-D inputs only for now.")},Fg=(n,e,r)=>{let t=e.format==="NHWC",o=n.dims.slice();t&&o.splice(1,0,o.pop());let i=Object.hasOwnProperty.call(e,"dilations"),u=e.kernelShape.slice(),a=e.strides.slice(),s=i?e.dilations.slice():[],l=e.pads.slice();Zr.adjustPoolAttributes(r,o,u,a,s,l);let c=Zr.computePoolOutputShape(r,o,a,s,u,l,e.autoPad),p=Object.assign({},e);i?Object.assign(p,{kernelShape:u,strides:a,pads:l,dilations:s,cacheKey:e.cacheKey}):Object.assign(p,{kernelShape:u,strides:a,pads:l,cacheKey:e.cacheKey});let h=c.slice();return h.push(h.splice(1,1)[0]),[p,t?h:c]},Gg=(n,e,r,t,o,i,u,a)=>{let s=o.format==="NHWC",l=r,c=e.type.value,p=l.length,h=W.size(t),g=ue("output",e.type.tensor,t);if(o.kernelShape.length<=2){let y=o.kernelShape[o.kernelShape.length-1],b=o.strides[o.strides.length-1],w=o.pads[o.pads.length/2-1],S=o.pads[o.pads.length-1],O=p-(s?2:1),E="",B="",z="";if(w+S!==0?E=`
                for (var i: u32 = 0u; i < ${y}u; i++) {
                  xIndices[${O}] = indices[${O}] * ${b} - ${w} + i;
                  if (xIndices[${O}] < 0 || xIndices[${O}] >= ${l[O]}) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`:E=`
                for (var i: u32 = 0u; i < ${y}u; i++) {
                  xIndices[${O}] = indices[${O}] * ${b} - ${w} + i;
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`,o.kernelShape.length===2){let G=o.kernelShape[o.kernelShape.length-2],K=o.strides[o.strides.length-2],Z=o.pads[o.pads.length/2-2],me=o.pads[o.pads.length-2],R=p-(s?3:2),te=l[R];Z+me!==0?B=`
                for (var j: u32 = 0u; j < ${G}u; j++) {
                  xIndices[${R}] = indices[${R}] * ${K} - ${Z} + j;
                  if (xIndices[${R}] < 0 || xIndices[${R}] >= ${te}) {
                    pad+= ${y};
                    continue;
                  }
              `:B=`
                for (var j: u32 = 0u; j < ${G}u; j++) {
                  xIndices[${R}] = indices[${R}] * ${K} - ${Z} + j;
                `,z=`
              }
            `}return`
            ${n.declareVariables(e,g)}

            ${n.mainStart()}
              ${n.guardAgainstOutOfBoundsWorkgroupSizes(h)}

              let indices = ${g.offsetToIndices("global_idx")};
              var xIndices = ${g.offsetToIndices("global_idx")};

              var value: ${c} = ${c}(${a});
              var pad = 0;
              ${B}
              ${E}
              ${z}
              ${u}

              output[global_idx] = value;
            }`}else{if(s)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let y=W.size(o.kernelShape),b=W.computeStrides(o.kernelShape),w=b.length,S=o.pads.length,O=o.pads.reduce((z,M)=>z+M),E="";return O?E=`
                if (xIndices[j] >= inputDims[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${e.indicesToOffset("xIndices")}];
                ${i}
              }`:E=`
              }
              let x_val = x[${e.indicesToOffset("xIndices")}];
              ${i}
            `,`
            ${n.declareVariables(e,g)}

            const pads = array<u32, ${S}>(${o.pads.map(z=>`${z}u`).join(",")});
            const inputDims = array<u32, ${p}>(${l.map(z=>`${z}u`).join(",")});
            const kernelStrides = array<u32, ${w}>(${b.map(z=>`${z}u`).join(",")});
            const strides = array<u32, ${w}>(${o.strides.map(z=>`${z}u`).join(",")});

            ${n.mainStart()}
              ${n.guardAgainstOutOfBoundsWorkgroupSizes(h)}

              let indices = ${g.offsetToIndices("global_idx")};
              let xIndices = ${g.offsetToIndices("global_idx")};

              var offsets: array<u32, ${w}>;

              var value = ${g.type.value}(${a});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < ${y}u; i++) {
                var offset = i;
                for (var j = 0u; j < ${w-1}u; j++) {
                  offsets[j] = offset / kernelStrides[j];
                  offset -= offsets[j] * kernelStrides[j];
                }
                offsets[${w-1}] = offset;

                isPad = false;
                for (var j = ${p-w}u; j < ${p}u; j++) {
                  xIndices[j] = indices[j] * strides[j - ${p-w}u]
                    + offsets[j - ${p-w}u] - pads[j - 2u];
                  ${E}
              }
              ${u}

              output[global_idx] = value;
            }`}},Wg=n=>({format:n.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][n.auto_pad],ceilMode:n.ceil_mode,kernelShape:n.kernel_shape,strides:n.strides,pads:n.pads}),Vg=(n,e,r,t)=>{let[o,i]=Fg(e,t,r),u=W.size(o.kernelShape),a=X("x",e.dataType,e.dims),s=a.type.value,l="value += x_val;",c="";return o.countIncludePad?c+=`value /= ${s}(${u});`:c+=`value /= ${s}(${u} - pad);`,{name:n,shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(W.size(i)/64)}}),getShaderSource:p=>Gg(p,a,e.dims,i,o,l,c,"0.0")}},Ug=n=>{let e=n.count_include_pad!==0,r=Wg(n);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return be({countIncludePad:e,...r})},Hg=(n,e)=>{Yi(n.inputs),n.compute(Vg("AveragePool",n.inputs[0],!1,e))},jg={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},qg=n=>{let e=n.format;return{format:e,...jg,cacheKey:e}},Kg=(n,e)=>{Yi(n.inputs),n.compute(Vg("GlobalAveragePool",n.inputs[0],!0,e))},Yg=(n,e,r,t)=>{let[o,i]=Fg(e,t,r),u=`
      value = max(x_val, value);
    `,a="",s=X("x",e.dataType,e.dims);return{name:n,shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(W.size(i)/64)}}),getShaderSource:l=>Gg(l,s,e.dims,i,o,u,a,"-1e5")}},Xg=(n,e)=>{Yi(n.inputs),n.compute(Yg("MaxPool",n.inputs[0],!1,e))},Jg=n=>{let e=n.storage_order,r=n.dilations,t=Wg(n);if(e!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return be({storageOrder:e,dilations:r,...t})},Zg=n=>{let e=n.format;return{format:e,...jg,cacheKey:e}},Qg=(n,e)=>{Yi(n.inputs),n.compute(Yg("GlobalMaxPool",n.inputs[0],!0,e))}});var w2,T2,tb,rb=P(()=>{"use strict";Ct();ct();Fe();w2=(n,e,r)=>{let t=n===e,o=n<e&&r<0,i=n>e&&r>0;if(t||o||i)throw new Error("Range these inputs' contents are invalid.")},T2=(n,e,r,t)=>{let o=Math.abs(Math.ceil((e-n)/r)),i=[o],u=o,a=ue("output",t,i),s=a.type.storage,l=c=>`
        ${c.declareVariables(a)}
        ${c.mainStart()}
        ${c.guardAgainstOutOfBoundsWorkgroupSizes(u)}
        output[global_idx] = ${s}(${n}) + ${s}(global_idx) * ${s}(${r});
      }`;return{name:"Range",shaderCache:{hint:[n,e,r].map(c=>c.toString()).join("_")},getShaderSource:l,getRunData:()=>({outputs:[{dims:i,dataType:t}],dispatchGroup:{x:Math.ceil(u/64)}})}},tb=n=>{let e=0,r=0,t=0;n.inputs[0].dataType===6?(e=n.inputs[0].getInt32Array()[0],r=n.inputs[1].getInt32Array()[0],t=n.inputs[2].getInt32Array()[0]):n.inputs[0].dataType===1&&(e=n.inputs[0].getFloat32Array()[0],r=n.inputs[1].getFloat32Array()[0],t=n.inputs[2].getFloat32Array()[0]),xe.webgpu.validateInputContent&&w2(e,r,t),n.compute(T2(e,r,t,n.inputs[0].dataType),{inputs:[]})}});var $2,S2,I2,_2,A2,O2,E2,C2,P2,D2,k2,B2,R2,M2,L2,nb,ob,ib=P(()=>{"use strict";Ce();it();Fe();$2=(n,e)=>{if(n.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),n.length>0){if(e.mode==="linear"){if(!(n.length===2||n.length===4&&n[0]===1&&n[1]===1||n.length===4&&n[0]===1&&n[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for linear mode")}else if(e.mode==="cubic"&&!(n.length===2||n.length===4&&n[0]===1&&n[1]===1||n.length===4&&n[0]===1&&n[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},S2=(n,e,r)=>{e.every(o=>o>=0&&o<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let t=new Array(r).fill(1);return e.forEach((o,i)=>t[o]=n[i]),t},I2=(n,e,r,t,o,i)=>{let[u,a,s]=r>10?[1,2,3]:[-1,n.length>1?1:-1,-1],l=n[0].dims.length;if(u>0&&n.length>u&&n[u].dims.length>0)n[u].getFloat32Array().forEach(c=>i.push(c));else if(e.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(a>0&&n.length>a&&n[a].dims.length>0){if(n[a].getFloat32Array().forEach(c=>t.push(c)),t.length!==0&&t.length!==l&&r>=18&&t.length!==e.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");$2(t,e),e.axes.length>0&&S2(t,e.axes,l).forEach((c,p)=>t[p]=c)}if(s>0&&n.length>s&&(n[s].getBigInt64Array().forEach(c=>o.push(Number(c))),o.length!==l||r>=18&&o.length===e.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(e.axes.length>0){if(t.length!==e.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(o.length!==e.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof t<"u"&&typeof o<"u"&&t.length>0&&o.length>l)throw new Error("Resize requires only of scales or sizes to be specified")},_2=n=>"fn getOriginalCoordinateFromResizedCoordinate(xResized: f32, xScale: f32, lengthResized: f32,    lengthOriginal: f32, roiStart: f32, roiEnd: f32) -> f32 { "+(()=>{switch(n){case"asymmetric":return"return xResized / xScale;";case"pytorch_half_pixel":return"if (lengthResized > 1) {                     return (xResized + 0.5) / xScale - 0.5;                   } else {                     return 0.0;                   }";case"tf_half_pixel_for_nn":return"return (xResized + 0.5) / xScale;";case"align_corners":return"if (lengthResized == 1) {                     return 0.0;                   } else {                     return xResized * (lengthOriginal - 1) / (lengthResized - 1);                   }";case"tf_crop_and_resize":return"if (lengthResized > 1) {                     return roiStart * (lengthOriginal - 1) +                           (xResized * (roiEnd - roiStart) * (lengthOriginal - 1)) / (lengthResized - 1);                   } else {                     return 0.5 * (roiStart + roiEnd) * f32(lengthOriginal - 1);                   }";case"half_pixel_symmetric":return["const outputWidth = xScale * lengthResized;","const adjustment = lengthResized / outputWidth;","const center = lengthOriginal / 2;","const offset = center * (1 - adjustment);","return offset + ((xResized + 0.5) / xScale) - 0.5;"].join(`
`);case"half_pixel":return"return ((xResized + 0.5) / xScale) - 0.5;";default:throw new Error(`Coordinate transform mode ${n} is not supported`)}})()+"}",A2=(n,e)=>"fn getNearestPixelFromOriginal(xOriginal: f32, isDownSample: bool) -> f32 {"+(()=>{switch(n){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(e<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${n} is not supported`)}})()+"}",O2=(n,e,r)=>{let t=new Array(r).fill(0).concat(new Array(r).fill(1)),o=n.length===0?t:n.slice();return e.length>0?(e.forEach((i,u)=>{t[i]=o[u],t[u+r]=o[e.length+u]}),t):o},E2=(n,e,r,t)=>{let o=[];if(r.length>0)if(t.length>0){if(n.forEach(i=>o.push(i)),Math.max(...t)>n.length)throw new Error("axes is out of bound");t.forEach((i,u)=>o[i]=r[u])}else r.forEach(i=>o.push(i));else{if(e.length===0)throw new Error("Resize requires either scales or sizes.");o=n.map((i,u)=>Math.round(i*e[u]))}return o},C2=(n,e,r,t)=>{let o=(()=>{switch(t.keepAspectRatioPolicy){case"not_larger":return t.axes.length>0?Math.min(...t.axes.map(u=>r[u]),Number.MAX_VALUE):Math.min(...r,Number.MAX_VALUE);case"not_smaller":return t.axes.length>0?Math.max(...t.axes.map(u=>r[u]),Number.MIN_VALUE):Math.max(...r,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${t.keepAspectRatioPolicy} is not supported`)}})();r.fill(1,0,r.length);let i=n.slice();return t.axes.length>0?(t.axes.forEach(u=>r[u]=o),t.axes.forEach(u=>i[u]=Math.round(n[u]*r[u]))):(r.fill(o,0,r.length),i.forEach((u,a)=>i[a]=Math.round(u*r[a]))),i},P2=(n,e,r,t,o)=>`
    fn calculateOriginalIndicesFromOutputIndices(outputIndices: ${n.type.indices}) -> array<f32, ${r.length}> {
      const inputShape = array<u32, ${e.length}>(${e.map(i=>`${i}u`).join(",")});
      const outputShape = array<u32, ${r.length}>(${r.map(i=>`${i}u`).join(",")});
      const scales = array<f32, ${t.length}>(${t.map(i=>`${i}f`).join(",")});
      const roi = array<f32, ${o.length}>(${o.map(i=>`${i}f`).join(",")});
      var originalIndices: array<f32, ${r.length}>;
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var outputIndex = ${r.length===1?"outputIndices":"outputIndices[i]"};
        if (scales[i] == 1.0) {
          originalIndices[i] = f32(outputIndex);
        } else {
          originalIndices[i] = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],
                f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${e.length}]);
        }
      }
      return originalIndices;
    }`,D2=(n,e,r,t,o,i,u)=>`
    fn calculateInputIndicesFromOutputIndices(outputIndices: ${e.type.indices}) -> ${n.type.indices} {
        const inputShape = array<u32, ${r.length}>(${r.map(a=>`${a}u`).join(",")});
        const outputShape = array<u32, ${t.length}>(${t.map(a=>`${a}u`).join(",")});
        const scales = array<f32, ${o.length}>(${o.map(a=>`${a}f`).join(",")});
        const roi = array<f32, ${i.length}>(${i.map(a=>`${a}f`).join(",")});
        var inputIndices: ${n.type.indices};
        for (var i:u32 = 0; i < ${t.length}; i++) {
          var outputIndex = ${t.length===1?"outputIndices":"outputIndices[i]"};
          var inputIndex: u32;
          if (scales[i] == 1.0) {
            inputIndex = outputIndex;
          } else {
            var original_idx = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],
                    f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${r.length}]);
            if (!${u} || (original_idx >= 0 && original_idx < f32(inputShape[i]))) {
              if (original_idx < 0) {
                inputIndex = 0;
              } else if (original_idx > (f32(inputShape[i]) - 1)) {
                inputIndex = inputShape[i] - 1;
              } else {
                inputIndex = u32(getNearestPixelFromOriginal(original_idx, scales[i] < 1));
              }
            } else {
              inputIndex = u32(original_idx);
            }
          }
          ${n.indicesSet("inputIndices","i","inputIndex")}
        }
        return inputIndices;
    }`,k2=(n,e)=>`
    fn checkInputIndices(inputIndices: ${n.type.indices}) -> bool {
      const inputShape = array<u32, ${e.length}>(${e.map(r=>`${r}u`).join(",")});
      for (var i:u32 = 0; i < ${e.length}; i++) {
        var inputIndex = ${e.length===1?"inputIndices":"inputIndices[i]"};
        if (inputIndex < 0 || inputIndex >= inputShape[i]) {
          return false;
        }
      }
      return true;
    }`,B2=(n,e,r,t,o,i,u)=>{let[a,s,l,c]=r.length===2?[-1,0,1,-1]:o[1]===1?[0,2,3,1]:[0,1,2,3];return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> f32 {
      var inputIndices: ${n.type.indices};
      inputIndices[${s}] = max(0, min(row, ${r[s]} - 1));
      inputIndices[${l}] = max(0, min(col, ${r[l]} - 1));
      if (${r.length} > 2) {
        inputIndices[${c}] = channel;
        inputIndices[${a}] = batch;
      };
      return input[${n.indicesToOffset("inputIndices")}];
    }

    fn bilinearInterpolation(outputIndices: ${e.type.indices}) -> f32 {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(outputIndices);
      var row:f32 = originalIndices[${s}];
      var col:f32 = originalIndices[${l}];
      if (${i} && (row < 0 || row > (${r[s]} - 1) || col < 0 || col > ${r[l]} - 1)) {
        return ${u};
      }
      row = max(0, min(row, ${r[s]} - 1));
      col = max(0, min(col, ${r[l]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = 0;
      var batch: u32 = 0;
      if (${r.length>2}) {
        channel = u32(originalIndices[${c}]);
        batch = u32(originalIndices[${a}]);
      }
      var x11: f32 = getInputValue(batch, channel, row1, col1);
      var x12: f32 = getInputValue(batch, channel, row1, col2);
      var x21: f32 = getInputValue(batch, channel, row2, col1);
      var x22: f32 = getInputValue(batch, channel, row2, col2);
      var dx1: f32 = row - f32(row1);
      var dx2: f32 = f32(row2 ) - row;
      var dy1 = col - f32(col1);
      var dy2 = f32(col2) - col;
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},R2=(n,e,r,t,o,i,u,a,s,l)=>{let[c,p]=r.length===2?[0,1]:o[1]===1?[2,3]:[1,2],h=g=>{let y=g===c?"row":"col";return`
      fn ${y}CubicInterpolation(inputIndices: ${n.type.indices}, outputIndices: ${e.type.indices}) -> f32 {
        var outputIndex = ${t.length===1?"outputIndices":`outputIndices[${g}]`};
        var originalIdx: f32 = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), ${o[g]},
        f32(${t[g]}), f32(${r[g]}), ${i[g]}, ${i[g]} + ${r.length});
        var fractOriginalIdx: f32 = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${a} && (originalIdx < 0 || originalIdx > (${r[g]} - 1))) {
          return ${s};
        }
        var data: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${y}: f32 = originalIdx + f32(i);
          if (${y} < 0 || ${y} >= ${r[g]}) {
            if (${l}) {
              coefs[i + 1] = 0.0;
              continue;
            } else if (${a}) {
              return ${s};
            } else {
              ${y} = max(0, min(${y}, ${r[g]} - 1));
            }
          }
          var inputIndicesCopy: ${n.type.indices} = inputIndices;
          inputIndicesCopy[${g}] = u32(${y});
          data[i + 1] = ${g===c?`input[${n.indicesToOffset("inputIndicesCopy")}];`:`
                                               rowCubicInterpolation(inputIndicesCopy, outputIndices);`}
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${h(c)};
    ${h(p)};
  fn getCubicInterpolationCoefs(s: f32) -> array<f32, 4> {
    var absS = abs(s);
    var coeffs: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: f32 = 1.0 - absS;
    var twoMinusAbsS: f32 = 2.0 - absS;
    var onePlusAbsS: f32 = 1.0 + absS;
    coeffs[0] = ((${u} * onePlusAbsS - 5 * ${u}) * onePlusAbsS + 8 * ${u}) * onePlusAbsS - 4 * ${u};
    coeffs[1] = ((${u} + 2) * absS - (${u} + 3)) * absS * absS + 1;
    coeffs[2] = ((${u} + 2) * oneMinusAbsS - (${u} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${u} * twoMinusAbsS - 5 * ${u}) * twoMinusAbsS + 8 * ${u}) * twoMinusAbsS - 4 * ${u};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<f32, 4>, coefs: array<f32, 4>) -> f32 {
    var coefsSum: f32 = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(outputIndices: ${e.type.indices}) -> f32 {
    var inputIndices: ${n.type.indices} = outputIndices;
    return colCubicInterpolation(inputIndices, outputIndices);
  }
    `},M2=(n,e,r,t,o,i)=>{let u=n.dims,a=O2(i,e.axes,u.length),s=E2(u,t,o,e.axes),l=t.slice();t.length===0&&(l=u.map((w,S)=>w===0?1:s[S]/w),e.keepAspectRatioPolicy!=="stretch"&&(s=C2(u,s,l,e)));let c=ue("output",n.dataType,s),p=X("input",n.dataType,u),h=W.size(s),g=u.length===s.length&&u.every((w,S)=>w===s[S]),y=e.coordinateTransformMode==="tf_crop_and_resize",b=w=>`
      ${_2(e.coordinateTransformMode)};
      ${(()=>{switch(e.mode){case"nearest":return`
              ${k2(p,u)};
              ${A2(e.nearestMode,r)};
              ${D2(p,c,u,s,l,a,y)};
              `;case"linear":return`
              ${P2(c,u,s,l,a)};
              ${B2(p,c,u,s,l,y,e.extrapolationValue)};
              `;case"cubic":return`
            ${R2(p,c,u,s,l,a,e.cubicCoeffA,y,e.extrapolationValue,e.excludeOutside)};
            `;default:throw Error("Invalid resize mode")}})()};
      ${w.declareVariables(p,c)}
      ${w.mainStart()}
        ${w.guardAgainstOutOfBoundsWorkgroupSizes(h)}
        if (${g}) {
          output[global_idx] = input[global_idx];
        } else {
          let outputIndices = ${c.offsetToIndices("global_idx")};
          var inputIndices: ${p.type.indices};
          ${(()=>{switch(e.mode){case"nearest":return`inputIndices = calculateInputIndicesFromOutputIndices(outputIndices);
                  if (checkInputIndices(inputIndices)) {
                    output[global_idx] = input[${p.indicesToOffset("inputIndices")}];
                  } else {
                    output[global_idx] = ${e.extrapolationValue};
                  }`;case"linear":return"output[global_idx] = bilinearInterpolation(outputIndices);";case"cubic":return"output[global_idx] = bicubicInterpolation(outputIndices);";default:throw Error(`Unsupported resize mode: ${e.mode}`)}})()};
        }
      }`;return{name:"Resize",shaderCache:{hint:`${e.cacheKey}|${r}|${l.length>0?l:""}|${o.length>0?o:""}`},getShaderSource:b,getRunData:()=>({outputs:[{dims:s,dataType:n.dataType}],dispatchGroup:{x:Math.ceil(h/64)}})}},L2=n=>{let e=n.customDataBuffer;return new Uint32Array(e,e.byteOffset,1)[0]},nb=(n,e)=>{let r=[],t=[],o=[],i=L2(n);I2(n.inputs,e,i,r,t,o),n.compute(M2(n.inputs[0],e,i,r,t,o),{inputs:[0]})},ob=n=>{let e=n.antialias,r=n.axes,t=n.coordinateTransformMode,o=n.cubicCoeffA,i=n.excludeOutside!==0,u=n.extrapolationValue,a=n.keepAspectRatioPolicy,s=n.mode,l=n.nearestMode===""?"simple":n.nearestMode;return be({antialias:e,axes:r,coordinateTransformMode:t,cubicCoeffA:o,excludeOutside:i,extrapolationValue:u,keepAspectRatioPolicy:a,mode:s,nearestMode:l})}});var N2,z2,ab,sb,ub=P(()=>{"use strict";ct();Ce();it();Fe();N2=n=>{if(!n||n.length<3)throw new Error("layerNorm requires at least 3 inputs.");let e=n[0],r=n[1],t=n[2];if(e.dataType!==r.dataType||e.dataType!==t.dataType)throw new Error("All inputs must have the same data type");if(e.dims.length!==3&&e.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let o=e.dims[e.dims.length-1],i=e.dims[e.dims.length-2];if(r.dims[r.dims.length-1]!==o)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==i)throw new Error("Skip must have the same sequence length as input");if(t.dims.length!==1)throw new Error("Gamma must be 1D");if(t.dims[t.dims.length-1]!==o)throw new Error("Gamma must have the same hidden size as input");if(n.length>3){let u=n[3];if(u.dims.length!==1)throw new Error("Beta must be 1D");if(u.dims[u.dims.length-1]!==o)throw new Error("Beta must have the same hidden size as input")}if(n.length>4){let u=n[4];if(u.dims.length!==1)throw new Error("Bias must be 1D");if(u.dims[u.dims.length-1]!==o)throw new Error("Bias must have the same hidden size as input")}},z2=(n,e,r,t)=>{let o=n[0].dims,i=W.size(o),u=o,a=i,s=o.slice(-1)[0],l=t?o.slice(0,-1).concat(1):[],c=n.length>3,p=n.length>4,h=t&&r>1,g=t&&r>2,y=r>3,b=vr(s),w=[X("x",n[0].dataType,n[0].dims,b),X("skip",n[1].dataType,n[1].dims,b),X("gamma",n[2].dataType,n[2].dims,b)];c&&w.push(X("beta",n[3].dataType,n[3].dims,b)),p&&w.push(X("bias",n[4].dataType,n[4].dims,b)),w.push(ue("output",n[0].dataType,u,b)),h&&w.push(ue("meanOutput",1,l)),g&&w.push(ue("invStdOutput",1,l)),y&&w.push(ue("inputSkipBiasSum",n[0].dataType,u,b));let S=at(n[0].dataType),O=B=>`
      const hiddenSize: f32 = ${s};
      const hiddenSizeVectorized: u32 = ${s/b};
      const epsilon: f32 = ${e.epsilon};

      ${B.declareVariables(...w)}

      ${B.mainStart()}
        ${B.guardAgainstOutOfBoundsWorkgroupSizes(a/s)}
        let offset = global_idx * hiddenSizeVectorized;
        var sum = ${Jt("f32",b)};
        var squareSum = ${Jt("f32",b)};
        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {
          let skipValue = skip[offset + i];
          let biasValue = ${p?"bias[i]":"0.0"};
          let inputValue = x[offset + i];
          let value = inputValue + skipValue + biasValue;
          ${y?"inputSkipBiasSum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32Value = ${Qr(S,b,"value")};
          sum += f32Value;
          squareSum += f32Value * f32Value;
        }
        let mean = ${Dr("sum",b)} / hiddenSize;
        let variance = sqrt(${Dr("squareSum",b)} / hiddenSize - mean * mean + epsilon);
        ${h?"meanOutput[global_idx] = mean;":""}
        ${g?"invStdOutput[global_idx] = 1.0 / variance;":""}
        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {
          output[offset + i] = (output[offset + i] - ${S}(mean)) / ${S}(variance) * gamma[i]
           + ${c?"beta[i]":"0.0"};
        }
      }`,E=[{dims:u,dataType:n[0].dataType}];return r>1&&E.push({dims:l,dataType:1}),r>2&&E.push({dims:l,dataType:1}),r>3&&E.push({dims:o,dataType:n[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:e.cacheKey},getShaderSource:O,getRunData:()=>({outputs:E,dispatchGroup:{x:Math.ceil(a/s/64)}})}},ab=(n,e)=>{N2(n.inputs);let t=[0];n.outputCount>1&&t.push(-3),n.outputCount>2&&t.push(-3),n.outputCount>3&&t.push(3),n.compute(z2(n.inputs,e,n.outputCount,!1),{outputs:t})},sb=n=>{let e=n.epsilon;return be({epsilon:e})}});var F2,Xi,G2,lb,W2,V2,cb,db,fb=P(()=>{"use strict";ct();Ce();it();Fe();F2=(n,e)=>{if(!n||n.length<1)throw new Error("too few inputs");if(e.axes.length!==0){if(e.axes.length!==e.starts.length||e.axes.length!==e.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(e.starts.length!==e.ends.length)throw new Error("starts and ends must have the same length");n.slice(1).forEach((r,t)=>{if(n[t+1].dataType!==6&&n[t+1].dataType!==7)throw new Error(`Input ${t} must be an array of int32 or int64`)})},Xi=(n,e)=>{let r=[];if(n.length>e)if(n[e].dataType===7)n[e].getBigInt64Array().forEach(t=>r.push(Number(t)));else if(n[e].dataType===6)n[e].getInt32Array().forEach(t=>r.push(Number(t)));else throw new Error(`Input ${e} must be an array of int32 or int64`);return r},G2=(n,e)=>{if(n.length>1){let r=Xi(n,1),t=Xi(n,2),o=Xi(n,3);return o.length===0&&(o=[...Array(n[0].dims.length).keys()]),be({starts:r,ends:t,axes:o})}else return e},lb=(n,e,r,t,o)=>{let i=n;return n<0&&(i+=r[t[e]]),o[e]<0?Math.max(0,Math.min(i,r[t[e]]-1)):Math.max(0,Math.min(i,r[t[e]]))},W2=(n,e,r,t)=>`fn calculateInputIndices(outputIndices: ${e.type.indices}) -> ${n.type.indices} {
          var inputIndices: ${n.type.indices};
          var carry = 0u;
          for (var i = ${r.length}; i >= 0; i--) {
            var outputIndex = ${t.length===1?"outputIndices":"outputIndices[i]"};
            var inputIndex = outputIndex * steps[i] + starts[i] + carry;
            carry = inputIndex / inputShape[i];
            inputIndex = inputIndex % inputShape[i];
            if (signs[i] < 0) {
              inputIndex = inputShape[i] - inputIndex - 1u + starts[i];
            }
            ${r.length===1?"inputIndices":"inputIndices[i]"} = inputIndex;
          }
          return inputIndices;
      }`,V2=(n,e)=>{let r=n[0].dims,t=W.size(r),o=e.axes.length>0?W.normalizeAxes(e.axes,r.length):[...Array(r.length).keys()],i=Xi(n,4);i.forEach(b=>b!==0||(()=>{throw new Error("step cannot be 0")})),i.length===0&&(i=Array(o.length).fill(1));let u=e.starts.map((b,w)=>lb(b,w,r,o,i)),a=e.ends.map((b,w)=>lb(b,w,r,o,i));if(o.length!==r.length)for(let b=0;b<r.length;++b)o.includes(b)||(u.splice(b,0,0),a.splice(b,0,r[b]),i.splice(b,0,1));let s=i.map(b=>Math.sign(b));i.forEach((b,w,S)=>{if(b<0){let O=(a[w]-u[w])/b,E=u[w],B=E+O*i[w];u[w]=B,a[w]=E,S[w]=-b}});let l=r.slice(0);o.forEach((b,w)=>{l[b]=Math.ceil((a[b]-u[b])/i[b])});let c={dims:l,dataType:n[0].dataType},p=ue("output",n[0].dataType,l),h=X("input",n[0].dataType,r),g=W.size(l),y=b=>`
      ${b.declareVariables(h,p)}
        const signs = array<i32, ${s.length}>(${s.map(w=>`${w}i`).join(",")});
        const starts = array<u32, ${u.length}>(${u.map(w=>`${w}u`).join(",")});
        const ends = array<u32, ${a.length}>(${a.map(w=>`${w}u`).join(",")});
        const steps = array<u32, ${i.length}>(${i.map(w=>`${w}u`).join(",")});
        const inputShape = array<u32, ${r.length}>(${r.map(w=>`${w}u`).join(",")});

        ${W2(h,p,r,l)}
        ${b.mainStart()}
          ${b.guardAgainstOutOfBoundsWorkgroupSizes(g)}
          let outputIndices = ${p.offsetToIndices("global_idx")};
          let inputIndices = calculateInputIndices(outputIndices);
          ${p.setByOffset("global_idx",h.getByIndices("inputIndices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${e.cacheKey}|${n[4]?.dims??""}`},getShaderSource:y,getRunData:()=>({outputs:[c],dispatchGroup:{x:Math.ceil(t/64)}})}},cb=(n,e)=>{F2(n.inputs,e);let r=G2(n.inputs,e);n.compute(V2(n.inputs,r),{inputs:[0]})},db=n=>{let e=n.starts,r=n.ends,t=n.axes;return be({starts:e,ends:r,axes:t})}});var U2,H2,pb,hb,mb=P(()=>{"use strict";Ce();it();Fe();U2=n=>{if(!n||n.length!==1)throw new Error("Softmax op requires 1 input.")},H2=(n,e)=>{let r=at(n.dataType),t=n.dims,o=W.size(t),i=64,u=e.axis;if(u<0&&(u=t.length+u),u<t.length-1)throw new Error("softmax only supports last axis for now.");let a=t[u],s=o/a,l=vr(a),c=a/l,p=l===1?r:`vec${l}<${r}>`,h=(b,w)=>w===4?`max(max(${b}.x, ${b}.y), max(${b}.z, ${b}.w))`:w===2?`max(${b}.x, ${b}.y)`:w===3?`max(max(${b}.x, ${b}.y), ${b}.z)`:b,g=r==="f32"?`var threadMax = ${p}(-3.402823e+38f);`:`var threadMax = ${p}(-65504.0h);`;return{name:"Softmax",getRunData:()=>({outputs:[{dims:t,dataType:n.dataType}],dispatchGroup:{x:s}}),getShaderSource:b=>`
      var<workgroup> rowMaxShared : ${p};
      var<workgroup> rowSumShared : ${p};
      var<workgroup> threadShared : array<${p}, ${i}>;

      @group(0) @binding(0) var<storage, read> x : array<${p}>;
      @group(0) @binding(1) var<storage, read_write> result : array<${p}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${p} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${p}) {
        let index = row * row_stride + col;
        result[index] = value;
      }

      @compute @workgroup_size(${i}, 1, 1)
      fn main(@builtin(local_invocation_id) local_id : vec3<u32>, @builtin(global_invocation_id) global_id : vec3u) {
        let gindex = i32(global_id.x);
        let lindex = i32(local_id.x);
        const wg = ${i};
        let row = gindex / wg;
        let cols = ${c};
        let row_stride : i32 = ${c};

        // find the rows max
        ${g}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${p}(${h("threadShared[0]",l)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${p}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${p}(${Dr("threadShared[0]",l)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`}},pb=(n,e)=>{U2(n.inputs),n.compute(H2(n.inputs[0],e))},hb=n=>be({axis:n.axis})});var j2,q2,K2,Y2,X2,gb,bb,yb=P(()=>{"use strict";Ce();it();Fe();j2=n=>{if(!n||n.length<1)throw new Error("too few inputs")},q2=(n,e)=>{let r=[],t=e.numOutputs;return n[1].dims[0]>0&&(n[1].getBigInt64Array().forEach(o=>r.push(Number(o))),t=r.length),be({numOutputs:t,axis:e.axis,splitSizes:r})},K2=n=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${n}u; i += 1u ) {
    if (index < sizeInConcatAxis[i]) {
        return i;
    }
    }
    return ${n}u;
}`,Y2=n=>{let e=n.length,r=[];for(let t=0;t<e;++t){let o=n[t].setByIndices("indices","input[global_idx]");e===1?r.push(o):t===0?r.push(`if (outputNumber == ${t}u) { ${o} }`):t===e-1?r.push(`else { ${o} }`):r.push(`else if (outputNumber == ${t}) { ${o} }`)}return`
      fn writeBufferData(outputNumber: u32, indices: ${n[0].type.indices}, global_idx: u32) {
        ${r.join(`
`)}
      }`},X2=(n,e)=>{let r=n[0].dims,t=W.size(r),o=n[0].dataType,i=r.length,u=e.axis,a=u<0?r.length+u:u,s=new Array(e.numOutputs),l=X("input",o,r),c=new Array(e.numOutputs),p=[],h=[],g=0;for(let w=0;w<e.numOutputs;w++){g+=e.splitSizes[w],c[w]=g;let S=r.slice();S[e.axis]=e.splitSizes[w],h.push(S),s[w]=ue(`output${w}`,o,h[w]),p.push({dims:h[w],dataType:n[0].dataType})}let y=i<2?"indices":`indices[${a}]`,b=w=>`
  ${w.declareVariables(l,...s)}
  const sizeInConcatAxis = array<u32, ${c.length}>(${c.map(S=>`${S}u`).join(",")});
  ${K2(c.length)}
  ${Y2(s)}

  ${w.mainStart()}
    ${w.guardAgainstOutOfBoundsWorkgroupSizes(t)}

    var indices = ${l.offsetToIndices("global_idx")};
    let outputNumber = calculateOutputIndex(${y});
    if (outputNumber != 0) {
        ${y} -= sizeInConcatAxis[outputNumber - 1u];
    }
    writeBufferData(outputNumber, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:e.cacheKey},getShaderSource:b,getRunData:()=>({outputs:p,dispatchGroup:{x:Math.ceil(t/64)}})}},gb=(n,e)=>{j2(n.inputs);let r=n.inputs.length===1?e:q2(n.inputs,e);n.compute(X2(n.inputs,r),{inputs:[0]})},bb=n=>{let e=n.axis,r=n.splitSizes,t=n.numOutputs<0?r.length:n.numOutputs;if(t!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return be({axis:e,numOutputs:t,splitSizes:r})}});var vb,J2,Z2,Q2,xb,wb=P(()=>{"use strict";ct();Ce();Fe();vb=n=>Array.from(n.getBigInt64Array(),Number),J2=n=>{if(!n||n.length!==2)throw new Error("Tile requires 2 inputs.");if(n[0].dataType!==1&&n[0].dataType!==6&&n[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(n[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(n[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(vb(n[1]).length!==n[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Z2=(n,e)=>{let r=[];for(let t=0;t<n.length;++t)r.push(n[t]*e[t]);return r},Q2=n=>{let e=n[0].dims,r=vb(n[1]),t=Z2(e,r),o=W.size(t),i=n[0].dataType,u=X("input",i,e),a=ue("output",i,t),s=l=>`
      const inputShape = ${u.indices(...e)};
      ${l.declareVariables(u,a)}
      ${l.mainStart()}
      ${l.guardAgainstOutOfBoundsWorkgroupSizes(o)}
      let outputIndices = ${a.offsetToIndices("global_idx")};
      var inputIndices: ${u.type.indices};
      for (var i = 0; i < ${e.length}; i++) {
        let inputDimValue = ${a.indicesGet("outputIndices","i")}  % ${u.indicesGet("inputShape","i")};

        ${u.indicesSet("inputIndices","i","inputDimValue")}
      }
      ${a.setByOffset("global_idx",u.getByIndices("inputIndices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${r}`},getRunData:()=>({outputs:[{dims:t,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:s}},xb=n=>{J2(n.inputs),n.compute(Q2(n.inputs),{inputs:[0]})}});var e1,t1,Tb,$b=P(()=>{"use strict";ct();Ce();Fe();e1=(n,e,r,t,o)=>{let i=W.size(r),u=Math.ceil(i/4),a=ue("outputData",o,r,4),s=X("aData",e[1].dataType,e[1].dims,4),l=X("bData",e[2].dataType,e[2].dims,4),c=X("cData",e[0].dataType,e[0].dims,4),p,h=(g,y,b)=>`select(${y}, ${g}, ${b})`;if(!t)p=a.setByOffset("global_idx",h(s.getByOffset("global_idx"),l.getByOffset("global_idx"),c.getByOffset("global_idx")));else{let g=(y,b,w="")=>{let S=`aData[indexA${b}][componentA${b}]`,O=`bData[indexB${b}][componentB${b}]`,E=`bool(cData[indexC${b}] & ${4278190080>>>(3-b)*8}u)`;return`
            let outputIndices${b} = ${a.offsetToIndices(`global_idx * 4u + ${b}u`)};
            let offsetA${b} = ${s.broadcastedIndicesToOffset(`outputIndices${b}`,a)};
            let offsetB${b} = ${l.broadcastedIndicesToOffset(`outputIndices${b}`,a)};
            let offsetC${b} = ${c.broadcastedIndicesToOffset(`outputIndices${b}`,a)};
            let indexA${b} = offsetA${b} / 4u;
            let indexB${b} = offsetB${b} / 4u;
            let indexC${b} = offsetC${b} / 4u;
            let componentA${b} = offsetA${b} % 4u;
            let componentB${b} = offsetB${b} % 4u;
            ${y}[${b}] = ${w}(${h(S,O,E)});
          `};o===9?p=`
            var data = vec4<u32>(0);
            ${g("data",0,"u32")}
            ${g("data",1,"u32")}
            ${g("data",2,"u32")}
            ${g("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:p=`
            ${g("outputData[global_idx]",0)}
            ${g("outputData[global_idx]",1)}
            ${g("outputData[global_idx]",2)}
            ${g("outputData[global_idx]",3)}
          `}return`
        ${n.declareVariables(c,s,l,a)}
        ${n.mainStart()}
        ${n.guardAgainstOutOfBoundsWorkgroupSizes(u)}
        ${p}
      }`},t1=n=>{let e=n[1].dims,r=n[2].dims,t=n[0].dims,o=n[1].dataType,i=!(W.areEqual(e,r)&&W.areEqual(r,t)),u=e,a=W.size(e);if(i){let s=lr.calcShape(lr.calcShape(e,r,!1),t,!1);if(!s)throw new Error("Can't perform where op on the given tensors");u=s,a=W.size(u)}return{name:"Where",getShaderSource:s=>e1(s,n,u,i,o),getRunData:()=>({outputs:[{dims:u,dataType:o}],dispatchGroup:{x:Math.ceil(a/64/4)}})}},Tb=n=>{n.compute(t1(n.inputs))}});var Sb,Ib=P(()=>{"use strict";tm();nm();Mm();qm();Xm();Vs();fg();gg();vg();Tg();Ig();Og();Pg();Bg();Mg();zg();eb();rb();Ms();ib();ub();fb();mb();yb();wb();qi();zs();$b();Sb=new Map([["Abs",[om]],["Acos",[im]],["Acosh",[am]],["Add",[Lm]],["ArgMax",[em,Ls]],["ArgMin",[Qh,Ls]],["Asin",[sm]],["Asinh",[um]],["Atan",[lm]],["Atanh",[cm]],["AveragePool",[Hg,Ug]],["BiasAdd",[rm]],["BiasSplitGelu",[Rm]],["Cast",[fm,dm]],["Ceil",[hm]],["ClipV10",[Ns]],["Clip",[pm]],["Concat",[Km,Ym]],["Conv",[Hs,Us]],["ConvTranspose",[dg,cg]],["Cos",[mm]],["Cosh",[gm]],["Div",[Nm]],["Einsum",[hg,mg]],["Elu",[bm,Ni]],["Equal",[zm]],["Erf",[ym]],["Exp",[vm]],["Expand",[yg]],["Floor",[xm]],["FusedConv",[Hs,Us]],["Gather",[wg,xg]],["GatherElements",[Sg,$g]],["Gelu",[wm]],["Gemm",[_g,Ag]],["GlobalAveragePool",[Kg,qg]],["GlobalMaxPool",[Qg,Zg]],["Greater",[Vm]],["GreaterOrEqual",[Hm]],["InstanceNormalization",[Cg,Eg]],["LayerNormalization",[kg,Dg]],["LeakyRelu",[Tm,Ni]],["Less",[Um]],["LessOrEqual",[jm]],["Log",[Bm]],["MatMul",[Rg]],["MaxPool",[Xg,Jg]],["Mul",[Fm]],["Neg",[Sm]],["Not",[$m]],["Pad",[Lg,Ng]],["Pow",[Gm]],["Range",[tb]],["Reciprocal",[Im]],["ReduceMin",[qh,Zt]],["ReduceMean",[jh,Zt]],["ReduceMax",[Hh,Zt]],["ReduceSum",[Yh,Zt]],["ReduceProd",[Kh,Zt]],["ReduceL1",[Wh,Zt]],["ReduceL2",[Vh,Zt]],["ReduceLogSum",[Gh,Zt]],["ReduceLogSumExp",[Uh,Zt]],["ReduceSumSquare",[Xh,Zt]],["Relu",[_m]],["Resize",[nb,ob]],["Sigmoid",[Am]],["Sin",[Om]],["Sinh",[Em]],["Slice",[cb,db]],["SkipLayerNormalization",[ab,sb]],["Split",[gb,bb]],["Sqrt",[Cm]],["Softmax",[pb,hb]],["Sub",[Wm]],["Tan",[Pm]],["Tanh",[Dm]],["ThresholdedRelu",[km,Ni]],["Tile",[xb]],["Transpose",[rg,ng]],["Where",[Tb]]])});var Ji,_b=P(()=>{"use strict";ct();Pr();Fe();Ji=class{constructor(e){this.backend=e;this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,r){this.repo.set(e,r)}run(e,r,t,o,i,u,a){let s=this.backend.device,l=this.backend.getComputePassEncoder();l.setPipeline(e.computePipeline);let c=[];for(let h of o)c.push({binding:c.length,resource:{buffer:h.buffer}});for(let h of i)c.push({binding:c.length,resource:{buffer:h.buffer}});a&&c.push({binding:c.length,resource:a});let p=s.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:c,label:e.programInfo.name});if(l.setBindGroup(0,p),l.dispatchWorkgroups(...u),this.backend.pendingDispatchNumber++,this.backend.isQueryEnabled()){typeof this.backend.queryData>"u"&&(this.backend.queryData=this.backend.gpuDataManager.create(this.backend.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE));let h=this.backend.gpuDataManager.create(this.backend.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.backend.endComputePass(),this.backend.getCommandEncoder().resolveQuerySet(this.backend.querySet,0,2,this.backend.queryData.buffer,0),this.backend.getCommandEncoder().copyBufferToBuffer(this.backend.queryData.buffer,0,h.buffer,0,this.backend.querySetCount*8),this.backend.flush();let g=this.backend.currentKernelId,y=this.backend.kernels.get(g),b=`[${y[0]}] ${y[1]}`;h.buffer.mapAsync(GPUMapMode.READ).then(()=>{let w=new BigUint64Array(h.buffer.getMappedRange()),S=w[0],O=w[1];h.buffer.unmap(),typeof this.backend.queryTimeBase>"u"&&(this.backend.queryTimeBase=S);let E=Number(S-this.backend.queryTimeBase),B=Number(O-this.backend.queryTimeBase);if(!Number.isSafeInteger(E)||!Number.isSafeInteger(B))throw new RangeError("incorrect timestamp range");this.backend.gpuDataManager.release(h.id);let z="";r.forEach((G,K)=>{z+=`input[${K}]: [${G.dims}] | ${ao(G.dataType)}, `});let M="";t.forEach((G,K)=>{M+=`output[${K}]: [${G.dims}] | ${ao(G.dataType)}, `}),console.log(`[profiling] kernel "${g}|${b}" ${z}${M}execution time: ${B-E} ns`)})}this.backend.pendingDispatchNumber>=16&&this.backend.flush()}dispose(){}build(e,r){let t=this.backend.device,o=[];t.features.has("shader-f16")&&o.push("enable f16;");let i=zh(r),u=e.getShaderSource(i),a=`${o.join(`
`)}
${i.additionalImplementations}
${u}`,s=t.createShaderModule({code:a,label:e.name});Qe("verbose",()=>`[WebGPU] shader code: ${a}`);let l=t.createComputePipeline({compute:{module:s,entryPoint:"main"},layout:"auto",label:e.name});return{programInfo:e,computePipeline:l}}normalizeDispatchGroupSize(e){let r=typeof e=="number"?e:e.x,t=typeof e=="number"?1:e.y||1,o=typeof e=="number"?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=i&&t<=i&&o<=i)return[r,t,o];let u=r*t*o,a=Math.ceil(Math.sqrt(u));if(a>i){if(a=Math.ceil(Math.cbrt(u)),a>i)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[a,a,a]}else return[a,a,1]}}});var r1,n1,Zi,Ab=P(()=>{"use strict";Pr();Dh();Mh();Ib();_b();r1=(n,e)=>{if(e.length!==n.length)throw new Error(`inputDependencies length ${e.length} is not equal to inputTensors length ${n.length}.`);let r=[];for(let t=0;t<n.length;++t){let o=n[t].dataType;switch(e[t]){case"none":{r.push("");break}case"type":{r.push(`${o}`);break}case"rank":{let i=n[t].dims.length;r.push(`${o};${i}`);break}case"dims":{let i=n[t].dims.join(",");r.push(`${o};${i}`);break}default:throw new Error(`unsupported input dependency: ${e[t]}`)}}return r.join("|")},n1=(n,e)=>{let r=n.name;return n.shaderCache?.hint&&(r+="["+n.shaderCache.hint+"]"),r+=`:${r1(e,n.shaderCache?.inputDependencies??new Array(e.length).fill("dims"))}`,r},Zi=class{constructor(){this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.pendingDispatchNumber=0;this.querySetCount=2;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e){if(!navigator.gpu)throw new Error("WebGpuBackend: WebGPU is not available.");let r=await navigator.gpu.requestAdapter();if(!r)throw new Error("WebGpuBackend: Failed to get GPU adapter.");this.env=e;let t=[],o={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:t};r.features.has("timestamp-query")&&t.push("timestamp-query"),r.features.has("shader-f16")&&t.push("shader-f16"),this.device=await r.requestDevice(o),this.gpuDataManager=Rh(this),this.programManager=new Ji(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Ch(e.logLevel,!!e.debug),this.device.onuncapturederror=i=>{i.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${i.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device})}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e={};this.isQueryEnabled()&&(typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),e.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1}),this.computePassEncoder=this.getCommandEncoder().beginComputePass(e)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){this.commandEncoder&&(this.endComputePass(),this.device.queue.submit([this.getCommandEncoder().finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0)}isQueryEnabled(){return!!(this.device.features.has("timestamp-query")&&this.env.webgpu.profilingMode==="default")}run(e,r,t,o,i){let u=[];for(let S=0;S<r.length;++S){let O=this.gpuDataManager.get(r[S].data);if(!O)throw new Error(`no GPU data for input: ${r[S].data}`);u[S]=O}let a=n1(e,r),s=this.programManager.getArtifact(a),{outputs:l,dispatchGroup:c,programUniforms:p}=e.getRunData(r),h=t.length===0?l.map((S,O)=>O):t;if(h.length!==l.length)throw new Error(`Output size ${h.length} must be equal to ${l.length}.`);let g=[],y=[];for(let S=0;S<l.length;++S){if(!Number.isInteger(h[S])||h[S]<-3||h[S]>=l.length)throw new Error(`Invalid output index: ${h[S]}`);if(h[S]===-3)continue;let O=h[S]===-1,E=h[S]===-2,B=O||E?i(l[S].dataType,l[S].dims):o(h[S],l[S].dataType,l[S].dims),z=this.gpuDataManager.get(B.data);if(!z)throw new Error(`no GPU data for output: ${B.data}`);if(O&&this.temporaryData.push(z),E){let M=this.kernelPersistentData.get(this.currentKernelId);M||(M=[],this.kernelPersistentData.set(this.currentKernelId,M)),M.push(z)}g.push(B),y.push(z)}let b;if(p){let S=0,O=0,E=[],B=1;p.forEach(G=>{let K=typeof G.data=="number"?[G.data]:G.data,Z;switch(K.length){case 1:Z=4;break;case 2:Z=8;break;case 3:Z=16;break;case 4:Z=16;break;case 5:Z=16;break;case 6:Z=16;break;default:throw new Error(`unsupported data length: ${K.length}`)}(O===5||O===6)&&(Z=16),Z>B&&(B=Z),S=Math.ceil(S/Z)*Z,O=K.length,E.push(S),S+=K.length*4}),S=Math.ceil(S/B)*B;let z=new ArrayBuffer(S);p.forEach((G,K)=>{let Z=E[K],me=typeof G.data=="number"?[G.data]:G.data;G.type==="int32"?new Int32Array(z,Z,me.length).set(me):G.type==="uint32"?new Uint32Array(z,Z,me.length).set(me):new Float32Array(z,Z,me.length).set(me)});let M=this.gpuDataManager.create(S,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(M.buffer,0,z,0,S),this.gpuDataManager.release(M.id),b={offset:0,size:S,buffer:M.buffer}}let w=this.programManager.normalizeDispatchGroupSize(c);return s||(s=this.programManager.build(e,w),this.programManager.setArtifact(a,s)),Qe("info",()=>`[ProgramManager] run "${e.name}" (key=${a}) with ${w[0]}x${w[1]}x${w[2]}`),this.programManager.run(s,r,g,u,y,w,b),g}upload(e,r){this.gpuDataManager.upload(e,r)}memcpy(e,r){this.gpuDataManager.memcpy(e,r)}async download(e,r){await this.gpuDataManager.download(e,r)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,r,t,o){let i=Sb.get(e);if(!i)throw new Error(`kernel not implemented: ${e}`);this.kernels.set(r,[e,o,i[0],[i[1],t]])}releaseKernel(e){let r=this.kernelPersistentData.get(e);if(r){for(let t of r)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,r,t){let o=this.kernels.get(e);if(!o)throw new Error(`kernel not created: ${e}`);let[i,u,a,s]=o;if(this.currentKernelId!==null)throw new Error(`kernel "[${i}] ${u}" is not allowed to be called recursively`);this.currentKernelId=e,s[0]&&(s[1]=s[0](s[1]),s[0]=void 0),Qe("info",()=>`[WebGPU] Start to run kernel "[${i}] ${u}"...`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),a(r,s[1]),0}catch(c){return t.push(Promise.resolve(`[WebGPU] Kernel "[${i}] ${u}" failed. ${c}`)),1}finally{l&&t.push(this.device.popErrorScope().then(c=>c?`GPU validation error for kernel "[${i}] ${u}": ${c.message}`:null));for(let c of this.temporaryData)this.gpuDataManager.release(c.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,r,t,o){let i=this.sessionExternalDataMapping.get(e);i||(i=new Map,this.sessionExternalDataMapping.set(e,i));let u=i.get(r),a=this.gpuDataManager.registerExternalBuffer(t,o,u?.[1]);return i.set(r,[a,t]),a}unregisterBuffers(e){let r=this.sessionExternalDataMapping.get(e);r&&(r.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[1])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let r=this.gpuDataManager.get(e);if(!r)throw new Error(`no GPU data for buffer: ${e}`);return r.buffer}createDownloader(e,r,t){return async()=>{let o=await Cs(this,e,r);return Ph(o.buffer,t)}}}});var Ob={};Nr(Ob,{init:()=>o1});var ho,Xs,o1,Eb=P(()=>{"use strict";ct();Ab();Pr();Ce();ho=class n{constructor(e,r,t,o){this.module=e;this.dataType=r;this.data=t;this.dims=o}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let e=W.size(this.dims);return e===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let e=W.size(this.dims);return e===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let e=W.size(this.dims);return e===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}reshape(e){if(W.size(e)!==W.size(this.dims))throw new Error("Invalid new shape");return new n(this.module,this.dataType,this.data,e)}},Xs=class{constructor(e,r,t){this.module=e;this.backend=r;this.customDataOffset=0;this.customDataSize=0;let o=e.HEAPU32,i=t>>2;this.opKernelContext=o[i++];let u=o[i++];this.outputCount=o[i++],this.customDataOffset=o[i++],this.customDataSize=o[i++];let a=[];for(let s=0;s<u;s++){let l=o[i++],c=o[i++],p=o[i++],h=[];for(let g=0;g<p;g++)h.push(o[i++]);a.push(new ho(e,l,c,h))}this.inputs=a}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,r){let t=r?.inputs?.map(a=>typeof a=="number"?this.inputs[a]:a)??this.inputs,o=r?.outputs??[],i=(a,s,l)=>new ho(this.module,s,this.output(a,l),l),u=(a,s)=>{let l=so(a);if(!l)throw new Error(`Unsupported data type: ${a}`);let c=l*W.size(s);return new ho(this.module,a,this.backend.gpuDataManager.create(c).id,s)};return this.backend.run(e,t,o,i,u)}output(e,r){let t=this.module.stackSave();try{let o=this.module.stackAlloc((1+r.length)*4),i=o>>2;this.module.HEAPU32[i++]=r.length;for(let u=0;u<r.length;u++)this.module.HEAPU32[i++]=r[u];return this.module._JsepOutput(this.opKernelContext,e,o)}catch(o){throw new Error(`Failed to generate kernel's output[${e}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${o}`)}finally{this.module.stackRestore(t)}}},o1=async(n,e)=>{let r=n.jsepInit;if(r&&navigator.gpu){if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using WebGPU EP");let t=new Zi;await t.initialize(e),r(t,o=>t.alloc(o),o=>t.free(o),(o,i,u,a=!1)=>{if(a)Qe("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${o}, dst=${i}, size=${u}`),t.memcpy(o,i);else{Qe("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${o}, gpuDataId=${i}, size=${u}`);let s=n.HEAPU8.subarray(o,o+u);t.upload(i,s)}},async(o,i,u)=>{Qe("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${o}, dataOffset=${i}, size=${u}`),await t.download(o,()=>n.HEAPU8.subarray(i,i+u))},(o,i,u)=>t.createKernel(o,i,u,e.debug||e.webgpu.profilingMode==="default"?n.UTF8ToString(n._JsepGetNodeName(i)):`${i}`),o=>t.releaseKernel(o),(o,i,u,a)=>{Qe("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${u}, kernel=${o}, contextDataOffset=${i}`);let s=new Xs(n,t,i);return t.computeKernel(o,s,a)})}}});var Pb,i1,a1,Db,mo,kb,Js,Zs,Bb,Rb,Cb,Mb,Lb,Nb,zb=P(()=>{"use strict";Ih();Ah();ct();$n();Ci();Pb=!1,i1=n=>{let e=ot(),r=e.stackSave();try{let t=e.stackAlloc(8);return e._OrtGetInputOutputCount(n,t,t+4)!==0&&Ye("Can't get session input/output count."),[e.HEAP32[t/4],e.HEAP32[t/4+1]]}finally{e.stackRestore(r)}},a1=(n,e)=>{ot()._OrtInit(n,e)!==0&&Ye("Can't initialize onnxruntime.")},Db=async n=>{a1(n.wasm.numThreads,uo(n.logLevel));{let e=(Eb(),Sr(Ob)).init;await e(ot(),n)}Pb=!0},mo=new Map,kb=()=>Pb,Js=n=>{let e=ot(),r=e._malloc(n.byteLength);if(r===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${n.byteLength}.`);return e.HEAPU8.set(n,r),[r,n.byteLength]},Zs=(n,e)=>{let r=ot(),t=0,o=0,i=0,u=[],a=[],s=[];try{[o,u]=_h(e),t=r._OrtCreateSession(n[0],n[1],o),t===0&&Ye("Can't create a session.");let[l,c]=i1(t),p=[],h=[],g=[];for(let b=0;b<l;b++){let w=r._OrtGetInputName(t,b);w===0&&Ye("Can't get an input name."),a.push(w),p.push(r.UTF8ToString(w))}for(let b=0;b<c;b++){let w=r._OrtGetOutputName(t,b);w===0&&Ye("Can't get an output name."),s.push(w);let S=r.UTF8ToString(w);h.push(S);{let O=typeof e?.preferredOutputLocation=="string"?e.preferredOutputLocation:e?.preferredOutputLocation?.[S]??"cpu";if(O!=="cpu"&&O!=="cpu-pinned"&&O!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${O}.`);g.push(O)}}let y=null;return g.some(b=>b==="gpu-buffer")&&(i=r._OrtCreateBinding(t),i===0&&Ye("Can't create IO binding."),y={handle:i,outputPreferredLocations:g,outputPreferredLocationsEncoded:g.map(b=>Os(b))}),mo.set(t,[t,a,s,y]),[t,p,h]}catch(l){throw a.forEach(c=>r._OrtFree(c)),s.forEach(c=>r._OrtFree(c)),i!==0&&r._OrtReleaseBinding(i),t!==0&&r._OrtReleaseSession(t),l}finally{r._free(n[0]),o!==0&&r._OrtReleaseSessionOptions(o),u.forEach(l=>r._free(l))}},Bb=(n,e)=>{let r=Js(n);return Zs(r,e)},Rb=n=>{let e=ot(),r=mo.get(n);if(!r)throw new Error(`cannot release session. invalid session id: ${n}`);let[t,o,i,u]=r;u&&e._OrtReleaseBinding(u.handle),e.jsepUnregisterBuffers?.(n),o.forEach(a=>e._OrtFree(a)),i.forEach(a=>e._OrtFree(a)),e._OrtReleaseSession(t),mo.delete(n)},Cb=(n,e,r,t,o)=>{if(!n){e.push(0);return}let i=ot(),u=n[0],a=n[1],s=n[3],l,c;if(u==="string"&&s==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(s==="gpu-buffer"){let g=n[2].gpuBuffer,y=so(As(u));c=a.reduce((b,w)=>b*w,1)*y,l=i.jsepRegisterBuffer(t,o,g,c)}else{let g=n[2];if(Array.isArray(g)){c=4*g.length,l=i._malloc(c),r.push(l);let y=l/4;for(let b=0;b<g.length;b++){if(typeof g[b]!="string")throw new TypeError(`tensor data at index ${b} is not a string`);i.HEAPU32[y++]=lt(g[b],r)}}else c=g.byteLength,l=i._malloc(c),r.push(l),i.HEAPU8.set(new Uint8Array(g.buffer,g.byteOffset,c),l)}let p=i.stackSave(),h=i.stackAlloc(4*a.length);try{let g=h/4;a.forEach(b=>i.HEAP32[g++]=b);let y=i._OrtCreateTensor(As(u),l,c,h,a.length,Os(s));y===0&&Ye(`Can't create tensor for input/output. session=${t}, index=${o}.`),e.push(y)}finally{i.stackRestore(p)}},Mb=async(n,e,r,t,o,i)=>{let u=ot(),a=mo.get(n);if(!a)throw new Error(`cannot run inference. invalid session id: ${n}`);let[s,l,c,p]=a,h=e.length,g=t.length,y=0,b=[],w=[],S=[],O=[],E=u.stackSave(),B=u.stackAlloc(h*4),z=u.stackAlloc(h*4),M=u.stackAlloc(g*4),G=u.stackAlloc(g*4);try{[y,b]=Sh(i);for(let ge=0;ge<h;ge++)Cb(r[ge],w,O,n,e[ge]);for(let ge=0;ge<g;ge++)Cb(o[ge],S,O,n,h+t[ge]);let K=B/4,Z=z/4,me=M/4,R=G/4;for(let ge=0;ge<h;ge++)u.HEAPU32[K++]=w[ge],u.HEAPU32[Z++]=l[e[ge]];for(let ge=0;ge<g;ge++)u.HEAPU32[me++]=S[ge],u.HEAPU32[R++]=c[t[ge]];if(p){let{handle:ge,outputPreferredLocations:Ne,outputPreferredLocationsEncoded:ee}=p;if(l.length!==h)throw new Error(`input count from feeds (${h}) is expected to be always equal to model's input count (${l.length}).`);for(let Ue=0;Ue<h;Ue++){let st=e[Ue];await u._OrtBindInput(ge,l[st],w[Ue])!==0&&Ye(`Can't bind input[${Ue}] for session=${n}.`)}for(let Ue=0;Ue<g;Ue++){let st=t[Ue];o[Ue]?.[3]?u._OrtBindOutput(ge,c[st],S[Ue],0)!==0&&Ye(`Can't bind pre-allocated output[${Ue}] for session=${n}.`):u._OrtBindOutput(ge,c[st],0,ee[st])!==0&&Ye(`Can't bind output[${Ue}] to ${Ne[Ue]} for session=${n}.`)}}let te;p?te=await u._OrtRunWithBinding(s,p.handle,g,M,y):te=await u._OrtRun(s,z,B,h,G,g,M,y),te!==0&&Ye("failed to call OrtRun().");let Ve=[];for(let ge=0;ge<g;ge++){let Ne=u.HEAPU32[M/4+ge];if(Ne===S[ge]){Ve.push(o[ge]);continue}let ee=u.stackSave(),Ue=u.stackAlloc(4*4),st=!1,We,Xe=0;try{u._OrtGetTensorData(Ne,Ue,Ue+4,Ue+8,Ue+12)!==0&&Ye(`Can't access output tensor data on index ${ge}.`);let yt=Ue/4,pr=u.HEAPU32[yt++];Xe=u.HEAPU32[yt++];let H=u.HEAPU32[yt++],$e=u.HEAPU32[yt++],Ie=[];for(let et=0;et<$e;et++)Ie.push(u.HEAPU32[H/4+et]);u._OrtFree(H);let gt=Ie.reduce((et,Ze)=>et*Ze,1);We=ao(pr);let vt=p?.outputPreferredLocations[t[ge]];if(We==="string"){if(vt==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let et=[],Ze=Xe/4;for(let Ft=0;Ft<gt;Ft++){let Gt=u.HEAPU32[Ze++],At=Ft===gt-1?void 0:u.HEAPU32[Ze]-Gt;et.push(u.UTF8ToString(Gt,At))}Ve.push([We,Ie,et,"cpu"])}else if(vt==="gpu-buffer"&&gt>0){let et=u.jsepGetBuffer(Xe),Ze=so(pr);if(Ze===void 0||!Di(We))throw new Error(`Unsupported data type: ${We}`);st=!0,Ve.push([We,Ie,{gpuBuffer:et,download:u.jsepCreateDownloader(et,gt*Ze,We),dispose:()=>{u._OrtReleaseTensor(Ne)}},"gpu-buffer"])}else{let et=Pi(We),Ze=new et(gt);new Uint8Array(Ze.buffer,Ze.byteOffset,Ze.byteLength).set(u.HEAPU8.subarray(Xe,Xe+Ze.byteLength)),Ve.push([We,Ie,Ze,"cpu"])}}finally{u.stackRestore(ee),We==="string"&&Xe&&u._free(Xe),st||u._OrtReleaseTensor(Ne)}}return p&&u._OrtClearBoundOutputs(p.handle),Ve}finally{u.stackRestore(E),w.forEach(K=>u._OrtReleaseTensor(K)),S.forEach(K=>u._OrtReleaseTensor(K)),O.forEach(K=>u._free(K)),y!==0&&u._OrtReleaseRunOptions(y),b.forEach(K=>u._free(K))}},Lb=n=>{let e=ot(),r=mo.get(n);if(!r)throw new Error("invalid session id");let t=r[0],o=e._OrtEndProfiling(t);o===0&&Ye("Can't get an profile file name."),e._OrtFree(o)},Nb=n=>{let e=[];for(let r of n){let t=r[2];!Array.isArray(t)&&"buffer"in t&&e.push(t.buffer)}return e}});var Fb=He((iB,u1)=>{u1.exports='/*!\n * ONNX Runtime Web v1.17.0\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n"use strict";(()=>{var Qr=Object.defineProperty;var lu=Object.getOwnPropertyDescriptor;var cu=Object.getOwnPropertyNames;var du=Object.prototype.hasOwnProperty;var j=(e,t)=>()=>(e&&(t=e(e=0)),t);var Yt=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),xr=(e,t)=>{for(var r in t)Qr(e,r,{get:t[r],enumerable:!0})},pu=(e,t,r,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of cu(t))!du.call(e,n)&&n!==r&&Qr(e,n,{get:()=>t[n],enumerable:!(i=lu(t,n))||i.enumerable});return e};var Et=e=>pu(Qr({},"__esModule",{value:!0}),e);var en={};xr(en,{readFile:()=>fu});var fu,tn=j(()=>{fu=void 0});var rn={};xr(rn,{join:()=>mu});var mu,nn=j(()=>{mu=void 0});var ao=Yt((oo,on)=>{"use strict";var no=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){var r=t,i,n;r.ready=new Promise((l,p)=>{i=l,n=p}),r.jsepInit=(l,p,h,S,T,U,H,L)=>{r.Za=l,r.Oa=p,r.Qa=h,r.Ja=S,r.Pa=T,r.ra=U,r.Ra=H,r.Sa=L,p=(X,J,Q)=>(...de)=>{let me=Ne,O=J?.();de=X(...de);let se=J?.();return O!==se&&(X=se,Q(O),J=Q=null),Ne!=me?dr():de},h=X=>async(...J)=>{try{if(r.Da)throw Error("Session already started");let Q=r.Da={Ta:J[0],errors:[]},de=await X(...J);if(r.Da!==Q)throw Error("Session mismatch");l.flush();let me=Q.errors;if(0<me.length){let O=await Promise.all(me);if(O=O.filter(se=>se),0<O.length)throw Error(O.join(`\n`))}return de}finally{r.Da=null}},r._OrtRun=h(p(r._OrtRun,()=>r._OrtRun,X=>r._OrtRun=X)),r._OrtRunWithBinding=h(p(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,X=>r._OrtRunWithBinding=X)),r._OrtBindInput=p(r._OrtBindInput,()=>r._OrtBindInput,X=>r._OrtBindInput=X),r.jsepRegisterBuffer=(X,J,Q,de)=>l.registerBuffer(X,J,Q,de),r.jsepUnregisterBuffers=X=>{l.unregisterBuffers(X)},r.jsepGetBuffer=X=>l.getBuffer(X),r.jsepCreateDownloader=(X,J,Q)=>l.createDownloader(X,J,Q)};var s=Object.assign({},r),u="./this.program",c=(l,p)=>{throw p},o=typeof window=="object",m=typeof importScripts=="function",g=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",x="",b,w,$;if(g){var y=(tn(),Et(en)),C=(nn(),Et(rn));x=m?C.dirname(x)+"/":__dirname+"/",b=(l,p)=>(l=l.startsWith("file://")?new URL(l):C.normalize(l),y.readFileSync(l,p?void 0:"utf8")),$=l=>(l=b(l,!0),l.buffer||(l=new Uint8Array(l)),l),w=(l,p,h,S=!0)=>{l=l.startsWith("file://")?new URL(l):C.normalize(l),y.readFile(l,S?void 0:"utf8",(T,U)=>{T?h(T):p(S?U.buffer:U)})},!r.thisProgram&&1<process.argv.length&&(u=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),c=(l,p)=>{throw process.exitCode=l,p},r.inspect=()=>"[Emscripten Module object]"}else(o||m)&&(m?x=self.location.href:typeof document<"u"&&document.currentScript&&(x=document.currentScript.src),e&&(x=e),x.indexOf("blob:")!==0?x=x.substr(0,x.replace(/[?#].*/,"").lastIndexOf("/")+1):x="",b=l=>{var p=new XMLHttpRequest;return p.open("GET",l,!1),p.send(null),p.responseText},m&&($=l=>{var p=new XMLHttpRequest;return p.open("GET",l,!1),p.responseType="arraybuffer",p.send(null),new Uint8Array(p.response)}),w=(l,p,h)=>{var S=new XMLHttpRequest;S.open("GET",l,!0),S.responseType="arraybuffer",S.onload=()=>{S.status==200||S.status==0&&S.response?p(S.response):h()},S.onerror=h,S.send(null)});var A=r.print||console.log.bind(console),P=r.printErr||console.error.bind(console);Object.assign(r,s),s=null,r.thisProgram&&(u=r.thisProgram),r.quit&&(c=r.quit);var W;r.wasmBinary&&(W=r.wasmBinary);var B=r.noExitRuntime||!0;typeof WebAssembly!="object"&&Ge("no native wasm support detected");var D,_,z=!1,N,Y,le,M,q,Ce;function ae(){var l=D.buffer;r.HEAP8=Y=new Int8Array(l),r.HEAP16=new Int16Array(l),r.HEAP32=M=new Int32Array(l),r.HEAPU8=le=new Uint8Array(l),r.HEAPU16=new Uint16Array(l),r.HEAPU32=q=new Uint32Array(l),r.HEAPF32=new Float32Array(l),r.HEAPF64=Ce=new Float64Array(l)}var we=[],K=[],Se=[];function Be(){var l=r.preRun.shift();we.unshift(l)}var xe=0,Ie=null,Ze=null;function Ge(l){throw r.onAbort&&r.onAbort(l),l="Aborted("+l+")",P(l),z=!0,N=1,l=new WebAssembly.RuntimeError(l+". Build with -sASSERTIONS for more info."),n(l),l}function it(l){return l.startsWith("data:application/octet-stream;base64,")}var V;if(V="ort-wasm-simd.wasm",!it(V)){var ce=V;V=r.locateFile?r.locateFile(ce,x):x+ce}function pe(l){if(l==V&&W)return new Uint8Array(W);if($)return $(l);throw"both async and sync fetching of the wasm failed"}function ze(l){if(!W&&(o||m)){if(typeof fetch=="function"&&!l.startsWith("file://"))return fetch(l,{credentials:"same-origin"}).then(p=>{if(!p.ok)throw"failed to load wasm binary file at \'"+l+"\'";return p.arrayBuffer()}).catch(()=>pe(l));if(w)return new Promise((p,h)=>{w(l,S=>p(new Uint8Array(S)),h)})}return Promise.resolve().then(()=>pe(l))}function Ve(l,p,h){return ze(l).then(S=>WebAssembly.instantiate(S,p)).then(S=>S).then(h,S=>{P("failed to asynchronously prepare wasm: "+S),Ge(S)})}function Ee(l,p){var h=V;return W||typeof WebAssembly.instantiateStreaming!="function"||it(h)||h.startsWith("file://")||g||typeof fetch!="function"?Ve(h,l,p):fetch(h,{credentials:"same-origin"}).then(S=>WebAssembly.instantiateStreaming(S,l).then(p,function(T){return P("wasm streaming compile failed: "+T),P("falling back to ArrayBuffer instantiation"),Ve(h,l,p)}))}var Te,He={915152:l=>{r.ra("Abs",l,void 0)},915203:l=>{r.ra("Neg",l,void 0)},915254:l=>{r.ra("Floor",l,void 0)},915307:l=>{r.ra("Ceil",l,void 0)},915359:l=>{r.ra("Reciprocal",l,void 0)},915417:l=>{r.ra("Sqrt",l,void 0)},915469:l=>{r.ra("Exp",l,void 0)},915520:l=>{r.ra("Erf",l,void 0)},915571:l=>{r.ra("Sigmoid",l,void 0)},915626:l=>{r.ra("Log",l,void 0)},915677:l=>{r.ra("Sin",l,void 0)},915728:l=>{r.ra("Cos",l,void 0)},915779:l=>{r.ra("Tan",l,void 0)},915830:l=>{r.ra("Asin",l,void 0)},915882:l=>{r.ra("Acos",l,void 0)},915934:l=>{r.ra("Atan",l,void 0)},915986:l=>{r.ra("Sinh",l,void 0)},916038:l=>{r.ra("Cosh",l,void 0)},916090:l=>{r.ra("Asinh",l,void 0)},916143:l=>{r.ra("Acosh",l,void 0)},916196:l=>{r.ra("Atanh",l,void 0)},916249:l=>{r.ra("Tanh",l,void 0)},916301:l=>{r.ra("Not",l,void 0)},916352:(l,p,h)=>{r.ra("ClipV10",l,{min:p,max:h})},916424:l=>{r.ra("Clip",l,void 0)},916476:(l,p)=>{r.ra("Elu",l,{alpha:p})},916534:l=>{r.ra("Relu",l,void 0)},916586:(l,p)=>{r.ra("LeakyRelu",l,{alpha:p})},916650:(l,p)=>{r.ra("ThresholdedRelu",l,{alpha:p})},916720:(l,p)=>{r.ra("Cast",l,{to:p})},916778:l=>{r.ra("Add",l,void 0)},916829:l=>{r.ra("Sub",l,void 0)},916880:l=>{r.ra("Mul",l,void 0)},916931:l=>{r.ra("Div",l,void 0)},916982:l=>{r.ra("Pow",l,void 0)},917033:l=>{r.ra("Equal",l,void 0)},917086:l=>{r.ra("Greater",l,void 0)},917141:l=>{r.ra("GreaterOrEqual",l,void 0)},917203:l=>{r.ra("Less",l,void 0)},917255:l=>{r.ra("LessOrEqual",l,void 0)},917314:(l,p,h,S,T)=>{r.ra("ReduceMean",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:S?Array.from(M.subarray(T>>>0,T+S>>>0)):[]})},917478:(l,p,h,S,T)=>{r.ra("ReduceMax",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:S?Array.from(M.subarray(T>>>0,T+S>>>0)):[]})},917641:(l,p,h,S,T)=>{r.ra("ReduceMin",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:S?Array.from(M.subarray(T>>>0,T+S>>>0)):[]})},917804:(l,p,h,S,T)=>{r.ra("ReduceProd",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:S?Array.from(M.subarray(T>>>0,T+S>>>0)):[]})},917968:(l,p,h,S,T)=>{r.ra("ReduceSum",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:S?Array.from(M.subarray(T>>>0,T+S>>>0)):[]})},918131:(l,p,h,S,T)=>{r.ra("ReduceL1",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:S?Array.from(M.subarray(T>>>0,T+S>>>0)):[]})},918293:(l,p,h,S,T)=>{r.ra("ReduceL2",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:S?Array.from(M.subarray(T>>>0,T+S>>>0)):[]})},918455:(l,p,h,S,T)=>{r.ra("ReduceLogSum",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:S?Array.from(M.subarray(T>>>0,T+S>>>0)):[]})},918621:(l,p,h,S,T)=>{r.ra("ReduceSumSquare",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:S?Array.from(M.subarray(T>>>0,T+S>>>0)):[]})},918790:(l,p,h,S,T)=>{r.ra("ReduceLogSumExp",l,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:S?Array.from(M.subarray(T>>>0,T+S>>>0)):[]})},918959:l=>{r.ra("Where",l,void 0)},919012:(l,p,h)=>{r.ra("Transpose",l,{perm:p?Array.from(M.subarray(h>>>0,h+p>>>0)):[]})},919125:(l,p,h,S,T,U,H,L,X,J)=>{r.ra("Conv",l,{format:X?"NHWC":"NCHW",auto_pad:p,dilations:[h],group:S,kernel_shape:[T],pads:[U,H],strides:[L],w_is_const:()=>!!Y[J>>>0]})},919353:(l,p,h,S,T,U,H,L,X,J,Q,de,me,O,se)=>{r.ra("Conv",l,{format:O?"NHWC":"NCHW",auto_pad:p,dilations:[h,S],group:T,kernel_shape:[U,H],pads:[L,X,J,Q],strides:[de,me],w_is_const:()=>!!Y[se>>>0]})},919612:(l,p,h,S,T,U,H,L,X,J)=>{r.ra("Conv",l,{format:X?"NHWC":"NCHW",auto_pad:p,dilations:[h],group:S,kernel_shape:[T],pads:[U,H],strides:[L],w_is_const:()=>!!Y[J>>>0]})},919840:(l,p,h,S,T,U,H,L,X,J,Q,de,me,O,se)=>{r.ra("Conv",l,{format:O?"NHWC":"NCHW",auto_pad:p,dilations:[h,S],group:T,kernel_shape:[U,H],pads:[L,X,J,Q],strides:[de,me],w_is_const:()=>!!Y[se>>>0]})},920099:(l,p,h,S,T,U,H,L,X,J,Q,de,me,O)=>{r.ra("ConvTranspose",l,{format:X?"NHWC":"NCHW",autoPad:p,dilations:[h],group:S,kernel_shape:[T],pads:[U,H],strides:[L],wIsConst:()=>!!Y[J>>>0],outputPadding:Q?Array.from(M.subarray(de>>>0,de+Q>>>0)):[],outputShape:me?Array.from(M.subarray(O>>>0,O+me>>>0)):[]})},920479:(l,p,h,S,T,U,H,L,X,J,Q,de,me)=>{r.ra("ConvTranspose",l,{format:L?"NHWC":"NCHW",autoPad:p,dilations:Array.from(M.subarray(h>>>0,h+2>>>0)),group:S,kernelShape:Array.from(M.subarray(T>>>0,T+2>>>0)),pads:Array.from(M.subarray(U>>>0,U+4>>>0)),strides:Array.from(M.subarray(H>>>0,H+2>>>0)),wIsConst:()=>!!Y[X>>>0],outputPadding:0<J?Array.from(M.subarray(Q>>>0,Q+J>>>0)):[],outputShape:0<de?Array.from(M.subarray(me>>>0,me+de>>>0)):[]})},921002:(l,p,h,S,T,U,H,L,X,J,Q,de,me,O)=>{r.ra("ConvTranspose",l,{format:X?"NHWC":"NCHW",autoPad:p,dilations:[h],group:S,kernel_shape:[T],pads:[U,H],strides:[L],wIsConst:()=>!!Y[J>>>0],outputPadding:Q?Array.from(M.subarray(de>>>0,de+Q>>>0)):[],outputShape:me?Array.from(M.subarray(O>>>0,O+me>>>0)):[]})},921382:(l,p,h,S,T,U,H,L,X,J,Q,de,me)=>{r.ra("ConvTranspose",l,{format:L?"NHWC":"NCHW",autoPad:p,dilations:Array.from(M.subarray(h>>>0,h+2>>>0)),group:S,kernelShape:Array.from(M.subarray(T>>>0,T+2>>>0)),pads:Array.from(M.subarray(U>>>0,U+4>>>0)),strides:Array.from(M.subarray(H>>>0,H+2>>>0)),wIsConst:()=>!!Y[X>>>0],outputPadding:0<J?Array.from(M.subarray(Q>>>0,Q+J>>>0)):[],outputShape:0<de?Array.from(M.subarray(me>>>0,me+de>>>0)):[]})},921905:(l,p)=>{r.ra("GlobalAveragePool",l,{format:p?"NHWC":"NCHW"})},921996:(l,p,h,S,T,U,H,L,X,J,Q,de,me,O,se,ge)=>{r.ra("AveragePool",l,{format:ge?"NHWC":"NCHW",auto_pad:p,ceil_mode:h,count_include_pad:S,storage_order:T,dilations:[U,H],kernel_shape:[L,X],pads:[J,Q,de,me],strides:[O,se]})},922280:(l,p)=>{r.ra("GlobalAveragePool",l,{format:p?"NHWC":"NCHW"})},922371:(l,p,h,S,T,U,H,L,X,J,Q,de,me,O,se,ge)=>{r.ra("AveragePool",l,{format:ge?"NHWC":"NCHW",auto_pad:p,ceil_mode:h,count_include_pad:S,storage_order:T,dilations:[U,H],kernel_shape:[L,X],pads:[J,Q,de,me],strides:[O,se]})},922655:(l,p)=>{r.ra("GlobalMaxPool",l,{format:p?"NHWC":"NCHW"})},922742:(l,p,h,S,T,U,H,L,X,J,Q,de,me,O,se,ge)=>{r.ra("MaxPool",l,{format:ge?"NHWC":"NCHW",auto_pad:p,ceil_mode:h,count_include_pad:S,storage_order:T,dilations:[U,H],kernel_shape:[L,X],pads:[J,Q,de,me],strides:[O,se]})},923022:(l,p)=>{r.ra("GlobalMaxPool",l,{format:p?"NHWC":"NCHW"})},923109:(l,p,h,S,T,U,H,L,X,J,Q,de,me,O,se,ge)=>{r.ra("MaxPool",l,{format:ge?"NHWC":"NCHW",auto_pad:p,ceil_mode:h,count_include_pad:S,storage_order:T,dilations:[U,H],kernel_shape:[L,X],pads:[J,Q,de,me],strides:[O,se]})},923389:(l,p,h,S,T)=>{r.ra("Gemm",l,{alpha:p,beta:h,transA:S,transB:T})},923493:l=>{r.ra("MatMul",l,void 0)},923547:(l,p,h,S)=>{r.ra("ArgMax",l,{keepDims:!!p,selectLastIndex:!!h,axis:S})},923655:(l,p,h,S)=>{r.ra("ArgMin",l,{keepDims:!!p,selectLastIndex:!!h,axis:S})},923763:(l,p)=>{r.ra("Softmax",l,{axis:p})},923826:(l,p)=>{r.ra("Concat",l,{axis:p})},923886:(l,p,h,S,T)=>{r.ra("Split",l,{axis:p,numOutputs:h,splitSizes:S?Array.from(M.subarray(T>>>0,T+S>>>0)):[]})},924031:l=>{r.ra("Expand",l,void 0)},924085:(l,p)=>{r.ra("Gather",l,{axis:Number(p)})},924156:(l,p)=>{r.ra("GatherElements",l,{axis:Number(p)})},924235:(l,p,h,S,T,U,H,L,X,J,Q)=>{r.ra("Resize",l,{antialias:p,axes:h?Array.from(M.subarray(S>>>0,S+h>>>0)):[],coordinateTransformMode:Ke(T),cubicCoeffA:U,excludeOutside:H,extrapolationValue:L,keepAspectRatioPolicy:Ke(X),mode:Ke(J),nearestMode:Ke(Q)})},924586:(l,p,h,S,T,U,H)=>{r.ra("Slice",l,{starts:p?Array.from(M.subarray(h>>>0,h+p>>>0)):[],ends:S?Array.from(M.subarray(T>>>0,T+S>>>0)):[],axes:U?Array.from(M.subarray(H>>>0,H+U>>>0)):[]})},924817:l=>{r.ra("Tile",l,void 0)},924869:(l,p,h)=>{r.ra("LayerNormalization",l,{axis:Number(p),epsilon:Number(h)})},924976:(l,p,h)=>{r.ra("InstanceNormalization",l,{epsilon:p,format:h?"NHWC":"NCHW"})},925090:(l,p,h)=>{r.ra("InstanceNormalization",l,{epsilon:p,format:h?"NHWC":"NCHW"})},925204:l=>{r.ra("Range",l,void 0)},925257:(l,p)=>{r.ra("Einsum",l,{equation:Ke(p)})},925338:(l,p,h,S,T)=>{r.ra("Pad",l,{mode:p,value:h,pads:S?Array.from(M.subarray(T>>>0,T+S>>>0)):[]})},925470:l=>{r.ra("Gelu",l,void 0)},925522:l=>{r.ra("BiasAdd",l,void 0)},925577:l=>{r.ra("BiasSplitGelu",l,void 0)},925638:(l,p)=>{r.ra("SkipLayerNormalization",l,{epsilon:p})},925719:l=>{r.Ra(l)},925753:(l,p)=>r.Sa(l,p,r.Da.Ta,r.Da.errors),925865:l=>r.Oa(l),925898:l=>r.Qa(l),925930:(l,p,h)=>{r.Ja(l,p,h,!0)},925969:(l,p,h)=>{r.Ja(l,p,h)}};function Le(l){this.name="ExitStatus",this.message=`Program terminated with exit(${l})`,this.status=l}var Ue=l=>{for(;0<l.length;)l.shift()(r)};function Pt(l){this.Ha=l-24,this.Ma=function(p){q[this.Ha+4>>2>>>0]=p},this.La=function(p){q[this.Ha+8>>2>>>0]=p},this.Ya=function(p,h){this.Ka(),this.Ma(p),this.La(h)},this.Ka=function(){q[this.Ha+16>>2>>>0]=0}}var lt=0,ir=0,Rt=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,je=(l,p,h)=>{p>>>=0;var S=p+h;for(h=p;l[h]&&!(h>=S);)++h;if(16<h-p&&l.buffer&&Rt)return Rt.decode(l.subarray(p,h));for(S="";p<h;){var T=l[p++];if(T&128){var U=l[p++]&63;if((T&224)==192)S+=String.fromCharCode((T&31)<<6|U);else{var H=l[p++]&63;T=(T&240)==224?(T&15)<<12|U<<6|H:(T&7)<<18|U<<12|H<<6|l[p++]&63,65536>T?S+=String.fromCharCode(T):(T-=65536,S+=String.fromCharCode(55296|T>>10,56320|T&1023))}}else S+=String.fromCharCode(T)}return S},Ke=(l,p)=>(l>>>=0)?je(le,l,p):"",Qe=l=>{for(var p=0,h=0;h<l.length;++h){var S=l.charCodeAt(h);127>=S?p++:2047>=S?p+=2:55296<=S&&57343>=S?(p+=4,++h):p+=3}return p},vt=(l,p,h,S)=>{if(h>>>=0,!(0<S))return 0;var T=h;S=h+S-1;for(var U=0;U<l.length;++U){var H=l.charCodeAt(U);if(55296<=H&&57343>=H){var L=l.charCodeAt(++U);H=65536+((H&1023)<<10)|L&1023}if(127>=H){if(h>=S)break;p[h++>>>0]=H}else{if(2047>=H){if(h+1>=S)break;p[h++>>>0]=192|H>>6}else{if(65535>=H){if(h+2>=S)break;p[h++>>>0]=224|H>>12}else{if(h+3>=S)break;p[h++>>>0]=240|H>>18,p[h++>>>0]=128|H>>12&63}p[h++>>>0]=128|H>>6&63}p[h++>>>0]=128|H&63}}return p[h>>>0]=0,h-T},ct=l=>l%4===0&&(l%100!==0||l%400===0),Bt=[0,31,60,91,121,152,182,213,244,274,305,335],sr=[0,31,59,90,120,151,181,212,243,273,304,334],st=l=>{var p=Qe(l)+1,h=It(p);return h&&vt(l,le,h,p),h},mt=[],ht=(l,p)=>{mt.length=0;var h;for(p>>=2;h=le[l++>>>0];)p+=h!=105&p,mt.push(h==105?M[p>>>0]:Ce[p++>>>1]),++p;return mt},gt={},Mt=()=>{if(!$t){var l={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:u||"./this.program"},p;for(p in gt)gt[p]===void 0?delete l[p]:l[p]=gt[p];var h=[];for(p in l)h.push(`${p}=${l[p]}`);$t=h}return $t},$t,ur=[null,[],[]],kt=[31,29,31,30,31,30,31,31,30,31,30,31],We=[31,28,31,30,31,30,31,31,30,31,30,31];function lr(l){var p=Array(Qe(l)+1);return vt(l,p,0,p.length),p}function xt(l,p,h,S){function T(O,se,ge){for(O=typeof O=="number"?O.toString():O||"";O.length<se;)O=ge[0]+O;return O}function U(O,se){return T(O,se,"0")}function H(O,se){function ge(gr){return 0>gr?-1:0<gr?1:0}var et;return(et=ge(O.getFullYear()-se.getFullYear()))===0&&(et=ge(O.getMonth()-se.getMonth()))===0&&(et=ge(O.getDate()-se.getDate())),et}function L(O){switch(O.getDay()){case 0:return new Date(O.getFullYear()-1,11,29);case 1:return O;case 2:return new Date(O.getFullYear(),0,3);case 3:return new Date(O.getFullYear(),0,2);case 4:return new Date(O.getFullYear(),0,1);case 5:return new Date(O.getFullYear()-1,11,31);case 6:return new Date(O.getFullYear()-1,11,30)}}function X(O){var se=O.Ba;for(O=new Date(new Date(O.Ca+1900,0,1).getTime());0<se;){var ge=O.getMonth(),et=(ct(O.getFullYear())?kt:We)[ge];if(se>et-O.getDate())se-=et-O.getDate()+1,O.setDate(1),11>ge?O.setMonth(ge+1):(O.setMonth(0),O.setFullYear(O.getFullYear()+1));else{O.setDate(O.getDate()+se);break}}return ge=new Date(O.getFullYear()+1,0,4),se=L(new Date(O.getFullYear(),0,4)),ge=L(ge),0>=H(se,O)?0>=H(ge,O)?O.getFullYear()+1:O.getFullYear():O.getFullYear()-1}l>>>=0,p>>>=0,h>>>=0,S>>>=0;var J=M[S+40>>2>>>0];S={Wa:M[S>>2>>>0],Va:M[S+4>>2>>>0],Ea:M[S+8>>2>>>0],Ia:M[S+12>>2>>>0],Fa:M[S+16>>2>>>0],Ca:M[S+20>>2>>>0],wa:M[S+24>>2>>>0],Ba:M[S+28>>2>>>0],$a:M[S+32>>2>>>0],Ua:M[S+36>>2>>>0],Xa:J?Ke(J):""},h=Ke(h),J={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var Q in J)h=h.replace(new RegExp(Q,"g"),J[Q]);var de="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),me="January February March April May June July August September October November December".split(" ");J={"%a":O=>de[O.wa].substring(0,3),"%A":O=>de[O.wa],"%b":O=>me[O.Fa].substring(0,3),"%B":O=>me[O.Fa],"%C":O=>U((O.Ca+1900)/100|0,2),"%d":O=>U(O.Ia,2),"%e":O=>T(O.Ia,2," "),"%g":O=>X(O).toString().substring(2),"%G":O=>X(O),"%H":O=>U(O.Ea,2),"%I":O=>(O=O.Ea,O==0?O=12:12<O&&(O-=12),U(O,2)),"%j":O=>{for(var se=0,ge=0;ge<=O.Fa-1;se+=(ct(O.Ca+1900)?kt:We)[ge++]);return U(O.Ia+se,3)},"%m":O=>U(O.Fa+1,2),"%M":O=>U(O.Va,2),"%n":()=>`\n`,"%p":O=>0<=O.Ea&&12>O.Ea?"AM":"PM","%S":O=>U(O.Wa,2),"%t":()=>"	","%u":O=>O.wa||7,"%U":O=>U(Math.floor((O.Ba+7-O.wa)/7),2),"%V":O=>{var se=Math.floor((O.Ba+7-(O.wa+6)%7)/7);if(2>=(O.wa+371-O.Ba-2)%7&&se++,se)se==53&&(ge=(O.wa+371-O.Ba)%7,ge==4||ge==3&&ct(O.Ca)||(se=1));else{se=52;var ge=(O.wa+7-O.Ba-1)%7;(ge==4||ge==5&&ct(O.Ca%400-1))&&se++}return U(se,2)},"%w":O=>O.wa,"%W":O=>U(Math.floor((O.Ba+7-(O.wa+6)%7)/7),2),"%y":O=>(O.Ca+1900).toString().substring(2),"%Y":O=>O.Ca+1900,"%z":O=>{O=O.Ua;var se=0<=O;return O=Math.abs(O)/60,(se?"+":"-")+("0000"+(O/60*100+O%60)).slice(-4)},"%Z":O=>O.Xa,"%%":()=>"%"},h=h.replace(/%%/g,"\\0\\0");for(Q in J)h.includes(Q)&&(h=h.replace(new RegExp(Q,"g"),J[Q](S)));return h=h.replace(/\\0\\0/g,"%"),Q=lr(h),Q.length>p?0:(Y.set(Q,l>>>0),Q.length-1)}function re(l){try{l()}catch(p){Ge(p)}}function Ct(l){var p={},h;for(h in l)(function(S){var T=l[S];p[S]=typeof T=="function"?function(){St.push(S);try{return T.apply(null,arguments)}finally{z||(St.pop()===S||Ge(),Ne&&qe===1&&St.length===0&&(qe=0,re(jt),typeof Fibers<"u"&&Fibers.ab()))}}:T})(h);return p}var qe=0,Ne=null,Dt=0,St=[],Wt={},zt={},cr=0,At=null,Gt=[];function dr(){return new Promise((l,p)=>{At={resolve:l,reject:p}})}function pr(){var l=It(65548),p=l+12;q[l>>2>>>0]=p,q[l+4>>2>>>0]=p+65536,p=St[0];var h=Wt[p];return h===void 0&&(h=cr++,Wt[p]=h,zt[h]=p),M[l+8>>2>>>0]=h,l}function fr(l){if(!z){if(qe===0){var p=!1,h=!1;l((S=0)=>{if(!z&&(Dt=S,p=!0,h)){qe=2,re(()=>Kt(Ne)),typeof Browser<"u"&&Browser.Ga.Na&&Browser.Ga.resume(),S=!1;try{var T=(0,_[zt[M[Ne+8>>2>>>0]]])()}catch(L){T=L,S=!0}var U=!1;if(!Ne){var H=At;H&&(At=null,(S?H.reject:H.resolve)(T),U=!0)}if(S&&!U)throw T}}),h=!0,p||(qe=1,Ne=pr(),typeof Browser<"u"&&Browser.Ga.Na&&Browser.Ga.pause(),re(()=>Lt(Ne)))}else qe===2?(qe=0,re(Tt),Vt(Ne),Ne=null,Gt.forEach(S=>{if(!z)try{if(S(),!B)try{N=N=S=N,B||(r.onExit&&r.onExit(S),z=!0),c(S,new Le(S))}catch(T){T instanceof Le||T=="unwind"||c(1,T)}}catch(T){T instanceof Le||T=="unwind"||c(1,T)}})):Ge(`invalid state: ${qe}`);return Dt}}function mr(l){return fr(p=>{l().then(p)})}var hr={n:function(l,p,h){return mr(async()=>{await r.Pa(l,p,h)})},a:function(l,p,h){throw l>>>=0,new Pt(l).Ya(p>>>0,h>>>0),lt=l,ir++,lt},g:function(){return 0},J:function(){},z:function(){},B:function(){},L:function(){return 0},H:function(){},C:function(){},G:function(){},l:function(){},A:function(){},x:function(){},I:function(){},y:function(){},m:()=>!0,q:function(l,p,h){l=p+2097152>>>0<4194305-!!l?(l>>>0)+4294967296*p:NaN,h>>>=0,l=new Date(1e3*l),M[h>>2>>>0]=l.getUTCSeconds(),M[h+4>>2>>>0]=l.getUTCMinutes(),M[h+8>>2>>>0]=l.getUTCHours(),M[h+12>>2>>>0]=l.getUTCDate(),M[h+16>>2>>>0]=l.getUTCMonth(),M[h+20>>2>>>0]=l.getUTCFullYear()-1900,M[h+24>>2>>>0]=l.getUTCDay(),M[h+28>>2>>>0]=(l.getTime()-Date.UTC(l.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},r:function(l,p,h){l=p+2097152>>>0<4194305-!!l?(l>>>0)+4294967296*p:NaN,h>>>=0,l=new Date(1e3*l),M[h>>2>>>0]=l.getSeconds(),M[h+4>>2>>>0]=l.getMinutes(),M[h+8>>2>>>0]=l.getHours(),M[h+12>>2>>>0]=l.getDate(),M[h+16>>2>>>0]=l.getMonth(),M[h+20>>2>>>0]=l.getFullYear()-1900,M[h+24>>2>>>0]=l.getDay(),M[h+28>>2>>>0]=(ct(l.getFullYear())?Bt:sr)[l.getMonth()]+l.getDate()-1|0,M[h+36>>2>>>0]=-(60*l.getTimezoneOffset()),p=new Date(l.getFullYear(),6,1).getTimezoneOffset();var S=new Date(l.getFullYear(),0,1).getTimezoneOffset();M[h+32>>2>>>0]=(p!=S&&l.getTimezoneOffset()==Math.min(S,p))|0},s:function(l){l>>>=0;var p=new Date(M[l+20>>2>>>0]+1900,M[l+16>>2>>>0],M[l+12>>2>>>0],M[l+8>>2>>>0],M[l+4>>2>>>0],M[l>>2>>>0],0),h=M[l+32>>2>>>0],S=p.getTimezoneOffset(),T=new Date(p.getFullYear(),6,1).getTimezoneOffset(),U=new Date(p.getFullYear(),0,1).getTimezoneOffset(),H=Math.min(U,T);return 0>h?M[l+32>>2>>>0]=+(T!=U&&H==S):0<h!=(H==S)&&(T=Math.max(U,T),p.setTime(p.getTime()+6e4*((0<h?H:T)-S))),M[l+24>>2>>>0]=p.getDay(),M[l+28>>2>>>0]=(ct(p.getFullYear())?Bt:sr)[p.getMonth()]+p.getDate()-1|0,M[l>>2>>>0]=p.getSeconds(),M[l+4>>2>>>0]=p.getMinutes(),M[l+8>>2>>>0]=p.getHours(),M[l+12>>2>>>0]=p.getDate(),M[l+16>>2>>>0]=p.getMonth(),M[l+20>>2>>>0]=p.getYear(),l=p.getTime()/1e3,Ut((Te=l,1<=+Math.abs(Te)?0<Te?+Math.floor(Te/4294967296)>>>0:~~+Math.ceil((Te-+(~~Te>>>0))/4294967296)>>>0:0)),l>>>0},o:function(){return-52},p:function(){},v:function(l,p,h){function S(X){return(X=X.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?X[1]:"GMT"}h>>>=0;var T=new Date().getFullYear(),U=new Date(T,0,1),H=new Date(T,6,1);T=U.getTimezoneOffset();var L=H.getTimezoneOffset();q[l>>>0>>2>>>0]=60*Math.max(T,L),M[p>>>0>>2>>>0]=+(T!=L),l=S(U),p=S(H),l=st(l),p=st(p),L<T?(q[h>>2>>>0]=l,q[h+4>>2>>>0]=p):(q[h>>2>>>0]=p,q[h+4>>2>>>0]=l)},e:()=>{Ge("")},b:function(l,p,h){return l>>>=0,p=ht(p>>>0,h>>>0),He[l].apply(null,p)},i:function(l,p,h){return l>>>=0,p=ht(p>>>0,h>>>0),He[l].apply(null,p)},h:function(){return Date.now()},w:function(){return 4294901760},c:()=>performance.now(),K:function(l,p,h){return p>>>=0,le.copyWithin(l>>>0>>>0,p>>>0,p+(h>>>0)>>>0)},u:function(l){l>>>=0;var p=le.length;if(4294901760<l)return!1;for(var h=1;4>=h;h*=2){var S=p*(1+.2/h);S=Math.min(S,l+100663296);var T=Math;S=Math.max(l,S);e:{T=T.min.call(T,4294901760,S+(65536-S%65536)%65536)-D.buffer.byteLength+65535>>>16;try{D.grow(T),ae();var U=1;break e}catch{}U=void 0}if(U)return!0}return!1},D:function(l,p){l>>>=0,p>>>=0;var h=0;return Mt().forEach(function(S,T){var U=p+h;for(T=q[l+4*T>>2>>>0]=U,U=0;U<S.length;++U)Y[T++>>0>>>0]=S.charCodeAt(U);Y[T>>0>>>0]=0,h+=S.length+1}),0},E:function(l,p){l>>>=0,p>>>=0;var h=Mt();q[l>>2>>>0]=h.length;var S=0;return h.forEach(function(T){S+=T.length+1}),q[p>>2>>>0]=S,0},f:()=>52,k:function(){return 52},t:function(){return 70},j:function(l,p,h,S){p>>>=0,h>>>=0,S>>>=0;for(var T=0,U=0;U<h;U++){var H=q[p>>2>>>0],L=q[p+4>>2>>>0];p+=8;for(var X=0;X<L;X++){var J=le[H+X>>>0],Q=ur[l];J===0||J===10?((l===1?A:P)(je(Q,0)),Q.length=0):Q.push(J)}T+=L}return q[S>>2>>>0]=T,0},F:xt,d:function(l,p,h,S){return xt(l>>>0,p>>>0,h>>>0,S>>>0)}};(function(){function l(h){if(h=h.exports,h=Ct(h),_=h=Ot(h),D=_.M,ae(),K.unshift(_.N),xe--,r.monitorRunDependencies&&r.monitorRunDependencies(xe),xe==0&&(Ie!==null&&(clearInterval(Ie),Ie=null),Ze)){var S=Ze;Ze=null,S()}return h}var p={a:hr};if(xe++,r.monitorRunDependencies&&r.monitorRunDependencies(xe),r.instantiateWasm)try{return r.instantiateWasm(p,l)}catch(h){P("Module.instantiateWasm callback failed with error: "+h),n(h)}return Ee(p,function(h){l(h.instance)}).catch(n),{}})(),r._OrtInit=(l,p)=>(r._OrtInit=_.O)(l,p),r._OrtGetLastError=(l,p)=>(r._OrtGetLastError=_.P)(l,p),r._OrtCreateSessionOptions=(l,p,h,S,T,U,H,L,X,J)=>(r._OrtCreateSessionOptions=_.Q)(l,p,h,S,T,U,H,L,X,J),r._OrtAppendExecutionProvider=(l,p)=>(r._OrtAppendExecutionProvider=_.R)(l,p),r._OrtAddFreeDimensionOverride=(l,p,h)=>(r._OrtAddFreeDimensionOverride=_.S)(l,p,h),r._OrtAddSessionConfigEntry=(l,p,h)=>(r._OrtAddSessionConfigEntry=_.T)(l,p,h),r._OrtReleaseSessionOptions=l=>(r._OrtReleaseSessionOptions=_.U)(l),r._OrtCreateSession=(l,p,h)=>(r._OrtCreateSession=_.V)(l,p,h),r._OrtReleaseSession=l=>(r._OrtReleaseSession=_.W)(l),r._OrtGetInputOutputCount=(l,p,h)=>(r._OrtGetInputOutputCount=_.X)(l,p,h),r._OrtGetInputName=(l,p)=>(r._OrtGetInputName=_.Y)(l,p),r._OrtGetOutputName=(l,p)=>(r._OrtGetOutputName=_.Z)(l,p),r._OrtFree=l=>(r._OrtFree=_._)(l),r._OrtCreateTensor=(l,p,h,S,T,U)=>(r._OrtCreateTensor=_.$)(l,p,h,S,T,U),r._OrtGetTensorData=(l,p,h,S,T)=>(r._OrtGetTensorData=_.aa)(l,p,h,S,T),r._OrtReleaseTensor=l=>(r._OrtReleaseTensor=_.ba)(l),r._OrtCreateRunOptions=(l,p,h,S)=>(r._OrtCreateRunOptions=_.ca)(l,p,h,S),r._OrtAddRunConfigEntry=(l,p,h)=>(r._OrtAddRunConfigEntry=_.da)(l,p,h),r._OrtReleaseRunOptions=l=>(r._OrtReleaseRunOptions=_.ea)(l),r._OrtCreateBinding=l=>(r._OrtCreateBinding=_.fa)(l),r._OrtBindInput=(l,p,h)=>(r._OrtBindInput=_.ga)(l,p,h),r._OrtBindOutput=(l,p,h,S)=>(r._OrtBindOutput=_.ha)(l,p,h,S),r._OrtClearBoundOutputs=l=>(r._OrtClearBoundOutputs=_.ia)(l),r._OrtReleaseBinding=l=>(r._OrtReleaseBinding=_.ja)(l),r._OrtRunWithBinding=(l,p,h,S,T)=>(r._OrtRunWithBinding=_.ka)(l,p,h,S,T),r._OrtRun=(l,p,h,S,T,U,H,L)=>(r._OrtRun=_.la)(l,p,h,S,T,U,H,L),r._OrtEndProfiling=l=>(r._OrtEndProfiling=_.ma)(l),r._JsepOutput=(l,p,h)=>(r._JsepOutput=_.na)(l,p,h),r._JsepGetNodeName=l=>(r._JsepGetNodeName=_.oa)(l);var It=r._malloc=l=>(It=r._malloc=_.pa)(l),Vt=r._free=l=>(Vt=r._free=_.qa)(l),Ut=l=>(Ut=_.sa)(l),Nt=()=>(Nt=_.ta)(),Ft=l=>(Ft=_.ua)(l),Ht=l=>(Ht=_.va)(l),Lt=l=>(Lt=_.xa)(l),jt=()=>(jt=_.ya)(),Kt=l=>(Kt=_.za)(l),Tt=()=>(Tt=_.Aa)();r.___start_em_js=926002,r.___stop_em_js=926163;function Ot(l){l=Object.assign({},l);var p=S=>()=>S()>>>0,h=S=>T=>S(T)>>>0;return l.__errno_location=p(l.__errno_location),l.malloc=h(l.malloc),l.stackSave=p(l.stackSave),l.stackAlloc=h(l.stackAlloc),l}r.stackAlloc=Ht,r.stackSave=Nt,r.stackRestore=Ft,r.UTF8ToString=Ke,r.stringToUTF8=(l,p,h)=>vt(l,le,p,h),r.lengthBytesUTF8=Qe;var Ye;Ze=function l(){Ye||qt(),Ye||(Ze=l)};function qt(){function l(){if(!Ye&&(Ye=!0,r.calledRun=!0,!z)){if(Ue(K),i(r),r.onRuntimeInitialized&&r.onRuntimeInitialized(),r.postRun)for(typeof r.postRun=="function"&&(r.postRun=[r.postRun]);r.postRun.length;){var p=r.postRun.shift();Se.unshift(p)}Ue(Se)}}if(!(0<xe)){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;)Be();Ue(we),0<xe||(r.setStatus?(r.setStatus("Running..."),setTimeout(function(){setTimeout(function(){r.setStatus("")},1),l()},1)):l())}}if(r.preInit)for(typeof r.preInit=="function"&&(r.preInit=[r.preInit]);0<r.preInit.length;)r.preInit.pop()();return qt(),t.ready}})();typeof oo=="object"&&typeof on=="object"?on.exports=no:typeof define=="function"&&define.amd&&define([],()=>no)});var io=Yt(()=>{});var so=Yt(()=>{});var uo={};xr(uo,{cpus:()=>hu});var hu,lo=j(()=>{hu=void 0});var fo=Yt((po,an)=>{"use strict";var co=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){function r(){return we.buffer!=Ie.buffer&&pe(),Ie}function i(){return we.buffer!=Ie.buffer&&pe(),Ze}function n(){return we.buffer!=Ie.buffer&&pe(),Ge}function s(){return we.buffer!=Ie.buffer&&pe(),it}function u(){return we.buffer!=Ie.buffer&&pe(),V}function c(){return we.buffer!=Ie.buffer&&pe(),ce}var o=t,m,g;o.ready=new Promise((a,d)=>{m=a,g=d}),o.jsepInit=(a,d,f,v,I,R,G,oe)=>{o.Qb=a,o.wb=d,o.yb=f,o.jb=v,o.xb=I,o.Ea=R,o.zb=G,o.Ab=oe,d=(te,ee,ne)=>(...fe)=>{let be=tt,E=ee?.();fe=te(...fe);let ue=ee?.();return E!==ue&&(te=ue,ne(E),ee=ne=null),tt!=be?tu():fe},f=te=>async(...ee)=>{try{if(o.bb)throw Error("Session already started");let ne=o.bb={Fb:ee[0],errors:[]},fe=await te(...ee);if(o.bb!==ne)throw Error("Session mismatch");a.flush();let be=ne.errors;if(0<be.length){let E=await Promise.all(be);if(E=E.filter(ue=>ue),0<E.length)throw Error(E.join(`\n`))}return fe}finally{o.bb=null}},o._OrtRun=f(d(o._OrtRun,()=>o._OrtRun,te=>o._OrtRun=te)),o._OrtRunWithBinding=f(d(o._OrtRunWithBinding,()=>o._OrtRunWithBinding,te=>o._OrtRunWithBinding=te)),o._OrtBindInput=d(o._OrtBindInput,()=>o._OrtBindInput,te=>o._OrtBindInput=te),o.jsepRegisterBuffer=(te,ee,ne,fe)=>a.registerBuffer(te,ee,ne,fe),o.jsepUnregisterBuffers=te=>{a.unregisterBuffers(te)},o.jsepGetBuffer=te=>a.getBuffer(te),o.jsepCreateDownloader=(te,ee,ne)=>a.createDownloader(te,ee,ne)};var x=Object.assign({},o),b="./this.program",w=(a,d)=>{throw d},$=typeof window=="object",y=typeof importScripts=="function",C=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",A=o.ENVIRONMENT_IS_PTHREAD||!1,P="";function W(a){return o.locateFile?o.locateFile(a,P):P+a}var B,D,_;if(C){var z=(tn(),Et(en)),N=(nn(),Et(rn));P=y?N.dirname(P)+"/":__dirname+"/",B=(d,f)=>(d=d.startsWith("file://")?new URL(d):N.normalize(d),z.readFileSync(d,f?void 0:"utf8")),_=d=>(d=B(d,!0),d.buffer||(d=new Uint8Array(d)),d),D=(d,f,v,I=!0)=>{d=d.startsWith("file://")?new URL(d):N.normalize(d),z.readFile(d,I?void 0:"utf8",(R,G)=>{R?v(R):f(I?G.buffer:G)})},!o.thisProgram&&1<process.argv.length&&(b=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),w=(d,f)=>{throw process.exitCode=d,f},o.inspect=()=>"[Emscripten Module object]";let a;try{a=io()}catch(d){throw console.error(\'The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?\'),d}global.Worker=a.Worker}else($||y)&&(y?P=self.location.href:typeof document<"u"&&document.currentScript&&(P=document.currentScript.src),typeof e<"u"&&e&&(P=e),P.indexOf("blob:")!==0?P=P.substr(0,P.replace(/[?#].*/,"").lastIndexOf("/")+1):P="",C||(B=a=>{var d=new XMLHttpRequest;return d.open("GET",a,!1),d.send(null),d.responseText},y&&(_=a=>{var d=new XMLHttpRequest;return d.open("GET",a,!1),d.responseType="arraybuffer",d.send(null),new Uint8Array(d.response)}),D=(a,d,f)=>{var v=new XMLHttpRequest;v.open("GET",a,!0),v.responseType="arraybuffer",v.onload=()=>{v.status==200||v.status==0&&v.response?d(v.response):f()},v.onerror=f,v.send(null)}));C&&typeof performance>"u"&&(global.performance=so().performance);var Y=console.log.bind(console),le=console.error.bind(console);C&&(Y=(...a)=>z.writeSync(1,a.join(" ")+`\n`),le=(...a)=>z.writeSync(2,a.join(" ")+`\n`));var M=o.print||Y,q=o.printErr||le;Object.assign(o,x),x=null,o.thisProgram&&(b=o.thisProgram),o.quit&&(w=o.quit);var Ce;o.wasmBinary&&(Ce=o.wasmBinary);var ae=o.noExitRuntime||!0;typeof WebAssembly!="object"&&je("no native wasm support detected");var we,K,Se,Be=!1,xe,Ie,Ze,Ge,it,V,ce;function pe(){var a=we.buffer;o.HEAP8=Ie=new Int8Array(a),o.HEAP16=new Int16Array(a),o.HEAP32=Ge=new Int32Array(a),o.HEAPU8=Ze=new Uint8Array(a),o.HEAPU16=new Uint16Array(a),o.HEAPU32=it=new Uint32Array(a),o.HEAPF32=V=new Float32Array(a),o.HEAPF64=ce=new Float64Array(a)}var ze=o.INITIAL_MEMORY||16777216;if(5242880<=ze||je("INITIAL_MEMORY should be larger than STACK_SIZE, was "+ze+"! (STACK_SIZE=5242880)"),A)we=o.wasmMemory;else if(o.wasmMemory)we=o.wasmMemory;else if(we=new WebAssembly.Memory({initial:ze/65536,maximum:65536,shared:!0}),!(we.buffer instanceof SharedArrayBuffer))throw q("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),C&&q("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");pe(),ze=we.buffer.byteLength;var Ve=[],Ee=[],Te=[],He=0;function Le(){return ae||0<He}var Ue=0,Pt=null,lt=null;function ir(){Ue++,o.monitorRunDependencies&&o.monitorRunDependencies(Ue)}function Rt(){if(Ue--,o.monitorRunDependencies&&o.monitorRunDependencies(Ue),Ue==0&&(Pt!==null&&(clearInterval(Pt),Pt=null),lt)){var a=lt;lt=null,a()}}function je(a){throw o.onAbort&&o.onAbort(a),a="Aborted("+a+")",q(a),Be=!0,xe=1,a=new WebAssembly.RuntimeError(a+". Build with -sASSERTIONS for more info."),g(a),a}function Ke(a){return a.startsWith("data:application/octet-stream;base64,")}var Qe;Qe="ort-wasm-simd-threaded.wasm",Ke(Qe)||(Qe=W(Qe));function vt(a){if(a==Qe&&Ce)return new Uint8Array(Ce);if(_)return _(a);throw"both async and sync fetching of the wasm failed"}function ct(a){if(!Ce&&($||y)){if(typeof fetch=="function"&&!a.startsWith("file://"))return fetch(a,{credentials:"same-origin"}).then(d=>{if(!d.ok)throw"failed to load wasm binary file at \'"+a+"\'";return d.arrayBuffer()}).catch(()=>vt(a));if(D)return new Promise((d,f)=>{D(a,v=>d(new Uint8Array(v)),f)})}return Promise.resolve().then(()=>vt(a))}function Bt(a,d,f){return ct(a).then(v=>WebAssembly.instantiate(v,d)).then(v=>v).then(f,v=>{q("failed to asynchronously prepare wasm: "+v),je(v)})}function sr(a,d){var f=Qe;return Ce||typeof WebAssembly.instantiateStreaming!="function"||Ke(f)||f.startsWith("file://")||C||typeof fetch!="function"?Bt(f,a,d):fetch(f,{credentials:"same-origin"}).then(v=>WebAssembly.instantiateStreaming(v,a).then(d,function(I){return q("wasm streaming compile failed: "+I),q("falling back to ArrayBuffer instantiation"),Bt(f,a,d)}))}var st,mt={1420080:a=>{o.Ea("Abs",a,void 0)},1420131:a=>{o.Ea("Neg",a,void 0)},1420182:a=>{o.Ea("Floor",a,void 0)},1420235:a=>{o.Ea("Ceil",a,void 0)},1420287:a=>{o.Ea("Reciprocal",a,void 0)},1420345:a=>{o.Ea("Sqrt",a,void 0)},1420397:a=>{o.Ea("Exp",a,void 0)},1420448:a=>{o.Ea("Erf",a,void 0)},1420499:a=>{o.Ea("Sigmoid",a,void 0)},1420554:a=>{o.Ea("Log",a,void 0)},1420605:a=>{o.Ea("Sin",a,void 0)},1420656:a=>{o.Ea("Cos",a,void 0)},1420707:a=>{o.Ea("Tan",a,void 0)},1420758:a=>{o.Ea("Asin",a,void 0)},1420810:a=>{o.Ea("Acos",a,void 0)},1420862:a=>{o.Ea("Atan",a,void 0)},1420914:a=>{o.Ea("Sinh",a,void 0)},1420966:a=>{o.Ea("Cosh",a,void 0)},1421018:a=>{o.Ea("Asinh",a,void 0)},1421071:a=>{o.Ea("Acosh",a,void 0)},1421124:a=>{o.Ea("Atanh",a,void 0)},1421177:a=>{o.Ea("Tanh",a,void 0)},1421229:a=>{o.Ea("Not",a,void 0)},1421280:(a,d,f)=>{o.Ea("ClipV10",a,{min:d,max:f})},1421352:a=>{o.Ea("Clip",a,void 0)},1421404:(a,d)=>{o.Ea("Elu",a,{alpha:d})},1421462:a=>{o.Ea("Relu",a,void 0)},1421514:(a,d)=>{o.Ea("LeakyRelu",a,{alpha:d})},1421578:(a,d)=>{o.Ea("ThresholdedRelu",a,{alpha:d})},1421648:a=>{o.zb(a)},1421682:(a,d)=>o.Ab(a,d,o.bb.Fb,o.bb.errors),1421794:(a,d)=>{o.Ea("Cast",a,{to:d})},1421852:a=>{o.Ea("Add",a,void 0)},1421903:a=>{o.Ea("Sub",a,void 0)},1421954:a=>{o.Ea("Mul",a,void 0)},1422005:a=>{o.Ea("Div",a,void 0)},1422056:a=>{o.Ea("Pow",a,void 0)},1422107:a=>{o.Ea("Equal",a,void 0)},1422160:a=>{o.Ea("Greater",a,void 0)},1422215:a=>{o.Ea("GreaterOrEqual",a,void 0)},1422277:a=>{o.Ea("Less",a,void 0)},1422329:a=>{o.Ea("LessOrEqual",a,void 0)},1422388:(a,d,f,v,I)=>{o.Ea("ReduceMean",a,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:v?Array.from(n().subarray(I>>>0,I+v>>>0)):[]})},1422552:(a,d,f,v,I)=>{o.Ea("ReduceMax",a,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:v?Array.from(n().subarray(I>>>0,I+v>>>0)):[]})},1422715:(a,d,f,v,I)=>{o.Ea("ReduceMin",a,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:v?Array.from(n().subarray(I>>>0,I+v>>>0)):[]})},1422878:(a,d,f,v,I)=>{o.Ea("ReduceProd",a,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:v?Array.from(n().subarray(I>>>0,I+v>>>0)):[]})},1423042:(a,d,f,v,I)=>{o.Ea("ReduceSum",a,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:v?Array.from(n().subarray(I>>>0,I+v>>>0)):[]})},1423205:(a,d,f,v,I)=>{o.Ea("ReduceL1",a,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:v?Array.from(n().subarray(I>>>0,I+v>>>0)):[]})},1423367:(a,d,f,v,I)=>{o.Ea("ReduceL2",a,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:v?Array.from(n().subarray(I>>>0,I+v>>>0)):[]})},1423529:(a,d,f,v,I)=>{o.Ea("ReduceLogSum",a,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:v?Array.from(n().subarray(I>>>0,I+v>>>0)):[]})},1423695:(a,d,f,v,I)=>{o.Ea("ReduceSumSquare",a,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:v?Array.from(n().subarray(I>>>0,I+v>>>0)):[]})},1423864:(a,d,f,v,I)=>{o.Ea("ReduceLogSumExp",a,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:v?Array.from(n().subarray(I>>>0,I+v>>>0)):[]})},1424033:a=>{o.Ea("Where",a,void 0)},1424086:(a,d,f)=>{o.Ea("Transpose",a,{perm:d?Array.from(n().subarray(f>>>0,f+d>>>0)):[]})},1424199:(a,d,f,v,I,R,G,oe,te,ee,ne,fe,be)=>{o.Ea("Conv",a,{format:te?"NHWC":"NCHW",auto_pad:d,dilations:[f],group:v,kernel_shape:[I],pads:R?Array.from(n().subarray(G>>>0,G+R>>>0)):[],strides:[oe],w_is_const:()=>!!r()[ee>>>0],activation:We(ne),activation_params:fe?Array.from(u().subarray(be>>>0,be+fe>>>0)):[]})},1424580:(a,d,f,v,I,R,G,oe,te,ee,ne,fe,be,E,ue,ye)=>{o.Ea("Conv",a,{format:fe?"NHWC":"NCHW",auto_pad:d,dilations:[f,v],group:I,kernel_shape:[R,G],pads:oe?Array.from(n().subarray(te>>>0,te+oe>>>0)):[],strides:[ee,ne],w_is_const:()=>!!r()[be>>>0],activation:We(E),activation_params:ue?Array.from(u().subarray(ye>>>0,ye+ue>>>0)):[]})},1424982:(a,d,f,v,I,R,G,oe,te,ee,ne,fe,be,E,ue)=>{o.Ea("ConvTranspose",a,{format:te?"NHWC":"NCHW",autoPad:d,dilations:[f],group:v,kernel_shape:[I],pads:[R,G],strides:[oe],wIsConst:()=>!!r()[ee>>>0],outputPadding:ne?Array.from(n().subarray(fe>>>0,fe+ne>>>0)):[],outputShape:be?Array.from(n().subarray(E>>>0,E+be>>>0)):[],activation:We(ue)})},1425396:(a,d,f,v,I,R,G,oe,te,ee,ne,fe,be,E)=>{o.Ea("ConvTranspose",a,{format:oe?"NHWC":"NCHW",autoPad:d,dilations:Array.from(n().subarray(f>>>0,f+2>>>0)),group:v,kernelShape:Array.from(n().subarray(I>>>0,I+2>>>0)),pads:Array.from(n().subarray(R>>>0,R+4>>>0)),strides:Array.from(n().subarray(G>>>0,G+2>>>0)),wIsConst:()=>!!r()[te>>>0],outputPadding:0<ee?Array.from(n().subarray(ne>>>0,ne+ee>>>0)):[],outputShape:0<fe?Array.from(n().subarray(be>>>0,be+fe>>>0)):[],activation:We(E)})},1425953:(a,d,f,v,I,R,G,oe,te,ee,ne,fe,be,E,ue)=>{o.Ea("ConvTranspose",a,{format:te?"NHWC":"NCHW",autoPad:d,dilations:[f],group:v,kernel_shape:[I],pads:[R,G],strides:[oe],wIsConst:()=>!!r()[ee>>>0],outputPadding:ne?Array.from(n().subarray(fe>>>0,fe+ne>>>0)):[],outputShape:be?Array.from(n().subarray(E>>>0,E+be>>>0)):[],activation:We(ue)})},1426367:(a,d,f,v,I,R,G,oe,te,ee,ne,fe,be,E)=>{o.Ea("ConvTranspose",a,{format:oe?"NHWC":"NCHW",autoPad:d,dilations:Array.from(n().subarray(f>>>0,f+2>>>0)),group:v,kernelShape:Array.from(n().subarray(I>>>0,I+2>>>0)),pads:Array.from(n().subarray(R>>>0,R+4>>>0)),strides:Array.from(n().subarray(G>>>0,G+2>>>0)),wIsConst:()=>!!r()[te>>>0],outputPadding:0<ee?Array.from(n().subarray(ne>>>0,ne+ee>>>0)):[],outputShape:0<fe?Array.from(n().subarray(be>>>0,be+fe>>>0)):[],activation:We(E)})},1426924:(a,d)=>{o.Ea("GlobalAveragePool",a,{format:d?"NHWC":"NCHW"})},1427015:(a,d,f,v,I,R,G,oe,te,ee,ne,fe,be,E,ue,ye)=>{o.Ea("AveragePool",a,{format:ye?"NHWC":"NCHW",auto_pad:d,ceil_mode:f,count_include_pad:v,storage_order:I,dilations:[R,G],kernel_shape:[oe,te],pads:[ee,ne,fe,be],strides:[E,ue]})},1427299:(a,d)=>{o.Ea("GlobalAveragePool",a,{format:d?"NHWC":"NCHW"})},1427390:(a,d,f,v,I,R,G,oe,te,ee,ne,fe,be,E,ue,ye)=>{o.Ea("AveragePool",a,{format:ye?"NHWC":"NCHW",auto_pad:d,ceil_mode:f,count_include_pad:v,storage_order:I,dilations:[R,G],kernel_shape:[oe,te],pads:[ee,ne,fe,be],strides:[E,ue]})},1427674:(a,d)=>{o.Ea("GlobalMaxPool",a,{format:d?"NHWC":"NCHW"})},1427761:(a,d,f,v,I,R,G,oe,te,ee,ne,fe,be,E,ue,ye)=>{o.Ea("MaxPool",a,{format:ye?"NHWC":"NCHW",auto_pad:d,ceil_mode:f,count_include_pad:v,storage_order:I,dilations:[R,G],kernel_shape:[oe,te],pads:[ee,ne,fe,be],strides:[E,ue]})},1428041:(a,d)=>{o.Ea("GlobalMaxPool",a,{format:d?"NHWC":"NCHW"})},1428128:(a,d,f,v,I,R,G,oe,te,ee,ne,fe,be,E,ue,ye)=>{o.Ea("MaxPool",a,{format:ye?"NHWC":"NCHW",auto_pad:d,ceil_mode:f,count_include_pad:v,storage_order:I,dilations:[R,G],kernel_shape:[oe,te],pads:[ee,ne,fe,be],strides:[E,ue]})},1428408:(a,d,f,v,I)=>{o.Ea("Gemm",a,{alpha:d,beta:f,transA:v,transB:I})},1428512:a=>{o.Ea("MatMul",a,void 0)},1428566:(a,d,f,v)=>{o.Ea("ArgMax",a,{keepDims:!!d,selectLastIndex:!!f,axis:v})},1428674:(a,d,f,v)=>{o.Ea("ArgMin",a,{keepDims:!!d,selectLastIndex:!!f,axis:v})},1428782:(a,d)=>{o.Ea("Softmax",a,{axis:d})},1428845:(a,d)=>{o.Ea("Concat",a,{axis:d})},1428905:(a,d,f,v,I)=>{o.Ea("Split",a,{axis:d,numOutputs:f,splitSizes:v?Array.from(n().subarray(I>>>0,I+v>>>0)):[]})},1429050:a=>{o.Ea("Expand",a,void 0)},1429104:(a,d)=>{o.Ea("Gather",a,{axis:Number(d)})},1429175:(a,d)=>{o.Ea("GatherElements",a,{axis:Number(d)})},1429254:(a,d,f,v,I,R,G,oe,te,ee,ne)=>{o.Ea("Resize",a,{antialias:d,axes:f?Array.from(n().subarray(v>>>0,v+f>>>0)):[],coordinateTransformMode:We(I),cubicCoeffA:R,excludeOutside:G,extrapolationValue:oe,keepAspectRatioPolicy:We(te),mode:We(ee),nearestMode:We(ne)})},1429605:(a,d,f,v,I,R,G)=>{o.Ea("Slice",a,{starts:d?Array.from(n().subarray(f>>>0,f+d>>>0)):[],ends:v?Array.from(n().subarray(I>>>0,I+v>>>0)):[],axes:R?Array.from(n().subarray(G>>>0,G+R>>>0)):[]})},1429836:a=>{o.Ea("Tile",a,void 0)},1429888:(a,d,f)=>{o.Ea("LayerNormalization",a,{axis:Number(d),epsilon:Number(f)})},1429995:(a,d,f)=>{o.Ea("InstanceNormalization",a,{epsilon:d,format:f?"NHWC":"NCHW"})},1430109:(a,d,f)=>{o.Ea("InstanceNormalization",a,{epsilon:d,format:f?"NHWC":"NCHW"})},1430223:a=>{o.Ea("Range",a,void 0)},1430276:(a,d)=>{o.Ea("Einsum",a,{equation:We(d)})},1430357:(a,d,f,v,I)=>{o.Ea("Pad",a,{mode:d,value:f,pads:v?Array.from(n().subarray(I>>>0,I+v>>>0)):[]})},1430489:a=>{o.Ea("Gelu",a,void 0)},1430541:a=>{o.Ea("BiasAdd",a,void 0)},1430596:a=>{o.Ea("BiasSplitGelu",a,void 0)},1430657:(a,d)=>{o.Ea("SkipLayerNormalization",a,{epsilon:d})},1430738:a=>o.wb(a),1430771:a=>o.yb(a),1430803:(a,d,f)=>{o.jb(a,d,f,!0)},1430842:(a,d,f)=>{o.jb(a,d,f)}};function ht(a){this.name="ExitStatus",this.message=`Program terminated with exit(${a})`,this.status=a}function gt(a){a.terminate(),a.onmessage=()=>{}}function Mt(a){(a=re.Qa[a])||je(),re.Eb(a)}function $t(a){var d=re.tb();if(!d)return 6;re.Ya.push(d),re.Qa[a.Xa]=d,d.Xa=a.Xa;var f={cmd:"run",start_routine:a.Gb,arg:a.rb,pthread_ptr:a.Xa};return C&&d.unref(),d.postMessage(f,a.Mb),0}var ur=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,kt=(a,d,f)=>{d>>>=0;var v=d+f;for(f=d;a[f]&&!(f>=v);)++f;if(16<f-d&&a.buffer&&ur)return ur.decode(a.buffer instanceof SharedArrayBuffer?a.slice(d,f):a.subarray(d,f));for(v="";d<f;){var I=a[d++];if(I&128){var R=a[d++]&63;if((I&224)==192)v+=String.fromCharCode((I&31)<<6|R);else{var G=a[d++]&63;I=(I&240)==224?(I&15)<<12|R<<6|G:(I&7)<<18|R<<12|G<<6|a[d++]&63,65536>I?v+=String.fromCharCode(I):(I-=65536,v+=String.fromCharCode(55296|I>>10,56320|I&1023))}}else v+=String.fromCharCode(I)}return v},We=(a,d)=>(a>>>=0)?kt(i(),a,d):"";function lr(a){if(A)return L(1,1,a);xe=a,Le()||(re.Hb(),o.onExit&&o.onExit(a),Be=!0),w(a,new ht(a))}var xt=a=>{if(xe=a,A)throw qe(a),"unwind";lr(a)},re={ab:[],Ya:[],mb:[],Qa:{},gb:function(){A?re.vb():re.ub()},ub:function(){Ve.unshift(()=>{ir(),re.Bb(()=>Rt())})},vb:function(){re.receiveObjectTransfer=re.Db,re.threadInitTLS=re.lb,re.setExitStatus=re.kb,ae=!1},kb:function(a){xe=a},Sb:["$terminateWorker"],Hb:function(){for(var a of re.Ya)gt(a);for(a of re.ab)gt(a);re.ab=[],re.Ya=[],re.Qa=[]},Eb:function(a){var d=a.Xa;delete re.Qa[d],re.ab.push(a),re.Ya.splice(re.Ya.indexOf(a),1),a.Xa=0,Yr(d)},Db:function(){},lb:function(){re.mb.forEach(a=>a())},Cb:a=>new Promise(d=>{a.onmessage=R=>{R=R.data;var G=R.cmd;if(R.targetThread&&R.targetThread!=wr()){var oe=re.Qa[R.Rb];oe?oe.postMessage(R,R.transferList):q(\'Internal error! Worker sent a message "\'+G+\'" to target pthread \'+R.targetThread+", but that thread no longer exists!")}else G==="checkMailbox"?Ot():G==="spawnThread"?$t(R):G==="cleanupThread"?Mt(R.thread):G==="killThread"?(R=R.thread,G=re.Qa[R],delete re.Qa[R],gt(G),Yr(R),re.Ya.splice(re.Ya.indexOf(G),1),G.Xa=0):G==="cancelThread"?re.Qa[R.thread].postMessage({cmd:"cancel"}):G==="loaded"?(a.loaded=!0,d(a)):G==="alert"?alert("Thread "+R.threadId+": "+R.text):R.target==="setimmediate"?a.postMessage(R):G==="callHandler"?o[R.handler](...R.args):G&&q("worker sent an unknown command "+G)},a.onerror=R=>{throw q("worker sent an error! "+R.filename+":"+R.lineno+": "+R.message),R},C&&(a.on("message",function(R){a.onmessage({data:R})}),a.on("error",function(R){a.onerror(R)}));var f=[],v=["onExit","onAbort","print","printErr"],I;for(I of v)o.hasOwnProperty(I)&&f.push(I);a.postMessage({cmd:"load",handlers:f,urlOrBlob:o.mainScriptUrlOrBlob||e,wasmMemory:we,wasmModule:Se})}),Bb:function(a){a()},qb:function(){var a=W("ort-wasm-simd-threaded.worker.js");a=new Worker(a),re.ab.push(a)},tb:function(){return re.ab.length==0&&(re.qb(),re.Cb(re.ab[0])),re.ab.pop()}};o.PThread=re;var Ct=a=>{for(;0<a.length;)a.shift()(o)};o.establishStackSpace=function(){var a=wr(),d=n()[a+52>>2>>>0];a=n()[a+56>>2>>>0],Yn(d,d-a),vr(d)};function qe(a){if(A)return L(2,0,a);xt(a)}o.invokeEntryPoint=function(a,d){a=Xn.apply(null,[a,d]),Le()?re.kb(a):Xr(a)};function Ne(a){this.fb=a-24,this.pb=function(d){s()[this.fb+4>>2>>>0]=d},this.ob=function(d){s()[this.fb+8>>2>>>0]=d},this.gb=function(d,f){this.nb(),this.pb(d),this.ob(f)},this.nb=function(){s()[this.fb+16>>2>>>0]=0}}var Dt=0,St=0;function Wt(a,d,f,v){return A?L(3,1,a,d,f,v):zt(a,d,f,v)}function zt(a,d,f,v){if(a>>>=0,d>>>=0,f>>>=0,v>>>=0,typeof SharedArrayBuffer>"u")return q("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var I=[];return A&&I.length===0?Wt(a,d,f,v):(a={Gb:f,Xa:a,rb:v,Mb:I},A?(a.Ob="spawnThread",postMessage(a,I),0):$t(a))}function cr(a,d,f){return A?L(4,1,a,d,f):0}function At(a,d){if(A)return L(5,1,a,d)}var Gt=a=>{for(var d=0,f=0;f<a.length;++f){var v=a.charCodeAt(f);127>=v?d++:2047>=v?d+=2:55296<=v&&57343>=v?(d+=4,++f):d+=3}return d},dr=(a,d,f,v)=>{if(f>>>=0,!(0<v))return 0;var I=f;v=f+v-1;for(var R=0;R<a.length;++R){var G=a.charCodeAt(R);if(55296<=G&&57343>=G){var oe=a.charCodeAt(++R);G=65536+((G&1023)<<10)|oe&1023}if(127>=G){if(f>=v)break;d[f++>>>0]=G}else{if(2047>=G){if(f+1>=v)break;d[f++>>>0]=192|G>>6}else{if(65535>=G){if(f+2>=v)break;d[f++>>>0]=224|G>>12}else{if(f+3>=v)break;d[f++>>>0]=240|G>>18,d[f++>>>0]=128|G>>12&63}d[f++>>>0]=128|G>>6&63}d[f++>>>0]=128|G&63}}return d[f>>>0]=0,f-I},pr=(a,d,f)=>dr(a,i(),d,f);function fr(a,d){if(A)return L(6,1,a,d)}function mr(a,d,f){if(A)return L(7,1,a,d,f)}function hr(a,d,f){return A?L(8,1,a,d,f):0}function It(a,d){if(A)return L(9,1,a,d)}function Vt(a,d,f){if(A)return L(10,1,a,d,f)}function Ut(a,d,f,v){if(A)return L(11,1,a,d,f,v)}function Nt(a,d,f,v){if(A)return L(12,1,a,d,f,v)}function Ft(a,d,f,v){if(A)return L(13,1,a,d,f,v)}function Ht(a){if(A)return L(14,1,a)}function Lt(a,d){if(A)return L(15,1,a,d)}function jt(a,d,f){if(A)return L(16,1,a,d,f)}var Kt=a=>{if(!Be)try{if(a(),!Le())try{A?Xr(xe):xt(xe)}catch(d){d instanceof ht||d=="unwind"||w(1,d)}}catch(d){d instanceof ht||d=="unwind"||w(1,d)}};function Tt(a){a>>>=0,typeof Atomics.Nb=="function"&&(Atomics.Nb(n(),a>>2,a).value.then(Ot),a+=128,Atomics.store(n(),a>>2,1))}o.__emscripten_thread_mailbox_await=Tt;function Ot(){var a=wr();a&&(Tt(a),Kt(()=>Kn()))}o.checkMailbox=Ot;var Ye=a=>a%4===0&&(a%100!==0||a%400===0),qt=[0,31,60,91,121,152,182,213,244,274,305,335],l=[0,31,59,90,120,151,181,212,243,273,304,334];function p(a,d,f,v,I,R,G,oe){return A?L(17,1,a,d,f,v,I,R,G,oe):-52}function h(a,d,f,v,I,R,G){if(A)return L(18,1,a,d,f,v,I,R,G)}var S=a=>{var d=Gt(a)+1,f=qr(d);return f&&pr(a,f,d),f},T=[],U=(a,d)=>{T.length=0;var f;for(d>>=2;f=i()[a++>>>0];)d+=f!=105&d,T.push(f==105?n()[d>>>0]:c()[d++>>>1]),++d;return T},H=a=>{var d=Jr();return a=a(),vr(d),a};function L(a,d){var f=arguments.length-2,v=arguments;return H(()=>{for(var I=Zr(8*f),R=I>>3,G=0;G<f;G++){var oe=v[2+G];c()[R+G>>>0]=oe}return jn(a,f,I,d)})}var X=[],J={},Q=()=>{if(!de){var a={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:b||"./this.program"},d;for(d in J)J[d]===void 0?delete a[d]:a[d]=J[d];var f=[];for(d in a)f.push(`${d}=${a[d]}`);de=f}return de},de;function me(a,d){if(A)return L(19,1,a,d);a>>>=0,d>>>=0;var f=0;return Q().forEach(function(v,I){var R=d+f;for(I=s()[a+4*I>>2>>>0]=R,R=0;R<v.length;++R)r()[I++>>0>>>0]=v.charCodeAt(R);r()[I>>0>>>0]=0,f+=v.length+1}),0}function O(a,d){if(A)return L(20,1,a,d);a>>>=0,d>>>=0;var f=Q();s()[a>>2>>>0]=f.length;var v=0;return f.forEach(function(I){v+=I.length+1}),s()[d>>2>>>0]=v,0}function se(a){return A?L(21,1,a):52}function ge(a,d,f,v){return A?L(22,1,a,d,f,v):52}function et(a,d,f,v,I){return A?L(23,1,a,d,f,v,I):70}var gr=[null,[],[]];function Wn(a,d,f,v){if(A)return L(24,1,a,d,f,v);d>>>=0,f>>>=0,v>>>=0;for(var I=0,R=0;R<f;R++){var G=s()[d>>2>>>0],oe=s()[d+4>>2>>>0];d+=8;for(var te=0;te<oe;te++){var ee=i()[G+te>>>0],ne=gr[a];ee===0||ee===10?((a===1?M:q)(kt(ne,0)),ne.length=0):ne.push(ee)}I+=oe}return s()[v>>2>>>0]=I,0}var zn=[31,29,31,30,31,30,31,31,30,31,30,31],Gn=[31,28,31,30,31,30,31,31,30,31,30,31];function Xs(a){var d=Array(Gt(a)+1);return dr(a,d,0,d.length),d}var Js=(a,d)=>{r().set(a,d>>>0)};function Vn(a,d,f,v){function I(E,ue,ye){for(E=typeof E=="number"?E.toString():E||"";E.length<ue;)E=ye[0]+E;return E}function R(E,ue){return I(E,ue,"0")}function G(E,ue){function ye(ro){return 0>ro?-1:0<ro?1:0}var yt;return(yt=ye(E.getFullYear()-ue.getFullYear()))===0&&(yt=ye(E.getMonth()-ue.getMonth()))===0&&(yt=ye(E.getDate()-ue.getDate())),yt}function oe(E){switch(E.getDay()){case 0:return new Date(E.getFullYear()-1,11,29);case 1:return E;case 2:return new Date(E.getFullYear(),0,3);case 3:return new Date(E.getFullYear(),0,2);case 4:return new Date(E.getFullYear(),0,1);case 5:return new Date(E.getFullYear()-1,11,31);case 6:return new Date(E.getFullYear()-1,11,30)}}function te(E){var ue=E.Za;for(E=new Date(new Date(E.$a+1900,0,1).getTime());0<ue;){var ye=E.getMonth(),yt=(Ye(E.getFullYear())?zn:Gn)[ye];if(ue>yt-E.getDate())ue-=yt-E.getDate()+1,E.setDate(1),11>ye?E.setMonth(ye+1):(E.setMonth(0),E.setFullYear(E.getFullYear()+1));else{E.setDate(E.getDate()+ue);break}}return ye=new Date(E.getFullYear()+1,0,4),ue=oe(new Date(E.getFullYear(),0,4)),ye=oe(ye),0>=G(ue,E)?0>=G(ye,E)?E.getFullYear()+1:E.getFullYear():E.getFullYear()-1}a>>>=0,d>>>=0,f>>>=0,v>>>=0;var ee=n()[v+40>>2>>>0];v={Kb:n()[v>>2>>>0],Jb:n()[v+4>>2>>>0],cb:n()[v+8>>2>>>0],ib:n()[v+12>>2>>>0],eb:n()[v+16>>2>>>0],$a:n()[v+20>>2>>>0],Wa:n()[v+24>>2>>>0],Za:n()[v+28>>2>>>0],Tb:n()[v+32>>2>>>0],Ib:n()[v+36>>2>>>0],Lb:ee?We(ee):""},f=We(f),ee={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ne in ee)f=f.replace(new RegExp(ne,"g"),ee[ne]);var fe="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),be="January February March April May June July August September October November December".split(" ");ee={"%a":E=>fe[E.Wa].substring(0,3),"%A":E=>fe[E.Wa],"%b":E=>be[E.eb].substring(0,3),"%B":E=>be[E.eb],"%C":E=>R((E.$a+1900)/100|0,2),"%d":E=>R(E.ib,2),"%e":E=>I(E.ib,2," "),"%g":E=>te(E).toString().substring(2),"%G":E=>te(E),"%H":E=>R(E.cb,2),"%I":E=>(E=E.cb,E==0?E=12:12<E&&(E-=12),R(E,2)),"%j":E=>{for(var ue=0,ye=0;ye<=E.eb-1;ue+=(Ye(E.$a+1900)?zn:Gn)[ye++]);return R(E.ib+ue,3)},"%m":E=>R(E.eb+1,2),"%M":E=>R(E.Jb,2),"%n":()=>`\n`,"%p":E=>0<=E.cb&&12>E.cb?"AM":"PM","%S":E=>R(E.Kb,2),"%t":()=>"	","%u":E=>E.Wa||7,"%U":E=>R(Math.floor((E.Za+7-E.Wa)/7),2),"%V":E=>{var ue=Math.floor((E.Za+7-(E.Wa+6)%7)/7);if(2>=(E.Wa+371-E.Za-2)%7&&ue++,ue)ue==53&&(ye=(E.Wa+371-E.Za)%7,ye==4||ye==3&&Ye(E.$a)||(ue=1));else{ue=52;var ye=(E.Wa+7-E.Za-1)%7;(ye==4||ye==5&&Ye(E.$a%400-1))&&ue++}return R(ue,2)},"%w":E=>E.Wa,"%W":E=>R(Math.floor((E.Za+7-(E.Wa+6)%7)/7),2),"%y":E=>(E.$a+1900).toString().substring(2),"%Y":E=>E.$a+1900,"%z":E=>{E=E.Ib;var ue=0<=E;return E=Math.abs(E)/60,(ue?"+":"-")+("0000"+(E/60*100+E%60)).slice(-4)},"%Z":E=>E.Lb,"%%":()=>"%"},f=f.replace(/%%/g,"\\0\\0");for(ne in ee)f.includes(ne)&&(f=f.replace(new RegExp(ne,"g"),ee[ne](v)));return f=f.replace(/\\0\\0/g,"%"),ne=Xs(f),ne.length>d?0:(Js(ne,a),ne.length-1)}function yr(a){try{a()}catch(d){je(d)}}function Zs(a){var d={},f;for(f in a)(function(v){var I=a[v];d[v]=typeof I=="function"?function(){br.push(v);try{return I.apply(null,arguments)}finally{Be||(br.pop()===v||je(),tt&&dt===1&&br.length===0&&(dt=0,He+=1,yr(Zn),typeof Fibers<"u"&&Fibers.Ub()))}}:I})(f);return d}var dt=0,tt=null,Un=0,br=[],Nn={},Fn={},Qs=0,Kr=null,eu=[];function tu(){return new Promise((a,d)=>{Kr={resolve:a,reject:d}})}function ru(){var a=qr(65548),d=a+12;s()[a>>2>>>0]=d,s()[a+4>>2>>>0]=d+65536,d=br[0];var f=Nn[d];return f===void 0&&(f=Qs++,Nn[d]=f,Fn[f]=d),d=f,n()[a+8>>2>>>0]=d,a}function nu(){var a=n()[tt+8>>2>>>0];return a=K[Fn[a]],--He,a()}function ou(a){if(!Be){if(dt===0){var d=!1,f=!1;a((v=0)=>{if(!Be&&(Un=v,d=!0,f)){dt=2,yr(()=>Qn(tt)),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.resume(),v=!1;try{var I=nu()}catch(oe){I=oe,v=!0}var R=!1;if(!tt){var G=Kr;G&&(Kr=null,(v?G.reject:G.resolve)(I),R=!0)}if(v&&!R)throw I}}),f=!0,d||(dt=1,tt=ru(),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.pause(),yr(()=>Jn(tt)))}else dt===2?(dt=0,yr(eo),Hn(tt),tt=null,eu.forEach(v=>Kt(v))):je(`invalid state: ${dt}`);return Un}}function au(a){return ou(d=>{a().then(d)})}re.gb();var iu=[null,lr,qe,Wt,cr,At,fr,mr,hr,It,Vt,Ut,Nt,Ft,Ht,Lt,jt,p,h,me,O,se,ge,et,Wn],su={r:function(a,d,f){return au(async()=>{await o.xb(a,d,f)})},b:function(a,d,f){throw a>>>=0,new Ne(a).gb(d>>>0,f>>>0),Dt=a,St++,Dt},P:function(a){Ln(a>>>0,!y,1,!$,131072,!1),re.lb()},n:function(a){a>>>=0,A?postMessage({cmd:"cleanupThread",thread:a}):Mt(a)},K:zt,g:cr,V:At,F:fr,H:mr,y:hr,T:It,L:Vt,S:Ut,p:Nt,G:Ft,D:Ht,U:Lt,E:jt,q:()=>!0,B:function(a,d){a>>>=0,a==d>>>0?setTimeout(()=>Ot()):A?postMessage({targetThread:a,cmd:"checkMailbox"}):(a=re.Qa[a])&&a.postMessage({cmd:"checkMailbox"})},N:function(){return-1},O:Tt,X:function(a){C&&re.Qa[a>>>0].ref()},u:function(a,d,f){a=d+2097152>>>0<4194305-!!a?(a>>>0)+4294967296*d:NaN,f>>>=0,a=new Date(1e3*a),n()[f>>2>>>0]=a.getUTCSeconds(),n()[f+4>>2>>>0]=a.getUTCMinutes(),n()[f+8>>2>>>0]=a.getUTCHours(),n()[f+12>>2>>>0]=a.getUTCDate(),n()[f+16>>2>>>0]=a.getUTCMonth(),n()[f+20>>2>>>0]=a.getUTCFullYear()-1900,n()[f+24>>2>>>0]=a.getUTCDay(),a=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,n()[f+28>>2>>>0]=a},v:function(a,d,f){a=d+2097152>>>0<4194305-!!a?(a>>>0)+4294967296*d:NaN,f>>>=0,a=new Date(1e3*a),n()[f>>2>>>0]=a.getSeconds(),n()[f+4>>2>>>0]=a.getMinutes(),n()[f+8>>2>>>0]=a.getHours(),n()[f+12>>2>>>0]=a.getDate(),n()[f+16>>2>>>0]=a.getMonth(),n()[f+20>>2>>>0]=a.getFullYear()-1900,n()[f+24>>2>>>0]=a.getDay(),d=(Ye(a.getFullYear())?qt:l)[a.getMonth()]+a.getDate()-1|0,n()[f+28>>2>>>0]=d,n()[f+36>>2>>>0]=-(60*a.getTimezoneOffset()),d=new Date(a.getFullYear(),6,1).getTimezoneOffset();var v=new Date(a.getFullYear(),0,1).getTimezoneOffset();a=(d!=v&&a.getTimezoneOffset()==Math.min(v,d))|0,n()[f+32>>2>>>0]=a},w:function(a){a>>>=0;var d=new Date(n()[a+20>>2>>>0]+1900,n()[a+16>>2>>>0],n()[a+12>>2>>>0],n()[a+8>>2>>>0],n()[a+4>>2>>>0],n()[a>>2>>>0],0),f=n()[a+32>>2>>>0],v=d.getTimezoneOffset(),I=new Date(d.getFullYear(),6,1).getTimezoneOffset(),R=new Date(d.getFullYear(),0,1).getTimezoneOffset(),G=Math.min(R,I);return 0>f?n()[a+32>>2>>>0]=+(I!=R&&G==v):0<f!=(G==v)&&(I=Math.max(R,I),d.setTime(d.getTime()+6e4*((0<f?G:I)-v))),n()[a+24>>2>>>0]=d.getDay(),f=(Ye(d.getFullYear())?qt:l)[d.getMonth()]+d.getDate()-1|0,n()[a+28>>2>>>0]=f,n()[a>>2>>>0]=d.getSeconds(),n()[a+4>>2>>>0]=d.getMinutes(),n()[a+8>>2>>>0]=d.getHours(),n()[a+12>>2>>>0]=d.getDate(),n()[a+16>>2>>>0]=d.getMonth(),n()[a+20>>2>>>0]=d.getYear(),a=d.getTime()/1e3,qn((st=a,1<=+Math.abs(st)?0<st?+Math.floor(st/4294967296)>>>0:~~+Math.ceil((st-+(~~st>>>0))/4294967296)>>>0:0)),a>>>0},s:p,t:h,A:function(a,d,f){function v(ee){return(ee=ee.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?ee[1]:"GMT"}a>>>=0,d>>>=0,f>>>=0;var I=new Date().getFullYear(),R=new Date(I,0,1),G=new Date(I,6,1);I=R.getTimezoneOffset();var oe=G.getTimezoneOffset(),te=Math.max(I,oe);s()[a>>2>>>0]=60*te,n()[d>>2>>>0]=+(I!=oe),a=v(R),d=v(G),a=S(a),d=S(d),oe<I?(s()[f>>2>>>0]=a,s()[f+4>>2>>>0]=d):(s()[f>>2>>>0]=d,s()[f+4>>2>>>0]=a)},e:()=>{je("")},c:function(a,d,f){return a>>>=0,d=U(d>>>0,f>>>0),mt[a].apply(null,d)},l:function(a,d,f){return a>>>=0,d=U(d>>>0,f>>>0),mt[a].apply(null,d)},o:function(){},k:function(){return Date.now()},W:()=>{throw He+=1,"unwind"},C:function(){return 4294901760},d:()=>performance.timeOrigin+performance.now(),i:function(){return C?(lo(),Et(uo)).cpus().length:navigator.hardwareConcurrency},M:function(a,d,f,v){for(re.Pb=d>>>0,X.length=f,d=v>>>0>>3,v=0;v<f;v++)X[v]=c()[d+v>>>0];return(0>a?mt[-a-1]:iu[a]).apply(null,X)},z:function(a){a>>>=0;var d=i().length;if(a<=d||4294901760<a)return!1;for(var f=1;4>=f;f*=2){var v=d*(1+.2/f);v=Math.min(v,a+100663296);var I=Math;v=Math.max(a,v);e:{I=I.min.call(I,4294901760,v+(65536-v%65536)%65536)-we.buffer.byteLength+65535>>>16;try{we.grow(I),pe();var R=1;break e}catch{}R=void 0}if(R)return!0}return!1},Q:me,R:O,J:xt,h:se,m:ge,x:et,j:Wn,a:we||o.wasmMemory,I:Vn,f:function(a,d,f,v){return Vn(a>>>0,d>>>0,f>>>0,v>>>0)}};(function(){function a(f,v){return f=f.exports,f=Zs(f),K=f=uu(f),re.mb.push(K.Da),Ee.unshift(K.Y),Se=v,Rt(),f}var d={a:su};if(ir(),o.instantiateWasm)try{return o.instantiateWasm(d,a)}catch(f){q("Module.instantiateWasm callback failed with error: "+f),g(f)}return sr(d,function(f){a(f.instance,f.module)}).catch(g),{}})(),o._OrtInit=(a,d)=>(o._OrtInit=K.Z)(a,d),o._OrtGetLastError=(a,d)=>(o._OrtGetLastError=K._)(a,d),o._OrtCreateSessionOptions=(a,d,f,v,I,R,G,oe,te,ee)=>(o._OrtCreateSessionOptions=K.$)(a,d,f,v,I,R,G,oe,te,ee),o._OrtAppendExecutionProvider=(a,d)=>(o._OrtAppendExecutionProvider=K.aa)(a,d),o._OrtAddFreeDimensionOverride=(a,d,f)=>(o._OrtAddFreeDimensionOverride=K.ba)(a,d,f),o._OrtAddSessionConfigEntry=(a,d,f)=>(o._OrtAddSessionConfigEntry=K.ca)(a,d,f),o._OrtReleaseSessionOptions=a=>(o._OrtReleaseSessionOptions=K.da)(a),o._OrtCreateSession=(a,d,f)=>(o._OrtCreateSession=K.ea)(a,d,f),o._OrtReleaseSession=a=>(o._OrtReleaseSession=K.fa)(a),o._OrtGetInputOutputCount=(a,d,f)=>(o._OrtGetInputOutputCount=K.ga)(a,d,f),o._OrtGetInputName=(a,d)=>(o._OrtGetInputName=K.ha)(a,d),o._OrtGetOutputName=(a,d)=>(o._OrtGetOutputName=K.ia)(a,d),o._OrtFree=a=>(o._OrtFree=K.ja)(a),o._OrtCreateTensor=(a,d,f,v,I,R)=>(o._OrtCreateTensor=K.ka)(a,d,f,v,I,R),o._OrtGetTensorData=(a,d,f,v,I)=>(o._OrtGetTensorData=K.la)(a,d,f,v,I),o._OrtReleaseTensor=a=>(o._OrtReleaseTensor=K.ma)(a),o._OrtCreateRunOptions=(a,d,f,v)=>(o._OrtCreateRunOptions=K.na)(a,d,f,v),o._OrtAddRunConfigEntry=(a,d,f)=>(o._OrtAddRunConfigEntry=K.oa)(a,d,f),o._OrtReleaseRunOptions=a=>(o._OrtReleaseRunOptions=K.pa)(a),o._OrtCreateBinding=a=>(o._OrtCreateBinding=K.qa)(a),o._OrtBindInput=(a,d,f)=>(o._OrtBindInput=K.ra)(a,d,f),o._OrtBindOutput=(a,d,f,v)=>(o._OrtBindOutput=K.sa)(a,d,f,v),o._OrtClearBoundOutputs=a=>(o._OrtClearBoundOutputs=K.ta)(a),o._OrtReleaseBinding=a=>(o._OrtReleaseBinding=K.ua)(a),o._OrtRunWithBinding=(a,d,f,v,I)=>(o._OrtRunWithBinding=K.va)(a,d,f,v,I),o._OrtRun=(a,d,f,v,I,R,G,oe)=>(o._OrtRun=K.wa)(a,d,f,v,I,R,G,oe),o._OrtEndProfiling=a=>(o._OrtEndProfiling=K.xa)(a),o._JsepOutput=(a,d,f)=>(o._JsepOutput=K.ya)(a,d,f),o._JsepGetNodeName=a=>(o._JsepGetNodeName=K.za)(a);var wr=o._pthread_self=()=>(wr=o._pthread_self=K.Aa)(),qr=o._malloc=a=>(qr=o._malloc=K.Ba)(a),Hn=o._free=a=>(Hn=o._free=K.Ca)(a);o.__emscripten_tls_init=()=>(o.__emscripten_tls_init=K.Da)();var Ln=o.__emscripten_thread_init=(a,d,f,v,I,R)=>(Ln=o.__emscripten_thread_init=K.Fa)(a,d,f,v,I,R);o.__emscripten_thread_crashed=()=>(o.__emscripten_thread_crashed=K.Ga)();var jn=(a,d,f,v)=>(jn=K.Ha)(a,d,f,v),Yr=a=>(Yr=K.Ia)(a),Xr=o.__emscripten_thread_exit=a=>(Xr=o.__emscripten_thread_exit=K.Ja)(a),Kn=o.__emscripten_check_mailbox=()=>(Kn=o.__emscripten_check_mailbox=K.Ka)(),qn=a=>(qn=K.La)(a),Yn=(a,d)=>(Yn=K.Ma)(a,d),Jr=()=>(Jr=K.Na)(),vr=a=>(vr=K.Oa)(a),Zr=a=>(Zr=K.Pa)(a),Xn=o.dynCall_ii=(a,d)=>(Xn=o.dynCall_ii=K.Ra)(a,d),Jn=a=>(Jn=K.Sa)(a),Zn=()=>(Zn=K.Ta)(),Qn=a=>(Qn=K.Ua)(a),eo=()=>(eo=K.Va)();o.___start_em_js=1430875,o.___stop_em_js=1431036;function uu(a){a=Object.assign({},a);var d=v=>()=>v()>>>0,f=v=>I=>v(I)>>>0;return a.__errno_location=d(a.__errno_location),a.pthread_self=d(a.pthread_self),a.malloc=f(a.malloc),a.stackSave=d(a.stackSave),a.stackAlloc=f(a.stackAlloc),a}o.keepRuntimeAlive=Le,o.wasmMemory=we,o.stackAlloc=Zr,o.stackSave=Jr,o.stackRestore=vr,o.UTF8ToString=We,o.stringToUTF8=pr,o.lengthBytesUTF8=Gt,o.ExitStatus=ht,o.PThread=re;var $r;lt=function a(){$r||to(),$r||(lt=a)};function to(){function a(){if(!$r&&($r=!0,o.calledRun=!0,!Be)&&(A||Ct(Ee),m(o),o.onRuntimeInitialized&&o.onRuntimeInitialized(),!A)){if(o.postRun)for(typeof o.postRun=="function"&&(o.postRun=[o.postRun]);o.postRun.length;){var d=o.postRun.shift();Te.unshift(d)}Ct(Te)}}if(!(0<Ue))if(A)m(o),A||Ct(Ee),startWorker(o);else{if(o.preRun)for(typeof o.preRun=="function"&&(o.preRun=[o.preRun]);o.preRun.length;)Ve.unshift(o.preRun.shift());Ct(Ve),0<Ue||(o.setStatus?(o.setStatus("Running..."),setTimeout(function(){setTimeout(function(){o.setStatus("")},1),a()},1)):a())}}if(o.preInit)for(typeof o.preInit=="function"&&(o.preInit=[o.preInit]);0<o.preInit.length;)o.preInit.pop()();return to(),t.ready}})();typeof po=="object"&&typeof an=="object"?an.exports=co:typeof define=="function"&&define.amd&&define([],()=>co)});var mo=Yt((Mc,gu)=>{gu.exports=\'"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>(0,eval)(fs.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason??e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err("worker.js received unknown command "+e.data.cmd),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed&&Module.__emscripten_thread_crashed(),a}}self.onmessage=handleMessage;\\n\'});var ln,Jt,Zt,Sr,Qt,vo,cn,ke=j(()=>{"use strict";ln=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},Jt=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},Zt=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],Sr=e=>{switch(e){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Qt=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},vo=e=>e==="float32"||e==="int32"||e==="int64"||e==="bool"||e==="float16"||e==="uint32",cn=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var Au,Iu,$o,xo,Co,Tu,Oe,pt=j(()=>{"use strict";ke();Au=["V","I","W","E","F"],Iu=(e,t)=>{console.log(`[${Au[e]},${new Date().toISOString()}]${t}`)},Co=(e,t)=>{$o=e,xo=t},Tu=(e,t)=>{let r=Qt(e),i=Qt($o);r>=i&&Iu(r,typeof t=="function"?t():t)},Oe=(...e)=>{xo&&Tu(...e)}});var So,Ao=j(()=>{"use strict";ke();So=(e,t)=>new(Sr(t))(e)});var Io=j(()=>{"use strict"});var Ar,Ou,To,pn,dn,Oo,Eo=j(()=>{"use strict";pt();Io();Ar=e=>Math.ceil(e/16)*16,Ou=1,To=()=>Ou++,pn=async(e,t,r,i)=>{let n=Ar(r),s=e.device.createBuffer({size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let u=e.getCommandEncoder();e.endComputePass(),u.copyBufferToBuffer(t,0,s,0,n),e.flush(),await s.mapAsync(GPUMapMode.READ);let c=s.getMappedRange();if(i){let o=i();return o.set(new Uint8Array(c,0,r)),o}else return new Uint8Array(c.slice(0,r))}finally{s.destroy()}},dn=class{constructor(t){this.backend=t;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map}upload(t,r){let i=r.buffer,n=r.byteOffset,s=r.byteLength,u=Ar(s),c=this.storageCache.get(t);if(!c)throw new Error("gpu data for uploading does not exist");if(c.originalSize!==s)throw new Error(`inconsistent data size. gpu data size=${c.originalSize}, data size=${s}`);let o=this.backend.device.createBuffer({mappedAtCreation:!0,size:u,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),m=o.getMappedRange();new Uint8Array(m).set(new Uint8Array(i,n,s)),o.unmap();let g=this.backend.getCommandEncoder();this.backend.endComputePass(),g.copyBufferToBuffer(o,0,c.gpuData.buffer,0,u),Oe("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(o)}memcpy(t,r){let i=this.storageCache.get(t);if(!i)throw new Error("source gpu data for memcpy does not exist");let n=this.storageCache.get(r);if(!n)throw new Error("destination gpu data for memcpy does not exist");if(i.originalSize!==n.originalSize)throw new Error("inconsistent source and destination gpu data size");let s=Ar(i.originalSize),u=this.backend.getCommandEncoder();this.backend.endComputePass(),u.copyBufferToBuffer(i.gpuData.buffer,0,n.gpuData.buffer,0,s)}registerExternalBuffer(t,r,i){let n;if(i){if(n=this.externalBuffers.get(i),n===void 0)throw new Error("previous buffer is not registered");if(t===i)return Oe("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${n}, buffer is the same, skip.`),n;this.externalBuffers.delete(i)}else n=To();return this.storageCache.set(n,{gpuData:{id:n,type:0,buffer:t},originalSize:r}),this.externalBuffers.set(t,n),Oe("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${n}, registered.`),n}unregisterExternalBuffer(t){let r=this.externalBuffers.get(t);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(t),Oe("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let i=Ar(t),n,s=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,u=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(s||u){let o=s?this.freeBuffers:this.freeUniformBuffers,m=o.get(i);m||(m=[],o.set(i,m)),m.length>0?n=m.pop():n=this.backend.device.createBuffer({size:i,usage:r})}else n=this.backend.device.createBuffer({size:i,usage:r});let c={id:To(),type:0,buffer:n};return this.storageCache.set(c.id,{gpuData:c,originalSize:t}),Oe("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${c.id}`),c}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r=this.storageCache.get(t);if(!r)throw new Error("releasing data does not exist");return Oe("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(t,r){let i=this.storageCache.get(t);if(!i)throw new Error("data does not exist");await pn(this.backend,i.gpuData.buffer,i.originalSize,r)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();this.buffersForUploadingPending=[];for(let t of this.buffersPending)(t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(t.size).push(t):(t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(t.size).push(t):t.destroy();this.buffersPending=[]}dispose(){this.freeBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map}},Oo=(...e)=>new dn(...e)});var fn,ie,Pe=j(()=>{"use strict";fn=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this._cacheKey||(this._cacheKey=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this._cacheKey}},ie=e=>new fn(e)});var mn,rt,k,bt,Ir,Tr,Or,he=j(()=>{"use strict";mn=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},rt=class{static calcShape(t,r,i=!1){let n=t.length,s=r.length;if(n===0)return r;if(s===0)return t;let u=Math.max(t.length,r.length),c=new Array(u);if(i){if(n<2||s<2)return;let o=mn.calcMatMulShape([t[n-2],t[n-1]],[r[s-2],r[s-1]]);if(o===void 0)return;[c[u-2],c[u-1]]=o}for(let o=i?3:1;o<=u;o++){let m=n-o<0?1:t[n-o],g=s-o<0?1:r[s-o];if(m!==g&&m>1&&g>1)return;c[u-o]=Math.max(m,g)}return c}static isValidBroadcast(t,r){let i=t.length,n=r.length;if(i>n)return!1;for(let s=1;s<=i;s++)if(t[i-s]!==1&&t[i-s]!==r[n-s])return!1;return!0}},k=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,i){let n=1;for(let s=r;s<i;s++){if(t[s]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");n*=t[s]}return n}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let i=new Array(r);i[r-1]=1,i[r-2]=t[r-1];for(let n=r-3;n>=0;--n)i[n]=i[n+1]*t[n+1];return i}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(i=>this.normalizeAxis(i,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(i=>t[i]):t.slice().reverse()}static padShape(t,r){let i=t.length;return t.map((n,s)=>n+r[s]+r[s+i])}static areEqual(t,r){return t.length!==r.length?!1:t.every((i,n)=>i===r[n])}},bt=class e{static adjustPoolAttributes(t,r,i,n,s,u){if(!t&&i.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let c=0;c<r.length-2;c++)c>=i.length?i.push(r[c+2]):i[c]=r[c+2];for(let c=0;c<i.length;c++)if(c<n.length){if(n[c]<0)throw new Error("strides should be greater than or equal to 1")}else n.push(1);for(let c=0;c<i.length;c++)if(c<s.length){if(s[c]<0)throw new Error("dilations should be greater than or equal to 1")}else s.push(1);for(let c=0;c<i.length*2;c++)if(c<u.length){if(u[c]<0)throw new Error("pad should be greater than or equal to 1")}else u.push(0);for(let c=0;c<i.length;c++){if(i[c]<=0)throw new Error("kernel shapes need to be greater than 0");if(u[c]>=i[c]||u[c+i.length]>=i[c])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,i,n,s,u,c){if(c){if(s.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(n.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let o=0;o<t.length-2;o++)e.adjustPadAndReturnShape(t[o+(u?1:2)],r[o],i[o],n[o],s,o,o+t.length-2,c)}}static computePoolOutputShape(t,r,i,n,s,u,c){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let o=[r[0],r[1]];return e.computeShapeHelper(t,r,o,i,n,s,u,c),o}static computeConvOutputShape(t,r,i,n,s,u,c){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let o=[t[0],r[0]];return e.computeShapeHelper(!1,t,o,i,n,s,u,c),o}static computeShapeHelper(t,r,i,n,s,u,c,o){if(t)for(let m=0;m<r.length-2;m++)i.push(1);else for(let m=0;m<r.length-2;m++)i.push(e.adjustPadAndReturnShape(r[m+2],n[m],s[m],u[m],c,m,m+r.length-2,o))}static adjustPadAndReturnShape(t,r,i,n,s,u,c,o){let m=i*(n-1)+1;if(o&&o!=="NOTSET")switch(o){case"VALID":return s[u]=0,s[c]=0,Math.floor((t-m)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(i!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let x=((t+r-1)/r-1)*r+n-t;return s[u]=Math.floor(o==="SAME_LOWER"?(x+1)/2:x/2),s[c]=x-s[u],Math.floor((t+x-n)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+s[u]+s[c]-m)/r+1)}},Ir=class{static getShapeOfGemmResult(t,r,i,n,s){if(t.length!==2||i.length!==2)throw new Error("shape need to be of size 2");let u,c,o;r?(u=t[1],c=t[0]):(u=t[0],c=t[1]);let m=-1;if(n?(o=i[0],m=1):(o=i[1],m=0),i[m]!==c)throw new Error("dimension mismatch");if(u<=0||o<=0||c<=0)throw new Error("invalid shape specified");if(s&&!rt.isValidBroadcast(s,[u,o]))throw new Error("gemm: invalid bias shape for broadcast");return[u,o,c]}},Tr=-34028234663852886e22,Or=34028234663852886e22});var Eu,_o,Re,gn,ut,Xe,wt,ft,Po,F,Z,hn,Ro,yn,Bo,ve=j(()=>{"use strict";ke();he();Eu=64,_o=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},Re=(e,t=1)=>{let r=_o(e,t);return typeof r=="string"?r:r[0]},gn=e=>[{type:"uint32",data:e},{type:"uint32",data:k.computeStrides(e)}],ut=e=>e%4===0?4:e%2===0?2:1,Xe=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,wt=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}f(${r})`,ft=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,Po=(e,t,r,i,n)=>{let s=typeof r=="number",u=s?r:r.length,c=[...new Array(u).keys()],o=u<2?"u32":u<=4?`vec${u}<u32>`:`array<u32, ${u}>`,m=_o(t,n),g=typeof m=="string"?m:m[1],x=typeof m=="string"?m:m[0],b={indices:o,value:g,storage:x,tensor:t},w=V=>typeof V=="string"?V:`${V}u`,$={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},y=s?"uniforms.":"",C=`${y}${e}_shape`,A=`${y}${e}_strides`,P="";for(let V=0;V<u-1;V++)P+=`\n    let dim${V} = current / ${A}[${V}];\n    let rest${V} = current % ${A}[${V}];\n    indices[${V}] = dim${V};\n    current = rest${V};\n    `;P+=`indices[${u-1}] = current;`;let W=u<2?"":`\n  fn o2i_${e}(offset: u32) -> ${b.indices} {\n    var indices: ${b.indices};\n    var current = offset;\n    ${P}\n    return indices;\n  }`,B=V=>($.offsetToIndices=!0,u<2?V:`o2i_${e}(${V})`),D=[];if(u>=2)for(let V=u-1;V>=0;V--)D.push(`${A}[${V}] * (indices[${V}])`);let _=u<2?"":`\n  fn i2o_${e}(indices: ${b.indices}) -> u32 {\n    return ${D.join("+")};\n  }`,z=V=>($.indicesToOffset=!0,u<2?V:`i2o_${e}(${V})`),N=(...V)=>u===0?"0u":`${b.indices}(${V.map(w).join(",")})`,Y=(V,ce)=>u<2?`${V}`:`${V}[${ce}]`,le=(V,ce,pe)=>u<2?`${V}=${pe};`:`${V}[${ce}]=${pe};`,M={},q=(V,ce)=>{$.broadcastedIndicesToOffset=!0;let pe=`${ce.name}broadcastedIndicesTo${e}Offset`;if(pe in M)return`${pe}(${V})`;let ze=[];for(let Ve=u-1;Ve>=0;Ve--){let Ee=ce.indicesGet("outputIndices",Ve+ce.rank-u);ze.push(`${Y(A,Ve)} * (${Ee} % ${Y(C,Ve)})`)}return M[pe]=`fn ${pe}(outputIndices: ${ce.type.indices}) -> u32 {\n             return ${ze.length>0?ze.join("+"):"0u"};\n           }`,`${pe}(${V})`},Ce=(V,ce)=>(()=>{if(b.storage===b.value)return`${e}[${V}]=${ce};`;if(b.storage==="vec2<u32>"&&b.value==="i32")return`${e}[${V}]=vec2<u32>(u32(${ce}), select(0u, 0xFFFFFFFFu, ${ce} < 0));`;if(b.storage==="vec2<u32>"&&b.value==="u32")return`${e}[${V}]=vec2<u32>(u32(${ce}), 0u);`;if(b.storage==="u32"&&b.value==="vec4<bool>")return`${e}[${V}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ce}));`;throw new Error(`not supported combination of storage type ${b.storage} and value type ${b.value} yet`)})(),ae=V=>(()=>{if(b.storage===b.value)return`${e}[${V}]`;if(b.storage==="vec2<u32>"&&b.value==="i32")return`i32(${e}[${V}].x)`;if(b.storage==="vec2<u32>"&&b.value==="u32")return`u32(${e}[${V}].x)`;if(b.storage==="u32"&&b.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${V}] & 0xFFu), bool(${e}[${V}] & 0xFF00u), bool(${e}[${V}] & 0xFF0000u), bool(${e}[${V}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${b.storage} and value type ${b.value} yet`)})(),we=u<2?"":`\n  fn get_${e}ByIndices(indices: ${b.indices}) -> ${g} {\n    return ${ae(`i2o_${e}(indices)`)};\n  }`,K=u<2?"":(()=>{let V=c.map(pe=>`d${pe}: u32`).join(", "),ce=c.map(pe=>`d${pe}`).join(", ");return`\n  fn get_${e}(${V}) -> ${g} {\n    return get_${e}ByIndices(${N(ce)});\n  }`})(),Se=(...V)=>{if(V.length!==u)throw new Error(`indices length must be ${u}`);let ce=V.map(w).join(",");return u===0?ae("0u"):u===1?ae(ce[0]):($.get=!0,$.getByIndices=!0,$.indicesToOffset=!0,`get_${e}(${ce})`)},Be=V=>u<2?ae(V):($.getByIndices=!0,$.indicesToOffset=!0,`get_${e}ByIndices(${V})`),xe=u<2?"":`\n  fn set_${e}ByIndices(indices: ${b.indices}, value: ${g}) {\n    ${Ce(`i2o_${e}(indices)`,"value")}\n  }`,Ie=u<2?"":(()=>{let V=c.map(pe=>`d${pe}: u32`).join(", "),ce=c.map(pe=>`d${pe}`).join(", ");return`\n  fn set_${e}(${V}, value: ${g}) {\n    set_${e}ByIndices(${N(ce)}, value);\n  }`})();return{impl:()=>{let V=[];return s||(V.push(`const ${C} = ${b.indices}(${r.join(",")});`),V.push(`const ${A} = ${b.indices}(${k.computeStrides(r).join(",")});`)),$.offsetToIndices&&V.push(W),$.indicesToOffset&&V.push(_),$.broadcastedIndicesToOffset&&Object.values(M).forEach(ce=>V.push(ce)),$.set&&V.push(Ie),$.setByIndices&&V.push(xe),$.get&&V.push(K),$.getByIndices&&V.push(we),V.join(`\n`)},type:b,offsetToIndices:B,indicesToOffset:z,broadcastedIndicesToOffset:q,indices:N,indicesGet:Y,indicesSet:le,set:(...V)=>{if(V.length!==u+1)throw new Error(`indices length must be ${u}`);let ce=V[u];if(typeof ce!="string")throw new Error("value must be string");let pe=V.slice(0,u).map(w).join(",");return u===0?Ce("0u",ce):u===1?Ce(pe[0],ce):($.set=!0,$.setByIndices=!0,$.indicesToOffset=!0,`set_${e}(${pe}, ${ce})`)},setByOffset:Ce,setByIndices:(V,ce)=>u<2?Ce(V,ce):($.setByIndices=!0,$.indicesToOffset=!0,`set_${e}ByIndices(${V}, ${ce});`),get:Se,getByOffset:ae,getByIndices:Be,usage:i?"input":"output",name:e,strides:A,shape:C,rank:u}},F=(e,t,r,i=1)=>Po(e,t,r,!0,i),Z=(e,t,r,i=1)=>Po(e,t,r,!1,i),hn=class{constructor(t){this.normalizedDispatchGroup=t;this.indicesHelpers=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=Eu){let r=typeof t=="number"?t:t[0],i=typeof t=="number"?1:t[1],n=typeof t=="number"?1:t[2],s=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,u=s?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_index) local_index : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>`,c=s?"let global_idx = global_id.x;":`let global_idx = (workgroup_id.z * ${this.normalizedDispatchGroup[0]*this.normalizedDispatchGroup[1]}u +\n          workgroup_id.y * ${this.normalizedDispatchGroup[0]}u + workgroup_id.x) * ${r*i*n}u + local_index;`;return`@compute @workgroup_size(${r}, ${i}, ${n})\n  fn main(${u}) {\n    ${c}\n  `}declareVariable(t,r){this.indicesHelpers.push(t),t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:t.type.indices}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:t.type.indices});let i=t.usage==="input"?"read":"read_write",n=t.type.storage;return`@group(0) @binding(${r}) var<storage, ${i}> ${t.name}: array<${n}>;`}declareVariables(...t){return t.map(r=>this.declareVariable(r,this.variableIndex++)).join(`\n`)}registerUniform(t,r){return this.uniforms.push({name:t,type:r}),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:r,type:i}of this.uniforms)t.push(`${r}:${i}`);return`\n      struct Uniforms { ${t.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.indicesHelpers.map(t=>t.impl()).join(`\n`)}},Ro=e=>new hn(e),yn=(e,t)=>{let r=e.length,i=[];for(let n=0;n<r;n++){let s=r-1-n,u=e[s]||1;(t[t.length-1-n]||1)>1&&u===1&&i.unshift(s)}return i},Bo=e=>e<=4});var nt,_u,Er,Pu,ot,Mo,ko,Do,Wo,zo,Go,Vo,Uo,No,Fo,Je,bn=j(()=>{"use strict";he();Pe();ve();nt=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},_u=e=>["","",`var value = ${e.getByOffset("inputOffset")};`,""],Er=(e,t,r,i,n,s,u=!1,c=!1)=>{let o=[],m=r[0].dims,g=k.normalizeAxes(n,r[0].dims.length),x=!c&&g.length===0;m.forEach((z,N)=>{x||g.indexOf(N)>=0?u&&o.push(1):o.push(z)});let b=[],w=F("_A",r[0].dataType,m),$=Z("output",s,o),y=i(w,$,g),C=`inputOffset = ${w.indicesToOffset("inputIndices")};`,A=`let ${C};`,P=`var ${C};`,W=y[1]===""?"":P,B=(y[1]===""?A:C)+`\n`+y[2];for(let z=0,N=0;z<r[0].dims.length;z++)x||g.indexOf(z)>=0?(u&&N++,B=`for(var j${z}: u32 = 0; j${z} < ${r[0].dims[z]}; j${z}++) {\n                ${y[2].includes("lastIndex")?`let lastIndex = j${z};`:""}\n                ${w.indicesSet("inputIndices",z,`j${z}`)}\n                ${B}\n              }`):(b.push(`${w.indicesSet("inputIndices",z,$.indicesGet("outputIndices",N))};`),N++);let D=k.size(o);return{name:e,shaderCache:t,getShaderSource:z=>`\n        ${z.declareVariables(w,$)}\n\n        ${z.mainStart()}\n          ${z.guardAgainstOutOfBoundsWorkgroupSizes(D)}\n          var inputIndices: ${w.type.indices};\n          let outputIndices = ${$.offsetToIndices("global_idx")};\n\n          ${b.join(`\n`)}\n          ${y[0]}       // init ops for reduce max/min\n          ${W}\n          ${y[1]}\n          ${B}\n          ${y[3]}\n          ${y.length===4?$.setByOffset("global_idx","value"):y.slice(4).join(`\n`)}\n        }`,getRunData:()=>({outputs:[{dims:o,dataType:s}],dispatchGroup:{x:Math.ceil(D/64)}})}},Pu=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(i=>r.push(Number(i))),ie({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},ot=(e,t,r,i)=>{let n=e.inputs,s=n.length===1?r:Pu(n,r);e.compute(Er(t,{hint:s.cacheKey},[n[0]],s.noopWithEmptyAxes&&s.axes.length===0?_u:i,s.axes,n[0].dataType,s.keepDims,s.noopWithEmptyAxes),{inputs:[0]})},Mo=(e,t)=>{nt(e.inputs),ot(e,"ReduceLogSum",t,(i,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${i.getByOffset("inputOffset")};`,"value = log(value);"])},ko=(e,t)=>{nt(e.inputs),ot(e,"ReduceL1",t,(i,n)=>[`var value = ${n.type.storage}(0);`,"",`value += abs(${i.getByOffset("inputOffset")});`,""])},Do=(e,t)=>{nt(e.inputs),ot(e,"ReduceL2",t,(i,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${i.getByOffset("inputOffset")}; value += (t * t);`,"value = sqrt(value);"])},Wo=(e,t)=>{nt(e.inputs),ot(e,"ReduceLogSumExp",t,(i,n)=>[`var value = ${n.type.storage}(0);`,"",`value += exp(${i.getByOffset("inputOffset")});`,"value = log(value);"])},zo=(e,t)=>{nt(e.inputs),ot(e,"ReduceMax",t,(i,n,s)=>{let u=[];for(let c=0;c<i.rank;c++)(s.indexOf(c)>=0||s.length===0)&&u.push(i.indicesSet("inputIndices",c,0));return[`${u.join(`\n`)}`,`var value = ${i.getByOffset("inputOffset")};`,`value = max(value, ${i.getByOffset("inputOffset")});`,""]})},Go=(e,t)=>{nt(e.inputs),ot(e,"ReduceMean",t,(i,n,s)=>{let u=1;for(let c=0;c<i.rank;c++)(s.indexOf(c)>=0||s.length===0)&&(u*=e.inputs[0].dims[c]);return["var sum = f32(0);","",`sum += f32(${i.getByOffset("inputOffset")});`,`let value = ${n.type.value}(sum / ${u});`]})},Vo=(e,t)=>{nt(e.inputs),ot(e,"ReduceMin",t,(i,n,s)=>{let u=[];for(let c=0;c<i.rank;c++)(s.indexOf(c)>=0||s.length===0)&&u.push(`inputIndices[${c}] = 0;`);return[`${u.join(`\n`)}`,`var value = ${i.getByOffset("inputOffset")};`,`value = min(value, ${i.getByOffset("inputOffset")});`,""]})},Uo=(e,t)=>{nt(e.inputs),ot(e,"ReduceProd",t,(i,n)=>[`var value = ${n.type.storage}(1);`,"",`value *= ${i.getByOffset("inputOffset")};`,""])},No=(e,t)=>{nt(e.inputs),ot(e,"ReduceSum",t,(i,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${i.getByOffset("inputOffset")};`,""])},Fo=(e,t)=>{nt(e.inputs),ot(e,"ReduceSumSquare",t,(i,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${i.getByOffset("inputOffset")}; value += t * t;`,""])},Je=e=>ie(e)});var Ho,Lo,jo,Ko,wn,qo=j(()=>{"use strict";ke();Pe();bn();Ho=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},Lo=(e,t)=>ie({axis:t.axis,keepDims:t.keepDims,selectLastIndex:t.selectLastIndex}),jo=(e,t)=>{Ho(e.inputs);let r=(n,s,u)=>{let c=[];for(let o=0;o<n.rank;o++)(u.indexOf(o)>=0||u.length===0)&&c.push(`inputIndices[${o}] = 0;`);return[`${c.join(`\n`)}`,`var value = ${n.getByOffset("inputOffset")};\nvar bestIndex : i32 = 0;`,`if (${n.getByOffset("inputOffset")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${n.getByOffset("inputOffset")};\n         bestIndex = i32(lastIndex);\n       }`,"",s.setByOffset("global_idx","bestIndex")]},i=e.inputs.length===1?t:Lo(e.inputs,t);e.compute(Er("ArgMin",{hint:i.cacheKey},[e.inputs[0]],r,[i.axis],7,i.keepDims),{inputs:[0]})},Ko=(e,t)=>{Ho(e.inputs);let r=(n,s,u)=>{let c=[];for(let o=0;o<n.rank;o++)(u.indexOf(o)>=0||u.length===0)&&c.push(`inputIndices[${o}] = 0;`);return[`${c.join(`\n`)}`,`var value = ${n.getByOffset("inputOffset")};\nvar bestIndex : i32 = 0;`,`if (${n.getByOffset("inputOffset")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${n.getByOffset("inputOffset")};\n         bestIndex = i32(lastIndex);\n       }`,"",s.setByOffset("global_idx","bestIndex")]},i=e.inputs.length===1?t:Lo(e.inputs,t);e.compute(Er("argMax",{hint:i.cacheKey},[e.inputs[0]],r,[i.axis],7,i.keepDims),{inputs:[0]})},wn=e=>ie(e)});var Ru,Bu,Yo,Xo=j(()=>{"use strict";he();ve();Ru=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Bu=e=>{let t=e[0].dims,r=e[0].dims[2],i=k.size(t)/4,n=e[0].dataType,s=F("input",n,t,4),u=F("bias",n,[r],4),c=F("residual",n,t,4),o=Z("output",n,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:g=>`\n  const channels = ${r}u / 4;\n  ${g.declareVariables(s,u,c,o)}\n\n  ${g.mainStart()}\n    ${g.guardAgainstOutOfBoundsWorkgroupSizes(i)}\n    let value = ${s.getByOffset("global_idx")}\n      + ${u.getByOffset("global_idx % channels")} + ${c.getByOffset("global_idx")};\n    ${o.setByOffset("global_idx","value")}\n  }`}},Yo=e=>{Ru(e.inputs),e.compute(Bu(e.inputs))}});var Mu,$e,Jo,Zo,Qo,ea,ta,ra,na,oa,aa,vn,ku,ia,sa,ua,la,_r,ca,Pr,da,pa,fa,ma,ha,ga,ya,ba,wa,va,$a,xa,Ca,Sa,Aa,Ia,Ta,$n=j(()=>{"use strict";ke();he();Pe();ve();Mu=(e,t,r,i,n,s)=>{let u=Math.ceil(t/4),c="";typeof n=="string"?c=`${n}(a)`:c=n("a");let o=F("inputData",r,[u],4),m=Z("outputData",i,[u],4);return`\n  ${e.declareVariables(o,m)}\n\n  ${s??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n\n    let a = ${o.getByOffset("global_idx")};\n    ${m.setByOffset("global_idx",c)}\n  }`},$e=(e,t,r,i,n,s=e.dataType)=>({name:t,shaderCache:{hint:n},getShaderSource:u=>Mu(u,k.size(e.dims),e.dataType,s,r,i),getRunData:u=>({outputs:[{dims:e.dims,dataType:s}],dispatchGroup:{x:Math.ceil(k.size(u[0].dims)/64/4)}})}),Jo=e=>{e.compute($e(e.inputs[0],"Abs","abs"))},Zo=e=>{e.compute($e(e.inputs[0],"Acos","acos"))},Qo=e=>{e.compute($e(e.inputs[0],"Acosh","acosh"))},ea=e=>{e.compute($e(e.inputs[0],"Asin","asin"))},ta=e=>{e.compute($e(e.inputs[0],"Asinh","asinh"))},ra=e=>{e.compute($e(e.inputs[0],"Atan","atan"))},na=e=>{e.compute($e(e.inputs[0],"Atanh","atanh"))},oa=e=>ie(e),aa=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${t.to}`)}e.compute($e(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},vn=(e,t)=>{let r=Re(e.inputs[0].dataType);e.compute($e(e.inputs[0],"Clip",i=>`clamp(${i}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${r}> = vec4(${r}(${t.min}));\n    const clip_max_: vec4<${r}> = vec4(${r}(${t.max}));\n`,t.cacheKey),{inputs:[0]})},ku=e=>{let t=e.length>=2?e[1].getFloat32Array()[0]:Tr,r=e.length>=3?e[2].getFloat32Array()[0]:Or;return ie({min:t,max:r})},ia=e=>{let t=ku(e.inputs);vn(e,t)},sa=e=>{e.compute($e(e.inputs[0],"Ceil","ceil"))},ua=e=>{e.compute($e(e.inputs[0],"Cos","cos"))},la=e=>{e.compute($e(e.inputs[0],"Cosh","cosh"))},_r=e=>ie(e),ca=(e,t)=>{e.compute($e(e.inputs[0],"Elu",r=>`elu_vf32(${r})`,`\n  const elu_alpha_: f32 = f32(${t.alpha});\n\n  fn elu_f32(a: f32) -> f32 {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<f32>) -> vec4<f32> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},Pr=(e,t="f32")=>`\nconst r0: ${t} = 0.3275911;\nconst r1: ${t} = 0.254829592;\nconst r2: ${t} = -0.284496736;\nconst r3: ${t} = 1.421413741;\nconst r4: ${t} = -1.453152027;\nconst r5: ${t} = 1.061405429;\n\nfn erf_vf32(v: ${e}) -> ${e} {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,da=e=>{let t=Re(e.inputs[0].dataType);e.compute($e(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,Pr(`vec4<${t}>`,t)))},pa=e=>{e.compute($e(e.inputs[0],"Exp","exp"))},fa=e=>{e.compute($e(e.inputs[0],"Floor","floor"))},ma=e=>{let t=Re(e.inputs[0].dataType);e.compute($e(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,Pr(`vec4<${t}>`,t)))},ha=(e,t)=>{e.compute($e(e.inputs[0],"LeakyRelu",r=>`select(leaky_relu_alpha_ * ${r}, ${r}, ${r} >= vec4<f32>(0.0))`,`const leaky_relu_alpha_: f32 = f32(${t.alpha});`,t.cacheKey))},ga=e=>{e.compute($e(e.inputs[0],"Not",t=>`!${t}`))},ya=e=>{e.compute($e(e.inputs[0],"Neg",t=>`-${t}`))},ba=e=>{e.compute($e(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},wa=e=>{e.compute($e(e.inputs[0],"Relu",t=>`select(vec4<f32>(0.0), ${t}, ${t} > vec4<f32>(0.0))`))},va=e=>{e.compute($e(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},$a=e=>{e.compute($e(e.inputs[0],"Sin","sin"))},xa=e=>{e.compute($e(e.inputs[0],"Sinh","sinh"))},Ca=e=>{e.compute($e(e.inputs[0],"Sqrt","sqrt"))},Sa=e=>{e.compute($e(e.inputs[0],"Tan","tan"))},Aa=e=>{e.compute($e(e.inputs[0],"Tanh","tanh"))},Ia=(e,t)=>(e.compute($e(e.inputs[0],"ThresholdedRelu",r=>`select(vec4<f32>(0.0), ${r}, ${r} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_: vec4<f32> = vec4<f32>(${t.alpha});`,t.cacheKey)),0),Ta=e=>{e.compute($e(e.inputs[0],"Log","log"))}});var Wu,zu,Oa,Ea=j(()=>{"use strict";he();ve();$n();Wu=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},zu=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=F("input",e[0].dataType,e[0].dims,4),i=F("bias",e[0].dataType,[e[0].dims[2]],4),n=Z("output",e[0].dataType,t,4),s=k.size(t)/4;return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:c=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${c.declareVariables(r,i,n)}\n\n  ${Pr("vec4f")}\n\n  ${c.mainStart()}\n    ${c.guardAgainstOutOfBoundsWorkgroupSizes(s)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${n.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},Oa=e=>{Wu(e.inputs),e.compute(zu(e.inputs))}});var Gu,Vu,at,_a,Pa,Ra,Ba,Ma,ka,Da,Wa,za,Ga,Va=j(()=>{"use strict";ke();he();ve();Gu=(e,t,r,i,n,s,u,c,o,m,g)=>{let x=k.size(i),b=Math.ceil(x/4),w,$;typeof u=="string"?w=$=(B,D)=>`${u}((${B}),(${D}))`:typeof u=="function"?w=$=u:(w=u.scalar,$=u.vector);let y="",C=Z("outputData",m,i,4),A=F("aData",c,t,4),P=F("bData",o,r,4);if(s){let B=D=>{let _=k.computeStrides(D),z=[];for(let N=D.length-1;N>=0;N--){let Y=C.indicesGet("outputIndices",N+i.length-D.length);z.push(`${_[N]}u * (${Y} % ${D[N]}u)`)}return z.length>0?z.join("+"):"0u"};y=`\n          fn calcOffsetA(outputIndices: ${C.type.indices}) -> u32 {\n            return ${B(t)};\n          }\n\n          fn calcOffsetB(outputIndices: ${C.type.indices}) -> u32 {\n            return ${B(r)};\n          }\n        `}let W;if(n)if(s){let B=k.size(t)===1,D=k.size(r)===1;B||D?W=C.setByOffset("global_idx",$(B?`${A.type.value}(${A.getByOffset("0")}.x)`:A.getByOffset("global_idx"),D?`${P.type.value}(${P.getByOffset("0")}.x)`:P.getByOffset("global_idx"))):W=`\n            let outputIndices = ${C.offsetToIndices("global_idx * 4u")};\n            let offsetA = calcOffsetA(outputIndices);\n            let offsetB = calcOffsetB(outputIndices);\n            ${C.setByOffset("global_idx",$(A.getByOffset("offsetA / 4u"),P.getByOffset("offsetB / 4u")))}\n          `}else W=C.setByOffset("global_idx",$(A.getByOffset("global_idx"),P.getByOffset("global_idx")));else{if(!s)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let B=(D,_,z="")=>{let N=`aData[indexA${_}][componentA${_}]`,Y=`bData[indexB${_}][componentB${_}]`;return`\n            let outputIndices${_} = ${C.offsetToIndices(`global_idx * 4u + ${_}u`)};\n            let offsetA${_} = calcOffsetA(outputIndices${_});\n            let offsetB${_} = calcOffsetB(outputIndices${_});\n            let indexA${_} = offsetA${_} / 4u;\n            let indexB${_} = offsetB${_} / 4u;\n            let componentA${_} = offsetA${_} % 4u;\n            let componentB${_} = offsetB${_} % 4u;\n            ${D}[${_}] = ${z}(${w(N,Y)});\n          `};m===9?W=`\n            var data = vec4<u32>(0);\n            ${B("data",0,"u32")}\n            ${B("data",1,"u32")}\n            ${B("data",2,"u32")}\n            ${B("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:W=`\n            ${B("outputData[global_idx]",0)}\n            ${B("outputData[global_idx]",1)}\n            ${B("outputData[global_idx]",2)}\n            ${B("outputData[global_idx]",3)}\n          `}return`\n        ${e.declareVariables(A,P,C)}\n\n        ${g??""}\n        ${y}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes(b)}\n        ${W}\n      }`},Vu=(e,t,r,i,n,s,u=r.dataType)=>{let c=!k.areEqual(r.dims,i.dims),o=r.dims,m=k.size(r.dims),g=!1;if(c){let x=rt.calcShape(r.dims,i.dims,!1);if(!x)throw new Error("Can\'t perform binary op on the given tensors");o=x,m=k.size(o);let b=k.size(r.dims)===1,w=k.size(i.dims)===1,$=1;for(let y=1;y<o.length;y++){let C=r.dims[r.dims.length-y]??1,A=i.dims[i.dims.length-y]??1;if(C===A)$*=C;else break}($%4===0||b||w)&&(g=!0)}else g=!0;return{name:e,shaderCache:{hint:t},getShaderSource:x=>Gu(x,r.dims,i.dims,o,g,c,n,r.dataType,i.dataType,u,s),getRunData:()=>({outputs:[{dims:o,dataType:u}],dispatchGroup:{x:Math.ceil(m/64/4)}})}},at=(e,t,r,i,n,s)=>{e.compute(Vu(t,n??"",e.inputs[0],e.inputs[1],r,i,s))},_a=e=>{at(e,"Add",(t,r)=>`${t}+${r}`)},Pa=e=>{at(e,"Div",(t,r)=>`${t}/${r}`)},Ra=e=>{at(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},Ba=e=>{at(e,"Mul",(t,r)=>`${t}*${r}`)},Ma=e=>{let t=F("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;at(e,"Pow",{scalar:(i,n)=>`pow_custom(${i},${n})`,vector:(i,n)=>`pow_vector_custom(${i},${n})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},ka=e=>{at(e,"Sub",(t,r)=>`${t}-${r}`)},Da=e=>{at(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},Wa=e=>{at(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},za=e=>{at(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},Ga=e=>{at(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}});var Nu,Fu,Hu,Lu,Ua,Na,Fa=j(()=>{"use strict";he();Pe();ve();Nu=e=>{if(!e||e.length<1)throw new Error("too few inputs");let t=e[0].dataType,r=e[0].dims.length;for(let i of e){if(i.dataType!==t)throw new Error("input tensors should be one type");if(i.dims.length!==r)throw new Error("input tensors should have the same shape")}},Fu=e=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,Hu=(e,t)=>{let r=e.length,i=[];for(let n=0;n<r;++n){let s=t.setByOffset("global_idx",e[n].getByIndices("indices"));r===1?i.push(s):n===0?i.push(`if (inputIndex == ${n}u) { ${s} }`):n===r-1?i.push(`else { ${s} }`):i.push(`else if (inputIndex == ${n}) { ${s} }`)}return i.join(`\n`)},Lu=(e,t)=>{let r=e[0].dims.slice();if(t>=r.length||t<-1*r.length)throw new Error("axis specified for concat doesn\'t match input dimensionality");let i=t<0?r.length+t:t,n=r.slice(0);for(let w=1;w<e.length;w++){let $=e[w].dims.slice();for(let y=0;y<r.length;y++)if(y===i)n[i]+=$[y];else if(r[y]!==$[y])throw new Error("non concat dimensions must match")}let s=k.size(n),u=new Array(e.length),c=new Array(e.length),o=e[0].dataType,m=0;for(let w=0;w<e.length;++w)m+=e[w].dims[i],u[w]=m,c[w]=F(`input${w}`,o,e[w].dims);let g=Z("output",o,n),x=g.indicesGet("indices",i),b=w=>`\n  ${w.declareVariables(...c,g)}\n\n  const sizeInConcatAxis = array<u32, ${u.length}>(${u.map($=>`${$}u`).join(",")});\n  ${Fu(u.length)}\n\n  ${w.mainStart()}\n    ${w.guardAgainstOutOfBoundsWorkgroupSizes(s)}\n\n    var indices = ${g.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${x});\n    if (inputIndex != 0u) {\n      ${x} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${Hu(c,g)}\n  }`;return{name:"Concat",shaderCache:{hint:`${t}`},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:b}},Ua=(e,t)=>{Nu(e.inputs),e.compute(Lu(e.inputs,t.axis))},Na=e=>ie({axis:e.axis})});var De,Rr,Br,Mr=j(()=>{"use strict";De=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Rr=(e,t=!1,r=!1,i=3)=>"",Br=(e,t)=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      // TODO uncomment the following line when activation is supported above.\n      // ${t?"value = activation(value, coords);":""}\n      `});var kr,xn=j(()=>{"use strict";kr=`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    outShapeStrides.x, outShapeStrides.y, outShapeStrides.z, 1));\n}\n`});var Dr,Wr,er=j(()=>{"use strict";he();Dr=(e,t=!1)=>{switch(e.activation){case"Relu":return{activationFunction:"",applyActivation:"value = max(value, 0.0);"};case"Sigmoid":return{activationFunction:"",applyActivation:"value = (1.0 / (1.0 + exp(-value)));"};case"Clip":return{activationFunction:`const clip_min_=f32(${e.clipMin});const clip_max_=f32(${e.clipMax});`,applyActivation:t?"value = clamp(value, vec4(clip_min_), vec4(clip_max_));":"value = clamp(value, clip_min_, clip_max_);"};default:return{activationFunction:"",applyActivation:""}}},Wr=e=>{let t=e?.activation||"";if(t==="Clip"){let[r,i]=e?.activation_params||[Tr,Or];return{activation:t,clipMax:i,clipMin:r,activationCacheKey:`${t}:${r},${i}`}}return{activation:t,activationCacheKey:t}}});var ju,Ku,tr,Ha,qu,rr,Yu,zr,nr=j(()=>{"use strict";he();ve();er();Mr();ju=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,Ku=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,tr=(e,t,r="f32",i,n=!1,s=32,u=!1,c=32)=>{let o=t[1]*e[1],m=t[0]*e[0],g=n?o:s,x=n?s:o,b=g/t[0],w=s/t[1];if(!((n&&b===4&&e[1]===4||!n&&(b===3||b===4))&&g%t[0]===0&&s%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${n} is true, innerElementSize ${b} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${b} must be 3 or 4.\n  tileAWidth ${g} must be divisible by workgroupSize[0]${t[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${b}<${r}>, ${g/b}>, ${x}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${r}>, ${m/e[0]}>, ${s}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${b};\nconst tileInner = ${s};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${u?"0":"i32(globalId.z)"};\n  ${i?`let batchIndices = ${i.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${o};\n\n  let numTiles = ${u?`${Math.ceil(c/s)}`:"(dimInner - 1) / tileInner + 1"};\n  var kStart = ${u?`i32(globalId.z) * ${c}`:"0"};\n\n  var acc: array<vec4<${r}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${w};\n  for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${ju(n,i)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${w}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${i?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${b===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${Ku(n,b)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},Ha=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,qu=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",rr=(e,t,r="f32",i,n=!1,s=32,u=!1,c=32,o=!1)=>{let m=e[1]*t[1],g=e[0]*t[0],x=n?m:s,b=n?s:m;if(!(b%t[1]===0&&x%t[0]===0&&s%t[1]===0))throw new Error(`tileAHight ${b} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${x} must be divisible by workgroupSize[0]${t[0]}, tileInner ${s} must be divisible by workgroupSize[1]${t[1]}`);let w=b/t[1],$=x/t[0],y=s/t[1],C=o?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${m};\n    let globalColStart = i32(workgroupId.x) * ${g};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${b}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${x}; inputCol = inputCol + ${t[0]}) {\n          ${Ha(n,i)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${g}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${i?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${r}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${m};\n\nlet tileRowA = i32(localId.y) * ${w};\nlet tileColA = i32(localId.x) * ${$};\nlet tileRowB = i32(localId.y) * ${y};\n// Loop over shared dimension.\nfor (var t = 0; t < numTiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${w}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${$}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${Ha(n,i)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${y}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${i?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${r}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${qu(n)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${r}, ${x}>, ${b}>;\n  var<workgroup> mm_Bsub : array<array<${r}, ${g}>, ${s}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${s};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${u?"0":"i32(globalId.z)"};\n    ${i?`let batchIndices = ${i.offsetToIndices("u32(batch)")};`:""}\n    let numTiles = ${u?`${Math.ceil(c/s)}`:"(dimInner - 1) / tileInner + 1"};\n    var kStart = ${u?`i32(globalId.z) * ${c}`:"0"};\n\n    var acc : array<array<${r}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${C}\n  }\n`},Yu=(e,t,r,i,n,s=!1)=>{let u=n[0],c=n[1],o=n[2],m=i[0],g=i[1],x=i[2],b=i[3],w=yn(u,o),$=yn(c,o),y=Re(i[0].type.tensor),C=()=>{let W=g.rank,B=m.rank,D=`var aIndices: ${g.type.indices};`;for(let _=W-2-1,z=B-1;_>=0;_--,z--)D+=`\naIndices[${_}] = ${B>1?`batchIndices[${z}]`:"batchIndices"};`;return w.forEach(_=>{D+=`\naIndices[${_}] = 0;`}),D+=`\naIndices[${W-2}] = u32(row);\n                   aIndices[${W-1}] = u32(colIn);`,D},A=()=>{let W=x.rank,B=m.rank,D=`var bIndices: ${x.type.indices};`;for(let _=W-2-1,z=B-1;_>=0;_--,z--)D+=`\nbIndices[${_}] = ${B>1?`batchIndices[${z}]`:"batchIndices"};`;return $.forEach(_=>{D+=`\nbIndices[${_}] = 0;`}),D+=`\nbIndices[${W-2}] = u32(row);\n                   bIndices[${W-1}] = u32(colIn);`,D};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${m.type.indices}) -> ${De(e,y)} {\n      var value = ${De(e,y)}(0.0);\n      let col = colIn * ${e};\n      if(row < dimAOuter && col < dimInner)\n      {\n        ${C()}\n        value = ${g.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${m.type.indices}) -> ${De(e,y)} {\n      var value = ${De(e,y)}(0.0);\n      let col = colIn * ${e};\n      if(row < dimInner && col < dimBOuter)\n      {\n        ${A()}\n        value = ${x.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${De(e,y)}) {\n      let col = colIn * ${e};\n      if (row < dimAOuter && col < dimBOuter) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${s?"bias[colIn]":`${De(e,y)}(bias[row])`};`:""}\n        ${r}\n        ${b.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},zr=(e,t,r,i,n=!1)=>{let s=e[0].dims,u=e[1].dims,c=s.slice(0,-2),o=u.slice(0,-2),m=i?i.slice(0,-2):r.slice(0,-2),g=F("batchDims",e[0].dataType,m),x=[g],b=[c,o,m],w=k.size(m),$=s[s.length-2],y=s[s.length-1],C=u[u.length-1],A=y%4===0&&C%4===0,{activationFunction:P,applyActivation:W}=Dr(t,A),B=$<=8?[4,1,1]:[4,4,1],D=[8,8,1],_=[Math.ceil(C/D[0]/B[0]),Math.ceil($/D[1]/B[1]),Math.ceil(w/D[2]/B[2])],z=Re(e[0].dataType),N=A?4:1,Y=F("a",e[0].dataType,[...c,$,y/N],N),le=F("b",e[1].dataType,[...o,y,C/N],N),M=Z("result",e[0].dataType,[w,$,C/N],N);x.push(Y),x.push(le),x.push(M);let q=[Y,le],Ce=e.length>2,ae=Yu(N,Ce,W,x,b,n);if(Ce){let K=n?N:1;q.push(F("bias",e[2].dataType,e[2].dims,K))}let we=K=>`\n  const dimAOuter: i32 = ${$};\n  const dimBOuter: i32 = ${C};\n  const dimInner: i32 = ${y};\n  ${K.declareVariables(...q,M)}\n  ${P}\n  ${ae}\n  ${A?tr(B,D,z,g):rr(B,D,z,g)}\n                   ${g.impl()}`;return{name:"MatMul",shaderCache:{hint:t.activationCacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:_[0],y:_[1],z:_[2]}}),getShaderSource:we}}});var Xu,La,ja=j(()=>{"use strict";pt();he();ve();Mr();xn();nr();Xu=(e,t,r,i,n=!1,s,u=!1,c=4,o=4,m=4,g="f32")=>{let x=le=>{switch(le){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${g}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${le} is not supported.`)}},b=le=>{switch(le){case 1:return"return w[row * wShape[3] + colIn];";case 4:return"return w[row * wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${le} is not supported.`)}},w=e?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,$=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,y=e?"xShape[1]":"xShape[2]",C=e?"xShape[2]":"xShape[3]",A=e?"row":"col",P=e?"col":"row",W=`\n    let inChannels = wShape[2];\n    let outWidth = ${e?"outShape[2]":"outShape[3]"};\n    let outRow = ${A} / outWidth;\n    let outCol = ${A} % outWidth;\n\n    let WRow = ${P} / (filterDims[1] * inChannels);\n    let WCol = ${P} / inChannels % filterDims[1];\n    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];\n    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];\n    let xCh = ${P} % inChannels;\n    var resData = ${De(c,g)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the \'same\' padding type.\n    if (xRow >= 0 && xRow < ${y} && xCol >= 0 && xCol < ${C}) {\n      ${w}\n      let xIndex = getIndexFromCoords4D(coord, xShape);\n      ${x(c)}\n    }\n    return resData;`,B=e?t&&i?`\n    let col = colIn * ${c};\n    ${W}`:`\n    let col = colIn * ${c};\n    if (row < dimAOuter && col < dimInner) {\n      ${W}\n    }\n    return ${De(c,g)}(0.0);`:i&&r?`\n    let col = colIn * ${c};\n    ${W}`:`\n    let col = colIn * ${c};\n    if (row < dimInner && col < dimBOuter) {\n      ${W}\n    }\n    return ${De(c,g)}(0.0);`,D=`${b(o)}`,_=De(m,g),z=e?De(c,g):De(o,g),N=e?De(o,g):De(c,g);return`\n    ${Rr(s,u,m===4,4)}\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${z} {\n      ${e?B:D}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${N} {\n      ${e?D:B}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${_}) {\n      let col = colIn * ${m};\n      if (row < dimAOuter && col < dimBOuter)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"outShape[2]":"outShape[3]"};\n      ${$}\n      ${Br(n,s)}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},La=(e,t,r,i,n,s,u,c)=>{let o=t.format==="NHWC",m=o?e[0].dims[3]:e[0].dims[1],g=r[0],x=o?r[2]:r[3],b=o?r[1]:r[2],w=o?r[3]:r[1],$=o&&(m%4===0||m%3===0)&&w%4===0,y=o?w:x*b,C=o?x*b:w,A=[8,8,1],P=i<=8?[4,1,1]:[4,4,1],W=[Math.ceil(y/A[0]/P[0]),Math.ceil(C/A[1]/P[1]),Math.ceil(g/A[2]/P[2])];Oe("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${W}`);let B=$?o&&m%4!==0?3:4:P[0],D=A[1]*P[1],_=A[0]*P[0],z=Math.max(A[0]*B,A[1]),N=i%D===0,Y=n%_===0,le=s%z===0,M=$?[B,4,4]:[1,1,1],q=Re(e[0].dataType),Ce=[`@group(0) @binding(0) var<storage, read> x: array<${$&&B===4?`vec4<${q}>`:q}>;`,`@group(0) @binding(1) var<storage, read> w: array<${$?`vec4<${q}>`:q}>;`],ae=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${$?`vec4<${q}>`:q}) {\n        result[flatIndex] = ${$?`vec4<${q}>`:q}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${$?`vec4<${q}>`:q}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${$?"/ 4":""}, value);\n      }`;return u&&(Ce.push(`@group(0) @binding(2) var<storage, read> bias: array<${$?`vec4<${q}>`:q}>;`),ae+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${$?`vec4<${q}>`:q} {\n          return bias[coords.${o?"w":"y"}${$?"/ 4":""}];\n        }`),{name:"Conv2DMatMul",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:W[0],y:W[1],z:W[2]}}),getShaderSource:()=>`\n        ${kr}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${Ce.join("")}\n        @group(0) @binding(${Ce.length}) var<storage, read_write> result: array<${$?`vec4<${q}>`:q}>;\n        //@group(0) @binding(${Ce.length+1}) var<uniform> uniforms: Uniforms;\n\n        const xShape : vec4<i32> = vec4<i32>(${e[0].dims.join(",")});\n        const wShape : vec4<i32> = vec4<i32>(${e[1].dims.join(",")});\n        const outShape : vec4<i32> = vec4<i32>(${r.join(",")});\n        const outShapeStrides : vec3<i32> = vec3<i32>(${k.computeStrides(r).slice(0,3).join(",")});\n        const filterDims : vec2<i32> = vec2<i32>(${t.kernelShape[0]}, ${t.kernelShape[1]});\n        const pad : vec2<i32> = vec2<i32>(${t.pads[0]}, ${t.pads[1]});\n        const stride : vec2<i32> = vec2<i32>(${t.strides[0]}, ${t.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${t.dilations[0]}, ${t.dilations[1]});\n        const dimAOuter : i32 = ${i};\n        const dimBOuter : i32 = ${n};\n        const dimInner : i32 = ${s};\n        ${ae}\n        ${Xu(o,N,Y,le,u,t.activation.toLowerCase(),!1,M[0],M[1],M[2],q)}\n            ${$?tr(P,A,q,void 0,!o,z):rr(P,A,q,void 0,!o,z,!1,void 0,c)}`}}});var Cn,Ka=j(()=>{"use strict";he();ve();An();er();Cn=(e,t,r)=>{let i=e.length>2,n=i?"value += b[output_channel];":"",s=e[0].dims,u=e[1].dims,c=u[0]/t.group,{activationFunction:o,applyActivation:m}=Dr(t),g=t.format==="NHWC",x=Sn(s,u,t.dilations,t.pads,t.strides,g),b=k.size(x),w=Z("output",e[0].dataType,x),$=F("x",e[0].dataType,s),y=F("w",e[1].dataType,u),C=[$,y];i&&C.push(F("b",e[2].dataType,e[2].dims));let A=P=>`\n  const strides: vec2<u32> = vec2(${t.strides[0]}u, ${t.strides[1]}u);\n  const pads: vec2<u32> = vec2(${t.pads[0]}u, ${t.pads[1]}u);\n\n  ${P.declareVariables(...C,w)}\n\n  ${o}\n\n  ${P.mainStart()}\n    ${P.guardAgainstOutOfBoundsWorkgroupSizes(b)}\n\n    let outputIndices = ${w.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${g?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${g?1:2}], outputIndices[${g?2:3}]) * strides - pads;\n    let group_id: u32 = output_channel / ${c}u;\n\n    var value: ${w.type.value} = ${w.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < ${u[1]}u; wInChannel++) {\n      let input_channel = group_id * ${u[1]}u + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < ${u[2]}u; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * ${t.dilations[0]}u;\n\n        if (xHeight < 0u || xHeight >= ${s[g?1:2]}u) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < ${u[3]}u; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * ${t.dilations[1]}u;\n          if (xWidth < 0u || xWidth >= ${s[g?2:3]}u) {\n            continue;\n          }\n\n          let xVal = ${g?$.get("batch","xHeight","xWidth","input_channel"):$.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${y.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${n}\n    ${m}\n    ${w.setByOffset("global_idx","value")}\n  }`;return{name:"GroupedConv",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r?r(x):x,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(b/64)}}),getShaderSource:A}}});var Ju,qa,Zu,Qu,_t,Ya,Xa,Gr=j(()=>{"use strict";he();Pe();ve();Ju=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},qa=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,Zu=(e,t)=>k.sortBasedOnPerm(e,qa(e.length,t)),Qu=(e,t,r,i)=>{let n=[];n.push(`fn perm(i: ${i.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let s=0;s<t;++s)n.push(r.indicesSet("a",e[s],`i[${s}]`));return n.push("return a;}"),n.join(`\n`)},_t=(e,t)=>{let r=e.dataType,i=e.dims.length,n=qa(i,t),s=Bo(i),u=Zu(e.dims,n),c=s?u.length:u,o=s?i:e.dims,m=Z("output",r,c),g=F("a",r,o),x=b=>`\n  ${b.registerUniform("output_size","u32").declareVariables(g,m)}\n\n  ${Qu(n,i,g,m)}\n\n  ${b.mainStart()}\n    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${m.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${m.setByOffset("global_idx",g.getByIndices("aIndices"))}\n  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:s?["rank"]:["dims"]},getRunData:b=>{let w=k.size(u);return{outputs:[{dims:u,dataType:b[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:s?[{type:"uint32",data:w},...gn(b[0].dims),...gn(u)]:[{type:"uint32",data:w}]}},getShaderSource:x}},Ya=(e,t)=>{Ju(e.inputs),e.compute(_t(e.inputs[0],t.perm))},Xa=e=>ie({perm:e.perm})});var Sn,Ja,el,Za,In,tl,rl,Tn,An=j(()=>{"use strict";he();Pe();ja();nr();Ka();er();Gr();Sn=(e,t,r,i,n,s)=>{let u=e[0],c=e.slice(s?1:2,s?3:4),o=c.length,m=t[0],x=t.slice(2).map(($,y)=>$+($-1)*(r[y]-1)),w=c.map(($,y)=>$+i[y]+i[y+o]).map(($,y)=>Math.floor(($-x[y]+n[y])/n[y]));return w.splice(0,0,u),w.splice(s?3:1,0,m),w},Ja=[2,3,1,0],el=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],i=e[1].dims[1]*t.group;if(r!==i)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==n*2)throw new Error(`pads should be ${n*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},Za=(e,t)=>{let r=e.kernelShape.slice();for(let s=2;s<t[1].dims.length;++s)r[s-2]===0&&(r[s-2]=t[1].dims[s]);let i=e.pads.slice();bt.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,i,e.format==="NHWC",e.autoPad);let n=Object.assign({},e);return Object.assign(n,{kernelShape:r,pads:i,cacheKey:e.cacheKey}),n},In=e=>{let t=Wr(e),r=e.format,i=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],n=e.dilations,s=e.group,u=e.kernel_shape,c=e.pads,o=e.strides,m=e.w_is_const();return ie({autoPad:i,format:r,dilations:n,group:s,kernelShape:u,pads:c,strides:o,wIsConst:m,...t})},tl=(e,t,r)=>{let i=Za(r,t);if(r.group!==1){e.compute(Cn(t,i));return}let n=r.format==="NHWC",s=t.length===3,u=t[0].dims[n?1:2],c=t[0].dims[n?2:3],o=t[0].dims[n?3:1],m=t[1].dims[2],g=t[1].dims[3],x=Sn(t[0].dims,t[1].dims,r.dilations,i.pads,r.strides,n),b=x[n?1:2],w=x[n?2:3],$=x[n?3:1],y=n&&m===u&&g===c&&r.pads[0]===0&&r.pads[1]===0;if(y||m===1&&g===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let _=x[0],z,N,Y,le=[];if(n){let M=e.kernelCustomData.wT??e.compute(_t(t[1],Ja),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=M),y){let q=u*c*o;z=t[0].reshape([1,_,q]),N=M.reshape([1,q,$]),Y=[1,_,$]}else z=t[0].reshape([_,u*c,o]),N=M.reshape([1,o,$]),Y=[_,b*w,$];le.push(z),le.push(N)}else z=t[0].reshape([_,o,u*c]),N=t[1].reshape([1,$,o]),Y=[_,$,b*w],le.push(N),le.push(z);s&&le.push(t[2]),e.compute(zr(le,i,x,Y,n),{inputs:le});return}let C=!0,A=e.kernelCustomData.wT??e.compute(_t(t[1],Ja),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=A);let P=[t[0],A];s&&P.push(t[2]);let W=n?b*w:$,B=n?$:b*w,D=m*g*o;e.compute(La(P,i,x,W,B,D,s,C),{inputs:P})},rl=(e,t)=>{let r=t.format==="NHWC",i=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&i.push(e.inputs[2]);let n=[0,t.pads[0],0,t.pads[1]],s=[1].concat(t.strides),u=[1].concat(t.dilations),c=[1].concat(t.kernelShape),o=Za({...t,pads:n,strides:s,dilations:u,kernelShape:c},i);e.compute(Cn(i,o,m=>r?[m[0],m[2],m[3]]:[]))},Tn=(e,t)=>{el(e.inputs,t),e.inputs[0].dims.length===3?rl(e,t):tl(e,e.inputs,t)}});var nl,Qa,ei=j(()=>{"use strict";pt();he();Mr();xn();nr();nl=(e,t=!1,r,i=!1,n=4)=>{let s=De(n,"f32"),u=A=>{switch(A){case 1:return"return W[getIndexFromCoords4D(coord, wShape)];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = W[getIndexFromCoords4D(coord, wShape)];\n            let v1 = W[getIndexFromCoords4D(coord1, wShape)];\n            let v2 = W[getIndexFromCoords4D(coord2, wShape)];\n            let v3 = W[getIndexFromCoords4D(coord3, wShape)];\n            return vec4<f32>(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${A} is not supported.`)}},c=e?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,o=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,m=e?"outBackprop[1]":"outBackprop[2]",g=e?"outBackprop[2]":"outBackprop[3]",x=e?"row":"col",b=e?"col":"row",w=`\n      let inChannels = ${e?"outBackprop[3]":"outBackprop[1]"};\n      let outWidth = ${e?"outShape[2]":"outShape[3]"};\n      let outRow = ${x} / outWidth;\n      let outCol = ${x} % outWidth;\n\n      let WRow = ${b} / (filterDims[1] * inChannels);\n      let WCol = ${b} / inChannels % filterDims[1];\n      let xR = f32(outRow - pads[0] + dilation[0] * WRow) / f32(strides[0]);\n      let xC = f32(outCol - pads[1] + dilation[1] * WCol) / f32(strides[1]);\n      if (xR < 0.0 || xR >= f32(${m}) || fract(xR) > 0.0) {\n        return ${s}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${g}) || fract(xC) > 0.0) {\n        return ${s}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${b} % inChannels;\n      ${c}\n      return x[getIndexFromCoords4D(coord, xShape)/${n}];`,$=e?`\n      let col = colIn * ${n};\n      if (row < dimAOuter && col < dimInner) {\n        ${w}\n      }\n      return ${s}(0.0);`:`\n      let col = colIn * ${n};\n      if (row < dimInner && col < dimBOuter) {\n        ${w}\n      }\n      return ${s}(0.0);`,y=`\n      let col = colIn * ${n};\n      let inChannels = ${e?"outBackprop[3]":"outBackprop[1]"};\n      let coordX = filterDims.x - 1 - row / (filterDims[1] * inChannels);\n      let coordY = filterDims.y - 1 - (row / inChannels) % filterDims[1];\n      if (${e?"row < dimInner && col < dimBOuter":"row < dimInner && col < dimAOuter"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${u(n)}\n      }\n      return ${s}(0.0);\n      `;return`\n  ${Rr(r,i,n===4,4)}\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${s} {\n    ${e?$:y}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${s} {\n    ${e?y:$}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${s}) {\n    let col = colIn * ${n};\n    if (row < dimAOuter && col < dimBOuter) {\n      var value = valueInput;\n      let outWidth = ${e?"outShape[2]":"outShape[3]"};\n      ${o}\n      ${Br(t,r)}\n      result[getIndexFromCoords4D(coords, outShape)/${n}] = value;\n    }\n  }`},Qa=(e,t,r,i,n,s,u,c)=>{let o=t.format==="NHWC",m=o?e[0].dims[3]:e[0].dims[1],g=r[0],x=o?r[2]:r[3],b=o?r[1]:r[2],w=o?r[3]:r[1],$=o?m%4===0&&w%4===0:x%4===0&&w%4===0,y=o?w:x*b,C=o?x*b:w,A=$?[8,8,1]:[y<=4||C<=4?4:16,y>4&&C<=4?4:16,1],P=$?[4,4,1]:[y<=4?1:4,y>4&&C<=4?1:4,1],W=[Math.ceil(y/A[0]/P[0]),Math.ceil(C/A[1]/P[1]),Math.ceil(g/A[2]/P[2])];Oe("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${W}`);let B=$?4:1,D=Math.max(A[0]*B,A[1]),_=[`@group(0) @binding(0) var<storage, read> x: array<${$?"vec4<f32>":"f32"}>;`,"@group(0) @binding(1) var<storage, read> W: array<f32>;"],z="";return u&&(_.push(`@group(0) @binding(2) var<storage, read> bias: array<${$?"vec4<f32>":"f32"}>;`),z+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${$?"vec4<f32>":"f32"} {\n          return bias[coords.${o?"w":"y"}${$?"/ 4":""}];\n        }`),{name:"Conv2DTransposeMatMul",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:W[0],y:W[1],z:W[2]}}),getShaderSource:()=>`\n        ${kr}\n        ${_.join(`\n`)}\n        @group(0) @binding(${_.length}) var<storage, read_write> result: array<${$?"vec4<f32>":"f32"}>;\n        const outBackprop : vec4<i32> = vec4<i32>(${e[0].dims.join(",")});\n        const xShape : vec4<i32> = vec4<i32>(${e[0].dims.join(",")});\n        const wShape : vec4<i32> = vec4<i32>(${e[1].dims.join(",")});\n        const outShape : vec4<i32> = vec4<i32>(${r.join(",")});\n        const outShapeStrides : vec3<i32> = vec3<i32>(${k.computeStrides(r).slice(0,3).join(",")});\n        const filterDims : vec2<i32> = vec2<i32>(${t.kernelShape[o?1:2]}, ${t.kernelShape[o?2:3]});\n        const effectiveFilterDims : vec2<i32> = filterDims + vec2<i32>(\n              ${t.dilations[0]<=1?0:(t.kernelShape[o?1:2]-1)*(t.dilations[0]-1)},\n              ${t.dilations[1]<=1?0:(t.kernelShape[o?2:3]-1)*(t.dilations[1]-1)});\n        const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${t.pads[0]+t.pads[2]})/2,\n                                         i32(effectiveFilterDims[1]) - 1 - (${t.pads[1]+t.pads[3]})/2);\n        const strides : vec2<i32> = vec2<i32>(${t.strides[0]}, ${t.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${t.dilations[0]}, ${t.dilations[1]});\n        const dimAOuter : i32 = ${i};\n        const dimBOuter : i32 = ${n};\n        const dimInner : i32 = ${s};\n        ${z}\n        ${nl(o,u,t.activation.toLowerCase(),!1,B)}\n        ${$?tr(P,A,"f32",void 0,!o,D):rr(P,A,"f32",void 0,!o,D,!1,void 0,c)}`}}});var ol,On,ti=j(()=>{"use strict";pt();he();ve();ol=(e,t,r,i,n,s,u=!1,c)=>{let o=r.format==="NHWC",m=o?1:2,g=o?2:3,x=o?3:1,b=k.size(i),w=u?2:1,$=r.group,y=t[1].dims,C=y[0]/$,A=y[1],P=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${u?`vec4<${c}>`:c}) {\n    result[flatIndex] = ${u?`vec4<${c}>`:c}(value);\n  }`;n&&(P+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${u?`vec4<${c}>`:c} {\n      return bias[coords.${o?"w":"y"}${u?"/ 4":""}];\n    }`);let W=u?4:1,B=F("W",t[1].dataType,t[1].dims,W),D=F("Dy",t[0].dataType,t[0].dims,W),_=[D,B];n&&_.push(F("bias",t[2].dataType,[i[x]],W));let z=Z("result",t[0].dataType,i,W),N=`{\n        let batch: u32 = ${s?"global_id.z":"workgroup_id.z"} / outShape[1];\n        let r = ${s?"global_id.z":"workgroup_id.z"} % outShape[1];\n        let c = ${s?"global_id.y":"workgroup_id.y"} * ${w};\n        let d1: u32 = ${s?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${c}>, ${w}>;\n        for (var i = 0; i < ${w}; i++) {\n          dotProd[i] = vec4<${c}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < filterDims[0]; wR = wR + 1) {\n          var dyR = (${c}(dyCorner.x) + ${c}(wR)) / ${c}(strides.x);\n          let wRPerm = filterDims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${c}(outBackprop[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < filterDims[1]; wC = wC + 1) {\n            let dyC = (${c}(dyCorner.y) + ${c}(wC)) / ${c}(strides.y);\n            let dyC2 = (${c}(dyCorner.y) + 1.0 + ${c}(wC)) / ${c}(strides.y);\n            let wCPerm = filterDims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${c}(outBackprop[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${c}(outBackprop[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = outBackprop[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${D.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${c}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${D.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${c}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = outBackprop[${x}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${D.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${c}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = outBackprop[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${B.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${D.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${c}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${w}; i = i + 1) {\n          let value = dotProd[i] + ${n?"bias[c+i]":"0.0"};\n          ${z.set("batch","r","c + i","d1","value")};\n        }\n      }`,Y=`\n          let outputIndices = ${z.offsetToIndices("global_idx")};\n          let batch = ${z.indicesGet("outputIndices",0)};\n          let d1 = ${z.indicesGet("outputIndices",x)};\n          let r = ${z.indicesGet("outputIndices",m)};\n          let c = ${z.indicesGet("outputIndices",g)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / ${A};\n          let wOutChannel = d1 - groupId * ${A};\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = 0.0;\n          for (var wR: u32 = 0; wR < effectiveFilterDims.x; wR = wR + 1) {\n            if (wR % dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${c}(dyRCorner) + ${c}(wR)) / ${c}(strides[0]);\n            let wRPerm = filterDims.x - 1 - wR / dilations.x;\n            if (dyR < 0.0 || dyR >= ${c}(outBackprop[${m}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < effectiveFilterDims.y; wC = wC + 1) {\n              if (wC % dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${c}(dyCCorner) + ${c}(wC)) / ${c}(strides.y);\n              let wCPerm = filterDims.y - 1 - wC / dilations.y;\n              if (dyC < 0.0 || dyC >= ${c}(outBackprop[${g}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * ${C};\n              for (var d2: u32 = 0; d2 < ${C}; d2 = d2 + 1) {\n                let xValue = ${o?D.get("batch","idyR","idyC","inputChannel"):D.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${B.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${n?"bias[d1]":"0.0"};\n          ${z.setByOffset("global_idx","value")};\n        `;return`\n  ${e.declareVariables(..._,z)}\n  ${P}\n  const outShape : vec4<u32> = vec4<u32>(${i.join(",")});\n  const outBackprop : vec4<u32> = vec4<u32>(${t[0].dims.join(",")});\n  const strides : vec2<u32> = vec2<u32>(${r.strides[0]}, ${r.strides[1]});\n  const filterDims : vec2<u32> = vec2<u32>(${r.kernelShape[o?1:2]}, ${r.kernelShape[o?2:3]});\n  const dilations : vec2<u32> = vec2<u32>(${r.dilations[0]}, ${r.dilations[1]});\n  const effectiveFilterDims : vec2<u32> = filterDims + vec2<u32>(\n          ${r.dilations[0]<=1?0:(r.kernelShape[o?1:2]-1)*(r.dilations[0]-1)},\n          ${r.dilations[1]<=1?0:(r.kernelShape[o?2:3]-1)*(r.dilations[1]-1)});\n  const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${r.pads[0]+r.pads[2]})/2,\n                                     i32(effectiveFilterDims[1]) - 1 - (${r.pads[1]+r.pads[3]})/2);\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(b)};\n  ${u?N:Y}}`},On=(e,t,r)=>{let i=e.length>2,n=t.outputShape,s=k.size(n),u=[Math.ceil(s/64),1,1];Oe("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${u}`);let c=Re(e[0].dataType);return{name:"ConvTranspose2D",shaderCache:{hint:t.cacheKey},getRunData:()=>({dispatchGroup:{x:u[0],y:u[1],z:u[2]},outputs:[{dims:r?r(n):n,dataType:e[0].dataType}]}),getShaderSource:o=>ol(o,e,t,n,i,u[1]===1&&u[2]===1,!1,c)}}});var al,il,sl,ri,ni,ul,ll,cl,dl,oi,ai=j(()=>{"use strict";Pe();ei();ti();er();Gr();al=(e,t,r,i,n,s)=>(e-1)*t+r+(i-1)*n+1-s,il=(e,t,r,i,n)=>{let s=Math.floor(e/2);t==="SAME_UPPER"?(r[i]=s,r[n]=e-s):t==="SAME_LOWER"&&(r[i]=e-s,r[n]=s)},sl=(e,t,r,i,n,s,u,c,o,m)=>{let g=e.length-2,x=m.length===0;if(o.length===0)for(let $=0;$<g;++$)o.push(0);let b=e[0],w=t[c?3:1]*n;for(let $=0,y=e.length-g-(c?1:0);$<g;++$,++y){let C=e[y],A=x?C*u[$]:m[$],P=al(C,u[$],s[$],t[y],r[$],A);il(P,i,s,$,$+g),x&&m.push(u[$]*(C-1)+o[$]+(t[y]-1)*r[$]+1-s[$]-s[$+g])}m.splice(0,0,b),m.splice(c?3:1,0,w)},ri=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((b,w)=>b*w,1)===0){r.length=0;for(let b=2;b<t[1].dims.length;++b)r.push(t[1].dims[b])}let i=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(i?3:1,0,t[1].dims[1]);let n=e.pads.slice(),s=e.outputShape.slice(),u=e.outputPadding.slice(),c=t[0].dims,o=e.dilations.slice();if(o.reduce((b,w)=>b+w,0)===0){let b=t[0].dims.length-2;o=new Array(b).fill(1)}let m=e.strides.slice();if(m.reduce((b,w)=>b+w,0)===0){let b=t[0].dims.length-2;m=new Array(b).fill(1)}sl(c,r,o,e.autoPad,e.group,n,m,i,u,s);let g=Object.assign({},e),x=e.cacheKey+[r.join("n,"),n.join(","),m.join(","),u.join(","),s.join(","),o.join(",")].join("_");return Object.assign(g,{kernelShape:r,pads:n,outputPadding:u,outputShape:s,dilations:o,strides:m,cacheKey:x}),g},ni=e=>{let t=Wr(e),r=e.format,i=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],n=e.dilations,s=e.group,u=e.kernelShape,c=e.pads,o=e.strides,m=e.wIsConst(),g=e.outputPadding,x=e.outputShape;return ie({autoPad:i,format:r,dilations:n,group:s,kernelShape:u,outputPadding:g,outputShape:x,pads:c,strides:o,wIsConst:m,...t})},ul=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],i=e[1].dims[0];if(r!==i)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let n=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==n))throw new Error("invalid bias");let s=e[0].dims.length-2;if(t.dilations.reduce((g,x)=>g+x,0)>0&&t.dilations.length!==s)throw new Error(`dilations should be ${s}D`);if(t.strides.reduce((g,x)=>g+x,0)>0&&t.strides.length!==s)throw new Error(`strides should be ${s}D`);if(t.pads.reduce((g,x)=>g+x,0)>0&&t.pads.length!==s*2)throw new Error(`pads should be ${s*2}D`);if(t.outputPadding.length!==s&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${s}D`);if(t.kernelShape.reduce((g,x)=>g+x,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},ll=[2,3,1,0],cl=(e,t,r)=>{let i=ri(r,t),n=r.format==="NHWC",s=t.length===3;if(i.group!==1){e.compute(On(t,i));return}let u=i.outputShape,c=u[n?1:2],o=u[n?2:3],m=u[n?3:1],g=t[1].dims[2],x=t[1].dims[3],b=t[0].dims[n?3:1],w=n?c*o:m,$=n?m:c*o,y=g*x*b,C=!0,A=e.kernelCustomData.wT??e.compute(_t(t[1],ll),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=A);let P=[t[0],A];s&&(!n&&t[2].dims.length===1?P.push(t[2].reshape([t[2].dims[0],1,1])):P.push(t[2])),e.compute(Qa(P,i,u,w,$,y,s,C),{inputs:P})},dl=(e,t)=>{let r=t.format==="NHWC",i=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];i.length===3&&i.push(e.inputs[2]);let n=t.kernelShape;(n.length===0||n[0]===0)&&(n=[e.inputs[1].dims[2]]);let s=t.dilations;(s.length===0||s[0]===0)&&(s=[1]);let u=t.strides;(u.length===0||u[0]===0)&&(u=[1]);let c=t.pads;c.length===0&&(c=[0,0]),c=[0,c[0],0,c[1]],u=[1].concat(u),s=[1].concat(s),n=[1].concat(n);let o=ri({...t,pads:c,strides:u,dilations:s,kernelShape:n},i);e.compute(On(i,o,m=>r?[m[0],m[2],m[3]]:[m[0],m[1],m[3]]))},oi=(e,t)=>{ul(e.inputs,t),e.inputs[0].dims.length===3?dl(e,t):cl(e,e.inputs,t)}});var En,Vr,ii,pl,fl,_n,Pn,ml,si,ui,li=j(()=>{"use strict";he();Pe();ve();En="[a-zA-Z]|\\\\.\\\\.\\\\.",Vr="("+En+")+",ii="^"+Vr+"$",pl="("+Vr+",)*"+Vr,fl="^"+pl+"$",_n=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let i=this.symbolToIndices.get(t);i===void 0?i=[r]:i.push(r),this.symbolToIndices.set(t,i)}},Pn=class{constructor(t,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[i,n]=r.includes("->")?r.split("->",2):[r,""];if(!i.match(RegExp(fl)))throw new Error("Invalid LHS term");if(i.split(",").forEach((c,o)=>{let m=t[o].dims.slice();if(!c.match(RegExp(ii)))throw new Error("Invalid LHS term");let g=this.processTerm(c,!0,m,o);this.lhs.push(g)}),n==="")n+=[...this.symbolToInfo.entries()].filter(([c,o])=>o.count===1||c==="...").map(([c])=>c).join("");else if(!n.match(RegExp(Vr)))throw new Error("Invalid RHS");n.match(RegExp(En,"g"))?.forEach(c=>{if(c==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let o=this.symbolToInfo.get(c);if(o===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(o.dimValue)}}),this.rhs=this.processTerm(n,!0,this.outputDims)}addSymbol(t,r,i){let n=this.symbolToInfo.get(t);if(n!==void 0){if(n.dimValue!==r&&n.count!==1)throw new Error("Dimension mismatch");n.count++,n.inputIndices.push(i)}else n={count:1,dimValue:r,inputIndices:[i]};this.symbolToInfo.set(t,n)}processTerm(t,r,i,n=-1){let s=i.length,u=!1,c=[],o=0;if(!t.match(RegExp(ii))&&!r&&t!=="")throw new Error("Invalid LHS term");let m=t.match(RegExp(En,"g")),g=new _n(n);return m?.forEach((x,b)=>{if(x==="..."){if(u)throw new Error("Only one ellipsis is allowed per input term");u=!0;let w=s-m.length+1;if(w<0)throw new Error("Ellipsis out of bounds");if(c=i.slice(o,o+w),this.hasEllipsis){if(this.ellipsisDims.length!==c.length||this.ellipsisDims.toString()!==c.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=c;else throw new Error("Ellipsis must be specified in the LHS");for(let $=0;$<c.length;$++){let y=String.fromCharCode("0".charCodeAt(0)+b);g.addSymbol(y,b+$),this.addSymbol(y,i[o++],n)}}else g.addSymbol(x,b),this.addSymbol(x,i[o++],n)}),g}},ml=(e,t)=>{let r=e[0].dataType,i=new Array(e.length);for(let W=0;W<e.length;++W)i[W]=F(`input${W}`,r,e[W].dims);let n=t.outputDims,s=k.size(n),u=Z("output",r,n),c=[],o=Array.from(t.rhs.symbolToIndices.keys()),m="var prod = 1.0;",g="var sum = 0.0;",x="sum += prod;",b=[],w=[],$=[],y=[],C=t.symbolToInfo.size===o.length;t.symbolToInfo.forEach((W,B)=>{if(o.includes(B)){let D=o.indexOf(B);t.lhs.forEach((_,z)=>{if(W.inputIndices.includes(z)){let N=_.symbolToIndices.get(B);if(N===void 0)throw new Error("Invalid symbol error");N.forEach(Y=>{c.push(`${i[z].indicesSet(`input${z}Indices`,Y,u.indicesGet("outputIndices",D))}`)})}})}else t.lhs.forEach((D,_)=>{let z=t.symbolToInfo.get(B);if(z===void 0)throw new Error("Invalid symbol error");if(z.inputIndices.includes(_)){let N=D.symbolToIndices.get(B);if(N===void 0)throw new Error("Invalid symbol error");N.forEach(Y=>{b.push(`${i[_].indicesSet(`input${_}Indices`,Y,`${B}`)}`)}),y.push(`prod *= ${i[_].getByIndices(`input${_}Indices`)};`)}}),w.push(`for(var ${B}: u32 = 0; ${B} < ${t.symbolToInfo.get(B)?.dimValue}; ${B}++) {`),$.push("}")});let A=C?[...c,`let sum = ${i.map((W,B)=>W.getByIndices(`input${B}Indices`)).join(" * ")};`]:[...c,g,...w,...b,m,...y,x,...$],P=W=>`\n      ${W.declareVariables(...i,u)}\n\n      ${W.mainStart()}\n        ${W.guardAgainstOutOfBoundsWorkgroupSizes(s)}\n        var outputIndices = ${u.offsetToIndices("global_idx")};\n        ${i.map((B,D)=>`var input${D}Indices: ${i[D].type.indices};`).join(`\n`)}\n        ${A.join(`\n`)};\n        ${u.setByOffset("global_idx","sum")};\n      }`;return{name:"Einsum",shaderCache:{hint:t.equation},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:P}},si=(e,t)=>{let r=new Pn(e.inputs,t.equation);e.compute(ml(e.inputs,r))},ui=e=>{let t=e.equation.replace(/\\s+/g,"");return ie({equation:t})}});var hl,ci,gl,yl,di,pi=j(()=>{"use strict";he();ve();hl=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),i=r.length<t.length?0:r.length-t.length,n=t.length<r.length?0:t.length-r.length;for(;i<r.length&&n<t.length;++i,++n)if(r[i]!==t[n]&&r[i]!==1&&t[n]!==1)throw new Error("Expand requires shape to be broadcastable to input")},ci=(e,t)=>{let r=e.length-t.length,i=[];for(let n=0;n<r;++n)i.push(e[n]);for(let n=0;n<t.length;++n)i.push(t[n]===1?e[n+r]:t[n]);return i},gl=(e,t)=>e.length>t.length?ci(e,t):ci(t,e),yl=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),i=gl(t,r),n=k.size(i),s=e[0].dataType,u=F("input",s,t),c=Z("output",s,i),o=m=>`\n  const inputShape = ${u.indices(...t)};\n  ${m.declareVariables(u,c)}\n  ${m.mainStart()}\n  ${m.guardAgainstOutOfBoundsWorkgroupSizes(n)}\n    let outputIndices = ${c.offsetToIndices("global_idx")};\n    var inputIndices: ${u.type.indices};\n    for (var i = 0; i < ${t.length}; i++) {\n      if (${u.indicesGet("inputShape","i")} == 1) {\n        ${u.indicesSet("inputIndices","i",0)}\n      } else {\n        ${u.indicesSet("inputIndices","i",c.indicesGet("outputIndices",`i + ${i.length-t.length}`))}\n      }\n    }\n    ${c.setByOffset("global_idx",u.getByIndices("inputIndices"))}\n  }`;return{name:"Expand",shaderCache:{hint:`${i}`},getShaderSource:o,getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}})}},di=e=>{hl(e.inputs),e.compute(yl(e.inputs),{inputs:[0]})}});var bl,wl,fi,mi,hi=j(()=>{"use strict";he();Pe();ve();bl=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},wl=(e,t)=>{let r=e[0].dims,i=e[1].dims,n=r.length,s=k.normalizeAxis(t.axis,n),u=r.slice(0);u.splice(s,1,...i);let c=r[s],o=k.size(u),m=F("data",e[0].dataType,e[0].dims),g=F("inputIndices",e[1].dataType,e[1].dims),x=Z("output",e[0].dataType,u),b=()=>{let $=i.length,y=`var indicesIndices  = ${g.type.indices}(0);`;for(let C=0;C<$;C++)y+=`${$>1?`indicesIndices[${C}]`:"indicesIndices"} = ${u.length>1?`outputIndices[${s+C}]`:"outputIndices"};`;y+=`\n        var idx = ${g.getByIndices("indicesIndices")};\n        if (idx < 0) {\n          idx = idx + ${c};\n        }\n        var dataIndices = ${m.type.indices}(0);\n      `;for(let C=0,A=0;C<n;C++)C===s?(y+=`${n>1?`dataIndices[${C}]`:"dataIndices"} = u32(idx);`,A+=$):(y+=`${n>1?`dataIndices[${C}]`:"dataIndices"} = ${u.length>1?`outputIndices[${A}]`:"outputIndices"};`,A++);return y},w=$=>`\n      ${$.declareVariables(m,g,x)}\n      ${$.mainStart()}\n        ${$.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n        let outputIndices = ${x.offsetToIndices("global_idx")};\n        ${b()};\n        let value = ${m.getByIndices("dataIndices")};\n        ${x.setByOffset("global_idx","value")};\n      }`;return{name:"Gather",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:w}},fi=e=>ie({axis:e.axis}),mi=(e,t)=>{let r=e.inputs;bl(r),e.compute(wl(e.inputs,t))}});var vl,$l,gi,yi,bi=j(()=>{"use strict";he();Pe();ve();vl=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},$l=(e,t)=>{let r=e[0].dims,i=e[0].dataType,n=r.length,s=k.computeStrides(r),u=k.size(r),c=e[1].dims,o=e[1].dataType,m=k.size(c),g=k.normalizeAxis(t.axis,n),x=r[g],b=c.slice(0),w=k.size(b),$=F("input",i,r),y=F("indices",o,[m]),C=Z("output",i,b),A=P=>`\n      const inputStrides = array<u32, ${s.length}>(${s.map(W=>`${W}u`).join(",")});\n      ${P.declareVariables($,y,C)}\n      ${P.mainStart()}\n      ${P.guardAgainstOutOfBoundsWorkgroupSizes(w)}\n\n      let outputIndices = ${C.offsetToIndices("global_idx")};\n\n      var idx = ${y.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + ${x};\n      }\n\n      var srcOffset = u32(0);\n\n      for (var i = 0; i < ${r.length}; i++) {\n        if (i == ${g}) {\n          srcOffset +=  u32(idx) * inputStrides[i];\n        } else {\n          srcOffset += ${C.indicesGet("outputIndices","i")} * inputStrides[i];\n        }\n      }\n\n      // Should never hit this with valid values in indices\n      // This is a guard against malicious data in the indices input\n      if (srcOffset < 0 || srcOffset >= ${u}) {\n        return;\n      }\n\n      output[global_idx] = input[srcOffset];\n  }`;return{name:"GatherElements",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:b,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)}}),getShaderSource:A}},gi=e=>ie({axis:e.axis}),yi=(e,t)=>{let r=e.inputs;vl(r),e.compute($l(e.inputs,t))}});var xl,Cl,Sl,wi,vi,$i=j(()=>{"use strict";he();Pe();ve();xl=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Cl=(e,t,r)=>{if(r.length===0)return"0u";let i=r.length===1&&e!==1||r.length===2&&r[0]!==e,n=r[r.length-1]!==t,s="0u";return i||(s+=`+ m * ${r[r.length-1]}u`),n||(s+="+n"),s},Sl=(e,t)=>{let r=e[0].dims.slice(),i=e[1].dims.slice(),[n,s,u]=Ir.getShapeOfGemmResult(r,t.transA,i,t.transB,e.length===3?e[2].dims:void 0),c=[n,s];if(!c)throw new Error("Can\'t use gemm on the given tensors");let o=k.size(c),m="";t.transA&&t.transB?m="value += a[k * M + m] * b[n * K + k];":t.transA&&!t.transB?m="value += a[k * M + m] * b[k * N + n];":!t.transA&&t.transB?m="value += a[m * K + k] * b[n * K + k];":!t.transA&&!t.transB&&(m="value += a[m * K + k] * b[k * N + n];");let g=Re(e[0].dataType),x=t.alpha===1?"":"value *= alpha;",b=e.length===3?`value += beta * c[${Cl(n,s,e[2].dims)}];`:"",w=[`@group(0) @binding(0) var<storage, read> a : array<${g}>;`,`@group(0) @binding(1) var<storage, read> b : array<${g}>;`];e.length===3&&w.push(`@group(0) @binding(2) var<storage, read> c : array<${g}>;`);let $=y=>`\n  const M: u32 = ${n}u;\n  const N: u32 = ${s}u;\n  const K: u32 = ${u}u;\n  const alpha = ${g}(${t.alpha});\n  const beta = ${g}(${t.beta});\n\n  ${w.join(`\n`)}\n  @group(0) @binding(${e.length}) var<storage, read_write> output : array<${g}>;\n\n  ${y.mainStart()}\n    ${y.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n\n    let m = global_id.x / N;\n    let n = global_id.x % N;\n\n    var value = ${g}(0);\n    for (var k: u32 = 0u; k<${u}u; k++) {\n      ${m}\n    }\n\n    ${x}\n    ${b}\n    output[global_id.x] = value;\n\n  }`;return{name:"Gemm",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:$}},wi=(e,t)=>{xl(e.inputs),e.compute(Sl(e.inputs,t))},vi=e=>ie(e)});var Al,Il,Tl,Ol,xi,Ci,Si=j(()=>{"use strict";ke();he();Pe();ve();Al={name:"InstanceNormalization"},Il=(e,t)=>{let r=e[0].dims,i=r,n=2,s=k.sizeToDimension(r,n),u=k.sizeFromDimension(r,n),c=r[1],o=F("x",e[0].dataType,[r[0],r[1],u]),m=F("scale",e[1].dataType,e[1].dims),g=F("bias",e[2].dataType,e[2].dims),x=Z("output",e[0].dataType,[r[0],r[1],u]),b=[o,m,g,x],w=o.type.value,$=64,y=C=>`\n\n  const C: u32 = ${c};\n  const normSize: u32 = ${u};\n  const epsilon: f32 = ${t.epsilon};\n  var<workgroup> meanShared : ${w};\n  var<workgroup> squaredNormShared : ${w};\n  var<workgroup> workgroupShared : array<${w}, ${$}>;\n  const workgroupSize = ${$}u;\n  ${C.declareVariables(...b)}\n  ${C.mainStart($)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / C;\n    let channel = norm % C;\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial: ${w} = 0;\n    for (var h = localIndex; h < normSize; h += workgroupSize) {\n      initial = initial + ${o.get("batch","channel","h")};\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = workgroupShared[0] / ${w}(normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = 0;\n    for (var h = localIndex; h < normSize; h += workgroupSize) {\n      let deviation =  ${o.get("batch","channel","h")} - meanShared;\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = workgroupShared[0];\n    }\n    workgroupBarrier();\n\n    let invStdDev = 1 / sqrt(squaredNormShared / ${w}(normSize) + epsilon);\n    let channelScale = invStdDev * ${m.getByOffset("channel")};\n    let channelShift = ${g.getByOffset("channel")} - meanShared * channelScale;\n    for (var h = localIndex; h < normSize; h += workgroupSize) {\n      let value = ${o.get("batch","channel","h")} * channelScale + channelShift;\n      ${x.set("batch","channel","h","value")};\n    }\n  }`;return{...Al,shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:s}}),getShaderSource:y}},Tl=(e,t,r,i,n,s,u,c)=>{let o=ut(u),m=F("input",t.dataType,t.dims,o),g=F("scale",r.dataType,r.dims,o),x=F("bias",i.dataType,i.dims,o),b=64,w=o===1?"vec2f":`mat2x${o}f`,$=o===1?"f32":`vec${o}f`,y=(D,_)=>`${w}(${D}, ${_})`,C=n*u/o,A=Math.ceil(s/b),P=D=>`\n  const H: u32 = ${s};\n  const C: u32 = ${u/o};\n  const imageSize: u32 = ${s*u/o};\n\n  ${D.declareVariables(m)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${w}>;\n\n  ${D.mainStart(b)}\n    let currentImageNumber = global_idx / ${b} / C;\n    let currentChannelNumber = (global_idx / ${b}) % C;\n    let wgId = global_idx % ${b};\n    let wgOffset = wgId * ${A};\n    if (wgOffset >= H) {\n        return;\n    }\n    let wgMax = min(wgOffset + ${A}, H);\n\n    let offset = currentImageNumber * imageSize + currentChannelNumber;\n    var sum = ${Xe("f32",o)};\n    var squaredSum = ${Xe("f32",o)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${$}(input[offset + i * C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${y("sum","squaredSum")};\n  }`,W=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:JSON.stringify({components:o,n,h:s,c:u})},getRunData:()=>({outputs:[{dims:[n,u,b,2],dataType:1}],dispatchGroup:{x:n*u/o}}),getShaderSource:P},{inputs:[t],outputs:[-1]})[0],B=D=>`\n  const H: u32 = ${s};\n  const C: u32 = ${u/o};\n  const imageSize: u32 = ${b*u/o};\n  const epsilon: f32 = ${c};\n\n  @group(0) @binding(0) var<storage, read> input : array<${w}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${g.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${x.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${w}>;\n\n  ${D.mainStart()}\n    ${D.guardAgainstOutOfBoundsWorkgroupSizes(C)}\n    let currentImageNumber = global_idx / C;\n    let currentChannelNumber = global_idx % C;\n\n    let offset = currentImageNumber * imageSize;\n    var sum = ${Xe("f32",o)};\n    var squaredSum = ${Xe("f32",o)};\n    for (var i: u32 = 0; i < ${b}; i++) {\n        let value = input[offset + i + currentChannelNumber * ${b}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(H);\n    squaredSum = squaredSum / f32(H);\n    let invStdDev = 1 / sqrt(squaredSum - sum * sum + epsilon);\n    let channelScale = invStdDev * ${$}(scale[currentChannelNumber]);\n    let channelShift = ${$}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${y("channelScale","channelShift")};\n  }`;return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:JSON.stringify({components:o,n,h:s,c:u,epsilon:c})},getRunData:()=>({outputs:[{dims:[n,u,2],dataType:1}],dispatchGroup:{x:Math.ceil(C/64)}}),getShaderSource:B},{inputs:[W,r,i],outputs:[-1]})[0]},Ol=(e,t,r)=>{let i=t[0].dims,n=i,s=i[0],u=i[i.length-1],c=k.sizeFromDimension(i,1)/u,o=ut(u),m=k.size(n)/o,g=F("input",t[0].dataType,t[0].dims,o),x=Z("output",t[0].dataType,n,o),b=Re(t[0].dataType),w=o===1?"vec2f":`mat2x${o}f`,$=o===1?b:`vec${o}<${b}>`,y=Tl(e,t[0],t[1],t[2],s,c,u,r.epsilon),C=A=>`\n  const H: u32 = ${c};\n  const C: u32 = ${u/o};\n\n  @group(0) @binding(0) var<storage, read> input : array<${g.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${w}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${x.type.storage}>;\n\n  ${A.mainStart()}\n    let currentImageNumber = global_idx / (C * H);\n    let currentChannelNumber = global_idx % C;\n\n    let scaleOffset = currentImageNumber * C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${$}(scale[0]), ${$}(scale[1]));\n  }`;e.compute({name:"InstanceNormalization",shaderCache:{hint:`${r.cacheKey}`},getRunData:()=>({outputs:[{dims:n,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)}}),getShaderSource:C},{inputs:[t[0],y]})},xi=e=>ie({epsilon:e.epsilon,format:e.format}),Ci=(e,t)=>{t.format==="NHWC"?Ol(e,e.inputs,t):e.compute(Il(e.inputs,t))}});var El,_l,Ai,Ii,Ti=j(()=>{"use strict";ke();he();Pe();ve();El=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},_l=(e,t,r)=>{let i=e[0].dims,n=e[1],s=e[2],u=i,c=k.normalizeAxis(t.axis,i.length),o=k.sizeToDimension(i,c),m=k.sizeFromDimension(i,c),g=k.size(n.dims),x=s?k.size(s.dims):0;if(g!==m||s&&x!==m)throw new Error(`Size of X.shape()[axis:] == ${m}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${g} and bias size of ${x}`);let b=[];for(let B=0;B<i.length;++B)B<c?b.push(i[B]):b.push(1);let w=ut(m),$=Re(e[0].dataType),y=[F("x",e[0].dataType,e[0].dims,w),F("scale",n.dataType,n.dims,w)];s&&y.push(F("bias",s.dataType,s.dims,w)),y.push(Z("output",e[0].dataType,u,w));let C=r>1,A=r>2;C&&y.push(Z("meanDataOutput",1,b)),A&&y.push(Z("invStdOutput",1,b));let P=B=>`\n  const normSize: f32 = ${m};\n  const normSizeVectorized: u32 = ${m/w};\n  const epsilon: f32 = ${t.epsilon};\n\n  ${B.declareVariables(...y)}\n  ${B.mainStart()}\n    ${B.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n    let offset = global_idx * normSizeVectorized;\n    var meanVector = ${Xe("f32",w)};\n    var meanSquareVector = ${Xe("f32",w)};\n\n    for (var h: u32 = 0u; h < normSizeVectorized; h++) {\n      let value = ${wt($,w,"x[h + offset]")};\n      meanVector += value;\n      meanSquareVector += value * value;\n    }\n    let mean = ${ft("meanVector",w)} / normSize;\n    let meanSquare = sqrt(${ft("meanSquareVector",w)} \n      / normSize - mean * mean + epsilon);\n\n    for (var j: u32 = 0; j < normSizeVectorized; j++) {\n      let f32input = ${wt($,w,"x[j + offset]")};\n      let f32scale = ${wt($,w,"scale[j]")};\n      output[j + offset] = ${y[0].type.value}((f32input - mean) / meanSquare * f32scale\n        ${s?`+ ${wt($,w,"bias[j]")}`:""}\n      );\n    }\n\n    ${C?"meanDataOutput[global_idx] = mean":""};\n    ${A?"invStdOutput[global_idx] = 1 / meanSquare":""};\n  }`,W=[{dims:u,dataType:e[0].dataType}];return C&&W.push({dims:b,dataType:1}),A&&W.push({dims:b,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${t.cacheKey}|${r}|${e.length}`},getRunData:()=>({outputs:W,dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:P}},Ai=e=>ie({axis:e.axis,epsilon:e.epsilon}),Ii=(e,t)=>{El(e.inputs),e.compute(_l(e.inputs,t,e.outputCount))}});var Pl,Oi,Ei=j(()=>{"use strict";he();nr();Pl=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Oi=e=>{Pl(e.inputs);let t=rt.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can\'t use matmul on the given tensors");e.compute(zr(e.inputs,{activation:"",activationCacheKey:""},t))}});var Rl,Bl,Ml,kl,Dl,Wl,zl,Gl,Vl,_i,Pi,Ri=j(()=>{"use strict";ke();he();Pe();ve();Rl=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1)throw new Error("Input type must be float.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Bl=(e,t,r,i,n,s,u)=>{let c=r.length,o="";for(let m=c-1;m>=0;--m)o+=`\n            k = i32(${e.indicesGet("indices",m)}) - ${n[m]};\n            if (k < 0) {\n              break;\n            }\n            if (k >= ${r[m]}) {\n              break;\n            }\n            offset += k * ${i[m]};\n        `;return`\n          value = ${s}(${u});\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${o}\n            value = x[offset];\n          }\n      `},Ml=(e,t,r,i,n)=>{let s=r.length,u="";for(let c=s-1;c>=0;--c)u+=`\n                k = i32(${e.indicesGet("indices",c)}) - ${n[c]};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = ${2*(r[c]-1)};\n                  k = k % _2n_1;\n                  if(k >= ${r[c]}) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * ${i[c]};\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${u}\n              value = x[offset];\n          `},kl=(e,t,r,i,n)=>{let s=r.length,u="";for(let c=s-1;c>=0;--c)u+=`\n                k = i32(${e.indicesGet("indices",c)}) - ${n[c]};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= ${r[c]}) {\n                  k = ${r[c]-1};\n                }\n                offset += k * ${i[c]};\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${u}\n              value = x[offset];\n          `},Dl=(e,t,r,i,n)=>{let s=r.length,u="";for(let c=s-1;c>=0;--c)u+=`\n                k = i32(${e.indicesGet("indices",c)}) - ${n[c]};\n                if (k < 0)  {\n                  k += ${r[c]};\n                }\n                if (k >= ${r[c]}) {\n                  k -= ${r[c]};\n                }\n                offset += k * ${i[c]};\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${u}\n              value = x[offset];\n          `},Wl=(e,t,r,i,n,s)=>{switch(n.mode){case 0:return Bl(e,t,r,i,n.pads,s,n.value);case 1:return Ml(e,t,r,i,n.pads);case 2:return kl(e,t,r,i,n.pads);case 3:return Dl(e,t,r,i,n.pads);default:throw new Error("Invalid mode")}},zl=(e,t,r,i)=>{let n=t[0].dims,s=k.padShape(n.slice(),r.pads),u=k.size(s),c=k.computeStrides(n),o=Z("output",t[0].dataType,s),m=F("x",t[0].dataType,n),g=Wl(o,s,n,c,r,i);return`\n              ${e.declareVariables(m,o)}\n              ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n\n              let indices = ${o.offsetToIndices("global_idx")};\n\n              var value = ${i}(0);\n              ${g}\n              output[global_idx] = value;\n          }`},Gl=(e,t)=>{let r=k.padShape(e[0].dims.slice(),t.pads);return{name:"Pad",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(k.size(r)/64)}}),getShaderSource:i=>zl(i,e,t,"f32")}},Vl=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),i=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,n=e[0].dims.length,s=new Int32Array(2*n).fill(0);if(e.length>=4){let c=e[3].getBigInt64Array();for(let o=0;o<c.length;o++)s[Number(c[o])]=Number(r[o]),s[Number(c[o])+n]=Number(r[o+c.length])}else r.forEach((c,o)=>s[Number(o)]=Number(c));let u=[];return s.forEach(c=>u.push(c)),ie({mode:t.mode,value:i,pads:u})}else return t},_i=(e,t)=>{Rl(e.inputs);let r=Vl(e.inputs,t);e.compute(Gl(e.inputs,r),{inputs:[0]})},Pi=e=>{let t=e.mode,r=e.value,i=e.pads;return ie({mode:t,value:r,pads:i})}});var Ur,Bi,Mi,ki,Di,Wi,zi,Gi,Vi,Ui,Ni,Fi,Hi,Li,ji,Ki=j(()=>{"use strict";he();Pe();ve();Ur=e=>{if(!e||e.length!==1)throw new Error("Pool ops requires 1 input.");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("Pool ops supports 1-D or 2-D inputs only for now.")},Bi=(e,t,r)=>{let i=t.format==="NHWC",n=e.dims.slice();i&&n.splice(1,0,n.pop());let s=Object.hasOwnProperty.call(t,"dilations"),u=t.kernelShape.slice(),c=t.strides.slice(),o=s?t.dilations.slice():[],m=t.pads.slice();bt.adjustPoolAttributes(r,n,u,c,o,m);let g=bt.computePoolOutputShape(r,n,c,o,u,m,t.autoPad),x=Object.assign({},t);s?Object.assign(x,{kernelShape:u,strides:c,pads:m,dilations:o,cacheKey:t.cacheKey}):Object.assign(x,{kernelShape:u,strides:c,pads:m,cacheKey:t.cacheKey});let b=g.slice();return b.push(b.splice(1,1)[0]),[x,i?b:g]},Mi=(e,t,r,i,n,s,u,c)=>{let o=n.format==="NHWC",m=r,g=t.type.value,x=m.length,b=k.size(i),w=Z("output",t.type.tensor,i);if(n.kernelShape.length<=2){let $=n.kernelShape[n.kernelShape.length-1],y=n.strides[n.strides.length-1],C=n.pads[n.pads.length/2-1],A=n.pads[n.pads.length-1],P=x-(o?2:1),W="",B="",D="";if(C+A!==0?W=`\n                for (var i: u32 = 0u; i < ${$}u; i++) {\n                  xIndices[${P}] = indices[${P}] * ${y} - ${C} + i;\n                  if (xIndices[${P}] < 0 || xIndices[${P}] >= ${m[P]}) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${s}\n                }`:W=`\n                for (var i: u32 = 0u; i < ${$}u; i++) {\n                  xIndices[${P}] = indices[${P}] * ${y} - ${C} + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${s}\n                }`,n.kernelShape.length===2){let z=n.kernelShape[n.kernelShape.length-2],N=n.strides[n.strides.length-2],Y=n.pads[n.pads.length/2-2],le=n.pads[n.pads.length-2],M=x-(o?3:2),q=m[M];Y+le!==0?B=`\n                for (var j: u32 = 0u; j < ${z}u; j++) {\n                  xIndices[${M}] = indices[${M}] * ${N} - ${Y} + j;\n                  if (xIndices[${M}] < 0 || xIndices[${M}] >= ${q}) {\n                    pad+= ${$};\n                    continue;\n                  }\n              `:B=`\n                for (var j: u32 = 0u; j < ${z}u; j++) {\n                  xIndices[${M}] = indices[${M}] * ${N} - ${Y} + j;\n                `,D=`\n              }\n            `}return`\n            ${e.declareVariables(t,w)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(b)}\n\n              let indices = ${w.offsetToIndices("global_idx")};\n              var xIndices = ${w.offsetToIndices("global_idx")};\n\n              var value: ${g} = ${g}(${c});\n              var pad = 0;\n              ${B}\n              ${W}\n              ${D}\n              ${u}\n\n              output[global_idx] = value;\n            }`}else{if(o)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let $=k.size(n.kernelShape),y=k.computeStrides(n.kernelShape),C=y.length,A=n.pads.length,P=n.pads.reduce((D,_)=>D+_),W="";return P?W=`\n                if (xIndices[j] >= inputDims[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${s}\n              }`:W=`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${s}\n            `,`\n            ${e.declareVariables(t,w)}\n\n            const pads = array<u32, ${A}>(${n.pads.map(D=>`${D}u`).join(",")});\n            const inputDims = array<u32, ${x}>(${m.map(D=>`${D}u`).join(",")});\n            const kernelStrides = array<u32, ${C}>(${y.map(D=>`${D}u`).join(",")});\n            const strides = array<u32, ${C}>(${n.strides.map(D=>`${D}u`).join(",")});\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(b)}\n\n              let indices = ${w.offsetToIndices("global_idx")};\n              let xIndices = ${w.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${C}>;\n\n              var value = ${w.type.value}(${c});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < ${$}u; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${C-1}u; j++) {\n                  offsets[j] = offset / kernelStrides[j];\n                  offset -= offsets[j] * kernelStrides[j];\n                }\n                offsets[${C-1}] = offset;\n\n                isPad = false;\n                for (var j = ${x-C}u; j < ${x}u; j++) {\n                  xIndices[j] = indices[j] * strides[j - ${x-C}u]\n                    + offsets[j - ${x-C}u] - pads[j - 2u];\n                  ${W}\n              }\n              ${u}\n\n              output[global_idx] = value;\n            }`}},ki=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Di=(e,t,r,i)=>{let[n,s]=Bi(t,i,r),u=k.size(n.kernelShape),c=F("x",t.dataType,t.dims),o=c.type.value,m="value += x_val;",g="";return n.countIncludePad?g+=`value /= ${o}(${u});`:g+=`value /= ${o}(${u} - pad);`,{name:e,shaderCache:{hint:i.cacheKey},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(k.size(s)/64)}}),getShaderSource:x=>Mi(x,c,t.dims,s,n,m,g,"0.0")}},Wi=e=>{let t=e.count_include_pad!==0,r=ki(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return ie({countIncludePad:t,...r})},zi=(e,t)=>{Ur(e.inputs),e.compute(Di("AveragePool",e.inputs[0],!1,t))},Gi={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},Vi=e=>{let t=e.format;return{format:t,...Gi,cacheKey:t}},Ui=(e,t)=>{Ur(e.inputs),e.compute(Di("GlobalAveragePool",e.inputs[0],!0,t))},Ni=(e,t,r,i)=>{let[n,s]=Bi(t,i,r),u=`\n      value = max(x_val, value);\n    `,c="",o=F("x",t.dataType,t.dims);return{name:e,shaderCache:{hint:i.cacheKey},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(k.size(s)/64)}}),getShaderSource:m=>Mi(m,o,t.dims,s,n,u,c,"-1e5")}},Fi=(e,t)=>{Ur(e.inputs),e.compute(Ni("MaxPool",e.inputs[0],!1,t))},Hi=e=>{let t=e.storage_order,r=e.dilations,i=ki(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(i.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return ie({storageOrder:t,dilations:r,...i})},Li=e=>{let t=e.format;return{format:t,...Gi,cacheKey:t}},ji=(e,t)=>{Ur(e.inputs),e.compute(Ni("GlobalMaxPool",e.inputs[0],!0,t))}});var Nr=j(()=>{});var qi=j(()=>{Nr()});var Yi,Xi=j(()=>{Yi="1.17.0"});var Ji,Rn,Zi=j(()=>{Xi();Ji="warning",Rn={wasm:{},webgl:{},webgpu:{},versions:{common:Yi},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Ji=e}},get logLevel(){return Ji}};Object.defineProperty(Rn,"logLevel",{enumerable:!0})});var Qi,es=j(()=>{Zi();Qi=Rn});var ts=j(()=>{});var rs=j(()=>{Fr()});var os=j(()=>{});var as=j(()=>{Fr()});var Fr=j(()=>{ts();rs();os();as()});var Bn=j(()=>{Fr()});var is=j(()=>{Nr();Bn()});var ss=j(()=>{is()});var us=j(()=>{});var ls=j(()=>{Nr()});var cs=j(()=>{ls()});var ds=j(()=>{qi();es();ss();Bn();us();cs()});var Fl,Hl,ps,fs=j(()=>{"use strict";ds();ke();ve();Fl=(e,t,r)=>{let i=e===t,n=e<t&&r<0,s=e>t&&r>0;if(i||n||s)throw new Error("Range these inputs\' contents are invalid.")},Hl=(e,t,r,i)=>{let n=Math.abs(Math.ceil((t-e)/r)),s=[n],u=n,c=Z("output",i,s),o=c.type.storage,m=g=>`\n        ${g.declareVariables(c)}\n        ${g.mainStart()}\n        ${g.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n        output[global_idx] = ${o}(${e}) + ${o}(global_idx) * ${o}(${r});\n      }`;return{name:"Range",shaderCache:{hint:[e,t,r].map(g=>g.toString()).join("_")},getShaderSource:m,getRunData:()=>({outputs:[{dims:s,dataType:i}],dispatchGroup:{x:Math.ceil(u/64)}})}},ps=e=>{let t=0,r=0,i=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],i=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],i=e.inputs[2].getFloat32Array()[0]),Qi.webgpu.validateInputContent&&Fl(t,r,i),e.compute(Hl(t,r,i,e.inputs[0].dataType),{inputs:[]})}});var Ll,jl,Kl,ql,Yl,Xl,Jl,Zl,Ql,ec,tc,rc,nc,oc,ac,ms,hs,gs=j(()=>{"use strict";he();Pe();ve();Ll=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for linear mode")}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},jl=(e,t,r)=>{t.every(n=>n>=0&&n<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let i=new Array(r).fill(1);return t.forEach((n,s)=>i[n]=e[s]),i},Kl=(e,t,r,i,n,s)=>{let[u,c,o]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],m=e[0].dims.length;if(u>0&&e.length>u&&e[u].dims.length>0)e[u].getFloat32Array().forEach(g=>s.push(g));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(c>0&&e.length>c&&e[c].dims.length>0){if(e[c].getFloat32Array().forEach(g=>i.push(g)),i.length!==0&&i.length!==m&&r>=18&&i.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Ll(i,t),t.axes.length>0&&jl(i,t.axes,m).forEach((g,x)=>i[x]=g)}if(o>0&&e.length>o&&(e[o].getBigInt64Array().forEach(g=>n.push(Number(g))),n.length!==m||r>=18&&n.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(i.length!==t.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(n.length!==t.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(typeof i<"u"&&typeof n<"u"&&i.length>0&&n.length>m)throw new Error("Resize requires only of scales or sizes to be specified")},ql=e=>"fn getOriginalCoordinateFromResizedCoordinate(xResized: f32, xScale: f32, lengthResized: f32,    lengthOriginal: f32, roiStart: f32, roiEnd: f32) -> f32 { "+(()=>{switch(e){case"asymmetric":return"return xResized / xScale;";case"pytorch_half_pixel":return"if (lengthResized > 1) {                     return (xResized + 0.5) / xScale - 0.5;                   } else {                     return 0.0;                   }";case"tf_half_pixel_for_nn":return"return (xResized + 0.5) / xScale;";case"align_corners":return"if (lengthResized == 1) {                     return 0.0;                   } else {                     return xResized * (lengthOriginal - 1) / (lengthResized - 1);                   }";case"tf_crop_and_resize":return"if (lengthResized > 1) {                     return roiStart * (lengthOriginal - 1) +                           (xResized * (roiEnd - roiStart) * (lengthOriginal - 1)) / (lengthResized - 1);                   } else {                     return 0.5 * (roiStart + roiEnd) * f32(lengthOriginal - 1);                   }";case"half_pixel_symmetric":return["const outputWidth = xScale * lengthResized;","const adjustment = lengthResized / outputWidth;","const center = lengthOriginal / 2;","const offset = center * (1 - adjustment);","return offset + ((xResized + 0.5) / xScale) - 0.5;"].join(`\n`);case"half_pixel":return"return ((xResized + 0.5) / xScale) - 0.5;";default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Yl=(e,t)=>"fn getNearestPixelFromOriginal(xOriginal: f32, isDownSample: bool) -> f32 {"+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Xl=(e,t,r)=>{let i=new Array(r).fill(0).concat(new Array(r).fill(1)),n=e.length===0?i:e.slice();return t.length>0?(t.forEach((s,u)=>{i[s]=n[u],i[u+r]=n[t.length+u]}),i):n},Jl=(e,t,r,i)=>{let n=[];if(r.length>0)if(i.length>0){if(e.forEach(s=>n.push(s)),Math.max(...i)>e.length)throw new Error("axes is out of bound");i.forEach((s,u)=>n[s]=r[u])}else r.forEach(s=>n.push(s));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");n=e.map((s,u)=>Math.round(s*t[u]))}return n},Zl=(e,t,r,i)=>{let n=(()=>{switch(i.keepAspectRatioPolicy){case"not_larger":return i.axes.length>0?Math.min(...i.axes.map(u=>r[u]),Number.MAX_VALUE):Math.min(...r,Number.MAX_VALUE);case"not_smaller":return i.axes.length>0?Math.max(...i.axes.map(u=>r[u]),Number.MIN_VALUE):Math.max(...r,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${i.keepAspectRatioPolicy} is not supported`)}})();r.fill(1,0,r.length);let s=e.slice();return i.axes.length>0?(i.axes.forEach(u=>r[u]=n),i.axes.forEach(u=>s[u]=Math.round(e[u]*r[u]))):(r.fill(n,0,r.length),s.forEach((u,c)=>s[c]=Math.round(u*r[c]))),s},Ql=(e,t,r,i,n)=>`\n    fn calculateOriginalIndicesFromOutputIndices(outputIndices: ${e.type.indices}) -> array<f32, ${r.length}> {\n      const inputShape = array<u32, ${t.length}>(${t.map(s=>`${s}u`).join(",")});\n      const outputShape = array<u32, ${r.length}>(${r.map(s=>`${s}u`).join(",")});\n      const scales = array<f32, ${i.length}>(${i.map(s=>`${s}f`).join(",")});\n      const roi = array<f32, ${n.length}>(${n.map(s=>`${s}f`).join(",")});\n      var originalIndices: array<f32, ${r.length}>;\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var outputIndex = ${r.length===1?"outputIndices":"outputIndices[i]"};\n        if (scales[i] == 1.0) {\n          originalIndices[i] = f32(outputIndex);\n        } else {\n          originalIndices[i] = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],\n                f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${t.length}]);\n        }\n      }\n      return originalIndices;\n    }`,ec=(e,t,r,i,n,s,u)=>`\n    fn calculateInputIndicesFromOutputIndices(outputIndices: ${t.type.indices}) -> ${e.type.indices} {\n        const inputShape = array<u32, ${r.length}>(${r.map(c=>`${c}u`).join(",")});\n        const outputShape = array<u32, ${i.length}>(${i.map(c=>`${c}u`).join(",")});\n        const scales = array<f32, ${n.length}>(${n.map(c=>`${c}f`).join(",")});\n        const roi = array<f32, ${s.length}>(${s.map(c=>`${c}f`).join(",")});\n        var inputIndices: ${e.type.indices};\n        for (var i:u32 = 0; i < ${i.length}; i++) {\n          var outputIndex = ${i.length===1?"outputIndices":"outputIndices[i]"};\n          var inputIndex: u32;\n          if (scales[i] == 1.0) {\n            inputIndex = outputIndex;\n          } else {\n            var original_idx = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],\n                    f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${r.length}]);\n            if (!${u} || (original_idx >= 0 && original_idx < f32(inputShape[i]))) {\n              if (original_idx < 0) {\n                inputIndex = 0;\n              } else if (original_idx > (f32(inputShape[i]) - 1)) {\n                inputIndex = inputShape[i] - 1;\n              } else {\n                inputIndex = u32(getNearestPixelFromOriginal(original_idx, scales[i] < 1));\n              }\n            } else {\n              inputIndex = u32(original_idx);\n            }\n          }\n          ${e.indicesSet("inputIndices","i","inputIndex")}\n        }\n        return inputIndices;\n    }`,tc=(e,t)=>`\n    fn checkInputIndices(inputIndices: ${e.type.indices}) -> bool {\n      const inputShape = array<u32, ${t.length}>(${t.map(r=>`${r}u`).join(",")});\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var inputIndex = ${t.length===1?"inputIndices":"inputIndices[i]"};\n        if (inputIndex < 0 || inputIndex >= inputShape[i]) {\n          return false;\n        }\n      }\n      return true;\n    }`,rc=(e,t,r,i,n,s,u)=>{let[c,o,m,g]=r.length===2?[-1,0,1,-1]:n[1]===1?[0,2,3,1]:[0,1,2,3];return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> f32 {\n      var inputIndices: ${e.type.indices};\n      inputIndices[${o}] = max(0, min(row, ${r[o]} - 1));\n      inputIndices[${m}] = max(0, min(col, ${r[m]} - 1));\n      if (${r.length} > 2) {\n        inputIndices[${g}] = channel;\n        inputIndices[${c}] = batch;\n      };\n      return input[${e.indicesToOffset("inputIndices")}];\n    }\n\n    fn bilinearInterpolation(outputIndices: ${t.type.indices}) -> f32 {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(outputIndices);\n      var row:f32 = originalIndices[${o}];\n      var col:f32 = originalIndices[${m}];\n      if (${s} && (row < 0 || row > (${r[o]} - 1) || col < 0 || col > ${r[m]} - 1)) {\n        return ${u};\n      }\n      row = max(0, min(row, ${r[o]} - 1));\n      col = max(0, min(col, ${r[m]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = 0;\n      var batch: u32 = 0;\n      if (${r.length>2}) {\n        channel = u32(originalIndices[${g}]);\n        batch = u32(originalIndices[${c}]);\n      }\n      var x11: f32 = getInputValue(batch, channel, row1, col1);\n      var x12: f32 = getInputValue(batch, channel, row1, col2);\n      var x21: f32 = getInputValue(batch, channel, row2, col1);\n      var x22: f32 = getInputValue(batch, channel, row2, col2);\n      var dx1: f32 = row - f32(row1);\n      var dx2: f32 = f32(row2 ) - row;\n      var dy1 = col - f32(col1);\n      var dy2 = f32(col2) - col;\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},nc=(e,t,r,i,n,s,u,c,o,m)=>{let[g,x]=r.length===2?[0,1]:n[1]===1?[2,3]:[1,2],b=w=>{let $=w===g?"row":"col";return`\n      fn ${$}CubicInterpolation(inputIndices: ${e.type.indices}, outputIndices: ${t.type.indices}) -> f32 {\n        var outputIndex = ${i.length===1?"outputIndices":`outputIndices[${w}]`};\n        var originalIdx: f32 = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), ${n[w]},\n        f32(${i[w]}), f32(${r[w]}), ${s[w]}, ${s[w]} + ${r.length});\n        var fractOriginalIdx: f32 = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${c} && (originalIdx < 0 || originalIdx > (${r[w]} - 1))) {\n          return ${o};\n        }\n        var data: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${$}: f32 = originalIdx + f32(i);\n          if (${$} < 0 || ${$} >= ${r[w]}) {\n            if (${m}) {\n              coefs[i + 1] = 0.0;\n              continue;\n            } else if (${c}) {\n              return ${o};\n            } else {\n              ${$} = max(0, min(${$}, ${r[w]} - 1));\n            }\n          }\n          var inputIndicesCopy: ${e.type.indices} = inputIndices;\n          inputIndicesCopy[${w}] = u32(${$});\n          data[i + 1] = ${w===g?`input[${e.indicesToOffset("inputIndicesCopy")}];`:`\n                                               rowCubicInterpolation(inputIndicesCopy, outputIndices);`}\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${b(g)};\n    ${b(x)};\n  fn getCubicInterpolationCoefs(s: f32) -> array<f32, 4> {\n    var absS = abs(s);\n    var coeffs: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: f32 = 1.0 - absS;\n    var twoMinusAbsS: f32 = 2.0 - absS;\n    var onePlusAbsS: f32 = 1.0 + absS;\n    coeffs[0] = ((${u} * onePlusAbsS - 5 * ${u}) * onePlusAbsS + 8 * ${u}) * onePlusAbsS - 4 * ${u};\n    coeffs[1] = ((${u} + 2) * absS - (${u} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${u} + 2) * oneMinusAbsS - (${u} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${u} * twoMinusAbsS - 5 * ${u}) * twoMinusAbsS + 8 * ${u}) * twoMinusAbsS - 4 * ${u};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<f32, 4>, coefs: array<f32, 4>) -> f32 {\n    var coefsSum: f32 = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(outputIndices: ${t.type.indices}) -> f32 {\n    var inputIndices: ${e.type.indices} = outputIndices;\n    return colCubicInterpolation(inputIndices, outputIndices);\n  }\n    `},oc=(e,t,r,i,n,s)=>{let u=e.dims,c=Xl(s,t.axes,u.length),o=Jl(u,i,n,t.axes),m=i.slice();i.length===0&&(m=u.map((C,A)=>C===0?1:o[A]/C),t.keepAspectRatioPolicy!=="stretch"&&(o=Zl(u,o,m,t)));let g=Z("output",e.dataType,o),x=F("input",e.dataType,u),b=k.size(o),w=u.length===o.length&&u.every((C,A)=>C===o[A]),$=t.coordinateTransformMode==="tf_crop_and_resize",y=C=>`\n      ${ql(t.coordinateTransformMode)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${tc(x,u)};\n              ${Yl(t.nearestMode,r)};\n              ${ec(x,g,u,o,m,c,$)};\n              `;case"linear":return`\n              ${Ql(g,u,o,m,c)};\n              ${rc(x,g,u,o,m,$,t.extrapolationValue)};\n              `;case"cubic":return`\n            ${nc(x,g,u,o,m,c,t.cubicCoeffA,$,t.extrapolationValue,t.excludeOutside)};\n            `;default:throw Error("Invalid resize mode")}})()};\n      ${C.declareVariables(x,g)}\n      ${C.mainStart()}\n        ${C.guardAgainstOutOfBoundsWorkgroupSizes(b)}\n        if (${w}) {\n          output[global_idx] = input[global_idx];\n        } else {\n          let outputIndices = ${g.offsetToIndices("global_idx")};\n          var inputIndices: ${x.type.indices};\n          ${(()=>{switch(t.mode){case"nearest":return`inputIndices = calculateInputIndicesFromOutputIndices(outputIndices);\n                  if (checkInputIndices(inputIndices)) {\n                    output[global_idx] = input[${x.indicesToOffset("inputIndices")}];\n                  } else {\n                    output[global_idx] = ${t.extrapolationValue};\n                  }`;case"linear":return"output[global_idx] = bilinearInterpolation(outputIndices);";case"cubic":return"output[global_idx] = bicubicInterpolation(outputIndices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n        }\n      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${m.length>0?m:""}|${n.length>0?n:""}`},getShaderSource:y,getRunData:()=>({outputs:[{dims:o,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(b/64)}})}},ac=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},ms=(e,t)=>{let r=[],i=[],n=[],s=ac(e);Kl(e.inputs,t,s,r,i,n),e.compute(oc(e.inputs[0],t,s,r,i,n),{inputs:[0]})},hs=e=>{let t=e.antialias,r=e.axes,i=e.coordinateTransformMode,n=e.cubicCoeffA,s=e.excludeOutside!==0,u=e.extrapolationValue,c=e.keepAspectRatioPolicy,o=e.mode,m=e.nearestMode===""?"simple":e.nearestMode;return ie({antialias:t,axes:r,coordinateTransformMode:i,cubicCoeffA:n,excludeOutside:s,extrapolationValue:u,keepAspectRatioPolicy:c,mode:o,nearestMode:m})}});var ic,sc,ys,bs,ws=j(()=>{"use strict";ke();he();Pe();ve();ic=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],i=e[2];if(t.dataType!==r.dataType||t.dataType!==i.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let n=t.dims[t.dims.length-1],s=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==n)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==s)throw new Error("Skip must have the same sequence length as input");if(i.dims.length!==1)throw new Error("Gamma must be 1D");if(i.dims[i.dims.length-1]!==n)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let u=e[3];if(u.dims.length!==1)throw new Error("Beta must be 1D");if(u.dims[u.dims.length-1]!==n)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let u=e[4];if(u.dims.length!==1)throw new Error("Bias must be 1D");if(u.dims[u.dims.length-1]!==n)throw new Error("Bias must have the same hidden size as input")}},sc=(e,t,r,i)=>{let n=e[0].dims,s=k.size(n),u=n,c=s,o=n.slice(-1)[0],m=i?n.slice(0,-1).concat(1):[],g=e.length>3,x=e.length>4,b=i&&r>1,w=i&&r>2,$=r>3,y=ut(o),C=[F("x",e[0].dataType,e[0].dims,y),F("skip",e[1].dataType,e[1].dims,y),F("gamma",e[2].dataType,e[2].dims,y)];g&&C.push(F("beta",e[3].dataType,e[3].dims,y)),x&&C.push(F("bias",e[4].dataType,e[4].dims,y)),C.push(Z("output",e[0].dataType,u,y)),b&&C.push(Z("meanOutput",1,m)),w&&C.push(Z("invStdOutput",1,m)),$&&C.push(Z("inputSkipBiasSum",e[0].dataType,u,y));let A=Re(e[0].dataType),P=B=>`\n      const hiddenSize: f32 = ${o};\n      const hiddenSizeVectorized: u32 = ${o/y};\n      const epsilon: f32 = ${t.epsilon};\n\n      ${B.declareVariables(...C)}\n\n      ${B.mainStart()}\n        ${B.guardAgainstOutOfBoundsWorkgroupSizes(c/o)}\n        let offset = global_idx * hiddenSizeVectorized;\n        var sum = ${Xe("f32",y)};\n        var squareSum = ${Xe("f32",y)};\n        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {\n          let skipValue = skip[offset + i];\n          let biasValue = ${x?"bias[i]":"0.0"};\n          let inputValue = x[offset + i];\n          let value = inputValue + skipValue + biasValue;\n          ${$?"inputSkipBiasSum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32Value = ${wt(A,y,"value")};\n          sum += f32Value;\n          squareSum += f32Value * f32Value;\n        }\n        let mean = ${ft("sum",y)} / hiddenSize;\n        let variance = sqrt(${ft("squareSum",y)} / hiddenSize - mean * mean + epsilon);\n        ${b?"meanOutput[global_idx] = mean;":""}\n        ${w?"invStdOutput[global_idx] = 1.0 / variance;":""}\n        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {\n          output[offset + i] = (output[offset + i] - ${A}(mean)) / ${A}(variance) * gamma[i]\n           + ${g?"beta[i]":"0.0"};\n        }\n      }`,W=[{dims:u,dataType:e[0].dataType}];return r>1&&W.push({dims:m,dataType:1}),r>2&&W.push({dims:m,dataType:1}),r>3&&W.push({dims:n,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:t.cacheKey},getShaderSource:P,getRunData:()=>({outputs:W,dispatchGroup:{x:Math.ceil(c/o/64)}})}},ys=(e,t)=>{ic(e.inputs);let i=[0];e.outputCount>1&&i.push(-3),e.outputCount>2&&i.push(-3),e.outputCount>3&&i.push(3),e.compute(sc(e.inputs,t,e.outputCount,!1),{outputs:i})},bs=e=>{let t=e.epsilon;return ie({epsilon:t})}});var uc,Hr,lc,vs,cc,dc,$s,xs,Cs=j(()=>{"use strict";ke();he();Pe();ve();uc=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,i)=>{if(e[i+1].dataType!==6&&e[i+1].dataType!==7)throw new Error(`Input ${i} must be an array of int32 or int64`)})},Hr=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(i=>r.push(Number(i)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(i=>r.push(Number(i)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},lc=(e,t)=>{if(e.length>1){let r=Hr(e,1),i=Hr(e,2),n=Hr(e,3);return n.length===0&&(n=[...Array(e[0].dims.length).keys()]),ie({starts:r,ends:i,axes:n})}else return t},vs=(e,t,r,i,n)=>{let s=e;return e<0&&(s+=r[i[t]]),n[t]<0?Math.max(0,Math.min(s,r[i[t]]-1)):Math.max(0,Math.min(s,r[i[t]]))},cc=(e,t,r,i)=>`fn calculateInputIndices(outputIndices: ${t.type.indices}) -> ${e.type.indices} {\n          var inputIndices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${r.length}; i >= 0; i--) {\n            var outputIndex = ${i.length===1?"outputIndices":"outputIndices[i]"};\n            var inputIndex = outputIndex * steps[i] + starts[i] + carry;\n            carry = inputIndex / inputShape[i];\n            inputIndex = inputIndex % inputShape[i];\n            if (signs[i] < 0) {\n              inputIndex = inputShape[i] - inputIndex - 1u + starts[i];\n            }\n            ${r.length===1?"inputIndices":"inputIndices[i]"} = inputIndex;\n          }\n          return inputIndices;\n      }`,dc=(e,t)=>{let r=e[0].dims,i=k.size(r),n=t.axes.length>0?k.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],s=Hr(e,4);s.forEach(y=>y!==0||(()=>{throw new Error("step cannot be 0")})),s.length===0&&(s=Array(n.length).fill(1));let u=t.starts.map((y,C)=>vs(y,C,r,n,s)),c=t.ends.map((y,C)=>vs(y,C,r,n,s));if(n.length!==r.length)for(let y=0;y<r.length;++y)n.includes(y)||(u.splice(y,0,0),c.splice(y,0,r[y]),s.splice(y,0,1));let o=s.map(y=>Math.sign(y));s.forEach((y,C,A)=>{if(y<0){let P=(c[C]-u[C])/y,W=u[C],B=W+P*s[C];u[C]=B,c[C]=W,A[C]=-y}});let m=r.slice(0);n.forEach((y,C)=>{m[y]=Math.ceil((c[y]-u[y])/s[y])});let g={dims:m,dataType:e[0].dataType},x=Z("output",e[0].dataType,m),b=F("input",e[0].dataType,r),w=k.size(m),$=y=>`\n      ${y.declareVariables(b,x)}\n        const signs = array<i32, ${o.length}>(${o.map(C=>`${C}i`).join(",")});\n        const starts = array<u32, ${u.length}>(${u.map(C=>`${C}u`).join(",")});\n        const ends = array<u32, ${c.length}>(${c.map(C=>`${C}u`).join(",")});\n        const steps = array<u32, ${s.length}>(${s.map(C=>`${C}u`).join(",")});\n        const inputShape = array<u32, ${r.length}>(${r.map(C=>`${C}u`).join(",")});\n\n        ${cc(b,x,r,m)}\n        ${y.mainStart()}\n          ${y.guardAgainstOutOfBoundsWorkgroupSizes(w)}\n          let outputIndices = ${x.offsetToIndices("global_idx")};\n          let inputIndices = calculateInputIndices(outputIndices);\n          ${x.setByOffset("global_idx",b.getByIndices("inputIndices"))}\n      }`;return{name:"Slice",shaderCache:{hint:`${t.cacheKey}|${e[4]?.dims??""}`},getShaderSource:$,getRunData:()=>({outputs:[g],dispatchGroup:{x:Math.ceil(i/64)}})}},$s=(e,t)=>{uc(e.inputs,t);let r=lc(e.inputs,t);e.compute(dc(e.inputs,r),{inputs:[0]})},xs=e=>{let t=e.starts,r=e.ends,i=e.axes;return ie({starts:t,ends:r,axes:i})}});var pc,fc,Ss,As,Is=j(()=>{"use strict";he();Pe();ve();pc=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},fc=(e,t)=>{let r=Re(e.dataType),i=e.dims,n=k.size(i),s=64,u=t.axis;if(u<0&&(u=i.length+u),u<i.length-1)throw new Error("softmax only supports last axis for now.");let c=i[u],o=n/c,m=ut(c),g=c/m,x=m===1?r:`vec${m}<${r}>`,b=(y,C)=>C===4?`max(max(${y}.x, ${y}.y), max(${y}.z, ${y}.w))`:C===2?`max(${y}.x, ${y}.y)`:C===3?`max(max(${y}.x, ${y}.y), ${y}.z)`:y,w=r==="f32"?`var threadMax = ${x}(-3.402823e+38f);`:`var threadMax = ${x}(-65504.0h);`;return{name:"Softmax",getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:o}}),getShaderSource:y=>`\n      var<workgroup> rowMaxShared : ${x};\n      var<workgroup> rowSumShared : ${x};\n      var<workgroup> threadShared : array<${x}, ${s}>;\n\n      @group(0) @binding(0) var<storage, read> x : array<${x}>;\n      @group(0) @binding(1) var<storage, read_write> result : array<${x}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${x} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${x}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n\n      @compute @workgroup_size(${s}, 1, 1)\n      fn main(@builtin(local_invocation_id) local_id : vec3<u32>, @builtin(global_invocation_id) global_id : vec3u) {\n        let gindex = i32(global_id.x);\n        let lindex = i32(local_id.x);\n        const wg = ${s};\n        let row = gindex / wg;\n        let cols = ${g};\n        let row_stride : i32 = ${g};\n\n        // find the rows max\n        ${w}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${x}(${b("threadShared[0]",m)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${x}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${x}(${ft("threadShared[0]",m)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`}},Ss=(e,t)=>{pc(e.inputs),e.compute(fc(e.inputs[0],t))},As=e=>ie({axis:e.axis})});var mc,hc,gc,yc,bc,Ts,Os,Es=j(()=>{"use strict";he();Pe();ve();mc=e=>{if(!e||e.length<1)throw new Error("too few inputs")},hc=(e,t)=>{let r=[],i=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(n=>r.push(Number(n))),i=r.length),ie({numOutputs:i,axis:t.axis,splitSizes:r})},gc=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < sizeInConcatAxis[i]) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,yc=e=>{let t=e.length,r=[];for(let i=0;i<t;++i){let n=e[i].setByIndices("indices","input[global_idx]");t===1?r.push(n):i===0?r.push(`if (outputNumber == ${i}u) { ${n} }`):i===t-1?r.push(`else { ${n} }`):r.push(`else if (outputNumber == ${i}) { ${n} }`)}return`\n      fn writeBufferData(outputNumber: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${r.join(`\n`)}\n      }`},bc=(e,t)=>{let r=e[0].dims,i=k.size(r),n=e[0].dataType,s=r.length,u=t.axis,c=u<0?r.length+u:u,o=new Array(t.numOutputs),m=F("input",n,r),g=new Array(t.numOutputs),x=[],b=[],w=0;for(let C=0;C<t.numOutputs;C++){w+=t.splitSizes[C],g[C]=w;let A=r.slice();A[t.axis]=t.splitSizes[C],b.push(A),o[C]=Z(`output${C}`,n,b[C]),x.push({dims:b[C],dataType:e[0].dataType})}let $=s<2?"indices":`indices[${c}]`,y=C=>`\n  ${C.declareVariables(m,...o)}\n  const sizeInConcatAxis = array<u32, ${g.length}>(${g.map(A=>`${A}u`).join(",")});\n  ${gc(g.length)}\n  ${yc(o)}\n\n  ${C.mainStart()}\n    ${C.guardAgainstOutOfBoundsWorkgroupSizes(i)}\n\n    var indices = ${m.offsetToIndices("global_idx")};\n    let outputNumber = calculateOutputIndex(${$});\n    if (outputNumber != 0) {\n        ${$} -= sizeInConcatAxis[outputNumber - 1u];\n    }\n    writeBufferData(outputNumber, indices, global_idx);\n  }`;return{name:"Split",shaderCache:{hint:t.cacheKey},getShaderSource:y,getRunData:()=>({outputs:x,dispatchGroup:{x:Math.ceil(i/64)}})}},Ts=(e,t)=>{mc(e.inputs);let r=e.inputs.length===1?t:hc(e.inputs,t);e.compute(bc(e.inputs,r),{inputs:[0]})},Os=e=>{let t=e.axis,r=e.splitSizes,i=e.numOutputs<0?r.length:e.numOutputs;if(i!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return ie({axis:t,numOutputs:i,splitSizes:r})}});var _s,wc,vc,$c,Ps,Rs=j(()=>{"use strict";ke();he();ve();_s=e=>Array.from(e.getBigInt64Array(),Number),wc=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(_s(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},vc=(e,t)=>{let r=[];for(let i=0;i<e.length;++i)r.push(e[i]*t[i]);return r},$c=e=>{let t=e[0].dims,r=_s(e[1]),i=vc(t,r),n=k.size(i),s=e[0].dataType,u=F("input",s,t),c=Z("output",s,i),o=m=>`\n      const inputShape = ${u.indices(...t)};\n      ${m.declareVariables(u,c)}\n      ${m.mainStart()}\n      ${m.guardAgainstOutOfBoundsWorkgroupSizes(n)}\n      let outputIndices = ${c.offsetToIndices("global_idx")};\n      var inputIndices: ${u.type.indices};\n      for (var i = 0; i < ${t.length}; i++) {\n        let inputDimValue = ${c.indicesGet("outputIndices","i")}  % ${u.indicesGet("inputShape","i")};\n\n        ${u.indicesSet("inputIndices","i","inputDimValue")}\n      }\n      ${c.setByOffset("global_idx",u.getByIndices("inputIndices"))}\n    }`;return{name:"Tile",shaderCache:{hint:`${r}`},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:o}},Ps=e=>{wc(e.inputs),e.compute($c(e.inputs),{inputs:[0]})}});var xc,Cc,Bs,Ms=j(()=>{"use strict";ke();he();ve();xc=(e,t,r,i,n)=>{let s=k.size(r),u=Math.ceil(s/4),c=Z("outputData",n,r,4),o=F("aData",t[1].dataType,t[1].dims,4),m=F("bData",t[2].dataType,t[2].dims,4),g=F("cData",t[0].dataType,t[0].dims,4),x,b=(w,$,y)=>`select(${$}, ${w}, ${y})`;if(!i)x=c.setByOffset("global_idx",b(o.getByOffset("global_idx"),m.getByOffset("global_idx"),g.getByOffset("global_idx")));else{let w=($,y,C="")=>{let A=`aData[indexA${y}][componentA${y}]`,P=`bData[indexB${y}][componentB${y}]`,W=`bool(cData[indexC${y}] & ${4278190080>>>(3-y)*8}u)`;return`\n            let outputIndices${y} = ${c.offsetToIndices(`global_idx * 4u + ${y}u`)};\n            let offsetA${y} = ${o.broadcastedIndicesToOffset(`outputIndices${y}`,c)};\n            let offsetB${y} = ${m.broadcastedIndicesToOffset(`outputIndices${y}`,c)};\n            let offsetC${y} = ${g.broadcastedIndicesToOffset(`outputIndices${y}`,c)};\n            let indexA${y} = offsetA${y} / 4u;\n            let indexB${y} = offsetB${y} / 4u;\n            let indexC${y} = offsetC${y} / 4u;\n            let componentA${y} = offsetA${y} % 4u;\n            let componentB${y} = offsetB${y} % 4u;\n            ${$}[${y}] = ${C}(${b(A,P,W)});\n          `};n===9?x=`\n            var data = vec4<u32>(0);\n            ${w("data",0,"u32")}\n            ${w("data",1,"u32")}\n            ${w("data",2,"u32")}\n            ${w("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:x=`\n            ${w("outputData[global_idx]",0)}\n            ${w("outputData[global_idx]",1)}\n            ${w("outputData[global_idx]",2)}\n            ${w("outputData[global_idx]",3)}\n          `}return`\n        ${e.declareVariables(g,o,m,c)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n        ${x}\n      }`},Cc=e=>{let t=e[1].dims,r=e[2].dims,i=e[0].dims,n=e[1].dataType,s=!(k.areEqual(t,r)&&k.areEqual(r,i)),u=t,c=k.size(t);if(s){let o=rt.calcShape(rt.calcShape(t,r,!1),i,!1);if(!o)throw new Error("Can\'t perform where op on the given tensors");u=o,c=k.size(u)}return{name:"Where",getShaderSource:o=>xc(o,e,u,s,n),getRunData:()=>({outputs:[{dims:u,dataType:n}],dispatchGroup:{x:Math.ceil(c/64/4)}})}},Bs=e=>{e.compute(Cc(e.inputs))}});var ks,Ds=j(()=>{"use strict";qo();Xo();Ea();Va();Fa();An();ai();li();pi();hi();bi();$i();Si();Ti();Ei();Ri();Ki();fs();bn();gs();ws();Cs();Is();Es();Rs();Gr();$n();Ms();ks=new Map([["Abs",[Jo]],["Acos",[Zo]],["Acosh",[Qo]],["Add",[_a]],["ArgMax",[Ko,wn]],["ArgMin",[jo,wn]],["Asin",[ea]],["Asinh",[ta]],["Atan",[ra]],["Atanh",[na]],["AveragePool",[zi,Wi]],["BiasAdd",[Yo]],["BiasSplitGelu",[Oa]],["Cast",[aa,oa]],["Ceil",[sa]],["ClipV10",[vn]],["Clip",[ia]],["Concat",[Ua,Na]],["Conv",[Tn,In]],["ConvTranspose",[oi,ni]],["Cos",[ua]],["Cosh",[la]],["Div",[Pa]],["Einsum",[si,ui]],["Elu",[ca,_r]],["Equal",[Ra]],["Erf",[da]],["Exp",[pa]],["Expand",[di]],["Floor",[fa]],["FusedConv",[Tn,In]],["Gather",[mi,fi]],["GatherElements",[yi,gi]],["Gelu",[ma]],["Gemm",[wi,vi]],["GlobalAveragePool",[Ui,Vi]],["GlobalMaxPool",[ji,Li]],["Greater",[Da]],["GreaterOrEqual",[za]],["InstanceNormalization",[Ci,xi]],["LayerNormalization",[Ii,Ai]],["LeakyRelu",[ha,_r]],["Less",[Wa]],["LessOrEqual",[Ga]],["Log",[Ta]],["MatMul",[Oi]],["MaxPool",[Fi,Hi]],["Mul",[Ba]],["Neg",[ya]],["Not",[ga]],["Pad",[_i,Pi]],["Pow",[Ma]],["Range",[ps]],["Reciprocal",[ba]],["ReduceMin",[Vo,Je]],["ReduceMean",[Go,Je]],["ReduceMax",[zo,Je]],["ReduceSum",[No,Je]],["ReduceProd",[Uo,Je]],["ReduceL1",[ko,Je]],["ReduceL2",[Do,Je]],["ReduceLogSum",[Mo,Je]],["ReduceLogSumExp",[Wo,Je]],["ReduceSumSquare",[Fo,Je]],["Relu",[wa]],["Resize",[ms,hs]],["Sigmoid",[va]],["Sin",[$a]],["Sinh",[xa]],["Slice",[$s,xs]],["SkipLayerNormalization",[ys,bs]],["Split",[Ts,Os]],["Sqrt",[Ca]],["Softmax",[Ss,As]],["Sub",[ka]],["Tan",[Sa]],["Tanh",[Aa]],["ThresholdedRelu",[Ia,_r]],["Tile",[Ps]],["Transpose",[Ya,Xa]],["Where",[Bs]]])});var Lr,Ws=j(()=>{"use strict";ke();pt();ve();Lr=class{constructor(t){this.backend=t;this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,i,n,s,u,c){let o=this.backend.device,m=this.backend.getComputePassEncoder();m.setPipeline(t.computePipeline);let g=[];for(let b of n)g.push({binding:g.length,resource:{buffer:b.buffer}});for(let b of s)g.push({binding:g.length,resource:{buffer:b.buffer}});c&&g.push({binding:g.length,resource:c});let x=o.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:g,label:t.programInfo.name});if(m.setBindGroup(0,x),m.dispatchWorkgroups(...u),this.backend.pendingDispatchNumber++,this.backend.isQueryEnabled()){typeof this.backend.queryData>"u"&&(this.backend.queryData=this.backend.gpuDataManager.create(this.backend.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE));let b=this.backend.gpuDataManager.create(this.backend.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.backend.endComputePass(),this.backend.getCommandEncoder().resolveQuerySet(this.backend.querySet,0,2,this.backend.queryData.buffer,0),this.backend.getCommandEncoder().copyBufferToBuffer(this.backend.queryData.buffer,0,b.buffer,0,this.backend.querySetCount*8),this.backend.flush();let w=this.backend.currentKernelId,$=this.backend.kernels.get(w),y=`[${$[0]}] ${$[1]}`;b.buffer.mapAsync(GPUMapMode.READ).then(()=>{let C=new BigUint64Array(b.buffer.getMappedRange()),A=C[0],P=C[1];b.buffer.unmap(),typeof this.backend.queryTimeBase>"u"&&(this.backend.queryTimeBase=A);let W=Number(A-this.backend.queryTimeBase),B=Number(P-this.backend.queryTimeBase);if(!Number.isSafeInteger(W)||!Number.isSafeInteger(B))throw new RangeError("incorrect timestamp range");this.backend.gpuDataManager.release(b.id);let D="";r.forEach((z,N)=>{D+=`input[${N}]: [${z.dims}] | ${Jt(z.dataType)}, `});let _="";i.forEach((z,N)=>{_+=`output[${N}]: [${z.dims}] | ${Jt(z.dataType)}, `}),console.log(`[profiling] kernel "${w}|${y}" ${D}${_}execution time: ${B-W} ns`)})}this.backend.pendingDispatchNumber>=16&&this.backend.flush()}dispose(){}build(t,r){let i=this.backend.device,n=[];i.features.has("shader-f16")&&n.push("enable f16;");let s=Ro(r),u=t.getShaderSource(s),c=`${n.join(`\n`)}\n${s.additionalImplementations}\n${u}`,o=i.createShaderModule({code:c,label:t.name});Oe("verbose",()=>`[WebGPU] shader code: ${c}`);let m=i.createComputePipeline({compute:{module:o,entryPoint:"main"},layout:"auto",label:t.name});return{programInfo:t,computePipeline:m}}normalizeDispatchGroupSize(t){let r=typeof t=="number"?t:t.x,i=typeof t=="number"?1:t.y||1,n=typeof t=="number"?1:t.z||1,s=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=s&&i<=s&&n<=s)return[r,i,n];let u=r*i*n,c=Math.ceil(Math.sqrt(u));if(c>s){if(c=Math.ceil(Math.cbrt(u)),c>s)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[c,c,c]}else return[c,c,1]}}});var Sc,Ac,jr,zs=j(()=>{"use strict";pt();Ao();Eo();Ds();Ws();Sc=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let i=0;i<e.length;++i){let n=e[i].dataType;switch(t[i]){case"none":{r.push("");break}case"type":{r.push(`${n}`);break}case"rank":{let s=e[i].dims.length;r.push(`${n};${s}`);break}case"dims":{let s=e[i].dims.join(",");r.push(`${n};${s}`);break}default:throw new Error(`unsupported input dependency: ${t[i]}`)}}return r.join("|")},Ac=(e,t)=>{let r=e.name;return e.shaderCache?.hint&&(r+="["+e.shaderCache.hint+"]"),r+=`:${Sc(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,r},jr=class{constructor(){this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.pendingDispatchNumber=0;this.querySetCount=2;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t){if(!navigator.gpu)throw new Error("WebGpuBackend: WebGPU is not available.");let r=await navigator.gpu.requestAdapter();if(!r)throw new Error("WebGpuBackend: Failed to get GPU adapter.");this.env=t;let i=[],n={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:i};r.features.has("timestamp-query")&&i.push("timestamp-query"),r.features.has("shader-f16")&&i.push("shader-f16"),this.device=await r.requestDevice(n),this.gpuDataManager=Oo(this),this.programManager=new Lr(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Co(t.logLevel,!!t.debug),this.device.onuncapturederror=s=>{s.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${s.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device})}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t={};this.isQueryEnabled()&&(typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1}),this.computePassEncoder=this.getCommandEncoder().beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){this.commandEncoder&&(this.endComputePass(),this.device.queue.submit([this.getCommandEncoder().finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0)}isQueryEnabled(){return!!(this.device.features.has("timestamp-query")&&this.env.webgpu.profilingMode==="default")}run(t,r,i,n,s){let u=[];for(let A=0;A<r.length;++A){let P=this.gpuDataManager.get(r[A].data);if(!P)throw new Error(`no GPU data for input: ${r[A].data}`);u[A]=P}let c=Ac(t,r),o=this.programManager.getArtifact(c),{outputs:m,dispatchGroup:g,programUniforms:x}=t.getRunData(r),b=i.length===0?m.map((A,P)=>P):i;if(b.length!==m.length)throw new Error(`Output size ${b.length} must be equal to ${m.length}.`);let w=[],$=[];for(let A=0;A<m.length;++A){if(!Number.isInteger(b[A])||b[A]<-3||b[A]>=m.length)throw new Error(`Invalid output index: ${b[A]}`);if(b[A]===-3)continue;let P=b[A]===-1,W=b[A]===-2,B=P||W?s(m[A].dataType,m[A].dims):n(b[A],m[A].dataType,m[A].dims),D=this.gpuDataManager.get(B.data);if(!D)throw new Error(`no GPU data for output: ${B.data}`);if(P&&this.temporaryData.push(D),W){let _=this.kernelPersistentData.get(this.currentKernelId);_||(_=[],this.kernelPersistentData.set(this.currentKernelId,_)),_.push(D)}w.push(B),$.push(D)}let y;if(x){let A=0,P=0,W=[],B=1;x.forEach(z=>{let N=typeof z.data=="number"?[z.data]:z.data,Y;switch(N.length){case 1:Y=4;break;case 2:Y=8;break;case 3:Y=16;break;case 4:Y=16;break;case 5:Y=16;break;case 6:Y=16;break;default:throw new Error(`unsupported data length: ${N.length}`)}(P===5||P===6)&&(Y=16),Y>B&&(B=Y),A=Math.ceil(A/Y)*Y,P=N.length,W.push(A),A+=N.length*4}),A=Math.ceil(A/B)*B;let D=new ArrayBuffer(A);x.forEach((z,N)=>{let Y=W[N],le=typeof z.data=="number"?[z.data]:z.data;z.type==="int32"?new Int32Array(D,Y,le.length).set(le):z.type==="uint32"?new Uint32Array(D,Y,le.length).set(le):new Float32Array(D,Y,le.length).set(le)});let _=this.gpuDataManager.create(A,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(_.buffer,0,D,0,A),this.gpuDataManager.release(_.id),y={offset:0,size:A,buffer:_.buffer}}let C=this.programManager.normalizeDispatchGroupSize(g);return o||(o=this.programManager.build(t,C),this.programManager.setArtifact(c,o)),Oe("info",()=>`[ProgramManager] run "${t.name}" (key=${c}) with ${C[0]}x${C[1]}x${C[2]}`),this.programManager.run(o,r,w,u,$,C,y),w}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,i,n){let s=ks.get(t);if(!s)throw new Error(`kernel not implemented: ${t}`);this.kernels.set(r,[t,n,s[0],[s[1],i]])}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let i of r)this.gpuDataManager.release(i.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,i){let n=this.kernels.get(t);if(!n)throw new Error(`kernel not created: ${t}`);let[s,u,c,o]=n;if(this.currentKernelId!==null)throw new Error(`kernel "[${s}] ${u}" is not allowed to be called recursively`);this.currentKernelId=t,o[0]&&(o[1]=o[0](o[1]),o[0]=void 0),Oe("info",()=>`[WebGPU] Start to run kernel "[${s}] ${u}"...`);let m=this.env.debug;this.temporaryData=[];try{return m&&this.device.pushErrorScope("validation"),c(r,o[1]),0}catch(g){return i.push(Promise.resolve(`[WebGPU] Kernel "[${s}] ${u}" failed. ${g}`)),1}finally{m&&i.push(this.device.popErrorScope().then(g=>g?`GPU validation error for kernel "[${s}] ${u}": ${g.message}`:null));for(let g of this.temporaryData)this.gpuDataManager.release(g.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,i,n){let s=this.sessionExternalDataMapping.get(t);s||(s=new Map,this.sessionExternalDataMapping.set(t,s));let u=s.get(r),c=this.gpuDataManager.registerExternalBuffer(i,n,u?.[1]);return s.set(r,[c,i]),c}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(i=>this.gpuDataManager.unregisterExternalBuffer(i[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw new Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,i){return async()=>{let n=await pn(this,t,r);return So(n.buffer,i)}}}});var Gs={};xr(Gs,{init:()=>Ic});var or,Mn,Ic,Vs=j(()=>{"use strict";ke();zs();pt();he();or=class e{constructor(t,r,i,n){this.module=t;this.dataType=r;this.data=i;this.dims=n}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=k.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=k.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=k.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(k.size(t)!==k.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},Mn=class{constructor(t,r,i){this.module=t;this.backend=r;this.customDataOffset=0;this.customDataSize=0;let n=t.HEAPU32,s=i>>2;this.opKernelContext=n[s++];let u=n[s++];this.outputCount=n[s++],this.customDataOffset=n[s++],this.customDataSize=n[s++];let c=[];for(let o=0;o<u;o++){let m=n[s++],g=n[s++],x=n[s++],b=[];for(let w=0;w<x;w++)b.push(n[s++]);c.push(new or(t,m,g,b))}this.inputs=c}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(t,r){let i=r?.inputs?.map(c=>typeof c=="number"?this.inputs[c]:c)??this.inputs,n=r?.outputs??[],s=(c,o,m)=>new or(this.module,o,this.output(c,m),m),u=(c,o)=>{let m=Zt(c);if(!m)throw new Error(`Unsupported data type: ${c}`);let g=m*k.size(o);return new or(this.module,c,this.backend.gpuDataManager.create(g).id,o)};return this.backend.run(t,i,n,s,u)}output(t,r){let i=this.module.stackSave();try{let n=this.module.stackAlloc((1+r.length)*4),s=n>>2;this.module.HEAPU32[s++]=r.length;for(let u=0;u<r.length;u++)this.module.HEAPU32[s++]=r[u];return this.module._JsepOutput(this.opKernelContext,t,n)}catch(n){throw new Error(`Failed to generate kernel\'s output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(i)}}},Ic=async(e,t)=>{let r=e.jsepInit;if(r&&navigator.gpu){if(!t.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using WebGPU EP");let i=new jr;await i.initialize(t),r(i,n=>i.alloc(n),n=>i.free(n),(n,s,u,c=!1)=>{if(c)Oe("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${n}, dst=${s}, size=${u}`),i.memcpy(n,s);else{Oe("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${n}, gpuDataId=${s}, size=${u}`);let o=e.HEAPU8.subarray(n,n+u);i.upload(s,o)}},async(n,s,u)=>{Oe("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${n}, dataOffset=${s}, size=${u}`),await i.download(n,()=>e.HEAPU8.subarray(s,s+u))},(n,s,u)=>i.createKernel(n,s,u,t.debug||t.webgpu.profilingMode==="default"?e.UTF8ToString(e._JsepGetNodeName(s)):`${s}`),n=>i.releaseKernel(n),(n,s,u,c)=>{Oe("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${u}, kernel=${n}, contextDataOffset=${s}`);let o=new Mn(e,i,s);return i.computeKernel(n,o,c)})}}});var go;go=ao();var yu=fo(),sn,un=!1,Cr=!1,ho=!1,bu=()=>{try{return typeof SharedArrayBuffer>"u"?!1:(typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch{return!1}},wu=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},vu=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",yo=async e=>{if(un)return Promise.resolve();if(Cr)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(ho)throw new Error("previous call to \'initializeWebAssembly()\' failed.");Cr=!0;let t=e.initTimeout,r=e.numThreads,i=e.simd,n=r>1&&bu(),s=i&&wu(),u=e.wasmPaths,c=typeof u=="string"?u:void 0,o=vu(s,n),m=typeof u=="object"?u[o]:void 0,g=!1,x=[];if(t>0&&x.push(new Promise(b=>{setTimeout(()=>{g=!0,b()},t)})),x.push(new Promise((b,w)=>{let $=n?yu:go,y={locateFile:(C,A)=>{if(n&&C.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([mo()],{type:"text/javascript"}));if(C.endsWith(".wasm")){if(m)return m;let P=c??A;return o==="ort-wasm-simd.wasm"?P+"ort-wasm-simd.jsep.wasm":o==="ort-wasm-simd-threaded.wasm"?P+"ort-wasm-simd-threaded.jsep.wasm":P+o}return A+C}};if(n)if(typeof Blob>"u")y.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let C=`var ortWasmThreaded=${$.toString()};`;y.mainScriptUrlOrBlob=new Blob([C],{type:"text/javascript"})}$(y).then(C=>{Cr=!1,un=!0,sn=C,b()},C=>{Cr=!1,ho=!0,w(C)})})),await Promise.race(x),g)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},_e=()=>{if(un&&sn)return sn;throw new Error("WebAssembly is not initialized yet.")};var Me=(e,t)=>{let r=_e(),i=r.lengthBytesUTF8(e)+1,n=r._malloc(i);return r.stringToUTF8(e,n,i),t.push(n),n},Xt=(e,t,r,i)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([n,s])=>{let u=t?t+n:n;if(typeof s=="object")Xt(s,u+".",r,i);else if(typeof s=="string"||typeof s=="number")i(u,s.toString());else if(typeof s=="boolean")i(u,s?"1":"0");else throw new Error(`Can\'t handle extra config type: ${typeof s}`)})},Ae=e=>{let t=_e(),r=t.stackSave();try{let i=t.stackAlloc(8);t._OrtGetLastError(i,i+4);let n=t.HEAP32[i/4],s=t.HEAPU32[i/4+1],u=s?t.UTF8ToString(s):"";throw new Error(`${e} ERROR_CODE: ${n}, ERROR_MESSAGE: ${u}`)}finally{t.stackRestore(r)}};var bo=e=>{let t=_e(),r=0,i=[],n=e||{};try{if(e?.logSeverityLevel===void 0)n.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)n.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(n.terminate=!1);let s=0;return e?.tag!==void 0&&(s=Me(e.tag,i)),r=t._OrtCreateRunOptions(n.logSeverityLevel,n.logVerbosityLevel,!!n.terminate,s),r===0&&Ae("Can\'t create run options."),e?.extra!==void 0&&Xt(e.extra,"",new WeakSet,(u,c)=>{let o=Me(u,i),m=Me(c,i);t._OrtAddRunConfigEntry(r,o,m)!==0&&Ae(`Can\'t set a run config entry: ${u} - ${c}.`)}),[r,i]}catch(s){throw r!==0&&t._OrtReleaseRunOptions(r),i.forEach(u=>t._free(u)),s}};var $u=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},xu=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Cu=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},Su=(e,t,r)=>{for(let i of t){let n=typeof i=="string"?i:i.name;switch(n){case"xnnpack":n="XNNPACK";break;case"webnn":if(n="WEBNN",typeof i!="string"){let u=i;if(u?.deviceType){let c=Me("deviceType",r),o=Me(u.deviceType,r);_e()._OrtAddSessionConfigEntry(e,c,o)!==0&&Ae(`Can\'t set a session config entry: \'deviceType\' - ${u.deviceType}.`)}if(u?.powerPreference){let c=Me("powerPreference",r),o=Me(u.powerPreference,r);_e()._OrtAddSessionConfigEntry(e,c,o)!==0&&Ae(`Can\'t set a session config entry: \'powerPreference\' - ${u.powerPreference}.`)}}break;case"webgpu":if(n="JS",typeof i!="string"){let u=i;if(u?.preferredLayout){if(u.preferredLayout!=="NCHW"&&u.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either \'NCHW\' or \'NHWC\': ${u.preferredLayout}`);let c=Me("preferredLayout",r),o=Me(u.preferredLayout,r);_e()._OrtAddSessionConfigEntry(e,c,o)!==0&&Ae(`Can\'t set a session config entry: \'preferredLayout\' - ${u.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${n}`)}let s=Me(n,r);_e()._OrtAppendExecutionProvider(e,s)!==0&&Ae(`Can\'t append execution provider: ${n}.`)}},wo=e=>{let t=_e(),r=0,i=[],n=e||{};Cu(n);try{let s=$u(n.graphOptimizationLevel??"all"),u=xu(n.executionMode??"sequential"),c=typeof n.logId=="string"?Me(n.logId,i):0,o=n.logSeverityLevel??2;if(!Number.isInteger(o)||o<0||o>4)throw new Error(`log serverity level is not valid: ${o}`);let m=n.logVerbosityLevel??0;if(!Number.isInteger(m)||m<0||m>4)throw new Error(`log verbosity level is not valid: ${m}`);let g=typeof n.optimizedModelFilePath=="string"?Me(n.optimizedModelFilePath,i):0;if(r=t._OrtCreateSessionOptions(s,!!n.enableCpuMemArena,!!n.enableMemPattern,u,!!n.enableProfiling,0,c,o,m,g),r===0&&Ae("Can\'t create session options."),n.executionProviders&&Su(r,n.executionProviders,i),n.freeDimensionOverrides)for(let[x,b]of Object.entries(n.freeDimensionOverrides)){if(typeof x!="string")throw new Error(`free dimension override name must be a string: ${x}`);if(typeof b!="number"||!Number.isInteger(b)||b<0)throw new Error(`free dimension override value must be a non-negative integer: ${b}`);let w=Me(x,i);t._OrtAddFreeDimensionOverride(r,w,b)!==0&&Ae(`Can\'t set a free dimension override: ${x} - ${b}.`)}return n.extra!==void 0&&Xt(n.extra,"",new WeakSet,(x,b)=>{let w=Me(x,i),$=Me(b,i);t._OrtAddSessionConfigEntry(r,w,$)!==0&&Ae(`Can\'t set a session config entry: ${x} - ${b}.`)}),[r,i]}catch(s){throw r!==0&&t._OrtReleaseSessionOptions(r),i.forEach(u=>t._free(u)),s}};ke();var Ns=!1,Tc=e=>{let t=_e(),r=t.stackSave();try{let i=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,i,i+4)!==0&&Ae("Can\'t get session input/output count."),[t.HEAP32[i/4],t.HEAP32[i/4+1]]}finally{t.stackRestore(r)}},Oc=(e,t)=>{_e()._OrtInit(e,t)!==0&&Ae("Can\'t initialize onnxruntime.")},Fs=async e=>{Oc(e.wasm.numThreads,Qt(e.logLevel));{let t=(Vs(),Et(Gs)).init;await t(_e(),e)}Ns=!0},ar=new Map,Hs=()=>Ns,kn=e=>{let t=_e(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},Dn=(e,t)=>{let r=_e(),i=0,n=0,s=0,u=[],c=[],o=[];try{[n,u]=wo(t),i=r._OrtCreateSession(e[0],e[1],n),i===0&&Ae("Can\'t create a session.");let[m,g]=Tc(i),x=[],b=[],w=[];for(let y=0;y<m;y++){let C=r._OrtGetInputName(i,y);C===0&&Ae("Can\'t get an input name."),c.push(C),x.push(r.UTF8ToString(C))}for(let y=0;y<g;y++){let C=r._OrtGetOutputName(i,y);C===0&&Ae("Can\'t get an output name."),o.push(C);let A=r.UTF8ToString(C);b.push(A);{let P=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[A]??"cpu";if(P!=="cpu"&&P!=="cpu-pinned"&&P!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${P}.`);w.push(P)}}let $=null;return w.some(y=>y==="gpu-buffer")&&(s=r._OrtCreateBinding(i),s===0&&Ae("Can\'t create IO binding."),$={handle:s,outputPreferredLocations:w,outputPreferredLocationsEncoded:w.map(y=>cn(y))}),ar.set(i,[i,c,o,$]),[i,x,b]}catch(m){throw c.forEach(g=>r._OrtFree(g)),o.forEach(g=>r._OrtFree(g)),s!==0&&r._OrtReleaseBinding(s),i!==0&&r._OrtReleaseSession(i),m}finally{r._free(e[0]),n!==0&&r._OrtReleaseSessionOptions(n),u.forEach(m=>r._free(m))}},Ls=(e,t)=>{let r=kn(e);return Dn(r,t)},js=e=>{let t=_e(),r=ar.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[i,n,s,u]=r;u&&t._OrtReleaseBinding(u.handle),t.jsepUnregisterBuffers?.(e),n.forEach(c=>t._OrtFree(c)),s.forEach(c=>t._OrtFree(c)),t._OrtReleaseSession(i),ar.delete(e)},Us=(e,t,r,i,n)=>{if(!e){t.push(0);return}let s=_e(),u=e[0],c=e[1],o=e[3],m,g;if(u==="string"&&o==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(o==="gpu-buffer"){let w=e[2].gpuBuffer,$=Zt(ln(u));g=c.reduce((y,C)=>y*C,1)*$,m=s.jsepRegisterBuffer(i,n,w,g)}else{let w=e[2];if(Array.isArray(w)){g=4*w.length,m=s._malloc(g),r.push(m);let $=m/4;for(let y=0;y<w.length;y++){if(typeof w[y]!="string")throw new TypeError(`tensor data at index ${y} is not a string`);s.HEAPU32[$++]=Me(w[y],r)}}else g=w.byteLength,m=s._malloc(g),r.push(m),s.HEAPU8.set(new Uint8Array(w.buffer,w.byteOffset,g),m)}let x=s.stackSave(),b=s.stackAlloc(4*c.length);try{let w=b/4;c.forEach(y=>s.HEAP32[w++]=y);let $=s._OrtCreateTensor(ln(u),m,g,b,c.length,cn(o));$===0&&Ae(`Can\'t create tensor for input/output. session=${i}, index=${n}.`),t.push($)}finally{s.stackRestore(x)}},Ks=async(e,t,r,i,n,s)=>{let u=_e(),c=ar.get(e);if(!c)throw new Error(`cannot run inference. invalid session id: ${e}`);let[o,m,g,x]=c,b=t.length,w=i.length,$=0,y=[],C=[],A=[],P=[],W=u.stackSave(),B=u.stackAlloc(b*4),D=u.stackAlloc(b*4),_=u.stackAlloc(w*4),z=u.stackAlloc(w*4);try{[$,y]=bo(s);for(let ae=0;ae<b;ae++)Us(r[ae],C,P,e,t[ae]);for(let ae=0;ae<w;ae++)Us(n[ae],A,P,e,b+i[ae]);let N=B/4,Y=D/4,le=_/4,M=z/4;for(let ae=0;ae<b;ae++)u.HEAPU32[N++]=C[ae],u.HEAPU32[Y++]=m[t[ae]];for(let ae=0;ae<w;ae++)u.HEAPU32[le++]=A[ae],u.HEAPU32[M++]=g[i[ae]];if(x){let{handle:ae,outputPreferredLocations:we,outputPreferredLocationsEncoded:K}=x;if(m.length!==b)throw new Error(`input count from feeds (${b}) is expected to be always equal to model\'s input count (${m.length}).`);for(let Se=0;Se<b;Se++){let Be=t[Se];await u._OrtBindInput(ae,m[Be],C[Se])!==0&&Ae(`Can\'t bind input[${Se}] for session=${e}.`)}for(let Se=0;Se<w;Se++){let Be=i[Se];n[Se]?.[3]?u._OrtBindOutput(ae,g[Be],A[Se],0)!==0&&Ae(`Can\'t bind pre-allocated output[${Se}] for session=${e}.`):u._OrtBindOutput(ae,g[Be],0,K[Be])!==0&&Ae(`Can\'t bind output[${Se}] to ${we[Se]} for session=${e}.`)}}let q;x?q=await u._OrtRunWithBinding(o,x.handle,w,_,$):q=await u._OrtRun(o,D,B,b,z,w,_,$),q!==0&&Ae("failed to call OrtRun().");let Ce=[];for(let ae=0;ae<w;ae++){let we=u.HEAPU32[_/4+ae];if(we===A[ae]){Ce.push(n[ae]);continue}let K=u.stackSave(),Se=u.stackAlloc(4*4),Be=!1,xe,Ie=0;try{u._OrtGetTensorData(we,Se,Se+4,Se+8,Se+12)!==0&&Ae(`Can\'t access output tensor data on index ${ae}.`);let Ge=Se/4,it=u.HEAPU32[Ge++];Ie=u.HEAPU32[Ge++];let V=u.HEAPU32[Ge++],ce=u.HEAPU32[Ge++],pe=[];for(let Ee=0;Ee<ce;Ee++)pe.push(u.HEAPU32[V/4+Ee]);u._OrtFree(V);let ze=pe.reduce((Ee,Te)=>Ee*Te,1);xe=Jt(it);let Ve=x?.outputPreferredLocations[i[ae]];if(xe==="string"){if(Ve==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let Ee=[],Te=Ie/4;for(let He=0;He<ze;He++){let Le=u.HEAPU32[Te++],Ue=He===ze-1?void 0:u.HEAPU32[Te]-Le;Ee.push(u.UTF8ToString(Le,Ue))}Ce.push([xe,pe,Ee,"cpu"])}else if(Ve==="gpu-buffer"&&ze>0){let Ee=u.jsepGetBuffer(Ie),Te=Zt(it);if(Te===void 0||!vo(xe))throw new Error(`Unsupported data type: ${xe}`);Be=!0,Ce.push([xe,pe,{gpuBuffer:Ee,download:u.jsepCreateDownloader(Ee,ze*Te,xe),dispose:()=>{u._OrtReleaseTensor(we)}},"gpu-buffer"])}else{let Ee=Sr(xe),Te=new Ee(ze);new Uint8Array(Te.buffer,Te.byteOffset,Te.byteLength).set(u.HEAPU8.subarray(Ie,Ie+Te.byteLength)),Ce.push([xe,pe,Te,"cpu"])}}finally{u.stackRestore(K),xe==="string"&&Ie&&u._free(Ie),Be||u._OrtReleaseTensor(we)}}return x&&u._OrtClearBoundOutputs(x.handle),Ce}finally{u.stackRestore(W),C.forEach(N=>u._OrtReleaseTensor(N)),A.forEach(N=>u._OrtReleaseTensor(N)),P.forEach(N=>u._free(N)),$!==0&&u._OrtReleaseRunOptions($),y.forEach(N=>u._free(N))}},qs=e=>{let t=_e(),r=ar.get(e);if(!r)throw new Error("invalid session id");let i=r[0],n=t._OrtEndProfiling(i);n===0&&Ae("Can\'t get an profile file name."),t._OrtFree(n)},Ys=e=>{let t=[];for(let r of e){let i=r[2];!Array.isArray(i)&&"buffer"in i&&t.push(i.buffer)}return t};self.onmessage=e=>{switch(e.data.type){case"init-wasm":try{yo(e.data.in).then(()=>postMessage({type:"init-wasm"}),t=>postMessage({type:"init-wasm",err:t}))}catch(t){postMessage({type:"init-wasm",err:t})}break;case"init-ort":try{Fs(e.data.in).then(()=>postMessage({type:"init-ort"}),t=>postMessage({type:"init-ort",err:t}))}catch(t){postMessage({type:"init-ort",err:t})}break;case"create_allocate":try{let{model:t}=e.data.in,r=kn(t);postMessage({type:"create_allocate",out:r})}catch(t){postMessage({type:"create_allocate",err:t})}break;case"create_finalize":try{let{modeldata:t,options:r}=e.data.in,i=Dn(t,r);postMessage({type:"create_finalize",out:i})}catch(t){postMessage({type:"create_finalize",err:t})}break;case"create":try{let{model:t,options:r}=e.data.in,i=Ls(t,r);postMessage({type:"create",out:i})}catch(t){postMessage({type:"create",err:t})}break;case"release":try{let t=e.data.in;js(t),postMessage({type:"release"})}catch(t){postMessage({type:"release",err:t})}break;case"run":try{let{sessionId:t,inputIndices:r,inputs:i,outputIndices:n,options:s}=e.data.in;Ks(t,r,i,n,s).then(u=>{postMessage({type:"run",out:u},Ys(u))},u=>{postMessage({type:"run",err:u})})}catch(t){postMessage({type:"run",err:t})}break;case"end-profiling":try{let t=e.data.in;qs(t),postMessage({type:"end-profiling"})}catch(t){postMessage({type:"end-profiling",err:t})}break;case"is-ort-env-initialized":try{let t=Hs();postMessage({type:"is-ort-env-initialized",out:t})}catch(t){postMessage({type:"is-ort-env-initialized",err:t})}break;default:}};})();\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n'});var xr,_t,ea,uu,lu,Qs,eu,tu,ru,nu,ou,iu,au,su,kr,l1,Qi,Gb,Wb,Vb,Ub,cu,Hb,jb,qb,Kb,du=P(()=>{"use strict";Ct();zb();$n();xr=()=>!!xe.wasm.proxy&&typeof document<"u",ea=!1,uu=!1,lu=!1,tu=[],ru=[],nu=[],ou=[],iu=[],au=[],su=[],kr=()=>{if(ea||!uu||lu||!_t)throw new Error("worker not ready")},l1=n=>{switch(n.data.type){case"init-wasm":ea=!1,n.data.err?(lu=!0,Qs[1](n.data.err)):(uu=!0,Qs[0]());break;case"init-ort":n.data.err?eu[1](n.data.err):eu[0]();break;case"create_allocate":n.data.err?tu.shift()[1](n.data.err):tu.shift()[0](n.data.out);break;case"create_finalize":n.data.err?ru.shift()[1](n.data.err):ru.shift()[0](n.data.out);break;case"create":n.data.err?nu.shift()[1](n.data.err):nu.shift()[0](n.data.out);break;case"release":n.data.err?ou.shift()[1](n.data.err):ou.shift()[0]();break;case"run":n.data.err?iu.shift()[1](n.data.err):iu.shift()[0](n.data.out);break;case"end-profiling":n.data.err?au.shift()[1](n.data.err):au.shift()[0]();break;case"is-ort-env-initialized":n.data.err?su.shift()[1](n.data.err):su.shift()[0](n.data.out);break;default:}},Qi=typeof document<"u"?document?.currentScript?.src:void 0,Gb=async()=>{if(xr()){if(uu)return;if(ea)throw new Error("multiple calls to 'initWasm()' detected.");if(lu)throw new Error("previous call to 'initWasm()' failed.");return ea=!0,xe.wasm.wasmPaths===void 0&&Qi&&Qi.indexOf("blob:")!==0&&(xe.wasm.wasmPaths=Qi.substr(0,+Qi.lastIndexOf("/")+1)),new Promise((n,e)=>{_t?.terminate();let r=URL.createObjectURL(new Blob([Fb()],{type:"text/javascript"}));_t=new Worker(r,{name:"ort-wasm-proxy-worker"}),_t.onerror=o=>e(o),_t.onmessage=l1,URL.revokeObjectURL(r),Qs=[n,e];let t={type:"init-wasm",in:xe.wasm};_t.postMessage(t)})}else return $h(xe.wasm)},Wb=async n=>{if(xr())return kr(),new Promise((e,r)=>{eu=[e,r];let t={type:"init-ort",in:n};_t.postMessage(t)});await Db(n)},Vb=async n=>xr()?(kr(),new Promise((e,r)=>{tu.push([e,r]);let t={type:"create_allocate",in:{model:n}};_t.postMessage(t,[n.buffer])})):Js(n),Ub=async(n,e)=>xr()?(kr(),new Promise((r,t)=>{ru.push([r,t]);let o={type:"create_finalize",in:{modeldata:n,options:e}};_t.postMessage(o)})):Zs(n,e),cu=async(n,e)=>{if(xr()){if(e?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return kr(),new Promise((r,t)=>{nu.push([r,t]);let o={type:"create",in:{model:n,options:e}};_t.postMessage(o,[n.buffer])})}else return Bb(n,e)},Hb=async n=>{if(xr())return kr(),new Promise((e,r)=>{ou.push([e,r]);let t={type:"release",in:n};_t.postMessage(t)});Rb(n)},jb=async(n,e,r,t,o,i)=>{if(xr()){if(r.some(u=>u[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(o.some(u=>u))throw new Error("pre-allocated output tensor is not supported for proxy.");return kr(),new Promise((u,a)=>{iu.push([u,a]);let s=r,l={type:"run",in:{sessionId:n,inputIndices:e,inputs:s,outputIndices:t,options:i}};_t.postMessage(l,Nb(s))})}else return Mb(n,e,r,t,o,i)},qb=async n=>{if(xr())return kr(),new Promise((e,r)=>{au.push([e,r]);let t={type:"end-profiling",in:n};_t.postMessage(t)});Lb(n)},Kb=async()=>xr()?(kr(),new Promise((n,e)=>{su.push([n,e]);let r={type:"is-ort-env-initialized"};_t.postMessage(r)})):kb()});var ta,Yb,c1,ra,Xb=P(()=>{"use strict";Ct();du();ct();Yb=(n,e)=>{switch(n.location){case"cpu":return[n.type,n.dims,n.data,"cpu"];case"gpu-buffer":return[n.type,n.dims,{gpuBuffer:n.gpuBuffer},"gpu-buffer"];default:throw new Error(`invalid data location: ${n.location} for ${e()}`)}},c1=n=>{switch(n[3]){case"cpu":return new Et(n[0],n[2],n[1]);case"gpu-buffer":{let e=n[0];if(!Di(e))throw new Error(`not supported data type: ${e} for deserializing GPU tensor`);let{gpuBuffer:r,download:t,dispose:o}=n[2];return Et.fromGpuBuffer(r,{dataType:e,dims:n[1],download:t,dispose:o})}default:throw new Error(`invalid data location: ${n[3]}`)}},ra=class{async createSessionAllocate(e){let r=await fetch(e);if(r.status!==200)throw new Error(`failed to load model: ${e}`);let t=await r.arrayBuffer();return Vb(new Uint8Array(t))}async loadModel(e,r){if(await Kb()||(ta||(ta=Wb(xe)),await ta,ta=void 0),typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node){let t=await(void 0)(e);[this.sessionId,this.inputNames,this.outputNames]=await cu(t,r)}else{let t=await this.createSessionAllocate(e);[this.sessionId,this.inputNames,this.outputNames]=await Ub(t,r)}else[this.sessionId,this.inputNames,this.outputNames]=await cu(e,r)}async dispose(){return Hb(this.sessionId)}async run(e,r,t){let o=[],i=[];Object.entries(e).forEach(h=>{let g=h[0],y=h[1],b=this.inputNames.indexOf(g);if(b===-1)throw new Error(`invalid input '${g}'`);o.push(y),i.push(b)});let u=[],a=[];Object.entries(r).forEach(h=>{let g=h[0],y=h[1],b=this.outputNames.indexOf(g);if(b===-1)throw new Error(`invalid output '${g}'`);u.push(y),a.push(b)});let s=o.map((h,g)=>Yb(h,()=>`input "${this.inputNames[i[g]]}"`)),l=u.map((h,g)=>h?Yb(h,()=>`output "${this.outputNames[a[g]]}"`):null),c=await jb(this.sessionId,i,s,a,l,t),p={};for(let h=0;h<c.length;h++)p[this.outputNames[a[h]]]=u[h]??c1(c[h]);return p}startProfiling(){}endProfiling(){qb(this.sessionId)}}});var d1,na,Jb=P(()=>{"use strict";Ct();du();Xb();d1=()=>{if((typeof xe.wasm.initTimeout!="number"||xe.wasm.initTimeout<0)&&(xe.wasm.initTimeout=0),typeof xe.wasm.simd!="boolean"&&(xe.wasm.simd=!0),typeof xe.wasm.proxy!="boolean"&&(xe.wasm.proxy=!1),typeof xe.wasm.numThreads!="number"||!Number.isInteger(xe.wasm.numThreads)||xe.wasm.numThreads<=0){let n=typeof navigator>"u"?(void 0)().length:navigator.hardwareConcurrency;xe.wasm.numThreads=Math.min(4,Math.ceil((n||1)/2))}},na=class{async init(){d1(),await Gb()}async createInferenceSessionHandler(e,r){let t=new ra;return await t.loadModel(e,r),Promise.resolve(t)}}});var Zb={};Nr(Zb,{wasmBackend:()=>f1});var f1,Qb=P(()=>{"use strict";Jb();f1=new na});Ct();Ct();Ct();var ol="1.17.0";var AB=pa;{let n=(lh(),Sr(uh)).onnxjsBackend;mr("webgl",n,-10)}{let n=(Qb(),Sr(Zb)).wasmBackend;typeof navigator<"u"&&navigator.gpu&&mr("webgpu",n,5),mr("cpu",n,10),mr("wasm",n,10),mr("xnnpack",n,9),mr("webnn",n,9)}Object.defineProperty(xe.versions,"web",{value:ol,enumerable:!0});export{yy as InferenceSession,Et as Tensor,xy as TrainingSession,AB as default,xe as env,mr as registerBackend};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/*! Bundled license information:

long/index.js:
  (**
   * @license
   * Copyright 2009 The Closure Library Authors
   * Copyright 2020 Daniel Wirtz / The long.js Authors.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
//# sourceMappingURL=ort.all.min.js.map
