/*!
 * ONNX Runtime Web v1.18.0
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
"use strict";var E0=Object.create;var Ii=Object.defineProperty;var P0=Object.getOwnPropertyDescriptor;var k0=Object.getOwnPropertyNames;var D0=Object.getPrototypeOf,B0=Object.prototype.hasOwnProperty;var R=(r,e)=>()=>(r&&(e=r(r=0)),e);var et=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),Zr=(r,e)=>{for(var n in e)Ii(r,n,{get:e[n],enumerable:!0})},Ml=(r,e,n,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of k0(e))!B0.call(r,o)&&o!==n&&Ii(r,o,{get:()=>e[o],enumerable:!(t=P0(e,o))||t.enumerable});return r};var Un=(r,e,n)=>(n=r!=null?E0(D0(r)):{},Ml(e||!r||!r.__esModule?Ii(n,"default",{value:r,enumerable:!0}):n,r)),Ur=r=>Ml(Ii({},"__esModule",{value:!0}),r);var Ai,gn,Gr,Oi,Ci=R(()=>{"use strict";Ai=new Map,gn=[],Gr=(r,e,n)=>{if(e&&typeof e.init=="function"&&typeof e.createInferenceSessionHandler=="function"){let t=Ai.get(r);if(t===void 0)Ai.set(r,{backend:e,priority:n});else{if(t.priority>n)return;if(t.priority===n&&t.backend!==e)throw new Error(`cannot register backend "${r}" using priority ${n}`)}if(n>=0){let o=gn.indexOf(r);o!==-1&&gn.splice(o,1);for(let i=0;i<gn.length;i++)if(Ai.get(gn[i]).priority<=n){gn.splice(i,0,r);return}gn.push(r)}return}throw new TypeError("not a valid backend")},Oi=async r=>{let e=r.length===0?gn:r,n=[];for(let t of e){let o=Ai.get(t);if(o){if(o.initialized)return o.backend;if(o.aborted)continue;let i=!!o.initPromise;try{return i||(o.initPromise=o.backend.init(t)),await o.initPromise,o.initialized=!0,o.backend}catch(s){i||n.push({name:t,err:s}),o.aborted=!0}finally{delete o.initPromise}}}throw new Error(`no available backend found. ERR: ${n.map(t=>`[${t.name}] ${t.err}`).join(", ")}`)}});var Ll=R(()=>{"use strict";Ci()});var Nl,Fl=R(()=>{"use strict";Nl="1.18.0"});var Vl,bn,fs=R(()=>{"use strict";Fl();Vl="warning",bn={wasm:{},webgl:{},webgpu:{},versions:{common:Nl},set logLevel(r){if(r!==void 0){if(typeof r!="string"||["verbose","info","warning","error","fatal"].indexOf(r)===-1)throw new Error(`Unsupported logging level: ${r}`);Vl=r}},get logLevel(){return Vl}};Object.defineProperty(bn,"logLevel",{enumerable:!0})});var ye,Ul=R(()=>{"use strict";fs();ye=bn});var Gl,Wl,Hl=R(()=>{"use strict";Gl=(r,e)=>{let n=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);n.width=r.dims[3],n.height=r.dims[2];let t=n.getContext("2d");if(t!=null){let o,i;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(o=r.dims[2],i=r.dims[3]):(o=r.dims[3],i=r.dims[2]);let s=e?.format!==void 0?e.format:"RGB",a=e?.norm,u,l;a===void 0||a.mean===void 0?u=[255,255,255,255]:typeof a.mean=="number"?u=[a.mean,a.mean,a.mean,a.mean]:(u=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(u[3]=a.mean[3])),a===void 0||a.bias===void 0?l=[0,0,0,0]:typeof a.bias=="number"?l=[a.bias,a.bias,a.bias,a.bias]:(l=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(l[3]=a.bias[3]));let d=i*o,p=0,m=d,b=d*2,v=-1;s==="RGBA"?(p=0,m=d,b=d*2,v=d*3):s==="RGB"?(p=0,m=d,b=d*2):s==="RBG"&&(p=0,b=d,m=d*2);for(let w=0;w<i;w++)for(let A=0;A<o;A++){let $=(r.data[p++]-l[0])*u[0],_=(r.data[m++]-l[1])*u[1],O=(r.data[b++]-l[2])*u[2],P=v===-1?255:(r.data[v++]-l[3])*u[3];t.fillStyle="rgba("+$+","+_+","+O+","+P+")",t.fillRect(A,w,1,1)}if("toDataURL"in n)return n.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},Wl=(r,e)=>{let n=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),t;if(n!=null){let o,i,s;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(o=r.dims[2],i=r.dims[1],s=r.dims[3]):(o=r.dims[3],i=r.dims[2],s=r.dims[1]);let a=e!==void 0&&e.format!==void 0?e.format:"RGB",u=e?.norm,l,d;u===void 0||u.mean===void 0?l=[255,255,255,255]:typeof u.mean=="number"?l=[u.mean,u.mean,u.mean,u.mean]:(l=[u.mean[0],u.mean[1],u.mean[2],255],u.mean[3]!==void 0&&(l[3]=u.mean[3])),u===void 0||u.bias===void 0?d=[0,0,0,0]:typeof u.bias=="number"?d=[u.bias,u.bias,u.bias,u.bias]:(d=[u.bias[0],u.bias[1],u.bias[2],0],u.bias[3]!==void 0&&(d[3]=u.bias[3]));let p=i*o;if(e!==void 0&&(e.format!==void 0&&s===4&&e.format!=="RGBA"||s===3&&e.format!=="RGB"&&e.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let m=4,b=0,v=1,w=2,A=3,$=0,_=p,O=p*2,P=-1;a==="RGBA"?($=0,_=p,O=p*2,P=p*3):a==="RGB"?($=0,_=p,O=p*2):a==="RBG"&&($=0,O=p,_=p*2),t=n.createImageData(o,i);for(let L=0;L<i*o;b+=m,v+=m,w+=m,A+=m,L++)t.data[b]=(r.data[$++]-d[0])*l[0],t.data[v]=(r.data[_++]-d[1])*l[1],t.data[w]=(r.data[O++]-d[2])*l[2],t.data[A]=P===-1?255:(r.data[P++]-d[3])*l[3]}else throw new Error("Can not access image data");return t}});var ps,ql,jl,Kl,Yl,Xl=R(()=>{"use strict";Ei();ps=(r,e)=>{if(r===void 0)throw new Error("Image buffer must be defined");if(e.height===void 0||e.width===void 0)throw new Error("Image height and width must be defined");if(e.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:n,width:t}=e,o=e.norm??{mean:255,bias:0},i,s;typeof o.mean=="number"?i=[o.mean,o.mean,o.mean,o.mean]:i=[o.mean[0],o.mean[1],o.mean[2],o.mean[3]??255],typeof o.bias=="number"?s=[o.bias,o.bias,o.bias,o.bias]:s=[o.bias[0],o.bias[1],o.bias[2],o.bias[3]??0];let a=e.format!==void 0?e.format:"RGBA",u=e.tensorFormat!==void 0&&e.tensorFormat!==void 0?e.tensorFormat:"RGB",l=n*t,d=u==="RGBA"?new Float32Array(l*4):new Float32Array(l*3),p=4,m=0,b=1,v=2,w=3,A=0,$=l,_=l*2,O=-1;a==="RGB"&&(p=3,m=0,b=1,v=2,w=-1),u==="RGBA"?O=l*3:u==="RBG"?(A=0,_=l,$=l*2):u==="BGR"&&(_=0,$=l,A=l*2);for(let L=0;L<l;L++,m+=p,v+=p,b+=p,w+=p)d[A++]=(r[m]+s[0])/i[0],d[$++]=(r[b]+s[1])/i[1],d[_++]=(r[v]+s[2])/i[2],O!==-1&&w!==-1&&(d[O++]=(r[w]+s[3])/i[3]);return u==="RGBA"?new Mt("float32",d,[1,4,n,t]):new Mt("float32",d,[1,3,n,t])},ql=async(r,e)=>{let n=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,t=typeof ImageData<"u"&&r instanceof ImageData,o=typeof ImageBitmap<"u"&&r instanceof ImageBitmap,i=typeof r=="string",s,a=e??{},u=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},l=d=>d instanceof HTMLCanvasElement||d instanceof OffscreenCanvas?d.getContext("2d"):null;if(n){let d=u();d.width=r.width,d.height=r.height;let p=l(d);if(p!=null){let m=r.height,b=r.width;if(e!==void 0&&e.resizedHeight!==void 0&&e.resizedWidth!==void 0&&(m=e.resizedHeight,b=e.resizedWidth),e!==void 0){if(a=e,e.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=m,a.width=b}else a.tensorFormat="RGBA",a.height=m,a.width=b;p.drawImage(r,0,0),s=p.getImageData(0,0,b,m).data}else throw new Error("Can not access image data")}else if(t){let d,p;if(e!==void 0&&e.resizedWidth!==void 0&&e.resizedHeight!==void 0?(d=e.resizedHeight,p=e.resizedWidth):(d=r.height,p=r.width),e!==void 0&&(a=e),a.format="RGBA",a.height=d,a.width=p,e!==void 0){let m=u();m.width=p,m.height=d;let b=l(m);if(b!=null)b.putImageData(r,0,0),s=b.getImageData(0,0,p,d).data;else throw new Error("Can not access image data")}else s=r.data}else if(o){if(e===void 0)throw new Error("Please provide image config with format for Imagebitmap");let d=u();d.width=r.width,d.height=r.height;let p=l(d);if(p!=null){let m=r.height,b=r.width;return p.drawImage(r,0,0,b,m),s=p.getImageData(0,0,b,m).data,a.height=m,a.width=b,ps(s,a)}else throw new Error("Can not access image data")}else{if(i)return new Promise((d,p)=>{let m=u(),b=l(m);if(!r||!b)return p();let v=new Image;v.crossOrigin="Anonymous",v.src=r,v.onload=()=>{m.width=v.width,m.height=v.height,b.drawImage(v,0,0,m.width,m.height);let w=b.getImageData(0,0,m.width,m.height);a.height=m.height,a.width=m.width,d(ps(w.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(s!==void 0)return ps(s,a);throw new Error("Input data provided is not supported - aborted tensor creation")},jl=(r,e)=>{let{width:n,height:t,download:o,dispose:i}=e,s=[1,t,n,4];return new Mt({location:"texture",type:"float32",texture:r,dims:s,download:o,dispose:i})},Kl=(r,e)=>{let{dataType:n,dims:t,download:o,dispose:i}=e;return new Mt({location:"gpu-buffer",type:n??"float32",gpuBuffer:r,dims:t,download:o,dispose:i})},Yl=(r,e,n)=>new Mt({location:"cpu-pinned",type:r,data:e,dims:n??[e.length]})});var Oo,Pi,Zl,Jl,Ql=R(()=>{"use strict";Oo=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["float16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),Pi=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),Zl=!1,Jl=()=>{if(!Zl){Zl=!0;let r=typeof BigInt64Array<"u"&&typeof BigInt64Array.from=="function",e=typeof BigUint64Array<"u"&&typeof BigUint64Array.from=="function";r&&(Oo.set("int64",BigInt64Array),Pi.set(BigInt64Array,"int64")),e&&(Oo.set("uint64",BigUint64Array),Pi.set(BigUint64Array,"uint64"))}}});var ed,td,rd=R(()=>{"use strict";Ei();ed=r=>{let e=1;for(let n=0;n<r.length;n++){let t=r[n];if(typeof t!="number"||!Number.isSafeInteger(t))throw new TypeError(`dims[${n}] must be an integer, got: ${t}`);if(t<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${t}`);e*=t}return e},td=(r,e)=>{switch(r.location){case"cpu":return new Mt(r.type,r.data,e);case"cpu-pinned":return new Mt({location:"cpu-pinned",data:r.data,type:r.type,dims:e});case"texture":return new Mt({location:"texture",texture:r.texture,type:r.type,dims:e});case"gpu-buffer":return new Mt({location:"gpu-buffer",gpuBuffer:r.gpuBuffer,type:r.type,dims:e});default:throw new Error(`tensorReshape: tensor location ${r.location} is not supported`)}}});var Mt,Ei=R(()=>{"use strict";Hl();Xl();Ql();rd();Mt=class{constructor(e,n,t){Jl();let o,i;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,o=e.type,i=e.dims,e.location){case"cpu-pinned":{let a=Oo.get(o);if(!a)throw new TypeError(`unsupported type "${o}" to create tensor from pinned buffer`);if(!(e.data instanceof a))throw new TypeError(`buffer should be of type ${a.name}`);this.cpuData=e.data;break}case"texture":{if(o!=="float32")throw new TypeError(`unsupported type "${o}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(o!=="float32"&&o!=="float16"&&o!=="int32"&&o!=="int64"&&o!=="uint32"&&o!=="bool")throw new TypeError(`unsupported type "${o}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,u;if(typeof e=="string")if(o=e,u=t,e==="string"){if(!Array.isArray(n))throw new TypeError("A string tensor's data must be a string array.");a=n}else{let l=Oo.get(e);if(l===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(n)){if(e==="float16")throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");e==="uint64"||e==="int64"?a=l.from(n,BigInt):a=l.from(n)}else if(n instanceof l)a=n;else throw new TypeError(`A ${o} tensor's data must be type of ${l}`)}else if(u=n,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let l=typeof e[0];if(l==="string")o="string",a=e;else if(l==="boolean")o="bool",a=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${l}.`)}else{let l=Pi.get(e.constructor);if(l===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);o=l,a=e}if(u===void 0)u=[a.length];else if(!Array.isArray(u))throw new TypeError("A tensor's dims must be a number array");i=u,this.cpuData=a,this.dataLocation="cpu"}let s=ed(i);if(this.cpuData&&s!==this.cpuData.length)throw new Error(`Tensor's size(${s}) does not match data length(${this.cpuData.length}).`);this.type=o,this.dims=i,this.size=s}static async fromImage(e,n){return ql(e,n)}static fromTexture(e,n){return jl(e,n)}static fromGpuBuffer(e,n){return Kl(e,n)}static fromPinnedBuffer(e,n,t){return Yl(e,n,t)}toDataURL(e){return Gl(this,e)}toImageData(e){return Wl(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let n=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=n,e&&this.disposer&&(this.disposer(),this.disposer=void 0),n}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return td(this,e)}}});var xt,ki=R(()=>{"use strict";Ei();xt=Mt});var Co,nd,Ht,qt,hs=R(()=>{"use strict";fs();Co=(r,e)=>{bn.wasm.trace&&console.timeStamp(`${r}::ORT::${e}`)},nd=(r,e)=>{let n=new Error().stack?.split(/\r\n|\r|\n/g)||[],t=!1;for(let o=0;o<n.length;o++){if(t&&!n[o].includes("TRACE_FUNC")){let i=`FUNC_${r}::${n[o].trim().split(" ")[1]}`;e&&(i+=`::${e}`),Co("CPU",i);return}n[o].includes("TRACE_FUNC")&&(t=!0)}},Ht=r=>{bn.wasm.trace&&nd("BEGIN",r)},qt=r=>{bn.wasm.trace&&nd("END",r)}});var Di,od=R(()=>{"use strict";Ci();ki();hs();Di=class r{constructor(e){this.handler=e}async run(e,n,t){Ht();let o={},i={};if(typeof e!="object"||e===null||e instanceof xt||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let s=!0;if(typeof n=="object"){if(n===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(n instanceof xt)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(n)){if(n.length===0)throw new TypeError("'fetches' cannot be an empty array.");s=!1;for(let l of n){if(typeof l!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(l)===-1)throw new RangeError(`'fetches' contains invalid output name: ${l}.`);o[l]=null}if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else{let l=!1,d=Object.getOwnPropertyNames(n);for(let p of this.outputNames)if(d.indexOf(p)!==-1){let m=n[p];(m===null||m instanceof xt)&&(l=!0,s=!1,o[p]=m)}if(l){if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else i=n}}else if(typeof n<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let l of this.inputNames)if(typeof e[l]>"u")throw new Error(`input '${l}' is missing in 'feeds'.`);if(s)for(let l of this.outputNames)o[l]=null;let a=await this.handler.run(e,o,i),u={};for(let l in a)if(Object.hasOwnProperty.call(a,l)){let d=a[l];d instanceof xt?u[l]=d:u[l]=new xt(d.type,d.data,d.dims)}return qt(),u}async release(){return this.handler.dispose()}static async create(e,n,t,o){Ht();let i,s={};if(typeof e=="string"){if(i=e,typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof Uint8Array){if(i=e,typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&e instanceof SharedArrayBuffer){let p=e,m=0,b=e.byteLength;if(typeof n=="object"&&n!==null)s=n;else if(typeof n=="number"){if(m=n,!Number.isSafeInteger(m))throw new RangeError("'byteOffset' must be an integer.");if(m<0||m>=p.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${p.byteLength}).`);if(b=e.byteLength-m,typeof t=="number"){if(b=t,!Number.isSafeInteger(b))throw new RangeError("'byteLength' must be an integer.");if(b<=0||m+b>p.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${p.byteLength-m}].`);if(typeof o=="object"&&o!==null)s=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else if(typeof t<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof n<"u")throw new TypeError("'options' must be an object.");i=new Uint8Array(p,m,b)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let u=(s.executionProviders||[]).map(p=>typeof p=="string"?p:p.name),d=await(await Oi(u)).createInferenceSessionHandler(i,s);return qt(),new r(d)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}});var id,ad=R(()=>{"use strict";od();id=Di});var sd=R(()=>{"use strict"});var R0,Bi,ud=R(()=>{"use strict";Ci();ki();R0="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",Bi=class r{constructor(e,n,t){this.handler=e,this.hasOptimizerModel=n,this.hasEvalModel=t}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(e,n){let t=e.evalModel||"",o=e.optimizerModel||"",i=n||{},a=(i.executionProviders||[]).map(l=>typeof l=="string"?l:l.name),u=await Oi(a);if(u.createTrainingSessionHandler){let l=await u.createTrainingSessionHandler(e.checkpointState,e.trainModel,t,o,i);return new r(l,!!e.optimizerModel,!!e.evalModel)}else throw new Error(R0)}typeNarrowingForRunStep(e,n,t,o,i){let s={},a={};if(typeof t!="object"||t===null||t instanceof xt||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let u=!0;if(typeof o=="object"){if(o===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(o instanceof xt)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(o)){if(o.length===0)throw new TypeError("'fetches' cannot be an empty array.");u=!1;for(let l of o){if(typeof l!="string")throw new TypeError("'fetches' must be a string array or an object.");if(n.indexOf(l)===-1)throw new RangeError(`'fetches' contains invalid output name: ${l}.`);s[l]=null}if(typeof i=="object"&&i!==null)a=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else{let l=!1,d=Object.getOwnPropertyNames(o);for(let p of n)if(d.indexOf(p)!==-1){let m=o[p];(m===null||m instanceof xt)&&(l=!0,u=!1,s[p]=m)}if(l){if(typeof i=="object"&&i!==null)a=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else a=o}}else if(typeof o<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let l of e)if(typeof t[l]>"u")throw new Error(`input '${l}' is missing in 'feeds'.`);if(u)for(let l of n)s[l]=null;return[s,a]}convertHandlerReturnTypeToMapOfTensors(e){let n={};for(let t in e)if(Object.hasOwnProperty.call(e,t)){let o=e[t];o instanceof xt?n[t]=o:n[t]=new xt(o.type,o.data,o.dims)}return n}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(e,n,t){let[o,i]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,e,n,t),s=await this.handler.runTrainStep(e,o,i);return this.convertHandlerReturnTypeToMapOfTensors(s)}async runOptimizerStep(e){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(e||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(e,n,t){if(this.hasEvalModel){let[o,i]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,e,n,t),s=await this.handler.runEvalStep(e,o,i);return this.convertHandlerReturnTypeToMapOfTensors(s)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(e=!0){return this.handler.getParametersSize(e)}async loadParametersBuffer(e,n=!0){let t=await this.getParametersSize(n);if(e.length!==4*t)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(e,n)}async getContiguousParameters(e=!0){return this.handler.getContiguousParameters(e)}async release(){return this.handler.dispose()}}});var ld,dd=R(()=>{"use strict";ud();ld=Bi});var ms={};Zr(ms,{InferenceSession:()=>id,TRACE:()=>Co,TRACE_FUNC_BEGIN:()=>Ht,TRACE_FUNC_END:()=>qt,Tensor:()=>xt,TrainingSession:()=>ld,env:()=>ye,registerBackend:()=>Gr});var Ot=R(()=>{"use strict";Ll();Ul();ad();ki();hs();sd();dd()});function Jr(r,e,n,t){if(e===void 0)return M0(r);if(n===void 0)Ri(r,e,1);else if(typeof n=="number"&&t===void 0)Ri(r,e,n);else if(typeof n=="string"&&t===void 0)Ri(r,n,1,e);else if(typeof n=="string"&&typeof t=="number")Ri(r,n,t,e);else throw new TypeError("input is valid")}function M0(r){return{verbose:Jr.verbose.bind(null,r),info:Jr.info.bind(null,r),warning:Jr.warning.bind(null,r),error:Jr.error.bind(null,r),fatal:Jr.fatal.bind(null,r)}}function Ri(r,e,n,t){let o=Eo[t||""]||Eo[""];fd[r]<fd[o.minimalSeverity]||(o.logDateTime&&(e=`${new Date().toISOString()}|${e}`),o.logSourceLocation,z0[o.provider].log(r,e,t))}var gs,bs,fd,z0,pd,Eo,je,Mi,Li,Ni,zi,rr=R(()=>{"use strict";gs=class{log(e,n,t){}},bs=class{log(e,n,t){console.log(`${this.color(e)} ${t?"\x1B[35m"+t+"\x1B[0m ":""}${n}`)}color(e){switch(e){case"verbose":return"\x1B[34;40mv\x1B[0m";case"info":return"\x1B[32mi\x1B[0m";case"warning":return"\x1B[30;43mw\x1B[0m";case"error":return"\x1B[31;40me\x1B[0m";case"fatal":return"\x1B[101mf\x1B[0m";default:throw new Error(`unsupported severity: ${e}`)}}},fd={verbose:1e3,info:2e3,warning:4e3,error:5e3,fatal:6e3},z0={none:new gs,console:new bs},pd={provider:"console",minimalSeverity:"warning",logDateTime:!0,logSourceLocation:!1},Eo={"":pd};(u=>{function r(l,d){u("verbose",l,d)}u.verbose=r;function e(l,d){u("info",l,d)}u.info=e;function n(l,d){u("warning",l,d)}u.warning=n;function t(l,d){u("error",l,d)}u.error=t;function o(l,d){u("fatal",l,d)}u.fatal=o;function i(l){Eo={},s("",l||{})}u.reset=i;function s(l,d){if(l==="*")i(d);else{let p=Eo[l]||pd;Eo[l]={provider:d.provider||p.provider,minimalSeverity:d.minimalSeverity||p.minimalSeverity,logDateTime:d.logDateTime===void 0?p.logDateTime:d.logDateTime,logSourceLocation:d.logSourceLocation===void 0?p.logSourceLocation:d.logSourceLocation}}}u.set=s;function a(l){let d={};l.logLevel&&(d.minimalSeverity=l.logLevel),s("",d)}u.setWithEnv=a})(Jr||={});je=Jr,Mi=class{constructor(e,n,t,o,i,s){this.category=e;this.name=n;this.startTime=t;this.endCallback=o;this.timer=i;this.ctx=s}async end(){return this.endCallback(this)}async checkTimer(){if(this.ctx===void 0||this.timer===void 0)throw new Error("No webgl timer found");return this.ctx.endTimer(),this.ctx.waitForQueryAndGetTime(this.timer)}},Li=class{constructor(e,n,t,o){this.category=e;this.name=n;this.startTime=t;this.endTime=o}},Ni=class{constructor(e,n,t){this._started=!1;this._flushPointer=0;this._started=!1,this._maxNumberEvents=e===void 0?1e4:e,this._flushBatchSize=n===void 0?10:n,this._flushIntervalInMilliseconds=t===void 0?5e3:t}static create(e){return e===void 0?new this:new this(e.maxNumberEvents,e.flushBatchSize,e.flushIntervalInMilliseconds)}start(){this._started=!0,this._timingEvents=[],this._flushTime=zi(),this._flushPointer=0}stop(){for(this._started=!1;this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer])}event(e,n,t,o){let i=this._started?this.begin(e,n,o):void 0,s=!1,a=t();if(a&&typeof a.then=="function")return s=!0,new Promise((u,l)=>{a.then(async d=>{i&&await i.end(),u(d)},async d=>{i&&await i.end(),l(d)})});if(!s&&i){let u=i.end();if(u&&typeof u.then=="function")return new Promise((l,d)=>{u.then(()=>{l(a)},p=>{d(p)})})}return a}begin(e,n,t){if(!this._started)throw new Error("profiler is not started yet");if(t===void 0){let o=zi();return this.flush(o),new Mi(e,n,o,i=>this.endSync(i))}else{let o=t.beginTimer();return new Mi(e,n,0,async i=>this.end(i),o,t)}}async end(e){let n=await e.checkTimer();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new Li(e.category,e.name,e.startTime,n)),this.flush(n))}endSync(e){let n=zi();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new Li(e.category,e.name,e.startTime,n)),this.flush(n))}logOneEvent(e){je.verbose(`Profiler.${e.category}`,`${(e.endTime-e.startTime).toFixed(2)}ms on event '${e.name}' at ${e.endTime.toFixed(2)}`)}flush(e){if(this._timingEvents.length-this._flushPointer>=this._flushBatchSize||e-this._flushTime>=this._flushIntervalInMilliseconds){for(let n=this._flushPointer;this._flushPointer<n+this._flushBatchSize&&this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer]);this._flushTime=zi()}}get started(){return this._started}},zi=typeof performance<"u"&&performance.now?()=>performance.now():Date.now});function hd(r,e,n){for(let t of n){let o=t[0],i=t[1],s=t[2],a=t[3],u=t[4];if(r.opType===o){for(let l of e)if((l.domain===i||l.domain==="ai.onnx"&&i==="")&&L0(l.version,s))return{opImpl:a,opInit:u}}}throw new TypeError(`cannot resolve operator '${r.opType}' with opsets: ${e.map(t=>`${t.domain||"ai.onnx"} v${t.version}`).join(", ")}`)}function L0(r,e){if(e.endsWith("+")){let n=Number.parseInt(e.substring(0,e.length-1),10);return!isNaN(n)&&n<=r}else if(e.split("-").length===2){let n=e.split("-"),t=Number.parseInt(n[0],10),o=Number.parseInt(n[1],10);return!isNaN(t)&&!isNaN(o)&&t<=r&&r<=o}else return Number.parseInt(e,10)===r}var md=R(()=>{"use strict"});var gd=et(ys=>{"use strict";ys.__esModule=!0;var N0=function(){function r(e){if(!e)throw new TypeError("Invalid argument; `value` has no value.");this.value=r.EMPTY,e&&r.isGuid(e)&&(this.value=e)}return r.isGuid=function(e){var n=e.toString();return e&&(e instanceof r||r.validator.test(n))},r.create=function(){return new r([r.gen(2),r.gen(1),r.gen(1),r.gen(1),r.gen(3)].join("-"))},r.createEmpty=function(){return new r("emptyguid")},r.parse=function(e){return new r(e)},r.raw=function(){return[r.gen(2),r.gen(1),r.gen(1),r.gen(1),r.gen(3)].join("-")},r.gen=function(e){for(var n="",t=0;t<e;t++)n+=((1+Math.random())*65536|0).toString(16).substring(1);return n},r.prototype.equals=function(e){return r.isGuid(e)&&this.value===e.toString()},r.prototype.isEmpty=function(){return this.value===r.EMPTY},r.prototype.toString=function(){return this.value},r.prototype.toJSON=function(){return{value:this.value}},r.validator=new RegExp("^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$","i"),r.EMPTY="00000000-0000-0000-0000-000000000000",r}();ys.Guid=N0});function tt(r,e,n){this.low=r|0,this.high=e|0,this.unsigned=!!n}function Ct(r){return(r&&r.__isLong__)===!0}function bd(r){var e=Math.clz32(r&-r);return r?31-e:e}function yn(r,e){var n,t,o;return e?(r>>>=0,(o=0<=r&&r<256)&&(t=vd[r],t)?t:(n=He(r,0,!0),o&&(vd[r]=n),n)):(r|=0,(o=-128<=r&&r<128)&&(t=yd[r],t)?t:(n=He(r,r<0?-1:0,!1),o&&(yd[r]=n),n))}function or(r,e){if(isNaN(r))return e?Wr:pr;if(e){if(r<0)return Wr;if(r>=Td)return Id}else{if(r<=-xd)return jt;if(r+1>=xd)return Sd}return r<0?or(-r,e).neg():He(r%Wn|0,r/Wn|0,e)}function He(r,e,n){return new tt(r,e,n)}function ws(r,e,n){if(r.length===0)throw Error("empty string");if(typeof e=="number"?(n=e,e=!1):e=!!e,r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return e?Wr:pr;if(n=n||10,n<2||36<n)throw RangeError("radix");var t;if((t=r.indexOf("-"))>0)throw Error("interior hyphen");if(t===0)return ws(r.substring(1),e,n).neg();for(var o=or(Fi(n,8)),i=pr,s=0;s<r.length;s+=8){var a=Math.min(8,r.length-s),u=parseInt(r.substring(s,s+a),n);if(a<8){var l=or(Fi(n,a));i=i.mul(l).add(or(u))}else i=i.mul(o),i=i.add(or(u))}return i.unsigned=e,i}function hr(r,e){return typeof r=="number"?or(r,e):typeof r=="string"?ws(r,e):He(r.low,r.high,typeof e=="boolean"?e:r.unsigned)}var nr,yd,vd,Fi,wd,F0,Wn,Td,xd,_d,pr,Wr,Gn,$d,vs,Sd,Id,jt,X,Hr,xs=R(()=>{nr=null;try{nr=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}tt.prototype.__isLong__;Object.defineProperty(tt.prototype,"__isLong__",{value:!0});tt.isLong=Ct;yd={},vd={};tt.fromInt=yn;tt.fromNumber=or;tt.fromBits=He;Fi=Math.pow;tt.fromString=ws;tt.fromValue=hr;wd=65536,F0=1<<24,Wn=wd*wd,Td=Wn*Wn,xd=Td/2,_d=yn(F0),pr=yn(0);tt.ZERO=pr;Wr=yn(0,!0);tt.UZERO=Wr;Gn=yn(1);tt.ONE=Gn;$d=yn(1,!0);tt.UONE=$d;vs=yn(-1);tt.NEG_ONE=vs;Sd=He(-1,2147483647,!1);tt.MAX_VALUE=Sd;Id=He(-1,-1,!0);tt.MAX_UNSIGNED_VALUE=Id;jt=He(0,-2147483648,!1);tt.MIN_VALUE=jt;X=tt.prototype;X.toInt=function(){return this.unsigned?this.low>>>0:this.low};X.toNumber=function(){return this.unsigned?(this.high>>>0)*Wn+(this.low>>>0):this.high*Wn+(this.low>>>0)};X.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(jt)){var n=or(e),t=this.div(n),o=t.mul(n).sub(this);return t.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var i=or(Fi(e,6),this.unsigned),s=this,a="";;){var u=s.div(i),l=s.sub(u.mul(i)).toInt()>>>0,d=l.toString(e);if(s=u,s.isZero())return d+a;for(;d.length<6;)d="0"+d;a=""+d+a}};X.getHighBits=function(){return this.high};X.getHighBitsUnsigned=function(){return this.high>>>0};X.getLowBits=function(){return this.low};X.getLowBitsUnsigned=function(){return this.low>>>0};X.getNumBitsAbs=function(){if(this.isNegative())return this.eq(jt)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,n=31;n>0&&!(e&1<<n);n--);return this.high!=0?n+33:n+1};X.isZero=function(){return this.high===0&&this.low===0};X.eqz=X.isZero;X.isNegative=function(){return!this.unsigned&&this.high<0};X.isPositive=function(){return this.unsigned||this.high>=0};X.isOdd=function(){return(this.low&1)===1};X.isEven=function(){return(this.low&1)===0};X.equals=function(e){return Ct(e)||(e=hr(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};X.eq=X.equals;X.notEquals=function(e){return!this.eq(e)};X.neq=X.notEquals;X.ne=X.notEquals;X.lessThan=function(e){return this.comp(e)<0};X.lt=X.lessThan;X.lessThanOrEqual=function(e){return this.comp(e)<=0};X.lte=X.lessThanOrEqual;X.le=X.lessThanOrEqual;X.greaterThan=function(e){return this.comp(e)>0};X.gt=X.greaterThan;X.greaterThanOrEqual=function(e){return this.comp(e)>=0};X.gte=X.greaterThanOrEqual;X.ge=X.greaterThanOrEqual;X.compare=function(e){if(Ct(e)||(e=hr(e)),this.eq(e))return 0;var n=this.isNegative(),t=e.isNegative();return n&&!t?-1:!n&&t?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};X.comp=X.compare;X.negate=function(){return!this.unsigned&&this.eq(jt)?jt:this.not().add(Gn)};X.neg=X.negate;X.add=function(e){Ct(e)||(e=hr(e));var n=this.high>>>16,t=this.high&65535,o=this.low>>>16,i=this.low&65535,s=e.high>>>16,a=e.high&65535,u=e.low>>>16,l=e.low&65535,d=0,p=0,m=0,b=0;return b+=i+l,m+=b>>>16,b&=65535,m+=o+u,p+=m>>>16,m&=65535,p+=t+a,d+=p>>>16,p&=65535,d+=n+s,d&=65535,He(m<<16|b,d<<16|p,this.unsigned)};X.subtract=function(e){return Ct(e)||(e=hr(e)),this.add(e.neg())};X.sub=X.subtract;X.multiply=function(e){if(this.isZero())return this;if(Ct(e)||(e=hr(e)),nr){var n=nr.mul(this.low,this.high,e.low,e.high);return He(n,nr.get_high(),this.unsigned)}if(e.isZero())return this.unsigned?Wr:pr;if(this.eq(jt))return e.isOdd()?jt:pr;if(e.eq(jt))return this.isOdd()?jt:pr;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(_d)&&e.lt(_d))return or(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,o=this.high&65535,i=this.low>>>16,s=this.low&65535,a=e.high>>>16,u=e.high&65535,l=e.low>>>16,d=e.low&65535,p=0,m=0,b=0,v=0;return v+=s*d,b+=v>>>16,v&=65535,b+=i*d,m+=b>>>16,b&=65535,b+=s*l,m+=b>>>16,b&=65535,m+=o*d,p+=m>>>16,m&=65535,m+=i*l,p+=m>>>16,m&=65535,m+=s*u,p+=m>>>16,m&=65535,p+=t*d+o*l+i*u+s*a,p&=65535,He(b<<16|v,p<<16|m,this.unsigned)};X.mul=X.multiply;X.divide=function(e){if(Ct(e)||(e=hr(e)),e.isZero())throw Error("division by zero");if(nr){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var n=(this.unsigned?nr.div_u:nr.div_s)(this.low,this.high,e.low,e.high);return He(n,nr.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Wr:pr;var t,o,i;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Wr;if(e.gt(this.shru(1)))return $d;i=Wr}else{if(this.eq(jt)){if(e.eq(Gn)||e.eq(vs))return jt;if(e.eq(jt))return Gn;var s=this.shr(1);return t=s.div(e).shl(1),t.eq(pr)?e.isNegative()?Gn:vs:(o=this.sub(e.mul(t)),i=t.add(o.div(e)),i)}else if(e.eq(jt))return this.unsigned?Wr:pr;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=pr}for(o=this;o.gte(e);){t=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(t)/Math.LN2),u=a<=48?1:Fi(2,a-48),l=or(t),d=l.mul(e);d.isNegative()||d.gt(o);)t-=u,l=or(t,this.unsigned),d=l.mul(e);l.isZero()&&(l=Gn),i=i.add(l),o=o.sub(d)}return i};X.div=X.divide;X.modulo=function(e){if(Ct(e)||(e=hr(e)),nr){var n=(this.unsigned?nr.rem_u:nr.rem_s)(this.low,this.high,e.low,e.high);return He(n,nr.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};X.mod=X.modulo;X.rem=X.modulo;X.not=function(){return He(~this.low,~this.high,this.unsigned)};X.countLeadingZeros=function(){return this.high?Math.clz32(this.high):Math.clz32(this.low)+32};X.clz=X.countLeadingZeros;X.countTrailingZeros=function(){return this.low?bd(this.low):bd(this.high)+32};X.ctz=X.countTrailingZeros;X.and=function(e){return Ct(e)||(e=hr(e)),He(this.low&e.low,this.high&e.high,this.unsigned)};X.or=function(e){return Ct(e)||(e=hr(e)),He(this.low|e.low,this.high|e.high,this.unsigned)};X.xor=function(e){return Ct(e)||(e=hr(e)),He(this.low^e.low,this.high^e.high,this.unsigned)};X.shiftLeft=function(e){return Ct(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?He(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):He(0,this.low<<e-32,this.unsigned)};X.shl=X.shiftLeft;X.shiftRight=function(e){return Ct(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?He(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):He(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};X.shr=X.shiftRight;X.shiftRightUnsigned=function(e){return Ct(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?He(this.low>>>e|this.high<<32-e,this.high>>>e,this.unsigned):e===32?He(this.high,0,this.unsigned):He(this.high>>>e-32,0,this.unsigned)};X.shru=X.shiftRightUnsigned;X.shr_u=X.shiftRightUnsigned;X.rotateLeft=function(e){var n;return Ct(e)&&(e=e.toInt()),(e&=63)===0?this:e===32?He(this.high,this.low,this.unsigned):e<32?(n=32-e,He(this.low<<e|this.high>>>n,this.high<<e|this.low>>>n,this.unsigned)):(e-=32,n=32-e,He(this.high<<e|this.low>>>n,this.low<<e|this.high>>>n,this.unsigned))};X.rotl=X.rotateLeft;X.rotateRight=function(e){var n;return Ct(e)&&(e=e.toInt()),(e&=63)===0?this:e===32?He(this.high,this.low,this.unsigned):e<32?(n=32-e,He(this.high<<n|this.low>>>e,this.low<<n|this.high>>>e,this.unsigned)):(e-=32,n=32-e,He(this.low<<n|this.high>>>e,this.high<<n|this.low>>>e,this.unsigned))};X.rotr=X.rotateRight;X.toSigned=function(){return this.unsigned?He(this.low,this.high,!1):this};X.toUnsigned=function(){return this.unsigned?this:He(this.low,this.high,!0)};X.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};X.toBytesLE=function(){var e=this.high,n=this.low;return[n&255,n>>>8&255,n>>>16&255,n>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};X.toBytesBE=function(){var e=this.high,n=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,n>>>24,n>>>16&255,n>>>8&255,n&255]};tt.fromBytes=function(e,n,t){return t?tt.fromBytesLE(e,n):tt.fromBytesBE(e,n)};tt.fromBytesLE=function(e,n){return new tt(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,n)};tt.fromBytesBE=function(e,n){return new tt(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],n)};Hr=tt});var B,Vi=R(()=>{B={};B.Offset;B.Table;B.SIZEOF_SHORT=2;B.SIZEOF_INT=4;B.FILE_IDENTIFIER_LENGTH=4;B.SIZE_PREFIX_LENGTH=4;B.Encoding={UTF8_BYTES:1,UTF16_STRING:2};B.int32=new Int32Array(2);B.float32=new Float32Array(B.int32.buffer);B.float64=new Float64Array(B.int32.buffer);B.isLittleEndian=new Uint16Array(new Uint8Array([1,0]).buffer)[0]===1;B.Long=function(r,e){this.low=r|0,this.high=e|0};B.Long.create=function(r,e){return r==0&&e==0?B.Long.ZERO:new B.Long(r,e)};B.Long.prototype.toFloat64=function(){return(this.low>>>0)+this.high*4294967296};B.Long.prototype.equals=function(r){return this.low==r.low&&this.high==r.high};B.Long.ZERO=new B.Long(0,0);B.Builder=function(r){if(r)var e=r;else var e=1024;this.bb=B.ByteBuffer.allocate(e),this.space=e,this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1};B.Builder.prototype.clear=function(){this.bb.clear(),this.space=this.bb.capacity(),this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1};B.Builder.prototype.forceDefaults=function(r){this.force_defaults=r};B.Builder.prototype.dataBuffer=function(){return this.bb};B.Builder.prototype.asUint8Array=function(){return this.bb.bytes().subarray(this.bb.position(),this.bb.position()+this.offset())};B.Builder.prototype.prep=function(r,e){r>this.minalign&&(this.minalign=r);for(var n=~(this.bb.capacity()-this.space+e)+1&r-1;this.space<n+r+e;){var t=this.bb.capacity();this.bb=B.Builder.growByteBuffer(this.bb),this.space+=this.bb.capacity()-t}this.pad(n)};B.Builder.prototype.pad=function(r){for(var e=0;e<r;e++)this.bb.writeInt8(--this.space,0)};B.Builder.prototype.writeInt8=function(r){this.bb.writeInt8(this.space-=1,r)};B.Builder.prototype.writeInt16=function(r){this.bb.writeInt16(this.space-=2,r)};B.Builder.prototype.writeInt32=function(r){this.bb.writeInt32(this.space-=4,r)};B.Builder.prototype.writeInt64=function(r){this.bb.writeInt64(this.space-=8,r)};B.Builder.prototype.writeFloat32=function(r){this.bb.writeFloat32(this.space-=4,r)};B.Builder.prototype.writeFloat64=function(r){this.bb.writeFloat64(this.space-=8,r)};B.Builder.prototype.addInt8=function(r){this.prep(1,0),this.writeInt8(r)};B.Builder.prototype.addInt16=function(r){this.prep(2,0),this.writeInt16(r)};B.Builder.prototype.addInt32=function(r){this.prep(4,0),this.writeInt32(r)};B.Builder.prototype.addInt64=function(r){this.prep(8,0),this.writeInt64(r)};B.Builder.prototype.addFloat32=function(r){this.prep(4,0),this.writeFloat32(r)};B.Builder.prototype.addFloat64=function(r){this.prep(8,0),this.writeFloat64(r)};B.Builder.prototype.addFieldInt8=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt8(e),this.slot(r))};B.Builder.prototype.addFieldInt16=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt16(e),this.slot(r))};B.Builder.prototype.addFieldInt32=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt32(e),this.slot(r))};B.Builder.prototype.addFieldInt64=function(r,e,n){(this.force_defaults||!e.equals(n))&&(this.addInt64(e),this.slot(r))};B.Builder.prototype.addFieldFloat32=function(r,e,n){(this.force_defaults||e!=n)&&(this.addFloat32(e),this.slot(r))};B.Builder.prototype.addFieldFloat64=function(r,e,n){(this.force_defaults||e!=n)&&(this.addFloat64(e),this.slot(r))};B.Builder.prototype.addFieldOffset=function(r,e,n){(this.force_defaults||e!=n)&&(this.addOffset(e),this.slot(r))};B.Builder.prototype.addFieldStruct=function(r,e,n){e!=n&&(this.nested(e),this.slot(r))};B.Builder.prototype.nested=function(r){if(r!=this.offset())throw new Error("FlatBuffers: struct must be serialized inline.")};B.Builder.prototype.notNested=function(){if(this.isNested)throw new Error("FlatBuffers: object serialization must not be nested.")};B.Builder.prototype.slot=function(r){this.vtable[r]=this.offset()};B.Builder.prototype.offset=function(){return this.bb.capacity()-this.space};B.Builder.growByteBuffer=function(r){var e=r.capacity();if(e&3221225472)throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");var n=e<<1,t=B.ByteBuffer.allocate(n);return t.setPosition(n-e),t.bytes().set(r.bytes(),n-e),t};B.Builder.prototype.addOffset=function(r){this.prep(B.SIZEOF_INT,0),this.writeInt32(this.offset()-r+B.SIZEOF_INT)};B.Builder.prototype.startObject=function(r){this.notNested(),this.vtable==null&&(this.vtable=[]),this.vtable_in_use=r;for(var e=0;e<r;e++)this.vtable[e]=0;this.isNested=!0,this.object_start=this.offset()};B.Builder.prototype.endObject=function(){if(this.vtable==null||!this.isNested)throw new Error("FlatBuffers: endObject called without startObject");this.addInt32(0);for(var r=this.offset(),e=this.vtable_in_use-1;e>=0&&this.vtable[e]==0;e--);for(var n=e+1;e>=0;e--)this.addInt16(this.vtable[e]!=0?r-this.vtable[e]:0);var t=2;this.addInt16(r-this.object_start);var o=(n+t)*B.SIZEOF_SHORT;this.addInt16(o);var i=0,s=this.space;e:for(e=0;e<this.vtables.length;e++){var a=this.bb.capacity()-this.vtables[e];if(o==this.bb.readInt16(a)){for(var u=B.SIZEOF_SHORT;u<o;u+=B.SIZEOF_SHORT)if(this.bb.readInt16(s+u)!=this.bb.readInt16(a+u))continue e;i=this.vtables[e];break}}return i?(this.space=this.bb.capacity()-r,this.bb.writeInt32(this.space,i-r)):(this.vtables.push(this.offset()),this.bb.writeInt32(this.bb.capacity()-r,this.offset()-r)),this.isNested=!1,r};B.Builder.prototype.finish=function(r,e,n){var t=n?B.SIZE_PREFIX_LENGTH:0;if(e){var o=e;if(this.prep(this.minalign,B.SIZEOF_INT+B.FILE_IDENTIFIER_LENGTH+t),o.length!=B.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+B.FILE_IDENTIFIER_LENGTH);for(var i=B.FILE_IDENTIFIER_LENGTH-1;i>=0;i--)this.writeInt8(o.charCodeAt(i))}this.prep(this.minalign,B.SIZEOF_INT+t),this.addOffset(r),t&&this.addInt32(this.bb.capacity()-this.space),this.bb.setPosition(this.space)};B.Builder.prototype.finishSizePrefixed=function(r,e){this.finish(r,e,!0)};B.Builder.prototype.requiredField=function(r,e){var n=this.bb.capacity()-r,t=n-this.bb.readInt32(n),o=this.bb.readInt16(t+e)!=0;if(!o)throw new Error("FlatBuffers: field "+e+" must be set")};B.Builder.prototype.startVector=function(r,e,n){this.notNested(),this.vector_num_elems=e,this.prep(B.SIZEOF_INT,r*e),this.prep(n,r*e)};B.Builder.prototype.endVector=function(){return this.writeInt32(this.vector_num_elems),this.offset()};B.Builder.prototype.createString=function(r){if(r instanceof Uint8Array)var e=r;else for(var e=[],n=0;n<r.length;){var t,o=r.charCodeAt(n++);if(o<55296||o>=56320)t=o;else{var i=r.charCodeAt(n++);t=(o<<10)+i+(65536-56623104-56320)}t<128?e.push(t):(t<2048?e.push(t>>6&31|192):(t<65536?e.push(t>>12&15|224):e.push(t>>18&7|240,t>>12&63|128),e.push(t>>6&63|128)),e.push(t&63|128))}this.addInt8(0),this.startVector(1,e.length,1),this.bb.setPosition(this.space-=e.length);for(var n=0,s=this.space,a=this.bb.bytes();n<e.length;n++)a[s++]=e[n];return this.endVector()};B.Builder.prototype.createLong=function(r,e){return B.Long.create(r,e)};B.ByteBuffer=function(r){this.bytes_=r,this.position_=0};B.ByteBuffer.allocate=function(r){return new B.ByteBuffer(new Uint8Array(r))};B.ByteBuffer.prototype.clear=function(){this.position_=0};B.ByteBuffer.prototype.bytes=function(){return this.bytes_};B.ByteBuffer.prototype.position=function(){return this.position_};B.ByteBuffer.prototype.setPosition=function(r){this.position_=r};B.ByteBuffer.prototype.capacity=function(){return this.bytes_.length};B.ByteBuffer.prototype.readInt8=function(r){return this.readUint8(r)<<24>>24};B.ByteBuffer.prototype.readUint8=function(r){return this.bytes_[r]};B.ByteBuffer.prototype.readInt16=function(r){return this.readUint16(r)<<16>>16};B.ByteBuffer.prototype.readUint16=function(r){return this.bytes_[r]|this.bytes_[r+1]<<8};B.ByteBuffer.prototype.readInt32=function(r){return this.bytes_[r]|this.bytes_[r+1]<<8|this.bytes_[r+2]<<16|this.bytes_[r+3]<<24};B.ByteBuffer.prototype.readUint32=function(r){return this.readInt32(r)>>>0};B.ByteBuffer.prototype.readInt64=function(r){return new B.Long(this.readInt32(r),this.readInt32(r+4))};B.ByteBuffer.prototype.readUint64=function(r){return new B.Long(this.readUint32(r),this.readUint32(r+4))};B.ByteBuffer.prototype.readFloat32=function(r){return B.int32[0]=this.readInt32(r),B.float32[0]};B.ByteBuffer.prototype.readFloat64=function(r){return B.int32[B.isLittleEndian?0:1]=this.readInt32(r),B.int32[B.isLittleEndian?1:0]=this.readInt32(r+4),B.float64[0]};B.ByteBuffer.prototype.writeInt8=function(r,e){this.bytes_[r]=e};B.ByteBuffer.prototype.writeUint8=function(r,e){this.bytes_[r]=e};B.ByteBuffer.prototype.writeInt16=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8};B.ByteBuffer.prototype.writeUint16=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8};B.ByteBuffer.prototype.writeInt32=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8,this.bytes_[r+2]=e>>16,this.bytes_[r+3]=e>>24};B.ByteBuffer.prototype.writeUint32=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8,this.bytes_[r+2]=e>>16,this.bytes_[r+3]=e>>24};B.ByteBuffer.prototype.writeInt64=function(r,e){this.writeInt32(r,e.low),this.writeInt32(r+4,e.high)};B.ByteBuffer.prototype.writeUint64=function(r,e){this.writeUint32(r,e.low),this.writeUint32(r+4,e.high)};B.ByteBuffer.prototype.writeFloat32=function(r,e){B.float32[0]=e,this.writeInt32(r,B.int32[0])};B.ByteBuffer.prototype.writeFloat64=function(r,e){B.float64[0]=e,this.writeInt32(r,B.int32[B.isLittleEndian?0:1]),this.writeInt32(r+4,B.int32[B.isLittleEndian?1:0])};B.ByteBuffer.prototype.getBufferIdentifier=function(){if(this.bytes_.length<this.position_+B.SIZEOF_INT+B.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");for(var r="",e=0;e<B.FILE_IDENTIFIER_LENGTH;e++)r+=String.fromCharCode(this.readInt8(this.position_+B.SIZEOF_INT+e));return r};B.ByteBuffer.prototype.__offset=function(r,e){var n=r-this.readInt32(r);return e<this.readInt16(n)?this.readInt16(n+e):0};B.ByteBuffer.prototype.__union=function(r,e){return r.bb_pos=e+this.readInt32(e),r.bb=this,r};B.ByteBuffer.prototype.__string=function(r,e){r+=this.readInt32(r);var n=this.readInt32(r),t="",o=0;if(r+=B.SIZEOF_INT,e===B.Encoding.UTF8_BYTES)return this.bytes_.subarray(r,r+n);for(;o<n;){var i,s=this.readUint8(r+o++);if(s<192)i=s;else{var a=this.readUint8(r+o++);if(s<224)i=(s&31)<<6|a&63;else{var u=this.readUint8(r+o++);if(s<240)i=(s&15)<<12|(a&63)<<6|u&63;else{var l=this.readUint8(r+o++);i=(s&7)<<18|(a&63)<<12|(u&63)<<6|l&63}}}i<65536?t+=String.fromCharCode(i):(i-=65536,t+=String.fromCharCode((i>>10)+55296,(i&1024-1)+56320))}return t};B.ByteBuffer.prototype.__indirect=function(r){return r+this.readInt32(r)};B.ByteBuffer.prototype.__vector=function(r){return r+this.readInt32(r)+B.SIZEOF_INT};B.ByteBuffer.prototype.__vector_len=function(r){return this.readInt32(r+this.readInt32(r))};B.ByteBuffer.prototype.__has_identifier=function(r){if(r.length!=B.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+B.FILE_IDENTIFIER_LENGTH);for(var e=0;e<B.FILE_IDENTIFIER_LENGTH;e++)if(r.charCodeAt(e)!=this.readInt8(this.position_+B.SIZEOF_INT+e))return!1;return!0};B.ByteBuffer.prototype.createLong=function(r,e){return B.Long.create(r,e)}});var ce,Po=R(()=>{"use strict";Vi();(e=>{let r;(t=>{let n;(i=>{let o;(O=>(O[O.UNDEFINED=0]="UNDEFINED",O[O.FLOAT=1]="FLOAT",O[O.INT=2]="INT",O[O.STRING=3]="STRING",O[O.TENSOR=4]="TENSOR",O[O.GRAPH=5]="GRAPH",O[O.FLOATS=6]="FLOATS",O[O.INTS=7]="INTS",O[O.STRINGS=8]="STRINGS",O[O.TENSORS=9]="TENSORS",O[O.GRAPHS=10]="GRAPHS",O[O.SPARSE_TENSOR=11]="SPARSE_TENSOR",O[O.SPARSE_TENSORS=12]="SPARSE_TENSORS"))(o=i.AttributeType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{let o;(l=>(l[l.UNKNOWN=0]="UNKNOWN",l[l.VALUE=1]="VALUE",l[l.PARAM=2]="PARAM"))(o=i.DimensionValueType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{let o;(q=>(q[q.UNDEFINED=0]="UNDEFINED",q[q.FLOAT=1]="FLOAT",q[q.UINT8=2]="UINT8",q[q.INT8=3]="INT8",q[q.UINT16=4]="UINT16",q[q.INT16=5]="INT16",q[q.INT32=6]="INT32",q[q.INT64=7]="INT64",q[q.STRING=8]="STRING",q[q.BOOL=9]="BOOL",q[q.FLOAT16=10]="FLOAT16",q[q.DOUBLE=11]="DOUBLE",q[q.UINT32=12]="UINT32",q[q.UINT64=13]="UINT64",q[q.COMPLEX64=14]="COMPLEX64",q[q.COMPLEX128=15]="COMPLEX128",q[q.BFLOAT16=16]="BFLOAT16",q[q.FLOAT8E4M3FN=17]="FLOAT8E4M3FN",q[q.FLOAT8E4M3FNUZ=18]="FLOAT8E4M3FNUZ",q[q.FLOAT8E5M2=19]="FLOAT8E5M2",q[q.FLOAT8E5M2FNUZ=20]="FLOAT8E5M2FNUZ"))(o=i.TensorDataType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{let o;(u=>(u[u.Primitive=0]="Primitive",u[u.Fused=1]="Fused"))(o=i.NodeType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{let o;(d=>(d[d.NONE=0]="NONE",d[d.tensor_type=1]="tensor_type",d[d.sequence_type=2]="sequence_type",d[d.map_type=3]="map_type"))(o=i.TypeInfoValue||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsShape(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsShape(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}dim(a,u){let l=this.bb.__offset(this.bb_pos,4);return l?(u||new e.experimental.fbs.Dimension).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}dimLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}static startShape(a){a.startObject(1)}static addDim(a,u){a.addFieldOffset(0,u,0)}static createDimVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startDimVector(a,u){a.startVector(4,u,4)}static endShape(a){return a.endObject()}static createShape(a,u){return o.startShape(a),o.addDim(a,u),o.endShape(a)}}i.Shape=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsDimension(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsDimension(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}value(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.DimensionValue).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}denotation(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}static startDimension(a){a.startObject(2)}static addValue(a,u){a.addFieldOffset(0,u,0)}static addDenotation(a,u){a.addFieldOffset(1,u,0)}static endDimension(a){return a.endObject()}static createDimension(a,u,l){return o.startDimension(a),o.addValue(a,u),o.addDenotation(a,l),o.endDimension(a)}}i.Dimension=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsDimensionValue(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsDimensionValue(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}dimType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt8(this.bb_pos+a):0}dimValue(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}dimParam(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__string(this.bb_pos+u,a):null}static startDimensionValue(a){a.startObject(3)}static addDimType(a,u){a.addFieldInt8(0,u,0)}static addDimValue(a,u){a.addFieldInt64(1,u,a.createLong(0,0))}static addDimParam(a,u){a.addFieldOffset(2,u,0)}static endDimensionValue(a){return a.endObject()}static createDimensionValue(a,u,l,d){return o.startDimensionValue(a),o.addDimType(a,u),o.addDimValue(a,l),o.addDimParam(a,d),o.endDimensionValue(a)}}i.DimensionValue=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsTensorTypeAndShape(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTensorTypeAndShape(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}elemType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt32(this.bb_pos+a):0}shape(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.Shape).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startTensorTypeAndShape(a){a.startObject(2)}static addElemType(a,u){a.addFieldInt32(0,u,0)}static addShape(a,u){a.addFieldOffset(1,u,0)}static endTensorTypeAndShape(a){return a.endObject()}static createTensorTypeAndShape(a,u,l){return o.startTensorTypeAndShape(a),o.addElemType(a,u),o.addShape(a,l),o.endTensorTypeAndShape(a)}}i.TensorTypeAndShape=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsMapType(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsMapType(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}keyType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt32(this.bb_pos+a):0}valueType(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startMapType(a){a.startObject(2)}static addKeyType(a,u){a.addFieldInt32(0,u,0)}static addValueType(a,u){a.addFieldOffset(1,u,0)}static endMapType(a){return a.endObject()}static createMapType(a,u,l){return o.startMapType(a),o.addKeyType(a,u),o.addValueType(a,l),o.endMapType(a)}}i.MapType=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSequenceType(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSequenceType(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}elemType(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startSequenceType(a){a.startObject(1)}static addElemType(a,u){a.addFieldOffset(0,u,0)}static endSequenceType(a){return a.endObject()}static createSequenceType(a,u){return o.startSequenceType(a),o.addElemType(a,u),o.endSequenceType(a)}}i.SequenceType=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}nodeIndex(){return this.bb.readUint32(this.bb_pos)}srcArgIndex(){return this.bb.readInt32(this.bb_pos+4)}dstArgIndex(){return this.bb.readInt32(this.bb_pos+8)}static createEdgeEnd(a,u,l,d){return a.prep(4,12),a.writeInt32(d),a.writeInt32(l),a.writeInt32(u),a.offset()}}i.EdgeEnd=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsNodeEdge(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsNodeEdge(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}nodeIndex(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readUint32(this.bb_pos+a):0}inputEdges(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+l)+a*12,this.bb):null}inputEdgesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}outputEdges(a,u){let l=this.bb.__offset(this.bb_pos,8);return l?(u||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+l)+a*12,this.bb):null}outputEdgesLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}static startNodeEdge(a){a.startObject(3)}static addNodeIndex(a,u){a.addFieldInt32(0,u,0)}static addInputEdges(a,u){a.addFieldOffset(1,u,0)}static startInputEdgesVector(a,u){a.startVector(12,u,4)}static addOutputEdges(a,u){a.addFieldOffset(2,u,0)}static startOutputEdgesVector(a,u){a.startVector(12,u,4)}static endNodeEdge(a){return a.endObject()}static createNodeEdge(a,u,l,d){return o.startNodeEdge(a),o.addNodeIndex(a,u),o.addInputEdges(a,l),o.addOutputEdges(a,d),o.endNodeEdge(a)}}i.NodeEdge=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsNode(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsNode(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}domain(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__string(this.bb_pos+u,a):null}sinceVersion(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readInt32(this.bb_pos+a):0}index(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.readUint32(this.bb_pos+a):0}opType(a){let u=this.bb.__offset(this.bb_pos,14);return u?this.bb.__string(this.bb_pos+u,a):null}type(){let a=this.bb.__offset(this.bb_pos,16);return a?this.bb.readInt32(this.bb_pos+a):0}executionProviderType(a){let u=this.bb.__offset(this.bb_pos,18);return u?this.bb.__string(this.bb_pos+u,a):null}inputs(a,u){let l=this.bb.__offset(this.bb_pos,20);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}inputsLength(){let a=this.bb.__offset(this.bb_pos,20);return a?this.bb.__vector_len(this.bb_pos+a):0}outputs(a,u){let l=this.bb.__offset(this.bb_pos,22);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}outputsLength(){let a=this.bb.__offset(this.bb_pos,22);return a?this.bb.__vector_len(this.bb_pos+a):0}attributes(a,u){let l=this.bb.__offset(this.bb_pos,24);return l?(u||new e.experimental.fbs.Attribute).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}attributesLength(){let a=this.bb.__offset(this.bb_pos,24);return a?this.bb.__vector_len(this.bb_pos+a):0}inputArgCounts(a){let u=this.bb.__offset(this.bb_pos,26);return u?this.bb.readInt32(this.bb.__vector(this.bb_pos+u)+a*4):0}inputArgCountsLength(){let a=this.bb.__offset(this.bb_pos,26);return a?this.bb.__vector_len(this.bb_pos+a):0}inputArgCountsArray(){let a=this.bb.__offset(this.bb_pos,26);return a?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}implicitInputs(a,u){let l=this.bb.__offset(this.bb_pos,28);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}implicitInputsLength(){let a=this.bb.__offset(this.bb_pos,28);return a?this.bb.__vector_len(this.bb_pos+a):0}static startNode(a){a.startObject(13)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addDomain(a,u){a.addFieldOffset(2,u,0)}static addSinceVersion(a,u){a.addFieldInt32(3,u,0)}static addIndex(a,u){a.addFieldInt32(4,u,0)}static addOpType(a,u){a.addFieldOffset(5,u,0)}static addType(a,u){a.addFieldInt32(6,u,0)}static addExecutionProviderType(a,u){a.addFieldOffset(7,u,0)}static addInputs(a,u){a.addFieldOffset(8,u,0)}static createInputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startInputsVector(a,u){a.startVector(4,u,4)}static addOutputs(a,u){a.addFieldOffset(9,u,0)}static createOutputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startOutputsVector(a,u){a.startVector(4,u,4)}static addAttributes(a,u){a.addFieldOffset(10,u,0)}static createAttributesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startAttributesVector(a,u){a.startVector(4,u,4)}static addInputArgCounts(a,u){a.addFieldOffset(11,u,0)}static createInputArgCountsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addInt32(u[l]);return a.endVector()}static startInputArgCountsVector(a,u){a.startVector(4,u,4)}static addImplicitInputs(a,u){a.addFieldOffset(12,u,0)}static createImplicitInputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startImplicitInputsVector(a,u){a.startVector(4,u,4)}static endNode(a){return a.endObject()}static createNode(a,u,l,d,p,m,b,v,w,A,$,_,O,P){return o.startNode(a),o.addName(a,u),o.addDocString(a,l),o.addDomain(a,d),o.addSinceVersion(a,p),o.addIndex(a,m),o.addOpType(a,b),o.addType(a,v),o.addExecutionProviderType(a,w),o.addInputs(a,A),o.addOutputs(a,$),o.addAttributes(a,_),o.addInputArgCounts(a,O),o.addImplicitInputs(a,P),o.endNode(a)}}i.Node=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsValueInfo(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsValueInfo(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}type(a){let u=this.bb.__offset(this.bb_pos,8);return u?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startValueInfo(a){a.startObject(3)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addType(a,u){a.addFieldOffset(2,u,0)}static endValueInfo(a){return a.endObject()}static createValueInfo(a,u,l,d){return o.startValueInfo(a),o.addName(a,u),o.addDocString(a,l),o.addType(a,d),o.endValueInfo(a)}}i.ValueInfo=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsTypeInfo(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTypeInfo(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}denotation(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}valueType(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readUint8(this.bb_pos+a):0}value(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__union(a,this.bb_pos+u):null}static startTypeInfo(a){a.startObject(3)}static addDenotation(a,u){a.addFieldOffset(0,u,0)}static addValueType(a,u){a.addFieldInt8(1,u,0)}static addValue(a,u){a.addFieldOffset(2,u,0)}static endTypeInfo(a){return a.endObject()}static createTypeInfo(a,u,l,d){return o.startTypeInfo(a),o.addDenotation(a,u),o.addValueType(a,l),o.addValue(a,d),o.endTypeInfo(a)}}i.TypeInfo=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsOperatorSetId(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsOperatorSetId(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}domain(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}version(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}static startOperatorSetId(a){a.startObject(2)}static addDomain(a,u){a.addFieldOffset(0,u,0)}static addVersion(a,u){a.addFieldInt64(1,u,a.createLong(0,0))}static endOperatorSetId(a){return a.endObject()}static createOperatorSetId(a,u,l){return o.startOperatorSetId(a),o.addDomain(a,u),o.addVersion(a,l),o.endOperatorSetId(a)}}i.OperatorSetId=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsTensor(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTensor(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}dims(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.readInt64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}dimsLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}dataType(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readInt32(this.bb_pos+a):0}rawData(a){let u=this.bb.__offset(this.bb_pos,12);return u?this.bb.readUint8(this.bb.__vector(this.bb_pos+u)+a):0}rawDataLength(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.__vector_len(this.bb_pos+a):0}rawDataArray(){let a=this.bb.__offset(this.bb_pos,12);return a?new Uint8Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}stringData(a,u){let l=this.bb.__offset(this.bb_pos,14);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}stringDataLength(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.__vector_len(this.bb_pos+a):0}static startTensor(a){a.startObject(6)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addDims(a,u){a.addFieldOffset(2,u,0)}static createDimsVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startDimsVector(a,u){a.startVector(8,u,8)}static addDataType(a,u){a.addFieldInt32(3,u,0)}static addRawData(a,u){a.addFieldOffset(4,u,0)}static createRawDataVector(a,u){a.startVector(1,u.length,1);for(let l=u.length-1;l>=0;l--)a.addInt8(u[l]);return a.endVector()}static startRawDataVector(a,u){a.startVector(1,u,1)}static addStringData(a,u){a.addFieldOffset(5,u,0)}static createStringDataVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startStringDataVector(a,u){a.startVector(4,u,4)}static endTensor(a){return a.endObject()}static createTensor(a,u,l,d,p,m,b){return o.startTensor(a),o.addName(a,u),o.addDocString(a,l),o.addDims(a,d),o.addDataType(a,p),o.addRawData(a,m),o.addStringData(a,b),o.endTensor(a)}}i.Tensor=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSparseTensor(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSparseTensor(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}values(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}indices(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}dims(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.readInt64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}dimsLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}static startSparseTensor(a){a.startObject(3)}static addValues(a,u){a.addFieldOffset(0,u,0)}static addIndices(a,u){a.addFieldOffset(1,u,0)}static addDims(a,u){a.addFieldOffset(2,u,0)}static createDimsVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startDimsVector(a,u){a.startVector(8,u,8)}static endSparseTensor(a){return a.endObject()}static createSparseTensor(a,u,l,d){return o.startSparseTensor(a),o.addValues(a,u),o.addIndices(a,l),o.addDims(a,d),o.endSparseTensor(a)}}i.SparseTensor=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsAttribute(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsAttribute(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}type(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.readInt32(this.bb_pos+a):0}f(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readFloat32(this.bb_pos+a):0}i(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}s(a){let u=this.bb.__offset(this.bb_pos,14);return u?this.bb.__string(this.bb_pos+u,a):null}t(a){let u=this.bb.__offset(this.bb_pos,16);return u?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}g(a){let u=this.bb.__offset(this.bb_pos,18);return u?(a||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}floats(a){let u=this.bb.__offset(this.bb_pos,20);return u?this.bb.readFloat32(this.bb.__vector(this.bb_pos+u)+a*4):0}floatsLength(){let a=this.bb.__offset(this.bb_pos,20);return a?this.bb.__vector_len(this.bb_pos+a):0}floatsArray(){let a=this.bb.__offset(this.bb_pos,20);return a?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}ints(a){let u=this.bb.__offset(this.bb_pos,22);return u?this.bb.readInt64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}intsLength(){let a=this.bb.__offset(this.bb_pos,22);return a?this.bb.__vector_len(this.bb_pos+a):0}strings(a,u){let l=this.bb.__offset(this.bb_pos,24);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}stringsLength(){let a=this.bb.__offset(this.bb_pos,24);return a?this.bb.__vector_len(this.bb_pos+a):0}tensors(a,u){let l=this.bb.__offset(this.bb_pos,26);return l?(u||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}tensorsLength(){let a=this.bb.__offset(this.bb_pos,26);return a?this.bb.__vector_len(this.bb_pos+a):0}graphs(a,u){let l=this.bb.__offset(this.bb_pos,28);return l?(u||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}graphsLength(){let a=this.bb.__offset(this.bb_pos,28);return a?this.bb.__vector_len(this.bb_pos+a):0}static startAttribute(a){a.startObject(13)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addType(a,u){a.addFieldInt32(2,u,0)}static addF(a,u){a.addFieldFloat32(3,u,0)}static addI(a,u){a.addFieldInt64(4,u,a.createLong(0,0))}static addS(a,u){a.addFieldOffset(5,u,0)}static addT(a,u){a.addFieldOffset(6,u,0)}static addG(a,u){a.addFieldOffset(7,u,0)}static addFloats(a,u){a.addFieldOffset(8,u,0)}static createFloatsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addFloat32(u[l]);return a.endVector()}static startFloatsVector(a,u){a.startVector(4,u,4)}static addInts(a,u){a.addFieldOffset(9,u,0)}static createIntsVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startIntsVector(a,u){a.startVector(8,u,8)}static addStrings(a,u){a.addFieldOffset(10,u,0)}static createStringsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startStringsVector(a,u){a.startVector(4,u,4)}static addTensors(a,u){a.addFieldOffset(11,u,0)}static createTensorsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startTensorsVector(a,u){a.startVector(4,u,4)}static addGraphs(a,u){a.addFieldOffset(12,u,0)}static createGraphsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startGraphsVector(a,u){a.startVector(4,u,4)}static endAttribute(a){return a.endObject()}static createAttribute(a,u,l,d,p,m,b,v,w,A,$,_,O,P){return o.startAttribute(a),o.addName(a,u),o.addDocString(a,l),o.addType(a,d),o.addF(a,p),o.addI(a,m),o.addS(a,b),o.addT(a,v),o.addG(a,w),o.addFloats(a,A),o.addInts(a,$),o.addStrings(a,_),o.addTensors(a,O),o.addGraphs(a,P),o.endAttribute(a)}}i.Attribute=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsGraph(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsGraph(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}initializers(a,u){let l=this.bb.__offset(this.bb_pos,4);return l?(u||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}initializersLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}nodeArgs(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.ValueInfo).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodeArgsLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}nodes(a,u){let l=this.bb.__offset(this.bb_pos,8);return l?(u||new e.experimental.fbs.Node).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodesLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}maxNodeIndex(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readUint32(this.bb_pos+a):0}nodeEdges(a,u){let l=this.bb.__offset(this.bb_pos,12);return l?(u||new e.experimental.fbs.NodeEdge).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodeEdgesLength(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.__vector_len(this.bb_pos+a):0}inputs(a,u){let l=this.bb.__offset(this.bb_pos,14);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}inputsLength(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.__vector_len(this.bb_pos+a):0}outputs(a,u){let l=this.bb.__offset(this.bb_pos,16);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}outputsLength(){let a=this.bb.__offset(this.bb_pos,16);return a?this.bb.__vector_len(this.bb_pos+a):0}sparseInitializers(a,u){let l=this.bb.__offset(this.bb_pos,18);return l?(u||new e.experimental.fbs.SparseTensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}sparseInitializersLength(){let a=this.bb.__offset(this.bb_pos,18);return a?this.bb.__vector_len(this.bb_pos+a):0}static startGraph(a){a.startObject(8)}static addInitializers(a,u){a.addFieldOffset(0,u,0)}static createInitializersVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startInitializersVector(a,u){a.startVector(4,u,4)}static addNodeArgs(a,u){a.addFieldOffset(1,u,0)}static createNodeArgsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startNodeArgsVector(a,u){a.startVector(4,u,4)}static addNodes(a,u){a.addFieldOffset(2,u,0)}static createNodesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startNodesVector(a,u){a.startVector(4,u,4)}static addMaxNodeIndex(a,u){a.addFieldInt32(3,u,0)}static addNodeEdges(a,u){a.addFieldOffset(4,u,0)}static createNodeEdgesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startNodeEdgesVector(a,u){a.startVector(4,u,4)}static addInputs(a,u){a.addFieldOffset(5,u,0)}static createInputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startInputsVector(a,u){a.startVector(4,u,4)}static addOutputs(a,u){a.addFieldOffset(6,u,0)}static createOutputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startOutputsVector(a,u){a.startVector(4,u,4)}static addSparseInitializers(a,u){a.addFieldOffset(7,u,0)}static createSparseInitializersVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startSparseInitializersVector(a,u){a.startVector(4,u,4)}static endGraph(a){return a.endObject()}static createGraph(a,u,l,d,p,m,b,v,w){return o.startGraph(a),o.addInitializers(a,u),o.addNodeArgs(a,l),o.addNodes(a,d),o.addMaxNodeIndex(a,p),o.addNodeEdges(a,m),o.addInputs(a,b),o.addOutputs(a,v),o.addSparseInitializers(a,w),o.endGraph(a)}}i.Graph=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsModel(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsModel(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}irVersion(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}opsetImport(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.OperatorSetId).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}opsetImportLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}producerName(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__string(this.bb_pos+u,a):null}producerVersion(a){let u=this.bb.__offset(this.bb_pos,10);return u?this.bb.__string(this.bb_pos+u,a):null}domain(a){let u=this.bb.__offset(this.bb_pos,12);return u?this.bb.__string(this.bb_pos+u,a):null}modelVersion(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}docString(a){let u=this.bb.__offset(this.bb_pos,16);return u?this.bb.__string(this.bb_pos+u,a):null}graph(a){let u=this.bb.__offset(this.bb_pos,18);return u?(a||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}graphDocString(a){let u=this.bb.__offset(this.bb_pos,20);return u?this.bb.__string(this.bb_pos+u,a):null}static startModel(a){a.startObject(9)}static addIrVersion(a,u){a.addFieldInt64(0,u,a.createLong(0,0))}static addOpsetImport(a,u){a.addFieldOffset(1,u,0)}static createOpsetImportVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startOpsetImportVector(a,u){a.startVector(4,u,4)}static addProducerName(a,u){a.addFieldOffset(2,u,0)}static addProducerVersion(a,u){a.addFieldOffset(3,u,0)}static addDomain(a,u){a.addFieldOffset(4,u,0)}static addModelVersion(a,u){a.addFieldInt64(5,u,a.createLong(0,0))}static addDocString(a,u){a.addFieldOffset(6,u,0)}static addGraph(a,u){a.addFieldOffset(7,u,0)}static addGraphDocString(a,u){a.addFieldOffset(8,u,0)}static endModel(a){return a.endObject()}static createModel(a,u,l,d,p,m,b,v,w,A){return o.startModel(a),o.addIrVersion(a,u),o.addOpsetImport(a,l),o.addProducerName(a,d),o.addProducerVersion(a,p),o.addDomain(a,m),o.addModelVersion(a,b),o.addDocString(a,v),o.addGraph(a,w),o.addGraphDocString(a,A),o.endModel(a)}}i.Model=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsKernelCreateInfos(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsKernelCreateInfos(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}nodeIndices(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.readUint32(this.bb.__vector(this.bb_pos+u)+a*4):0}nodeIndicesLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}nodeIndicesArray(){let a=this.bb.__offset(this.bb_pos,4);return a?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}kernelDefHashes(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.readUint64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}kernelDefHashesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}static startKernelCreateInfos(a){a.startObject(2)}static addNodeIndices(a,u){a.addFieldOffset(0,u,0)}static createNodeIndicesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addInt32(u[l]);return a.endVector()}static startNodeIndicesVector(a,u){a.startVector(4,u,4)}static addKernelDefHashes(a,u){a.addFieldOffset(1,u,0)}static createKernelDefHashesVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startKernelDefHashesVector(a,u){a.startVector(8,u,8)}static endKernelCreateInfos(a){return a.endObject()}static createKernelCreateInfos(a,u,l){return o.startKernelCreateInfos(a),o.addNodeIndices(a,u),o.addKernelDefHashes(a,l),o.endKernelCreateInfos(a)}}i.KernelCreateInfos=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSubGraphSessionState(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSubGraphSessionState(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}graphId(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}sessionState(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startSubGraphSessionState(a){a.startObject(2)}static addGraphId(a,u){a.addFieldOffset(0,u,0)}static addSessionState(a,u){a.addFieldOffset(1,u,0)}static endSubGraphSessionState(a){let u=a.endObject();return a.requiredField(u,4),u}static createSubGraphSessionState(a,u,l){return o.startSubGraphSessionState(a),o.addGraphId(a,u),o.addSessionState(a,l),o.endSubGraphSessionState(a)}}i.SubGraphSessionState=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSessionState(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSessionState(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}kernels(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.KernelCreateInfos).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}subGraphSessionStates(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.SubGraphSessionState).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}subGraphSessionStatesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}static startSessionState(a){a.startObject(2)}static addKernels(a,u){a.addFieldOffset(0,u,0)}static addSubGraphSessionStates(a,u){a.addFieldOffset(1,u,0)}static createSubGraphSessionStatesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startSubGraphSessionStatesVector(a,u){a.startVector(4,u,4)}static endSessionState(a){return a.endObject()}static createSessionState(a,u,l){return o.startSessionState(a),o.addKernels(a,u),o.addSubGraphSessionStates(a,l),o.endSessionState(a)}}i.SessionState=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsInferenceSession(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsInferenceSession(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static bufferHasIdentifier(a){return a.__has_identifier("ORTM")}ortVersion(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}model(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.Model).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}sessionState(a){let u=this.bb.__offset(this.bb_pos,8);return u?(a||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startInferenceSession(a){a.startObject(3)}static addOrtVersion(a,u){a.addFieldOffset(0,u,0)}static addModel(a,u){a.addFieldOffset(1,u,0)}static addSessionState(a,u){a.addFieldOffset(2,u,0)}static endInferenceSession(a){return a.endObject()}static finishInferenceSessionBuffer(a,u){a.finish(u,"ORTM")}static finishSizePrefixedInferenceSessionBuffer(a,u){a.finish(u,"ORTM",!0)}static createInferenceSession(a,u,l,d){return o.startInferenceSession(a),o.addOrtVersion(a,u),o.addModel(a,l),o.addSessionState(a,d),o.endInferenceSession(a)}}i.InferenceSession=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={})});var Od=et((n$,Ad)=>{"use strict";Ad.exports=V0;function V0(r,e){for(var n=new Array(arguments.length-1),t=0,o=2,i=!0;o<arguments.length;)n[t++]=arguments[o++];return new Promise(function(a,u){n[t]=function(d){if(i)if(i=!1,d)u(d);else{for(var p=new Array(arguments.length-1),m=0;m<p.length;)p[m++]=arguments[m];a.apply(null,p)}};try{r.apply(e||null,n)}catch(l){i&&(i=!1,u(l))}})}});var kd=et(Pd=>{"use strict";var Ui=Pd;Ui.length=function(e){var n=e.length;if(!n)return 0;for(var t=0;--n%4>1&&e.charAt(n)==="=";)++t;return Math.ceil(e.length*3)/4-t};var Hn=new Array(64),Ed=new Array(123);for(mr=0;mr<64;)Ed[Hn[mr]=mr<26?mr+65:mr<52?mr+71:mr<62?mr-4:mr-59|43]=mr++;var mr;Ui.encode=function(e,n,t){for(var o=null,i=[],s=0,a=0,u;n<t;){var l=e[n++];switch(a){case 0:i[s++]=Hn[l>>2],u=(l&3)<<4,a=1;break;case 1:i[s++]=Hn[u|l>>4],u=(l&15)<<2,a=2;break;case 2:i[s++]=Hn[u|l>>6],i[s++]=Hn[l&63],a=0;break}s>8191&&((o||(o=[])).push(String.fromCharCode.apply(String,i)),s=0)}return a&&(i[s++]=Hn[u],i[s++]=61,a===1&&(i[s++]=61)),o?(s&&o.push(String.fromCharCode.apply(String,i.slice(0,s))),o.join("")):String.fromCharCode.apply(String,i.slice(0,s))};var Cd="invalid encoding";Ui.decode=function(e,n,t){for(var o=t,i=0,s,a=0;a<e.length;){var u=e.charCodeAt(a++);if(u===61&&i>1)break;if((u=Ed[u])===void 0)throw Error(Cd);switch(i){case 0:s=u,i=1;break;case 1:n[t++]=s<<2|(u&48)>>4,s=u,i=2;break;case 2:n[t++]=(s&15)<<4|(u&60)>>2,s=u,i=3;break;case 3:n[t++]=(s&3)<<6|u,i=0;break}}if(i===1)throw Error(Cd);return t-o};Ui.test=function(e){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e)}});var Bd=et((i$,Dd)=>{"use strict";Dd.exports=Gi;function Gi(){this._listeners={}}Gi.prototype.on=function(e,n,t){return(this._listeners[e]||(this._listeners[e]=[])).push({fn:n,ctx:t||this}),this};Gi.prototype.off=function(e,n){if(e===void 0)this._listeners={};else if(n===void 0)this._listeners[e]=[];else for(var t=this._listeners[e],o=0;o<t.length;)t[o].fn===n?t.splice(o,1):++o;return this};Gi.prototype.emit=function(e){var n=this._listeners[e];if(n){for(var t=[],o=1;o<arguments.length;)t.push(arguments[o++]);for(o=0;o<n.length;)n[o].fn.apply(n[o++].ctx,t)}return this}});var Vd=et((a$,Fd)=>{"use strict";Fd.exports=Rd(Rd);function Rd(r){return typeof Float32Array<"u"?function(){var e=new Float32Array([-0]),n=new Uint8Array(e.buffer),t=n[3]===128;function o(u,l,d){e[0]=u,l[d]=n[0],l[d+1]=n[1],l[d+2]=n[2],l[d+3]=n[3]}function i(u,l,d){e[0]=u,l[d]=n[3],l[d+1]=n[2],l[d+2]=n[1],l[d+3]=n[0]}r.writeFloatLE=t?o:i,r.writeFloatBE=t?i:o;function s(u,l){return n[0]=u[l],n[1]=u[l+1],n[2]=u[l+2],n[3]=u[l+3],e[0]}function a(u,l){return n[3]=u[l],n[2]=u[l+1],n[1]=u[l+2],n[0]=u[l+3],e[0]}r.readFloatLE=t?s:a,r.readFloatBE=t?a:s}():function(){function e(t,o,i,s){var a=o<0?1:0;if(a&&(o=-o),o===0)t(1/o>0?0:2147483648,i,s);else if(isNaN(o))t(2143289344,i,s);else if(o>34028234663852886e22)t((a<<31|2139095040)>>>0,i,s);else if(o<11754943508222875e-54)t((a<<31|Math.round(o/1401298464324817e-60))>>>0,i,s);else{var u=Math.floor(Math.log(o)/Math.LN2),l=Math.round(o*Math.pow(2,-u)*8388608)&8388607;t((a<<31|u+127<<23|l)>>>0,i,s)}}r.writeFloatLE=e.bind(null,zd),r.writeFloatBE=e.bind(null,Md);function n(t,o,i){var s=t(o,i),a=(s>>31)*2+1,u=s>>>23&255,l=s&8388607;return u===255?l?NaN:a*(1/0):u===0?a*1401298464324817e-60*l:a*Math.pow(2,u-150)*(l+8388608)}r.readFloatLE=n.bind(null,Ld),r.readFloatBE=n.bind(null,Nd)}(),typeof Float64Array<"u"?function(){var e=new Float64Array([-0]),n=new Uint8Array(e.buffer),t=n[7]===128;function o(u,l,d){e[0]=u,l[d]=n[0],l[d+1]=n[1],l[d+2]=n[2],l[d+3]=n[3],l[d+4]=n[4],l[d+5]=n[5],l[d+6]=n[6],l[d+7]=n[7]}function i(u,l,d){e[0]=u,l[d]=n[7],l[d+1]=n[6],l[d+2]=n[5],l[d+3]=n[4],l[d+4]=n[3],l[d+5]=n[2],l[d+6]=n[1],l[d+7]=n[0]}r.writeDoubleLE=t?o:i,r.writeDoubleBE=t?i:o;function s(u,l){return n[0]=u[l],n[1]=u[l+1],n[2]=u[l+2],n[3]=u[l+3],n[4]=u[l+4],n[5]=u[l+5],n[6]=u[l+6],n[7]=u[l+7],e[0]}function a(u,l){return n[7]=u[l],n[6]=u[l+1],n[5]=u[l+2],n[4]=u[l+3],n[3]=u[l+4],n[2]=u[l+5],n[1]=u[l+6],n[0]=u[l+7],e[0]}r.readDoubleLE=t?s:a,r.readDoubleBE=t?a:s}():function(){function e(t,o,i,s,a,u){var l=s<0?1:0;if(l&&(s=-s),s===0)t(0,a,u+o),t(1/s>0?0:2147483648,a,u+i);else if(isNaN(s))t(0,a,u+o),t(2146959360,a,u+i);else if(s>17976931348623157e292)t(0,a,u+o),t((l<<31|2146435072)>>>0,a,u+i);else{var d;if(s<22250738585072014e-324)d=s/5e-324,t(d>>>0,a,u+o),t((l<<31|d/4294967296)>>>0,a,u+i);else{var p=Math.floor(Math.log(s)/Math.LN2);p===1024&&(p=1023),d=s*Math.pow(2,-p),t(d*4503599627370496>>>0,a,u+o),t((l<<31|p+1023<<20|d*1048576&1048575)>>>0,a,u+i)}}}r.writeDoubleLE=e.bind(null,zd,0,4),r.writeDoubleBE=e.bind(null,Md,4,0);function n(t,o,i,s,a){var u=t(s,a+o),l=t(s,a+i),d=(l>>31)*2+1,p=l>>>20&2047,m=4294967296*(l&1048575)+u;return p===2047?m?NaN:d*(1/0):p===0?d*5e-324*m:d*Math.pow(2,p-1075)*(m+4503599627370496)}r.readDoubleLE=n.bind(null,Ld,0,4),r.readDoubleBE=n.bind(null,Nd,4,0)}(),r}function zd(r,e,n){e[n]=r&255,e[n+1]=r>>>8&255,e[n+2]=r>>>16&255,e[n+3]=r>>>24}function Md(r,e,n){e[n]=r>>>24,e[n+1]=r>>>16&255,e[n+2]=r>>>8&255,e[n+3]=r&255}function Ld(r,e){return(r[e]|r[e+1]<<8|r[e+2]<<16|r[e+3]<<24)>>>0}function Nd(r,e){return(r[e]<<24|r[e+1]<<16|r[e+2]<<8|r[e+3])>>>0}});var Ud=et((exports,module)=>{"use strict";module.exports=inquire;function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(r){}return null}});var Wd=et(Gd=>{"use strict";var _s=Gd;_s.length=function(e){for(var n=0,t=0,o=0;o<e.length;++o)t=e.charCodeAt(o),t<128?n+=1:t<2048?n+=2:(t&64512)===55296&&(e.charCodeAt(o+1)&64512)===56320?(++o,n+=4):n+=3;return n};_s.read=function(e,n,t){var o=t-n;if(o<1)return"";for(var i=null,s=[],a=0,u;n<t;)u=e[n++],u<128?s[a++]=u:u>191&&u<224?s[a++]=(u&31)<<6|e[n++]&63:u>239&&u<365?(u=((u&7)<<18|(e[n++]&63)<<12|(e[n++]&63)<<6|e[n++]&63)-65536,s[a++]=55296+(u>>10),s[a++]=56320+(u&1023)):s[a++]=(u&15)<<12|(e[n++]&63)<<6|e[n++]&63,a>8191&&((i||(i=[])).push(String.fromCharCode.apply(String,s)),a=0);return i?(a&&i.push(String.fromCharCode.apply(String,s.slice(0,a))),i.join("")):String.fromCharCode.apply(String,s.slice(0,a))};_s.write=function(e,n,t){for(var o=t,i,s,a=0;a<e.length;++a)i=e.charCodeAt(a),i<128?n[t++]=i:i<2048?(n[t++]=i>>6|192,n[t++]=i&63|128):(i&64512)===55296&&((s=e.charCodeAt(a+1))&64512)===56320?(i=65536+((i&1023)<<10)+(s&1023),++a,n[t++]=i>>18|240,n[t++]=i>>12&63|128,n[t++]=i>>6&63|128,n[t++]=i&63|128):(n[t++]=i>>12|224,n[t++]=i>>6&63|128,n[t++]=i&63|128);return t-o}});var qd=et((u$,Hd)=>{"use strict";Hd.exports=U0;function U0(r,e,n){var t=n||8192,o=t>>>1,i=null,s=t;return function(u){if(u<1||u>o)return r(u);s+u>t&&(i=r(t),s=0);var l=e.call(i,s,s+=u);return s&7&&(s=(s|7)+1),l}}});var Kd=et((l$,jd)=>{"use strict";jd.exports=_t;var ko=en();function _t(r,e){this.lo=r>>>0,this.hi=e>>>0}var vn=_t.zero=new _t(0,0);vn.toNumber=function(){return 0};vn.zzEncode=vn.zzDecode=function(){return this};vn.length=function(){return 1};var G0=_t.zeroHash="\0\0\0\0\0\0\0\0";_t.fromNumber=function(e){if(e===0)return vn;var n=e<0;n&&(e=-e);var t=e>>>0,o=(e-t)/4294967296>>>0;return n&&(o=~o>>>0,t=~t>>>0,++t>4294967295&&(t=0,++o>4294967295&&(o=0))),new _t(t,o)};_t.from=function(e){if(typeof e=="number")return _t.fromNumber(e);if(ko.isString(e))if(ko.Long)e=ko.Long.fromString(e);else return _t.fromNumber(parseInt(e,10));return e.low||e.high?new _t(e.low>>>0,e.high>>>0):vn};_t.prototype.toNumber=function(e){if(!e&&this.hi>>>31){var n=~this.lo+1>>>0,t=~this.hi>>>0;return n||(t=t+1>>>0),-(n+t*4294967296)}return this.lo+this.hi*4294967296};_t.prototype.toLong=function(e){return ko.Long?new ko.Long(this.lo|0,this.hi|0,!!e):{low:this.lo|0,high:this.hi|0,unsigned:!!e}};var Qr=String.prototype.charCodeAt;_t.fromHash=function(e){return e===G0?vn:new _t((Qr.call(e,0)|Qr.call(e,1)<<8|Qr.call(e,2)<<16|Qr.call(e,3)<<24)>>>0,(Qr.call(e,4)|Qr.call(e,5)<<8|Qr.call(e,6)<<16|Qr.call(e,7)<<24)>>>0)};_t.prototype.toHash=function(){return String.fromCharCode(this.lo&255,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,this.hi&255,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)};_t.prototype.zzEncode=function(){var e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this};_t.prototype.zzDecode=function(){var e=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this};_t.prototype.length=function(){var e=this.lo,n=(this.lo>>>28|this.hi<<4)>>>0,t=this.hi>>>24;return t===0?n===0?e<16384?e<128?1:2:e<2097152?3:4:n<16384?n<128?5:6:n<2097152?7:8:t<128?9:10}});var en=et(Ts=>{"use strict";var pe=Ts;pe.asPromise=Od();pe.base64=kd();pe.EventEmitter=Bd();pe.float=Vd();pe.inquire=Ud();pe.utf8=Wd();pe.pool=qd();pe.LongBits=Kd();pe.isNode=!!(typeof global<"u"&&global&&global.process&&global.process.versions&&global.process.versions.node);pe.global=pe.isNode&&global||typeof window<"u"&&window||typeof self<"u"&&self||Ts;pe.emptyArray=Object.freeze?Object.freeze([]):[];pe.emptyObject=Object.freeze?Object.freeze({}):{};pe.isInteger=Number.isInteger||function(e){return typeof e=="number"&&isFinite(e)&&Math.floor(e)===e};pe.isString=function(e){return typeof e=="string"||e instanceof String};pe.isObject=function(e){return e&&typeof e=="object"};pe.isset=pe.isSet=function(e,n){var t=e[n];return t!=null&&e.hasOwnProperty(n)?typeof t!="object"||(Array.isArray(t)?t.length:Object.keys(t).length)>0:!1};pe.Buffer=function(){try{var r=pe.inquire("buffer").Buffer;return r.prototype.utf8Write?r:null}catch{return null}}();pe._Buffer_from=null;pe._Buffer_allocUnsafe=null;pe.newBuffer=function(e){return typeof e=="number"?pe.Buffer?pe._Buffer_allocUnsafe(e):new pe.Array(e):pe.Buffer?pe._Buffer_from(e):typeof Uint8Array>"u"?e:new Uint8Array(e)};pe.Array=typeof Uint8Array<"u"?Uint8Array:Array;pe.Long=pe.global.dcodeIO&&pe.global.dcodeIO.Long||pe.global.Long||pe.inquire("long");pe.key2Re=/^true|false|0|1$/;pe.key32Re=/^-?(?:0|[1-9][0-9]*)$/;pe.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;pe.longToHash=function(e){return e?pe.LongBits.from(e).toHash():pe.LongBits.zeroHash};pe.longFromHash=function(e,n){var t=pe.LongBits.fromHash(e);return pe.Long?pe.Long.fromBits(t.lo,t.hi,n):t.toNumber(!!n)};function Yd(r,e,n){for(var t=Object.keys(e),o=0;o<t.length;++o)(r[t[o]]===void 0||!n)&&(r[t[o]]=e[t[o]]);return r}pe.merge=Yd;pe.lcFirst=function(e){return e.charAt(0).toLowerCase()+e.substring(1)};function Xd(r){function e(n,t){if(!(this instanceof e))return new e(n,t);Object.defineProperty(this,"message",{get:function(){return n}}),Error.captureStackTrace?Error.captureStackTrace(this,e):Object.defineProperty(this,"stack",{value:new Error().stack||""}),t&&Yd(this,t)}return e.prototype=Object.create(Error.prototype,{constructor:{value:e,writable:!0,enumerable:!1,configurable:!0},name:{get:function(){return r},set:void 0,enumerable:!1,configurable:!0},toString:{value:function(){return this.name+": "+this.message},writable:!0,enumerable:!1,configurable:!0}}),e}pe.newError=Xd;pe.ProtocolError=Xd("ProtocolError");pe.oneOfGetter=function(e){for(var n={},t=0;t<e.length;++t)n[e[t]]=1;return function(){for(var o=Object.keys(this),i=o.length-1;i>-1;--i)if(n[o[i]]===1&&this[o[i]]!==void 0&&this[o[i]]!==null)return o[i]}};pe.oneOfSetter=function(e){return function(n){for(var t=0;t<e.length;++t)e[t]!==n&&delete this[e[t]]}};pe.toJSONOptions={longs:String,enums:String,bytes:String,json:!0};pe._configure=function(){var r=pe.Buffer;if(!r){pe._Buffer_from=pe._Buffer_allocUnsafe=null;return}pe._Buffer_from=r.from!==Uint8Array.from&&r.from||function(n,t){return new r(n,t)},pe._Buffer_allocUnsafe=r.allocUnsafe||function(n){return new r(n)}}});var Es=et((c$,ec)=>{"use strict";ec.exports=Ue;var ir=en(),$s,Wi=ir.LongBits,Zd=ir.base64,Jd=ir.utf8;function Do(r,e,n){this.fn=r,this.len=e,this.next=void 0,this.val=n}function Is(){}function W0(r){this.head=r.head,this.tail=r.tail,this.len=r.len,this.next=r.states}function Ue(){this.len=0,this.head=new Do(Is,0,0),this.tail=this.head,this.states=null}var Qd=function(){return ir.Buffer?function(){return(Ue.create=function(){return new $s})()}:function(){return new Ue}};Ue.create=Qd();Ue.alloc=function(e){return new ir.Array(e)};ir.Array!==Array&&(Ue.alloc=ir.pool(Ue.alloc,ir.Array.prototype.subarray));Ue.prototype._push=function(e,n,t){return this.tail=this.tail.next=new Do(e,n,t),this.len+=n,this};function As(r,e,n){e[n]=r&255}function H0(r,e,n){for(;r>127;)e[n++]=r&127|128,r>>>=7;e[n]=r}function Os(r,e){this.len=r,this.next=void 0,this.val=e}Os.prototype=Object.create(Do.prototype);Os.prototype.fn=H0;Ue.prototype.uint32=function(e){return this.len+=(this.tail=this.tail.next=new Os((e=e>>>0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this};Ue.prototype.int32=function(e){return e<0?this._push(Cs,10,Wi.fromNumber(e)):this.uint32(e)};Ue.prototype.sint32=function(e){return this.uint32((e<<1^e>>31)>>>0)};function Cs(r,e,n){for(;r.hi;)e[n++]=r.lo&127|128,r.lo=(r.lo>>>7|r.hi<<25)>>>0,r.hi>>>=7;for(;r.lo>127;)e[n++]=r.lo&127|128,r.lo=r.lo>>>7;e[n++]=r.lo}Ue.prototype.uint64=function(e){var n=Wi.from(e);return this._push(Cs,n.length(),n)};Ue.prototype.int64=Ue.prototype.uint64;Ue.prototype.sint64=function(e){var n=Wi.from(e).zzEncode();return this._push(Cs,n.length(),n)};Ue.prototype.bool=function(e){return this._push(As,1,e?1:0)};function Ss(r,e,n){e[n]=r&255,e[n+1]=r>>>8&255,e[n+2]=r>>>16&255,e[n+3]=r>>>24}Ue.prototype.fixed32=function(e){return this._push(Ss,4,e>>>0)};Ue.prototype.sfixed32=Ue.prototype.fixed32;Ue.prototype.fixed64=function(e){var n=Wi.from(e);return this._push(Ss,4,n.lo)._push(Ss,4,n.hi)};Ue.prototype.sfixed64=Ue.prototype.fixed64;Ue.prototype.float=function(e){return this._push(ir.float.writeFloatLE,4,e)};Ue.prototype.double=function(e){return this._push(ir.float.writeDoubleLE,8,e)};var q0=ir.Array.prototype.set?function(e,n,t){n.set(e,t)}:function(e,n,t){for(var o=0;o<e.length;++o)n[t+o]=e[o]};Ue.prototype.bytes=function(e){var n=e.length>>>0;if(!n)return this._push(As,1,0);if(ir.isString(e)){var t=Ue.alloc(n=Zd.length(e));Zd.decode(e,t,0),e=t}return this.uint32(n)._push(q0,n,e)};Ue.prototype.string=function(e){var n=Jd.length(e);return n?this.uint32(n)._push(Jd.write,n,e):this._push(As,1,0)};Ue.prototype.fork=function(){return this.states=new W0(this),this.head=this.tail=new Do(Is,0,0),this.len=0,this};Ue.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new Do(Is,0,0),this.len=0),this};Ue.prototype.ldelim=function(){var e=this.head,n=this.tail,t=this.len;return this.reset().uint32(t),t&&(this.tail.next=e.next,this.tail=n,this.len+=t),this};Ue.prototype.finish=function(){for(var e=this.head.next,n=this.constructor.alloc(this.len),t=0;e;)e.fn(e.val,n,t),t+=e.len,e=e.next;return n};Ue._configure=function(r){$s=r,Ue.create=Qd(),$s._configure()}});var nc=et((f$,rc)=>{"use strict";rc.exports=Tr;var tc=Es();(Tr.prototype=Object.create(tc.prototype)).constructor=Tr;var tn=en();function Tr(){tc.call(this)}Tr._configure=function(){Tr.alloc=tn._Buffer_allocUnsafe,Tr.writeBytesBuffer=tn.Buffer&&tn.Buffer.prototype instanceof Uint8Array&&tn.Buffer.prototype.set.name==="set"?function(e,n,t){n.set(e,t)}:function(e,n,t){if(e.copy)e.copy(n,t,0,e.length);else for(var o=0;o<e.length;)n[t++]=e[o++]}};Tr.prototype.bytes=function(e){tn.isString(e)&&(e=tn._Buffer_from(e,"base64"));var n=e.length>>>0;return this.uint32(n),n&&this._push(Tr.writeBytesBuffer,n,e),this};function j0(r,e,n){r.length<40?tn.utf8.write(r,e,n):e.utf8Write?e.utf8Write(r,n):e.write(r,n)}Tr.prototype.string=function(e){var n=tn.Buffer.byteLength(e);return this.uint32(n),n&&this._push(j0,n,e),this};Tr._configure()});var Ds=et((p$,uc)=>{"use strict";uc.exports=ct;var $r=en(),ks,ac=$r.LongBits,K0=$r.utf8;function gr(r,e){return RangeError("index out of range: "+r.pos+" + "+(e||1)+" > "+r.len)}function ct(r){this.buf=r,this.pos=0,this.len=r.length}var oc=typeof Uint8Array<"u"?function(e){if(e instanceof Uint8Array||Array.isArray(e))return new ct(e);throw Error("illegal buffer")}:function(e){if(Array.isArray(e))return new ct(e);throw Error("illegal buffer")},sc=function(){return $r.Buffer?function(n){return(ct.create=function(o){return $r.Buffer.isBuffer(o)?new ks(o):oc(o)})(n)}:oc};ct.create=sc();ct.prototype._slice=$r.Array.prototype.subarray||$r.Array.prototype.slice;ct.prototype.uint32=function(){var e=4294967295;return function(){if(e=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(e=(e|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return e;if((this.pos+=5)>this.len)throw this.pos=this.len,gr(this,10);return e}}();ct.prototype.int32=function(){return this.uint32()|0};ct.prototype.sint32=function(){var e=this.uint32();return e>>>1^-(e&1)|0};function Ps(){var r=new ac(0,0),e=0;if(this.len-this.pos>4){for(;e<4;++e)if(r.lo=(r.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return r;if(r.lo=(r.lo|(this.buf[this.pos]&127)<<28)>>>0,r.hi=(r.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return r;e=0}else{for(;e<3;++e){if(this.pos>=this.len)throw gr(this);if(r.lo=(r.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return r}return r.lo=(r.lo|(this.buf[this.pos++]&127)<<e*7)>>>0,r}if(this.len-this.pos>4){for(;e<5;++e)if(r.hi=(r.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return r}else for(;e<5;++e){if(this.pos>=this.len)throw gr(this);if(r.hi=(r.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return r}throw Error("invalid varint encoding")}ct.prototype.bool=function(){return this.uint32()!==0};function Hi(r,e){return(r[e-4]|r[e-3]<<8|r[e-2]<<16|r[e-1]<<24)>>>0}ct.prototype.fixed32=function(){if(this.pos+4>this.len)throw gr(this,4);return Hi(this.buf,this.pos+=4)};ct.prototype.sfixed32=function(){if(this.pos+4>this.len)throw gr(this,4);return Hi(this.buf,this.pos+=4)|0};function ic(){if(this.pos+8>this.len)throw gr(this,8);return new ac(Hi(this.buf,this.pos+=4),Hi(this.buf,this.pos+=4))}ct.prototype.float=function(){if(this.pos+4>this.len)throw gr(this,4);var e=$r.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e};ct.prototype.double=function(){if(this.pos+8>this.len)throw gr(this,4);var e=$r.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e};ct.prototype.bytes=function(){var e=this.uint32(),n=this.pos,t=this.pos+e;if(t>this.len)throw gr(this,e);return this.pos+=e,Array.isArray(this.buf)?this.buf.slice(n,t):n===t?new this.buf.constructor(0):this._slice.call(this.buf,n,t)};ct.prototype.string=function(){var e=this.bytes();return K0.read(e,0,e.length)};ct.prototype.skip=function(e){if(typeof e=="number"){if(this.pos+e>this.len)throw gr(this,e);this.pos+=e}else do if(this.pos>=this.len)throw gr(this);while(this.buf[this.pos++]&128);return this};ct.prototype.skipType=function(r){switch(r){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(r=this.uint32()&7)!==4;)this.skipType(r);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+r+" at offset "+this.pos)}return this};ct._configure=function(r){ks=r,ct.create=sc(),ks._configure();var e=$r.Long?"toLong":"toNumber";$r.merge(ct.prototype,{int64:function(){return Ps.call(this)[e](!1)},uint64:function(){return Ps.call(this)[e](!0)},sint64:function(){return Ps.call(this).zzDecode()[e](!1)},fixed64:function(){return ic.call(this)[e](!0)},sfixed64:function(){return ic.call(this)[e](!1)}})}});var fc=et((h$,cc)=>{"use strict";cc.exports=wn;var dc=Ds();(wn.prototype=Object.create(dc.prototype)).constructor=wn;var lc=en();function wn(r){dc.call(this,r)}wn._configure=function(){lc.Buffer&&(wn.prototype._slice=lc.Buffer.prototype.slice)};wn.prototype.string=function(){var e=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+e,this.len))};wn._configure()});var hc=et((m$,pc)=>{"use strict";pc.exports=Bo;var Bs=en();(Bo.prototype=Object.create(Bs.EventEmitter.prototype)).constructor=Bo;function Bo(r,e,n){if(typeof r!="function")throw TypeError("rpcImpl must be a function");Bs.EventEmitter.call(this),this.rpcImpl=r,this.requestDelimited=!!e,this.responseDelimited=!!n}Bo.prototype.rpcCall=function r(e,n,t,o,i){if(!o)throw TypeError("request must be specified");var s=this;if(!i)return Bs.asPromise(r,s,e,n,t,o);if(!s.rpcImpl){setTimeout(function(){i(Error("already ended"))},0);return}try{return s.rpcImpl(e,n[s.requestDelimited?"encodeDelimited":"encode"](o).finish(),function(u,l){if(u)return s.emit("error",u,e),i(u);if(l===null){s.end(!0);return}if(!(l instanceof t))try{l=t[s.responseDelimited?"decodeDelimited":"decode"](l)}catch(d){return s.emit("error",d,e),i(d)}return s.emit("data",l,e),i(null,l)})}catch(a){s.emit("error",a,e),setTimeout(function(){i(a)},0);return}};Bo.prototype.end=function(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this}});var gc=et(mc=>{"use strict";var Y0=mc;Y0.Service=hc()});var yc=et((b$,bc)=>{"use strict";bc.exports={}});var xc=et(wc=>{"use strict";var Kt=wc;Kt.build="minimal";Kt.Writer=Es();Kt.BufferWriter=nc();Kt.Reader=Ds();Kt.BufferReader=fc();Kt.util=en();Kt.rpc=gc();Kt.roots=yc();Kt.configure=vc;function vc(){Kt.util._configure(),Kt.Writer._configure(Kt.BufferWriter),Kt.Reader._configure(Kt.BufferReader)}vc()});var Tc=et((v$,_c)=>{"use strict";_c.exports=xc()});var qn=et((w$,$c)=>{"use strict";var rt=Tc(),oe=rt.Reader,ft=rt.Writer,E=rt.util,I=rt.roots.default||(rt.roots.default={});I.onnx=function(){var r={};return r.Version=function(){var e={},n=Object.create(e);return n[e[0]="_START_VERSION"]=0,n[e[1]="IR_VERSION_2017_10_10"]=1,n[e[2]="IR_VERSION_2017_10_30"]=2,n[e[3]="IR_VERSION_2017_11_3"]=3,n[e[4]="IR_VERSION_2019_1_22"]=4,n[e[5]="IR_VERSION_2019_3_18"]=5,n[e[6]="IR_VERSION_2019_9_19"]=6,n[e[7]="IR_VERSION_2020_5_8"]=7,n[e[8]="IR_VERSION_2021_7_30"]=8,n[e[9]="IR_VERSION"]=9,n}(),r.AttributeProto=function(){function e(n){if(this.floats=[],this.ints=[],this.strings=[],this.tensors=[],this.graphs=[],this.sparseTensors=[],this.typeProtos=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.refAttrName="",e.prototype.docString="",e.prototype.type=0,e.prototype.f=0,e.prototype.i=E.Long?E.Long.fromBits(0,0,!1):0,e.prototype.s=E.newBuffer([]),e.prototype.t=null,e.prototype.g=null,e.prototype.sparseTensor=null,e.prototype.tp=null,e.prototype.floats=E.emptyArray,e.prototype.ints=E.emptyArray,e.prototype.strings=E.emptyArray,e.prototype.tensors=E.emptyArray,e.prototype.graphs=E.emptyArray,e.prototype.sparseTensors=E.emptyArray,e.prototype.typeProtos=E.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ft.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.f!=null&&Object.hasOwnProperty.call(t,"f")&&o.uint32(21).float(t.f),t.i!=null&&Object.hasOwnProperty.call(t,"i")&&o.uint32(24).int64(t.i),t.s!=null&&Object.hasOwnProperty.call(t,"s")&&o.uint32(34).bytes(t.s),t.t!=null&&Object.hasOwnProperty.call(t,"t")&&I.onnx.TensorProto.encode(t.t,o.uint32(42).fork()).ldelim(),t.g!=null&&Object.hasOwnProperty.call(t,"g")&&I.onnx.GraphProto.encode(t.g,o.uint32(50).fork()).ldelim(),t.floats!=null&&t.floats.length){o.uint32(58).fork();for(var i=0;i<t.floats.length;++i)o.float(t.floats[i]);o.ldelim()}if(t.ints!=null&&t.ints.length){o.uint32(66).fork();for(var i=0;i<t.ints.length;++i)o.int64(t.ints[i]);o.ldelim()}if(t.strings!=null&&t.strings.length)for(var i=0;i<t.strings.length;++i)o.uint32(74).bytes(t.strings[i]);if(t.tensors!=null&&t.tensors.length)for(var i=0;i<t.tensors.length;++i)I.onnx.TensorProto.encode(t.tensors[i],o.uint32(82).fork()).ldelim();if(t.graphs!=null&&t.graphs.length)for(var i=0;i<t.graphs.length;++i)I.onnx.GraphProto.encode(t.graphs[i],o.uint32(90).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(106).string(t.docString),t.tp!=null&&Object.hasOwnProperty.call(t,"tp")&&I.onnx.TypeProto.encode(t.tp,o.uint32(114).fork()).ldelim(),t.typeProtos!=null&&t.typeProtos.length)for(var i=0;i<t.typeProtos.length;++i)I.onnx.TypeProto.encode(t.typeProtos[i],o.uint32(122).fork()).ldelim();if(t.type!=null&&Object.hasOwnProperty.call(t,"type")&&o.uint32(160).int32(t.type),t.refAttrName!=null&&Object.hasOwnProperty.call(t,"refAttrName")&&o.uint32(170).string(t.refAttrName),t.sparseTensor!=null&&Object.hasOwnProperty.call(t,"sparseTensor")&&I.onnx.SparseTensorProto.encode(t.sparseTensor,o.uint32(178).fork()).ldelim(),t.sparseTensors!=null&&t.sparseTensors.length)for(var i=0;i<t.sparseTensors.length;++i)I.onnx.SparseTensorProto.encode(t.sparseTensors[i],o.uint32(186).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof oe||(t=oe.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.AttributeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.name=t.string();break}case 21:{s.refAttrName=t.string();break}case 13:{s.docString=t.string();break}case 20:{s.type=t.int32();break}case 2:{s.f=t.float();break}case 3:{s.i=t.int64();break}case 4:{s.s=t.bytes();break}case 5:{s.t=I.onnx.TensorProto.decode(t,t.uint32());break}case 6:{s.g=I.onnx.GraphProto.decode(t,t.uint32());break}case 22:{s.sparseTensor=I.onnx.SparseTensorProto.decode(t,t.uint32());break}case 14:{s.tp=I.onnx.TypeProto.decode(t,t.uint32());break}case 7:{if(s.floats&&s.floats.length||(s.floats=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.floats.push(t.float());else s.floats.push(t.float());break}case 8:{if(s.ints&&s.ints.length||(s.ints=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.ints.push(t.int64());else s.ints.push(t.int64());break}case 9:{s.strings&&s.strings.length||(s.strings=[]),s.strings.push(t.bytes());break}case 10:{s.tensors&&s.tensors.length||(s.tensors=[]),s.tensors.push(I.onnx.TensorProto.decode(t,t.uint32()));break}case 11:{s.graphs&&s.graphs.length||(s.graphs=[]),s.graphs.push(I.onnx.GraphProto.decode(t,t.uint32()));break}case 23:{s.sparseTensors&&s.sparseTensors.length||(s.sparseTensors=[]),s.sparseTensors.push(I.onnx.SparseTensorProto.decode(t,t.uint32()));break}case 15:{s.typeProtos&&s.typeProtos.length||(s.typeProtos=[]),s.typeProtos.push(I.onnx.TypeProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof oe||(t=new oe(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!E.isString(t.name))return"name: string expected";if(t.refAttrName!=null&&t.hasOwnProperty("refAttrName")&&!E.isString(t.refAttrName))return"refAttrName: string expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!E.isString(t.docString))return"docString: string expected";if(t.type!=null&&t.hasOwnProperty("type"))switch(t.type){default:return"type: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 11:case 13:case 6:case 7:case 8:case 9:case 10:case 12:case 14:break}if(t.f!=null&&t.hasOwnProperty("f")&&typeof t.f!="number")return"f: number expected";if(t.i!=null&&t.hasOwnProperty("i")&&!E.isInteger(t.i)&&!(t.i&&E.isInteger(t.i.low)&&E.isInteger(t.i.high)))return"i: integer|Long expected";if(t.s!=null&&t.hasOwnProperty("s")&&!(t.s&&typeof t.s.length=="number"||E.isString(t.s)))return"s: buffer expected";if(t.t!=null&&t.hasOwnProperty("t")){var o=I.onnx.TensorProto.verify(t.t);if(o)return"t."+o}if(t.g!=null&&t.hasOwnProperty("g")){var o=I.onnx.GraphProto.verify(t.g);if(o)return"g."+o}if(t.sparseTensor!=null&&t.hasOwnProperty("sparseTensor")){var o=I.onnx.SparseTensorProto.verify(t.sparseTensor);if(o)return"sparseTensor."+o}if(t.tp!=null&&t.hasOwnProperty("tp")){var o=I.onnx.TypeProto.verify(t.tp);if(o)return"tp."+o}if(t.floats!=null&&t.hasOwnProperty("floats")){if(!Array.isArray(t.floats))return"floats: array expected";for(var i=0;i<t.floats.length;++i)if(typeof t.floats[i]!="number")return"floats: number[] expected"}if(t.ints!=null&&t.hasOwnProperty("ints")){if(!Array.isArray(t.ints))return"ints: array expected";for(var i=0;i<t.ints.length;++i)if(!E.isInteger(t.ints[i])&&!(t.ints[i]&&E.isInteger(t.ints[i].low)&&E.isInteger(t.ints[i].high)))return"ints: integer|Long[] expected"}if(t.strings!=null&&t.hasOwnProperty("strings")){if(!Array.isArray(t.strings))return"strings: array expected";for(var i=0;i<t.strings.length;++i)if(!(t.strings[i]&&typeof t.strings[i].length=="number"||E.isString(t.strings[i])))return"strings: buffer[] expected"}if(t.tensors!=null&&t.hasOwnProperty("tensors")){if(!Array.isArray(t.tensors))return"tensors: array expected";for(var i=0;i<t.tensors.length;++i){var o=I.onnx.TensorProto.verify(t.tensors[i]);if(o)return"tensors."+o}}if(t.graphs!=null&&t.hasOwnProperty("graphs")){if(!Array.isArray(t.graphs))return"graphs: array expected";for(var i=0;i<t.graphs.length;++i){var o=I.onnx.GraphProto.verify(t.graphs[i]);if(o)return"graphs."+o}}if(t.sparseTensors!=null&&t.hasOwnProperty("sparseTensors")){if(!Array.isArray(t.sparseTensors))return"sparseTensors: array expected";for(var i=0;i<t.sparseTensors.length;++i){var o=I.onnx.SparseTensorProto.verify(t.sparseTensors[i]);if(o)return"sparseTensors."+o}}if(t.typeProtos!=null&&t.hasOwnProperty("typeProtos")){if(!Array.isArray(t.typeProtos))return"typeProtos: array expected";for(var i=0;i<t.typeProtos.length;++i){var o=I.onnx.TypeProto.verify(t.typeProtos[i]);if(o)return"typeProtos."+o}}return null},e.fromObject=function(t){if(t instanceof I.onnx.AttributeProto)return t;var o=new I.onnx.AttributeProto;switch(t.name!=null&&(o.name=String(t.name)),t.refAttrName!=null&&(o.refAttrName=String(t.refAttrName)),t.docString!=null&&(o.docString=String(t.docString)),t.type){default:if(typeof t.type=="number"){o.type=t.type;break}break;case"UNDEFINED":case 0:o.type=0;break;case"FLOAT":case 1:o.type=1;break;case"INT":case 2:o.type=2;break;case"STRING":case 3:o.type=3;break;case"TENSOR":case 4:o.type=4;break;case"GRAPH":case 5:o.type=5;break;case"SPARSE_TENSOR":case 11:o.type=11;break;case"TYPE_PROTO":case 13:o.type=13;break;case"FLOATS":case 6:o.type=6;break;case"INTS":case 7:o.type=7;break;case"STRINGS":case 8:o.type=8;break;case"TENSORS":case 9:o.type=9;break;case"GRAPHS":case 10:o.type=10;break;case"SPARSE_TENSORS":case 12:o.type=12;break;case"TYPE_PROTOS":case 14:o.type=14;break}if(t.f!=null&&(o.f=Number(t.f)),t.i!=null&&(E.Long?(o.i=E.Long.fromValue(t.i)).unsigned=!1:typeof t.i=="string"?o.i=parseInt(t.i,10):typeof t.i=="number"?o.i=t.i:typeof t.i=="object"&&(o.i=new E.LongBits(t.i.low>>>0,t.i.high>>>0).toNumber())),t.s!=null&&(typeof t.s=="string"?E.base64.decode(t.s,o.s=E.newBuffer(E.base64.length(t.s)),0):t.s.length>=0&&(o.s=t.s)),t.t!=null){if(typeof t.t!="object")throw TypeError(".onnx.AttributeProto.t: object expected");o.t=I.onnx.TensorProto.fromObject(t.t)}if(t.g!=null){if(typeof t.g!="object")throw TypeError(".onnx.AttributeProto.g: object expected");o.g=I.onnx.GraphProto.fromObject(t.g)}if(t.sparseTensor!=null){if(typeof t.sparseTensor!="object")throw TypeError(".onnx.AttributeProto.sparseTensor: object expected");o.sparseTensor=I.onnx.SparseTensorProto.fromObject(t.sparseTensor)}if(t.tp!=null){if(typeof t.tp!="object")throw TypeError(".onnx.AttributeProto.tp: object expected");o.tp=I.onnx.TypeProto.fromObject(t.tp)}if(t.floats){if(!Array.isArray(t.floats))throw TypeError(".onnx.AttributeProto.floats: array expected");o.floats=[];for(var i=0;i<t.floats.length;++i)o.floats[i]=Number(t.floats[i])}if(t.ints){if(!Array.isArray(t.ints))throw TypeError(".onnx.AttributeProto.ints: array expected");o.ints=[];for(var i=0;i<t.ints.length;++i)E.Long?(o.ints[i]=E.Long.fromValue(t.ints[i])).unsigned=!1:typeof t.ints[i]=="string"?o.ints[i]=parseInt(t.ints[i],10):typeof t.ints[i]=="number"?o.ints[i]=t.ints[i]:typeof t.ints[i]=="object"&&(o.ints[i]=new E.LongBits(t.ints[i].low>>>0,t.ints[i].high>>>0).toNumber())}if(t.strings){if(!Array.isArray(t.strings))throw TypeError(".onnx.AttributeProto.strings: array expected");o.strings=[];for(var i=0;i<t.strings.length;++i)typeof t.strings[i]=="string"?E.base64.decode(t.strings[i],o.strings[i]=E.newBuffer(E.base64.length(t.strings[i])),0):t.strings[i].length>=0&&(o.strings[i]=t.strings[i])}if(t.tensors){if(!Array.isArray(t.tensors))throw TypeError(".onnx.AttributeProto.tensors: array expected");o.tensors=[];for(var i=0;i<t.tensors.length;++i){if(typeof t.tensors[i]!="object")throw TypeError(".onnx.AttributeProto.tensors: object expected");o.tensors[i]=I.onnx.TensorProto.fromObject(t.tensors[i])}}if(t.graphs){if(!Array.isArray(t.graphs))throw TypeError(".onnx.AttributeProto.graphs: array expected");o.graphs=[];for(var i=0;i<t.graphs.length;++i){if(typeof t.graphs[i]!="object")throw TypeError(".onnx.AttributeProto.graphs: object expected");o.graphs[i]=I.onnx.GraphProto.fromObject(t.graphs[i])}}if(t.sparseTensors){if(!Array.isArray(t.sparseTensors))throw TypeError(".onnx.AttributeProto.sparseTensors: array expected");o.sparseTensors=[];for(var i=0;i<t.sparseTensors.length;++i){if(typeof t.sparseTensors[i]!="object")throw TypeError(".onnx.AttributeProto.sparseTensors: object expected");o.sparseTensors[i]=I.onnx.SparseTensorProto.fromObject(t.sparseTensors[i])}}if(t.typeProtos){if(!Array.isArray(t.typeProtos))throw TypeError(".onnx.AttributeProto.typeProtos: array expected");o.typeProtos=[];for(var i=0;i<t.typeProtos.length;++i){if(typeof t.typeProtos[i]!="object")throw TypeError(".onnx.AttributeProto.typeProtos: object expected");o.typeProtos[i]=I.onnx.TypeProto.fromObject(t.typeProtos[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.floats=[],i.ints=[],i.strings=[],i.tensors=[],i.graphs=[],i.typeProtos=[],i.sparseTensors=[]),o.defaults){if(i.name="",i.f=0,E.Long){var s=new E.Long(0,0,!1);i.i=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.i=o.longs===String?"0":0;o.bytes===String?i.s="":(i.s=[],o.bytes!==Array&&(i.s=E.newBuffer(i.s))),i.t=null,i.g=null,i.docString="",i.tp=null,i.type=o.enums===String?"UNDEFINED":0,i.refAttrName="",i.sparseTensor=null}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.f!=null&&t.hasOwnProperty("f")&&(i.f=o.json&&!isFinite(t.f)?String(t.f):t.f),t.i!=null&&t.hasOwnProperty("i")&&(typeof t.i=="number"?i.i=o.longs===String?String(t.i):t.i:i.i=o.longs===String?E.Long.prototype.toString.call(t.i):o.longs===Number?new E.LongBits(t.i.low>>>0,t.i.high>>>0).toNumber():t.i),t.s!=null&&t.hasOwnProperty("s")&&(i.s=o.bytes===String?E.base64.encode(t.s,0,t.s.length):o.bytes===Array?Array.prototype.slice.call(t.s):t.s),t.t!=null&&t.hasOwnProperty("t")&&(i.t=I.onnx.TensorProto.toObject(t.t,o)),t.g!=null&&t.hasOwnProperty("g")&&(i.g=I.onnx.GraphProto.toObject(t.g,o)),t.floats&&t.floats.length){i.floats=[];for(var a=0;a<t.floats.length;++a)i.floats[a]=o.json&&!isFinite(t.floats[a])?String(t.floats[a]):t.floats[a]}if(t.ints&&t.ints.length){i.ints=[];for(var a=0;a<t.ints.length;++a)typeof t.ints[a]=="number"?i.ints[a]=o.longs===String?String(t.ints[a]):t.ints[a]:i.ints[a]=o.longs===String?E.Long.prototype.toString.call(t.ints[a]):o.longs===Number?new E.LongBits(t.ints[a].low>>>0,t.ints[a].high>>>0).toNumber():t.ints[a]}if(t.strings&&t.strings.length){i.strings=[];for(var a=0;a<t.strings.length;++a)i.strings[a]=o.bytes===String?E.base64.encode(t.strings[a],0,t.strings[a].length):o.bytes===Array?Array.prototype.slice.call(t.strings[a]):t.strings[a]}if(t.tensors&&t.tensors.length){i.tensors=[];for(var a=0;a<t.tensors.length;++a)i.tensors[a]=I.onnx.TensorProto.toObject(t.tensors[a],o)}if(t.graphs&&t.graphs.length){i.graphs=[];for(var a=0;a<t.graphs.length;++a)i.graphs[a]=I.onnx.GraphProto.toObject(t.graphs[a],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.tp!=null&&t.hasOwnProperty("tp")&&(i.tp=I.onnx.TypeProto.toObject(t.tp,o)),t.typeProtos&&t.typeProtos.length){i.typeProtos=[];for(var a=0;a<t.typeProtos.length;++a)i.typeProtos[a]=I.onnx.TypeProto.toObject(t.typeProtos[a],o)}if(t.type!=null&&t.hasOwnProperty("type")&&(i.type=o.enums===String?I.onnx.AttributeProto.AttributeType[t.type]===void 0?t.type:I.onnx.AttributeProto.AttributeType[t.type]:t.type),t.refAttrName!=null&&t.hasOwnProperty("refAttrName")&&(i.refAttrName=t.refAttrName),t.sparseTensor!=null&&t.hasOwnProperty("sparseTensor")&&(i.sparseTensor=I.onnx.SparseTensorProto.toObject(t.sparseTensor,o)),t.sparseTensors&&t.sparseTensors.length){i.sparseTensors=[];for(var a=0;a<t.sparseTensors.length;++a)i.sparseTensors[a]=I.onnx.SparseTensorProto.toObject(t.sparseTensors[a],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,rt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.AttributeProto"},e.AttributeType=function(){var n={},t=Object.create(n);return t[n[0]="UNDEFINED"]=0,t[n[1]="FLOAT"]=1,t[n[2]="INT"]=2,t[n[3]="STRING"]=3,t[n[4]="TENSOR"]=4,t[n[5]="GRAPH"]=5,t[n[11]="SPARSE_TENSOR"]=11,t[n[13]="TYPE_PROTO"]=13,t[n[6]="FLOATS"]=6,t[n[7]="INTS"]=7,t[n[8]="STRINGS"]=8,t[n[9]="TENSORS"]=9,t[n[10]="GRAPHS"]=10,t[n[12]="SPARSE_TENSORS"]=12,t[n[14]="TYPE_PROTOS"]=14,t}(),e}(),r.ValueInfoProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.type=null,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=ft.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.type!=null&&Object.hasOwnProperty.call(t,"type")&&I.onnx.TypeProto.encode(t.type,o.uint32(18).fork()).ldelim(),t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(26).string(t.docString),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof oe||(t=oe.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.ValueInfoProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.name=t.string();break}case 2:{s.type=I.onnx.TypeProto.decode(t,t.uint32());break}case 3:{s.docString=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof oe||(t=new oe(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!E.isString(t.name))return"name: string expected";if(t.type!=null&&t.hasOwnProperty("type")){var o=I.onnx.TypeProto.verify(t.type);if(o)return"type."+o}return t.docString!=null&&t.hasOwnProperty("docString")&&!E.isString(t.docString)?"docString: string expected":null},e.fromObject=function(t){if(t instanceof I.onnx.ValueInfoProto)return t;var o=new I.onnx.ValueInfoProto;if(t.name!=null&&(o.name=String(t.name)),t.type!=null){if(typeof t.type!="object")throw TypeError(".onnx.ValueInfoProto.type: object expected");o.type=I.onnx.TypeProto.fromObject(t.type)}return t.docString!=null&&(o.docString=String(t.docString)),o},e.toObject=function(t,o){o||(o={});var i={};return o.defaults&&(i.name="",i.type=null,i.docString=""),t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.type!=null&&t.hasOwnProperty("type")&&(i.type=I.onnx.TypeProto.toObject(t.type,o)),t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,rt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.ValueInfoProto"},e}(),r.NodeProto=function(){function e(n){if(this.input=[],this.output=[],this.attribute=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.input=E.emptyArray,e.prototype.output=E.emptyArray,e.prototype.name="",e.prototype.opType="",e.prototype.domain="",e.prototype.attribute=E.emptyArray,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ft.create()),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)o.uint32(10).string(t.input[i]);if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)o.uint32(18).string(t.output[i]);if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(26).string(t.name),t.opType!=null&&Object.hasOwnProperty.call(t,"opType")&&o.uint32(34).string(t.opType),t.attribute!=null&&t.attribute.length)for(var i=0;i<t.attribute.length;++i)I.onnx.AttributeProto.encode(t.attribute[i],o.uint32(42).fork()).ldelim();return t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(50).string(t.docString),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(58).string(t.domain),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof oe||(t=oe.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.NodeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.input&&s.input.length||(s.input=[]),s.input.push(t.string());break}case 2:{s.output&&s.output.length||(s.output=[]),s.output.push(t.string());break}case 3:{s.name=t.string();break}case 4:{s.opType=t.string();break}case 7:{s.domain=t.string();break}case 5:{s.attribute&&s.attribute.length||(s.attribute=[]),s.attribute.push(I.onnx.AttributeProto.decode(t,t.uint32()));break}case 6:{s.docString=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof oe||(t=new oe(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o)if(!E.isString(t.input[o]))return"input: string[] expected"}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o)if(!E.isString(t.output[o]))return"output: string[] expected"}if(t.name!=null&&t.hasOwnProperty("name")&&!E.isString(t.name))return"name: string expected";if(t.opType!=null&&t.hasOwnProperty("opType")&&!E.isString(t.opType))return"opType: string expected";if(t.domain!=null&&t.hasOwnProperty("domain")&&!E.isString(t.domain))return"domain: string expected";if(t.attribute!=null&&t.hasOwnProperty("attribute")){if(!Array.isArray(t.attribute))return"attribute: array expected";for(var o=0;o<t.attribute.length;++o){var i=I.onnx.AttributeProto.verify(t.attribute[o]);if(i)return"attribute."+i}}return t.docString!=null&&t.hasOwnProperty("docString")&&!E.isString(t.docString)?"docString: string expected":null},e.fromObject=function(t){if(t instanceof I.onnx.NodeProto)return t;var o=new I.onnx.NodeProto;if(t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.NodeProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i)o.input[i]=String(t.input[i])}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.NodeProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i)o.output[i]=String(t.output[i])}if(t.name!=null&&(o.name=String(t.name)),t.opType!=null&&(o.opType=String(t.opType)),t.domain!=null&&(o.domain=String(t.domain)),t.attribute){if(!Array.isArray(t.attribute))throw TypeError(".onnx.NodeProto.attribute: array expected");o.attribute=[];for(var i=0;i<t.attribute.length;++i){if(typeof t.attribute[i]!="object")throw TypeError(".onnx.NodeProto.attribute: object expected");o.attribute[i]=I.onnx.AttributeProto.fromObject(t.attribute[i])}}return t.docString!=null&&(o.docString=String(t.docString)),o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.input=[],i.output=[],i.attribute=[]),o.defaults&&(i.name="",i.opType="",i.docString="",i.domain=""),t.input&&t.input.length){i.input=[];for(var s=0;s<t.input.length;++s)i.input[s]=t.input[s]}if(t.output&&t.output.length){i.output=[];for(var s=0;s<t.output.length;++s)i.output[s]=t.output[s]}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.opType!=null&&t.hasOwnProperty("opType")&&(i.opType=t.opType),t.attribute&&t.attribute.length){i.attribute=[];for(var s=0;s<t.attribute.length;++s)i.attribute[s]=I.onnx.AttributeProto.toObject(t.attribute[s],o)}return t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,rt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.NodeProto"},e}(),r.TrainingInfoProto=function(){function e(n){if(this.initializationBinding=[],this.updateBinding=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.initialization=null,e.prototype.algorithm=null,e.prototype.initializationBinding=E.emptyArray,e.prototype.updateBinding=E.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ft.create()),t.initialization!=null&&Object.hasOwnProperty.call(t,"initialization")&&I.onnx.GraphProto.encode(t.initialization,o.uint32(10).fork()).ldelim(),t.algorithm!=null&&Object.hasOwnProperty.call(t,"algorithm")&&I.onnx.GraphProto.encode(t.algorithm,o.uint32(18).fork()).ldelim(),t.initializationBinding!=null&&t.initializationBinding.length)for(var i=0;i<t.initializationBinding.length;++i)I.onnx.StringStringEntryProto.encode(t.initializationBinding[i],o.uint32(26).fork()).ldelim();if(t.updateBinding!=null&&t.updateBinding.length)for(var i=0;i<t.updateBinding.length;++i)I.onnx.StringStringEntryProto.encode(t.updateBinding[i],o.uint32(34).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof oe||(t=oe.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.TrainingInfoProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.initialization=I.onnx.GraphProto.decode(t,t.uint32());break}case 2:{s.algorithm=I.onnx.GraphProto.decode(t,t.uint32());break}case 3:{s.initializationBinding&&s.initializationBinding.length||(s.initializationBinding=[]),s.initializationBinding.push(I.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 4:{s.updateBinding&&s.updateBinding.length||(s.updateBinding=[]),s.updateBinding.push(I.onnx.StringStringEntryProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof oe||(t=new oe(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.initialization!=null&&t.hasOwnProperty("initialization")){var o=I.onnx.GraphProto.verify(t.initialization);if(o)return"initialization."+o}if(t.algorithm!=null&&t.hasOwnProperty("algorithm")){var o=I.onnx.GraphProto.verify(t.algorithm);if(o)return"algorithm."+o}if(t.initializationBinding!=null&&t.hasOwnProperty("initializationBinding")){if(!Array.isArray(t.initializationBinding))return"initializationBinding: array expected";for(var i=0;i<t.initializationBinding.length;++i){var o=I.onnx.StringStringEntryProto.verify(t.initializationBinding[i]);if(o)return"initializationBinding."+o}}if(t.updateBinding!=null&&t.hasOwnProperty("updateBinding")){if(!Array.isArray(t.updateBinding))return"updateBinding: array expected";for(var i=0;i<t.updateBinding.length;++i){var o=I.onnx.StringStringEntryProto.verify(t.updateBinding[i]);if(o)return"updateBinding."+o}}return null},e.fromObject=function(t){if(t instanceof I.onnx.TrainingInfoProto)return t;var o=new I.onnx.TrainingInfoProto;if(t.initialization!=null){if(typeof t.initialization!="object")throw TypeError(".onnx.TrainingInfoProto.initialization: object expected");o.initialization=I.onnx.GraphProto.fromObject(t.initialization)}if(t.algorithm!=null){if(typeof t.algorithm!="object")throw TypeError(".onnx.TrainingInfoProto.algorithm: object expected");o.algorithm=I.onnx.GraphProto.fromObject(t.algorithm)}if(t.initializationBinding){if(!Array.isArray(t.initializationBinding))throw TypeError(".onnx.TrainingInfoProto.initializationBinding: array expected");o.initializationBinding=[];for(var i=0;i<t.initializationBinding.length;++i){if(typeof t.initializationBinding[i]!="object")throw TypeError(".onnx.TrainingInfoProto.initializationBinding: object expected");o.initializationBinding[i]=I.onnx.StringStringEntryProto.fromObject(t.initializationBinding[i])}}if(t.updateBinding){if(!Array.isArray(t.updateBinding))throw TypeError(".onnx.TrainingInfoProto.updateBinding: array expected");o.updateBinding=[];for(var i=0;i<t.updateBinding.length;++i){if(typeof t.updateBinding[i]!="object")throw TypeError(".onnx.TrainingInfoProto.updateBinding: object expected");o.updateBinding[i]=I.onnx.StringStringEntryProto.fromObject(t.updateBinding[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.initializationBinding=[],i.updateBinding=[]),o.defaults&&(i.initialization=null,i.algorithm=null),t.initialization!=null&&t.hasOwnProperty("initialization")&&(i.initialization=I.onnx.GraphProto.toObject(t.initialization,o)),t.algorithm!=null&&t.hasOwnProperty("algorithm")&&(i.algorithm=I.onnx.GraphProto.toObject(t.algorithm,o)),t.initializationBinding&&t.initializationBinding.length){i.initializationBinding=[];for(var s=0;s<t.initializationBinding.length;++s)i.initializationBinding[s]=I.onnx.StringStringEntryProto.toObject(t.initializationBinding[s],o)}if(t.updateBinding&&t.updateBinding.length){i.updateBinding=[];for(var s=0;s<t.updateBinding.length;++s)i.updateBinding[s]=I.onnx.StringStringEntryProto.toObject(t.updateBinding[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,rt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TrainingInfoProto"},e}(),r.ModelProto=function(){function e(n){if(this.opsetImport=[],this.metadataProps=[],this.trainingInfo=[],this.functions=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.irVersion=E.Long?E.Long.fromBits(0,0,!1):0,e.prototype.opsetImport=E.emptyArray,e.prototype.producerName="",e.prototype.producerVersion="",e.prototype.domain="",e.prototype.modelVersion=E.Long?E.Long.fromBits(0,0,!1):0,e.prototype.docString="",e.prototype.graph=null,e.prototype.metadataProps=E.emptyArray,e.prototype.trainingInfo=E.emptyArray,e.prototype.functions=E.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ft.create()),t.irVersion!=null&&Object.hasOwnProperty.call(t,"irVersion")&&o.uint32(8).int64(t.irVersion),t.producerName!=null&&Object.hasOwnProperty.call(t,"producerName")&&o.uint32(18).string(t.producerName),t.producerVersion!=null&&Object.hasOwnProperty.call(t,"producerVersion")&&o.uint32(26).string(t.producerVersion),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(34).string(t.domain),t.modelVersion!=null&&Object.hasOwnProperty.call(t,"modelVersion")&&o.uint32(40).int64(t.modelVersion),t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(50).string(t.docString),t.graph!=null&&Object.hasOwnProperty.call(t,"graph")&&I.onnx.GraphProto.encode(t.graph,o.uint32(58).fork()).ldelim(),t.opsetImport!=null&&t.opsetImport.length)for(var i=0;i<t.opsetImport.length;++i)I.onnx.OperatorSetIdProto.encode(t.opsetImport[i],o.uint32(66).fork()).ldelim();if(t.metadataProps!=null&&t.metadataProps.length)for(var i=0;i<t.metadataProps.length;++i)I.onnx.StringStringEntryProto.encode(t.metadataProps[i],o.uint32(114).fork()).ldelim();if(t.trainingInfo!=null&&t.trainingInfo.length)for(var i=0;i<t.trainingInfo.length;++i)I.onnx.TrainingInfoProto.encode(t.trainingInfo[i],o.uint32(162).fork()).ldelim();if(t.functions!=null&&t.functions.length)for(var i=0;i<t.functions.length;++i)I.onnx.FunctionProto.encode(t.functions[i],o.uint32(202).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof oe||(t=oe.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.ModelProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.irVersion=t.int64();break}case 8:{s.opsetImport&&s.opsetImport.length||(s.opsetImport=[]),s.opsetImport.push(I.onnx.OperatorSetIdProto.decode(t,t.uint32()));break}case 2:{s.producerName=t.string();break}case 3:{s.producerVersion=t.string();break}case 4:{s.domain=t.string();break}case 5:{s.modelVersion=t.int64();break}case 6:{s.docString=t.string();break}case 7:{s.graph=I.onnx.GraphProto.decode(t,t.uint32());break}case 14:{s.metadataProps&&s.metadataProps.length||(s.metadataProps=[]),s.metadataProps.push(I.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 20:{s.trainingInfo&&s.trainingInfo.length||(s.trainingInfo=[]),s.trainingInfo.push(I.onnx.TrainingInfoProto.decode(t,t.uint32()));break}case 25:{s.functions&&s.functions.length||(s.functions=[]),s.functions.push(I.onnx.FunctionProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof oe||(t=new oe(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.irVersion!=null&&t.hasOwnProperty("irVersion")&&!E.isInteger(t.irVersion)&&!(t.irVersion&&E.isInteger(t.irVersion.low)&&E.isInteger(t.irVersion.high)))return"irVersion: integer|Long expected";if(t.opsetImport!=null&&t.hasOwnProperty("opsetImport")){if(!Array.isArray(t.opsetImport))return"opsetImport: array expected";for(var o=0;o<t.opsetImport.length;++o){var i=I.onnx.OperatorSetIdProto.verify(t.opsetImport[o]);if(i)return"opsetImport."+i}}if(t.producerName!=null&&t.hasOwnProperty("producerName")&&!E.isString(t.producerName))return"producerName: string expected";if(t.producerVersion!=null&&t.hasOwnProperty("producerVersion")&&!E.isString(t.producerVersion))return"producerVersion: string expected";if(t.domain!=null&&t.hasOwnProperty("domain")&&!E.isString(t.domain))return"domain: string expected";if(t.modelVersion!=null&&t.hasOwnProperty("modelVersion")&&!E.isInteger(t.modelVersion)&&!(t.modelVersion&&E.isInteger(t.modelVersion.low)&&E.isInteger(t.modelVersion.high)))return"modelVersion: integer|Long expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!E.isString(t.docString))return"docString: string expected";if(t.graph!=null&&t.hasOwnProperty("graph")){var i=I.onnx.GraphProto.verify(t.graph);if(i)return"graph."+i}if(t.metadataProps!=null&&t.hasOwnProperty("metadataProps")){if(!Array.isArray(t.metadataProps))return"metadataProps: array expected";for(var o=0;o<t.metadataProps.length;++o){var i=I.onnx.StringStringEntryProto.verify(t.metadataProps[o]);if(i)return"metadataProps."+i}}if(t.trainingInfo!=null&&t.hasOwnProperty("trainingInfo")){if(!Array.isArray(t.trainingInfo))return"trainingInfo: array expected";for(var o=0;o<t.trainingInfo.length;++o){var i=I.onnx.TrainingInfoProto.verify(t.trainingInfo[o]);if(i)return"trainingInfo."+i}}if(t.functions!=null&&t.hasOwnProperty("functions")){if(!Array.isArray(t.functions))return"functions: array expected";for(var o=0;o<t.functions.length;++o){var i=I.onnx.FunctionProto.verify(t.functions[o]);if(i)return"functions."+i}}return null},e.fromObject=function(t){if(t instanceof I.onnx.ModelProto)return t;var o=new I.onnx.ModelProto;if(t.irVersion!=null&&(E.Long?(o.irVersion=E.Long.fromValue(t.irVersion)).unsigned=!1:typeof t.irVersion=="string"?o.irVersion=parseInt(t.irVersion,10):typeof t.irVersion=="number"?o.irVersion=t.irVersion:typeof t.irVersion=="object"&&(o.irVersion=new E.LongBits(t.irVersion.low>>>0,t.irVersion.high>>>0).toNumber())),t.opsetImport){if(!Array.isArray(t.opsetImport))throw TypeError(".onnx.ModelProto.opsetImport: array expected");o.opsetImport=[];for(var i=0;i<t.opsetImport.length;++i){if(typeof t.opsetImport[i]!="object")throw TypeError(".onnx.ModelProto.opsetImport: object expected");o.opsetImport[i]=I.onnx.OperatorSetIdProto.fromObject(t.opsetImport[i])}}if(t.producerName!=null&&(o.producerName=String(t.producerName)),t.producerVersion!=null&&(o.producerVersion=String(t.producerVersion)),t.domain!=null&&(o.domain=String(t.domain)),t.modelVersion!=null&&(E.Long?(o.modelVersion=E.Long.fromValue(t.modelVersion)).unsigned=!1:typeof t.modelVersion=="string"?o.modelVersion=parseInt(t.modelVersion,10):typeof t.modelVersion=="number"?o.modelVersion=t.modelVersion:typeof t.modelVersion=="object"&&(o.modelVersion=new E.LongBits(t.modelVersion.low>>>0,t.modelVersion.high>>>0).toNumber())),t.docString!=null&&(o.docString=String(t.docString)),t.graph!=null){if(typeof t.graph!="object")throw TypeError(".onnx.ModelProto.graph: object expected");o.graph=I.onnx.GraphProto.fromObject(t.graph)}if(t.metadataProps){if(!Array.isArray(t.metadataProps))throw TypeError(".onnx.ModelProto.metadataProps: array expected");o.metadataProps=[];for(var i=0;i<t.metadataProps.length;++i){if(typeof t.metadataProps[i]!="object")throw TypeError(".onnx.ModelProto.metadataProps: object expected");o.metadataProps[i]=I.onnx.StringStringEntryProto.fromObject(t.metadataProps[i])}}if(t.trainingInfo){if(!Array.isArray(t.trainingInfo))throw TypeError(".onnx.ModelProto.trainingInfo: array expected");o.trainingInfo=[];for(var i=0;i<t.trainingInfo.length;++i){if(typeof t.trainingInfo[i]!="object")throw TypeError(".onnx.ModelProto.trainingInfo: object expected");o.trainingInfo[i]=I.onnx.TrainingInfoProto.fromObject(t.trainingInfo[i])}}if(t.functions){if(!Array.isArray(t.functions))throw TypeError(".onnx.ModelProto.functions: array expected");o.functions=[];for(var i=0;i<t.functions.length;++i){if(typeof t.functions[i]!="object")throw TypeError(".onnx.ModelProto.functions: object expected");o.functions[i]=I.onnx.FunctionProto.fromObject(t.functions[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.opsetImport=[],i.metadataProps=[],i.trainingInfo=[],i.functions=[]),o.defaults){if(E.Long){var s=new E.Long(0,0,!1);i.irVersion=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.irVersion=o.longs===String?"0":0;if(i.producerName="",i.producerVersion="",i.domain="",E.Long){var s=new E.Long(0,0,!1);i.modelVersion=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.modelVersion=o.longs===String?"0":0;i.docString="",i.graph=null}if(t.irVersion!=null&&t.hasOwnProperty("irVersion")&&(typeof t.irVersion=="number"?i.irVersion=o.longs===String?String(t.irVersion):t.irVersion:i.irVersion=o.longs===String?E.Long.prototype.toString.call(t.irVersion):o.longs===Number?new E.LongBits(t.irVersion.low>>>0,t.irVersion.high>>>0).toNumber():t.irVersion),t.producerName!=null&&t.hasOwnProperty("producerName")&&(i.producerName=t.producerName),t.producerVersion!=null&&t.hasOwnProperty("producerVersion")&&(i.producerVersion=t.producerVersion),t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.modelVersion!=null&&t.hasOwnProperty("modelVersion")&&(typeof t.modelVersion=="number"?i.modelVersion=o.longs===String?String(t.modelVersion):t.modelVersion:i.modelVersion=o.longs===String?E.Long.prototype.toString.call(t.modelVersion):o.longs===Number?new E.LongBits(t.modelVersion.low>>>0,t.modelVersion.high>>>0).toNumber():t.modelVersion),t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.graph!=null&&t.hasOwnProperty("graph")&&(i.graph=I.onnx.GraphProto.toObject(t.graph,o)),t.opsetImport&&t.opsetImport.length){i.opsetImport=[];for(var a=0;a<t.opsetImport.length;++a)i.opsetImport[a]=I.onnx.OperatorSetIdProto.toObject(t.opsetImport[a],o)}if(t.metadataProps&&t.metadataProps.length){i.metadataProps=[];for(var a=0;a<t.metadataProps.length;++a)i.metadataProps[a]=I.onnx.StringStringEntryProto.toObject(t.metadataProps[a],o)}if(t.trainingInfo&&t.trainingInfo.length){i.trainingInfo=[];for(var a=0;a<t.trainingInfo.length;++a)i.trainingInfo[a]=I.onnx.TrainingInfoProto.toObject(t.trainingInfo[a],o)}if(t.functions&&t.functions.length){i.functions=[];for(var a=0;a<t.functions.length;++a)i.functions[a]=I.onnx.FunctionProto.toObject(t.functions[a],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,rt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.ModelProto"},e}(),r.StringStringEntryProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.key="",e.prototype.value="",e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=ft.create()),t.key!=null&&Object.hasOwnProperty.call(t,"key")&&o.uint32(10).string(t.key),t.value!=null&&Object.hasOwnProperty.call(t,"value")&&o.uint32(18).string(t.value),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof oe||(t=oe.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.StringStringEntryProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.key=t.string();break}case 2:{s.value=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof oe||(t=new oe(t)),this.decode(t,t.uint32())},e.verify=function(t){return typeof t!="object"||t===null?"object expected":t.key!=null&&t.hasOwnProperty("key")&&!E.isString(t.key)?"key: string expected":t.value!=null&&t.hasOwnProperty("value")&&!E.isString(t.value)?"value: string expected":null},e.fromObject=function(t){if(t instanceof I.onnx.StringStringEntryProto)return t;var o=new I.onnx.StringStringEntryProto;return t.key!=null&&(o.key=String(t.key)),t.value!=null&&(o.value=String(t.value)),o},e.toObject=function(t,o){o||(o={});var i={};return o.defaults&&(i.key="",i.value=""),t.key!=null&&t.hasOwnProperty("key")&&(i.key=t.key),t.value!=null&&t.hasOwnProperty("value")&&(i.value=t.value),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,rt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.StringStringEntryProto"},e}(),r.TensorAnnotation=function(){function e(n){if(this.quantParameterTensorNames=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.tensorName="",e.prototype.quantParameterTensorNames=E.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ft.create()),t.tensorName!=null&&Object.hasOwnProperty.call(t,"tensorName")&&o.uint32(10).string(t.tensorName),t.quantParameterTensorNames!=null&&t.quantParameterTensorNames.length)for(var i=0;i<t.quantParameterTensorNames.length;++i)I.onnx.StringStringEntryProto.encode(t.quantParameterTensorNames[i],o.uint32(18).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof oe||(t=oe.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.TensorAnnotation;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.tensorName=t.string();break}case 2:{s.quantParameterTensorNames&&s.quantParameterTensorNames.length||(s.quantParameterTensorNames=[]),s.quantParameterTensorNames.push(I.onnx.StringStringEntryProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof oe||(t=new oe(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.tensorName!=null&&t.hasOwnProperty("tensorName")&&!E.isString(t.tensorName))return"tensorName: string expected";if(t.quantParameterTensorNames!=null&&t.hasOwnProperty("quantParameterTensorNames")){if(!Array.isArray(t.quantParameterTensorNames))return"quantParameterTensorNames: array expected";for(var o=0;o<t.quantParameterTensorNames.length;++o){var i=I.onnx.StringStringEntryProto.verify(t.quantParameterTensorNames[o]);if(i)return"quantParameterTensorNames."+i}}return null},e.fromObject=function(t){if(t instanceof I.onnx.TensorAnnotation)return t;var o=new I.onnx.TensorAnnotation;if(t.tensorName!=null&&(o.tensorName=String(t.tensorName)),t.quantParameterTensorNames){if(!Array.isArray(t.quantParameterTensorNames))throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: array expected");o.quantParameterTensorNames=[];for(var i=0;i<t.quantParameterTensorNames.length;++i){if(typeof t.quantParameterTensorNames[i]!="object")throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: object expected");o.quantParameterTensorNames[i]=I.onnx.StringStringEntryProto.fromObject(t.quantParameterTensorNames[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.quantParameterTensorNames=[]),o.defaults&&(i.tensorName=""),t.tensorName!=null&&t.hasOwnProperty("tensorName")&&(i.tensorName=t.tensorName),t.quantParameterTensorNames&&t.quantParameterTensorNames.length){i.quantParameterTensorNames=[];for(var s=0;s<t.quantParameterTensorNames.length;++s)i.quantParameterTensorNames[s]=I.onnx.StringStringEntryProto.toObject(t.quantParameterTensorNames[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,rt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorAnnotation"},e}(),r.GraphProto=function(){function e(n){if(this.node=[],this.initializer=[],this.sparseInitializer=[],this.input=[],this.output=[],this.valueInfo=[],this.quantizationAnnotation=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.node=E.emptyArray,e.prototype.name="",e.prototype.initializer=E.emptyArray,e.prototype.sparseInitializer=E.emptyArray,e.prototype.docString="",e.prototype.input=E.emptyArray,e.prototype.output=E.emptyArray,e.prototype.valueInfo=E.emptyArray,e.prototype.quantizationAnnotation=E.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ft.create()),t.node!=null&&t.node.length)for(var i=0;i<t.node.length;++i)I.onnx.NodeProto.encode(t.node[i],o.uint32(10).fork()).ldelim();if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(18).string(t.name),t.initializer!=null&&t.initializer.length)for(var i=0;i<t.initializer.length;++i)I.onnx.TensorProto.encode(t.initializer[i],o.uint32(42).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(82).string(t.docString),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)I.onnx.ValueInfoProto.encode(t.input[i],o.uint32(90).fork()).ldelim();if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)I.onnx.ValueInfoProto.encode(t.output[i],o.uint32(98).fork()).ldelim();if(t.valueInfo!=null&&t.valueInfo.length)for(var i=0;i<t.valueInfo.length;++i)I.onnx.ValueInfoProto.encode(t.valueInfo[i],o.uint32(106).fork()).ldelim();if(t.quantizationAnnotation!=null&&t.quantizationAnnotation.length)for(var i=0;i<t.quantizationAnnotation.length;++i)I.onnx.TensorAnnotation.encode(t.quantizationAnnotation[i],o.uint32(114).fork()).ldelim();if(t.sparseInitializer!=null&&t.sparseInitializer.length)for(var i=0;i<t.sparseInitializer.length;++i)I.onnx.SparseTensorProto.encode(t.sparseInitializer[i],o.uint32(122).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof oe||(t=oe.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.GraphProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.node&&s.node.length||(s.node=[]),s.node.push(I.onnx.NodeProto.decode(t,t.uint32()));break}case 2:{s.name=t.string();break}case 5:{s.initializer&&s.initializer.length||(s.initializer=[]),s.initializer.push(I.onnx.TensorProto.decode(t,t.uint32()));break}case 15:{s.sparseInitializer&&s.sparseInitializer.length||(s.sparseInitializer=[]),s.sparseInitializer.push(I.onnx.SparseTensorProto.decode(t,t.uint32()));break}case 10:{s.docString=t.string();break}case 11:{s.input&&s.input.length||(s.input=[]),s.input.push(I.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 12:{s.output&&s.output.length||(s.output=[]),s.output.push(I.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 13:{s.valueInfo&&s.valueInfo.length||(s.valueInfo=[]),s.valueInfo.push(I.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 14:{s.quantizationAnnotation&&s.quantizationAnnotation.length||(s.quantizationAnnotation=[]),s.quantizationAnnotation.push(I.onnx.TensorAnnotation.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof oe||(t=new oe(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.node!=null&&t.hasOwnProperty("node")){if(!Array.isArray(t.node))return"node: array expected";for(var o=0;o<t.node.length;++o){var i=I.onnx.NodeProto.verify(t.node[o]);if(i)return"node."+i}}if(t.name!=null&&t.hasOwnProperty("name")&&!E.isString(t.name))return"name: string expected";if(t.initializer!=null&&t.hasOwnProperty("initializer")){if(!Array.isArray(t.initializer))return"initializer: array expected";for(var o=0;o<t.initializer.length;++o){var i=I.onnx.TensorProto.verify(t.initializer[o]);if(i)return"initializer."+i}}if(t.sparseInitializer!=null&&t.hasOwnProperty("sparseInitializer")){if(!Array.isArray(t.sparseInitializer))return"sparseInitializer: array expected";for(var o=0;o<t.sparseInitializer.length;++o){var i=I.onnx.SparseTensorProto.verify(t.sparseInitializer[o]);if(i)return"sparseInitializer."+i}}if(t.docString!=null&&t.hasOwnProperty("docString")&&!E.isString(t.docString))return"docString: string expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o){var i=I.onnx.ValueInfoProto.verify(t.input[o]);if(i)return"input."+i}}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o){var i=I.onnx.ValueInfoProto.verify(t.output[o]);if(i)return"output."+i}}if(t.valueInfo!=null&&t.hasOwnProperty("valueInfo")){if(!Array.isArray(t.valueInfo))return"valueInfo: array expected";for(var o=0;o<t.valueInfo.length;++o){var i=I.onnx.ValueInfoProto.verify(t.valueInfo[o]);if(i)return"valueInfo."+i}}if(t.quantizationAnnotation!=null&&t.hasOwnProperty("quantizationAnnotation")){if(!Array.isArray(t.quantizationAnnotation))return"quantizationAnnotation: array expected";for(var o=0;o<t.quantizationAnnotation.length;++o){var i=I.onnx.TensorAnnotation.verify(t.quantizationAnnotation[o]);if(i)return"quantizationAnnotation."+i}}return null},e.fromObject=function(t){if(t instanceof I.onnx.GraphProto)return t;var o=new I.onnx.GraphProto;if(t.node){if(!Array.isArray(t.node))throw TypeError(".onnx.GraphProto.node: array expected");o.node=[];for(var i=0;i<t.node.length;++i){if(typeof t.node[i]!="object")throw TypeError(".onnx.GraphProto.node: object expected");o.node[i]=I.onnx.NodeProto.fromObject(t.node[i])}}if(t.name!=null&&(o.name=String(t.name)),t.initializer){if(!Array.isArray(t.initializer))throw TypeError(".onnx.GraphProto.initializer: array expected");o.initializer=[];for(var i=0;i<t.initializer.length;++i){if(typeof t.initializer[i]!="object")throw TypeError(".onnx.GraphProto.initializer: object expected");o.initializer[i]=I.onnx.TensorProto.fromObject(t.initializer[i])}}if(t.sparseInitializer){if(!Array.isArray(t.sparseInitializer))throw TypeError(".onnx.GraphProto.sparseInitializer: array expected");o.sparseInitializer=[];for(var i=0;i<t.sparseInitializer.length;++i){if(typeof t.sparseInitializer[i]!="object")throw TypeError(".onnx.GraphProto.sparseInitializer: object expected");o.sparseInitializer[i]=I.onnx.SparseTensorProto.fromObject(t.sparseInitializer[i])}}if(t.docString!=null&&(o.docString=String(t.docString)),t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.GraphProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i){if(typeof t.input[i]!="object")throw TypeError(".onnx.GraphProto.input: object expected");o.input[i]=I.onnx.ValueInfoProto.fromObject(t.input[i])}}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.GraphProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i){if(typeof t.output[i]!="object")throw TypeError(".onnx.GraphProto.output: object expected");o.output[i]=I.onnx.ValueInfoProto.fromObject(t.output[i])}}if(t.valueInfo){if(!Array.isArray(t.valueInfo))throw TypeError(".onnx.GraphProto.valueInfo: array expected");o.valueInfo=[];for(var i=0;i<t.valueInfo.length;++i){if(typeof t.valueInfo[i]!="object")throw TypeError(".onnx.GraphProto.valueInfo: object expected");o.valueInfo[i]=I.onnx.ValueInfoProto.fromObject(t.valueInfo[i])}}if(t.quantizationAnnotation){if(!Array.isArray(t.quantizationAnnotation))throw TypeError(".onnx.GraphProto.quantizationAnnotation: array expected");o.quantizationAnnotation=[];for(var i=0;i<t.quantizationAnnotation.length;++i){if(typeof t.quantizationAnnotation[i]!="object")throw TypeError(".onnx.GraphProto.quantizationAnnotation: object expected");o.quantizationAnnotation[i]=I.onnx.TensorAnnotation.fromObject(t.quantizationAnnotation[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.node=[],i.initializer=[],i.input=[],i.output=[],i.valueInfo=[],i.quantizationAnnotation=[],i.sparseInitializer=[]),o.defaults&&(i.name="",i.docString=""),t.node&&t.node.length){i.node=[];for(var s=0;s<t.node.length;++s)i.node[s]=I.onnx.NodeProto.toObject(t.node[s],o)}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.initializer&&t.initializer.length){i.initializer=[];for(var s=0;s<t.initializer.length;++s)i.initializer[s]=I.onnx.TensorProto.toObject(t.initializer[s],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.input&&t.input.length){i.input=[];for(var s=0;s<t.input.length;++s)i.input[s]=I.onnx.ValueInfoProto.toObject(t.input[s],o)}if(t.output&&t.output.length){i.output=[];for(var s=0;s<t.output.length;++s)i.output[s]=I.onnx.ValueInfoProto.toObject(t.output[s],o)}if(t.valueInfo&&t.valueInfo.length){i.valueInfo=[];for(var s=0;s<t.valueInfo.length;++s)i.valueInfo[s]=I.onnx.ValueInfoProto.toObject(t.valueInfo[s],o)}if(t.quantizationAnnotation&&t.quantizationAnnotation.length){i.quantizationAnnotation=[];for(var s=0;s<t.quantizationAnnotation.length;++s)i.quantizationAnnotation[s]=I.onnx.TensorAnnotation.toObject(t.quantizationAnnotation[s],o)}if(t.sparseInitializer&&t.sparseInitializer.length){i.sparseInitializer=[];for(var s=0;s<t.sparseInitializer.length;++s)i.sparseInitializer[s]=I.onnx.SparseTensorProto.toObject(t.sparseInitializer[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,rt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.GraphProto"},e}(),r.TensorProto=function(){function e(n){if(this.dims=[],this.floatData=[],this.int32Data=[],this.stringData=[],this.int64Data=[],this.externalData=[],this.doubleData=[],this.uint64Data=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.dims=E.emptyArray,e.prototype.dataType=0,e.prototype.segment=null,e.prototype.floatData=E.emptyArray,e.prototype.int32Data=E.emptyArray,e.prototype.stringData=E.emptyArray,e.prototype.int64Data=E.emptyArray,e.prototype.name="",e.prototype.docString="",e.prototype.rawData=E.newBuffer([]),e.prototype.externalData=E.emptyArray,e.prototype.dataLocation=0,e.prototype.doubleData=E.emptyArray,e.prototype.uint64Data=E.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ft.create()),t.dims!=null&&t.dims.length){o.uint32(10).fork();for(var i=0;i<t.dims.length;++i)o.int64(t.dims[i]);o.ldelim()}if(t.dataType!=null&&Object.hasOwnProperty.call(t,"dataType")&&o.uint32(16).int32(t.dataType),t.segment!=null&&Object.hasOwnProperty.call(t,"segment")&&I.onnx.TensorProto.Segment.encode(t.segment,o.uint32(26).fork()).ldelim(),t.floatData!=null&&t.floatData.length){o.uint32(34).fork();for(var i=0;i<t.floatData.length;++i)o.float(t.floatData[i]);o.ldelim()}if(t.int32Data!=null&&t.int32Data.length){o.uint32(42).fork();for(var i=0;i<t.int32Data.length;++i)o.int32(t.int32Data[i]);o.ldelim()}if(t.stringData!=null&&t.stringData.length)for(var i=0;i<t.stringData.length;++i)o.uint32(50).bytes(t.stringData[i]);if(t.int64Data!=null&&t.int64Data.length){o.uint32(58).fork();for(var i=0;i<t.int64Data.length;++i)o.int64(t.int64Data[i]);o.ldelim()}if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(66).string(t.name),t.rawData!=null&&Object.hasOwnProperty.call(t,"rawData")&&o.uint32(74).bytes(t.rawData),t.doubleData!=null&&t.doubleData.length){o.uint32(82).fork();for(var i=0;i<t.doubleData.length;++i)o.double(t.doubleData[i]);o.ldelim()}if(t.uint64Data!=null&&t.uint64Data.length){o.uint32(90).fork();for(var i=0;i<t.uint64Data.length;++i)o.uint64(t.uint64Data[i]);o.ldelim()}if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(98).string(t.docString),t.externalData!=null&&t.externalData.length)for(var i=0;i<t.externalData.length;++i)I.onnx.StringStringEntryProto.encode(t.externalData[i],o.uint32(106).fork()).ldelim();return t.dataLocation!=null&&Object.hasOwnProperty.call(t,"dataLocation")&&o.uint32(112).int32(t.dataLocation),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof oe||(t=oe.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.TensorProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{if(s.dims&&s.dims.length||(s.dims=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.dims.push(t.int64());else s.dims.push(t.int64());break}case 2:{s.dataType=t.int32();break}case 3:{s.segment=I.onnx.TensorProto.Segment.decode(t,t.uint32());break}case 4:{if(s.floatData&&s.floatData.length||(s.floatData=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.floatData.push(t.float());else s.floatData.push(t.float());break}case 5:{if(s.int32Data&&s.int32Data.length||(s.int32Data=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.int32Data.push(t.int32());else s.int32Data.push(t.int32());break}case 6:{s.stringData&&s.stringData.length||(s.stringData=[]),s.stringData.push(t.bytes());break}case 7:{if(s.int64Data&&s.int64Data.length||(s.int64Data=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.int64Data.push(t.int64());else s.int64Data.push(t.int64());break}case 8:{s.name=t.string();break}case 12:{s.docString=t.string();break}case 9:{s.rawData=t.bytes();break}case 13:{s.externalData&&s.externalData.length||(s.externalData=[]),s.externalData.push(I.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 14:{s.dataLocation=t.int32();break}case 10:{if(s.doubleData&&s.doubleData.length||(s.doubleData=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.doubleData.push(t.double());else s.doubleData.push(t.double());break}case 11:{if(s.uint64Data&&s.uint64Data.length||(s.uint64Data=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.uint64Data.push(t.uint64());else s.uint64Data.push(t.uint64());break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof oe||(t=new oe(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.dims!=null&&t.hasOwnProperty("dims")){if(!Array.isArray(t.dims))return"dims: array expected";for(var o=0;o<t.dims.length;++o)if(!E.isInteger(t.dims[o])&&!(t.dims[o]&&E.isInteger(t.dims[o].low)&&E.isInteger(t.dims[o].high)))return"dims: integer|Long[] expected"}if(t.dataType!=null&&t.hasOwnProperty("dataType")&&!E.isInteger(t.dataType))return"dataType: integer expected";if(t.segment!=null&&t.hasOwnProperty("segment")){var i=I.onnx.TensorProto.Segment.verify(t.segment);if(i)return"segment."+i}if(t.floatData!=null&&t.hasOwnProperty("floatData")){if(!Array.isArray(t.floatData))return"floatData: array expected";for(var o=0;o<t.floatData.length;++o)if(typeof t.floatData[o]!="number")return"floatData: number[] expected"}if(t.int32Data!=null&&t.hasOwnProperty("int32Data")){if(!Array.isArray(t.int32Data))return"int32Data: array expected";for(var o=0;o<t.int32Data.length;++o)if(!E.isInteger(t.int32Data[o]))return"int32Data: integer[] expected"}if(t.stringData!=null&&t.hasOwnProperty("stringData")){if(!Array.isArray(t.stringData))return"stringData: array expected";for(var o=0;o<t.stringData.length;++o)if(!(t.stringData[o]&&typeof t.stringData[o].length=="number"||E.isString(t.stringData[o])))return"stringData: buffer[] expected"}if(t.int64Data!=null&&t.hasOwnProperty("int64Data")){if(!Array.isArray(t.int64Data))return"int64Data: array expected";for(var o=0;o<t.int64Data.length;++o)if(!E.isInteger(t.int64Data[o])&&!(t.int64Data[o]&&E.isInteger(t.int64Data[o].low)&&E.isInteger(t.int64Data[o].high)))return"int64Data: integer|Long[] expected"}if(t.name!=null&&t.hasOwnProperty("name")&&!E.isString(t.name))return"name: string expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!E.isString(t.docString))return"docString: string expected";if(t.rawData!=null&&t.hasOwnProperty("rawData")&&!(t.rawData&&typeof t.rawData.length=="number"||E.isString(t.rawData)))return"rawData: buffer expected";if(t.externalData!=null&&t.hasOwnProperty("externalData")){if(!Array.isArray(t.externalData))return"externalData: array expected";for(var o=0;o<t.externalData.length;++o){var i=I.onnx.StringStringEntryProto.verify(t.externalData[o]);if(i)return"externalData."+i}}if(t.dataLocation!=null&&t.hasOwnProperty("dataLocation"))switch(t.dataLocation){default:return"dataLocation: enum value expected";case 0:case 1:break}if(t.doubleData!=null&&t.hasOwnProperty("doubleData")){if(!Array.isArray(t.doubleData))return"doubleData: array expected";for(var o=0;o<t.doubleData.length;++o)if(typeof t.doubleData[o]!="number")return"doubleData: number[] expected"}if(t.uint64Data!=null&&t.hasOwnProperty("uint64Data")){if(!Array.isArray(t.uint64Data))return"uint64Data: array expected";for(var o=0;o<t.uint64Data.length;++o)if(!E.isInteger(t.uint64Data[o])&&!(t.uint64Data[o]&&E.isInteger(t.uint64Data[o].low)&&E.isInteger(t.uint64Data[o].high)))return"uint64Data: integer|Long[] expected"}return null},e.fromObject=function(t){if(t instanceof I.onnx.TensorProto)return t;var o=new I.onnx.TensorProto;if(t.dims){if(!Array.isArray(t.dims))throw TypeError(".onnx.TensorProto.dims: array expected");o.dims=[];for(var i=0;i<t.dims.length;++i)E.Long?(o.dims[i]=E.Long.fromValue(t.dims[i])).unsigned=!1:typeof t.dims[i]=="string"?o.dims[i]=parseInt(t.dims[i],10):typeof t.dims[i]=="number"?o.dims[i]=t.dims[i]:typeof t.dims[i]=="object"&&(o.dims[i]=new E.LongBits(t.dims[i].low>>>0,t.dims[i].high>>>0).toNumber())}if(t.dataType!=null&&(o.dataType=t.dataType|0),t.segment!=null){if(typeof t.segment!="object")throw TypeError(".onnx.TensorProto.segment: object expected");o.segment=I.onnx.TensorProto.Segment.fromObject(t.segment)}if(t.floatData){if(!Array.isArray(t.floatData))throw TypeError(".onnx.TensorProto.floatData: array expected");o.floatData=[];for(var i=0;i<t.floatData.length;++i)o.floatData[i]=Number(t.floatData[i])}if(t.int32Data){if(!Array.isArray(t.int32Data))throw TypeError(".onnx.TensorProto.int32Data: array expected");o.int32Data=[];for(var i=0;i<t.int32Data.length;++i)o.int32Data[i]=t.int32Data[i]|0}if(t.stringData){if(!Array.isArray(t.stringData))throw TypeError(".onnx.TensorProto.stringData: array expected");o.stringData=[];for(var i=0;i<t.stringData.length;++i)typeof t.stringData[i]=="string"?E.base64.decode(t.stringData[i],o.stringData[i]=E.newBuffer(E.base64.length(t.stringData[i])),0):t.stringData[i].length>=0&&(o.stringData[i]=t.stringData[i])}if(t.int64Data){if(!Array.isArray(t.int64Data))throw TypeError(".onnx.TensorProto.int64Data: array expected");o.int64Data=[];for(var i=0;i<t.int64Data.length;++i)E.Long?(o.int64Data[i]=E.Long.fromValue(t.int64Data[i])).unsigned=!1:typeof t.int64Data[i]=="string"?o.int64Data[i]=parseInt(t.int64Data[i],10):typeof t.int64Data[i]=="number"?o.int64Data[i]=t.int64Data[i]:typeof t.int64Data[i]=="object"&&(o.int64Data[i]=new E.LongBits(t.int64Data[i].low>>>0,t.int64Data[i].high>>>0).toNumber())}if(t.name!=null&&(o.name=String(t.name)),t.docString!=null&&(o.docString=String(t.docString)),t.rawData!=null&&(typeof t.rawData=="string"?E.base64.decode(t.rawData,o.rawData=E.newBuffer(E.base64.length(t.rawData)),0):t.rawData.length>=0&&(o.rawData=t.rawData)),t.externalData){if(!Array.isArray(t.externalData))throw TypeError(".onnx.TensorProto.externalData: array expected");o.externalData=[];for(var i=0;i<t.externalData.length;++i){if(typeof t.externalData[i]!="object")throw TypeError(".onnx.TensorProto.externalData: object expected");o.externalData[i]=I.onnx.StringStringEntryProto.fromObject(t.externalData[i])}}switch(t.dataLocation){default:if(typeof t.dataLocation=="number"){o.dataLocation=t.dataLocation;break}break;case"DEFAULT":case 0:o.dataLocation=0;break;case"EXTERNAL":case 1:o.dataLocation=1;break}if(t.doubleData){if(!Array.isArray(t.doubleData))throw TypeError(".onnx.TensorProto.doubleData: array expected");o.doubleData=[];for(var i=0;i<t.doubleData.length;++i)o.doubleData[i]=Number(t.doubleData[i])}if(t.uint64Data){if(!Array.isArray(t.uint64Data))throw TypeError(".onnx.TensorProto.uint64Data: array expected");o.uint64Data=[];for(var i=0;i<t.uint64Data.length;++i)E.Long?(o.uint64Data[i]=E.Long.fromValue(t.uint64Data[i])).unsigned=!0:typeof t.uint64Data[i]=="string"?o.uint64Data[i]=parseInt(t.uint64Data[i],10):typeof t.uint64Data[i]=="number"?o.uint64Data[i]=t.uint64Data[i]:typeof t.uint64Data[i]=="object"&&(o.uint64Data[i]=new E.LongBits(t.uint64Data[i].low>>>0,t.uint64Data[i].high>>>0).toNumber(!0))}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dims=[],i.floatData=[],i.int32Data=[],i.stringData=[],i.int64Data=[],i.doubleData=[],i.uint64Data=[],i.externalData=[]),o.defaults&&(i.dataType=0,i.segment=null,i.name="",o.bytes===String?i.rawData="":(i.rawData=[],o.bytes!==Array&&(i.rawData=E.newBuffer(i.rawData))),i.docString="",i.dataLocation=o.enums===String?"DEFAULT":0),t.dims&&t.dims.length){i.dims=[];for(var s=0;s<t.dims.length;++s)typeof t.dims[s]=="number"?i.dims[s]=o.longs===String?String(t.dims[s]):t.dims[s]:i.dims[s]=o.longs===String?E.Long.prototype.toString.call(t.dims[s]):o.longs===Number?new E.LongBits(t.dims[s].low>>>0,t.dims[s].high>>>0).toNumber():t.dims[s]}if(t.dataType!=null&&t.hasOwnProperty("dataType")&&(i.dataType=t.dataType),t.segment!=null&&t.hasOwnProperty("segment")&&(i.segment=I.onnx.TensorProto.Segment.toObject(t.segment,o)),t.floatData&&t.floatData.length){i.floatData=[];for(var s=0;s<t.floatData.length;++s)i.floatData[s]=o.json&&!isFinite(t.floatData[s])?String(t.floatData[s]):t.floatData[s]}if(t.int32Data&&t.int32Data.length){i.int32Data=[];for(var s=0;s<t.int32Data.length;++s)i.int32Data[s]=t.int32Data[s]}if(t.stringData&&t.stringData.length){i.stringData=[];for(var s=0;s<t.stringData.length;++s)i.stringData[s]=o.bytes===String?E.base64.encode(t.stringData[s],0,t.stringData[s].length):o.bytes===Array?Array.prototype.slice.call(t.stringData[s]):t.stringData[s]}if(t.int64Data&&t.int64Data.length){i.int64Data=[];for(var s=0;s<t.int64Data.length;++s)typeof t.int64Data[s]=="number"?i.int64Data[s]=o.longs===String?String(t.int64Data[s]):t.int64Data[s]:i.int64Data[s]=o.longs===String?E.Long.prototype.toString.call(t.int64Data[s]):o.longs===Number?new E.LongBits(t.int64Data[s].low>>>0,t.int64Data[s].high>>>0).toNumber():t.int64Data[s]}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.rawData!=null&&t.hasOwnProperty("rawData")&&(i.rawData=o.bytes===String?E.base64.encode(t.rawData,0,t.rawData.length):o.bytes===Array?Array.prototype.slice.call(t.rawData):t.rawData),t.doubleData&&t.doubleData.length){i.doubleData=[];for(var s=0;s<t.doubleData.length;++s)i.doubleData[s]=o.json&&!isFinite(t.doubleData[s])?String(t.doubleData[s]):t.doubleData[s]}if(t.uint64Data&&t.uint64Data.length){i.uint64Data=[];for(var s=0;s<t.uint64Data.length;++s)typeof t.uint64Data[s]=="number"?i.uint64Data[s]=o.longs===String?String(t.uint64Data[s]):t.uint64Data[s]:i.uint64Data[s]=o.longs===String?E.Long.prototype.toString.call(t.uint64Data[s]):o.longs===Number?new E.LongBits(t.uint64Data[s].low>>>0,t.uint64Data[s].high>>>0).toNumber(!0):t.uint64Data[s]}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.externalData&&t.externalData.length){i.externalData=[];for(var s=0;s<t.externalData.length;++s)i.externalData[s]=I.onnx.StringStringEntryProto.toObject(t.externalData[s],o)}return t.dataLocation!=null&&t.hasOwnProperty("dataLocation")&&(i.dataLocation=o.enums===String?I.onnx.TensorProto.DataLocation[t.dataLocation]===void 0?t.dataLocation:I.onnx.TensorProto.DataLocation[t.dataLocation]:t.dataLocation),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,rt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorProto"},e.DataType=function(){var n={},t=Object.create(n);return t[n[0]="UNDEFINED"]=0,t[n[1]="FLOAT"]=1,t[n[2]="UINT8"]=2,t[n[3]="INT8"]=3,t[n[4]="UINT16"]=4,t[n[5]="INT16"]=5,t[n[6]="INT32"]=6,t[n[7]="INT64"]=7,t[n[8]="STRING"]=8,t[n[9]="BOOL"]=9,t[n[10]="FLOAT16"]=10,t[n[11]="DOUBLE"]=11,t[n[12]="UINT32"]=12,t[n[13]="UINT64"]=13,t[n[14]="COMPLEX64"]=14,t[n[15]="COMPLEX128"]=15,t[n[16]="BFLOAT16"]=16,t[n[17]="FLOAT8E4M3FN"]=17,t[n[18]="FLOAT8E4M3FNUZ"]=18,t[n[19]="FLOAT8E5M2"]=19,t[n[20]="FLOAT8E5M2FNUZ"]=20,t}(),e.Segment=function(){function n(t){if(t)for(var o=Object.keys(t),i=0;i<o.length;++i)t[o[i]]!=null&&(this[o[i]]=t[o[i]])}return n.prototype.begin=E.Long?E.Long.fromBits(0,0,!1):0,n.prototype.end=E.Long?E.Long.fromBits(0,0,!1):0,n.create=function(o){return new n(o)},n.encode=function(o,i){return i||(i=ft.create()),o.begin!=null&&Object.hasOwnProperty.call(o,"begin")&&i.uint32(8).int64(o.begin),o.end!=null&&Object.hasOwnProperty.call(o,"end")&&i.uint32(16).int64(o.end),i},n.encodeDelimited=function(o,i){return this.encode(o,i).ldelim()},n.decode=function(o,i){o instanceof oe||(o=oe.create(o));for(var s=i===void 0?o.len:o.pos+i,a=new I.onnx.TensorProto.Segment;o.pos<s;){var u=o.uint32();switch(u>>>3){case 1:{a.begin=o.int64();break}case 2:{a.end=o.int64();break}default:o.skipType(u&7);break}}return a},n.decodeDelimited=function(o){return o instanceof oe||(o=new oe(o)),this.decode(o,o.uint32())},n.verify=function(o){return typeof o!="object"||o===null?"object expected":o.begin!=null&&o.hasOwnProperty("begin")&&!E.isInteger(o.begin)&&!(o.begin&&E.isInteger(o.begin.low)&&E.isInteger(o.begin.high))?"begin: integer|Long expected":o.end!=null&&o.hasOwnProperty("end")&&!E.isInteger(o.end)&&!(o.end&&E.isInteger(o.end.low)&&E.isInteger(o.end.high))?"end: integer|Long expected":null},n.fromObject=function(o){if(o instanceof I.onnx.TensorProto.Segment)return o;var i=new I.onnx.TensorProto.Segment;return o.begin!=null&&(E.Long?(i.begin=E.Long.fromValue(o.begin)).unsigned=!1:typeof o.begin=="string"?i.begin=parseInt(o.begin,10):typeof o.begin=="number"?i.begin=o.begin:typeof o.begin=="object"&&(i.begin=new E.LongBits(o.begin.low>>>0,o.begin.high>>>0).toNumber())),o.end!=null&&(E.Long?(i.end=E.Long.fromValue(o.end)).unsigned=!1:typeof o.end=="string"?i.end=parseInt(o.end,10):typeof o.end=="number"?i.end=o.end:typeof o.end=="object"&&(i.end=new E.LongBits(o.end.low>>>0,o.end.high>>>0).toNumber())),i},n.toObject=function(o,i){i||(i={});var s={};if(i.defaults){if(E.Long){var a=new E.Long(0,0,!1);s.begin=i.longs===String?a.toString():i.longs===Number?a.toNumber():a}else s.begin=i.longs===String?"0":0;if(E.Long){var a=new E.Long(0,0,!1);s.end=i.longs===String?a.toString():i.longs===Number?a.toNumber():a}else s.end=i.longs===String?"0":0}return o.begin!=null&&o.hasOwnProperty("begin")&&(typeof o.begin=="number"?s.begin=i.longs===String?String(o.begin):o.begin:s.begin=i.longs===String?E.Long.prototype.toString.call(o.begin):i.longs===Number?new E.LongBits(o.begin.low>>>0,o.begin.high>>>0).toNumber():o.begin),o.end!=null&&o.hasOwnProperty("end")&&(typeof o.end=="number"?s.end=i.longs===String?String(o.end):o.end:s.end=i.longs===String?E.Long.prototype.toString.call(o.end):i.longs===Number?new E.LongBits(o.end.low>>>0,o.end.high>>>0).toNumber():o.end),s},n.prototype.toJSON=function(){return this.constructor.toObject(this,rt.util.toJSONOptions)},n.getTypeUrl=function(o){return o===void 0&&(o="type.googleapis.com"),o+"/onnx.TensorProto.Segment"},n}(),e.DataLocation=function(){var n={},t=Object.create(n);return t[n[0]="DEFAULT"]=0,t[n[1]="EXTERNAL"]=1,t}(),e}(),r.SparseTensorProto=function(){function e(n){if(this.dims=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.values=null,e.prototype.indices=null,e.prototype.dims=E.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ft.create()),t.values!=null&&Object.hasOwnProperty.call(t,"values")&&I.onnx.TensorProto.encode(t.values,o.uint32(10).fork()).ldelim(),t.indices!=null&&Object.hasOwnProperty.call(t,"indices")&&I.onnx.TensorProto.encode(t.indices,o.uint32(18).fork()).ldelim(),t.dims!=null&&t.dims.length){o.uint32(26).fork();for(var i=0;i<t.dims.length;++i)o.int64(t.dims[i]);o.ldelim()}return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof oe||(t=oe.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.SparseTensorProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.values=I.onnx.TensorProto.decode(t,t.uint32());break}case 2:{s.indices=I.onnx.TensorProto.decode(t,t.uint32());break}case 3:{if(s.dims&&s.dims.length||(s.dims=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.dims.push(t.int64());else s.dims.push(t.int64());break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof oe||(t=new oe(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.values!=null&&t.hasOwnProperty("values")){var o=I.onnx.TensorProto.verify(t.values);if(o)return"values."+o}if(t.indices!=null&&t.hasOwnProperty("indices")){var o=I.onnx.TensorProto.verify(t.indices);if(o)return"indices."+o}if(t.dims!=null&&t.hasOwnProperty("dims")){if(!Array.isArray(t.dims))return"dims: array expected";for(var i=0;i<t.dims.length;++i)if(!E.isInteger(t.dims[i])&&!(t.dims[i]&&E.isInteger(t.dims[i].low)&&E.isInteger(t.dims[i].high)))return"dims: integer|Long[] expected"}return null},e.fromObject=function(t){if(t instanceof I.onnx.SparseTensorProto)return t;var o=new I.onnx.SparseTensorProto;if(t.values!=null){if(typeof t.values!="object")throw TypeError(".onnx.SparseTensorProto.values: object expected");o.values=I.onnx.TensorProto.fromObject(t.values)}if(t.indices!=null){if(typeof t.indices!="object")throw TypeError(".onnx.SparseTensorProto.indices: object expected");o.indices=I.onnx.TensorProto.fromObject(t.indices)}if(t.dims){if(!Array.isArray(t.dims))throw TypeError(".onnx.SparseTensorProto.dims: array expected");o.dims=[];for(var i=0;i<t.dims.length;++i)E.Long?(o.dims[i]=E.Long.fromValue(t.dims[i])).unsigned=!1:typeof t.dims[i]=="string"?o.dims[i]=parseInt(t.dims[i],10):typeof t.dims[i]=="number"?o.dims[i]=t.dims[i]:typeof t.dims[i]=="object"&&(o.dims[i]=new E.LongBits(t.dims[i].low>>>0,t.dims[i].high>>>0).toNumber())}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dims=[]),o.defaults&&(i.values=null,i.indices=null),t.values!=null&&t.hasOwnProperty("values")&&(i.values=I.onnx.TensorProto.toObject(t.values,o)),t.indices!=null&&t.hasOwnProperty("indices")&&(i.indices=I.onnx.TensorProto.toObject(t.indices,o)),t.dims&&t.dims.length){i.dims=[];for(var s=0;s<t.dims.length;++s)typeof t.dims[s]=="number"?i.dims[s]=o.longs===String?String(t.dims[s]):t.dims[s]:i.dims[s]=o.longs===String?E.Long.prototype.toString.call(t.dims[s]):o.longs===Number?new E.LongBits(t.dims[s].low>>>0,t.dims[s].high>>>0).toNumber():t.dims[s]}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,rt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.SparseTensorProto"},e}(),r.TensorShapeProto=function(){function e(n){if(this.dim=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.dim=E.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ft.create()),t.dim!=null&&t.dim.length)for(var i=0;i<t.dim.length;++i)I.onnx.TensorShapeProto.Dimension.encode(t.dim[i],o.uint32(10).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof oe||(t=oe.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.TensorShapeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.dim&&s.dim.length||(s.dim=[]),s.dim.push(I.onnx.TensorShapeProto.Dimension.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof oe||(t=new oe(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.dim!=null&&t.hasOwnProperty("dim")){if(!Array.isArray(t.dim))return"dim: array expected";for(var o=0;o<t.dim.length;++o){var i=I.onnx.TensorShapeProto.Dimension.verify(t.dim[o]);if(i)return"dim."+i}}return null},e.fromObject=function(t){if(t instanceof I.onnx.TensorShapeProto)return t;var o=new I.onnx.TensorShapeProto;if(t.dim){if(!Array.isArray(t.dim))throw TypeError(".onnx.TensorShapeProto.dim: array expected");o.dim=[];for(var i=0;i<t.dim.length;++i){if(typeof t.dim[i]!="object")throw TypeError(".onnx.TensorShapeProto.dim: object expected");o.dim[i]=I.onnx.TensorShapeProto.Dimension.fromObject(t.dim[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dim=[]),t.dim&&t.dim.length){i.dim=[];for(var s=0;s<t.dim.length;++s)i.dim[s]=I.onnx.TensorShapeProto.Dimension.toObject(t.dim[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,rt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorShapeProto"},e.Dimension=function(){function n(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}n.prototype.dimValue=null,n.prototype.dimParam=null,n.prototype.denotation="";var t;return Object.defineProperty(n.prototype,"value",{get:E.oneOfGetter(t=["dimValue","dimParam"]),set:E.oneOfSetter(t)}),n.create=function(i){return new n(i)},n.encode=function(i,s){return s||(s=ft.create()),i.dimValue!=null&&Object.hasOwnProperty.call(i,"dimValue")&&s.uint32(8).int64(i.dimValue),i.dimParam!=null&&Object.hasOwnProperty.call(i,"dimParam")&&s.uint32(18).string(i.dimParam),i.denotation!=null&&Object.hasOwnProperty.call(i,"denotation")&&s.uint32(26).string(i.denotation),s},n.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},n.decode=function(i,s){i instanceof oe||(i=oe.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new I.onnx.TensorShapeProto.Dimension;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.dimValue=i.int64();break}case 2:{u.dimParam=i.string();break}case 3:{u.denotation=i.string();break}default:i.skipType(l&7);break}}return u},n.decodeDelimited=function(i){return i instanceof oe||(i=new oe(i)),this.decode(i,i.uint32())},n.verify=function(i){if(typeof i!="object"||i===null)return"object expected";var s={};if(i.dimValue!=null&&i.hasOwnProperty("dimValue")&&(s.value=1,!E.isInteger(i.dimValue)&&!(i.dimValue&&E.isInteger(i.dimValue.low)&&E.isInteger(i.dimValue.high))))return"dimValue: integer|Long expected";if(i.dimParam!=null&&i.hasOwnProperty("dimParam")){if(s.value===1)return"value: multiple values";if(s.value=1,!E.isString(i.dimParam))return"dimParam: string expected"}return i.denotation!=null&&i.hasOwnProperty("denotation")&&!E.isString(i.denotation)?"denotation: string expected":null},n.fromObject=function(i){if(i instanceof I.onnx.TensorShapeProto.Dimension)return i;var s=new I.onnx.TensorShapeProto.Dimension;return i.dimValue!=null&&(E.Long?(s.dimValue=E.Long.fromValue(i.dimValue)).unsigned=!1:typeof i.dimValue=="string"?s.dimValue=parseInt(i.dimValue,10):typeof i.dimValue=="number"?s.dimValue=i.dimValue:typeof i.dimValue=="object"&&(s.dimValue=new E.LongBits(i.dimValue.low>>>0,i.dimValue.high>>>0).toNumber())),i.dimParam!=null&&(s.dimParam=String(i.dimParam)),i.denotation!=null&&(s.denotation=String(i.denotation)),s},n.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.denotation=""),i.dimValue!=null&&i.hasOwnProperty("dimValue")&&(typeof i.dimValue=="number"?a.dimValue=s.longs===String?String(i.dimValue):i.dimValue:a.dimValue=s.longs===String?E.Long.prototype.toString.call(i.dimValue):s.longs===Number?new E.LongBits(i.dimValue.low>>>0,i.dimValue.high>>>0).toNumber():i.dimValue,s.oneofs&&(a.value="dimValue")),i.dimParam!=null&&i.hasOwnProperty("dimParam")&&(a.dimParam=i.dimParam,s.oneofs&&(a.value="dimParam")),i.denotation!=null&&i.hasOwnProperty("denotation")&&(a.denotation=i.denotation),a},n.prototype.toJSON=function(){return this.constructor.toObject(this,rt.util.toJSONOptions)},n.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TensorShapeProto.Dimension"},n}(),e}(),r.TypeProto=function(){function e(t){if(t)for(var o=Object.keys(t),i=0;i<o.length;++i)t[o[i]]!=null&&(this[o[i]]=t[o[i]])}e.prototype.tensorType=null,e.prototype.sequenceType=null,e.prototype.mapType=null,e.prototype.optionalType=null,e.prototype.sparseTensorType=null,e.prototype.denotation="";var n;return Object.defineProperty(e.prototype,"value",{get:E.oneOfGetter(n=["tensorType","sequenceType","mapType","optionalType","sparseTensorType"]),set:E.oneOfSetter(n)}),e.create=function(o){return new e(o)},e.encode=function(o,i){return i||(i=ft.create()),o.tensorType!=null&&Object.hasOwnProperty.call(o,"tensorType")&&I.onnx.TypeProto.Tensor.encode(o.tensorType,i.uint32(10).fork()).ldelim(),o.sequenceType!=null&&Object.hasOwnProperty.call(o,"sequenceType")&&I.onnx.TypeProto.Sequence.encode(o.sequenceType,i.uint32(34).fork()).ldelim(),o.mapType!=null&&Object.hasOwnProperty.call(o,"mapType")&&I.onnx.TypeProto.Map.encode(o.mapType,i.uint32(42).fork()).ldelim(),o.denotation!=null&&Object.hasOwnProperty.call(o,"denotation")&&i.uint32(50).string(o.denotation),o.sparseTensorType!=null&&Object.hasOwnProperty.call(o,"sparseTensorType")&&I.onnx.TypeProto.SparseTensor.encode(o.sparseTensorType,i.uint32(66).fork()).ldelim(),o.optionalType!=null&&Object.hasOwnProperty.call(o,"optionalType")&&I.onnx.TypeProto.Optional.encode(o.optionalType,i.uint32(74).fork()).ldelim(),i},e.encodeDelimited=function(o,i){return this.encode(o,i).ldelim()},e.decode=function(o,i){o instanceof oe||(o=oe.create(o));for(var s=i===void 0?o.len:o.pos+i,a=new I.onnx.TypeProto;o.pos<s;){var u=o.uint32();switch(u>>>3){case 1:{a.tensorType=I.onnx.TypeProto.Tensor.decode(o,o.uint32());break}case 4:{a.sequenceType=I.onnx.TypeProto.Sequence.decode(o,o.uint32());break}case 5:{a.mapType=I.onnx.TypeProto.Map.decode(o,o.uint32());break}case 9:{a.optionalType=I.onnx.TypeProto.Optional.decode(o,o.uint32());break}case 8:{a.sparseTensorType=I.onnx.TypeProto.SparseTensor.decode(o,o.uint32());break}case 6:{a.denotation=o.string();break}default:o.skipType(u&7);break}}return a},e.decodeDelimited=function(o){return o instanceof oe||(o=new oe(o)),this.decode(o,o.uint32())},e.verify=function(o){if(typeof o!="object"||o===null)return"object expected";var i={};if(o.tensorType!=null&&o.hasOwnProperty("tensorType")){i.value=1;{var s=I.onnx.TypeProto.Tensor.verify(o.tensorType);if(s)return"tensorType."+s}}if(o.sequenceType!=null&&o.hasOwnProperty("sequenceType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=I.onnx.TypeProto.Sequence.verify(o.sequenceType);if(s)return"sequenceType."+s}}if(o.mapType!=null&&o.hasOwnProperty("mapType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=I.onnx.TypeProto.Map.verify(o.mapType);if(s)return"mapType."+s}}if(o.optionalType!=null&&o.hasOwnProperty("optionalType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=I.onnx.TypeProto.Optional.verify(o.optionalType);if(s)return"optionalType."+s}}if(o.sparseTensorType!=null&&o.hasOwnProperty("sparseTensorType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=I.onnx.TypeProto.SparseTensor.verify(o.sparseTensorType);if(s)return"sparseTensorType."+s}}return o.denotation!=null&&o.hasOwnProperty("denotation")&&!E.isString(o.denotation)?"denotation: string expected":null},e.fromObject=function(o){if(o instanceof I.onnx.TypeProto)return o;var i=new I.onnx.TypeProto;if(o.tensorType!=null){if(typeof o.tensorType!="object")throw TypeError(".onnx.TypeProto.tensorType: object expected");i.tensorType=I.onnx.TypeProto.Tensor.fromObject(o.tensorType)}if(o.sequenceType!=null){if(typeof o.sequenceType!="object")throw TypeError(".onnx.TypeProto.sequenceType: object expected");i.sequenceType=I.onnx.TypeProto.Sequence.fromObject(o.sequenceType)}if(o.mapType!=null){if(typeof o.mapType!="object")throw TypeError(".onnx.TypeProto.mapType: object expected");i.mapType=I.onnx.TypeProto.Map.fromObject(o.mapType)}if(o.optionalType!=null){if(typeof o.optionalType!="object")throw TypeError(".onnx.TypeProto.optionalType: object expected");i.optionalType=I.onnx.TypeProto.Optional.fromObject(o.optionalType)}if(o.sparseTensorType!=null){if(typeof o.sparseTensorType!="object")throw TypeError(".onnx.TypeProto.sparseTensorType: object expected");i.sparseTensorType=I.onnx.TypeProto.SparseTensor.fromObject(o.sparseTensorType)}return o.denotation!=null&&(i.denotation=String(o.denotation)),i},e.toObject=function(o,i){i||(i={});var s={};return i.defaults&&(s.denotation=""),o.tensorType!=null&&o.hasOwnProperty("tensorType")&&(s.tensorType=I.onnx.TypeProto.Tensor.toObject(o.tensorType,i),i.oneofs&&(s.value="tensorType")),o.sequenceType!=null&&o.hasOwnProperty("sequenceType")&&(s.sequenceType=I.onnx.TypeProto.Sequence.toObject(o.sequenceType,i),i.oneofs&&(s.value="sequenceType")),o.mapType!=null&&o.hasOwnProperty("mapType")&&(s.mapType=I.onnx.TypeProto.Map.toObject(o.mapType,i),i.oneofs&&(s.value="mapType")),o.denotation!=null&&o.hasOwnProperty("denotation")&&(s.denotation=o.denotation),o.sparseTensorType!=null&&o.hasOwnProperty("sparseTensorType")&&(s.sparseTensorType=I.onnx.TypeProto.SparseTensor.toObject(o.sparseTensorType,i),i.oneofs&&(s.value="sparseTensorType")),o.optionalType!=null&&o.hasOwnProperty("optionalType")&&(s.optionalType=I.onnx.TypeProto.Optional.toObject(o.optionalType,i),i.oneofs&&(s.value="optionalType")),s},e.prototype.toJSON=function(){return this.constructor.toObject(this,rt.util.toJSONOptions)},e.getTypeUrl=function(o){return o===void 0&&(o="type.googleapis.com"),o+"/onnx.TypeProto"},e.Tensor=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=0,t.prototype.shape=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=ft.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&s.uint32(8).int32(i.elemType),i.shape!=null&&Object.hasOwnProperty.call(i,"shape")&&I.onnx.TensorShapeProto.encode(i.shape,s.uint32(18).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof oe||(i=oe.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new I.onnx.TypeProto.Tensor;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=i.int32();break}case 2:{u.shape=I.onnx.TensorShapeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof oe||(i=new oe(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")&&!E.isInteger(i.elemType))return"elemType: integer expected";if(i.shape!=null&&i.hasOwnProperty("shape")){var s=I.onnx.TensorShapeProto.verify(i.shape);if(s)return"shape."+s}return null},t.fromObject=function(i){if(i instanceof I.onnx.TypeProto.Tensor)return i;var s=new I.onnx.TypeProto.Tensor;if(i.elemType!=null&&(s.elemType=i.elemType|0),i.shape!=null){if(typeof i.shape!="object")throw TypeError(".onnx.TypeProto.Tensor.shape: object expected");s.shape=I.onnx.TensorShapeProto.fromObject(i.shape)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=0,a.shape=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=i.elemType),i.shape!=null&&i.hasOwnProperty("shape")&&(a.shape=I.onnx.TensorShapeProto.toObject(i.shape,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,rt.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Tensor"},t}(),e.Sequence=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=ft.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&I.onnx.TypeProto.encode(i.elemType,s.uint32(10).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof oe||(i=oe.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new I.onnx.TypeProto.Sequence;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=I.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof oe||(i=new oe(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")){var s=I.onnx.TypeProto.verify(i.elemType);if(s)return"elemType."+s}return null},t.fromObject=function(i){if(i instanceof I.onnx.TypeProto.Sequence)return i;var s=new I.onnx.TypeProto.Sequence;if(i.elemType!=null){if(typeof i.elemType!="object")throw TypeError(".onnx.TypeProto.Sequence.elemType: object expected");s.elemType=I.onnx.TypeProto.fromObject(i.elemType)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=I.onnx.TypeProto.toObject(i.elemType,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,rt.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Sequence"},t}(),e.Map=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.keyType=0,t.prototype.valueType=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=ft.create()),i.keyType!=null&&Object.hasOwnProperty.call(i,"keyType")&&s.uint32(8).int32(i.keyType),i.valueType!=null&&Object.hasOwnProperty.call(i,"valueType")&&I.onnx.TypeProto.encode(i.valueType,s.uint32(18).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof oe||(i=oe.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new I.onnx.TypeProto.Map;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.keyType=i.int32();break}case 2:{u.valueType=I.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof oe||(i=new oe(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.keyType!=null&&i.hasOwnProperty("keyType")&&!E.isInteger(i.keyType))return"keyType: integer expected";if(i.valueType!=null&&i.hasOwnProperty("valueType")){var s=I.onnx.TypeProto.verify(i.valueType);if(s)return"valueType."+s}return null},t.fromObject=function(i){if(i instanceof I.onnx.TypeProto.Map)return i;var s=new I.onnx.TypeProto.Map;if(i.keyType!=null&&(s.keyType=i.keyType|0),i.valueType!=null){if(typeof i.valueType!="object")throw TypeError(".onnx.TypeProto.Map.valueType: object expected");s.valueType=I.onnx.TypeProto.fromObject(i.valueType)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.keyType=0,a.valueType=null),i.keyType!=null&&i.hasOwnProperty("keyType")&&(a.keyType=i.keyType),i.valueType!=null&&i.hasOwnProperty("valueType")&&(a.valueType=I.onnx.TypeProto.toObject(i.valueType,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,rt.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Map"},t}(),e.Optional=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=ft.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&I.onnx.TypeProto.encode(i.elemType,s.uint32(10).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof oe||(i=oe.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new I.onnx.TypeProto.Optional;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=I.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof oe||(i=new oe(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")){var s=I.onnx.TypeProto.verify(i.elemType);if(s)return"elemType."+s}return null},t.fromObject=function(i){if(i instanceof I.onnx.TypeProto.Optional)return i;var s=new I.onnx.TypeProto.Optional;if(i.elemType!=null){if(typeof i.elemType!="object")throw TypeError(".onnx.TypeProto.Optional.elemType: object expected");s.elemType=I.onnx.TypeProto.fromObject(i.elemType)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=I.onnx.TypeProto.toObject(i.elemType,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,rt.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Optional"},t}(),e.SparseTensor=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=0,t.prototype.shape=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=ft.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&s.uint32(8).int32(i.elemType),i.shape!=null&&Object.hasOwnProperty.call(i,"shape")&&I.onnx.TensorShapeProto.encode(i.shape,s.uint32(18).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof oe||(i=oe.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new I.onnx.TypeProto.SparseTensor;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=i.int32();break}case 2:{u.shape=I.onnx.TensorShapeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof oe||(i=new oe(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")&&!E.isInteger(i.elemType))return"elemType: integer expected";if(i.shape!=null&&i.hasOwnProperty("shape")){var s=I.onnx.TensorShapeProto.verify(i.shape);if(s)return"shape."+s}return null},t.fromObject=function(i){if(i instanceof I.onnx.TypeProto.SparseTensor)return i;var s=new I.onnx.TypeProto.SparseTensor;if(i.elemType!=null&&(s.elemType=i.elemType|0),i.shape!=null){if(typeof i.shape!="object")throw TypeError(".onnx.TypeProto.SparseTensor.shape: object expected");s.shape=I.onnx.TensorShapeProto.fromObject(i.shape)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=0,a.shape=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=i.elemType),i.shape!=null&&i.hasOwnProperty("shape")&&(a.shape=I.onnx.TensorShapeProto.toObject(i.shape,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,rt.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.SparseTensor"},t}(),e}(),r.OperatorSetIdProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.domain="",e.prototype.version=E.Long?E.Long.fromBits(0,0,!1):0,e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=ft.create()),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(10).string(t.domain),t.version!=null&&Object.hasOwnProperty.call(t,"version")&&o.uint32(16).int64(t.version),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof oe||(t=oe.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.OperatorSetIdProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.domain=t.string();break}case 2:{s.version=t.int64();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof oe||(t=new oe(t)),this.decode(t,t.uint32())},e.verify=function(t){return typeof t!="object"||t===null?"object expected":t.domain!=null&&t.hasOwnProperty("domain")&&!E.isString(t.domain)?"domain: string expected":t.version!=null&&t.hasOwnProperty("version")&&!E.isInteger(t.version)&&!(t.version&&E.isInteger(t.version.low)&&E.isInteger(t.version.high))?"version: integer|Long expected":null},e.fromObject=function(t){if(t instanceof I.onnx.OperatorSetIdProto)return t;var o=new I.onnx.OperatorSetIdProto;return t.domain!=null&&(o.domain=String(t.domain)),t.version!=null&&(E.Long?(o.version=E.Long.fromValue(t.version)).unsigned=!1:typeof t.version=="string"?o.version=parseInt(t.version,10):typeof t.version=="number"?o.version=t.version:typeof t.version=="object"&&(o.version=new E.LongBits(t.version.low>>>0,t.version.high>>>0).toNumber())),o},e.toObject=function(t,o){o||(o={});var i={};if(o.defaults)if(i.domain="",E.Long){var s=new E.Long(0,0,!1);i.version=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.version=o.longs===String?"0":0;return t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.version!=null&&t.hasOwnProperty("version")&&(typeof t.version=="number"?i.version=o.longs===String?String(t.version):t.version:i.version=o.longs===String?E.Long.prototype.toString.call(t.version):o.longs===Number?new E.LongBits(t.version.low>>>0,t.version.high>>>0).toNumber():t.version),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,rt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.OperatorSetIdProto"},e}(),r.OperatorStatus=function(){var e={},n=Object.create(e);return n[e[0]="EXPERIMENTAL"]=0,n[e[1]="STABLE"]=1,n}(),r.FunctionProto=function(){function e(n){if(this.input=[],this.output=[],this.attribute=[],this.attributeProto=[],this.node=[],this.opsetImport=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.input=E.emptyArray,e.prototype.output=E.emptyArray,e.prototype.attribute=E.emptyArray,e.prototype.attributeProto=E.emptyArray,e.prototype.node=E.emptyArray,e.prototype.docString="",e.prototype.opsetImport=E.emptyArray,e.prototype.domain="",e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ft.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)o.uint32(34).string(t.input[i]);if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)o.uint32(42).string(t.output[i]);if(t.attribute!=null&&t.attribute.length)for(var i=0;i<t.attribute.length;++i)o.uint32(50).string(t.attribute[i]);if(t.node!=null&&t.node.length)for(var i=0;i<t.node.length;++i)I.onnx.NodeProto.encode(t.node[i],o.uint32(58).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(66).string(t.docString),t.opsetImport!=null&&t.opsetImport.length)for(var i=0;i<t.opsetImport.length;++i)I.onnx.OperatorSetIdProto.encode(t.opsetImport[i],o.uint32(74).fork()).ldelim();if(t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(82).string(t.domain),t.attributeProto!=null&&t.attributeProto.length)for(var i=0;i<t.attributeProto.length;++i)I.onnx.AttributeProto.encode(t.attributeProto[i],o.uint32(90).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof oe||(t=oe.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.FunctionProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.name=t.string();break}case 4:{s.input&&s.input.length||(s.input=[]),s.input.push(t.string());break}case 5:{s.output&&s.output.length||(s.output=[]),s.output.push(t.string());break}case 6:{s.attribute&&s.attribute.length||(s.attribute=[]),s.attribute.push(t.string());break}case 11:{s.attributeProto&&s.attributeProto.length||(s.attributeProto=[]),s.attributeProto.push(I.onnx.AttributeProto.decode(t,t.uint32()));break}case 7:{s.node&&s.node.length||(s.node=[]),s.node.push(I.onnx.NodeProto.decode(t,t.uint32()));break}case 8:{s.docString=t.string();break}case 9:{s.opsetImport&&s.opsetImport.length||(s.opsetImport=[]),s.opsetImport.push(I.onnx.OperatorSetIdProto.decode(t,t.uint32()));break}case 10:{s.domain=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof oe||(t=new oe(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!E.isString(t.name))return"name: string expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o)if(!E.isString(t.input[o]))return"input: string[] expected"}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o)if(!E.isString(t.output[o]))return"output: string[] expected"}if(t.attribute!=null&&t.hasOwnProperty("attribute")){if(!Array.isArray(t.attribute))return"attribute: array expected";for(var o=0;o<t.attribute.length;++o)if(!E.isString(t.attribute[o]))return"attribute: string[] expected"}if(t.attributeProto!=null&&t.hasOwnProperty("attributeProto")){if(!Array.isArray(t.attributeProto))return"attributeProto: array expected";for(var o=0;o<t.attributeProto.length;++o){var i=I.onnx.AttributeProto.verify(t.attributeProto[o]);if(i)return"attributeProto."+i}}if(t.node!=null&&t.hasOwnProperty("node")){if(!Array.isArray(t.node))return"node: array expected";for(var o=0;o<t.node.length;++o){var i=I.onnx.NodeProto.verify(t.node[o]);if(i)return"node."+i}}if(t.docString!=null&&t.hasOwnProperty("docString")&&!E.isString(t.docString))return"docString: string expected";if(t.opsetImport!=null&&t.hasOwnProperty("opsetImport")){if(!Array.isArray(t.opsetImport))return"opsetImport: array expected";for(var o=0;o<t.opsetImport.length;++o){var i=I.onnx.OperatorSetIdProto.verify(t.opsetImport[o]);if(i)return"opsetImport."+i}}return t.domain!=null&&t.hasOwnProperty("domain")&&!E.isString(t.domain)?"domain: string expected":null},e.fromObject=function(t){if(t instanceof I.onnx.FunctionProto)return t;var o=new I.onnx.FunctionProto;if(t.name!=null&&(o.name=String(t.name)),t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.FunctionProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i)o.input[i]=String(t.input[i])}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.FunctionProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i)o.output[i]=String(t.output[i])}if(t.attribute){if(!Array.isArray(t.attribute))throw TypeError(".onnx.FunctionProto.attribute: array expected");o.attribute=[];for(var i=0;i<t.attribute.length;++i)o.attribute[i]=String(t.attribute[i])}if(t.attributeProto){if(!Array.isArray(t.attributeProto))throw TypeError(".onnx.FunctionProto.attributeProto: array expected");o.attributeProto=[];for(var i=0;i<t.attributeProto.length;++i){if(typeof t.attributeProto[i]!="object")throw TypeError(".onnx.FunctionProto.attributeProto: object expected");o.attributeProto[i]=I.onnx.AttributeProto.fromObject(t.attributeProto[i])}}if(t.node){if(!Array.isArray(t.node))throw TypeError(".onnx.FunctionProto.node: array expected");o.node=[];for(var i=0;i<t.node.length;++i){if(typeof t.node[i]!="object")throw TypeError(".onnx.FunctionProto.node: object expected");o.node[i]=I.onnx.NodeProto.fromObject(t.node[i])}}if(t.docString!=null&&(o.docString=String(t.docString)),t.opsetImport){if(!Array.isArray(t.opsetImport))throw TypeError(".onnx.FunctionProto.opsetImport: array expected");o.opsetImport=[];for(var i=0;i<t.opsetImport.length;++i){if(typeof t.opsetImport[i]!="object")throw TypeError(".onnx.FunctionProto.opsetImport: object expected");o.opsetImport[i]=I.onnx.OperatorSetIdProto.fromObject(t.opsetImport[i])}}return t.domain!=null&&(o.domain=String(t.domain)),o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.input=[],i.output=[],i.attribute=[],i.node=[],i.opsetImport=[],i.attributeProto=[]),o.defaults&&(i.name="",i.docString="",i.domain=""),t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.input&&t.input.length){i.input=[];for(var s=0;s<t.input.length;++s)i.input[s]=t.input[s]}if(t.output&&t.output.length){i.output=[];for(var s=0;s<t.output.length;++s)i.output[s]=t.output[s]}if(t.attribute&&t.attribute.length){i.attribute=[];for(var s=0;s<t.attribute.length;++s)i.attribute[s]=t.attribute[s]}if(t.node&&t.node.length){i.node=[];for(var s=0;s<t.node.length;++s)i.node[s]=I.onnx.NodeProto.toObject(t.node[s],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.opsetImport&&t.opsetImport.length){i.opsetImport=[];for(var s=0;s<t.opsetImport.length;++s)i.opsetImport[s]=I.onnx.OperatorSetIdProto.toObject(t.opsetImport[s],o)}if(t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.attributeProto&&t.attributeProto.length){i.attributeProto=[];for(var s=0;s<t.attributeProto.length;++s)i.attributeProto[s]=I.onnx.AttributeProto.toObject(t.attributeProto[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,rt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.FunctionProto"},e}(),r}();$c.exports=I});function jn(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function zo(r){return new TextDecoder().decode(r)}var nt,xn,Rs,Lt,qi,At,Yt,ue,Ro,_n,Tn,$n,qe=R(()=>{"use strict";Vi();xs();nt=Un(qn());Sn();xn=class{static arraysEqual(e,n){if(e.length!==n.length)return!1;for(let t=0;t<e.length;t++)if(e[t]!==n[t])return!1;return!0}},Rs=class{static preprocessInputShapes(e,n){let t=e.length===1?[1,e[0]]:e,o=n.length===1?[n[0],1]:n;return[t,o]}static postprocessOutputShape(e,n,t){n===1&&e.splice(e.length-2,1),t===1&&e.pop()}static calcMatMulShape(e,n){return e[1]!==n[0]?void 0:[e[0],n[1]]}},Lt=class r{static calcShape(e,n,t=!1){let o=e.length,i=n.length;if(o===0)return n;if(i===0)return e;let s=Math.max(e.length,n.length),a=new Array(s);if(t){if(o<2||i<2)return;let u=Rs.calcMatMulShape([e[o-2],e[o-1]],[n[i-2],n[i-1]]);if(u===void 0)return;[a[s-2],a[s-1]]=u}for(let u=t?3:1;u<=s;u++){let l=o-u<0?1:e[o-u],d=i-u<0?1:n[i-u];if(l!==d&&l>1&&d>1)return;a[s-u]=Math.max(l,d)}return a}static index(e,n){let t=new Array(n.length);return r.fillIndex(e,n,t),t}static fillIndex(e,n,t){let o=e.length-n.length;for(let i=0;i<n.length;i++)t[i]=e[o+i]%n[i]}static calc(e,n,t,o,i){let s=r.calcShape(e.dims,n.dims);if(s){if(o&&!ue.areEqual(s,e.dims))return;let a=ue.size(s),u=o?e:new mt(s,i||e.type);if(s.length===0)u.set([],t(e.get([]),n.get([])));else{let l=new Array(s.length),d=new Array(e.dims.length),p=new Array(n.dims.length),m=0,b=0,v=!1,w=!1;e.dims.length===0&&(m=e.get([]),v=!0),n.dims.length===0&&(b=n.get([]),w=!0);let A;for(let $=0;$<a;$++){A=$;for(let _=s.length-1;_>=0;_--)l[_]=A%s[_],A=Math.floor(A/s[_]);v||(r.fillIndex(l,e.dims,d),m=e.get(d)),w||(r.fillIndex(l,n.dims,p),b=n.get(p)),u.set(l,t(m,b))}}return u}}static isValidBroadcast(e,n){let t=e.length,o=n.length;if(t>o)return!1;for(let i=1;i<=t;i++)if(e[t-i]!==1&&e[t-i]!==n[o-i])return!1;return!0}static getBroadcastDims(e,n){let t=e.length,o=[];for(let i=0;i<t;i++){let s=t-1-i,a=e[s]||1;(n[n.length-1-i]||1)>1&&a===1&&o.unshift(s)}return o}},qi=class{static getShapeOfGemmResult(e,n,t,o,i){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let s,a,u;n?(s=e[1],a=e[0]):(s=e[0],a=e[1]);let l=-1;if(o?(u=t[0],l=1):(u=t[1],l=0),t[l]!==a)throw new Error("dimension mismatch");if(s<=0||u<=0||a<=0)throw new Error("invalid shape specified");if(i&&!Lt.isValidBroadcast(i,[s,u]))throw new Error("gemm: invalid bias shape for broadcast");return[s,u,a]}},At=class r{static tensorDataTypeFromProto(e){switch(e){case nt.onnx.TensorProto.DataType.INT8:return"int8";case nt.onnx.TensorProto.DataType.UINT8:return"uint8";case nt.onnx.TensorProto.DataType.BOOL:return"bool";case nt.onnx.TensorProto.DataType.INT16:return"int16";case nt.onnx.TensorProto.DataType.UINT16:return"uint16";case nt.onnx.TensorProto.DataType.INT32:return"int32";case nt.onnx.TensorProto.DataType.UINT32:return"uint32";case nt.onnx.TensorProto.DataType.FLOAT:return"float32";case nt.onnx.TensorProto.DataType.DOUBLE:return"float64";case nt.onnx.TensorProto.DataType.STRING:return"string";case nt.onnx.TensorProto.DataType.INT64:return"int32";case nt.onnx.TensorProto.DataType.UINT64:return"uint32";default:throw new Error(`unsupported data type: ${nt.onnx.TensorProto.DataType[e]}`)}}static tensorDataTypeStringToEnum(e){switch(e){case"int8":return nt.onnx.TensorProto.DataType.INT8;case"uint8":return nt.onnx.TensorProto.DataType.UINT8;case"bool":return nt.onnx.TensorProto.DataType.BOOL;case"int16":return nt.onnx.TensorProto.DataType.INT16;case"uint16":return nt.onnx.TensorProto.DataType.UINT16;case"int32":return nt.onnx.TensorProto.DataType.INT32;case"uint32":return nt.onnx.TensorProto.DataType.UINT32;case"float32":return nt.onnx.TensorProto.DataType.FLOAT;case"float64":return nt.onnx.TensorProto.DataType.DOUBLE;case"string":return nt.onnx.TensorProto.DataType.STRING;case"int64":return nt.onnx.TensorProto.DataType.INT64;case"uint64":return nt.onnx.TensorProto.DataType.UINT64;default:throw new Error(`unsupported data type: ${e}`)}}static tensorDimsFromProto(e){return e.map(n=>Hr.isLong(n)?n.toNumber():n)}static tensorValueTypeFromProto(e){return{tensorType:r.tensorDataTypeFromProto(e.elemType),shape:{dims:r.tensorDimsFromProto(e.shape.dim.map(n=>n.dimValue))}}}static tensorDimsFromORTFormat(e){let n=[];for(let t=0;t<e.dimsLength();t++)n.push(Yt.longToNumber(e.dims(t)));return n}static tensorAttributesFromORTFormat(e){let n=[];for(let t=0;t<e.attributesLength();t++)n.push(e.attributes(t));return n}},Yt=class{static longToNumber(e,n){return Hr.isLong(e)?e.toNumber():e instanceof B.Long?Hr.fromValue({low:e.low,high:e.high,unsigned:n??!1}).toNumber():e}static isLong(e){return Hr.isLong(e)||e instanceof B.Long}},ue=class r{static size(e){return r.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,n,e.length)}static sizeToDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,0,n)}static getSizeFromDimensionRange(e,n,t){let o=1;for(let i=n;i<t;i++){if(e[i]<=0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.");o*=e[i]}return o}static computeStrides(e){let n=e.length;if(n===0)return[];if(n===1)return[1];let t=new Array(n);t[n-1]=1,t[n-2]=e[n-1];for(let o=n-3;o>=0;--o)t[o]=t[o+1]*e[o+1];return t}static transpose(e){return e.slice().reverse()}static indicesToOffset(e,n,t){t===void 0&&(t=e.length);let o=0;for(let i=0;i<t;++i)o+=n[i]*e[i];return o}static offsetToIndices(e,n){let t=n.length;if(t===0)return[];if(t===1)return[e*n[0]];let o=new Array(n.length);for(let i=0;i<o.length-1;++i)o[i]=Math.floor(e/n[i]),e-=o[i]*n[i];return o[o.length-1]=e,o}static normalizeAxis(e,n){if(e<-n&&e>=n)throw new Error("unsupported axis for this operation.");return e<0?e+n:e}static normalizeAxes(e,n){return e.map(t=>this.normalizeAxis(t,n))}static incrementIndex(e,n,t){if(n.length===0||e.length===0)throw new Error("Index incrementing unsupported for scalar Tensor");if(t===void 0)t=n.length;else if(t<=0||t>n.length)throw new Error("Incorrect axis to increment on");for(let o=t-1;o>=0&&(e[o]++,!(e[o]<n[o]));--o)e[o]=0}static calculateReshapedDims(e,n){if(n.length===0){if(e.length===0||r.size(e)===1)return[];throw new Error("cannot reshape to a scalar Tensor")}let t=n.length,o=new Array(t),i=-1,s=1;for(let u=0;u<t;u++){if(n[u]<-1)throw new Error("a dimension in shape hints cannot be less than -1");if(n[u]===-1){if(i!==-1)throw new Error("at most one dimension in shape hints can be -1");i=u}else{if(n[u]===0){if(u>=e.length)throw new Error("the dimension with value zero exceeds the dimension size of the input tensor");o[u]=e[u]}else o[u]=n[u];s*=o[u]}}let a=r.size(e);if(i!==-1){if(a%s!==0)throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${e}] Output shape: [${n}]`);o[i]=a/s}else if(s!==a)throw new Error("reshapedDims and originalDims don't have matching sizes");return o}static sortBasedOnPerm(e,n){return n?n.map(t=>e[t]):e.slice().reverse()}static padShape(e,n){let t=e.length;return e.map((o,i)=>o+n[i]+n[i+t])}static areEqual(e,n){return e.length!==n.length?!1:e.every((t,o)=>t===n[o])}static validateDimsAndCalcSize(e){if(e.length>6)throw new TypeError("Only rank 0 to 6 is supported for tensor shape.");let n=1;for(let t of e){if(!Number.isInteger(t))throw new TypeError(`Invalid shape: ${t} is not an integer`);if(t<0||t>2147483647)throw new TypeError(`Invalid shape: length ${t} is not allowed`);n*=t}return n}static flattenShape(e,n){n<0&&(n+=e.length);let t=e.reduce((s,a)=>s*a,1),o=e.slice(n).reduce((s,a)=>s*a,1);return[t/o,o]}static squeezeShape(e,n){let t=new Array;n=r.normalizeAxes(n,e.length);for(let o=0;o<e.length;o++){let i=n.indexOf(o)>=0;if(i&&e[o]!==1)throw new Error("squeeze an axis of size different than 1");(n.length===0&&e[o]>1||n.length>0&&!i)&&t.push(e[o])}return t}static unsqueezeShape(e,n){let t=new Array(e.length+n.length);t.fill(0);for(let i=0;i<n.length;i++){let s=r.normalizeAxis(n[i],t.length);if(s>=t.length)throw new Error("'axes' has an out of range axis");if(t[s]!==0)throw new Error("'axes' has a duplicate axis");t[s]=1}let o=0;for(let i=0;i<t.length;i++)t[i]===0&&(t[i]=e[o++]);if(o!==e.length)throw new Error("the unsqueezed dimension could not be established");return t}},Ro=class r{static splitShape(e,n,t,o){if(t.length===0){if(!o)throw new Error("need to know number of outputs when the 'split' attribute is not specified");r.determineSplit(e[n],o,t)}let i=[],s=[0];for(let a=0;a<t.length;++a){a!==0&&s.push(s[a-1]+t[a-1]);let u=e.slice();u[n]=t[a],i.push(u)}return[i,s]}static determineSplit(e,n,t){if(e%n!==0)throw new Error("cannot split tensor to equal sized parts");for(let o=0;o<n;++o)t.push(e/n)}},_n=class r{static adjustPoolAttributes(e,n,t,o,i,s){if(!e&&t.length!==n.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let a=0;a<n.length-2;a++)a>=t.length?t.push(n[a+2]):t[a]=n[a+2];for(let a=0;a<t.length;a++)if(a<o.length){if(o[a]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let a=0;a<t.length;a++)if(a<i.length){if(i[a]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let a=0;a<t.length*2;a++)if(a<s.length){if(s[a]<0)throw new Error("pad should be greater than or equal to 1")}else s.push(0);for(let a=0;a<t.length;a++){if(t[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(s[a]>=t[a]||s[a+t.length]>=t[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,n,t,o,i,s){if(s){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let a=0;a<e.length-2;a++)r.adjustPadAndReturnShape(e[a+2],n[a],t[a],o[a],i,a,a+e.length-2,s)}}static computePoolOutputShape(e,n,t,o,i,s,a){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let u=[n[0],n[1]];return r.computeShapeHelper(e,n,u,t,o,i,s,a),u}static computeConvOutputShape(e,n,t,o,i,s,a){if(e.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let u=[e[0],n[0]];return r.computeShapeHelper(!1,e,u,t,o,i,s,a),u}static computeShapeHelper(e,n,t,o,i,s,a,u){if(e)for(let l=0;l<n.length-2;l++)t.push(1);else for(let l=0;l<n.length-2;l++)t.push(r.adjustPadAndReturnShape(n[l+2],o[l],i[l],s[l],a,l,l+n.length-2,u))}static adjustPadAndReturnShape(e,n,t,o,i,s,a,u){let l=t*(o-1)+1;if(u&&u!=="NOTSET")switch(u){case"VALID":return i[s]=0,i[a]=0,Math.floor((e-l)/n+1);case"SAME_LOWER":case"SAME_UPPER":if(t!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let p=((e+n-1)/n-1)*n+o-e;return i[s]=Math.floor(u==="SAME_LOWER"?(p+1)/2:p/2),i[a]=p-i[s],Math.floor((e+p-o)/n+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+i[s]+i[a]-l)/n+1)}},Tn=-34028234663852886e22,$n=34028234663852886e22});function X0(r){switch(r){case"bool":case"int8":case"uint8":return 1;case"int16":case"uint16":return 2;case"int32":case"uint32":case"float32":return 4;case"float64":return 8;default:throw new Error(`cannot calculate sizeof() on type ${r}`)}}function Sc(r){switch(r){case ke.onnx.TensorProto.DataType.UINT8:case ke.onnx.TensorProto.DataType.INT8:case ke.onnx.TensorProto.DataType.BOOL:return 1;case ke.onnx.TensorProto.DataType.UINT16:case ke.onnx.TensorProto.DataType.INT16:return 2;case ke.onnx.TensorProto.DataType.FLOAT:case ke.onnx.TensorProto.DataType.INT32:case ke.onnx.TensorProto.DataType.UINT32:return 4;case ke.onnx.TensorProto.DataType.INT64:case ke.onnx.TensorProto.DataType.DOUBLE:case ke.onnx.TensorProto.DataType.UINT64:return 8;default:throw new Error(`cannot calculate sizeof() on type ${ke.onnx.TensorProto.DataType[r]}`)}}function Z0(r,e){return new(Oc(e))(r)}function Oc(r){switch(r){case"bool":case"uint8":return Uint8Array;case"int8":return Int8Array;case"int16":return Int16Array;case"uint16":return Uint16Array;case"int32":return Int32Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"float32":return Float32Array;case"float64":return Float64Array;default:throw new Error("unspecified error")}}function Ms(r,e){if(e===ke.onnx.TensorProto.DataType.INT64||e===zs.TensorDataType.INT64){if(r.greaterThanOrEqual(2147483648)||r.lessThan(-2147483648))throw new TypeError("int64 is not supported")}else if(e===ke.onnx.TensorProto.DataType.UINT32||e===zs.TensorDataType.UINT32||e===ke.onnx.TensorProto.DataType.UINT64||e===zs.TensorDataType.UINT64){if(r.greaterThanOrEqual(4294967296)||r.lessThan(0))throw new TypeError("uint64 is not supported")}else throw new TypeError(`not a LONG type: ${ke.onnx.TensorProto.DataType[e]}`);return r.toNumber()}function Ic(r,e,n){switch(e){case ke.onnx.TensorProto.DataType.BOOL:case ke.onnx.TensorProto.DataType.UINT8:return r.getUint8(n);case ke.onnx.TensorProto.DataType.INT8:return r.getInt8(n);case ke.onnx.TensorProto.DataType.UINT16:return r.getUint16(n,!0);case ke.onnx.TensorProto.DataType.INT16:return r.getInt16(n,!0);case ke.onnx.TensorProto.DataType.FLOAT:return r.getFloat32(n,!0);case ke.onnx.TensorProto.DataType.INT32:return r.getInt32(n,!0);case ke.onnx.TensorProto.DataType.UINT32:return r.getUint32(n,!0);case ke.onnx.TensorProto.DataType.INT64:return Ms(Hr.fromBits(r.getUint32(n,!0),r.getUint32(n+4,!0),!1),e);case ke.onnx.TensorProto.DataType.DOUBLE:return r.getFloat64(n,!0);case ke.onnx.TensorProto.DataType.UINT64:return Ms(Hr.fromBits(r.getUint32(n,!0),r.getUint32(n+4,!0),!0),e);default:throw new Error(`cannot read from DataView for type ${ke.onnx.TensorProto.DataType[e]}`)}}var Ac,ke,zs,mt,Sn=R(()=>{"use strict";Ac=Un(gd());xs();Po();ke=Un(qn());qe();zs=ce.experimental.fbs,mt=class r{constructor(e,n,t,o,i,s=Ac.Guid.create()){this.dims=e;this.type=n;this.dataProvider=t;this.asyncDataProvider=o;this.cache=i;this.dataId=s;this.size=ue.validateDimsAndCalcSize(e);let a=this.size,u=t===void 0&&o===void 0&&i===void 0;if(i!==void 0&&i.length!==a)throw new RangeError("Input dims doesn't match data length.");if(n==="string"){if(i!==void 0&&(!Array.isArray(i)||!i.every(l=>typeof l=="string")))throw new TypeError("cache should be a string array");u&&(this.cache=new Array(a))}else{if(i!==void 0){let l=Oc(n);if(!(i instanceof l))throw new TypeError(`cache should be type ${l.name}`)}if(u){let l=new ArrayBuffer(a*X0(n));this.cache=Z0(l,n)}}}get data(){if(this.cache===void 0){let e=this.dataProvider(this.dataId);if(e.length!==this.size)throw new Error("Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.");this.cache=e}return this.cache}get stringData(){if(this.type!=="string")throw new TypeError("data type is not string");return this.data}get integerData(){switch(this.type){case"uint8":case"int8":case"uint16":case"int16":case"int32":case"uint32":case"bool":return this.data;default:throw new TypeError("data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)")}}get floatData(){switch(this.type){case"float32":case"float64":return this.data;default:throw new TypeError("data type is not float (float32, float64)")}}get numberData(){if(this.type!=="string")return this.data;throw new TypeError("type cannot be non-number (string)")}get(e){return this.data[ue.indicesToOffset(e,this.strides)]}set(e,n){this.data[ue.indicesToOffset(e,this.strides)]=n}async getData(){return this.cache===void 0&&(this.cache=await this.asyncDataProvider(this.dataId)),this.cache}get strides(){return this._strides||(this._strides=ue.computeStrides(this.dims)),this._strides}static fromProto(e){if(!e)throw new Error("cannot construct Value from an empty tensor");let n=At.tensorDataTypeFromProto(e.dataType),t=At.tensorDimsFromProto(e.dims),o=new r(t,n);if(n==="string")e.stringData.forEach((i,s)=>{o.data[s]=zo(i)});else if(e.rawData&&typeof e.rawData.byteLength=="number"&&e.rawData.byteLength>0){let i=o.data,s=new DataView(e.rawData.buffer,e.rawData.byteOffset,e.rawData.byteLength),a=Sc(e.dataType),u=e.rawData.byteLength/a;if(e.rawData.byteLength%a!==0)throw new Error("invalid buffer length");if(i.length!==u)throw new Error("buffer length mismatch");for(let l=0;l<u;l++){let d=Ic(s,e.dataType,l*a);i[l]=d}}else{let i;switch(e.dataType){case ke.onnx.TensorProto.DataType.FLOAT:i=e.floatData;break;case ke.onnx.TensorProto.DataType.INT32:case ke.onnx.TensorProto.DataType.INT16:case ke.onnx.TensorProto.DataType.UINT16:case ke.onnx.TensorProto.DataType.INT8:case ke.onnx.TensorProto.DataType.UINT8:case ke.onnx.TensorProto.DataType.BOOL:i=e.int32Data;break;case ke.onnx.TensorProto.DataType.INT64:i=e.int64Data;break;case ke.onnx.TensorProto.DataType.DOUBLE:i=e.doubleData;break;case ke.onnx.TensorProto.DataType.UINT32:case ke.onnx.TensorProto.DataType.UINT64:i=e.uint64Data;break;default:throw new Error("unspecific error")}if(i==null)throw new Error("failed to populate data from a tensorproto value");let s=o.data;if(s.length!==i.length)throw new Error("array length mismatch");for(let a=0;a<i.length;a++){let u=i[a];Hr.isLong(u)?s[a]=Ms(u,e.dataType):s[a]=u}}return o}static fromData(e,n,t){return new r(n,t,void 0,void 0,e)}static fromOrtTensor(e){if(!e)throw new Error("cannot construct Value from an empty tensor");let n=At.tensorDimsFromORTFormat(e),t=At.tensorDataTypeFromProto(e.dataType()),o=new r(n,t);if(t==="string")for(let i=0;i<e.stringDataLength();i++)o.data[i]=e.stringData(i);else if(e.rawDataArray()&&typeof e.rawDataLength()=="number"&&e.rawDataLength()>0){let i=o.data,s=new DataView(e.rawDataArray().buffer,e.rawDataArray().byteOffset,e.rawDataLength()),a=Sc(e.dataType()),u=e.rawDataLength()/a;if(e.rawDataLength()%a!==0)throw new Error("invalid buffer length");if(i.length!==u)throw new Error("buffer length mismatch");for(let l=0;l<u;l++){let d=Ic(s,e.dataType(),l*a);i[l]=d}}return o}}});function me(r){return r===1?J0:Q0}function Cc(r){let e=me(r);return`${e.version}
      precision highp float;
      ${e.attribute} vec3 position;
      ${e.attribute} vec2 textureCoord;

      ${e.varyingVertex} vec2 TexCoords;

      void main()
      {
          gl_Position = vec4(position, 1.0);
          TexCoords = textureCoord;
      }`}function Ec(r){let e=me(r);return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFrag} vec2 TexCoords;
    ${e.outputDeclaration}
    const vec2 halfCR = vec2(0.5, 0.5);

    // Custom vector types to handle higher dimenalities.
    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    `}function Pc(r,e){let n=me(r);return`
  void main() {
    int indices[${e}];
    toVec(TexCoords, indices);
    vec4 result = vec4(process(indices));
    ${n.output} = result;
  }
  `}var J0,Q0,it=R(()=>{"use strict";J0={version:"",attribute:"attribute",varyingVertex:"varying",varyingFrag:"varying",texture2D:"texture2D",output:"gl_FragColor",outputDeclaration:""},Q0={version:"#version 300 es",attribute:"in",varyingVertex:"out",varyingFrag:"in",texture2D:"texture",output:"outputColor",outputDeclaration:"out vec4 outputColor;"}});var Ve=R(()=>{"use strict"});async function Ls(r,e=t=>0,n){return new Promise((t,o)=>{let i=0,s=()=>{if(r()){t();return}i++;let a=e(i);if(n!=null&&i>=n){o();return}setTimeout(s,a)};s()})}function ji(r){return jn(typeof r<"u"&&r.length!==0,()=>"empty string found for sampler name"),"get"+r.charAt(0).toUpperCase()+r.slice(1)}function kc(r){return jn(typeof r<"u"&&r.length!==0,()=>"empty string found for sampler name"),"get"+r.charAt(0).toUpperCase()+r.slice(1)+"AtOutCoords"}function Kn(r,e){let n=JSON.parse(JSON.stringify(r));return n=e,n}function Yn(r,e){return e.map(n=>r[n]).join(", ")}function Nt(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function br(r=6){return["x","y","z","w","u","v"].slice(0,r)}var Sr=R(()=>{"use strict";qe()});function ev(r,e){return br(e).map(n=>`${r}.${n}`)}function Xn(r,e){return e===1?[r]:ev(r,e)}function Ir(){return`
    float getChannel(vec4 frag, int dim) {
      int modCoord = imod(dim, 2);
      return modCoord == 0 ? frag.r : frag.g;
    }

    float getChannel(vec4 frag, vec2 innerDims) {
      vec2 modCoord = mod(innerDims, 2.);
      return modCoord.x == 0. ?
        (modCoord.y == 0. ? frag.r : frag.g) :
        (modCoord.y == 0. ? frag.b : frag.a);
    }
  `}var In=R(()=>{"use strict";Sr()});function rv(r,e,n){if(r===0)return"false";if(r===1)return`rc > ${e[0]}`;let t="";for(let o=r-2;o<r;o++)t+=`${n[o]} >= ${e[o-r+2]}`,o<r-1&&(t+="||");return t}function nv(r,e){let n=r.length;if(n===0)return"getA(), 0, 0, 0";if(n===1)return`getA(rc),
            rc + 1 >= ${r[0]} ? 0. : getA(rc + 1),
            0, 0`;let t="r, c",o="r, cp1",i="rp1, c",s="rp1, cp1",a="";if(n>2)for(let u=0;u<n-2;++u)a=a+`${e[u]},`;return`getA(${a}${t}),
          rEdge ? 0. : getA(${a}${i}),
          cEdge ? 0. : getA(${a}${o}),
          rEdge || cEdge ? 0. : getA(${a}${s})`}function ov(r,e,n,t){return r===0||r===1?"":`
    int r = ${e[r-2]};
    int c = ${e[r-1]};
    int rp1 = ${e[r-2]} + 1;
    int cp1 = ${e[r-1]} + 1;
    bool rEdge = rp1 >= ${t};
    bool cEdge = cp1 >= ${n};
    `}var Dc,tv,Bc,Rc=R(()=>{"use strict";it();Ve();Sr();In();Dc={name:"pack",inputNames:["A"],inputTypes:[1]},tv=(r,e)=>{let n=me(r.session.backend.glContext.version),t=e.dims,o=t.length,i=e.dims.length,s=Nt(i),a=Xn("rc",i),u=ov(i,a,t[t.length-2],t[t.length-1]),l;o===0?l=[1,1]:o===1?l=[t[0],1]:l=[t[i-1],t[i-2]];let d=rv(i,l,a),p=nv(t,a),m=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${d}) {
            ${n.output} = vec4(0);
          } else {
            ${u}

            ${n.output} = vec4(${p});
          }
        }
      `;return{...Dc,hasMain:!0,output:{dims:e.dims,type:e.type,textureType:2},shaderSource:m}},Bc=(r,e)=>({...Dc,get:()=>tv(r,e)})});function Ns(r){if(r.length===0)return[1,1,1];let e=1;for(let n=0;n<r.length-2;++n)e*=r[n];return[e,r.length>1?r[r.length-2]:1,r[r.length-1]]}function Mc(r,e){let n=!1;return r.length===0||e.length===0?n=!0:r.length<2||e.length<2?n=r[r.length-1]===e[e.length-1]:n=r[r.length-1]===e[e.length-1]&&r[r.length-2]===e[e.length-2],n}function sv(r){let e=ue.computeStrides(r),n=["b","r","c"],t="index";return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e.map((i,s)=>{let a=`int ${n[s]} = ${t} / ${i}`,u=s===e.length-1?`int ${n[s+1]} = ${t} - ${n[s]} * ${i}`:`index -= ${n[s]} * ${i}`;return`${a}; ${u};`}).join("")}
      return ivec3(b, r, c);
    }
  `}function uv(r){let e=ue.computeStrides(r);return`
  int getFlattenedIndex(ivec3 coords) {
    // reverse y, z order
    return coords.x * ${e[0]} + coords.z * ${e[1]} + coords.y;
  }
`}var iv,av,zc,Lc=R(()=>{"use strict";qe();it();Ve();In();iv=r=>({name:"Reshape (packed)",inputTypes:[2],inputNames:["A"],cacheHint:`${r}`}),av=(r,e,n,t)=>{let o=e.dims,i=t,s="";for(let l=0;l<4;l++){let d="";switch(l){case 0:d="outputCoords = rc;";break;case 1:d="outputCoords = ivec3(rc.x, rc.y+1, rc.z);";break;case 2:d="outputCoords = ivec3(rc.x, rc.y, rc.z+1);";break;case 3:d="outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);";break;default:throw new Error}s+=`
        ${d}
        ${l>0?"if(outputCoords.y < rows && outputCoords.z < cols){":""}
          int flattenedIndex = getFlattenedIndex(outputCoords);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);
          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${l}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);

        ${l>0?"}":""}
      `}let a=me(r.session.backend.glContext.version),u=`
      ${sv(o)}
      ${uv(i)}
      ${Ir()}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.0);

        ivec3 outputCoords;
        int rows = ${i[2]};
        int cols = ${i[1]};

        ${s}
        ${a.output} = result;
      }
    `;return{...n,output:{dims:i,type:e.type,textureType:2},shaderSource:u,hasMain:!0}},zc=(r,e,n)=>{let t=iv(n);return{...t,get:()=>av(r,e,t,n)}}});var Fs,Nc=R(()=>{"use strict";it();Ve();Fs=(r,e)=>{let n=e.shape,t=me(r.session.backend.glContext.version),o=`
    const float FLOAT_MAX = 1.70141184e38;
    const float FLOAT_MIN = 1.17549435e-38;

    bool isNaN(float val) {
      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;
    }

    highp vec4 encodeAsUint8(highp float v) {
      if (isNaN(v)) {
        return vec4(255, 255, 255, 255);
      }

      highp float av = abs(v);

      if(av < FLOAT_MIN) {
        return vec4(0.0, 0.0, 0.0, 0.0);
      } else if(v > FLOAT_MAX) {
        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
      } else if(v < -FLOAT_MAX) {
        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
      }

      highp vec4 c = vec4(0,0,0,0);

      highp float e = floor(log2(av));
      highp float m = exp2(fract(log2(av))) - 1.0;

      c[2] = floor(128.0 * m);
      m -= c[2] / 128.0;
      c[1] = floor(32768.0 * m);
      m -= c[1] / 32768.0;
      c[0] = floor(8388608.0 * m);

      highp float ebias = e + 127.0;
      c[3] = floor(ebias / 2.0);
      ebias -= c[3] * 2.0;
      c[2] += floor(ebias) * 128.0;

      c[3] += 128.0 * step(0.0, -v);

      return c / 255.0;
    }

    void main() {
      float value = ${t.texture2D}(X,TexCoords).r;
      ${t.output} = encodeAsUint8(value);
    }`,i={name:"Uint8Encode",inputTypes:[0],inputNames:["X"],output:{dims:n,type:e.tensor.type,textureType:3},shaderSource:o,hasMain:!0};return r.executeProgram(i,[e.tensor])}});function dv(r,e){if(r===1)return"rc";let n="";for(let t=0;t<r;t++)n+=e[t],t<r-1&&(n+=",");return n}var Fc,lv,Vc,Uc=R(()=>{"use strict";it();Ve();Sr();In();Fc={name:"unpack",inputNames:["A"],inputTypes:[2]},lv=(r,e)=>{let n=e.dims.length,t=Xn("rc",n),o=t.slice(-2),i=Nt(n),s=Ir(),u=e.dims.length===0?"":dv(n,t),l=n<=1?"rc":`vec2(${o.join(",")})`,d=me(r.session.backend.glContext.version),p=`
    ${s}
    void main() {
      ${i} rc = getOutputCoords();

       // Sample the texture with the coords to get the rgba channel value.
       vec4 packedInput = getA(${u});

       ${d.output} = vec4(getChannel(packedInput, ${l}), 0, 0, 0);
     }
   `;return{...Fc,hasMain:!0,output:{dims:e.dims,type:e.type,textureType:0},shaderSource:p}},Vc=(r,e)=>({...Fc,get:()=>lv(r,e)})});var Ki,Mo,Yi,Lo=R(()=>{"use strict";rr();Ki=class{constructor(e,n=1){if(n===1)this.internalFormat=e.R32F,this.format=e.RED,this.textureType=e.FLOAT,this.channelSize=n;else if(n===4)this.internalFormat=e.RGBA32F,this.format=e.RGBA,this.textureType=e.FLOAT,this.channelSize=n;else throw new Error(`Invalid number of channels: ${n}`)}encode(e,n){let t,o;return e.constructor!==Float32Array&&(je.warning("Encoder","data was not of type Float32; creating new Float32Array"),o=new Float32Array(e)),n*this.channelSize>e.length?(je.warning("Encoder","Source data too small. Allocating larger array"),o=e,t=this.allocate(n*this.channelSize),o.forEach((i,s)=>t[s]=i)):(o=e,t=o),t}allocate(e){return new Float32Array(e*4)}decode(e,n){return this.channelSize===1?e.filter((o,i)=>i%4===0).subarray(0,n):e.subarray(0,n)}},Mo=class{constructor(e,n=1,t){if(n!==1&&n!==4)throw new Error(`Invalid number of channels: ${n}`);this.internalFormat=e.RGBA,this.format=e.RGBA,this.channelSize=n,this.textureType=t||e.FLOAT}encode(e,n){let t=e;return this.channelSize===1&&(je.verbose("Encoder","Exploding into a larger array"),t=this.allocate(n),e.forEach((o,i)=>t[i*4]=o)),t}allocate(e){return new Float32Array(e*4)}decode(e,n){return this.channelSize===1?e.filter((o,i)=>i%4===0).subarray(0,n):e.subarray(0,n)}},Yi=class{constructor(e,n=1){this.channelSize=4;if(n===1)this.internalFormat=e.ALPHA,this.format=e.ALPHA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=n;else if(n===4)this.internalFormat=e.RGBA,this.format=e.RGBA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=n;else throw new Error(`Invalid number of channels: ${n}`)}encode(e,n){return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}allocate(e){return new Uint8Array(e*this.channelSize)}decode(e,n){if(e instanceof Uint8Array)return e.subarray(0,n);throw new Error(`Invalid array type: ${e.constructor}`)}}});var No,Gc,Vs,Wc=R(()=>{"use strict";qe();Ve();No=(r,e,n)=>{let t=n===0||n===1?1:4,o=n===2,i=n===1||n===2,s=n===4?e.length-1:void 0,a=n===4?e.map((u,l)=>l===e.length-1?u*4:u):void 0;return Vs(r,e,t,a,{isPacked:o,reverseWH:i,breakAxis:s})},Gc=(r,e,n)=>{let t=No(r,e,n);return[t.width,t.height]},Vs=(r,e,n=1,t,o)=>{let i=!!(o&&o.isPacked),[s,a]=r.computeTextureWH(i&&t||e,o),u=e.length,l=e.slice(0);if(u===0&&(l=[1]),n===1)t=e;else if(i){if(n!==4)throw new Error("a packed texture must be 4-channel");t=e,u>0&&(l[u-1]=Math.ceil(l[u-1]/2)),u>1&&(l[u-2]=Math.ceil(l[u-2]/2))}else if(!t)throw new Error("Unpacked shape is needed when using channels > 1");return{width:s,height:a,channels:n,isPacked:i,shape:l,strides:ue.computeStrides(l),unpackedShape:t,reversedWH:o&&o.reverseWH}}});var fv,Xi,qc=R(()=>{"use strict";rr();Sn();qe();Rc();Lc();Nc();Uc();Lo();Wc();Ve();fv=(r,e)=>{let n=e.map(o=>`${o.unpackedShape.join(",")};${o.width}x${o.height}`).join("_"),t=r.name;return r.cacheHint&&(t+="["+r.cacheHint+"]"),t+=":"+n,t},Xi=class{constructor(e){this.session=e;this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map}calculateTextureWidthAndHeight(e,n){return Gc(this.session.layoutStrategy,e,n)}executeProgram(e,n){if(n.length<e.inputNames.length)throw new Error(`Input size mustn't be less than ${e.inputNames.length}.`);if(e.inputNames.length!==e.inputTypes.length)throw new Error("input names size does not match input types");let t=[];for(let l=0;l<e.inputNames.length;++l)t[l]=this.getOrCreateTextureData(n[l],e.inputTypes[l]);let o=fv(e,t),i=this.session.programManager.getArtifact(o),s=i?i.programInfo:typeof e.get=="function"?e.get():e,a=No(this.session.layoutStrategy,s.output.dims,s.output.textureType),u=this.createTextureData(a,s.output.type);return i||(i=this.session.programManager.build(s,t,u),this.session.programManager.setArtifact(o,i)),this.runProgram(i,t,u),u}run(e,n){return this.executeProgram(e,n).tensor}runProgram(e,n,t){for(let o=0;o<n.length;++o)if(!!n[o].isPacked!=(e.programInfo.inputTypes[o]===2))throw new Error(`input[${o}] property packed inconsistent`);if(!!t.isPacked!=(e.programInfo.output.textureType===2))throw new Error("output property packed inconsistent");this.session.programManager.run(e,n,t)}getOrCreateTextureData(e,n){let t=this.getTextureData(e.dataId,n===2);if(!t&&(t=this.getTextureData(e.dataId,n!==2),t))return n===2?this.pack(t):this.unpack(t);if(!t){let o=No(this.session.layoutStrategy,e.dims,n);if(n===4){let a=e.dims;if(a.length===4){let u=[a[0],Math.ceil(a[1]*a[2]*a[3]/4)],l=No(this.session.layoutStrategy,u,n),d=e.numberData;if(a[1]*a[2]*a[3]%4!==0){let p=a[0],m=a[1]*a[2]*a[3],b=Math.ceil(m*1/4)*4,v=p*b;d=new Float32Array(v);for(let w=0;w<p;++w){let A=w*m,$=w*b+w%1*m;d.set(e.numberData.subarray(A,A+m),$)}}return this.createTextureData(l,e.type,d,e,1)}}if(n===2){let i=Vs(this.session.layoutStrategy,e.dims,1,[],{reverseWH:!0}),s=this.createTextureData(i,e.type,e.numberData,e,1);t=this.pack(s)}else t=this.createTextureData(o,e.type,e.numberData,e,1)}return t}createTextureDataFromLayoutBindTensor(e,n,t,o){return this.createTextureData(e,n,t,o,1)}createTextureData(e,n,t,o,i){je.verbose("InferenceHandler",`Creating TextureData: layout:[${JSON.stringify(e)}]`);let s=this.session.textureManager.createTextureFromLayout(n,e,t,i);return this.createTextureDataFromTexture(e,n,s,o)}reshapeUnpacked(e,n){let t=this.getOrCreateTextureData(e,0),o={channels:t.channels,height:t.height,width:t.width,shape:n.length!==0?n:[1],strides:ue.computeStrides(n),unpackedShape:n};return this.createTextureDataFromTexture(o,e.type,t.texture).tensor}reshapePacked(e,n){let t=this.getOrCreateTextureData(e,2);if(Mc(e.dims,n)){let l={channels:t.channels,height:t.height,width:t.width,shape:n.length!==0?n:[1],strides:ue.computeStrides(n),unpackedShape:n,isPacked:!0};return this.createTextureDataFromTexture(l,e.type,t.texture).tensor}let o=Ns(e.dims),i=Ns(n),s=this.reshapePacked(e,o),a=this.run(zc(this,s,i),[s]);return this.reshapePacked(a,n)}cast(e,n){let t=this.getOrCreateTextureData(e,0);return this.createTextureDataFromTexture(t,n,t.texture).tensor}createTextureDataFromTexture(e,n,t,o,i){let s={...e,tensor:o||new mt(e.unpackedShape,n,a=>this.readTexture(s),async a=>this.readTextureAsync(s),void 0,i),texture:t};return this.setTextureData(s.tensor.dataId,s,e.isPacked),s}getTextureData(e,n=!1){return this.session.isInitializer(e)?this.session.getTextureData(e,n):n?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,n,t=!1){this.session.isInitializer(e)?this.session.setTextureData(e,n,t):(t?this.packedTextureDataCache:this.unpackedTextureDataCache).set(e,n)}isTextureLayoutCached(e,n=!1){return!!this.getTextureData(e.dataId,n)}dispose(){this.session.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(e=>this.session.textureManager.releaseTexture(e)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(e=>this.session.textureManager.releaseTexture(e)),this.unpackedTextureDataCache=new Map}readTexture(e){return e.isPacked?this.readTexture(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTexture(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat(Fs(this,e))}async readTextureAsync(e){return e.isPacked?this.readTextureAsync(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTextureAsync(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat(Fs(this,e))}pack(e){return this.executeProgram(Bc(this,e.tensor),[e.tensor])}unpack(e){return this.executeProgram(Vc(this,e.tensor),[e.tensor])}}});var Us,Ce,Tt=R(()=>{"use strict";Us=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},Ce=r=>new Us(r)});var jc,Kc,Yc,pv,hv,Xc=R(()=>{"use strict";Tt();it();Ve();jc={name:"BatchNormalization",inputNames:["A","Scale","B","Mean","Variance"],inputTypes:[0,0,0,0,0]},Kc=(r,e,n)=>(hv(e),[r.run({...jc,cacheHint:n.cacheKey,get:()=>pv(r,e,n)},e)]),Yc=r=>{let e=r.attributes.getFloat("epsilon",1e-5),n=r.attributes.getFloat("momentum",.9),t=r.attributes.getInt("spatial",1);return Ce({epsilon:e,momentum:n,spatial:t})},pv=(r,e,n)=>{let t=me(r.session.backend.glContext.version),o=e[0].dims.length,[i,s]=r.calculateTextureWidthAndHeight(e[1].dims,0),a=`
  float process(int[${o}] indices) {
    vec2 position = offsetToCoords(indices[1], ${i}, ${s});
    float scale = getColorAsFloat(${t.texture2D}(Scale, position));
    float mean = getColorAsFloat(${t.texture2D}(Mean, position));
    float variance = getColorAsFloat(${t.texture2D}(Variance, position));
    float b = getColorAsFloat(${t.texture2D}(B, position));

    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${n.epsilon})) ) + b;
  }`;return{...jc,output:{dims:e[0].dims,type:e[0].type,textureType:0},shaderSource:a}},hv=r=>{if(!r||r.length!==5)throw new Error("BatchNormalization requires 5 inputs.");let e=r[0],n=r[1],t=r[2],o=r[3],i=r[4];if(e.dims.length<3||n.dims.length!==1||t.dims.length!==1||o.dims.length!==1||i.dims.length!==1)throw new Error("invalid input shape.");if(n.dims[0]!==e.dims[1]||t.dims[0]!==e.dims[1]||o.dims[0]!==e.dims[1]||i.dims[0]!==e.dims[1])throw new Error("invalid input shape.");if(e.type!=="float32"&&e.type!=="float64"||n.type!=="float32"&&n.type!=="float64"||t.type!=="float32"&&t.type!=="float64"||o.type!=="float32"&&o.type!=="float64"||i.type!=="float32"&&i.type!=="float64")throw new Error("invalid input tensor types.")}});var Zi,ar,ae,Fo,Ji,qr=R(()=>{"use strict";Zi=class{constructor(e,n,t,o){this.glContext=e;this.programInfo=n;this.inputTextureLayouts=t;this.outputTextureLayout=o}},ar=class{constructor(e){this.context=e}},ae=class{constructor(e,n){this.routineBody=e;this.dependencies=n}},Fo=class{constructor(e,n,t){this.name=e;t?this.dependencies=t:this.dependencies=[],n&&(this.routineBody=n)}addDependency(e){e&&this.dependencies.push(e)}},Ji=class{static returnOrderedNodes(e){if(!e||e.length===0)return[];if(e.length===1)return e;let n=new Set,t=new Set,o=new Array;return this.createOrderedNodes(e,n,t,o),o}static createOrderedNodes(e,n,t,o){for(let i=0;i<e.length;++i)this.dfsTraverse(e[i],n,t,o)}static dfsTraverse(e,n,t,o){if(!e||t.has(e.name))return;if(n.has(e.name))throw new Error("Cyclic dependency detected. Can't topologically sort routines needed for shader.");n.add(e.name);let i=e.dependencies;if(i&&i.length>0)for(let s=0;s<i.length;++s)this.dfsTraverse(i[s],n,t,o);o.push(e),t.add(e.name),n.delete(e.name)}}});function gv(){let r="add_";return{body:`
  float ${r}(float a, float b) {
    return a + b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 + v2;
  }
  `,name:r,type:0}}function bv(){let r="div_";return{body:`
  float ${r}(float a, float b) {
    return a / b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 / v2;
  }
  `,name:r,type:0}}function yv(){let r="mul_";return{body:`
  float ${r}(float a, float b) {
    return a * b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 * v2;
  }
  `,name:r,type:0}}function vv(){let r="sub_";return{body:`
  float ${r}(float a, float b) {
    return a - b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 - v2;
  }
  `,name:r,type:0}}function wv(){let r="equal_";return{body:`
  float ${r}(float a, float b) {
    return float(a == b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4(equal(v1, v2));
  }
  `,name:r,type:0}}function xv(){let r="greater_";return{body:`
  float ${r}(float a, float b) {
    return float(a > b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4( v1.r > v2.r ,
      v1.g > v2.g,
      v1.b > v2.b,
      v1.a > v2.a );
  }
  `,name:r,type:0}}function _v(){let r="less_";return{body:`
  float ${r}(float a, float b) {
    return float(a < b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4( v1.r < v2.r ,
                v1.g < v2.g,
                v1.b < v2.b,
                v1.a < v2.a );
  }
  `,name:r,type:0}}function Tv(){let r="and_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) && bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r && b2.r ,
                b1.g && b2.g,
                b1.b && b2.b,
                b1.a && b2.a );
  }
  `,name:r,type:0}}function $v(){let r="or_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) || bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r || b2.r ,
                b1.g || b2.g,
                b1.b || b2.b,
                b1.a || b2.a );
  }
  `,name:r,type:0}}function Sv(){let r="xor_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) ^^ bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r ^^ b2.r ,
                b1.g ^^ b2.g,
                b1.b ^^ b2.b,
                b1.a ^^ b2.a );
  }
  `,name:r,type:0}}function Iv(){return Ov("pow")}function Av(){let r="prelu_";return{body:`
  float ${r}(float a, float b) {
    return a < 0.0 ? a * b: a;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4(
      v1.r < 0.0 ? v1.r * v2.r: v1.r,
      v1.g < 0.0 ? v1.g * v2.g: v1.g,
      v1.b < 0.0 ? v1.b * v2.b: v1.b,
      v1.a < 0.0 ? v1.a * v2.a: v1.a
      );
  }
  `,name:r,type:0}}function Ov(r){let e=`${r}_`;return{body:`
  float ${e}(float a, float b) {
    return ${r}(a, b);
  }
  vec4 ${e}(vec4 v1, vec4 v2) {
    return ${r}(v1, v2);
  }
  `,name:e,type:0}}var sr,Cv,Zc,Jc,Qc,ef,tf,rf,nf,of,af,sf,uf,lf,df=R(()=>{"use strict";qe();qr();it();Ve();sr=(r,e,n,t=e[0].type,o)=>{let i=r.session.pack?2:0;return{name:n.name,inputNames:["A","B"],inputTypes:[i,i],cacheHint:o,get:()=>Cv(r,e,n,t)}},Cv=(r,e,n,t=e[0].type)=>{let o=r.session.pack?2:0,i=!ue.areEqual(e[0].dims,e[1].dims),s=e[0].dims,a=r.session.pack;if(i){let d=Lt.calcShape(e[0].dims,e[1].dims,!1);if(!d)throw new Error("Can't perform binary op on the given tensors");s=d;let p=s.length,m=e[0].dims.length!==0?e[0].dims.length:1,b=e[1].dims.length!==0?e[1].dims.length:1,v=e[0].dims.length!==0?"bcastIndices_A(indices, aindices);":"aindices[0] = 0;",w=e[1].dims.length!==0?"bcastIndices_B(indices, bindices);":"bindices[0] = 0;",A=me(r.session.backend.glContext.version),$=a?`
      ${n.body}
      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();
        vec4 result = ${n.name}(a, b);
        ${A.output} = result;
      }`:`
      ${n.body}
      float process(int indices[${p}]) {
        int aindices[${m}];
        int bindices[${b}];
        ${v}
        ${w}
        return ${n.name}(_A(aindices), _B(bindices));
      }`;return{name:n.name,inputNames:["A","B"],inputTypes:[o,o],output:{dims:s,type:t,textureType:o},shaderSource:$,hasMain:a}}let u=me(r.session.backend.glContext.version),l=`
    ${n.body}
    void main() {
      vec4 v1 = ${u.texture2D}(A, TexCoords);
      vec4 v2 = ${u.texture2D}(B, TexCoords);
      vec4 result = ${n.name}(v1, v2);
      ${u.output} = result;
    }
    `;return{name:n.name,inputNames:["A","B"],inputTypes:[o,o],output:{dims:e[0].dims,type:t,textureType:o},shaderSource:l,hasMain:!0}},Zc=(r,e)=>[r.run(sr(r,e,gv()),e)],Jc=(r,e)=>[r.run(sr(r,e,Tv(),"bool"),e)],Qc=(r,e)=>[r.run(sr(r,e,bv()),e)],ef=(r,e)=>[r.run(sr(r,e,wv(),"bool"),e)],tf=(r,e)=>[r.run(sr(r,e,xv(),"bool"),e)],rf=(r,e)=>[r.run(sr(r,e,_v(),"bool"),e)],nf=(r,e)=>[r.run(sr(r,e,yv()),e)],of=(r,e)=>[r.run(sr(r,e,$v(),"bool"),e)],af=(r,e)=>[r.run(sr(r,e,Iv()),e)],sf=(r,e)=>[r.run(sr(r,e,Av()),e)],uf=(r,e)=>[r.run(sr(r,e,vv()),e)],lf=(r,e)=>[r.run(sr(r,e,Sv(),"bool"),e)]});var cf,ff,Pv,pf=R(()=>{"use strict";qe();cf=(r,e,n)=>(Pv(e),[r.cast(e[0],n)]),ff=r=>At.tensorDataTypeFromProto(r.attributes.getInt("to")),Pv=r=>{if(!r||r.length!==1)throw new Error("Cast requires 1 input.");if(r[0].type==="string")throw new Error("Invalid input type.")}});var kv,Dv,hf,Qi,mf=R(()=>{"use strict";it();Ve();Sr();In();kv=(r,e)=>({name:"Concat (packed)",inputNames:Array.from({length:r},(n,t)=>`X${t}`),inputTypes:Array(r).fill(2),cacheHint:e}),Dv=(r,e,n,t)=>{let o=n[0].dims.slice();if(t>=o.length||t<-1*o.length)throw new Error("axis specified for concat doesn't match input dimensionality");t<0&&(t=o.length+t);let i=o.slice(0);for(let L=1;L<n.length;L++){let F=n[L].dims.slice();for(let G=0;G<o.length;G++)if(G===t)i[t]+=F[G];else if(o[G]!==F[G])throw new Error("non concat dimensions must match")}let s=i.length,a=Xn("coords",s),u=Nt(s),l=Ir(),d=n.map(L=>L.dims),p=br(s),m=new Array(d.length-1);m[0]=d[0][t];for(let L=1;L<m.length;L++)m[L]=m[L-1]+d[L][t];let b=p[t],v=p.slice(-2),w=p.join(),A=`if (${b} < ${m[0]}) {
        return getChannel(
            getX0(${w}), vec2(${v.join()}));
        }`;for(let L=1;L<m.length;L++){let F=m[L-1];A+=`
            if (${b} < ${m[L]}  && ${b} >= ${m[L-1]}) {
              return getChannel(
                getX${L}(${Qi(p,b,F)}),
                vec2(${Qi(v,b,F)}));
            }`}let $=m.length,_=m[m.length-1];A+=`
            return getChannel(
              getX${$}(${Qi(p,b,_)}),
              vec2(${Qi(v,b,_)}));`;let O=me(r.session.backend.glContext.version),P=`
          ${l}
          float getValue(${p.map(L=>"int "+L)}) {
            ${A}
          }

          void main() {
            ${u} coords = getOutputCoords();
            int lastDim = coords.${p[s-1]};
            coords.${p[s-1]} = coords.${p[s-2]};
            coords.${p[s-2]} = lastDim;

            vec4 result = vec4(getValue(${a}), 0., 0., 0.);

            ${a[s-1]} = ${a[s-1]} + 1;
            if (${a[s-1]} < ${i[s-1]}) {
              result.g = getValue(${a});
            }

            ${a[s-2]} = ${a[s-2]} + 1;
            if (${a[s-2]} < ${i[s-2]}) {
              result.a = getValue(${a});
            }

            ${a[s-1]} = ${a[s-1]} - 1;
            if (${a[s-2]} < ${i[s-2]} &&
                ${a[s-1]} < ${i[s-1]}) {
              result.b = getValue(${a});
            }
            ${O.output} = result;
          }
        `;return{...e,output:{dims:i,type:n[0].type,textureType:2},shaderSource:P,hasMain:!0}},hf=(r,e,n)=>{let t=kv(e.length,n.cacheKey);return{...t,get:()=>Dv(r,t,e,n.axis)}},Qi=(r,e,n)=>{let t=r.indexOf(e);return r.map((i,s)=>s===t?`${i} - ${n}`:i).join()}});var gf,Bv,Rv,zv,bf,Mv,Lv,Nv,yf,Fv,vf=R(()=>{"use strict";Tt();Ve();mf();gf=(r,e,n)=>(Fv(e),r.session.pack&&e[0].dims.length>1?[r.run(hf(r,e,n),e)]:[r.run(zv(r,e,n),e)]),Bv=(r,e)=>({name:"Concat",inputNames:Array.from({length:r},(n,t)=>`X${t}`),inputTypes:Array(r).fill(0),cacheHint:e}),Rv=(r,e,n,t)=>{let o=n[0].dims.slice();if(t>=o.length||t<-1*o.length)throw new Error("axis specified for concat doesn't match input dimensionality");t<0&&(t=o.length+t);let i=o.slice(0);for(let b=1;b<n.length;b++){let v=n[b].dims.slice();for(let w=0;w<o.length;w++)if(w===t)i[t]+=v[w];else if(o[w]!==v[w])throw new Error("non concat dimensions must match")}let s=i.length,a=new Array(n.length),u=0;for(let b=0;b<a.length;++b)u+=n[b].dims[t],a[b]=u;let l="";n.length<5?l=bf(a):l=Mv(a);let d=Lv(n.length,s),p=Nv(a),m=`
        ${d}
        ${p}
        ${l}
        float process(int indices[${s}]) {
          int textureIndex = getTextureWhereDataResides (indices[${t}]);

          if(textureIndex != 0) {
            indices[${t}] = indices[${t}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));
          }

          return fetchDataFromCorrectTexture(textureIndex, indices);
        }`;return{...e,output:{dims:i,type:n[0].type,textureType:0},shaderSource:m}},zv=(r,e,n)=>{let t=Bv(e.length,n.cacheKey);return{...t,get:()=>Rv(r,t,e,n.axis)}},bf=r=>`int getTextureWhereDataResides(int index) {
      ${r.map((n,t)=>`if(index<${n}) {return ${t};}
`).join("")}
    }`,Mv=r=>bf(r),Lv=(r,e)=>{let n=[`float fetchDataFromCorrectTexture(int textureIndex, int indices[${e}]) {`];for(let t=0;t<r;++t)t===0?n.push(`	if (textureIndex == ${t}) { return _X${t}(indices); }`):t===r-1?n.push(`	else { return _X${t}(indices); }`):n.push(`	else if (textureIndex == ${t}) { return _X${t}(indices); }`);return n.push("	}"),n.join(`
`)},Nv=r=>{let e=["int getSizeInConcatAxisValueFromIndex(int index) {"];for(let n=0;n<r.length;++n)n===0?e.push(`	if (index == ${n}) { return ${r[n]}; }`):n===r.length-1?e.push(`	else { return ${r[n]}; }`):e.push(`	else if (index == ${n}) { return ${r[n]}; }`);return e.push("	}"),e.join(`
`)},yf=r=>Ce({axis:r.attributes.getInt("axis")}),Fv=r=>{if(!r||r.length<1)throw new Error("too few inputs");let e=r[0].type,n=r[0].dims.length;if(e==="string")throw new Error("string tensor is not supported yet");for(let t of r){if(t.type!==e)throw new Error("input tensors should be one type");if(t.dims.length!==n)throw new Error("input tensors should have the same shape")}}});function Vv(){return ur("abs")}function Uv(){return ur("acos")}function Gv(){return ur("asin")}function Wv(){return ur("atan")}function Hv(){return ur("ceil")}function qv(){return ur("cos")}function jv(r){let e="elu";return{body:`
  const float alpha = float(${r});

  float ${e}_(float a) {
    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;
  }
  vec4 ${e}_(vec4 v) {
    return vec4(${e}_(v.x), ${e}_(v.y), ${e}_(v.z), ${e}_(v.w));
  }
  `,name:e,type:0}}function Kv(){return ur("exp")}function Yv(){return ur("floor")}function Gs(r,e){let n="clip";return{body:`
  const float min = float(${r});
  const float max = float(${e});

  float ${n}_(float a) {
    return clamp(a, min, max);
  }
  vec4 ${n}_(vec4 v) {
    return clamp(v, min, max);
  }
  `,name:n,type:0}}function Xv(){let r="indentity";return{body:`
  float ${r}_(float a) {
    return a;
  }
  vec4 ${r}_(vec4 v) {
    return v;
  }
  `,name:r,type:0}}function Zv(r){let e="leakyRelu";return{body:`
  const float alpha = float(${r});

  float ${e}_(float a) {
    return a < 0.0 ? a * alpha : a;
  }
  vec4 ${e}_(vec4 v) {
    return vec4(${e}_(v.x), ${e}_(v.y), ${e}_(v.z), ${e}_(v.w));
  }
  `,name:e,type:0}}function Jv(){return ur("log")}function Qv(){let r="neg";return{body:`
  float ${r}_(float a) {
    return -a;
  }
  vec4 ${r}_(vec4 v) {
    return -v;
  }
  `,name:r,type:0}}function ew(){let r="not";return{body:`
  float ${r}_(float a) {
    return float( ! bool(a) );
  }
  bool ${r}_(bool a) {
    return !a;
  }
  vec4 ${r}_(vec4 v) {
    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));
  }
  bvec4 ${r}_(bvec4 v) {
    return bvec4(!v.x, !v.y, !v.z, !v.w);
  }
  `,name:r,type:0}}function tw(){return ur("sin")}function Ws(){let r="relu";return{body:`
  float ${r}_(float a) {
    return max( a, 0.0 );
  }
  vec4 ${r}_(vec4 v) {
    return max( v, 0.0 );
  }
  `,name:r,type:0}}function Hs(){let r="sigmoid";return{body:`
  float ${r}_(float a) {
    return 1.0 / (1.0 + exp(-a));
  }
  vec4 ${r}_(vec4 v) {
    return 1.0 / (1.0 + exp(-v));
  }
  `,name:r,type:0}}function rw(){return ur("sqrt")}function nw(){return ur("tan")}function ow(){let r="tanh";return{body:`
  float ${r}_(float a) {
    a = clamp(a, -10., 10.);
    a = exp(2.*a);
    return (a - 1.) / (a + 1.);
  }
  vec4 ${r}_(vec4 v) {
    v = clamp(v, -10., 10.);
    v = exp(2.*v);
    return (v - 1.) / (v + 1.);
  }
  `,name:r,type:0}}function ur(r){return{body:`
  float ${r}_(float a) {
    return ${r}(a);
  }
  vec4 ${r}_(vec4 v) {
    return ${r}(v);
  }
  `,name:r,type:0}}var iw,pt,wf,xf,_f,Tf,qs,$f,Sf,aw,If,Af,Of,Cf,Ef,Pf,js,kf,Df,Bf,Rf,zf,Mf,Lf,Nf,Ff,Vf,Uf,Ks=R(()=>{"use strict";Tt();qe();qr();it();Ve();iw=(r,e,n,t)=>{let o=r.session.pack?2:0,i=me(r.session.backend.glContext.version);return{...e,output:{dims:n.dims,type:n.type,textureType:o},shaderSource:`
     ${t.body}
     void main() {
       vec4 v = ${i.texture2D}(A, TexCoords);
       v = ${t.name}_(v);
       ${i.output} = v;
     }
     `,hasMain:!0}},pt=(r,e,n,t)=>{let o=r.session.pack?2:0,i={name:n.name,inputTypes:[o],inputNames:["A"],cacheHint:t};return{...i,get:()=>iw(r,i,e,n)}},wf=(r,e)=>[r.run(pt(r,e[0],Vv()),e)],xf=(r,e)=>[r.run(pt(r,e[0],Uv()),e)],_f=(r,e)=>[r.run(pt(r,e[0],Gv()),e)],Tf=(r,e)=>[r.run(pt(r,e[0],Wv()),e)],qs=(r,e,n)=>[r.run(pt(r,e[0],Gs(n.min,n.max),n.cacheKey),e)],$f=r=>Ce({min:r.attributes.getFloat("min",Tn),max:r.attributes.getFloat("max",$n)}),Sf=(r,e)=>{let n=aw(r,e);return qs(r,[e[0]],n)},aw=(r,e)=>{if(e.length>=3&&(!r.session.isInitializer(e[1].dataId)||!r.session.isInitializer(e[2].dataId)))throw new Error("dynamic clip attributes are not allowed");let n=e.length>=3?e[1].numberData[0]:Tn,t=e.length>=3?e[2].numberData[0]:$n;return Ce({min:n,max:t})},If=(r,e)=>[r.run(pt(r,e[0],Hv()),e)],Af=(r,e)=>[r.run(pt(r,e[0],qv()),e)],Of=(r,e,n)=>[r.run(pt(r,e[0],jv(n.alpha),n.cacheKey),e)],Cf=r=>Ce({alpha:r.attributes.getFloat("alpha",1)}),Ef=(r,e)=>[r.run(pt(r,e[0],Kv()),e)],Pf=(r,e)=>[r.run(pt(r,e[0],Yv()),e)],js=(r,e)=>[r.run(pt(r,e[0],Xv()),e)],kf=(r,e,n)=>[r.run(pt(r,e[0],Zv(n.alpha),n.cacheKey),e)],Df=r=>Ce({alpha:r.attributes.getFloat("alpha",.01)}),Bf=(r,e)=>[r.run(pt(r,e[0],Jv()),e)],Rf=(r,e)=>[r.run(pt(r,e[0],Qv()),e)],zf=(r,e)=>[r.run(pt(r,e[0],ew()),e)],Mf=(r,e)=>[r.run(pt(r,e[0],Ws()),e)],Lf=(r,e)=>[r.run(pt(r,e[0],Hs()),e)],Nf=(r,e)=>[r.run(pt(r,e[0],tw()),e)],Ff=(r,e)=>[r.run(pt(r,e[0],rw()),e)],Vf=(r,e)=>[r.run(pt(r,e[0],nw()),e)],Uf=(r,e)=>[r.run(pt(r,e[0],ow()),e)]});function Ar(r){let e;switch(r.activation){case"Relu":e=Ws();break;case"Sigmoid":e=Hs();break;case"Clip":e=Gs(r.clipMin,r.clipMax);break;default:return{activationFunction:"",applyActivation:""}}let n=e.name,t=e.body,o=`value = ${n}_(value);`;return{activationFunction:t,applyActivation:o}}var Zn,An=R(()=>{"use strict";qe();Ks();Zn=r=>{let e=r.getString("activation","");if(e==="Clip"){let[n,t]=r.getFloats("activation_params",[Tn,$n]);return{activation:e,clipMax:t,clipMin:n,activationCacheKey:`${e}:${n},${t}`}}return{activation:e,activationCacheKey:e}}});var uw,lw,Gf,Wf=R(()=>{"use strict";rr();it();Ve();ea();An();uw=(r,e)=>({name:"GroupedConv",inputNames:r?["X","W","Bias"]:["X","W"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e}),lw=(r,e,n,t)=>{let i=e.length>2?"value += getBias(output_channel);":"",s=e[0].dims.slice(),a=e[1].dims.slice(),u=a[0]/t.group;je.verbose("GroupedConv",`autpPad:${t.autoPad}, dilations:${t.dilations}, group:${t.group}, kernelShape:${t.kernelShape}, pads:${t.pads}, strides:${t.strides}`);let l=Jn(s,a,t.dilations,t.pads,t.strides),d=me(r.session.backend.glContext.version),{activationFunction:p,applyActivation:m}=Ar(t),b=`
  const ivec2 strides = ivec2(${t.strides[0]}, ${t.strides[1]});
  const ivec2 pads = ivec2(${t.pads[0]}, ${t.pads[1]});
  ${p}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;
    ivec2 xRCCorner = coords.zw * strides - pads;
    int group_id = output_channel / ${u};

    float value = 0.0;
    for (int wInChannel = 0; wInChannel < ${a[1]}; wInChannel++) {
      int input_channel = group_id * ${a[1]} + wInChannel;
      for (int wHeight = 0; wHeight < ${a[2]}; wHeight++) {
        int xHeight = xRCCorner.x + wHeight * ${t.dilations[0]};

        if (xHeight < 0 || xHeight >= ${s[2]}) {
          continue;
        }

        for (int wWidth = 0; wWidth < ${a[3]}; wWidth++) {
          int xWidth = xRCCorner.y + wWidth * ${t.dilations[1]};
          if (xWidth < 0 || xWidth >= ${s[3]}) {
            continue;
          }

          float xVal = getX(batch, input_channel, xWidth, xHeight);
          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);
          value += xVal*wVal;
        }
      }
    }
    ${i}
    ${m}
    ${d.output} = vec4(value, .0, .0, .0);
  }
`;return{...n,output:{dims:l,type:e[0].type,textureType:0},shaderSource:b,hasMain:!0}},Gf=(r,e,n)=>{let t=uw(e.length>2,n.cacheKey);return{...t,get:()=>lw(r,e,t,n)}}});var dw,cw,Hf,qf=R(()=>{"use strict";it();Ve();In();dw=r=>({name:"Im2Col (packed)",inputNames:["A"],inputTypes:[2],cacheHint:r}),cw=(r,e,n,t,o,i)=>{let s=n.dims,a=t.dims,u=2,l=3,d=o.length,p=[a[1]*a[2]*a[3],o[2]*o[3]],m=a[2]*a[3],b=Ir(),v=me(r.session.backend.glContext.version),w="";for(let $=0;$<=1;$++)for(let _=0;_<=1;_++)w+=`
            blockIndex = rc.x + ${_};
            pos = rc.y + ${$};

            if(blockIndex < ${p[1]} && pos < ${p[0]}) {
              offsetY = int(blockIndex / (${o[d-1]})) * ${i.strides[0]} -
                ${i.pads[0]};
              d0 = offsetY + ${i.dilations[0]} * (imod(pos, ${m}) / ${a[2]});

              if(d0 < ${s[u]} && d0 >= 0) {
                offsetX = imod(blockIndex, ${o[d-1]}) * ${i.strides[1]} -
                  ${i.pads[1]};
                d1 = offsetX + ${i.dilations[1]} * imod(imod(pos, ${m}), ${a[2]});

                if(d1 < ${s[l]} && d1 >= 0) {

                  ch = int(float(pos)/ ${m}.);
                    innerDims = vec2(d0, d1);
                    result[${$*2+_}] = getChannel(
                      getA(0, ch, int(innerDims.x),
                      int(innerDims.y)), innerDims);
                }
              }
            }

          `;let A=`
      ${b}

      void main() {
        ivec2 rc = getOutputCoords();
          vec4 result = vec4(0.0);
          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
          vec2 innerDims;
          ${w}
          ${v.output} = result;
      }
            `;return{...e,output:{dims:p,type:n.type,textureType:2},shaderSource:A,hasMain:!0}},Hf=(r,e,n,t,o)=>{let i=dw(o.cacheKey);return{...i,get:()=>cw(r,i,e,n,t,o)}}});function pw(r,e,n){let t=e[0].dims,o=e[1].dims,i=Lt.calcShape(t,o,!0);if(!i)throw new Error("Can't use matmul on the given tensors");let s=Nt(i.length),a=br(),{activationFunction:u,applyActivation:l}=Ar(n),d=e.length>2,p=d?"value += getBiasForMatmul();":"",m=d?`${Xs(s,a,e[2].dims,i,!1)}`:"",b=i.length,v=t.length,w=o.length,A=t[t.length-1],$=`
    ${u}
    ${m}
    float process(int indices[${b}]) {
        int a[${v}];
        int b[${w}];
        bcastMatmulIndices_A(indices, a);
        bcastMatmulIndices_B(indices, b);

        float value;
        for (int k=0; k<${A}; ++k) {
            a[${v-1}] = k;
            b[${w-2}] = k;
            value += _A(a) * _B(b);
        }
        ${p}
        ${l}
        return value;
    }`;return{...r,output:{dims:i,type:e[0].type,textureType:0},shaderSource:$}}function Ys(r,e){let n=fw(r.length>2,e.activationCacheKey);return{...n,get:()=>pw(n,r,e)}}function Xs(r,e,n,t,o){let i="",s=n.length,a=t.length,u=a-s;a<2&&s>0?i="coords":i=n.map((w,A)=>`coords.${e[A+u]}`).join(", ");let d=Lt.getBroadcastDims(n,t).map(w=>`coords.${e[w+u]} = 0;`).join(`
`),m=ue.size(n)===1,b="vec4(outputValue.xx, outputValue.yy)";return m&&(b="vec4(outputValue.x)"),o?`
vec4 getBiasForMatmul() {
  ${r} coords = getOutputCoords();
  ${d}
  vec4 outputValue = getBias(${i});
  return ${b};
}`:`
float getBiasForMatmul() {
  ${r} coords = getOutputCoords();
  ${d}
  return getBias(coords.x);
}`}var jf,Kf,fw,hw,ta=R(()=>{"use strict";qe();Ve();Sr();An();Zs();jf=(r,e,n)=>(hw(e),r.session.pack?[r.run(ra(r,e,n),e)]:[r.run(Ys(e,n),e)]),Kf=r=>Zn(r.attributes),fw=(r,e)=>({name:"MatMul",inputNames:r?["A","B","Bias"]:["A","B"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e});hw=r=>{if(!r||r.length!==2)throw new Error("MatMul requires 2 inputs.");if(r[0].dims[r[0].dims.length-1]!==r[1].dims[r[1].dims.length-2])throw new Error("shared dimension does not match.");if(r[0].type!=="float32"&&r[0].type!=="float64"||r[1].type!=="float32"&&r[1].type!=="float64")throw new Error("inputs should be float type");if(r[0].type!==r[1].type)throw new Error("inputs types should match")}});function bw(r,e,n,t){let o=[],i=[],s=n[0].dims,a=n[1].dims,u=s.length,l=a.length,d=t.length,p=d-u,m=d-l;o=s.map((O,P)=>`coords.${e[P+p]}`),o[u-1]="i*2",o.join(", "),i=a.map((O,P)=>`coords.${e[P+m]}`),i[l-2]="i*2",i.join(", ");let b=Lt.getBroadcastDims(s,t),v=Lt.getBroadcastDims(a,t),w=b.map(O=>`coords.${e[O+p]} = 0;`).join(`
`),A=v.map(O=>`coords.${e[O+m]} = 0;`).join(`
`),$=`int lastDim = coords.${e[d-1]};
  coords.${e[d-1]} = coords.${e[d-2]};
  coords.${e[d-2]} = lastDim;`;return`
vec4 getAAtOutCoordsMatmul(int i) {
  ${r} coords = getOutputCoords();
  ${$}
  ${w}
  vec4 outputValue = getA(${o});
  return outputValue;
}

vec4 getBAtOutCoordsMatmul(int i) {
  ${r} coords = getOutputCoords();
  ${$}
  ${A}
  vec4 outputValue = getB(${i});
  return outputValue;
}`}function yw(r,e){let n="";for(let t=0;t<e-2;t++)n+=`rc.${r[t]}, `;return n+=`rc.${r[e-2]}, i*2`,n}function vw(r,e){let n="";for(let t=0;t<e-2;t++)n+=`rc.${r[t]}, `;return n+=`i*2, rc.${r[e-1]}`,n}var mw,gw,ra,Zs=R(()=>{"use strict";qe();it();Ve();Sr();An();ta();mw=(r,e)=>({name:"MatMul (packed)",inputNames:r?["A","B","Bias"]:["A","B"],inputTypes:r?[2,2,2]:[2,2],cacheHint:e}),gw=(r,e,n,t)=>{let o=n.length>2,i=o?"value += getBiasForMatmul();":"",s=n[0].dims,a=n[1].dims,u=Lt.calcShape(s,a,!0),l=!ue.areEqual(n[0].dims,n[1].dims);if(!u)throw new Error("Can't use matmul on the given tensors");let d=s[s.length-1],p=Math.ceil(d/2),m=s.length,b=a.length,v=me(r.session.backend.glContext.version),w=Nt(u.length),A=u.length,$=br(),{activationFunction:_,applyActivation:O}=Ar(t),P=o?`${Xs(w,$,n[2].dims,u,!0)}`:"",L=l?`${bw(w,$,n,u)}`:"",F=l?"getAAtOutCoordsMatmul(i)":`getA(${yw($,m)})`,G=l?"getBAtOutCoordsMatmul(i)":`getB(${vw($,b)})`,J=l?"":`${w} rc =
          getOutputCoords(); int lastDim = rc.${$[A-1]}; rc.${$[A-1]} =
          rc.${$[A-2]}; rc.${$[A-2]} = lastDim;
      `,le=`
            ${L}
            ${P}
            ${_}
            void main() {
              ${J}

              vec4 value = vec4(0);
              for (int i = 0; i < ${p}; i++) {
                vec4 a = ${F};
                vec4 b = ${G};

                value += (a.rrbb * b.rgrg);
                value += (a.ggaa * b.baba);
              }
              ${i}
              ${O}
              ${v.output} = value;
            }`;return{...e,output:{dims:u,type:n[0].type,textureType:2},shaderSource:le,hasMain:!0}},ra=(r,e,n)=>{let t=mw(e.length>2,n.activationCacheKey);return{...t,get:()=>gw(r,t,e,n)}}});var Yf,Xf=R(()=>{"use strict";ea();qf();Zs();Yf=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=Jn(t,o,n.dilations,n.pads,n.strides),s=r.run(Hf(r,e[0],e[1],i,n),[e[0]]),a=r.reshapePacked(e[1],[o[0],o[1]*o[2]*o[3]]),u=e.length===3?[a,s,e[2]]:[a,s],l=r.run(ra(r,u,n),u);return r.reshapePacked(l,i)}});var ww,xw,Zf,Js,Qs=R(()=>{"use strict";Ve();ww=r=>({name:"Im2Col",inputNames:["X"],inputTypes:[0],cacheHint:r}),xw=(r,e,n,t,o,i)=>{let s=n.dims,a=t.dims,u=o.length,l=Js(s,a,o,4),d=`
        const int XC = ${s[1]};
        const int XH = ${s[2]};
        const int XW = ${s[3]};
        const int KH = ${i.kernelShape[0]};
        const int KW = ${i.kernelShape[1]};
        const int dilationH = ${i.dilations[0]};
        const int dilationW = ${i.dilations[1]};
        const int strideH = ${i.strides[0]};
        const int strideW = ${i.strides[1]};
        const int padH = ${i.pads[0]};
        const int padW = ${i.pads[1]};
        const int KHKW = KH*KW;
        const int XCKHKW = XC * KHKW;
        const int outputChannels = 4;
        vec4 process(int indices[${u}]) {
          int b  = indices[0]; // batch size
          int oh = indices[1] * strideH - padH; //output height
          int ow = indices[2] * strideW - padW; //output width
          int p = indices[3] * outputChannels; //patch
          vec4 value = vec4(0.0);
          for(int i=0; i < outputChannels; ++i) {
            if(p < XCKHKW) {
              int patchC = p / KHKW;
              int patchH = (p - patchC*KHKW) / KW;
              int patchW = (p - patchC*KHKW) - patchH * KW;
              int xh2 = oh + patchH * dilationH;
              int xw2 = ow + patchW * dilationW;
              int x[${s.length}];
              x[0] = b;
              x[1] = patchC;
              x[2] = xh2;
              x[3] = xw2;
              if(xh2 >= 0 &&
                  xh2 < XH &&
                  xw2 >= 0 &&
                  xw2 < XW) {
                value[i] = _X(x);
              }
            }
            ++p;
          }
          return value;
        }
        `;return{...e,output:{dims:l,type:n.type,textureType:4},shaderSource:d}},Zf=(r,e,n,t,o)=>{let i=ww(o.cacheKey);return{...i,get:()=>xw(r,i,e,n,t,o)}},Js=(r,e,n,t=4)=>[n[0],n[2],n[3],Math.ceil(r[1]*e[2]*e[3]/t)]});var _w,Tw,Jf,Qf=R(()=>{"use strict";qe();it();Ve();An();Qs();_w=(r,e)=>({name:"ConvDotProduct",inputNames:r?["Im2Col","K","B"]:["Im2Col","K"],inputTypes:r?[0,4,0]:[0,4],cacheKey:e.activationCacheKey}),Tw=(r,e,n,t,o)=>{let i=n[0].dims,s=n[1].dims,a=[s[0],Math.ceil(i[1]*s[2]*s[3]/4)],u=Js(i,s,t),[l,d]=r.calculateTextureWidthAndHeight(a,4),p=ue.computeStrides(u),[m,b]=r.calculateTextureWidthAndHeight(u,4),v=t.length,w=n.length<3?"0.0":"_B(b)",A=Math.ceil(i[1]*s[2]*s[3]/4),{activationFunction:$,applyActivation:_}=Ar(o),O=me(r.session.backend.glContext.version),P=`
${$}
float process(int indices[${v}]) {
  int b[1];
  b[0] = indices[1];
  int im2col[4];
  im2col[0] = indices[0];
  im2col[1] = indices[2];
  im2col[2] = indices[3];
  int im2colOffset = im2col[0] * ${p[0]} + im2col[1] * ${p[1]} + im2col[2] * ${p[2]};
  int kernelOffset = indices[1] * ${a[1]};
  float value = ${w};
  for (int i = 0; i < ${A}; ++i) {
    vec2 im2colCoords = offsetToCoords(im2colOffset, ${m}, ${b});
    vec2 kernelCoords = offsetToCoords(kernelOffset, ${l}, ${d});
    value += dot(${O.texture2D}(Im2Col, im2colCoords), ${O.texture2D}(K, kernelCoords));
    ++im2colOffset;
    ++kernelOffset;
  }
  ${_}
  return value;
}`;return{...e,output:{dims:t,type:n[0].type,textureType:0},shaderSource:P}},Jf=(r,e,n,t)=>{let o=_w(e.length>2,t);return{...o,get:()=>Tw(r,o,e,n,t)}}});var Jn,eu,$w,Sw,Iw,Aw,tu,Ow,ea=R(()=>{"use strict";Tt();qe();Wf();Xf();Qf();An();Qs();ta();Jn=(r,e,n,t,o)=>{let i=r[0],s=r.slice(2),a=s.length,u=e[0],d=e.slice(2).map((v,w)=>v+(v-1)*(n[w]-1)),m=s.map((v,w)=>v+t[w]+t[w+a]).map((v,w)=>Math.floor((v-d[w]+o[w])/o[w]));return[i,u].concat(...m)},eu=(r,e,n)=>(Ow(e,n),$w(r,e,n)),$w=(r,e,n)=>{let t=Aw(n,e),o=r.session.pack,i=t.kernelShape[0]===1&&t.kernelShape[1]===1;return t.group>1?[r.run(Gf(r,e,t),e)]:i&&o?[Sw(r,e,t)]:o&&e[0].dims.length===4&&e[0].dims[0]===1&&!i?[Yf(r,e,t)]:[Iw(r,e,t)]},Sw=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=Jn(t,o,n.dilations,n.pads,n.strides),s=r.reshapeUnpacked(e[0],[t[1],t[2]*t[3]]),a=r.reshapeUnpacked(e[1],[o[0],o[1]]),u=e.length>2?[a,s,e[2]]:[a,s],l=r.run(Ys(u,n),u);return r.reshapeUnpacked(l,i)},Iw=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=Jn(t,o,n.dilations,n.pads,n.strides),s=r.run(Zf(r,e[0],e[1],i,n),[e[0]]),a=e.length===3?[s,e[1],e[2]]:[s,e[1]];return r.run(Jf(r,e,i,n),a)},Aw=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0)for(let i=2;i<e[1].dims.length;++i)n.push(e[1].dims[i]);let t=r.pads.slice();_n.adjustPadsBasedOnAutoPad(e[0].dims,r.strides,r.dilations,n,t,r.autoPad);let o=Object.assign({},r);return Object.assign(o,{kernelShape:n,pads:t,cacheKey:r.cacheKey}),o},tu=r=>{let e=r.attributes,n=Zn(e),t=e.getString("auto_pad","NOTSET"),o=e.getInts("dilations",[1,1]),i=e.getInt("group",1),s=e.getInts("kernel_shape",[]),a=e.getInts("pads",[0,0,0,0]),u=e.getInts("strides",[1,1]);return Ce({autoPad:t,dilations:o,group:i,kernelShape:s,pads:a,strides:u,...n})},Ow=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4||r[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");let n=r[0].dims[1],t=r[1].dims[1]*e.group;if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(r.length===3&&(r[2].dims.length!==1||r[1].dims[0]!==r[2].dims[0]))throw new Error("invalid bias");let o=r[0].dims.length-2;if(e.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(e.strides.length!==o)throw new Error(`strides should be ${o}D`);if(e.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(r[0].type!=="float32"||r[1].type!=="float32")throw new Error("Conv input(X,W) should be float tensor");if(r.length===3&&r[2].type!=="float32")throw new Error("Conv input(bias) should be float tensor")}});var Cw,Ew,Pw,ep,kw,Dw,Bw,Rw,zw,Mw,tp,Lw,rp=R(()=>{"use strict";Tt();it();Ve();An();Cw=(r,e,n,t,o,i)=>(r-1)*e+n+(t-1)*o+1-i,Ew=(r,e,n,t,o)=>{let i=Math.floor(r/2);e==="SAME_UPPER"?(n[t]=i,n[o]=r-i):e==="SAME_LOWER"&&(n[t]=r-i,n[o]=i)},Pw=(r,e,n,t,o,i,s,a)=>{let u=r.length-2,l=a.length===0;for(let d=0;d<u;++d){let p=l?r[d+2]*i[d]:a[d],m=Cw(r[d+2],i[d],o[d],e[d],n[d],p);Ew(m,t,o,d,d+u),l&&a.push(i[d]*(r[d+2]-1)+s[d]+(e[d]-1)*n[d]+1-o[d]-o[d+u])}},ep=(r,e,n)=>(Lw(e,n),kw(r,e,n)),kw=(r,e,n)=>{let t=Mw(n,e);return[zw(r,e,t)]},Dw=(r,e)=>({name:"ConvTranspose",inputNames:r?["X","W","B"]:["X","W"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e}),Bw=(r,e,n,t)=>{let i=e.length>2?"getB(output_channel)":"0.0",s=e[0].dims,a=e[1].dims,u=a[1],l=a[0]/t.group,d=[e[0].dims[0],e[1].dims[1]*t.group,...t.outputShape],p=me(r.session.backend.glContext.version),{activationFunction:m,applyActivation:b}=Ar(t),v=`
  const ivec2 strides = ivec2(${t.strides[0]}, ${t.strides[1]});
  const ivec2 pads = ivec2(${t.pads[0]}, ${t.pads[1]});
  ${m}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;

    ivec2 loc = coords.zw + pads;

    int group_id = output_channel / ${u};
    int wOutChannel = output_channel - group_id * ${u};

    float value = ${i};
    for (int inChannelOffset = 0; inChannelOffset < ${l}; inChannelOffset++) {
      int input_channel = group_id * ${l} + inChannelOffset;
      for (int wWOff = 0; wWOff < ${a[2]}; wWOff++) {
        for (int wHOff = 0; wHOff < ${a[3]}; wHOff++) {
          ivec2 wOff = ivec2(wWOff * ${t.dilations[0]}, wHOff * ${t.dilations[1]});
          ivec2 wLoc = loc - wOff;
          ivec2 wLocIn = wLoc / strides;
          if (
            wLocIn * strides == wLoc &&
            wLocIn.x >= 0 && wLocIn.x < ${s[2]} &&
            wLocIn.y >= 0 && wLocIn.y < ${s[3]}
          ) {
            float xVal = getX(batch, input_channel, wLocIn.y, wLocIn.x);
            float wVal = getW(input_channel, wOutChannel, wHOff, wWOff);
            value += xVal * wVal;
          }
        }
      }
    }
    ${b}
    ${p.output} = vec4(value, .0, .0, .0);
  }
`;return{...n,output:{dims:d,type:e[0].type,textureType:0},shaderSource:v,hasMain:!0}},Rw=(r,e,n)=>{let t=Dw(e.length>2,n.cacheKey);return{...t,get:()=>Bw(r,e,t,n)}},zw=(r,e,n)=>r.run(Rw(r,e,n),e),Mw=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0)for(let a=2;a<e[1].dims.length;++a)n.push(e[1].dims[a]);let t=r.pads.slice(),o=r.outputShape.slice(),i=e[0].dims;Pw(i,n,r.dilations,r.autoPad,t,r.strides,r.outputPadding,o);let s=Object.assign({},r);return Object.assign(s,{kernelShape:n,pads:t,outputShape:o,cacheKey:r.cacheKey}),s},tp=r=>{let e=r.attributes,n=Zn(e),t=e.getString("auto_pad","NOTSET"),o=e.getInts("dilations",[1,1]),i=e.getInt("group",1),s=e.getInts("kernel_shape",[]),a=e.getInts("output_padding",[0,0]),u=e.getInts("output_shape",[]),l=e.getInts("pads",[0,0,0,0]),d=e.getInts("strides",[1,1]);return Ce({autoPad:t,dilations:o,group:i,kernelShape:s,outputPadding:a,outputShape:u,pads:l,strides:d,...n})},Lw=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4||r[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");let n=r[0].dims[1],t=r[1].dims[0];if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=r[1].dims[1]*e.group;if(r.length===3&&(r[2].dims.length!==1||r[2].dims[0]!==o))throw new Error("invalid bias");let i=r[0].dims.length-2;if(e.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(e.strides.length!==i)throw new Error(`strides should be ${i}D`);if(e.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(e.outputPadding.length!==i)throw new Error(`output_padding should be ${i}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==r[0].dims.length-2)throw new Error("invalid output shape");if(r[0].type!=="float32"||r[1].type!=="float32")throw new Error("ConvTranspose input(X,W) should be float tensor");if(r.length===3&&r[2].type!=="float32")throw new Error("ConvTranspose input(bias) should be float tensor")}});var np,On,op,Nw,ip,Fw,Vw,Uw,na=R(()=>{"use strict";Tt();qe();Ve();np={name:"Transpose",inputNames:["A"],inputTypes:[0]},On=(r,e,n)=>(Uw(e),[r.run({...np,cacheHint:n.cacheKey,get:()=>Nw(r,e[0],n.perm)},e)]),op=r=>Ce({perm:r.attributes.getInts("perm",[])}),Nw=(r,e,n)=>{let t=e.dims;n=ip(t,n);let o=Fw(t,n),i=t.length,s=`
      ${Vw("perm",n,i)}
      float process(int indices[${i}]) {
        int a[${i}];
        perm(a, indices);
        return _A(a);
      }`;return{...np,output:{dims:o,type:e.type,textureType:0},shaderSource:s}},ip=(r,e)=>(e&&e.length!==r.length&&(e=[...r.keys()].reverse()),e),Fw=(r,e)=>(e=ip(r,e),ue.sortBasedOnPerm(r,e)),Vw=(r,e,n)=>{let t=[];t.push(`void ${r}(out int a[${n}], int src[${n}]) {`);for(let o=0;o<n;++o)t.push(`	a[${e[o]}]=src[${o}];`);return t.push("	}"),t.join(`
`)},Uw=r=>{if(!r||r.length!==1)throw new Error("Transpose requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("input should be float tensor")}});var ap,sp,Gw,up=R(()=>{"use strict";na();ap=(r,e,n)=>{Gw(e);let t=n.blocksize,o=t*t,i=n.mode==="DCR"?[0,3,4,1,5,2]:[0,1,4,2,5,3],s=n.mode==="DCR"?[e[0].dims[0],t,t,e[0].dims[1]/o,e[0].dims[2],e[0].dims[3]]:[e[0].dims[0],e[0].dims[1]/o,t,t,e[0].dims[2],e[0].dims[3]],a=r.reshapeUnpacked(e[0],s),u={perm:i,cacheKey:`${i}`},[l]=On(r,[a],u),d=[e[0].dims[0],e[0].dims[1]/o,e[0].dims[2]*t,e[0].dims[3]*t];return[r.reshapeUnpacked(l,d)]},sp=r=>{let e=r.attributes.getInt("blocksize");if(e<1)throw new Error(`blocksize must be >= 1, but got : ${e} for DepthToSpace`);let n=r.attributes.getString("mode","DCR");if(n!=="DCR"&&n!=="CRD")throw new Error(`unrecognized mode: ${n} for DepthToSpace`);return{mode:n,blocksize:e}},Gw=r=>{if(r.length!==1)throw new Error(`DepthToSpace expect 1 inputs, but got ${r.length}`);if(r[0].type==="string"||r[0].dims.length!==4)throw new TypeError("DepthToSpace input should be a 4-D numeric tensor")}});var lp,dp,Ww,cp=R(()=>{"use strict";qe();lp=(r,e,n)=>{Ww(e,n);let t=ue.flattenShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},dp=r=>r.attributes.getInt("axis",1),Ww=(r,e)=>{if(!r||r.length!==1)throw new Error("Flatten requires 1 input.");let n=r[0].dims.length;if(n===0)throw new Error("scalar tensor is not supported.");if(e<-n||e>n)throw new Error("Invalid axis");if(r[0].type==="string")throw new Error("string tensor is not supported.")}});var rn,Vo=R(()=>{"use strict";rn=["float32","float64","int32","int16","int8","uint16","uint32","uint8"]});var fp,pp,Hw,qw,jw,Kw,hp=R(()=>{"use strict";Tt();Vo();qe();Ve();fp=(r,e,n)=>(Kw(e,n.axis),[r.run(jw(r,e,n),e)]),pp=r=>Ce({axis:r.attributes.getInt("axis",0)}),Hw={name:"Gather",inputNames:["A","B"],inputTypes:[0,0]},qw=(r,e,n,t)=>{let o=n[0].dims.slice(),i=n[1].dims.slice(),s=new Array(o.length+i.length-1);t=ue.normalizeAxis(t,o.length);let a=[];for(let m=0;m<s.length;m++)m<t?(s[m]=o[m],a.push(`inputIdx[${m}] = outputIdx[${m}];`)):m<t+i.length?(s[m]=i[m-t],a.push(`indexDataIdx[${m-t}] = outputIdx[${m}];`)):(s[m]=o[m-i.length+1],a.push(`inputIdx[${m-i.length+1}] = outputIdx[${m}];`));let u=s.length||1,l=o.length,d=i.length||1,p=`
      float process(int outputIdx[${u}]) {
        int inputIdx[${l}];
        int indexDataIdx[${d}];
        indexDataIdx[0] = 0;
        ${a.join(`
        `)}
        int idx = int(_B(indexDataIdx));
        inputIdx[${t}] = idx < 0 ? idx + ${o[t]} : idx;
        return _A(inputIdx);
      }`;return{...e,output:{dims:s,type:n[0].type,textureType:0},shaderSource:p}},jw=(r,e,n)=>{let t={...Hw,cacheHint:n.cacheKey};return{...t,get:()=>qw(r,t,e,n.axis)}},Kw=(r,e)=>{if(!r||r.length!==2)throw new Error("Gather requires 2 inputs.");let n=r[0].dims.length;if(n<1)throw new Error("Invalid input shape.");if(e<-n||e>n-1)throw new Error("Invalid axis.");if(rn.indexOf(r[0].type)===-1)throw new Error("Invaid input type.");if(r[1].type!=="int32"&&r[1].type!=="int16")throw new Error("Invaid input type.")}});var ru,mp,gp,bp,Yw,Xw,Zw,yp=R(()=>{"use strict";Tt();qe();Ve();ru=(r,e,n)=>(Zw(e,n),[r.run(Yw(e,n),e)]),mp=(r,e)=>{let n=r.attributes.getInt("transA",0)!==0,t=r.attributes.getInt("transB",0)!==0,o=r.attributes.getFloat("alpha",1),i=r.attributes.getFloat("beta",1);return Ce({transA:n,transB:t,alpha:o,beta:i,isOptionalC:e})},gp=r=>mp(r,!1),bp=r=>mp(r,!0),Yw=(r,e)=>{let n={name:"Gemm",inputNames:r.length===3?["A","B","C"]:["A","B"],inputTypes:r.length===3?[0,0,0]:[0,0],key:e.cacheKey};return{...n,get:()=>Xw(n,r,e)}},Xw=(r,e,n)=>{let t=e[0].dims.slice(),o=e[1].dims.slice(),[i,s]=qi.getShapeOfGemmResult(t,n.transA,o,n.transB,e.length===3?e[2].dims:void 0),a=[i,s];if(!a)throw new Error("Can't use gemm on the given tensors");let u=t[t.length-1],l="";n.transA&&(u=t[0]),n.transA&&n.transB?l="value += _A_T(a) * _B_T(b);":n.transA&&!n.transB?l="value += _A_T(a) * _B(b);":!n.transA&&n.transB?l="value += _A(a) * _B_T(b);":!n.transA&&!n.transB&&(l="value += _A(a) * _B(b);");let d=a.length,p=e.length===3?`int c[${e[2].dims.length}];`:"",m=e.length===3?"bcastIndices_C(indices, c);":"",b=e.length===3?"value += beta * _C(c);":"",v=`
      float process(int indices[${d}]) {
          int a[${d}];
          int b[${d}];
          ${p}

          copyVec(indices, a);
          copyVec(indices, b);
          ${m}

          float value = 0.0;
          for (int k=0; k<${u}; ++k) {
              a[${d-1}] = k;
              b[${d-2}] = k;
              ${l}
          }

          value = value * alpha;
          ${b}
          return value;
      }`;return{...r,output:{dims:a,type:e[0].type,textureType:0},variables:[{name:"alpha",type:"float",data:n.alpha},{name:"beta",type:"float",data:n.beta}],shaderSource:v}},Zw=(r,e)=>{if(!r)throw new Error("Input is missing");if(e.isOptionalC&&(r.length<2||r.length>3))throw new Error("Invaid input shape.");if(!e.isOptionalC&&r.length!==3)throw new Error("Gemm requires 3 inputs");if(r.length===3&&r[2].dims.length!==1&&r[2].dims.length!==2)throw new Error("Invalid input shape of C");if(r[0].type!=="float32"&&r[0].type!=="float64"||r[1].type!=="float32"&&r[1].type!=="float64"||r.length===3&&r[2].type!=="float32"&&r[2].type!=="float64")throw new Error("Invalid input type.");if(r[0].type!==r[1].type||r.length===3&&r[0].type!==r[2].type)throw new Error("Input types are mismatched")}});var vp,wp,Jw,Qw,ex,tx,rx,xp=R(()=>{"use strict";Tt();Ve();vp=(r,e,n)=>(rx(e),[r.run(ex(r,e,n),e)]),wp=r=>{let e=r.attributes.getFloat("scale"),n=r.attributes.getFloats("bias");return Ce({scale:e,bias:n})},Jw={name:"ImageScaler",inputNames:["X"],inputTypes:[0]},Qw=(r,e,n,t)=>{let o=n[0].dims.slice(),i=o.length,a=`
      ${tx(t.bias.length)}
      float process(int indices[${i}]) {
        return _X(indices) * scale + getBias(bias, indices[1]);
      }`;return{...e,output:{dims:o,type:n[0].type,textureType:0},variables:[{name:"bias",type:"float",arrayLength:t.bias.length,data:t.bias},{name:"scale",type:"float",data:t.scale}],shaderSource:a}},ex=(r,e,n)=>{let t={...Jw,cacheHint:n.cacheKey};return{...t,get:()=>Qw(r,t,e,n)}},tx=r=>{let e=[`float getBias(float bias[${r}], int channel) {`];for(let n=0;n<r;++n)n===0?e.push(`	if (channel == ${n}) { return bias[${n}]; }`):n===r-1?e.push(`	else { return bias[${n}]; }`):e.push(`	else if (channel == ${n}) { return bias[${n}]; }`);return e.push("	}"),e.join(`
`)},rx=r=>{if(!r||r.length!==1)throw new Error("ImageScaler requires 1 input.");if(r[0].dims.length!==4)throw new Error("Invalid input shape.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")}});var Tp,$p,_p,nx,ox,ix,ax,sx,ux,Sp=R(()=>{"use strict";it();Ve();Tp=(r,e,n)=>{ux(e);let t=r.run(ox(e[0]),e);return[r.run(sx(r,e[0],n,t.dims),[e[0],t,e[1],e[2]])]},$p=r=>r.attributes.getFloat("epsilon",1e-5),_p={name:"InstanceNormalization_MeanAndVariance",inputNames:["X"],inputTypes:[0]},nx=(r,e)=>{let n=e.dims.slice(),t=n[1],o=n[2]*n[3],i=[n[0],t],s=`
      vec4 process(int[2] indices) {
        vec4 v = vec4(0.0);
        int a[4];
        a[0] = indices[0];
        a[1] = indices[1];
        float temp = 0.0;
        for(int a2=0; a2<${n[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${n[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += x;
          }
        }
        float mean = temp / float(${o});
        temp = 0.0;
        for(int a2=0; a2<${n[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${n[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += (x - mean) * (x - mean);
          }
        }
        v.r = mean;
        v.g = temp / float(${o});

        return v;
      }`;return{...r,output:{dims:i,type:e.type,textureType:4},shaderSource:s}},ox=r=>({..._p,get:()=>nx(_p,r)}),ix={name:"InstanceNormalization_ComputeOutput",inputNames:["X","MeanAndVariance","Scale","B"],inputTypes:[0,4,0,0]},ax=(r,e,n,t,o)=>{let i=me(r.session.backend.glContext.version),[s,a]=r.calculateTextureWidthAndHeight(o,4),[u,l]=[s/4,a],d=`
      vec4 get_MeanAndVariance(int[2] mv) {
        int offset = indicesToOffset_MeanAndVariance(mv);
        vec2 coords = offsetToCoords(offset, ${u}, ${l});
        return ${i.texture2D}(MeanAndVariance, coords);
      }

      float process(int[4] indices) {
        int mv[2];
        mv[0] = indices[0];
        mv[1] = indices[1];
        vec4 mean_and_variance = get_MeanAndVariance(mv);
        float mean = mean_and_variance.r;
        float variance = mean_and_variance.g;

        int sb[1];
        sb[0] = indices[1];
        float scale = _Scale(sb);
        float b = _B(sb);

        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;
      }`;return{...e,output:{dims:n.dims,type:n.type,textureType:0},variables:[{name:"epsilon",type:"float",data:t}],shaderSource:d}},sx=(r,e,n,t)=>{let o={...ix,cacheHint:`${n}`};return{...o,get:()=>ax(r,o,e,n,t)}},ux=r=>{if(!r||r.length!==3)throw new Error("InstanceNormalization requires 3 inputs.");let e=r[0],n=r[1],t=r[2];if(e.dims.length<3||n.dims.length!==1||t.dims.length!==1)throw new Error("Invalid input shape.");if(n.dims[0]!==e.dims[1]||t.dims[0]!==e.dims[1])throw new Error("Input shapes are mismatched.");if(e.type!=="float32"&&e.type!=="float64"||n.type!=="float32"&&n.type!=="float64"||t.type!=="float32"&&t.type!=="float64")throw new Error("Invalid input type.");if(r[0].dims.length!==4)throw new Error("Only support 4-D input shape.")}});function lx(r,e){let n=r[0].dims[1],t=r[0].dims.length,o=-Math.floor((e.size-1)/2),i=Math.ceil((e.size-1)/2),s=`float(${e.alpha}) / float(${e.size})`,a=`float(${e.bias})`,u=`float(${e.beta})`,l=`
    float process(int indices[${t}]) {
        int c = indices[1];
        float x = _X(indices);
        float square_sum = 0.0;

        for (int i = ${o}; i <= ${i}; i++) {
          int idx = c + i;
          if (c >= 0 && c < ${n}) {
            indices[1] = idx;
            float j = _X(indices);
            square_sum += j * j;
          }
        }
        return x / pow(${a} + ${s} * square_sum, ${u});
    }`;return{...Op,cacheHint:e.cacheKey,output:{dims:r[0].dims,type:r[0].type,textureType:0},shaderSource:l}}function dx(r,e){return{...Op,cacheHint:e.cacheKey,get:()=>lx(r,e)}}var Ip,Ap,Op,cx,Cp=R(()=>{"use strict";Tt();Ve();Ip=(r,e,n)=>(cx(e),[r.run(dx(e,n),e)]),Ap=r=>{let e=r.attributes.getFloat("alpha",1e-4),n=r.attributes.getFloat("beta",.75),t=r.attributes.getFloat("bias",1),o=r.attributes.getInt("size");return Ce({alpha:e,beta:n,bias:t,size:o})},Op={name:"LRN",inputNames:["X"],inputTypes:[0]};cx=r=>{if(!r||r.length!==1)throw new Error("LRN requires 1 input.");if(r[0].dims.length!==4)throw new Error('currently only support LRN for input with "NCHW" format');if(r[0].type!=="float32")throw new Error("input should be float type")}});var fx,nu,Ep,Pp,kp,px,hx,mx,gx,bx,yx,vx,wx,Dp=R(()=>{"use strict";Tt();qe();it();Ve();fx={name:"Pad",inputNames:["A"],inputTypes:[0]},nu=(r,e,n)=>(mx(e),[r.run({...fx,cacheHint:n.cacheKey,get:()=>hx(r,e[0],n)},e)]),Ep=r=>{let e=r.attributes.getString("mode","constant"),n=r.attributes.getFloat("value",0),t=r.attributes.getInts("pads");return Ce({mode:e,value:n,pads:t})},Pp=(r,e,n)=>{gx(e);let t=px(r,e,n);return nu(r,[e[0]],t)},kp=r=>r.attributes.getString("mode","constant"),px=(r,e,n)=>{if(!r.session.isInitializer(e[1].dataId)||e.length>=3&&!r.session.isInitializer(e[2].dataId))throw new Error("dynamic pad attributes are not allowed");let t=Array.from(e[1].integerData),o=e.length>=3?e[2].floatData[0]:0;return Ce({mode:n,pads:t,value:o})},hx=(r,e,n)=>{let t=ue.padShape(e.dims.slice(),n.pads),o=t.length,s=`
      ${bx(r,e,n)}
      float process(int[${o}] indices) {
          return padA(indices);
      }`;return{name:"Pad",inputNames:["A"],inputTypes:[0],output:{dims:t,type:e.type,textureType:0},shaderSource:s}},mx=r=>{if(!r||r.length!==1)throw new Error("Pad requires 1 input");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")},gx=r=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Pad requires 2 or 3 inputs");if(r[1].type!=="int32")throw new Error("Invalid input type.");if(r.length>=3&&r[2].type==="string")throw new Error("Invalid input type.")},bx=(r,e,n)=>{let t=me(r.session.backend.glContext.version),[o,i]=r.calculateTextureWidthAndHeight(e.dims,0),s=ue.computeStrides(e.dims);switch(n.mode){case"constant":return yx(t,e.dims,s,o,i,n.pads,n.value);case"reflect":return vx(t,e.dims,s,o,i,n.pads);case"edge":return wx(t,e.dims,s,o,i,n.pads);default:throw new Error("Invalid mode")}},yx=(r,e,n,t,o,i,s)=>{let a=e.length,u="";for(let l=a-1;l>=0;--l)u+=`
        k = m[${l}] - ${i[l]};
        if (k < 0)  return constant;
        if (k >= ${e[l]}) return constant;
        offset += k * ${n[l]};
        `;return`
      float padA(int m[${a}]) {
        const float constant = float(${s});
        int offset = 0;
        int k = 0;
        ${u}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `},vx=(r,e,n,t,o,i)=>{let s=e.length,a="";for(let u=s-1;u>=0;--u)a+=`
        k = m[${u}] - ${i[u]};
        if (k < 0) { k = -k; }
        {
          const int _2n_1 = ${2*(e[u]-1)};
          k = int( mod( float(k), float(_2n_1) ) ) ;
          if(k >= ${e[u]}) { k = _2n_1 - k; }
        }
        offset += k * ${n[u]};
        `;return`
      float padA(int m[${s}]) {
        int offset = 0;
        int k = 0;
        ${a}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `},wx=(r,e,n,t,o,i)=>{let s=e.length,a="";for(let u=s-1;u>=0;--u)a+=`
        k = m[${u}] - ${i[u]};
        if (k < 0)  k = 0;
        if (k >= ${e[u]}) k = ${e[u]-1};
        offset += k * ${n[u]};
      `;return`
      float padA(int m[${s}]) {
        int offset = 0;
        int k = 0;
        ${a}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `}});var Rp,zp,Mp,Lp,Np,Fp,Vp,Up,Gp,xx,Bp,Wp,ia,Hp,oa,_x,qp=R(()=>{"use strict";Tt();qe();Ve();Rp=(r,e,n)=>{ia(e);let t={name:"AveragePool",inputNames:["X"],inputTypes:[0],cacheHint:n.cacheKey};return[r.run({...t,get:()=>Mp(e,t,!1,n)},e)]},zp=r=>{let e=r.attributes.getString("auto_pad","NOTSET"),n=r.attributes.getInt("ceil_mode",0),t=r.attributes.getInt("count_include_pad",0)!==0,o=r.attributes.getInts("kernel_shape"),i=r.attributes.getInts("strides",[]),s=r.attributes.getInts("pads",[]);if(n!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return Ce({autoPad:e,ceilMode:n,countIncludePad:t,kernelShape:o,strides:i,pads:s})},Mp=(r,e,n,t)=>{let[o,i]=Gp(r,t,n),s=ue.size(o.kernelShape),a="value += _X(x);",u="";o.countIncludePad?u+=`value /= float(${s});`:u+=`value /= float(${s} - pad);`;let d=`
        ${Hp(r[0].dims,o,a,u,"0.0")}
      `;return{...e,output:{dims:i,type:r[0].type,textureType:0},shaderSource:d}},Lp=(r,e,n)=>{ia(e);let t={name:"GlobalAveragePool",inputNames:["X"],inputTypes:[0],cacheHint:`${n.countIncludePad}`};return[r.run({...t,get:()=>Mp(e,t,!0,n)},e)]},Np=r=>{let e=r.attributes.getInt("count_include_pad",0)!==0;return Ce({autoPad:"",ceilMode:0,countIncludePad:e,kernelShape:[],strides:[],pads:[]})},Fp=(r,e,n)=>{ia(e);let t={name:"MaxPool",inputNames:["X"],inputTypes:[0],cacheHint:n.cacheKey};return[r.run({...t,get:()=>Up(e,t,!1,n)},e)]},Vp=r=>{let e=r.attributes.getString("auto_pad","NOTSET"),n=r.attributes.getInt("ceil_mode",0),t=r.attributes.getInts("kernel_shape"),o=r.attributes.getInts("strides",[]),i=r.attributes.getInts("pads",[]),s=r.attributes.getInt("storage_order",0),a=r.attributes.getInts("dilations",[]);if(s!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(n!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return Ce({autoPad:e,ceilMode:n,countIncludePad:!1,kernelShape:t,strides:o,pads:i,storageOrder:s,dilations:a})},Up=(r,e,n,t)=>{let[o,i]=Gp(r,t,n),s=`
      value = max(_X(x), value);
    `,a="",l=`
      ${Hp(r[0].dims,o,s,a,"-1e5")}
    `;return{...e,output:{dims:i,type:r[0].type,textureType:0},shaderSource:l}},Gp=(r,e,n)=>{let t=r[0].dims.slice(),o=Object.hasOwnProperty.call(e,"dilations"),i=e.kernelShape.slice(),s=e.strides.slice(),a=o?e.dilations.slice():[],u=e.pads.slice();_n.adjustPoolAttributes(n,t,i,s,a,u);let l=_n.computePoolOutputShape(n,t,s,a,i,u,e.autoPad),d=Object.assign({},e);return o?Object.assign(d,{kernelShape:i,strides:s,pads:u,dilations:a,cacheKey:e.cacheKey}):Object.assign(d,{kernelShape:i,strides:s,pads:u,cacheKey:e.cacheKey}),[d,l]},xx={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},Bp={name:"GlobalMaxPool",inputNames:["X"],inputTypes:[0]},Wp=(r,e)=>(ia(e),[r.run({...Bp,get:()=>Up(e,Bp,!0,xx)},e)]),ia=r=>{if(!r||r.length!==1)throw new Error("Pool ops requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")},Hp=(r,e,n,t,o)=>{let i=r.length;if(e.kernelShape.length<=2){let s=e.kernelShape[e.kernelShape.length-1],a=e.strides[e.strides.length-1],u=e.pads[e.pads.length/2-1],l=e.pads[e.pads.length-1],d=r[i-1],p="",m="",b="";if(u+l!==0?p=`
          for (int i = 0; i < ${s}; i++) {
            x[${i} - 1] = indices[${i} - 1] * ${a} - ${u} + i;
            if (x[${i} - 1] < 0 || x[${i} - 1] >= ${d}) {
              pad++;
              continue;
            }
            ${n}
          }`:p=`
          for (int i = 0; i < ${s}; i++) {
            x[${i} - 1] = indices[${i} - 1] * ${a} - ${u} + i;
            ${n}
          }`,e.kernelShape.length===2){let w=e.kernelShape[e.kernelShape.length-2],A=e.strides[e.strides.length-2],$=e.pads[e.pads.length/2-2],_=e.pads[e.pads.length-2],O=r[i-2];$+_!==0?m=`
            for (int j = 0; j < ${w}; j++) {
              x[${i} - 2] = indices[${i} - 2] * ${A} - ${$} + j;
              if (x[${i} - 2] < 0 || x[${i} - 2] >= ${O}) {
                pad+= ${s};
                continue;
              }
          `:m=`
            for (int j = 0; j < ${w}; j++) {
              x[${i} - 2] = indices[${i} - 2] * ${A} - ${$} + j;
            `,b=`
          }
        `}return`
        float process(int indices[${i}]) {
          int x[${i}];
          copyVec(indices, x);

          float value = ${o};
          int pad = 0;
          ${m}
          ${p}
          ${b}
          ${t}
          return value;
        }
      `}else{let s=ue.size(e.kernelShape),a=ue.computeStrides(e.kernelShape),u=a.length,l=e.pads.length,d=_x(u),p=oa(r,"inputDims"),m=oa(e.pads,"pads"),b=oa(a,"kernelStrides"),v=oa(e.strides,"strides"),w=e.pads.reduce((_,O)=>_+O),A="";return w?A=`
            if (x[j] >= inputDims[j] || x[j] < 0) {
              pad++;
              isPad = true;
              break;
            }
          }
          if (!isPad) {
            ${n}
          }`:A=`
          }
          ${n}
        `,`
        ${d}
        float process(int indices[${i}]) {
          int x[${i}];
          copyVec(indices, x);
          int offset[${u}];
          int pads[${l}];
          int inputDims[${i}];
          int kernelStrides[${u}];
          int strides[${u}];
          ${m}
          ${p}
          ${v}
          ${b}

          float value = ${o};
          int pad = 0;
          bool isPad = false;
          for (int i = 0; i < ${s}; i++) {
            offsetToIndices(i, kernelStrides, offset);
            isPad = false;
            for (int j = ${i} - ${u}; j < ${i}; j++) {
              x[j] = indices[j] * strides[j - ${i} + ${u}]
                + offset[j - ${i} + ${u}] - pads[j - 2];
              ${A}
          }
          ${t}

          return value;
        }
      `}},oa=(r,e)=>{let n="";for(let t=0;t<r.length;t++)n+=`
      ${e}[${t}] = ${r[t]};
    `;return n},_x=r=>`
  void offsetToIndices(int offset, int[${r}] strides, out int[${r}] indices) {
    if (${r} == 0) {
      return;
    }
    for (int i = 0; i < ${r} - 1; ++i) {
      indices[i] = offset / strides[i];
      offset -= indices[i] * strides[i];
    }
    indices[${r} - 1] = offset;
  }`});var Cn,nn,Tx,$x,jp,Kp,Yp,Xp,Zp,Jp,Qp,eh=R(()=>{"use strict";Tt();Vo();qe();Ve();Cn=(r,e,n,t,o)=>{$x(e);let i={name:t,inputNames:["A"],inputTypes:[0]};return[r.run({...i,cacheHint:n.cacheKey,get:()=>Tx(r,e,n,t,o,i)},e)]},nn=r=>{let e=r.attributes.getInts("axes",[]),n=r.attributes.getInt("keepdims",1)===1;return Ce({axes:e,keepDims:n})},Tx=(r,e,n,t,o,i)=>{let s=[],a=e[0].dims.length||1,u=[],l=ue.normalizeAxes(n.axes,e[0].dims.length),d=o(e,l),p=d[1];for(let v=0;v<e[0].dims.length;v++)l.indexOf(v)>=0||l.length===0?(n.keepDims&&s.push(1),p=`
          for(int j${v} = 0; j${v} < ${e[0].dims[v]}; j${v}++) {
            inputIdx[${v}] = j${v};
            ${p}
          }`):(u.push(`inputIdx[${v}] = outputIdx[${s.length}];`),s.push(e[0].dims[v]));let b=`
      float process(int outputIdx[${s.length||1}]) {
        float value;                 // final result
        int inputIdx[${a}];      // addressing input data
        ${u.join(`
`)}
        ${d[0]}       // init ops for reduce max/min
        ${p}
        ${d[2]}       // final computation for reduce mean
        return value;
      }`;return{...i,output:{dims:s,type:e[0].type,textureType:0},shaderSource:b}},$x=r=>{if(!r||r.length!==1)throw new Error("Reduce op requires 1 input.");if(rn.indexOf(r[0].type)===-1)throw new Error("Invalid input type.")},jp=(r,e,n)=>Cn(r,e,n,"ReduceSum",()=>["value = 0.0;","value += _A(inputIdx);",""]),Kp=(r,e,n)=>Cn(r,e,n,"ReduceMean",(o,i)=>{let s=1;for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&(s*=o[0].dims[a]);return["value = 0.0;","value += _A(inputIdx);",`value /= ${s}.;`]}),Yp=(r,e,n)=>Cn(r,e,n,"ReduceMax",(o,i)=>{let s=[];for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`inputIdx[${a}] = 0;`);return[`${s.join(`
`)}
value = _A(inputIdx);`,"value = max(value, _A(inputIdx));",""]}),Xp=(r,e,n)=>Cn(r,e,n,"ReduceMin",(o,i)=>{let s=[];for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`inputIdx[${a}] = 0;`);return[`${s.join(`
`)}
value = _A(inputIdx);`,"value = min(value, _A(inputIdx));",""]}),Zp=(r,e,n)=>Cn(r,e,n,"ReduceProd",()=>["value = 1.0;","value *= _A(inputIdx);",""]),Jp=(r,e,n)=>Cn(r,e,n,"ReduceLogSum",()=>["value = 0.0;","value += _A(inputIdx);","value = log(value);"]),Qp=(r,e,n)=>Cn(r,e,n,"ReduceLogSumSquare",()=>["float t; value = 0.0;","t = _A(inputIdx); value += t * t;",""])});var th,rh=R(()=>{"use strict";qe();th=(r,e)=>{let n=ue.calculateReshapedDims(e[0].dims,e[1].integerData);return r.session.pack?[r.reshapePacked(e[0],n)]:[r.reshapeUnpacked(e[0],n)]}});var nh,ou,oh,ih,Uo,Sx,iu,aa,au=R(()=>{"use strict";Tt();it();Ve();nh={name:"Upsample",inputNames:["X"],inputTypes:[0]},ou=(r,e,n)=>(iu(e,n),[r.run({...nh,cacheHint:n.cacheKey,get:()=>Sx(r,e,n)},e)]),oh=r=>Uo(r,7),ih=r=>Uo(r,9),Uo=(r,e)=>{let n=e>=10,t=r.attributes.getString("mode","nearest");if(t!=="nearest"&&t!=="linear"&&(e<11||t!=="cubic"))throw new Error(`unrecognized mode: ${t}`);let o=[];e<9&&(o=r.attributes.getFloats("scales"),aa(o,t,n));let i=r.attributes.getFloat("extrapolation_value",0),s=e>10?r.attributes.getString("coordinate_transformation_mode","half_pixel"):"asymmetric";if(["asymmetric","pytorch_half_pixel","tf_half_pixel_for_nn","align_corners","tf_crop_and_resize","half_pixel"].indexOf(s)===-1)throw new Error(`coordinate_transform_mode '${s}' is not supported`);let a=s==="tf_crop_and_resize",u=a,l=t==="nearest"&&e>=11?r.attributes.getString("nearest_mode","round_prefer_floor"):"";if(["round_prefer_floor","round_prefer_ceil","floor","ceil",""].indexOf(l)===-1)throw new Error(`nearest_mode '${l}' is not supported`);let d=r.attributes.getFloat("cubic_coeff_a",-.75),p=r.attributes.getInt("exclude_outside",0)!==0;if(p&&t!=="cubic")throw new Error("exclude_outside can be set to 1 only when mode is CUBIC.");let m=e<11?!0:t==="nearest"&&s==="asymmetric"&&l==="floor",b=0,v=0,w=0;return e>10?r.inputs.length>2?(b=1,v=2,w=3):(v=1,w=2):e===9&&(v=1),Ce({opset:e,isResize:n,mode:t,scales:o,extrapolationValue:i,coordinateTransformMode:s,useExtrapolation:u,needRoiInput:a,nearestMode:l,cubicCoefficientA:d,excludeOutside:p,useNearest2xOptimization:m,roiInputIdx:b,scalesInputIdx:v,sizesInputIdx:w})},Sx=(r,e,n)=>{let t=me(r.session.backend.glContext.version),[o,i]=r.calculateTextureWidthAndHeight(e[0].dims,0),s=e[0].dims.map((w,A)=>Math.floor(w*n.scales[A])),[a,u]=r.calculateTextureWidthAndHeight(s,0),l=s.length,d=new Array(l),p=new Array(l),m=`
      int output_pitches[${l}];
      int input_pitches[${l}];
      `;for(let w=l-1;w>=0;w--)d[w]=w===l-1?1:d[w+1]*s[w+1],p[w]=w===l-1?1:p[w+1]*e[0].dims[w+1],m+=`
        output_pitches[${w}] = ${d[w]};
        input_pitches[${w}] = ${p[w]};
        `;let b=`
      float getInputFloat(int index) {
        vec2 coords = offsetToCoords(index, ${o}, ${i});
        float value = getColorAsFloat(${t.texture2D}(X, coords));
        return value;
      }
      `,v=n.mode==="nearest"?`
    ${b}
    float process(int indices[${l}]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${u});

      ${m}

      int d, m;
      for (int dim = 0; dim < ${l}; ++dim) {
        d = output_index / output_pitches[dim];
        m = output_index - d * output_pitches[dim];
        output_index = m;

        if (scales[dim] != 1 && d > 0) {
          int d2 = d / scales[dim];
          m = d - d2 * scales[dim];
          d = d2;
        }
        input_index += input_pitches[dim] * d;
      }

      return getInputFloat(input_index);
    }`:l===4?`
    ${b}
    float process(int indices[4]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${u});

      ${m}

      int m;
      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m / output_pitches[1];
      m = m - index_of_dim1 * output_pitches[1];
      index_of_dim2 = m / output_pitches[2];
      m = m - index_of_dim2 * output_pitches[2];
      index_of_dim3 = m;

      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;
      index_of_input_dim2 = index_of_dim2 / scales[2];
      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];
      index_of_input_dim3 = index_of_dim3 / scales[3];
      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];

      input_index = index_of_dim0 * input_pitches[0] +
            index_of_dim1 * input_pitches[1] +
            index_of_input_dim2 * input_pitches[2] +
            index_of_input_dim3;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim2 = false;
      if (index_of_input_dim2 == (${e[0].dims[2]} - 1)) {
        // It's the end in dimension 2
        x01 = x00;
        end_of_dim2 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[2]);
      }

      if (index_of_input_dim3 == (input_pitches[2] - 1)) {
        // It's the end in dimension 3
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);
    }`:`
    ${b}
    float process(int indices[2]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${u});

      ${m}

      int m;
      int index_of_dim0, index_of_dim1;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m;

      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;
      index_of_input_dim0 = index_of_dim0 / scales[0];
      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];
      index_of_input_dim1 = index_of_dim1 / scales[1];
      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];

      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim0 = false;
      if (index_of_input_dim0 == (${e[0].dims[0]} - 1)) {
        // It's the end in dimension 0
        x01 = x00;
        end_of_dim0 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[0]);
      }

      if (index_of_input_dim1 == (input_pitches[0] - 1)) {
        // It's the end in dimension 1
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);
    }`;return{...nh,output:{dims:s,type:e[0].type,textureType:0},shaderSource:v,variables:[{name:"scales",type:"int",arrayLength:n.scales.length,data:n.scales.map(w=>Math.ceil(w))}]}},iu=(r,e)=>{if(!r||e.opset<9&&r.length!==1||e.opset>=9&&e.opset<11&&r.length!==2||e.opset>=11&&r.length<2)throw new Error("invalid inputs.");if(e.scales.length>0&&r[0].dims.length!==e.scales.length)throw new Error("Invalid input shape.");if(r[0].type==="string")throw new Error("Invalid input tensor types.")},aa=(r,e,n)=>{if(n){for(let t of r)if(t<=0)throw new Error("Scale value should be greater than 0.")}else for(let t of r)if(t<1)throw new Error("Scale value should be greater than or equal to 1.");if((e==="linear"||e==="cubic")&&r.length!==2&&(r.length!==4||r[0]!==1||r[1]!==1))throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic')         or 4-D inputs with the corresponding outermost 2 scale values being 1         in the ${n?"Resize":"Upsample"} opeartor.`)}});var su,uu,ah,sh,Ix,Ax,Ox,Cx,uh=R(()=>{"use strict";it();Ve();Sr();In();au();su={name:"Resize",inputNames:["A"],inputTypes:[2]},uu=(r,e,n)=>(iu(e,n),[r.run({...su,cacheHint:n.cacheKey,get:()=>Ix(r,e,n)},e)]),ah=r=>Uo(r,10),sh=r=>Uo(r,11),Ix=(r,e,n)=>{let t=me(r.session.backend.glContext.version),[o,i]=Ax(e,n);if(o.every(O=>O===1)&&n.coordinateTransformMode!=="tf_crop_and_resize")return{...su,output:{dims:i,type:e[0].type,textureType:2},hasMain:!0,shaderSource:`void main() {
                    vec4 v = ${t.texture2D}(X, TexCoords);
                    ${t.output} = v;
                }`};let a=i.length;if(a<2)throw new Error(`output dimension should be at least 2, but got ${a}`);let u=i[a-2],l=i[a-1],d=e[0].dims;if(a!==d.length)throw new Error(`output dimension should match input ${d.length}, but got ${a}`);let p=d[a-2],m=d[a-1],b=o[a-2],v=o[a-1],w="";if(n.mode!=="linear")throw new Error(`resize (packed) does not support mode: '${n.mode}'`);switch(n.coordinateTransformMode){case"asymmetric":w=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return vec4(coords) / scaleWHWH;
                    }
                `;break;case"half_pixel":w=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;
                    }
                `;break;case"pytorch_half_pixel":w=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 fcoords = vec4(coords);
                        return vec4(
                            ${l}.0 > 1.0 ? (fcoords.x + 0.5) / scaleWHWH.x - 0.5 : 0.0,
                            ${u}.0 > 1.0 ? (fcoords.y + 0.5) / scaleWHWH.y - 0.5 : 0.0,
                            ${l}.0 > 1.0 ? (fcoords.z + 0.5) / scaleWHWH.z - 0.5 : 0.0,
                            ${u}.0 > 1.0 ? (fcoords.w + 0.5) / scaleWHWH.w - 0.5 : 0.0
                          );
                    }
                `;break;case"align_corners":w=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 resized = vec4(${l}.0 - 1.0, ${u}.0 - 1.0, ${l}.0 - 1.0,
                            ${u}.0 - 1.0);
                        vec4 original = vec4(${m}.0 - 1.0, ${p}.0 - 1.0, ${m}.0 - 1.0,
                            ${p}.0 - 1.0);
                        vec4 new_scale = original / resized;
                        return vec4(coords) * new_scale;
                    }
                `;break;default:throw new Error(`resize (packed) does not support coordinateTransformMode:                                 '${n.coordinateTransformMode}'`)}let A=Nt(a),$=Ir(),_=`
            const vec2 inputWH = vec2(${p}.0, ${m}.0);
            const vec4 scaleWHWH = vec4(float(${b}), float(${v}), float(${b}), float(${v}));
            ${$}
            ${w}
            float getAValue(int x10, int r, int c, int d) {
                return getChannel(getA(x10, r, c, d), vec2(c, d));
            }
            void main() {
                ${A} rc = getOutputCoords();

                int batch = rc[0];
                int depth = rc[1];

                // retrieve the 4 coordinates that is used in the 4 packed output values.
                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);

                // calculate the source index in fraction
                vec4 sourceFrac = getSourceFracIndex(coords);

                // get the lower and upper bound of the 4 values that will be packed into one texel.
                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));
                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));
                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));
                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));

                bool hasNextRow = rc.w < ${u-1};
                bool hasNextCol = rc.z < ${l-1};

                // pack x00, x01, x10, x11's top-left corner into one vec4 structure
                vec4 topLeft = vec4(
                    getAValue(batch, depth, x00.x, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);

                // pack x00, x01, x10, x11's top-right corner into one vec4 structure
                vec4 topRight = vec4(
                    getAValue(batch, depth, x00.x, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);

                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure
                vec4 bottomLeft = vec4(
                    getAValue(batch, depth, x00.z, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);

                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure
                vec4 bottomRight = vec4(
                    getAValue(batch, depth, x00.z, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);

                // calculate the interpolation fraction on u and v direction
                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);
                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));

                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);
                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);
                vec4 newValue = mix(top, bottom, clampFrac.xxzz);

                ${t.output} = vec4(newValue);
            }
        `;return{...su,output:{dims:i,type:e[0].type,textureType:2},hasMain:!0,shaderSource:_}},Ax=(r,e)=>{let t=r[0].dims,o=e.scales,i;if(o.length===0){let a=r[e.scalesInputIdx];if(a&&a.size!==0){if(r[e.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");o=Ox(a,e.mode,e.isResize)}else{let u=r[e.sizesInputIdx];if(!u||u.size===0)throw new Error("Either scales or sizes MUST be provided as input.");i=Array.from(u.integerData),o=Cx(i,t,e.mode,e.isResize)}}else if(r[e.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");let s=i||t.map((a,u)=>Math.floor(a*o[u]));return[o,s]},Ox=(r,e,n)=>{let t=Array.from(r.floatData);return aa(t,e,n),t},Cx=(r,e,n,t)=>{let o=e.length,i=new Array(o);for(let s=0,a=o;s<a;s++)if(e[s]===0){if(r[s]!==0)throw new Error("Input dim is zero but required output dim is non-zero.");i[s]=1}else i[s]=r[s]/e[s];return aa(i,n,t),i}});var lh,Ex,dh=R(()=>{"use strict";Sn();lh=(r,e)=>(Ex(e),[new mt([e[0].dims.length],"int32",void 0,void 0,new Int32Array(e[0].dims))]),Ex=r=>{if(!r||r.length!==1)throw new Error("Shape requires 1 input.")}});var lu,ch,fh,ph,Px,hh,kx,Dx,mh=R(()=>{"use strict";Tt();Vo();qe();Ve();lu={name:"Slice",inputNames:["A"],inputTypes:[0]},ch=(r,e,n)=>(Px(e),[r.run({...lu,cacheHint:n.cacheKey,get:()=>ph(r,e[0],n)},e)]),fh=r=>{let e=r.attributes.getInts("starts"),n=r.attributes.getInts("ends"),t=r.attributes.getInts("axes",[]);return Ce({starts:e,ends:n,axes:t})},ph=(r,e,n)=>{let t=n.axes.length===0?e.dims.slice(0).map((p,m)=>m):n.axes,o=ue.normalizeAxes(t,e.dims.length),i=n.starts.map((p,m)=>p>e.dims[o[m]]-1?e.dims[o[m]]:ue.normalizeAxis(p,e.dims[o[m]])),s=n.ends.map((p,m)=>p>e.dims[o[m]]-1?e.dims[o[m]]:ue.normalizeAxis(p,e.dims[o[m]])),a=e.dims.slice(),u=[];for(let p=0;p<o.length;p++)a[o[p]]=s[p]-i[p],i[p]>0&&u.push(`outputIdx[${o[p]}] += ${i[p]};`);let d=`
      float process(int outputIdx[${a.length}]) {
        ${u.join(`
      `)}
        return _A(outputIdx);
      }`;return{...lu,output:{dims:a,type:e.type,textureType:0},shaderSource:d}},Px=r=>{if(!r||r.length!==1)throw new Error("Slice requires 1 input.");if(rn.indexOf(r[0].type)===-1)throw new Error("Invalid input type.")},hh=(r,e)=>{Dx(e);let n=kx(r,e);return[r.run({...lu,cacheHint:n.cacheKey,get:()=>ph(r,e[0],n)},[e[0]])]},kx=(r,e)=>{if(!r.session.isInitializer(e[1].dataId)||!r.session.isInitializer(e[2].dataId)||e.length>=4&&!r.session.isInitializer(e[3].dataId)||e.length>=5&&!r.session.isInitializer(e[4].dataId))throw new Error("dynamic slice attributes are not allowed");if(e.length>=5&&e[4].integerData.some(s=>s!==1))throw new Error("currently non-1 steps is not supported for Slice");let n=Array.from(e[1].integerData),t=Array.from(e[2].integerData),o=e.length>=4?Array.from(e[3].integerData):[],i=`${o};${n};${t}`;return{starts:n,ends:t,axes:o,cacheKey:i}},Dx=r=>{if(!r||r.length<3||r.length>5)throw new Error("Invalid input number.");if(r[1].type!=="int32"||r[1].dims.length!==1)throw new Error("Invalid input type.");if(r[2].type!=="int32"||r[2].dims.length!==1)throw new Error("Invalid input type.");if(r.length>=4&&(r[3].type!=="int32"||r[3].dims.length!==1))throw new Error("Invalid input type.");if(r.length>=5&&(r[4].type!=="int32"||r[4].dims.length!==1))throw new Error("Invalid input type.")}});var gh,bh,yh,vh,wh,xh,_h,Th,Bx,Rx,zx,$h,Sh=R(()=>{"use strict";Tt();qe();it();Ve();na();gh={name:"SoftmaxComputeMax",inputNames:["A"],inputTypes:[0]},bh={name:"SoftmaxComputeScale",inputNames:["A","Max"],inputTypes:[0,0]},yh={name:"SoftMax",inputNames:["A","Max","Norm"],inputTypes:[0,0,0]},vh=(r,e,n)=>{$h(e);let t=e[0].dims.slice(),o=ue.normalizeAxis(n.axis,t.length),i=ue.sizeToDimension(t,o),s=ue.sizeFromDimension(t,o);return Th(r,e,n,i,s)},wh=r=>Ce({axis:r.attributes.getInt("axis",1)}),xh=r=>Ce({axis:r.attributes.getInt("axis",-1)}),_h=(r,e,n)=>{$h(e);let t=e[0].dims.slice(),o=ue.normalizeAxis(n.axis,t.length),i=t.length,s=o!==i-1,a=[],u=[],l=[],d;s&&(u=Array.from({length:i}).map((v,w)=>w),u[o]=i-1,u[i-1]=o,u.map(v=>a.push(t[v])),d=Ce({perm:u}),l=On(r,e,d));let p=s?ue.sizeToDimension(a,i-1):ue.sizeToDimension(t,i-1),m=s?ue.sizeFromDimension(a,i-1):ue.sizeFromDimension(t,i-1),b=Th(r,s?l:e,n,p,m);return s?On(r,b,d):b},Th=(r,e,n,t,o)=>{let i=Bx(r,e[0],t,o,[t]),s=r.run({...gh,cacheHint:n.cacheKey,get:()=>i},e),a=Rx(r,e[0],t,o,i.output.dims,[t]),u=r.run({...bh,cacheHint:n.cacheKey,get:()=>a},[e[0],s]),l=zx(r,e[0],t,o,i.output.dims,a.output.dims);return[r.run({...yh,cacheHint:n.cacheKey,get:()=>l},[e[0],s,u])]},Bx=(r,e,n,t,o)=>{let[i,s]=r.calculateTextureWidthAndHeight(e.dims,0),a=o.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(o.length!==1)throw new Error("Dimensionality of the output should be 1");if(o[0]!==n)throw new Error("Shape of the output should be equal to logical row count");let u=me(r.session.backend.glContext.version),l=`
      float process(int[${a}] indices) {
        int logical_row_start_offset = indices[0] * ${t};

        float max = getColorAsFloat(${u.texture2D}(A, offsetToCoords(logical_row_start_offset, ${i},
        ${s} )));
        for(int i=1; i<${t}; ++i)
        {
          float current = getColorAsFloat(${u.texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${i}, ${s})));
          if(current > max)
          max = current;
        }

        return max;
      }`;return{...gh,output:{dims:o,type:e.type,textureType:0},shaderSource:l}},Rx=(r,e,n,t,o,i)=>{let[s,a]=r.calculateTextureWidthAndHeight(e.dims,0),u=i.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(i.length!==1)throw new Error("Dimensionality of the output should be 1");if(i[0]!==n)throw new Error("Shape of the output should be equal to logical row count");if(o.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(o[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");let l=me(r.session.backend.glContext.version),d=`
      float process(int[${u}] indices) {
        int logical_row_start_offset = indices[0] * ${t};

        float norm_factor = 0.0;
        float max = _Max(indices);
        for(int i=0; i<${t}; ++i)
        {
          norm_factor += exp(getColorAsFloat(${l.texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${s}, ${a}))) - max);
        }

        return norm_factor;
      }`;return{...bh,output:{dims:i,type:e.type,textureType:0},shaderSource:d}},zx=(r,e,n,t,o,i)=>{let[s,a]=r.calculateTextureWidthAndHeight(e.dims,0),u=e.dims.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(o.length!==1||i.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(o[0]!==n||i[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");let l=`
      float process(int[${u}] indices) {

      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)
      int offset = coordsToOffset(TexCoords, ${s}, ${a});

      //determine the logical row for this index
      int logical_row_index[1];
      logical_row_index[0] = offset / ${t};

      float norm_factor = _Norm(logical_row_index);

      // avoid possible division by 0
      // if norm_facor is 0, all elements are zero
      // if so, return 0
      if(norm_factor == 0.0)
        return 0.0;

      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;
    }`;return{...yh,output:{dims:e.dims,type:e.type,textureType:0},shaderSource:l}},$h=r=>{if(!r||r.length!==1)throw new Error("Softmax requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type")}});var Ih,Ah,Oh,Mx,Lx,Nx,Ch=R(()=>{"use strict";Tt();qe();Ve();Ih={name:"Split",inputNames:["A"],inputTypes:[0]},Ah=(r,e,n)=>{Nx(e);let t=ue.normalizeAxis(n.axis,e[0].dims.length),o=Mx(r,e,t,n),i=[];for(let s=0;s<o;++s)i.push(r.run({...Ih,cacheHint:`${n.cacheKey};${s}`,get:()=>Lx(r,e[0],n,t,s)},e));return i},Oh=r=>{let e=r.attributes.getInt("axis",0),n=r.attributes.getInts("split",[]),t=r.outputs.length;return Ce({axis:e,split:n,numOutputs:t})},Mx=(r,e,n,t)=>{let[,o]=Ro.splitShape(e[0].dims,n,t.split,t.numOutputs);return o.length},Lx=(r,e,n,t,o)=>{let[i,s]=Ro.splitShape(e.dims,t,n.split,n.numOutputs),a=s[o],u=i[o],d=`
      float process(int indices[${u.length}]) {
        indices[${t}] += ${a};
        return _A(indices);
      }
    `;return{...Ih,cacheHint:`${n.cacheKey}:${o}`,output:{dims:u,type:e.type,textureType:0},shaderSource:d}},Nx=r=>{if(!r||r.length!==1)throw new Error("Split requires one input.");if(r[0].type!=="int8"&&r[0].type!=="uint8"&&r[0].type!=="int16"&&r[0].type!=="uint16"&&r[0].type!=="int32"&&r[0].type!=="uint32"&&r[0].type!=="float32"&&r[0].type!=="float64"&&r[0].type!=="bool")throw new Error("Invalid input type.")}});var du,Eh,Ph,Fx,Vx,kh=R(()=>{"use strict";qe();du=(r,e,n)=>{Fx(e);let t=ue.squeezeShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},Eh=(r,e)=>(Vx(e),du(r,[e[0]],Array.from(e[1].integerData))),Ph=r=>r.attributes.getInts("axes"),Fx=r=>{if(!r||r.length!==1)throw new Error("Squeeze requires 1 input.");if(r[0].type==="string")throw new Error("invalid input tensor types.")},Vx=r=>{if(!r||r.length!==2)throw new Error("Squeeze requires 2 inputs.");if(r[1].type!=="int32")throw new Error("Invalid input type.")}});var Dh,Ux,Gx,Bh=R(()=>{"use strict";it();Ve();Dh=(r,e)=>{Gx(e);let n={name:"Sum",inputNames:e.map((o,i)=>`X${i}`),inputTypes:new Array(e.length).fill(0)};return[r.run({...n,get:()=>Ux(r,e,n)},e)]},Ux=(r,e,n)=>{let t=me(r.session.backend.glContext.version),o=e[0].dims.slice(),s=`
      void main() {
        vec4 result = ${e.map((a,u)=>`${t.texture2D}(X${u},TexCoords)`).join(" + ")};
        ${t.output} = result;
      }
    `;return{...n,output:{dims:o,type:e[0].type,textureType:0},hasMain:!0,shaderSource:s}},Gx=r=>{if(!r||r.length===0)throw new Error("Sum requires inputs.");let e=r[0].dims.length;for(let n=1;n<r.length;n++){if(e!==r[n].dims.length)throw new Error("Input shapes are mismatched.");for(let t=0;t<e;t++)if(r[0].dims[t]!==r[n].dims[t])throw new Error("Input shapes are not matched.")}if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.");for(let n=1;n<r.length;n++)if(r[0].type!==r[n].type)throw new Error("Input types are not matched.")}});var Rh,Wx,Hx,zh=R(()=>{"use strict";Vo();Ve();Rh=(r,e)=>{Hx(e);let n={name:"Tile",inputNames:["A"],inputTypes:[0]};return[r.run({...n,get:()=>Wx(r,e,n)},e)]},Wx=(r,e,n)=>{let t=e[0].dims.slice(),o=new Array(t.length),i=[];for(let u=0;u<t.length;u++)o[u]=t[u]*e[1].numberData[u],i.push(`inputIdx[${u}] = int(mod(float(outputIdx[${u}]), ${t[u]}.));`);let s=o.length,a=`
      float process(int outputIdx[${s}]) {
        int inputIdx[${s}];
        ${i.join(`
`)}
        return _A(inputIdx);
      }
    `;return{...n,output:{dims:o,type:e[0].type,textureType:0},shaderSource:a}},Hx=r=>{if(!r||r.length!==2)throw new Error("Tile requires 2 input.");if(r[1].dims.length!==1)throw new Error("The second input shape must 1 dimension.");if(r[1].dims[0]!==r[0].dims.length)throw new Error("Invalid input shape.");if(rn.indexOf(r[0].type)===-1)throw new Error("Invalid input type.");if(r[1].type!=="int32"&&r[1].type!=="int16")throw new Error("Invalid repeat type.")}});var cu,Mh,Lh,qx,jx,Nh=R(()=>{"use strict";qe();cu=(r,e,n)=>{qx(e);let t=ue.unsqueezeShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},Mh=(r,e)=>(jx(e),cu(r,[e[0]],Array.from(e[1].integerData))),Lh=r=>r.attributes.getInts("axes"),qx=r=>{if(!r||r.length!==1)throw new Error("Unsqueeze requires 1 input.");if(r[0].type==="string")throw new Error("invalid input tensor types.")},jx=r=>{if(!r||r.length!==2)throw new Error("Unsqueeze requires 2 inputs.");if(r[1].type!=="int32")throw new Error("Invalid input type.")}});var Fh,Vh=R(()=>{"use strict";Xc();df();pf();vf();ea();rp();up();cp();hp();yp();xp();Sp();Cp();ta();Dp();qp();eh();rh();uh();dh();mh();Sh();Ch();kh();Bh();zh();na();Ks();Nh();au();Fh=[["Abs","","6+",wf],["Acos","","7+",xf],["Add","","7+",Zc],["And","","7+",Jc],["Asin","","7+",_f],["Atan","","7+",Tf],["AveragePool","","7+",Rp,zp],["BatchNormalization","","7+",Kc,Yc],["Cast","","6+",cf,ff],["Ceil","","6+",If],["Clip","","6-10",qs,$f],["Clip","","11+",Sf],["Concat","","4+",gf,yf],["Conv","","1+",eu,tu],["ConvTranspose","","1+",ep,tp],["Cos","","7+",Af],["Div","","7+",Qc],["Dropout","","7+",js],["DepthToSpace","","1+",ap,sp],["Equal","","7+",ef],["Elu","","6+",Of,Cf],["Exp","","6+",Ef],["Flatten","","1+",lp,dp],["Floor","","6+",Pf],["FusedConv","com.microsoft","1+",eu,tu],["Gather","","1+",fp,pp],["Gemm","","7-10",ru,gp],["Gemm","","11+",ru,bp],["GlobalAveragePool","","1+",Lp,Np],["GlobalMaxPool","","1+",Wp],["Greater","","7+",tf],["Identity","","1+",js],["ImageScaler","","1+",vp,wp],["InstanceNormalization","","6+",Tp,$p],["LeakyRelu","","6+",kf,Df],["Less","","7+",rf],["LRN","","1+",Ip,Ap],["Log","","6+",Bf],["MatMul","","1+",jf,Kf],["MaxPool","","1+",Fp,Vp],["Mul","","7+",nf],["Neg","","6+",Rf],["Not","","1+",zf],["Or","","7+",of],["Pad","","2-10",nu,Ep],["Pad","","11+",Pp,kp],["Pow","","7+",af],["PRelu","","7+",sf],["ReduceLogSum","","1+",Jp,nn],["ReduceMax","","1+",Yp,nn],["ReduceMean","","1+",Kp,nn],["ReduceMin","","1+",Xp,nn],["ReduceProd","","1+",Zp,nn],["ReduceSum","","1-12",jp,nn],["ReduceSumSquare","","1+",Qp,nn],["Relu","","6+",Mf],["Reshape","","5+",th],["Resize","","10",uu,ah],["Resize","","11+",uu,sh],["Shape","","1+",lh],["Sigmoid","","6+",Lf],["Sin","","7+",Nf],["Slice","","10+",hh],["Slice","","1-9",ch,fh],["Softmax","","1-12",vh,wh],["Softmax","","13+",_h,xh],["Split","","2-12",Ah,Oh],["Sqrt","","6+",Ff],["Squeeze","","1-12",du,Ph],["Squeeze","","13+",Eh],["Sub","","7+",uf],["Sum","","6+",Dh],["Tan","","7+",Vf],["Tanh","","6+",Uf],["Tile","","6+",Rh],["Transpose","","1+",On,op],["Upsample","","7-8",ou,oh],["Upsample","","9",ou,ih],["Unsqueeze","","1-12",cu,Lh],["Unsqueeze","","13+",Mh],["Xor","","7+",lf]]});function Gh(r){let e={},n;for(;(n=Uh.exec(r))!==null;){let t=n[3].split(",").map(o=>{let i=o.trim().split(" ");return i&&i.length===2?{type:i[0],name:i[1]}:null}).filter(o=>o!==null);e[n[2]]={params:t,body:n[4]}}for(let t in e){let o=Kx.replace("__FUNC__",t),i=new RegExp(o,"gm");for(;(n=i.exec(r))!==null;){let s=n[1],a=n[2],u=n[3].split(","),l=s?`${s} ${a};`:"",d=e[t].body,p="";e[t].params.forEach((b,v)=>{b&&(p+=`${b.type} ${b.name} = ${u[v]};
`)}),d=`${p}
 ${d}`,d=d.replace("return",`${a} = `);let m=`
      ${l}
      {
        ${d}
      }
      `;r=r.replace(n[0],m)}}return r=r.replace(Uh,""),r}var Uh,Kx,Wh=R(()=>{"use strict";Uh=/@inline[\s\n\r]+(\w+)[\s\n\r]+([0-9a-zA-Z_]+)\s*\(([^)]*)\)\s*{(([^}]|[\n\r])*)}/gm,Kx="(\\w+)?\\s+([_0-9a-zA-Z]+)\\s+=\\s+__FUNC__\\((.*)\\)\\s*;"});function Qn(r,e){let n=[],t=[],o=e!=null&&Array.isArray(e)&&e.length===0,i=e==null||o?null:Yx(e,r).sort(),s=0;for(let a=0;a<r.length;++a){if(i!=null){if(i[s]===a&&r[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${r[a]}' is not 1`);(i[s]==null||i[s]>a)&&r[a]===1&&(n.push(r[a]),t.push(a)),i[s]<=a&&s++}r[a]!==1&&(n.push(r[a]),t.push(a))}return{newShape:n,keptDims:t}}function Yx(r,e){let n=e.length;return r=r==null?e.map((t,o)=>o):[].concat(r),jn(r.every(t=>t>=-n&&t<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${r}`),jn(r.every(Xx),()=>`All values in axis param must be integers but got axis ${r}`),r.map(t=>t<0?n+t:t)}function Xx(r){return r%1===0}function Zx(r){if(r.length===0)return 1;let e=r[0];for(let n=1;n<r.length;n++)e*=r[n];return e}function Hh(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}var sa,fu=R(()=>{"use strict";rr();qe();sa=class{constructor(e){this.maxTextureSize=e}computeTextureWH(e,n){let t=this.computeTexture(e,n);return n&&n.isPacked&&(t[0]/=2,t[1]/=2),n&&n.reverseWH?[t[1],t[0]]:t}computeTexture(e,n){let t=n&&n.isPacked;if(e.length===0)return t?[2,2]:[1,1];let o=this.maxTextureSize;if(n&&n.breakAxis!==void 0){let a=n.breakAxis>=e.length?1:e.slice(n.breakAxis).reduce((l,d)=>l*d),u=n.breakAxis<=0?1:e.slice(0,n.breakAxis).reduce((l,d)=>l*d);if(a>o||u>o)je.verbose("TextureLayout",`Given width/height preferences were unattainable: shape:${e}, breakAxis:${n.breakAxis}`);else return[a,u]}let i=e.slice(0);t&&(o=o*2,i=i.map((a,u)=>u>=i.length-2?i[u]%2===0?i[u]:i[u]+1:i[u]),i.length===1&&(i=[2,i[0]])),i.length!==2&&(i=Qn(i).newShape);let s=Zx(i);return i.length<=1&&s<=o?[1,s]:i.length===2&&i[0]<=o&&i[1]<=o?i:i.length===3&&i[0]*i[1]<=o&&i[2]<=o?[i[0]*i[1],i[2]]:i.length===3&&i[0]<=o&&i[1]*i[2]<=o?[i[0],i[1]*i[2]]:i.length===4&&i[0]*i[1]*i[2]<=o&&i[3]<=o?[i[0]*i[1]*i[2],i[3]]:i.length===4&&i[0]<=o&&i[1]*i[2]*i[3]<=o?[i[0],i[1]*i[2]*i[3]]:t?Hh(s/4).map(a=>a*2):Hh(s)}}});var ua,qh=R(()=>{"use strict";qe();qr();it();fu();Sr();ua=class extends ar{constructor(n){super(n)}getFunctions(){return{...this.offsetToCoords(),...this.coordsToOffset(),...this.toVec(),...this.valueFrom(),...this.getCommonUtilFuncs(),...this.getInputsSamplingSnippets(),...this.getOutputSamplingSnippet()}}getCustomTypes(){return{}}offsetToCoords(){let n="offsetToCoords";return{offsetToCoords:new ae(`
      vec2 ${n}(int offset, int width, int height) {
        int t = offset / width;
        int s = offset - t*width;
        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);
        return coords;
      }
      `)}}coordsToOffset(){let n="coordsToOffset";return{coordsToOffset:new ae(`
      int ${n}(vec2 coords, int width, int height) {
        float s = coords.s * float(width);
        float t = coords.t * float(height);
        int offset = int(t) * width + int(s);
        return offset;
      }
      `)}}getOutputSamplingSnippet(){let n=this.context.outputTextureLayout;return n.isPacked?this.getPackedOutputSamplingSnippet(n):this.getUnpackedOutputSamplingSnippet(n)}getPackedOutputSamplingSnippet(n){let t=n.unpackedShape,o=[n.width,n.height],i={},s="getOutputCoords";switch(t.length){case 0:i[s]=this.getOutputScalarCoords();break;case 1:i[s]=this.getOutputPacked1DCoords(t,o);break;case 2:i[s]=this.getOutputPacked2DCoords(t,o);break;case 3:i[s]=this.getOutputPacked3DCoords(t,o);break;default:i[s]=this.getOutputPackedNDCoords(t,o)}let u=`
      void setOutput(vec4 val) {
        ${me(this.context.glContext.version).output} = val;
      }
    `,l="floatTextureSetRGBA";return i[l]=new ae(u),i}getUnpackedOutputSamplingSnippet(n){let t=n.unpackedShape,o=[n.width,n.height],i={},s="getOutputCoords";switch(t.length){case 0:i[s]=this.getOutputScalarCoords();break;case 1:i[s]=this.getOutputUnpacked1DCoords(t,o);break;case 2:i[s]=this.getOutputUnpacked2DCoords(t,o);break;case 3:i[s]=this.getOutputUnpacked3DCoords(t,o);break;case 4:i[s]=this.getOutputUnpacked4DCoords(t,o);break;case 5:i[s]=this.getOutputUnpacked5DCoords(t,o);break;case 6:i[s]=this.getOutputUnpacked6DCoords(t,o);break;default:throw new Error(`Unsupported output dimensionality: ${t.length}`)}let u=`
        void setOutput(float val) {
          ${me(this.context.glContext.version).output} = vec4(val, 0, 0, 0);
        }
    `,l="floatTextureSetR";return i[l]=new ae(u),i}getOutputScalarCoords(){return new ae(`
      int getOutputCoords() {
        return 0;
      }
    `)}getOutputPacked1DCoords(n,t){let o=t,i="";return o[0]===1?(i=`
          int getOutputCoords() {
            return 2 * int(TexCoords.y * ${o[1]}.0);
          }
        `,new ae(i)):o[1]===1?(i=`
          int getOutputCoords() {
            return 2 * int(TexCoords.x * ${o[0]}.0);
          }
        `,new ae(i)):(i=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                 vec2(${o[0]}, ${o[1]}));
          return 2 * (resTexRC.y * ${o[0]} + resTexRC.x);
        }
      `,new ae(i))}getOutputPacked2DCoords(n,t){let o="";if(xn.arraysEqual(n,t))return o=`
        ivec2 getOutputCoords() {
          return 2 * ivec2(TexCoords.xy * vec2(${t[0]}, ${t[1]}));
        }
      `,new ae(o);let i=t,s=Math.ceil(n[1]/2);return o=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${i[0]}, ${i[1]}));

          int index = resTexRC.y * ${i[0]} + resTexRC.x;

          // reverse r and c order for packed texture
          int r = imod(index, ${s}) * 2;
          int c = 2 * (index / ${s});

          return ivec2(r, c);
        }
      `,new ae(o)}getOutputPacked3DCoords(n,t){let o=[t[0],t[1]],i=Math.ceil(n[2]/2),s=i*Math.ceil(n[1]/2),a=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${o[0]}, ${o[1]}));
          int index = resTexRC.y * ${o[0]} + resTexRC.x;

          int b = index / ${s};
          index -= b * ${s};

          // reverse r and c order for packed texture
          int r = imod(index, ${i}) * 2;
          int c = 2 * (index / ${i});

          return ivec3(b, r, c);
        }
      `;return new ae(a)}getOutputPackedNDCoords(n,t){let o=[t[0],t[1]],i=Math.ceil(n[n.length-1]/2),s=i*Math.ceil(n[n.length-2]/2),a=s,u="",l="b, r, c";for(let p=2;p<n.length-1;p++)a*=n[n.length-p-1],u=`
      int b${p} = index / ${a};
      index -= b${p} * ${a};
    `+u,l=`b${p}, `+l;let d=`
      ivec${n.length} getOutputCoords() {
        ivec2 resTexRC = ivec2(TexCoords.xy *
                              vec2(${o[0]}, ${o[1]}));
        int index = resTexRC.y * ${o[0]} + resTexRC.x;

        ${u}

        int b = index / ${s};
        index -= b * ${s};

        // reverse r and c order for packed texture
        int r = imod(index, ${i}) * 2;
        int c = 2 * (index / ${i});

        return ivec${n.length}(${l});
      }
    `;return new ae(d)}getOutputUnpacked1DCoords(n,t){let o=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          return resTexRC.y * ${t[0]} + resTexRC.x;
        }
      `;return new ae(o)}getOutputUnpacked2DCoords(n,t){let o=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          int r = index / ${n[1]};
          int c = index - r * ${n[1]};
          return ivec2(r, c);
        }
      `;return new ae(o)}getOutputUnpacked3DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d"],u=s.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,m=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${m};`}).join("");return o=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${u}
          return ivec3(r, c, d);
        }
      `,new ae(o)}getOutputUnpacked4DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d","d2"],u=s.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,m=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${m};`}).join("");return o=`
      ivec4 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${u}
          return ivec4(r, c, d, d2);
        }
      `,new ae(o)}getOutputUnpacked5DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d","d2","d3"],u=s.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,m=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${m};`}).join("");return o=`
      ivec5 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${u}
          return ivec5(r, c, d, d2, d3);
        }
      `,new ae(o)}getOutputUnpacked6DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d","d2","d3","d4"],u=s.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,m=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${m};`}).join("");return o=`
     ivec6 getOutputCoords() {
         ivec2 resTexRC = ivec2(TexCoords.xy *
                               vec2(${t[0]}, ${t[1]}));
         int index = resTexRC.y * ${t[0]} + resTexRC.x;
         ${u}
         return ivec6(r, c, d, d2, d3, d4);
       }
     `,new ae(o)}getCommonUtilFuncs(){let n={},t="uvFromFlat";n[t]=new ae(`
    vec2 uvFromFlat(int texNumR, int texNumC, int index) {
      int texC = index / texNumR;
      int texR = index - texC * texNumR;
      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to
      //       v.
      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);
    }
    `),t="packedUVfrom1D",n[t]=new ae(`
      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
        int texelIndex = index / 2;
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="packedUVfrom2D",n[t]=new ae(`
      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {
        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="packedUVfrom3D",n[t]=new ae(`
      vec2 packedUVfrom3D(int texNumR, int texNumC,
          int texelsInBatch, int texelsInLogicalRow, int b,
          int row, int col) {
        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = index / texNumC;
        int texC = index - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="sampleTexture";let o=me(this.context.glContext.version);return n[t]=new ae(`
        float sampleTexture(sampler2D textureSampler, vec2 uv) {
            return ${o.texture2D}(textureSampler, uv).r;
        }`),n}getInputsSamplingSnippets(){let n={},t=this.context.outputTextureLayout;return this.context.programInfo.inputNames.forEach((o,i)=>{let s=this.context.inputTextureLayouts[i],a=ji(o);s.isPacked?n[a]=this.getPackedSamplerFromInput(a,o,s):n[a]=this.getUnpackedSamplerFromInput(a,o,s);let u=kc(o);s.unpackedShape.length<=t.unpackedShape.length&&(s.isPacked?n[u]=this.getPackedSamplerAtOutputCoords(u,s,t,o):n[u]=this.getUnpackedSamplerAtOutputCoords(u,s,t,o))}),n}getPackedSamplerAtOutputCoords(n,t,o,i){let s=t.unpackedShape,a=o.unpackedShape,l=ji(i),d=s.length,p=a.length,m=Lt.getBroadcastDims(s,a),b=Nt(p),v=p-d,w,A=br();d===0?w="":p<2&&m.length>=1?w="coords = 0;":w=m.map(le=>`coords.${A[le+v]} = 0;`).join(`
`);let $="";p<2&&d>0?$="coords":$=s.map((le,z)=>`coords.${A[z+v]}`).join(", ");let _="return outputValue;",P=ue.size(s)===1,F=ue.size(a)===1;if(d===1&&!P&&!F)_=`
        return vec4(outputValue.xy, outputValue.xy);
      `;else if(P&&!F)p===1?_=`
          return vec4(outputValue.x, outputValue.x, 0., 0.);
        `:_=`
          return vec4(outputValue.x);
        `;else if(m.length){let le=d-2,z=d-1;m.indexOf(le)>-1&&m.indexOf(z)>-1?_="return vec4(outputValue.x);":m.indexOf(le)>-1?_="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":m.indexOf(z)>-1&&(_="return vec4(outputValue.xx, outputValue.zz);")}let G=`
        int lastDim = coords.${A[p-1]};
        coords.${A[p-1]} = coords.${A[p-2]};
        coords.${A[p-2]} = lastDim;
      `,J=`
      vec4 ${n}() {
        ${b} coords = getOutputCoords();
        ${G}
        ${w}
        vec4 outputValue = ${l}(${$});
        ${_}
      }
    `;return new ae(J,["coordinates.getOutputCoords"])}getUnpackedSamplerAtOutputCoords(n,t,o,i){let s=[o.width,o.height],a=[t.width,t.height],u=t.unpackedShape.length,l=o.unpackedShape.length,d=t.unpackedShape,p=o.unpackedShape,m=ji(i);if(u===l&&xn.arraysEqual(a,s)){let P=`
          float ${n}() {
            return sampleTexture(${i}, TexCoords);
          }
        `;return new ae(P,["coordinates.sampleTexture"])}let b=Nt(l),v=Lt.getBroadcastDims(d,p),w=l-u,A,$=br();u===0?A="":l<2&&v.length>=1?A="coords = 0;":A=v.map(P=>`coords.${$[P+w]} = 0;`).join(`
`);let _="";l<2&&u>0?_="coords":_=t.unpackedShape.map((P,L)=>`coords.${$[L+w]}`).join(", ");let O=`
        float ${n}() {
          ${b} coords = getOutputCoords();
          ${A}
          return ${m}(${_});
        }
      `;return new ae(O,["coordinates.getOutputCoords"])}getPackedSamplerFromInput(n,t,o){switch(o.unpackedShape.length){case 0:return this.getPackedSamplerScalar(n,t);case 1:return this.getPackedSampler1D(n,t,o);case 2:return this.getPackedSampler2D(n,t,o);case 3:return this.getPackedSampler3D(n,t,o);default:return this.getPackedSamplerND(n,t,o)}}getUnpackedSamplerFromInput(n,t,o){let i=o.unpackedShape;switch(i.length){case 0:return this.getUnpackedSamplerScalar(n,t,o);case 1:return this.getUnpackedSampler1D(n,t,o);case 2:return this.getUnpackedSampler2D(n,t,o);case 3:return this.getUnpackedSampler3D(n,t,o);case 4:return this.getUnpackedSampler4D(n,t,o);case 5:return this.getUnpackedSampler5D(n,t,o);case 6:return this.getUnpackedSampler6D(n,t,o);default:throw new Error(`Unsupported dimension ${i.length}-D`)}}getPackedSamplerScalar(n,t){let o=me(this.context.glContext.version),i=`
          vec4 ${n}() {
            return ${o.texture2D}(${t}, halfCR);
          }
        `;return new ae(i)}getPackedSampler1D(n,t,o){let i=[o.width,o.height],s=[i[1],i[0]],a=me(this.context.glContext.version),l=`vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
      ${s[0]}, ${s[1]}, index);
      return ${a.texture2D}(${t}, uv);
    }`;return new ae(l,["coordinates.packedUVfrom1D"])}getPackedSampler2D(n,t,o){let i=o.unpackedShape,s=[o.width,o.height],a=me(this.context.glContext.version),u=s[0],l=s[1];if(s!=null&&xn.arraysEqual(i,s)){let v=`vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${u}.0);
        return ${a.texture2D}(${t}, uv);
      }`;return new ae(v)}let d=s,p=Math.ceil(i[1]/2),b=`vec4 ${n}(int row, int col) {
      vec2 uv = packedUVfrom2D(${d[1]}, ${d[0]}, ${p}, row, col);
      return ${a.texture2D}(${t}, uv);
    }`;return new ae(b,["coordinates.packedUVfrom2D"])}getPackedSampler3D(n,t,o){let i=o.unpackedShape,s=[o.width,o.height],a=[s[0],s[1]],u=me(this.context.glContext.version);if(i[0]===1){let w=i.slice(1),A=[1,2],$=Kn(i,w),_=["b","row","col"],O=JSON.parse(JSON.stringify(o));O.unpackedShape=$;let P=this.getPackedSamplerFromInput(n,t,O),F=`${P.routineBody}
      vec4 ${n}(int b, int row, int col) {
        return ${n}(${Yn(_,A)});
      } `;return new ae(F,P.dependencies)}let l=a[0],d=a[1],p=Math.ceil(i[2]/2),m=p*Math.ceil(i[1]/2),v=`vec4 ${n}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${d}, ${l}, ${m}, ${p}, b, row, col);
      return ${u.texture2D}(${t}, uv);}`;return new ae(v,["coordinates.packedUVfrom3D"])}getPackedSamplerND(n,t,o){let i=o.unpackedShape,s=i.length,a=[o.width,o.height],u=me(this.context.glContext.version),l=[a[0],a[1]],d=l[1],p=l[0],m=Math.ceil(i[s-1]/2),b=m*Math.ceil(i[s-2]/2),v="int b, int row, int col",w=`b * ${b} + (row / 2) * ${m} + (col / 2)`;for(let _=2;_<s-1;_++)v=`int b${_}, `+v,b*=i[s-_-1],w=`b${_} * ${b} + `+w;let $=`vec4 ${n}(${v}) {
      int index = ${w};
      int texR = index / ${p};
      int texC = index - texR * ${p};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${d});
      return ${u.texture2D}(${t}, uv);
    }`;return new ae($)}getUnpackedSamplerScalar(n,t,o){let[i,s]=[o.width,o.height];if(i===1&&s===1){let u=`
          float ${n}() {
            return sampleTexture(${t}, halfCR);
          }
        `;return new ae(u,["coordinates.sampleTexture"])}let a=`
        float ${n}() {
          int offset_${t} = coordsToOffset(TexCoords, ${i}, ${s});
          vec2 uv = uvFromFlat(${i}, ${s}, offset_${t});
          return sampleTexture(${t}, uv);
        }
      `;return new ae(a,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler1D(n,t,o){let i=o.width,s=o.height;if(s===1&&i===1){let u=`
        float ${n}(int index) {
          return sampleTexture(${t}, halfCR);
        }
      `;return new ae(u,["coordinates.sampleTexture"])}if(s===1){let u=`
          float ${n}(int index) {
            vec2 uv = vec2((float(index) + 0.5) / ${i}.0, 0.5);
            return sampleTexture(${t}, uv);
          }
        `;return new ae(u,["coordinates.sampleTexture"])}if(i===1){let u=`
          float ${n}(int index) {
            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${s}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new ae(u,["coordinates.sampleTexture"])}let a=`
        float ${n}(int index) {
          vec2 uv = uvFromFlat(${i}, ${s}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new ae(a,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler2D(n,t,o){let i=o.unpackedShape,s=[o.height,o.width];if(s!=null&&xn.arraysEqual(i,s)){let b=s[1],v=s[0],w=`
          float ${n}(int row, int col) {
            vec2 uv = (vec2(row, col) + halfCR) / vec2(${b}.0, ${v}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new ae(w,["coordinates.sampleTexture"])}let{newShape:a,keptDims:u}=Qn(i),l=a;if(l.length<i.length){let b=Kn(i,l),v=JSON.parse(JSON.stringify(o));v.unpackedShape=b;let w=["col","row"],A=`
          ${this.getUnpackedSamplerFromInput(n,t,v).routineBody}
          float ${n}(int row, int col) {
            return ${n}(${Yn(w,u)});
          }
        `;return new ae(A,["coordinates.sampleTexture"])}let d=s[1],p=s[0];if(p===1){let b=`
          float ${n}(int row, int col) {
            int offset_${t} = coordsToOffset(TexCoords, ${d}, ${p});
            float index = dot(vec3(row, col, offset_${t}), vec3(${i[1]}, 1, 1));
            vec2 uv = vec2(0.5, (index + 0.5) / ${d}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new ae(b,["coordinates.sampleTexture","coordinates.coordsToOffset"])}if(d===1){let b=`
          float ${n}(int row, int col) {
            int offset_${t} = coordsToOffset(TexCoords, ${d}, ${p});
            float index = dot(vec3(row, col, offset_${t}), vec3(${i[1]}, 1, 1));
            vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);
            return sampleTexture(${t}, uv);
          }
        `;return new ae(b,["coordinates.sampleTexture","coordinates.coordsToOffset"])}let m=`
        float ${n}(int row, int col) {
          int index = col * ${i[1]} + row;
          vec2 uv = uvFromFlat(${d}, ${p}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new ae(m,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler3D(n,t,o){let i=o.unpackedShape,s=i[1]*i[2],a=i[2],{newShape:u,keptDims:l}=Qn(i),d=u;if(d.length<i.length){let v=Kn(i,d),w=["batch","col","row"],A=JSON.parse(JSON.stringify(o));A.unpackedShape=v;let $=this.getUnpackedSamplerFromInput(n,t,A),_=l.reverse(),O=`
          ${$.routineBody}
          float ${n}(int batch, int row, int col) {
            return ${n}(${Yn(w,_)});
          }
        `;return new ae(O,$.dependencies)}let p=o.width,m=o.height,b=`
          float ${n}(int depth, int row, int col) {
            // Explicitly use integer operations as dot() only works on floats.
            int index = depth * ${s} + col * ${a} + row;
            vec2 uv = uvFromFlat(${p}, ${m}, index);
            return sampleTexture(${t}, uv);
          }
      `;return new ae(b,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler4D(n,t,o){let i=o.unpackedShape,s=i[3],a=i[2]*s,u=i[1]*a,l=o.width,d=o.height,p=`
        float ${n}(int row, int col, int depth, int depth2) {
          int index = row * ${u} + col * ${a} +
              depth2 * ${s} + depth;
          vec2 uv = uvFromFlat(${l}, ${d}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new ae(p,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler5D(n,t,o){let i=o.unpackedShape,s=i[4],a=i[3]*s,u=i[2]*a,l=i[1]*u,{newShape:d,keptDims:p}=Qn(i);if(d.length<i.length){let w=Kn(i,d),A=["row","col","depth","depth2","depth3"],$=JSON.parse(JSON.stringify(o));$.unpackedShape=w;let _=`
          ${this.getUnpackedSamplerFromInput(n,t,$).routineBody}
          float ${n}(int row, int col, int depth, int depth2, int depth3) {
            return ${n}(${Yn(A,p)});
          }
        `;return new ae(_,["coordinates.sampleTexture","coordinates.uvFromFlat"])}let m=o.width,b=o.height,v=`
        float ${n}(int row, int col, int depth, int depth2, int depth3) {
          int index = row * ${l} + col * ${u} + depth * ${a} +
          depth3 * ${s} + depth2;
          vec2 uv = uvFromFlat(${m}, ${b}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new ae(v,["coordinates.sampleTexture","coordinates.uvFromFlat"])}getUnpackedSampler6D(n,t,o){let i=o.unpackedShape,s=i[5],a=i[4]*s,u=i[3]*a,l=i[2]*u,d=i[1]*l,{newShape:p,keptDims:m}=Qn(i);if(p.length<i.length){let A=Kn(i,p),$=["row","col","depth","depth2","depth3","depth4"],_=JSON.parse(JSON.stringify(o));_.unpackedShape=A;let O=`
            ${this.getUnpackedSamplerFromInput(n,t,_).routineBody}
            float ${n}(int row, int col, int depth,
              int depth2, int depth3, int depth4) {
              return ${n}(${Yn($,m)});
            }
          `;return new ae(O,["coordinates.sampleTexture","coordinates.uvFromFlat"])}let b=o.width,v=o.height,w=`
          float ${n}(int row, int col, int depth,
            int depth2, int depth3, int depth4) {
            int index = row * ${d} + col * ${l} + depth * ${u} +
            depth2 * ${a} + depth3 * ${s} + depth4;
            vec2 uv = uvFromFlat(${b}, ${v}, index);
            return sampleTexture(${t}, uv);
          }
        `;return new ae(w,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}toVec(){let n=this.context.outputTextureLayout,t=n.shape.length,o=n.strides,i=n.width,s=n.height,a=[];for(let l=0;l<t-1;++l)a.push(`
        c[${l}] = offset / ${o[l]};`),a.push(`
        offset -= c[${l}] * ${o[l]};`);a.push(`
        c[${t-1}] = offset;`);let u=`
      void toVec(vec2 texCoords, out int c[${t}]) {
        int offset = coordsToOffset(texCoords, ${i}, ${s});
        ${a.join("")}
      }
      void toVec(int offset, out int c[${t}]) {
        ${a.join("")}
      }
    `;return{toVec:new ae(u,["coordinates.coordsToOffset"])}}valueFrom(){let n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o],a=(i.unpackedShape.length>0?i.unpackedShape:i.shape).length,u=`_${t}`;n[u]=new ae(this.getValueFromSingle(t,a,i.width,i.height,!1),[`shapeUtils.indicesToOffset${u}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"]),u=u+"_T",n[u]=new ae(this.getValueFromSingle(t,a,i.width,i.height,!0),[`shapeUtils.indicesToOffset${u}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"])}),n}getValueFromSingle(n,t,o,i,s){let a=`_${n}`;s&&(a=a+"_T");let u=me(this.context.glContext.version);return`
        float ${a}(int m[${t}]) {
          int offset = indicesToOffset${a}(m);
          vec2 coords = offsetToCoords(offset, ${o}, ${i});
          float value = getColorAsFloat(${u.texture2D}(${n}, coords));
          return value;
        }
        `}getPackedValueFrom(n,t,o,i,s){let a=`_${n}_Pack`;s&&(a=a+"_T");let u=me(this.context.glContext.version);return`
        vec4 ${a}(int m[${t}]) {
          int offset = indicesToOffset_${n}(m);
          vec2 coords = offsetToCoords(offset, ${o}, ${i});
          return ${u.texture2D}(${n}, coords);
        }
        `}}});var la,jh=R(()=>{"use strict";qr();la=class r extends ar{constructor(e){super(e)}getFunctions(){return{...this.encodeFloat32(),...this.decodeFloat32()}}getCustomTypes(){return{}}encodeFloat32(){return{encode:new ae(`highp vec4 encode(highp float f) {
        return vec4(f, 0.0, 0.0, 0.0);
      }
        `)}}decodeFloat32(){return{decode:new ae(`highp float decode(highp vec4 rgba) {
        return rgba.r;
      }
        `)}}encodeUint8(){let e=r.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{encode:new ae(`
      highp vec4 encode(highp float f) {
        highp float F = abs(f);
        highp float Sign = step(0.0,-f);
        highp float Exponent = floor(log2(F));
        highp float Mantissa = (exp2(- Exponent) * F);
        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));
        highp vec4 rgba;
        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));
        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);
        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));
        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));
        ${e}
        rgba = rgba / 255.0; // values need to be normalized to [0,1]
        return rgba;
    }
        `)}}decodeUint8(){let e=r.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{decode:new ae(`
        highp float decode(highp vec4 rgba) {
          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]
          ${e}
          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;
          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;
          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);
          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));
          return Result;
      }
        `)}}static isLittleEndian(){let e=new ArrayBuffer(4),n=new Uint32Array(e),t=new Uint8Array(e);if(n[0]=3735928559,t[0]===239)return!0;if(t[0]===222)return!1;throw new Error("unknown endianness")}}});var da,Kh=R(()=>{"use strict";qr();it();da=class extends ar{constructor(e){super(e)}getFunctions(){return{...this.setFragColor(),...this.getColorAsFloat()}}getCustomTypes(){return{}}setFragColor(){let e=me(this.context.glContext.version);return{setFragColor:new ae(`
        void setFragColor(float value) {
            ${e.output} = encode(value);
        }
        `,["encoding.encode"])}}getColorAsFloat(){return{getColorAsFloat:new ae(`
        float getColorAsFloat(vec4 color) {
            return decode(color);
        }
        `,["encoding.decode"])}}}});var ca,Yh=R(()=>{"use strict";qr();ca=class r extends ar{constructor(e){super(e)}getFunctions(){return{...this.bcastIndex(),...this.bcastMatmulIndex(),...this.offsetToIndices(),...this.indicesToOffset(),...this.incrementIndices()}}getCustomTypes(){return{}}bcastIndex(){let e=this.context.outputTextureLayout.shape.length,n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o].unpackedShape;if(i.length<=e){let s=i.length,a=e-s,u=`bcastIndices_${t}`,l="";for(let p=0;p<s;++p)l+=`
          realIndices[${p}] = int( mod(float(bcastedIndices[${a+p}]), ${i[p]}.0) );
          `;let d=`
        void ${u} (int bcastedIndices[${e}], out int realIndices[${s}]) {
          ${l}
        }
        `;n[u]=new ae(d)}}),n}bcastMatmulIndex(){let e=this.context.outputTextureLayout.shape.length,n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o].shape;if(!(i.length<2||i.length>e)){let s=i.length,a=e-s,u=`bcastMatmulIndices_${t}`,l="";for(let p=0;p<s-2;++p)l+=`
          realIndices[${p}] = int( mod(float(bcastedIndices[${a+p}]), ${i[p]}.0) );
          `;let d=`
        void ${u}(int bcastedIndices[${e}], out int realIndices[${s}]) {
          ${l}
          realIndices[${s-1}] = bcastedIndices[${e-1}];
          realIndices[${s-2}] = bcastedIndices[${e-2}];
        }
        `;n[u]=new ae(d)}}),n}indicesToOffset(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=this.context.inputTextureLayouts[t].strides,s=o.length,a=`indicesToOffset_${n}`;e[a]=new ae(r.indexToOffsetSingle(a,s,i)),a=`indicesToOffset_${n}_T`,e[a]=new ae(r.indexToOffsetSingle(a,s,i.slice().reverse()))}),e}static indexToOffsetSingle(e,n,t){let o="";for(let i=n-1;i>=0;--i)o+=`
        offset += indices[${i}] * ${t[i]};
        `;return`
      int ${e}(int indices[${n}]) {
        int offset = 0;
        ${o}
        return offset;
      }
      `}offsetToIndices(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=this.context.inputTextureLayouts[t].strides,s=o.length,a=`offsetToIndices_${n}`;e[a]=new ae(r.offsetToIndicesSingle(a,s,i)),a=`offsetToIndices_${n}_T`,e[a]=new ae(r.offsetToIndicesSingle(a,s,i.slice().reverse()))}),e}static offsetToIndicesSingle(e,n,t){let o=[];for(let i=0;i<n-1;++i)o.push(`
      indices[${i}] = offset / ${t[i]};`),o.push(`
        offset -= indices[${i}] * ${t[i]};`);return o.push(`
      indices[${n-1}] = offset;`),`
      void ${e}(int offset, out int indices[${n}]) {
        ${o.join("")}
      }
      `}incrementIndices(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=o.length,s=`incrementIndices_${n}`,a="";for(let l=0;l<i;++l)a+=`
        shape[${l}] = ${o[l]};`;let u=`
        void ${s}(int axis, out int indices[${i}]) {
          int shape[${i}];
          ${a};
          for(int i = ${i} -1 ; i >= 0; --i) {
            if(i > axis) continue;
            indices[i] += 1;
            if(indices[i] < shape[i]) {
              break;
            }
            indices[i] = 0;
          }
        }
        `;e[s]=new ae(u)}),e}}});var fa,Xh=R(()=>{"use strict";qr();fa=class extends ar{constructor(e){super(e)}getCustomTypes(){return{}}getFunctions(){return{...this.binaryVecFunctions(),...this.copyVec(),...this.setVecItem(),...this.getVecItem()}}binaryVecFunctions(){let n=this.context.outputTextureLayout.shape.length,t={add:"+=",sub:"-=",mul:"*=",div:"/="},o={};for(let i in t){let s=`${i}Vec`,a="";for(let l=0;l<n;++l)a+=`
          dest[${l}] ${t[i]} src[${l}];
          `;let u=`
        void ${s}(int src[${n}], out int dest[${n}]) {
          ${a}
        }
        `;o[s]=new ae(u)}return o}copyVec(){let n=this.context.outputTextureLayout.shape.length,t="";for(let i=0;i<n;++i)t+=`
        dest[${i}] = src[${i}];
        `;let o=`
      void copyVec(int src[${n}], out int dest[${n}]) {
        ${t}
      }
      `;return{copyVec:new ae(o)}}setVecItem(){let n=this.context.outputTextureLayout.shape.length,t=`
        if(index < 0)
            index =${n} + index;
        if (index == 0)
            m[0] = value;
        `;for(let i=1;i<n-1;++i)t+=`
        else if (index == ${i})
            m[${i}] = value;
            `;t+=`
        else
            m[${n-1}] = value;
        `;let o=`
      void setVecItem(out int m[${n}], int index, int value) {
        ${t}
      }
        `;return{setVecItem:new ae(o)}}getVecItem(){let n=this.context.outputTextureLayout.shape.length,t=`
        if(index < 0)
            index = ${n} + index;
        if (index == 0)
            return m[0];
      `;for(let i=1;i<n-1;++i)t+=`
        else if (index == ${i})
            return m[${i}];
      `;t+=`
        else
            return m[${n-1}];
        `;let o=`
      int getVecItem(int m[${n}], int index) {
        ${t}
      }
    `;return{getVecItem:new ae(o)}}}});var pu,Zh=R(()=>{"use strict";qh();jh();Kh();Yh();Xh();pu={encoding:la,fragcolor:da,vec:fa,shapeUtils:ca,coordinates:ua}});var pa,Jh=R(()=>{"use strict";qr();Wh();Zh();it();pa=class{constructor(e,n,t,o){this.libs={};this.glslLibRoutineDependencyGraph={};this.context=new Zi(e,n,t,o),Object.keys(pu).forEach(s=>{let a=new pu[s](this.context);this.libs[s]=a});let i=this.glslLibRoutineDependencyGraph;for(let s in this.libs){let u=this.libs[s].getFunctions();for(let l in u){let d=s+"."+l,p;i[d]?(p=i[d],p.routineBody=u[l].routineBody):(p=new Fo(d,u[l].routineBody),i[d]=p);let m=u[l].dependencies;if(m)for(let b=0;b<m.length;++b)if(i[m[b]])p.addDependency(i[m[b]]);else{let v=new Fo(m[b]);i[m[b]]=v,p.addDependency(v)}}}}preprocess(){let e=this.context.programInfo,n=e.shaderSource;return this.context.programInfo.hasMain||(n=`${n}
      ${Pc(this.context.glContext.version,this.context.outputTextureLayout.shape.length)}`),n=Gh(n),`${Ec(this.context.glContext.version)}
    ${this.getUniforms(e.inputNames,e.variables)}
    ${this.getImports(n)}
    ${n}`}getImports(e){let n=this.selectGlslLibRoutinesToBeIncluded(e);if(n.length===0)return"";let t="";for(let o=0;o<n.length;++o)if(n[o].routineBody)t+=n[o].routineBody+`
`;else throw new Error(`Missing body for the Glsl Library routine: ${n[o].name}`);return t}selectGlslLibRoutinesToBeIncluded(e){let n=[];return Object.keys(this.glslLibRoutineDependencyGraph).forEach(t=>{let o=t.split(".")[1];e.indexOf(o)!==-1&&n.push(this.glslLibRoutineDependencyGraph[t])}),Ji.returnOrderedNodes(n)}getUniforms(e,n){let t=[];if(e)for(let o of e)t.push(`uniform sampler2D ${o};`);if(n)for(let o of n)t.push(`uniform ${o.type} ${o.name}${o.arrayLength?`[${o.arrayLength}]`:""};`);return t.join(`
`)}}});var ha,Qh=R(()=>{"use strict";Ot();rr();Jh();it();ha=class{constructor(e,n,t){this.profiler=e;this.glContext=n;this.textureLayoutStrategy=t;this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,n){this.repo.set(e,n)}run(e,n,t){this.profiler.event("op",`ProgramManager.run ${e.programInfo.name??"unknown kernel"}`,()=>{let o=this.glContext.gl,i=e.program;o.useProgram(i);try{this.bindOutput(t),this.attributesBound||this.bindAttributes(e.attribLocations),this.bindUniforms(e.uniformLocations,e.programInfo.variables??[],n)}catch(s){throw je.error("ProgramManager",e.programInfo.shaderSource),s}this.profiler.event("backend","GlContext.draw()",()=>{this.glContext.draw()})},this.glContext)}dispose(){this.vertexShader&&this.glContext.deleteShader(this.vertexShader),this.repo.forEach(e=>this.glContext.deleteProgram(e.program))}build(e,n,t){return this.profiler.event("backend","ProgramManager.build",()=>{let o=new pa(this.glContext,e,n,t),i=o.preprocess(),s=this.compile(i);return{programInfo:e,program:s,uniformLocations:this.getUniformLocations(s,o.context.programInfo.inputNames,o.context.programInfo.variables),attribLocations:this.getAttribLocations(s)}})}compile(e){if(!this.vertexShader){je.verbose("ProrgramManager","Compiling and caching Vertex shader for the first time");let o=Cc(this.glContext.version);this.vertexShader=this.glContext.compileShader(o,this.glContext.gl.VERTEX_SHADER)}ye.debug&&je.verbose("ProrgramManager",`FragShader:
${e}
`);let n=this.glContext.compileShader(e,this.glContext.gl.FRAGMENT_SHADER),t=this.glContext.createProgram(this.vertexShader,n);return this.glContext.deleteShader(n),t}bindOutput(e){let n=e.width,t=e.height;je.verbose("ProrgramManager",`Binding output texture to Framebuffer: w/h=${n}/${t}, shape=${e.shape}, type=${e.tensor.type}`),this.glContext.attachFramebuffer(e.texture,n,t)}bindAttributes(e){let n=e.position,t=e.textureCoord;this.glContext.setVertexAttributes(n,t),this.attributesBound=!0}bindUniforms(e,n,t){let o=this.glContext.gl,i=0;for(let{name:s,type:a,location:u,arrayLength:l}of e){let d=n.find(p=>p.name===s)?.data;if(a!=="sampler2D"&&!d)throw new Error(`variable '${s}' does not have data defined in program info`);switch(a){case"sampler2D":this.bindTexture(t[i],u,i),i++;break;case"float":l?o.uniform1fv(u,d):o.uniform1f(u,d);break;case"int":l?o.uniform1iv(u,d):o.uniform1i(u,d);break;default:throw new Error(`Uniform not implemented: ${a}`)}}}bindTexture(e,n,t){this.glContext.bindTextureToUniform(e.texture,t,n)}getAttribLocations(e){return{position:this.getAttribLocation(e,"position"),textureCoord:this.getAttribLocation(e,"textureCoord")}}getUniformLocations(e,n,t){let o=[];if(n)for(let i of n)o.push({name:i,type:"sampler2D",location:this.getUniformLocation(e,i)});if(t)for(let i of t)o.push({...i,location:this.getUniformLocation(e,i.name)});return o}getUniformLocation(e,n){let o=this.glContext.gl.getUniformLocation(e,n);if(o===null)throw new Error(`Uniform ${n} not found.`);return o}getAttribLocation(e,n){return this.glContext.gl.getAttribLocation(e,n)}}});var ma,em=R(()=>{"use strict";rr();Lo();ma=class{constructor(e,n,t,o){this.glContext=e;this.layoutStrategy=n;this.profiler=t;this.config=o;this.pendingRead=new Map;o.reuseTextures&&(this.inUseTextures=new Map,this.idleTextures=new Map,this.textureLookup=new Map)}createTextureFromLayout(e,n,t,o){let i=this.toEncoderType(e),s=this.glContext.getEncoder(i,n.channels||1,o);if(n.isPacked&&o===1)throw new Error("not implemented");let a=n.width,u=n.height,l,d;if(this.config.reuseTextures){l=`${a}x${u}_${s.format}_${s.internalFormat}_${s.textureType}`,d=this.inUseTextures.get(l),d||(d=[],this.inUseTextures.set(l,d));let m=this.idleTextures.get(l);if(m&&m.length>0){let b=m.pop();return d.push(b),o===1&&this.glContext.updateTexture(b,a,u,s,this.toTextureData(e,t)),b}}je.verbose("TextureManager",`Creating new texture of size ${n.width}x${n.height}`);let p=this.glContext.allocateTexture(a,u,s,this.toTextureData(e,t));return this.config.reuseTextures&&(d.push(p),this.textureLookup.set(p,l)),p}readTexture(e,n,t){return t||(t=1),this.profiler.event("backend","TextureManager.readTexture",()=>{let o=e.shape.reduce((s,a)=>s*a)*t,i=this.glContext.readTexture(e.texture,e.width,e.height,o,this.toEncoderType(n),t);return this.toTensorData(n,i)})}async readTextureAsync(e,n,t){let o=e.tensor.dataId;if(t||(t=1),this.pendingRead.has(o)){let i=this.pendingRead.get(o);return new Promise(s=>i?.push(s))}return this.profiler.event("backend","TextureManager.readTextureAsync",async()=>{this.pendingRead.set(o,[]);let i=e.shape.reduce((l,d)=>l*d)*t;await this.glContext.createAndWaitForFence();let s=this.glContext.readTexture(e.texture,e.width,e.height,i,this.toEncoderType(n),t),a=this.toTensorData(n,s),u=this.pendingRead.get(o);return this.pendingRead.delete(o),u?.forEach(l=>l(a)),a})}readUint8TextureAsFloat(e){return this.profiler.event("backend","TextureManager.readUint8TextureAsFloat",()=>{let n=e.shape.reduce((o,i)=>o*i),t=this.glContext.readTexture(e.texture,e.width,e.height,n*4,"byte",4);return new Float32Array(t.buffer,t.byteOffset,n)})}releaseTexture(e,n){let t;if(this.config.reuseTextures&&(t=this.textureLookup.get(e.texture),t)){n&&this.textureLookup.delete(t);let o=this.inUseTextures.get(t);if(o){let i=o.indexOf(e.texture);if(i!==-1){o.splice(i,1);let s=this.idleTextures.get(t);s||(s=[],this.idleTextures.set(t,s)),s.push(e.texture)}}}(!t||n)&&(je.verbose("TextureManager",`Deleting texture of size ${e.width}x${e.height}`),this.glContext.deleteTexture(e.texture))}toTensorData(e,n){switch(e){case"int16":return n instanceof Int16Array?n:Int16Array.from(n);case"int32":return n instanceof Int32Array?n:Int32Array.from(n);case"int8":return n instanceof Int8Array?n:Int8Array.from(n);case"uint16":return n instanceof Uint16Array?n:Uint16Array.from(n);case"uint32":return n instanceof Uint32Array?n:Uint32Array.from(n);case"uint8":case"bool":return n instanceof Uint8Array?n:Uint8Array.from(n);case"float32":return n instanceof Float32Array?n:Float32Array.from(n);case"float64":return n instanceof Float64Array?n:Float64Array.from(n);default:throw new Error(`TensorData type ${e} is not supported`)}}toTextureData(e,n){if(n)return n instanceof Float32Array?n:new Float32Array(n)}toEncoderType(e){return"float"}clearActiveTextures(){this.glContext.clearActiveTextures()}}});var ga,tm=R(()=>{"use strict";rr();md();qc();Vh();Qh();fu();em();ga=class{constructor(e,n){this.backend=e;this.context=n;this.layoutStrategy=new sa(e.glContext.maxTextureSize),this.programManager=new ha(this.context.profiler,e.glContext,this.layoutStrategy),this.textureManager=new ma(e.glContext,this.layoutStrategy,this.context.profiler,{reuseTextures:e.textureCacheMode==="full"}),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map,this.pack=e.pack,this.pack2unpackMap=new Map,this.unpack2packMap=new Map}createInferenceHandler(){return new Xi(this)}onGraphInitialized(e){let n=e.getValues().filter(t=>t.from===-1&&t.tensor).map(t=>t.tensor.dataId);this.initializers=new Set(n)}isInitializer(e){return this.initializers?this.initializers.has(e):!1}addInitializer(e){this.initializers.add(e)}getTextureData(e,n){return n?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,n,t=!1){je.verbose("WebGLSessionHandler","Storing Texture data in cache"),t?this.packedTextureDataCache.set(e,n):this.unpackedTextureDataCache.set(e,n)}dispose(){this.programManager.dispose(),this.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(e=>this.textureManager.releaseTexture(e,!0)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(e=>this.textureManager.releaseTexture(e,!0)),this.unpackedTextureDataCache=new Map}resolve(e,n,t){let o=hd(e,n,Fh);return{impl:o.opImpl,context:o.opInit?o.opInit(e,t):e}}}});function Jx(r){let e=0;for(;e<r.length&&r[e]();++e);return e-1}var Go,rm=R(()=>{"use strict";Ot();Lo();Lo();Sr();Go=class{constructor(e,n){this.frameBufferBound=!1;this.itemsToPoll=[];this.gl=e,this.version=n,this.getExtensions(),this.vertexbuffer=this.createVertexbuffer(),this.framebuffer=this.createFramebuffer(),this.queryVitalParameters()}allocateTexture(e,n,t,o){let i=this.gl,s=i.createTexture();i.bindTexture(i.TEXTURE_2D,s),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE);let a=o?t.encode(o,e*n):null;return i.texImage2D(i.TEXTURE_2D,0,t.internalFormat,e,n,0,t.format,t.textureType,a),this.checkError(),s}updateTexture(e,n,t,o,i){let s=this.gl;s.bindTexture(s.TEXTURE_2D,e);let a=o.encode(i,n*t);s.texSubImage2D(s.TEXTURE_2D,0,0,0,n,t,o.format,o.textureType,a),this.checkError()}attachFramebuffer(e,n,t){let o=this.gl;o.bindTexture(o.TEXTURE_2D,e),o.bindFramebuffer(o.FRAMEBUFFER,this.framebuffer),o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,e,0),this.checkError(),o.viewport(0,0,n,t),o.scissor(0,0,n,t)}readTexture(e,n,t,o,i,s){let a=this.gl;s||(s=1),this.frameBufferBound||this.attachFramebuffer(e,n,t);let u=this.getEncoder(i,s),l=u.allocate(n*t);return a.bindTexture(a.TEXTURE_2D,e),a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,e,0),a.readPixels(0,0,n,t,a.RGBA,u.textureType,l),this.checkError(),u.decode(l,o)}isFramebufferReady(){return!0}getActiveTexture(){let e=this.gl;return`TEXTURE${e.getParameter(this.gl.ACTIVE_TEXTURE)-e.TEXTURE0}`}getTextureBinding(){return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D)}getFramebufferBinding(){return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING)}setVertexAttributes(e,n){let t=this.gl;t.vertexAttribPointer(e,3,t.FLOAT,!1,20,0),t.enableVertexAttribArray(e),n!==-1&&(t.vertexAttribPointer(n,2,t.FLOAT,!1,20,12),t.enableVertexAttribArray(n)),this.checkError()}createProgram(e,n){let t=this.gl,o=t.createProgram();return t.attachShader(o,e),t.attachShader(o,n),t.linkProgram(o),o}compileShader(e,n){let t=this.gl,o=t.createShader(n);if(!o)throw new Error(`createShader() returned null with type ${n}`);if(t.shaderSource(o,e),t.compileShader(o),t.getShaderParameter(o,t.COMPILE_STATUS)===!1)throw new Error(`Failed to compile shader: ${t.getShaderInfoLog(o)}
Shader source:
${e}`);return o}deleteShader(e){this.gl.deleteShader(e)}bindTextureToUniform(e,n,t){let o=this.gl;o.activeTexture(o.TEXTURE0+n),this.checkError(),o.bindTexture(o.TEXTURE_2D,e),this.checkError(),o.uniform1i(t,n),this.checkError()}draw(){this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4),this.checkError()}checkError(){if(ye.debug){let e=this.gl,n=e.getError(),t="";switch(n){case e.NO_ERROR:return;case e.INVALID_ENUM:t="INVALID_ENUM";break;case e.INVALID_VALUE:t="INVALID_VALUE";break;case e.INVALID_OPERATION:t="INVALID_OPERATION";break;case e.INVALID_FRAMEBUFFER_OPERATION:t="INVALID_FRAMEBUFFER_OPERATION";break;case e.OUT_OF_MEMORY:t="OUT_OF_MEMORY";break;case e.CONTEXT_LOST_WEBGL:t="CONTEXT_LOST_WEBGL";break;default:t=`Unknown WebGL Error: ${n.toString(16)}`}throw new Error(t)}}deleteTexture(e){this.gl.deleteTexture(e)}deleteProgram(e){this.gl.deleteProgram(e)}getEncoder(e,n,t=0){if(this.version===2)return new Ki(this.gl,n);switch(e){case"float":return t===1||this.isRenderFloat32Supported?new Mo(this.gl,n):new Mo(this.gl,n,this.textureHalfFloatExtension.HALF_FLOAT_OES);case"int":throw new Error("not implemented");case"byte":return new Yi(this.gl,n);default:throw new Error(`Invalid dataType: ${e}`)}}clearActiveTextures(){let e=this.gl;for(let n=0;n<this.maxTextureImageUnits;++n)e.activeTexture(e.TEXTURE0+n),e.bindTexture(e.TEXTURE_2D,null)}dispose(){if(this.disposed)return;let e=this.gl;e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(this.framebuffer),e.bindBuffer(e.ARRAY_BUFFER,null),e.deleteBuffer(this.vertexbuffer),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null),e.finish(),this.disposed=!0}createDefaultGeometry(){return new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0])}createVertexbuffer(){let e=this.gl,n=e.createBuffer();if(!n)throw new Error("createBuffer() returned null");let t=this.createDefaultGeometry();return e.bindBuffer(e.ARRAY_BUFFER,n),e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW),this.checkError(),n}createFramebuffer(){let e=this.gl.createFramebuffer();if(!e)throw new Error("createFramebuffer returned null");return e}queryVitalParameters(){let e=this.gl;if(this.isFloatTextureAttachableToFrameBuffer=this.checkFloatTextureAttachableToFrameBuffer(),this.isRenderFloat32Supported=this.checkRenderFloat32(),this.isFloat32DownloadSupported=this.checkFloat32Download(),this.version===1&&!this.textureHalfFloatExtension&&!this.isRenderFloat32Supported)throw new Error("both float32 and float16 TextureType are not supported");this.isBlendSupported=!this.isRenderFloat32Supported||this.checkFloat32Blend(),this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.maxTextureImageUnits=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this.version}getExtensions(){this.version===2?(this.colorBufferFloatExtension=this.gl.getExtension("EXT_color_buffer_float"),this.disjointTimerQueryWebgl2Extension=this.gl.getExtension("EXT_disjoint_timer_query_webgl2")):(this.textureFloatExtension=this.gl.getExtension("OES_texture_float"),this.textureHalfFloatExtension=this.gl.getExtension("OES_texture_half_float"))}checkFloatTextureAttachableToFrameBuffer(){let e=this.gl,n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let t=this.version===2?e.RGBA32F:e.RGBA;e.texImage2D(e.TEXTURE_2D,0,t,1,1,0,e.RGBA,e.FLOAT,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(o),i}checkRenderFloat32(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension)return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Download(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension||!this.gl.getExtension("WEBGL_color_buffer_float"))return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Blend(){let e=this.gl,n,t,o,i,s;try{n=e.createTexture(),t=e.createFramebuffer(),e.bindTexture(e.TEXTURE_2D,n);let a=this.version===2?e.RGBA32F:e.RGBA;return e.texImage2D(e.TEXTURE_2D,0,a,1,1,0,e.RGBA,e.FLOAT,null),e.bindFramebuffer(e.FRAMEBUFFER,t),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0),e.enable(e.BLEND),o=e.createShader(e.VERTEX_SHADER),!o||(e.shaderSource(o,"void main(){}"),e.compileShader(o),i=e.createShader(e.FRAGMENT_SHADER),!i)||(e.shaderSource(i,"precision highp float;void main(){gl_FragColor=vec4(0.5);}"),e.compileShader(i),s=e.createProgram(),!s)?!1:(e.attachShader(s,o),e.attachShader(s,i),e.linkProgram(s),e.useProgram(s),e.drawArrays(e.POINTS,0,1),e.getError()===e.NO_ERROR)}finally{e.disable(e.BLEND),s&&e.deleteProgram(s),o&&e.deleteShader(o),i&&e.deleteShader(i),t&&(e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(t)),n&&(e.bindTexture(e.TEXTURE_2D,null),e.deleteTexture(n))}}beginTimer(){if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let e=this.gl,n=this.disjointTimerQueryWebgl2Extension,t=e.createQuery();return e.beginQuery(n.TIME_ELAPSED_EXT,t),t}else throw new Error("WebGL1 profiling currently not supported.")}endTimer(){if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let e=this.gl,n=this.disjointTimerQueryWebgl2Extension;e.endQuery(n.TIME_ELAPSED_EXT);return}else throw new Error("WebGL1 profiling currently not supported")}isTimerResultAvailable(e){let n=!1,t=!1;if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let o=this.gl,i=this.disjointTimerQueryWebgl2Extension;n=o.getQueryParameter(e,o.QUERY_RESULT_AVAILABLE),t=o.getParameter(i.GPU_DISJOINT_EXT)}else throw new Error("WebGL1 profiling currently not supported");return n&&!t}getTimerResult(e){let n=0;if(this.version===2){let t=this.gl;n=t.getQueryParameter(e,t.QUERY_RESULT),t.deleteQuery(e)}else throw new Error("WebGL1 profiling currently not supported");return n/1e6}async waitForQueryAndGetTime(e){return await Ls(()=>this.isTimerResultAvailable(e)),this.getTimerResult(e)}async createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let n,t=e,o=t.fenceSync(t.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),o===null?n=()=>!0:n=()=>{let i=t.clientWaitSync(o,0,0);return i===t.ALREADY_SIGNALED||i===t.CONDITION_SATISFIED},{query:o,isFencePassed:n}}async pollFence(e){return new Promise(n=>{this.addItemToPoll(()=>e.isFencePassed(),()=>n())})}pollItems(){let e=Jx(this.itemsToPoll.map(n=>n.isDoneFn));for(let n=0;n<=e;++n){let{resolveFn:t}=this.itemsToPoll[n];t()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}async addItemToPoll(e,n){this.itemsToPoll.push({isDoneFn:e,resolveFn:n}),!(this.itemsToPoll.length>1)&&await Ls(()=>(this.pollItems(),this.itemsToPoll.length===0))}}});function hu(r){let e;if((!r||r==="webgl2")&&"webgl2"in eo?e=eo.webgl2:(!r||r==="webgl")&&"webgl"in eo&&(e=eo.webgl),!e)try{let t=e2();e=nm(t,r)}catch{let o=Qx();e=nm(o,r)}r=r||e.version===1?"webgl":"webgl2";let n=e.gl;return eo[r]=e,n.isContextLost()?(delete eo[r],hu(r)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),e)}function nm(r,e){let n={alpha:!1,depth:!1,antialias:!1,stencil:!1,preserveDrawingBuffer:!1,premultipliedAlpha:!1,failIfMajorPerformanceCaveat:!1},t,o=n;if((!e||e==="webgl2")&&(t=r.getContext("webgl2",o),t))try{return new Go(t,2)}catch(i){je.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl2'. Error: ${i}`)}if((!e||e==="webgl")&&(t=r.getContext("webgl",o)||r.getContext("experimental-webgl",o),t))try{return new Go(t,1)}catch(i){je.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${i}`)}throw new Error("WebGL is not supported")}function Qx(){if(typeof document>"u")throw new TypeError("failed to create canvas: document is not supported");let r=document.createElement("canvas");return r.width=1,r.height=1,r}function e2(){if(typeof OffscreenCanvas>"u")throw new TypeError("failed to create offscreen canvas: OffscreenCanvas is not supported");return new OffscreenCanvas(1,1)}var eo,om=R(()=>{"use strict";rr();rm();eo={}});var ba,im=R(()=>{"use strict";Ot();rr();tm();om();ba=class{get contextId(){return ye.webgl.contextId}set contextId(e){ye.webgl.contextId=e}get matmulMaxBatchSize(){return ye.webgl.matmulMaxBatchSize}set matmulMaxBatchSize(e){ye.webgl.matmulMaxBatchSize=e}get textureCacheMode(){return ye.webgl.textureCacheMode}set textureCacheMode(e){ye.webgl.textureCacheMode=e}get pack(){return ye.webgl.pack}set pack(e){ye.webgl.pack=e}get async(){return ye.webgl.async}set async(e){ye.webgl.async=e}initialize(){try{return this.glContext=hu(this.contextId),typeof this.matmulMaxBatchSize!="number"&&(this.matmulMaxBatchSize=16),typeof this.textureCacheMode!="string"&&(this.textureCacheMode="full"),typeof this.pack!="boolean"&&(this.pack=!1),typeof this.async!="boolean"&&(this.async=!1),je.setWithEnv(ye),ye.webgl.context||Object.defineProperty(ye.webgl,"context",{value:this.glContext.gl}),je.verbose("WebGLBackend",`Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${this.async}.`),!0}catch(e){return je.warning("WebGLBackend",`Unable to initialize WebGLBackend. ${e}`),!1}}createSessionHandler(e){return new ga(this,e)}dispose(){this.glContext.dispose()}}});async function mu(r){if(r){let e=typeof r=="string"?[r]:r;for(let n of e){let t=am.get(n);if(t)return t;let o=await r2(n);if(o)return o}}else return mu(["webgl"]);throw new Error("no available backend to use")}async function r2(r){let e=t2;if(typeof e[r]<"u"&&n2(e[r])){let n=e[r],t=n.initialize();if(typeof t=="object"&&"then"in t&&(t=await t),t)return am.set(r,n),n}}function n2(r){let e=r;return"initialize"in e&&typeof e.initialize=="function"&&"createSessionHandler"in e&&typeof e.createSessionHandler=="function"&&"dispose"in e&&typeof e.dispose=="function"}var am,t2,sm=R(()=>{"use strict";im();am=new Map,t2={webgl:new ba}});var gu,ya,um=R(()=>{"use strict";rr();gu=class{constructor(e,n){this.op=e;this.node=n}},ya=class{constructor(e,n,t){this.graph=e;this.profiler=t;this.initialize(n)}initialize(e){this.profiler.event("session","ExecutionPlan.initialize",()=>{let n=this.graph.getNodes();if(n.length!==e.length)throw new Error("The size of nodes and OPs do not match.");this._ops=e.map((t,o)=>new gu(t,n[o])),this.reset(),this._starter=[],this._ops.forEach((t,o)=>{let i=!0;for(let s of t.node.inputs)if(!this._values[s]&&this.graph.getInputIndices().indexOf(s)===-1){i=!1;break}i&&this._starter.push(o)})})}reset(){this._values=this.graph.getValues().map(e=>e.tensor)}async execute(e,n){return this.profiler.event("session","ExecutionPlan.execute",async()=>{this.reset();let t=e.createInferenceHandler(),o=this.graph.getInputIndices();if(n.length!==o.length)throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${n.length} expected: ${o.length}`);n.forEach((d,p)=>{let m=o[p];this._values[m]=d});let i=this._starter.slice(0),s=this.graph.getValues(),a=this.graph.getNodes(),u=0;for(;u<i.length;){let d=i[u++],p=this._ops[d],m=p.node.inputs.map(A=>this._values[A]);if(m.indexOf(void 0)!==-1)throw new Error(`unresolved input detected: op: ${p.node}`);let b=m;je.verbose("ExecPlan",`Runing op:${p.node.name} (${b.map((A,$)=>`'${p.node.inputs[$]}': ${A.type}[${A.dims.join(",")}]`).join(", ")})`);let v=await this.profiler.event("node",p.node.name,async()=>p.op.impl(t,b,p.op.context));if(v.length!==p.node.outputs.length)throw new Error("the size of output does not match model definition.");v.forEach((A,$)=>{let _=p.node.outputs[$];if(this._values[_])throw new Error(`output [${_}] already has value: op:${p.node.name}`);this._values[_]=A});let w=new Set;v.forEach((A,$)=>{let _=p.node.outputs[$];for(let O of s[_].to){let P=a[O],L=!0;for(let F of P.inputs)if(!this._values[F]){L=!1;break}L&&w.add(O)}}),i.push(...w)}let l=[];for(let d=0;d<this.graph.getOutputIndices().length;d++){let p=this.graph.getOutputIndices()[d],m=this._values[p];if(m===void 0)throw new Error(`required output [${p}] does not have value`);p===0?await m.getData():m.data,l.push(m)}return je.verbose("ExecPlan","disposing of inferenceHandler"),t.dispose(),l})}}});var Re,lr,Wo,lm=R(()=>{"use strict";Po();Re=Un(qn());Sn();qe();lr=ce.experimental.fbs,Wo=class r{constructor(e){if(this._attributes=new Map,e!=null){for(let n of e)n instanceof Re.onnx.AttributeProto?this._attributes.set(n.name,[r.getValue(n),r.getType(n)]):n instanceof lr.Attribute&&this._attributes.set(n.name(),[r.getValue(n),r.getType(n)]);if(this._attributes.size<e.length)throw new Error("duplicated attribute names")}}set(e,n,t){this._attributes.set(e,[t,n])}delete(e){this._attributes.delete(e)}getFloat(e,n){return this.get(e,"float",n)}getInt(e,n){return this.get(e,"int",n)}getString(e,n){return this.get(e,"string",n)}getTensor(e,n){return this.get(e,"tensor",n)}getFloats(e,n){return this.get(e,"floats",n)}getInts(e,n){return this.get(e,"ints",n)}getStrings(e,n){return this.get(e,"strings",n)}getTensors(e,n){return this.get(e,"tensors",n)}get(e,n,t){let o=this._attributes.get(e);if(o===void 0){if(t!==void 0)return t;throw new Error(`required attribute not found: ${e}`)}if(o[1]!==n)throw new Error(`type mismatch: expected ${n} but got ${o[1]}`);return o[0]}static getType(e){let n=e instanceof Re.onnx.AttributeProto?e.type:e.type();switch(n){case Re.onnx.AttributeProto.AttributeType.FLOAT:return"float";case Re.onnx.AttributeProto.AttributeType.INT:return"int";case Re.onnx.AttributeProto.AttributeType.STRING:return"string";case Re.onnx.AttributeProto.AttributeType.TENSOR:return"tensor";case Re.onnx.AttributeProto.AttributeType.FLOATS:return"floats";case Re.onnx.AttributeProto.AttributeType.INTS:return"ints";case Re.onnx.AttributeProto.AttributeType.STRINGS:return"strings";case Re.onnx.AttributeProto.AttributeType.TENSORS:return"tensors";default:throw new Error(`attribute type is not supported yet: ${Re.onnx.AttributeProto.AttributeType[n]}`)}}static getValue(e){let n=e instanceof Re.onnx.AttributeProto?e.type:e.type();if(n===Re.onnx.AttributeProto.AttributeType.GRAPH||n===Re.onnx.AttributeProto.AttributeType.GRAPHS)throw new Error("graph attribute is not supported yet");let t=this.getValueNoCheck(e);if(n===Re.onnx.AttributeProto.AttributeType.INT&&Yt.isLong(t))return Yt.longToNumber(t);if(n===Re.onnx.AttributeProto.AttributeType.INTS){let o=t,i=new Array(o.length);for(let s=0;s<o.length;s++){let a=o[s];i[s]=Yt.longToNumber(a)}return i}if(n===Re.onnx.AttributeProto.AttributeType.TENSOR)return e instanceof Re.onnx.AttributeProto?mt.fromProto(t):mt.fromOrtTensor(t);if(n===Re.onnx.AttributeProto.AttributeType.TENSORS){if(e instanceof Re.onnx.AttributeProto)return t.map(i=>mt.fromProto(i));if(e instanceof lr.Attribute)return t.map(i=>mt.fromOrtTensor(i))}return n===Re.onnx.AttributeProto.AttributeType.STRING&&e instanceof Re.onnx.AttributeProto?zo(t):n===Re.onnx.AttributeProto.AttributeType.STRINGS&&e instanceof Re.onnx.AttributeProto?t.map(zo):t}static getValueNoCheck(e){return e instanceof Re.onnx.AttributeProto?this.getValueNoCheckFromOnnxFormat(e):this.getValueNoCheckFromOrtFormat(e)}static getValueNoCheckFromOnnxFormat(e){switch(e.type){case Re.onnx.AttributeProto.AttributeType.FLOAT:return e.f;case Re.onnx.AttributeProto.AttributeType.INT:return e.i;case Re.onnx.AttributeProto.AttributeType.STRING:return e.s;case Re.onnx.AttributeProto.AttributeType.TENSOR:return e.t;case Re.onnx.AttributeProto.AttributeType.GRAPH:return e.g;case Re.onnx.AttributeProto.AttributeType.FLOATS:return e.floats;case Re.onnx.AttributeProto.AttributeType.INTS:return e.ints;case Re.onnx.AttributeProto.AttributeType.STRINGS:return e.strings;case Re.onnx.AttributeProto.AttributeType.TENSORS:return e.tensors;case Re.onnx.AttributeProto.AttributeType.GRAPHS:return e.graphs;default:throw new Error(`unsupported attribute type: ${Re.onnx.AttributeProto.AttributeType[e.type]}`)}}static getValueNoCheckFromOrtFormat(e){switch(e.type()){case lr.AttributeType.FLOAT:return e.f();case lr.AttributeType.INT:return e.i();case lr.AttributeType.STRING:return e.s();case lr.AttributeType.TENSOR:return e.t();case lr.AttributeType.GRAPH:return e.g();case lr.AttributeType.FLOATS:return e.floatsArray();case lr.AttributeType.INTS:{let n=[];for(let t=0;t<e.intsLength();t++)n.push(e.ints(t));return n}case lr.AttributeType.STRINGS:{let n=[];for(let t=0;t<e.stringsLength();t++)n.push(e.strings(t));return n}case lr.AttributeType.TENSORS:{let n=[];for(let t=0;t<e.tensorsLength();t++)n.push(e.tensors(t));return n}default:throw new Error(`unsupported attribute type: ${lr.AttributeType[e.type()]}`)}}}});var yu,va,vu,Or,wa,bu,dm=R(()=>{"use strict";lm();Po();yu=Un(qn());Sn();qe();va=ce.experimental.fbs,vu={from:(r,e)=>new bu(r,e)},Or=class{constructor(e){this._from=void 0,this._to=[],this.tensor=void 0,this.type=void 0,e&&(this.type=At.tensorValueTypeFromProto(e.type.tensorType))}get from(){return this._from}get to(){return this._to}},wa=class{constructor(e,n){e instanceof yu.onnx.NodeProto?(this.name=e.name,this.opType=e.opType,this.attributes=new Wo(e.attribute)):e instanceof va.Node&&(this.name=n??e.name(),this.opType=e.opType(),this.attributes=new Wo(At.tensorAttributesFromORTFormat(e))),this.inputs=[],this.outputs=[],this.executeNode=!0}},bu=class{constructor(e,n){if(!e)throw new TypeError("graph is empty");this.buildGraph(e),this.transformGraph(n),this.checkIsAcyclic()}getInputIndices(){return this._allInputIndices}getInputNames(){return this._allInputNames}getOutputIndices(){return this._allOutputIndices}getOutputNames(){return this._allOutputNames}getValues(){return this._allData}getNodes(){return this._nodes}buildGraph(e){if(e instanceof yu.onnx.GraphProto)this.buildGraphFromOnnxFormat(e);else if(e instanceof va.Graph)this.buildGraphFromOrtFormat(e);else throw new TypeError("Graph type is not supported.")}buildGraphFromOnnxFormat(e){let n=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];let t=new Map;if(!e.input)throw new Error("missing information in graph: input");let o=[];for(let i of e.input){if(n.has(i.name))throw new Error(`duplicated input name: ${i.name}`);let s=this._allData.push(new Or(i))-1;n.set(i.name,s),o.push(i.name)}if(!e.initializer)throw new Error("missing information in graph: initializer");for(let i of e.initializer){let s=n.get(i.name);if(s===void 0){let a=new Or;a.type={shape:{dims:At.tensorDimsFromProto(i.dims)},tensorType:At.tensorDataTypeFromProto(i.dataType)},s=this._allData.push(a)-1,n.set(i.name,s)}this._allData[s]._from=-1,this._allData[s].tensor=mt.fromProto(i)}for(let i=0;i<this._allData.length;i++)this._allData[i].tensor||(this._allInputIndices.push(i),this._allInputNames.push(o[i]));if(!e.output)throw new Error("missing information in graph: output");for(let i of e.output){if(n.has(i.name))throw new Error(`duplicated output name: ${i.name}`);let s=this._allData.push(new Or(i))-1;n.set(i.name,s),this._allOutputIndices.push(s),this._allOutputNames.push(i.name)}if(!e.node)throw new Error("missing information in graph: node");for(let i of e.node){if(!i.name)for(let a=0;;a++){let u=`unnamed_${i.opType}_${a}`;if(!t.has(u)){i.name=u;break}}if(t.has(i.name))throw new Error(`duplicated node name: ${i.name}`);let s=this._nodes.push(new wa(i))-1;t.set(i.name,s)}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.node[i];if(!a.output)throw new Error(`missing output for node: ${a.name}`);for(let u of a.output){let l=n.get(u);if(typeof l>"u"&&(l=this._allData.push(new Or)-1,n.set(u,l)),s.outputs.push(l),this._allData[l]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${l}`);if(this._allData[l]._from=i,a.opType==="Constant"){if(!a.attribute||a.attribute.length!==1||!a.attribute[0].t)throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(!a.output||a.output.length!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");s.outputs.pop(),s.executeNode=!1,this._allData[l]._from=-1,this._allData[l].tensor=mt.fromProto(a.attribute[0].t)}}}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.node[i];if(!a.input)throw new Error(`missing input for node: ${a.name}`);for(let u of a.input){let l=n.get(u);if(typeof l>"u"){if(u===""&&(a.input.length===3||a.input.length===4)&&a.opType==="Resize")continue;throw new Error(`unrecognized input '${u}' for node: ${a.name}`)}s.inputs.push(l),this._allData[l]._to.push(i)}}return!0}buildGraphFromOrtFormat(e){let n=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];let t=new Map,o=[];for(let i=0;i<e.inputsLength();i++){let s=e.inputs(i);if(n.has(s))throw new Error(`duplicated input name: ${s}`);for(let a=0;a<e.nodeArgsLength();a++)if(e.nodeArgs(a)?.name()===s){let u=new Or;if(e.nodeArgs(a)?.type()?.valueType()!==va.TypeInfoValue.tensor_type)throw new Error("Unexpected value type for the nodeArg.");let d=e.nodeArgs(a).type().value(new va.TensorTypeAndShape),p=At.tensorDataTypeFromProto(d.elemType()),m=d.shape(),b=[];for(let w=0;w<m.dimLength();w++)b.push(Yt.longToNumber(m.dim(w).value().dimValue()));u.type={shape:{dims:b},tensorType:p};let v=this._allData.push(u)-1;n.set(s,v),o.push(s)}}for(let i=0;i<e.initializersLength();i++){let s=e.initializers(i),a=n.get(s.name());if(a===void 0){let u=new Or,l=At.tensorDimsFromORTFormat(s),d=At.tensorDataTypeFromProto(s.dataType());u.type={shape:{dims:l},tensorType:d},a=this._allData.push(u)-1,n.set(s.name(),a)}this._allData[a]._from=-1,this._allData[a].tensor=mt.fromOrtTensor(s)}for(let i=0;i<this._allData.length;i++)this._allData[i].tensor||(this._allInputIndices.push(i),this._allInputNames.push(o[i]));for(let i=0;i<e.outputsLength();i++){let s=e.outputs(i);if(n.has(s))throw new Error(`duplicated output name: ${s}`);let a=this._allData.push(new Or)-1;n.set(s,a),this._allOutputIndices.push(a),this._allOutputNames.push(s)}if(!e.nodes)throw new Error("missing information in graph: node");for(let i=0;i<e.nodesLength();i++){let s=e.nodes(i),a=s.name();if(!a)for(let l=0;a=`unnamed_${s.opType()}_${l}`,!!t.has(a);l++);if(t.has(a))throw new Error(`duplicated node name: ${a}`);let u=this._nodes.push(new wa(s,a))-1;t.set(a,u)}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.nodes(i);if(a==null)throw new Error(`No node exists at index ${i}`);if(a?.outputsLength()===0)throw new Error(`missing output for node: ${a.name}`);for(let u=0;u<a?.outputsLength();u++){let l=a?.outputs(u),d=n.get(l);if(typeof d>"u"&&(d=this._allData.push(new Or)-1,n.set(l,d)),s.outputs.push(d),this._allData[d]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${d}`);if(this._allData[d]._from=i,a.opType()==="Constant"){if(a.attributesLength()!==1||!a.attributes(0).t())throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(a.outputsLength()!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");s.outputs.pop(),s.executeNode=!1,this._allData[d]._from=-1,this._allData[d].tensor=mt.fromOrtTensor(a.attributes(0).t())}}}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.nodes(i);if(a.inputsLength()===0)throw new Error(`missing input for node: ${a.name}`);for(let u=0;u<a.inputsLength();u++){let l=a.inputs(u),d=n.get(l);if(typeof d>"u")throw new Error(`unrecognized input '${l}' for node: ${a.name()}`);s.inputs.push(d),this._allData[d]._to.push(i)}}}checkIsAcyclic(){let e=new Set;this._allInputIndices.forEach(o=>{this._allData[o]._to.forEach(s=>{e.add(s)})});let n=Array.from(e),t=new Array(this._nodes.length).fill("white");for(;n.length>0;){let o=n.pop();t[o]==="gray"?t[o]="black":(n.push(o),t[o]="gray",this._nodes[o].outputs.forEach(i=>{let s=this._allData[i];if(typeof s.tensor<"u")throw new Error("node outputs should not be initialized");if(s._from!==o)throw new Error("from property of the Value object doesn't match index of Node being processed");s._to.forEach(a=>{if(t[a]==="gray")throw new Error("model graph is cyclic");t[a]==="white"&&n.push(a)})}))}}transformGraph(e){this.removeAllIdentityNodes(),this.removeAllDropoutNodes(),this.fuseConvActivationNodes(),e&&e.transformGraph(this),this.finalizeGraph()}finalizeGraph(){let e=0,n=new Array(this._nodes.length,0),t=0;for(let o=0;o<this._nodes.length;o++)n[o]=t,this._nodes[o].executeNode?(t!==o&&(this._nodes[t]=this._nodes[o]),t++):this._nodes[o].outputs.forEach(i=>{this._allData[i]._from=-2});this._nodes.splice(t,this._nodes.length-t);for(let o=0;o<this._allData.length;o++){let i=this._allData[o];i._from!==void 0&&i._from!==-1&&i._from!==-2&&(i._from=n[i._from]);for(let s=0;s<i._to.length;s++)if(i._to[s]>=0)i._to[s]=n[i._to[s]];else throw new Error("Trying to update a removed node")}e=0;for(let o=0;o<this._allData.length;o++){if(this._allData[o].from===-2&&this._allOutputIndices.indexOf(o+e)===-1){e++,this._allData.splice(o,1),o--;continue}if(e>0){let i=-1;this._allData[o].from!==void 0&&this._allData[o].from!==-1?(i=this._nodes[this._allData[o].from].outputs.indexOf(o+e),i!==-1&&(this._nodes[this._allData[o].from].outputs[i]=o)):(i=this._allInputIndices.indexOf(o+e),i!==-1&&(this._allInputIndices[i]=o)),this._allData[o].to.forEach(s=>{i=this._nodes[s].inputs.indexOf(o+e),i!==-1&&(this._nodes[s].inputs[i]=o)}),this._allData[o].to.length===0&&(i=this._allOutputIndices.indexOf(o+e),i!==-1&&(this._allOutputIndices[i]=o))}}}deleteNode(e){let n=this._nodes[e];if(n.outputs.length>1){for(let a=1;a<n.outputs.length;a++)if(this._allData[n.outputs[a]].to.length>0)throw new Error("Node deletion with more than one output connected to other nodes is not supported. ")}n.executeNode=!1;let t=n.inputs[0],o=n.outputs[0],i=this._allData[o].to;for(let a=0;a<n.inputs.length;a++){let u=this._allData[n.inputs[a]].to.indexOf(e);if(u===-1)throw new Error("The Value object doesn't have the current Node in it's 'to' property ");this._allData[n.inputs[a]].to.splice(u,1)}this._allData[o]._to=[];let s=this._allOutputIndices.indexOf(o);if(s!==-1&&(this._allOutputIndices[s]=t),i&&i.length>0)for(let a of i){let u=this._nodes[a].inputs.indexOf(o);if(u===-1)throw new Error("The Node object doesn't have the output Value in it's 'inputs' property ");this._nodes[a].inputs[u]=t,this._allData[t].to.push(a)}}removeAllDropoutNodes(){let e=0;for(let n of this._nodes){if(n.opType==="Dropout"){if(n.inputs.length!==1)throw new Error("Dropout nodes should only contain one input. ");if(n.outputs.length!==1&&n.outputs.length!==2)throw new Error("Dropout nodes should contain either 1 or 2 output(s)");if(n.outputs.length===2&&this._allData[n.outputs[1]]._to.length!==0)throw new Error("Dropout nodes's second output should not be referenced by other nodes");this.deleteNode(e)}e++}}removeAllIdentityNodes(){let e=0;for(let n of this._nodes)n.opType==="Identity"&&this.deleteNode(e),e++}isActivation(e){switch(e.opType){case"Relu":case"Sigmoid":case"Clip":return!0;default:return!1}}fuseConvActivationNodes(){for(let e of this._nodes)if(e.opType==="Conv"){let n=this._allData[e.outputs[0]]._to;if(n.length===1&&this.isActivation(this._nodes[n[0]])){let t=this._nodes[n[0]];if(t.opType==="Clip")if(t.inputs.length===1)try{e.attributes.set("activation_params","floats",[t.attributes.getFloat("min"),t.attributes.getFloat("max")])}catch{e.attributes.set("activation_params","floats",[Tn,$n])}else if(t.inputs.length>=3&&this._allData[t.inputs[1]].tensor!==void 0&&this._allData[t.inputs[2]].tensor!==void 0)e.attributes.set("activation_params","floats",[this._allData[t.inputs[1]].tensor.floatData[0],this._allData[t.inputs[2]].tensor.floatData[0]]);else continue;e.attributes.set("activation","string",t.opType),this.deleteNode(n[0])}}}}});var cm,o2,xa,fm=R(()=>{"use strict";Vi();dm();Po();cm=Un(qn());qe();o2=ce.experimental.fbs,xa=class{constructor(){}load(e,n,t){if(!t)try{this.loadFromOnnxFormat(e,n);return}catch(o){if(t!==void 0)throw o}this.loadFromOrtFormat(e,n)}loadFromOnnxFormat(e,n){let t=cm.onnx.ModelProto.decode(e);if(Yt.longToNumber(t.irVersion)<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=t.opsetImport.map(i=>({domain:i.domain,version:Yt.longToNumber(i.version)})),this._graph=vu.from(t.graph,n)}loadFromOrtFormat(e,n){let t=new B.ByteBuffer(e),o=o2.InferenceSession.getRootAsInferenceSession(t).model();if(Yt.longToNumber(o.irVersion())<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=[];for(let s=0;s<o.opsetImportLength();s++){let a=o.opsetImport(s);this._opsets.push({domain:a?.domain(),version:Yt.longToNumber(a.version())})}this._graph=vu.from(o.graph(),n)}get graph(){return this._graph}get opsets(){return this._opsets}}});var _a,pm=R(()=>{"use strict";sm();um();rr();fm();_a=class{constructor(e={}){this._initialized=!1,this.backendHint=e.backendHint,this.profiler=Ni.create(e.profiler),this.context={profiler:this.profiler,graphInputTypes:[],graphInputDims:[]}}get inputNames(){return this._model.graph.getInputNames()}get outputNames(){return this._model.graph.getOutputNames()}startProfiling(){this.profiler.start()}endProfiling(){this.profiler.stop()}async loadModel(e,n,t){await this.profiler.event("session","Session.loadModel",async()=>{let o=await mu(this.backendHint);if(this.sessionHandler=o.createSessionHandler(this.context),this._model=new xa,typeof e=="string"){let i=e.endsWith(".ort");if(typeof process<"u"&&process.versions&&process.versions.node){let s=await(void 0)(e);this.initialize(s,i)}else{let a=await(await fetch(e)).arrayBuffer();this.initialize(new Uint8Array(a),i)}}else if(ArrayBuffer.isView(e))this.initialize(e);else{let i=new Uint8Array(e,n||0,t||e.byteLength);this.initialize(i)}})}initialize(e,n){if(this._initialized)throw new Error("already initialized");this.profiler.event("session","Session.initialize",()=>{let t=this.sessionHandler.transformGraph?this.sessionHandler:void 0;this._model.load(e,t,n),this.sessionHandler.onGraphInitialized&&this.sessionHandler.onGraphInitialized(this._model.graph),this.initializeOps(this._model.graph),this._executionPlan=new ya(this._model.graph,this._ops,this.profiler)}),this._initialized=!0}async run(e){if(!this._initialized)throw new Error("session not initialized yet");return this.profiler.event("session","Session.run",async()=>{let n=this.normalizeAndValidateInputs(e),t=await this._executionPlan.execute(this.sessionHandler,n);return this.createOutput(t)})}normalizeAndValidateInputs(e){let n=this._model.graph.getInputNames();if(Array.isArray(e)){if(e.length!==n.length)throw new Error(`incorrect input array length: expected ${n.length} but got ${e.length}`)}else{if(e.size!==n.length)throw new Error(`incorrect input map size: expected ${n.length} but got ${e.size}`);let t=new Array(e.size),o=0;for(let i=0;i<n.length;++i){let s=e.get(n[i]);if(!s)throw new Error(`missing input tensor for: '${name}'`);t[o++]=s}e=t}if(!this.context.graphInputTypes||this.context.graphInputTypes.length===0||!this.context.graphInputDims||this.context.graphInputDims.length===0){let t=this._model.graph.getInputIndices(),o=this._model.graph.getValues(),i=new Array(t.length);for(let s=0;s<t.length;++s){let a=o[t[s]];i[s]=a.type.shape.dims,this.context.graphInputTypes.push(a.type.tensorType),this.context.graphInputDims.push(e[s].dims)}this.validateInputTensorDims(i,e,!0)}else this.validateInputTensorDims(this.context.graphInputDims,e,!1);return this.validateInputTensorTypes(this.context.graphInputTypes,e),e}validateInputTensorTypes(e,n){for(let t=0;t<n.length;t++){let o=e[t],i=n[t].type;if(o!==i)throw new Error(`input tensor[${t}] check failed: expected type '${o}' but got ${i}`)}}validateInputTensorDims(e,n,t){for(let o=0;o<n.length;o++){let i=e[o],s=n[o].dims;if(!this.compareTensorDims(i,s,t))throw new Error(`input tensor[${o}] check failed: expected shape '[${i.join(",")}]' but got [${s.join(",")}]`)}}compareTensorDims(e,n,t){if(e.length!==n.length)return!1;for(let o=0;o<e.length;++o)if(e[o]!==n[o]&&(!t||e[o]!==0)&&e[o]!==null)return!1;return!0}createOutput(e){let n=this._model.graph.getOutputNames();if(e.length!==n.length)throw new Error("expected number of outputs do not match number of generated outputs");let t=new Map;for(let o=0;o<n.length;++o)t.set(n[o],e[o]);return t}initializeOps(e){let n=e.getNodes();this._ops=new Array(n.length);for(let t=0;t<n.length;t++)this._ops[t]=this.sessionHandler.resolve(n[t],this._model.opsets,e)}}});var Ta,hm=R(()=>{"use strict";Ot();Sn();Ta=class{constructor(e){this.session=e;this.inputNames=this.session.inputNames,this.outputNames=this.session.outputNames}async dispose(){}async run(e,n,t){let o=new Map;for(let a in e)if(Object.hasOwnProperty.call(e,a)){let u=e[a];o.set(a,new mt(u.dims,u.type,void 0,void 0,u.data))}let i=await this.session.run(o),s={};return i.forEach((a,u)=>{s[u]=new xt(a.type,a.data,a.dims)}),s}startProfiling(){this.session.startProfiling()}endProfiling(){this.session.endProfiling()}}});var mm={};Zr(mm,{onnxjsBackend:()=>a2});var wu,a2,gm=R(()=>{"use strict";pm();hm();wu=class{async init(){}async createInferenceSessionHandler(e,n){let t=new _a(n);return typeof e=="string"?await t.loadModel(e):await t.loadModel(e),new Ta(t)}},a2=new wu});var xu={};Zr(xu,{createReadStream:()=>bm,readFile:()=>s2,readFileSync:()=>u2});var s2,u2,bm,_u=R(()=>{s2=void 0,u2=void 0,bm=void 0});var Tu={};Zr(Tu,{join:()=>l2});var l2,$u=R(()=>{l2=void 0});var wm=et((vm,Su)=>{"use strict";var ym=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e={}){var n=e,t,o;n.ready=new Promise((f,g)=>{t=f,o=g}),n.mountExternalData=(f,g)=>{(n.gb||(n.gb=new Map)).set(f,g)},n.unmountExternalData=()=>{delete n.gb},n.jsepInit=(f,g,x,S,k,V,j,ne)=>{n.Fb=f,n.vb=g,n.xb=x,n.ob=S,n.wb=k,n.Sa=V,n.yb=j,n.zb=ne,g=(ee,Q,fe)=>(...Se)=>{let Be=Dt,M=Q?.();Se=ee(...Se);let be=Q?.();return M!==be&&(ee=be,fe(M),Q=fe=null),Dt!=Be?ui():Se},x=ee=>async(...Q)=>{try{if(n.fb)throw Error("Session already started");let fe=n.fb={Ab:Q[0],errors:[]},Se=await ee(...Q);if(n.fb!==fe)throw Error("Session mismatch");f.flush();let Be=fe.errors;if(0<Be.length){let M=await Promise.all(Be);if(M=M.filter(be=>be),0<M.length)throw Error(M.join(`
`))}return Se}finally{n.fb=null}},n._OrtCreateSession=g(n._OrtCreateSession,()=>n._OrtCreateSession,ee=>n._OrtCreateSession=ee),n._OrtRun=x(g(n._OrtRun,()=>n._OrtRun,ee=>n._OrtRun=ee)),n._OrtRunWithBinding=x(g(n._OrtRunWithBinding,()=>n._OrtRunWithBinding,ee=>n._OrtRunWithBinding=ee)),n._OrtBindInput=g(n._OrtBindInput,()=>n._OrtBindInput,ee=>n._OrtBindInput=ee),n.jsepRegisterBuffer=(ee,Q,fe,Se)=>f.registerBuffer(ee,Q,fe,Se),n.jsepUnregisterBuffers=ee=>{f.unregisterBuffers(ee)},n.jsepGetBuffer=ee=>f.getBuffer(ee),n.jsepCreateDownloader=(ee,Q,fe)=>f.createDownloader(ee,Q,fe),n.jsepOnRunStart=()=>f.onRunStart()};var i=Object.assign({},n),s="./this.program",a=(f,g)=>{throw g},u=typeof window=="object",l=typeof importScripts=="function",d=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",p="",m,b,v;if(d){var w=(_u(),Ur(xu)),A=($u(),Ur(Tu));p=l?A.dirname(p)+"/":__dirname+"/",m=(f,g)=>(f=ge(f)?new URL(f):A.normalize(f),w.readFileSync(f,g?void 0:"utf8")),v=f=>(f=m(f,!0),f.buffer||(f=new Uint8Array(f)),f),b=(f,g,x,S=!0)=>{f=ge(f)?new URL(f):A.normalize(f),w.readFile(f,S?void 0:"utf8",(k,V)=>{k?x(k):g(S?V.buffer:V)})},!n.thisProgram&&1<process.argv.length&&(s=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),a=(f,g)=>{throw process.exitCode=f,g},n.inspect=()=>"[Emscripten Module object]"}else(u||l)&&(l?p=self.location.href:typeof document<"u"&&document.currentScript&&(p=document.currentScript.src),r&&(p=r),p.indexOf("blob:")!==0?p=p.substr(0,p.replace(/[?#].*/,"").lastIndexOf("/")+1):p="",m=f=>{var g=new XMLHttpRequest;return g.open("GET",f,!1),g.send(null),g.responseText},l&&(v=f=>{var g=new XMLHttpRequest;return g.open("GET",f,!1),g.responseType="arraybuffer",g.send(null),new Uint8Array(g.response)}),b=(f,g,x)=>{var S=new XMLHttpRequest;S.open("GET",f,!0),S.responseType="arraybuffer",S.onload=()=>{S.status==200||S.status==0&&S.response?g(S.response):x()},S.onerror=x,S.send(null)});var $=console.log.bind(console),_=console.error.bind(console);Object.assign(n,i),i=null,typeof WebAssembly!="object"&&yt("no native wasm support detected");var O,P=!1,L,F,G,J,le,z,q,Xe,Ye,se,Ee;function ut(){var f=O.buffer;n.HEAP8=F=new Int8Array(f),n.HEAP16=J=new Int16Array(f),n.HEAPU8=G=new Uint8Array(f),n.HEAPU16=le=new Uint16Array(f),n.HEAP32=z=new Int32Array(f),n.HEAPU32=q=new Uint32Array(f),n.HEAPF32=Xe=new Float32Array(f),n.HEAPF64=Ee=new Float64Array(f),n.HEAP64=Ye=new BigInt64Array(f),n.HEAPU64=se=new BigUint64Array(f)}var Te=[],Oe=[],xe=[],Pe=0,lt=null,Qe=null;function yt(f){throw f="Aborted("+f+")",_(f),P=!0,L=1,f=new WebAssembly.RuntimeError(f+". Build with -sASSERTIONS for more info."),o(f),f}var Z=f=>f.startsWith("data:application/octet-stream;base64,"),ge=f=>f.startsWith("file://"),Ie;if(Ie="ort-wasm-simd.wasm",!Z(Ie)){var kt=Ie;Ie=n.locateFile?n.locateFile(kt,p):p+kt}function Vt(f){if(v)return v(f);throw"both async and sync fetching of the wasm failed"}function Je(f){if(u||l){if(typeof fetch=="function"&&!ge(f))return fetch(f,{credentials:"same-origin"}).then(g=>{if(!g.ok)throw"failed to load wasm binary file at '"+f+"'";return g.arrayBuffer()}).catch(()=>Vt(f));if(b)return new Promise((g,x)=>{b(f,S=>g(new Uint8Array(S)),x)})}return Promise.resolve().then(()=>Vt(f))}function vt(f,g,x){return Je(f).then(S=>WebAssembly.instantiate(S,g)).then(S=>S).then(x,S=>{_(`failed to asynchronously prepare wasm: ${S}`),yt(S)})}function zr(f,g){var x=Ie;return typeof WebAssembly.instantiateStreaming!="function"||Z(x)||ge(x)||d||typeof fetch!="function"?vt(x,f,g):fetch(x,{credentials:"same-origin"}).then(S=>WebAssembly.instantiateStreaming(S,f).then(g,function(k){return _(`wasm streaming compile failed: ${k}`),_("falling back to ArrayBuffer instantiation"),vt(x,f,g)}))}var Mr={903368:(f,g,x,S)=>{if(typeof n>"u"||!n.gb)return 1;if(f=wt(f>>>0),f.startsWith("./")&&(f=f.substring(2)),f=n.gb.get(f),!f)return 2;if(g>>>=0,x>>>=0,g+x>f.byteLength)return 3;try{return G.set(f.subarray(g,g+x),S>>>0>>>0),0}catch{return 4}},903869:f=>n.vb(f),903902:f=>n.xb(f),903934:(f,g,x)=>{n.ob(f,g,x,!0)},903973:(f,g,x)=>{n.ob(f,g,x)},904006:f=>{n.Sa("Abs",f,void 0)},904057:f=>{n.Sa("Neg",f,void 0)},904108:f=>{n.Sa("Floor",f,void 0)},904161:f=>{n.Sa("Ceil",f,void 0)},904213:f=>{n.Sa("Reciprocal",f,void 0)},904271:f=>{n.Sa("Sqrt",f,void 0)},904323:f=>{n.Sa("Exp",f,void 0)},904374:f=>{n.Sa("Erf",f,void 0)},904425:f=>{n.Sa("Sigmoid",f,void 0)},904480:(f,g,x)=>{n.Sa("HardSigmoid",f,{alpha:g,beta:x})},904559:f=>{n.Sa("Log",f,void 0)},904610:f=>{n.Sa("Sin",f,void 0)},904661:f=>{n.Sa("Cos",f,void 0)},904712:f=>{n.Sa("Tan",f,void 0)},904763:f=>{n.Sa("Asin",f,void 0)},904815:f=>{n.Sa("Acos",f,void 0)},904867:f=>{n.Sa("Atan",f,void 0)},904919:f=>{n.Sa("Sinh",f,void 0)},904971:f=>{n.Sa("Cosh",f,void 0)},905023:f=>{n.Sa("Asinh",f,void 0)},905076:f=>{n.Sa("Acosh",f,void 0)},905129:f=>{n.Sa("Atanh",f,void 0)},905182:f=>{n.Sa("Tanh",f,void 0)},905234:f=>{n.Sa("Not",f,void 0)},905285:(f,g,x)=>{n.Sa("Clip",f,{min:g,max:x})},905354:f=>{n.Sa("Clip",f,void 0)},905406:(f,g)=>{n.Sa("Elu",f,{alpha:g})},905464:f=>{n.Sa("Relu",f,void 0)},905516:(f,g)=>{n.Sa("LeakyRelu",f,{alpha:g})},905580:(f,g)=>{n.Sa("ThresholdedRelu",f,{alpha:g})},905650:(f,g)=>{n.Sa("Cast",f,{to:g})},905708:f=>{n.Sa("Add",f,void 0)},905759:f=>{n.Sa("Sub",f,void 0)},905810:f=>{n.Sa("Mul",f,void 0)},905861:f=>{n.Sa("Div",f,void 0)},905912:f=>{n.Sa("Pow",f,void 0)},905963:f=>{n.Sa("Equal",f,void 0)},906016:f=>{n.Sa("Greater",f,void 0)},906071:f=>{n.Sa("GreaterOrEqual",f,void 0)},906133:f=>{n.Sa("Less",f,void 0)},906185:f=>{n.Sa("LessOrEqual",f,void 0)},906244:(f,g,x,S,k)=>{n.Sa("ReduceMean",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:S?Array.from(z.subarray(S>>>0,k>>>0)):[]})},906403:(f,g,x,S,k)=>{n.Sa("ReduceMax",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:S?Array.from(z.subarray(S>>>0,k>>>0)):[]})},906561:(f,g,x,S,k)=>{n.Sa("ReduceMin",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:S?Array.from(z.subarray(S>>>0,k>>>0)):[]})},906719:(f,g,x,S,k)=>{n.Sa("ReduceProd",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:S?Array.from(z.subarray(S>>>0,k>>>0)):[]})},906878:(f,g,x,S,k)=>{n.Sa("ReduceSum",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:S?Array.from(z.subarray(S>>>0,k>>>0)):[]})},907036:(f,g,x,S,k)=>{n.Sa("ReduceL1",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:S?Array.from(z.subarray(S>>>0,k>>>0)):[]})},907193:(f,g,x,S,k)=>{n.Sa("ReduceL2",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:S?Array.from(z.subarray(S>>>0,k>>>0)):[]})},907350:(f,g,x,S,k)=>{n.Sa("ReduceLogSum",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:S?Array.from(z.subarray(S>>>0,k>>>0)):[]})},907511:(f,g,x,S,k)=>{n.Sa("ReduceSumSquare",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:S?Array.from(z.subarray(S>>>0,k>>>0)):[]})},907675:(f,g,x,S,k)=>{n.Sa("ReduceLogSumExp",f,{keepDims:!!g,noopWithEmptyAxes:!!x,axes:S?Array.from(z.subarray(S>>>0,k>>>0)):[]})},907839:f=>{n.Sa("Where",f,void 0)},907892:(f,g,x)=>{n.Sa("Transpose",f,{perm:g?Array.from(z.subarray(g>>>0,x>>>0)):[]})},908e3:(f,g,x,S,k,V,j,ne,ee,Q,fe,Se,Be,M,be)=>{n.Sa("ConvTranspose",f,{format:ee?"NHWC":"NCHW",autoPad:g,dilations:[x],group:S,kernel_shape:[k],pads:[V,j],strides:[ne],wIsConst:()=>!!F[Q>>>0],outputPadding:fe?Array.from(z.subarray(fe>>>0,Se>>>0)):[],outputShape:Be?Array.from(z.subarray(Be>>>0,M>>>0)):[],activation:wt(be)})},908402:(f,g,x,S,k,V,j,ne,ee,Q,fe,Se,Be,M)=>{n.Sa("ConvTranspose",f,{format:ne?"NHWC":"NCHW",autoPad:g,dilations:Array.from(z.subarray(x>>>0,(x>>>0)+2>>>0)),group:S,kernelShape:Array.from(z.subarray(k>>>0,(k>>>0)+2>>>0)),pads:Array.from(z.subarray(V>>>0,(V>>>0)+4>>>0)),strides:Array.from(z.subarray(j>>>0,(j>>>0)+2>>>0)),wIsConst:()=>!!F[ee>>>0],outputPadding:Q?Array.from(z.subarray(Q>>>0,fe>>>0)):[],outputShape:Se?Array.from(z.subarray(Se>>>0,Be>>>0)):[],activation:wt(M)})},908967:(f,g,x,S,k,V,j,ne,ee,Q,fe,Se,Be,M,be)=>{n.Sa("ConvTranspose",f,{format:ee?"NHWC":"NCHW",autoPad:g,dilations:[x],group:S,kernel_shape:[k],pads:[V,j],strides:[ne],wIsConst:()=>!!F[Q>>>0],outputPadding:fe?Array.from(z.subarray(fe>>>0,Se>>>0)):[],outputShape:Be?Array.from(z.subarray(Be>>>0,M>>>0)):[],activation:wt(be)})},909369:(f,g,x,S,k,V,j,ne,ee,Q,fe,Se,Be,M)=>{n.Sa("ConvTranspose",f,{format:ne?"NHWC":"NCHW",autoPad:g,dilations:Array.from(z.subarray(x>>>0,(x>>>0)+2>>>0)),group:S,kernelShape:Array.from(z.subarray(k>>>0,(k>>>0)+2>>>0)),pads:Array.from(z.subarray(V>>>0,(V>>>0)+4>>>0)),strides:Array.from(z.subarray(j>>>0,(j>>>0)+2>>>0)),wIsConst:()=>!!F[ee>>>0],outputPadding:Q?Array.from(z.subarray(Q>>>0,fe>>>0)):[],outputShape:Se?Array.from(z.subarray(Se>>>0,Be>>>0)):[],activation:wt(M)})},909934:(f,g)=>{n.Sa("GlobalAveragePool",f,{format:g?"NHWC":"NCHW"})},910025:(f,g,x,S,k,V,j,ne,ee,Q,fe,Se,Be,M,be,Fe)=>{n.Sa("AveragePool",f,{format:Fe?"NHWC":"NCHW",auto_pad:g,ceil_mode:x,count_include_pad:S,storage_order:k,dilations:[V,j],kernel_shape:[ne,ee],pads:[Q,fe,Se,Be],strides:[M,be]})},910309:(f,g)=>{n.Sa("GlobalAveragePool",f,{format:g?"NHWC":"NCHW"})},910400:(f,g,x,S,k,V,j,ne,ee,Q,fe,Se,Be,M,be,Fe)=>{n.Sa("AveragePool",f,{format:Fe?"NHWC":"NCHW",auto_pad:g,ceil_mode:x,count_include_pad:S,storage_order:k,dilations:[V,j],kernel_shape:[ne,ee],pads:[Q,fe,Se,Be],strides:[M,be]})},910684:(f,g)=>{n.Sa("GlobalMaxPool",f,{format:g?"NHWC":"NCHW"})},910771:(f,g,x,S,k,V,j,ne,ee,Q,fe,Se,Be,M,be,Fe)=>{n.Sa("MaxPool",f,{format:Fe?"NHWC":"NCHW",auto_pad:g,ceil_mode:x,count_include_pad:S,storage_order:k,dilations:[V,j],kernel_shape:[ne,ee],pads:[Q,fe,Se,Be],strides:[M,be]})},911051:(f,g)=>{n.Sa("GlobalMaxPool",f,{format:g?"NHWC":"NCHW"})},911138:(f,g,x,S,k,V,j,ne,ee,Q,fe,Se,Be,M,be,Fe)=>{n.Sa("MaxPool",f,{format:Fe?"NHWC":"NCHW",auto_pad:g,ceil_mode:x,count_include_pad:S,storage_order:k,dilations:[V,j],kernel_shape:[ne,ee],pads:[Q,fe,Se,Be],strides:[M,be]})},911418:(f,g,x,S,k)=>{n.Sa("Gemm",f,{alpha:g,beta:x,transA:S,transB:k})},911522:f=>{n.Sa("MatMul",f,void 0)},911576:(f,g,x,S)=>{n.Sa("ArgMax",f,{keepDims:!!g,selectLastIndex:!!x,axis:S})},911684:(f,g,x,S)=>{n.Sa("ArgMin",f,{keepDims:!!g,selectLastIndex:!!x,axis:S})},911792:(f,g)=>{n.Sa("Softmax",f,{axis:g})},911855:(f,g)=>{n.Sa("Concat",f,{axis:g})},911915:(f,g,x,S,k)=>{n.Sa("Split",f,{axis:g,numOutputs:x,splitSizes:S?Array.from(z.subarray(S>>>0,k>>>0)):[]})},912055:f=>{n.Sa("Expand",f,void 0)},912109:(f,g)=>{n.Sa("Gather",f,{axis:Number(g)})},912180:(f,g)=>{n.Sa("GatherElements",f,{axis:Number(g)})},912259:(f,g,x,S,k,V,j,ne,ee,Q,fe)=>{n.Sa("Resize",f,{antialias:g,axes:x?Array.from(z.subarray(x>>>0,S>>>0)):[],coordinateTransformMode:wt(k),cubicCoeffA:V,excludeOutside:j,extrapolationValue:ne,keepAspectRatioPolicy:wt(ee),mode:wt(Q),nearestMode:wt(fe)})},912605:(f,g,x,S,k,V,j)=>{n.Sa("Slice",f,{starts:g?Array.from(z.subarray(g>>>0,x>>>0)):[],ends:S?Array.from(z.subarray(S>>>0,k>>>0)):[],axes:V?Array.from(z.subarray(V>>>0,j>>>0)):[]})},912821:f=>{n.Sa("Tile",f,void 0)},912873:(f,g,x)=>{n.Sa("LayerNormalization",f,{axis:Number(g),epsilon:Number(x)})},912980:(f,g,x)=>{n.Sa("InstanceNormalization",f,{epsilon:g,format:x?"NHWC":"NCHW"})},913094:(f,g,x)=>{n.Sa("InstanceNormalization",f,{epsilon:g,format:x?"NHWC":"NCHW"})},913208:f=>{n.Sa("Range",f,void 0)},913261:(f,g)=>{n.Sa("Einsum",f,{equation:wt(g)})},913342:(f,g,x,S,k)=>{n.Sa("Pad",f,{mode:g,value:x,pads:S?Array.from(z.subarray(S>>>0,k>>>0)):[]})},913469:(f,g,x,S,k,V)=>{n.Sa("BatchNormalization",f,{epsilon:g,momentum:x,spatial:!!k,trainingMode:!!S,format:V?"NHWC":"NCHW"})},913638:(f,g,x,S,k,V)=>{n.Sa("BatchNormalization",f,{epsilon:g,momentum:x,spatial:!!k,trainingMode:!!S,format:V?"NHWC":"NCHW"})},913807:(f,g,x)=>{n.Sa("CumSum",f,{exclusive:Number(g),reverse:Number(x)})},913904:(f,g,x,S,k,V,j,ne,ee)=>{n.Sa("Attention",f,{numHeads:g,isUnidirectional:x,maskFilterValue:S,scale:k,doRotary:V,qkvHiddenSizes:j?Array.from(z.subarray(Number(ne)>>>0,Number(ne)+j>>>0)):[],pastPresentShareBuffer:!!ee})},914176:f=>{n.Sa("Gelu",f,void 0)},914228:(f,g,x,S,k,V)=>{n.Sa("MultiHeadAttention",f,{numHeads:g,isUnidirectional:x,maskFilterValue:S,scale:k,doRotary:V})},914387:f=>{n.Sa("BiasAdd",f,void 0)},914442:f=>{n.Sa("BiasSplitGelu",f,void 0)},914503:(f,g)=>{n.Sa("SkipLayerNormalization",f,{epsilon:g})},914584:(f,g,x,S,k,V,j,ne,ee,Q,fe,Se,Be)=>{n.Sa("Conv",f,{format:ee?"NHWC":"NCHW",auto_pad:g,dilations:[x],group:S,kernel_shape:[k],pads:V?Array.from(z.subarray(V>>>0,j>>>0)):[],strides:[ne],w_is_const:()=>!!F[Q>>>0],activation:wt(fe),activation_params:Se?Array.from(Xe.subarray(Se>>>0,Be>>>0)):[]})},914954:(f,g,x,S,k,V,j,ne,ee,Q,fe,Se,Be,M,be,Fe)=>{n.Sa("Conv",f,{format:Se?"NHWC":"NCHW",auto_pad:g,dilations:[x,S],group:k,kernel_shape:[V,j],pads:ne?Array.from(z.subarray(ne>>>0,ee>>>0)):[],strides:[Q,fe],w_is_const:()=>!!F[Be>>>0],activation:wt(M),activation_params:be?Array.from(Xe.subarray(be>>>0,Fe>>>0)):[]})},915345:f=>{n.yb(f)},915379:(f,g)=>n.zb(f,g,n.fb.Ab,n.fb.errors)};function sn(f){this.name="ExitStatus",this.message=`Program terminated with exit(${f})`,this.status=f}function jr(f){this.cb=f-24,this.rb=function(g){q[this.cb+4>>>2>>>0]=g},this.qb=function(g){q[this.cb+8>>>2>>>0]=g},this.kb=function(g,x){this.jb(),this.rb(g),this.qb(x)},this.jb=function(){q[this.cb+16>>>2>>>0]=0}}var kn=0,un=0,ao=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Kr=(f,g,x)=>{g>>>=0;var S=g+x;for(x=g;f[x]&&!(x>=S);)++x;if(16<x-g&&f.buffer&&ao)return ao.decode(f.subarray(g,x));for(S="";g<x;){var k=f[g++];if(k&128){var V=f[g++]&63;if((k&224)==192)S+=String.fromCharCode((k&31)<<6|V);else{var j=f[g++]&63;k=(k&240)==224?(k&15)<<12|V<<6|j:(k&7)<<18|V<<12|j<<6|f[g++]&63,65536>k?S+=String.fromCharCode(k):(k-=65536,S+=String.fromCharCode(55296|k>>10,56320|k&1023))}}else S+=String.fromCharCode(k)}return S},wt=(f,g)=>(f>>>=0)?Kr(G,f,g):"",Lr=f=>{for(var g=0,x=0;x<f.length;++x){var S=f.charCodeAt(x);127>=S?g++:2047>=S?g+=2:55296<=S&&57343>=S?(g+=4,++x):g+=3}return g},xr=(f,g,x,S)=>{if(x>>>=0,!(0<S))return 0;var k=x;S=x+S-1;for(var V=0;V<f.length;++V){var j=f.charCodeAt(V);if(55296<=j&&57343>=j){var ne=f.charCodeAt(++V);j=65536+((j&1023)<<10)|ne&1023}if(127>=j){if(x>=S)break;g[x++>>>0]=j}else{if(2047>=j){if(x+1>=S)break;g[x++>>>0]=192|j>>6}else{if(65535>=j){if(x+2>=S)break;g[x++>>>0]=224|j>>12}else{if(x+3>=S)break;g[x++>>>0]=240|j>>18,g[x++>>>0]=128|j>>12&63}g[x++>>>0]=128|j>>6&63}g[x++>>>0]=128|j&63}}return g[x>>>0]=0,x-k},so=f=>{if(f===null)return"null";var g=typeof f;return g==="object"||g==="array"||g==="function"?f.toString():""+f},ti,Ut=f=>{for(var g="";G[f>>>0];)g+=ti[G[f++>>>0]];return g},uo={},ln={},lo={},er;function ri(f,g,x={}){var S=g.name;if(!f)throw new er(`type "${S}" must have a positive integer typeid pointer`);if(ln.hasOwnProperty(f)){if(x.tb)return;throw new er(`Cannot register type '${S}' twice`)}ln[f]=g,delete lo[f],uo.hasOwnProperty(f)&&(g=uo[f],delete uo[f],g.forEach(k=>k()))}function St(f,g,x={}){if(!("argPackAdvance"in g))throw new TypeError("registerType registeredInstance requires argPackAdvance");ri(f,g,x)}var co=(f,g,x)=>{switch(g){case 1:return x?S=>F[S>>>0>>>0]:S=>G[S>>>0>>>0];case 2:return x?S=>J[S>>>1>>>0]:S=>le[S>>>1>>>0];case 4:return x?S=>z[S>>>2>>>0]:S=>q[S>>>2>>>0];case 8:return x?S=>Ye[S>>>3]:S=>se[S>>>3];default:throw new TypeError(`invalid integer width (${g}): ${f}`)}};function fo(){this.$a=[void 0],this.nb=[]}var Ze=new fo;function po(f){f>>>=0,f>=Ze.cb&&--Ze.get(f).pb===0&&Ze.jb(f)}var De=f=>{if(!f)throw new er("Cannot use deleted val. handle = "+f);return Ze.get(f).value},Gt=f=>{switch(f){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return Ze.kb({pb:1,value:f})}};function Dn(f){return this.fromWireType(z[f>>>2>>>0])}var ho=(f,g)=>{switch(g){case 4:return function(x){return this.fromWireType(Xe[x>>>2>>>0])};case 8:return function(x){return this.fromWireType(Ee[x>>>3>>>0])};default:throw new TypeError(`invalid float width (${g}): ${f}`)}};function es(f){return this.fromWireType(q[f>>>2>>>0])}var mo=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,ts=(f,g)=>{for(var x=f>>1,S=x+g/2;!(x>=S)&&le[x>>>0];)++x;if(x<<=1,32<x-f&&mo)return mo.decode(G.subarray(f>>>0,x>>>0));for(x="",S=0;!(S>=g/2);++S){var k=J[f+2*S>>>1>>>0];if(k==0)break;x+=String.fromCharCode(k)}return x},$e=(f,g,x)=>{if(x??=2147483647,2>x)return 0;x-=2;var S=g;x=x<2*f.length?x/2:f.length;for(var k=0;k<x;++k)J[g>>>1>>>0]=f.charCodeAt(k),g+=2;return J[g>>>1>>>0]=0,g-S},Bn=f=>2*f.length,ni=(f,g)=>{for(var x=0,S="";!(x>=g/4);){var k=z[f+4*x>>>2>>>0];if(k==0)break;++x,65536<=k?(k-=65536,S+=String.fromCharCode(55296|k>>10,56320|k&1023)):S+=String.fromCharCode(k)}return S},rs=(f,g,x)=>{if(g>>>=0,x??=2147483647,4>x)return 0;var S=g;x=S+x-4;for(var k=0;k<f.length;++k){var V=f.charCodeAt(k);if(55296<=V&&57343>=V){var j=f.charCodeAt(++k);V=65536+((V&1023)<<10)|j&1023}if(z[g>>>2>>>0]=V,g+=4,g+4>x)break}return z[g>>>2>>>0]=0,g-S},oi=f=>{for(var g=0,x=0;x<f.length;++x){var S=f.charCodeAt(x);55296<=S&&57343>=S&&++x,g+=4}return g},go=(f,g)=>{var x=ln[f];if(x===void 0)throw f=pn(f),x=Ut(f),Wt(f),new er(g+" has unknown type "+x);return x},bo=(f,g,x)=>{var S=[];return f=f.toWireType(S,x),S.length&&(q[g>>>2>>>0]=Gt(S)),f},dn=f=>{try{f()}catch(g){yt(g)}};function ii(){var f=ve,g={};for(let[x,S]of Object.entries(f))g[x]=typeof S=="function"?function(){Yr.push(x);try{return S.apply(null,arguments)}finally{P||(Yr.pop(),Dt&&cr===1&&Yr.length===0&&(cr=0,dn(wi),typeof Fibers<"u"&&Fibers.Hb()))}}:S;return g}var cr=0,Dt=null,yo=0,Yr=[],vo={},wo={},ai=0,Rn=null,si=[];function ui(){return new Promise((f,g)=>{Rn={resolve:f,reject:g}})}function li(){var f=Xr(65548),g=f+12;q[f>>>2>>>0]=g,q[f+4>>>2>>>0]=g+65536,g=Yr[0];var x=vo[g];return x===void 0&&(x=ai++,vo[g]=x,wo[x]=g),z[f+8>>>2>>>0]=x,f}function di(f){if(!P){if(cr===0){var g=!1,x=!1;f((S=0)=>{if(!P&&(yo=S,g=!0,x)){cr=2,dn(()=>fr(Dt)),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.resume(),S=!1;try{var k=(0,ve[wo[z[Dt+8>>>2>>>0]]])()}catch(ne){k=ne,S=!0}var V=!1;if(!Dt){var j=Rn;j&&(Rn=null,(S?j.reject:j.resolve)(k),V=!0)}if(S&&!V)throw k}}),x=!0,g||(cr=1,Dt=li(),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.pause(),dn(()=>hn(Dt)))}else cr===2?(cr=0,dn(Qt),Wt(Dt),Dt=null,si.forEach(S=>{if(!P)try{S();try{L=L=S=L,n.onExit?.(S),P=!0,a(S,new sn(S))}catch(k){k instanceof sn||k=="unwind"||a(1,k)}}catch(k){k instanceof sn||k=="unwind"||a(1,k)}})):yt(`invalid state: ${cr}`);return yo}}function xo(f){return di(g=>{f().then(g)})}var cn=[],ci={},zn=f=>{var g=ci[f];return g===void 0?Ut(f):g},_o=()=>typeof globalThis=="object"?globalThis:Function("return this")(),Jt=f=>{var g=cn.length;return cn.push(f),g},To=(f,g)=>{for(var x=Array(f),S=0;S<f;++S)x[S]=go(q[g+4*S>>>2>>>0],"parameter "+S);return x},Mn=(f,g)=>Object.defineProperty(g,"name",{value:f});function ns(f){var g=Function;if(!(g instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof g} which is not a function`);var x=Mn(g.name||"unknownFunctionName",function(){});return x.prototype=g.prototype,x=new x,f=g.apply(x,f),f instanceof Object?f:x}var Bt=f=>f%4===0&&(f%100!==0||f%400===0),fi=[0,31,60,91,121,152,182,213,244,274,305,335],tr=[0,31,59,90,120,151,181,212,243,273,304,334],$o=f=>{var g=Lr(f)+1,x=Xr(g);return x&&xr(f,G,x,g),x},Ln=[],Rt=(f,g)=>{Ln.length=0;for(var x;x=G[f++>>>0];){var S=x!=105;S&=x!=112,g+=S&&g%8?4:0,Ln.push(x==112?q[g>>>2>>>0]:x==106?Ye[g>>>3]:x==105?z[g>>>2>>>0]:Ee[g>>>3>>>0]),g+=S?8:4}return Ln},fn={},It=()=>{if(!zt){var f={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:s||"./this.program"},g;for(g in fn)fn[g]===void 0?delete f[g]:f[g]=fn[g];var x=[];for(g in f)x.push(`${g}=${f[g]}`);zt=x}return zt},zt,pi=[null,[],[]],hi=[31,29,31,30,31,30,31,31,30,31,30,31],mi=[31,28,31,30,31,30,31,31,30,31,30,31];function gi(f){var g=Array(Lr(f)+1);return xr(f,g,0,g.length),g}function bi(f,g,x,S){function k(M,be,Fe){for(M=typeof M=="number"?M.toString():M||"";M.length<be;)M=Fe[0]+M;return M}function V(M,be){return k(M,be,"0")}function j(M,be){function Fe(Vr){return 0>Vr?-1:0<Vr?1:0}var Fr;return(Fr=Fe(M.getFullYear()-be.getFullYear()))===0&&(Fr=Fe(M.getMonth()-be.getMonth()))===0&&(Fr=Fe(M.getDate()-be.getDate())),Fr}function ne(M){switch(M.getDay()){case 0:return new Date(M.getFullYear()-1,11,29);case 1:return M;case 2:return new Date(M.getFullYear(),0,3);case 3:return new Date(M.getFullYear(),0,2);case 4:return new Date(M.getFullYear(),0,1);case 5:return new Date(M.getFullYear()-1,11,31);case 6:return new Date(M.getFullYear()-1,11,30)}}function ee(M){var be=M.ab;for(M=new Date(new Date(M.bb+1900,0,1).getTime());0<be;){var Fe=M.getMonth(),Fr=(Bt(M.getFullYear())?hi:mi)[Fe];if(be>Fr-M.getDate())be-=Fr-M.getDate()+1,M.setDate(1),11>Fe?M.setMonth(Fe+1):(M.setMonth(0),M.setFullYear(M.getFullYear()+1));else{M.setDate(M.getDate()+be);break}}return Fe=new Date(M.getFullYear()+1,0,4),be=ne(new Date(M.getFullYear(),0,4)),Fe=ne(Fe),0>=j(be,M)?0>=j(Fe,M)?M.getFullYear()+1:M.getFullYear():M.getFullYear()-1}f>>>=0,g>>>=0,x>>>=0,S>>>=0;var Q=q[S+40>>>2>>>0];S={Db:z[S>>>2>>>0],Cb:z[S+4>>>2>>>0],hb:z[S+8>>>2>>>0],mb:z[S+12>>>2>>>0],ib:z[S+16>>>2>>>0],bb:z[S+20>>>2>>>0],Wa:z[S+24>>>2>>>0],ab:z[S+28>>>2>>>0],Gb:z[S+32>>>2>>>0],Bb:z[S+36>>>2>>>0],Eb:Q?wt(Q):""},x=wt(x),Q={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var fe in Q)x=x.replace(new RegExp(fe,"g"),Q[fe]);var Se="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Be="January February March April May June July August September October November December".split(" ");Q={"%a":M=>Se[M.Wa].substring(0,3),"%A":M=>Se[M.Wa],"%b":M=>Be[M.ib].substring(0,3),"%B":M=>Be[M.ib],"%C":M=>V((M.bb+1900)/100|0,2),"%d":M=>V(M.mb,2),"%e":M=>k(M.mb,2," "),"%g":M=>ee(M).toString().substring(2),"%G":M=>ee(M),"%H":M=>V(M.hb,2),"%I":M=>(M=M.hb,M==0?M=12:12<M&&(M-=12),V(M,2)),"%j":M=>{for(var be=0,Fe=0;Fe<=M.ib-1;be+=(Bt(M.bb+1900)?hi:mi)[Fe++]);return V(M.mb+be,3)},"%m":M=>V(M.ib+1,2),"%M":M=>V(M.Cb,2),"%n":()=>`
`,"%p":M=>0<=M.hb&&12>M.hb?"AM":"PM","%S":M=>V(M.Db,2),"%t":()=>"	","%u":M=>M.Wa||7,"%U":M=>V(Math.floor((M.ab+7-M.Wa)/7),2),"%V":M=>{var be=Math.floor((M.ab+7-(M.Wa+6)%7)/7);if(2>=(M.Wa+371-M.ab-2)%7&&be++,be)be==53&&(Fe=(M.Wa+371-M.ab)%7,Fe==4||Fe==3&&Bt(M.bb)||(be=1));else{be=52;var Fe=(M.Wa+7-M.ab-1)%7;(Fe==4||Fe==5&&Bt(M.bb%400-1))&&be++}return V(be,2)},"%w":M=>M.Wa,"%W":M=>V(Math.floor((M.ab+7-(M.Wa+6)%7)/7),2),"%y":M=>(M.bb+1900).toString().substring(2),"%Y":M=>M.bb+1900,"%z":M=>{M=M.Bb;var be=0<=M;return M=Math.abs(M)/60,(be?"+":"-")+("0000"+(M/60*100+M%60)).slice(-4)},"%Z":M=>M.Eb,"%%":()=>"%"},x=x.replace(/%%/g,"\0\0");for(fe in Q)x.includes(fe)&&(x=x.replace(new RegExp(fe,"g"),Q[fe](S)));return x=x.replace(/\0\0/g,"%"),fe=gi(x),fe.length>g?0:(F.set(fe,f>>>0),fe.length-1)}for(var yi=Array(256),Nn=0;256>Nn;++Nn)yi[Nn]=String.fromCharCode(Nn);ti=yi,er=n.BindingError=class extends Error{constructor(f){super(f),this.name="BindingError"}},n.InternalError=class extends Error{constructor(f){super(f),this.name="InternalError"}},Object.assign(fo.prototype,{get(f){return this.$a[f]},has(f){return this.$a[f]!==void 0},kb(f){var g=this.nb.pop()||this.$a.length;return this.$a[g]=f,g},jb(f){this.$a[f]=void 0,this.nb.push(f)}}),Ze.$a.push({value:void 0},{value:null},{value:!0},{value:!1}),Ze.cb=Ze.$a.length,n.count_emval_handles=()=>{for(var f=0,g=Ze.cb;g<Ze.$a.length;++g)Ze.$a[g]!==void 0&&++f;return f};var os={ia:function(f,g,x){return xo(async()=>{await n.wb(f,g,x)})},a:function(f,g,x){throw f>>>=0,new jr(f).kb(g>>>0,x>>>0),kn=f,un++,kn},w:function(){return 0},ca:function(){},P:function(){},R:function(){},J:function(){return 0},aa:function(){},X:function(){},$:function(){},D:function(){},Q:function(){},N:function(){},ba:function(){},O:function(){},G:function(f,g,x,S,k){g>>>=0,g=Ut(g);var V=g.indexOf("u")!=-1;V&&(k=(1n<<64n)-1n),St(f>>>0,{name:g,fromWireType:j=>j,toWireType:function(j,ne){if(typeof ne!="bigint"&&typeof ne!="number")throw new TypeError(`Cannot convert "${so(ne)}" to ${this.name}`);if(ne<S||ne>k)throw new TypeError(`Passing a number "${so(ne)}" from JS side to C/C++ side to an argument of type "${g}", which is outside the valid range [${S}, ${k}]!`);return ne},argPackAdvance:8,readValueFromPointer:co(g,x>>>0,!V),eb:null})},ga:function(f,g,x,S){g=Ut(g>>>0),St(f>>>0,{name:g,fromWireType:function(k){return!!k},toWireType:function(k,V){return V?x:S},argPackAdvance:8,readValueFromPointer:function(k){return this.fromWireType(G[k>>>0])},eb:null})},fa:function(f,g){g=Ut(g>>>0),St(f>>>0,{name:g,fromWireType:x=>{var S=De(x);return po(x),S},toWireType:(x,S)=>Gt(S),argPackAdvance:8,readValueFromPointer:Dn,eb:null})},F:function(f,g,x){g=Ut(g>>>0),St(f>>>0,{name:g,fromWireType:S=>S,toWireType:(S,k)=>k,argPackAdvance:8,readValueFromPointer:ho(g,x>>>0),eb:null})},t:function(f,g,x,S,k){if(f>>>=0,x>>>=0,g=Ut(g>>>0),k===-1&&(k=4294967295),k=ne=>ne,S===0){var V=32-8*x;k=ne=>ne<<V>>>V}var j=g.includes("unsigned")?function(ne,ee){return ee>>>0}:function(ne,ee){return ee};St(f,{name:g,fromWireType:k,toWireType:j,argPackAdvance:8,readValueFromPointer:co(g,x,S!==0),eb:null})},n:function(f,g,x){function S(V){return new k(F.buffer,q[V+4>>>2>>>0],q[V>>>2>>>0])}var k=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][g];x=Ut(x>>>0),St(f>>>0,{name:x,fromWireType:S,argPackAdvance:8,readValueFromPointer:S},{tb:!0})},H:function(f,g){g=Ut(g>>>0);var x=g==="std::string";St(f>>>0,{name:g,fromWireType:function(S){var k=q[S>>>2>>>0],V=S+4;if(x)for(var j=V,ne=0;ne<=k;++ne){var ee=V+ne;if(ne==k||G[ee>>>0]==0){if(j=wt(j,ee-j),Q===void 0)var Q=j;else Q+=String.fromCharCode(0),Q+=j;j=ee+1}}else{for(Q=Array(k),ne=0;ne<k;++ne)Q[ne]=String.fromCharCode(G[V+ne>>>0]);Q=Q.join("")}return Wt(S),Q},toWireType:function(S,k){k instanceof ArrayBuffer&&(k=new Uint8Array(k));var V=typeof k=="string";if(!(V||k instanceof Uint8Array||k instanceof Uint8ClampedArray||k instanceof Int8Array))throw new er("Cannot pass non-string to std::string");var j=x&&V?Lr(k):k.length,ne=Xr(4+j+1),ee=ne+4;if(q[ne>>>2>>>0]=j,x&&V)xr(k,G,ee,j+1);else if(V)for(V=0;V<j;++V){var Q=k.charCodeAt(V);if(255<Q)throw Wt(ee),new er("String has UTF-16 code units that do not fit in 8 bits");G[ee+V>>>0]=Q}else for(V=0;V<j;++V)G[ee+V>>>0]=k[V];return S!==null&&S.push(Wt,ne),ne},argPackAdvance:8,readValueFromPointer:es,eb(S){Wt(S)}})},y:function(f,g,x){if(g>>>=0,x>>>=0,x=Ut(x),g===2)var S=ts,k=$e,V=Bn,j=()=>le,ne=1;else g===4&&(S=ni,k=rs,V=oi,j=()=>q,ne=2);St(f>>>0,{name:x,fromWireType:ee=>{for(var Q=q[ee>>>2>>>0],fe=j(),Se,Be=ee+4,M=0;M<=Q;++M){var be=ee+4+M*g;(M==Q||fe[be>>>ne]==0)&&(Be=S(Be,be-Be),Se===void 0?Se=Be:(Se+=String.fromCharCode(0),Se+=Be),Be=be+g)}return Wt(ee),Se},toWireType:(ee,Q)=>{if(typeof Q!="string")throw new er(`Cannot pass non-string to C++ string type ${x}`);var fe=V(Q),Se=Xr(4+fe+g);return q[Se>>>2]=fe>>ne,k(Q,Se+4,fe+g),ee!==null&&ee.push(Wt,Se),Se},argPackAdvance:8,readValueFromPointer:Dn,eb(ee){Wt(ee)}})},ha:function(f,g){g=Ut(g>>>0),St(f>>>0,{ub:!0,name:g,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},da:()=>1,s:function(f,g,x){return g>>>=0,x>>>=0,f=De(f>>>0),g=go(g,"emval::as"),bo(g,x,f)},v:function(f){return f>>>=0,xo(()=>(f=De(f),f.then(Gt)))},o:function(f,g,x,S){return x>>>=0,S>>>=0,f=cn[f>>>0],g=De(g>>>0),f(null,g,x,S)},k:function(f,g,x,S,k){return x>>>=0,S>>>=0,k>>>=0,f=cn[f>>>0],g=De(g>>>0),x=zn(x),f(g,g[x],S,k)},b:po,z:function(f,g){return g>>>=0,f=De(f>>>0),g=De(g),f==g},m:function(f){return f>>>=0,f===0?Gt(_o()):(f=zn(f),Gt(_o()[f]))},i:function(f,g,x){g=To(f,g>>>0);var S=g.shift();f--;var k=`return function (obj, func, destructorsRef, args) {
`,V=0,j=[];x===0&&j.push("obj");for(var ne=["retType"],ee=[S],Q=0;Q<f;++Q)j.push("arg"+Q),ne.push("argType"+Q),ee.push(g[Q]),k+=`  var arg${Q} = argType${Q}.readValueFromPointer(args${V?"+"+V:""});
`,V+=g[Q].argPackAdvance;for(k+=`  var rv = ${x===1?"new func":"func.call"}(${j.join(", ")});
`,Q=0;Q<f;++Q)g[Q].deleteObject&&(k+=`  argType${Q}.deleteObject(arg${Q});
`);return S.ub||(ne.push("emval_returnValue"),ee.push(bo),k+=`  return emval_returnValue(retType, destructorsRef, rv);
`),ne.push(k+`};
`),f=ns(ne).apply(null,ee),x=`methodCaller<(${g.map(fe=>fe.name).join(", ")}) => ${S.name}>`,Jt(Mn(x,f))},r:function(f,g){return g>>>=0,f=De(f>>>0),g=De(g),Gt(f[g])},e:function(f){f>>>=0,4<f&&(Ze.get(f).pb+=1)},u:function(){return Gt([])},l:function(f){f=De(f>>>0);for(var g=Array(f.length),x=0;x<f.length;x++)g[x]=f[x];return Gt(g)},d:function(f){return Gt(zn(f>>>0))},j:function(){return Gt({})},h:function(f){f>>>=0;for(var g=De(f);g.length;){var x=g.pop();g.pop()(x)}po(f)},g:function(f,g,x){g>>>=0,x>>>=0,f=De(f>>>0),g=De(g),x=De(x),f[g]=x},c:function(f,g){return g>>>=0,f=go(f>>>0,"_emval_take_value"),f=f.readValueFromPointer(g),Gt(f)},U:function(f,g){f=-9007199254740992>f||9007199254740992<f?NaN:Number(f),g>>>=0,f=new Date(1e3*f),z[g>>>2>>>0]=f.getUTCSeconds(),z[g+4>>>2>>>0]=f.getUTCMinutes(),z[g+8>>>2>>>0]=f.getUTCHours(),z[g+12>>>2>>>0]=f.getUTCDate(),z[g+16>>>2>>>0]=f.getUTCMonth(),z[g+20>>>2>>>0]=f.getUTCFullYear()-1900,z[g+24>>>2>>>0]=f.getUTCDay(),z[g+28>>>2>>>0]=(f.getTime()-Date.UTC(f.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},V:function(f,g){f=-9007199254740992>f||9007199254740992<f?NaN:Number(f),g>>>=0,f=new Date(1e3*f),z[g>>>2>>>0]=f.getSeconds(),z[g+4>>>2>>>0]=f.getMinutes(),z[g+8>>>2>>>0]=f.getHours(),z[g+12>>>2>>>0]=f.getDate(),z[g+16>>>2>>>0]=f.getMonth(),z[g+20>>>2>>>0]=f.getFullYear()-1900,z[g+24>>>2>>>0]=f.getDay(),z[g+28>>>2>>>0]=(Bt(f.getFullYear())?fi:tr)[f.getMonth()]+f.getDate()-1|0,z[g+36>>>2>>>0]=-(60*f.getTimezoneOffset());var x=new Date(f.getFullYear(),6,1).getTimezoneOffset(),S=new Date(f.getFullYear(),0,1).getTimezoneOffset();z[g+32>>>2>>>0]=(x!=S&&f.getTimezoneOffset()==Math.min(S,x))|0},W:function(f){f>>>=0;var g=new Date(z[f+20>>>2>>>0]+1900,z[f+16>>>2>>>0],z[f+12>>>2>>>0],z[f+8>>>2>>>0],z[f+4>>>2>>>0],z[f>>>2>>>0],0),x=z[f+32>>>2>>>0],S=g.getTimezoneOffset(),k=new Date(g.getFullYear(),6,1).getTimezoneOffset(),V=new Date(g.getFullYear(),0,1).getTimezoneOffset(),j=Math.min(V,k);return 0>x?z[f+32>>>2>>>0]=+(k!=V&&j==S):0<x!=(j==S)&&(k=Math.max(V,k),g.setTime(g.getTime()+6e4*((0<x?j:k)-S))),z[f+24>>>2>>>0]=g.getDay(),z[f+28>>>2>>>0]=(Bt(g.getFullYear())?fi:tr)[g.getMonth()]+g.getDate()-1|0,z[f>>>2>>>0]=g.getSeconds(),z[f+4>>>2>>>0]=g.getMinutes(),z[f+8>>>2>>>0]=g.getHours(),z[f+12>>>2>>>0]=g.getDate(),z[f+16>>>2>>>0]=g.getMonth(),z[f+20>>>2>>>0]=g.getYear(),f=g.getTime(),isNaN(f)?(z[vi()>>>2>>>0]=61,f=-1):f/=1e3,BigInt(f)},S:function(){return-52},T:function(){},L:function(f,g,x){function S(ee){return(ee=ee.toTimeString().match(/\(([A-Za-z ]+)\)$/))?ee[1]:"GMT"}x>>>=0;var k=new Date().getFullYear(),V=new Date(k,0,1),j=new Date(k,6,1);k=V.getTimezoneOffset();var ne=j.getTimezoneOffset();q[f>>>0>>>2>>>0]=60*Math.max(k,ne),z[g>>>0>>>2>>>0]=+(k!=ne),f=S(V),g=S(j),f=$o(f),g=$o(g),ne<k?(q[x>>>2>>>0]=f,q[x+4>>>2>>>0]=g):(q[x>>>2>>>0]=g,q[x+4>>>2>>>0]=f)},A:()=>{yt("")},f:function(f,g,x){return f>>>=0,g=Rt(g>>>0,x>>>0),Mr[f].apply(null,g)},I:function(f,g,x){return f>>>=0,g=Rt(g>>>0,x>>>0),Mr[f].apply(null,g)},E:()=>Date.now(),M:function(){return 4294901760},q:()=>performance.now(),K:function(f){f>>>=0;var g=G.length;if(4294901760<f)return!1;for(var x=1;4>=x;x*=2){var S=g*(1+.2/x);S=Math.min(S,f+100663296);var k=Math;S=Math.max(f,S);e:{k=(k.min.call(k,4294901760,S+(65536-S%65536)%65536)-O.buffer.byteLength+65535)/65536;try{O.grow(k),ut();var V=1;break e}catch{}V=void 0}if(V)return!0}return!1},Z:function(f,g){f>>>=0,g>>>=0;var x=0;return It().forEach((S,k)=>{var V=g+x;for(k=q[f+4*k>>>2>>>0]=V,V=0;V<S.length;++V)F[k++>>>0>>>0]=S.charCodeAt(V);F[k>>>0>>>0]=0,x+=S.length+1}),0},_:function(f,g){f>>>=0,g>>>=0;var x=It();q[f>>>2>>>0]=x.length;var S=0;return x.forEach(k=>S+=k.length+1),q[g>>>2>>>0]=S,0},x:()=>52,C:function(){return 52},Y:function(){return 70},B:function(f,g,x,S){g>>>=0,x>>>=0,S>>>=0;for(var k=0,V=0;V<x;V++){var j=q[g>>>2>>>0],ne=q[g+4>>>2>>>0];g+=8;for(var ee=0;ee<ne;ee++){var Q=G[j+ee>>>0],fe=pi[f];Q===0||Q===10?((f===1?$:_)(Kr(fe,0)),fe.length=0):fe.push(Q)}k+=ne}return q[S>>>2>>>0]=k,0},ea:bi,p:function(f,g,x,S){return bi(f>>>0,g>>>0,x>>>0,S>>>0)}},ve=function(){function f(x){return ve=x.exports,ve=ii(),ve=xi(),O=ve.ja,ut(),Oe.unshift(ve.ka),Pe--,Pe==0&&(lt!==null&&(clearInterval(lt),lt=null),Qe&&(x=Qe,Qe=null,x())),ve}var g={a:os};if(Pe++,n.instantiateWasm)try{return n.instantiateWasm(g,f)}catch(x){_(`Module.instantiateWasm callback failed with error: ${x}`),o(x)}return zr(g,function(x){f(x.instance)}).catch(o),{}}();n._OrtInit=(f,g)=>(n._OrtInit=ve.la)(f,g),n._OrtGetLastError=(f,g)=>(n._OrtGetLastError=ve.ma)(f,g),n._OrtCreateSessionOptions=(f,g,x,S,k,V,j,ne,ee,Q)=>(n._OrtCreateSessionOptions=ve.na)(f,g,x,S,k,V,j,ne,ee,Q),n._OrtAppendExecutionProvider=(f,g)=>(n._OrtAppendExecutionProvider=ve.oa)(f,g),n._OrtAddFreeDimensionOverride=(f,g,x)=>(n._OrtAddFreeDimensionOverride=ve.pa)(f,g,x),n._OrtAddSessionConfigEntry=(f,g,x)=>(n._OrtAddSessionConfigEntry=ve.qa)(f,g,x),n._OrtReleaseSessionOptions=f=>(n._OrtReleaseSessionOptions=ve.ra)(f),n._OrtCreateSession=(f,g,x)=>(n._OrtCreateSession=ve.sa)(f,g,x),n._OrtReleaseSession=f=>(n._OrtReleaseSession=ve.ta)(f),n._OrtGetInputOutputCount=(f,g,x)=>(n._OrtGetInputOutputCount=ve.ua)(f,g,x),n._OrtGetInputName=(f,g)=>(n._OrtGetInputName=ve.va)(f,g),n._OrtGetOutputName=(f,g)=>(n._OrtGetOutputName=ve.wa)(f,g),n._OrtFree=f=>(n._OrtFree=ve.xa)(f),n._OrtCreateTensor=(f,g,x,S,k,V)=>(n._OrtCreateTensor=ve.ya)(f,g,x,S,k,V),n._OrtGetTensorData=(f,g,x,S,k)=>(n._OrtGetTensorData=ve.za)(f,g,x,S,k),n._OrtReleaseTensor=f=>(n._OrtReleaseTensor=ve.Aa)(f),n._OrtCreateRunOptions=(f,g,x,S)=>(n._OrtCreateRunOptions=ve.Ba)(f,g,x,S),n._OrtAddRunConfigEntry=(f,g,x)=>(n._OrtAddRunConfigEntry=ve.Ca)(f,g,x),n._OrtReleaseRunOptions=f=>(n._OrtReleaseRunOptions=ve.Da)(f),n._OrtCreateBinding=f=>(n._OrtCreateBinding=ve.Ea)(f),n._OrtBindInput=(f,g,x)=>(n._OrtBindInput=ve.Fa)(f,g,x),n._OrtBindOutput=(f,g,x,S)=>(n._OrtBindOutput=ve.Ga)(f,g,x,S),n._OrtClearBoundOutputs=f=>(n._OrtClearBoundOutputs=ve.Ha)(f),n._OrtReleaseBinding=f=>(n._OrtReleaseBinding=ve.Ia)(f),n._OrtRunWithBinding=(f,g,x,S,k)=>(n._OrtRunWithBinding=ve.Ja)(f,g,x,S,k),n._OrtRun=(f,g,x,S,k,V,j,ne)=>(n._OrtRun=ve.Ka)(f,g,x,S,k,V,j,ne),n._OrtEndProfiling=f=>(n._OrtEndProfiling=ve.La)(f),n._JsepOutput=(f,g,x)=>(n._JsepOutput=ve.Ma)(f,g,x),n._JsepGetNodeName=f=>(n._JsepGetNodeName=ve.Na)(f);var vi=()=>(vi=ve.Oa)(),Xr=n._malloc=f=>(Xr=n._malloc=ve.Pa)(f),Wt=n._free=f=>(Wt=n._free=ve.Qa)(f),pn=f=>(pn=ve.Ra)(f),Fn=()=>(Fn=ve.Ta)(),Vn=f=>(Vn=ve.Ua)(f),So=f=>(So=ve.Va)(f),hn=f=>(hn=ve.Xa)(f),wi=()=>(wi=ve.Ya)(),fr=f=>(fr=ve.Za)(f),Qt=()=>(Qt=ve._a)();n.___start_em_js=915491,n.___stop_em_js=915652;function xi(){var f=ve;f=Object.assign({},f);var g=S=>()=>S()>>>0,x=S=>k=>S(k)>>>0;return f.Oa=g(f.Oa),f.Pa=x(f.Pa),f.Ra=x(f.Ra),f.Ta=g(f.Ta),f.Va=x(f.Va),f}n.stackAlloc=So,n.stackSave=Fn,n.stackRestore=Vn,n.UTF8ToString=wt,n.stringToUTF8=(f,g,x)=>xr(f,G,g,x),n.lengthBytesUTF8=Lr;var Nr;Qe=function f(){Nr||Io(),Nr||(Qe=f)};function Io(){if(!(0<Pe)){if(n.preRun)for(typeof n.preRun=="function"&&(n.preRun=[n.preRun]);n.preRun.length;){var f=n.preRun.shift();Te.unshift(f)}for(;0<Te.length;)Te.shift()(n);if(!(0<Pe||Nr||(Nr=!0,n.calledRun=!0,P))){for(;0<Oe.length;)Oe.shift()(n);for(t(n);0<xe.length;)xe.shift()(n)}}}return Io(),e.ready}})();typeof vm=="object"&&typeof Su=="object"?Su.exports=ym:typeof define=="function"&&define.amd&&define([],()=>ym)});var xm=et(()=>{});var _m=et(()=>{});var Tm={};Zr(Tm,{cpus:()=>d2});var d2,$m=R(()=>{d2=void 0});var Am=et((Im,Iu)=>{"use strict";var Sm=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e={}){function n(){return Ee.buffer!=xe.buffer&&Je(),xe}function t(){return Ee.buffer!=xe.buffer&&Je(),Pe}function o(){return Ee.buffer!=xe.buffer&&Je(),lt}function i(){return Ee.buffer!=xe.buffer&&Je(),Qe}function s(){return Ee.buffer!=xe.buffer&&Je(),yt}function a(){return Ee.buffer!=xe.buffer&&Je(),Z}function u(){return Ee.buffer!=xe.buffer&&Je(),ge}function l(){return Ee.buffer!=xe.buffer&&Je(),Vt}var d=e,p,m;d.ready=new Promise((c,h)=>{p=c,m=h}),d.mountExternalData=(c,h)=>{(d.Fb||(d.Fb=new Map)).set(c,h)},d.unmountExternalData=()=>{delete d.Fb},d.jsepInit=(c,h,y,T,C,D,U,Y)=>{d.rc=c,d.$b=h,d.bc=y,d.Ob=T,d.ac=C,d.eb=D,d.cc=U,d.dc=Y,h=(re,te,he)=>(...Ae)=>{let Me=Qt,N=te?.();Ae=re(...Ae);let we=te?.();return N!==we&&(re=we,he(N),te=he=null),Qt!=Me?k():Ae},y=re=>async(...te)=>{try{if(d.Eb)throw Error("Session already started");let he=d.Eb={fc:te[0],errors:[]},Ae=await re(...te);if(d.Eb!==he)throw Error("Session mismatch");c.flush();let Me=he.errors;if(0<Me.length){let N=await Promise.all(Me);if(N=N.filter(we=>we),0<N.length)throw Error(N.join(`
`))}return Ae}finally{d.Eb=null}},d._OrtCreateSession=h(d._OrtCreateSession,()=>d._OrtCreateSession,re=>d._OrtCreateSession=re),d._OrtRun=y(h(d._OrtRun,()=>d._OrtRun,re=>d._OrtRun=re)),d._OrtRunWithBinding=y(h(d._OrtRunWithBinding,()=>d._OrtRunWithBinding,re=>d._OrtRunWithBinding=re)),d._OrtBindInput=h(d._OrtBindInput,()=>d._OrtBindInput,re=>d._OrtBindInput=re),d.jsepRegisterBuffer=(re,te,he,Ae)=>c.registerBuffer(re,te,he,Ae),d.jsepUnregisterBuffers=re=>{c.unregisterBuffers(re)},d.jsepGetBuffer=re=>c.getBuffer(re),d.jsepCreateDownloader=(re,te,he)=>c.createDownloader(re,te,he),d.jsepOnRunStart=()=>c.onRunStart()};var b=Object.assign({},d),v="./this.program",w=(c,h)=>{throw h},A=typeof window=="object",$=typeof importScripts=="function",_=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",O=d.ENVIRONMENT_IS_PTHREAD||!1,P="";function L(c){return d.locateFile?d.locateFile(c,P):P+c}var F,G,J;if(_){var le=(_u(),Ur(xu)),z=($u(),Ur(Tu));P=$?z.dirname(P)+"/":__dirname+"/",F=(h,y)=>(h=Lr(h)?new URL(h):z.normalize(h),le.readFileSync(h,y?void 0:"utf8")),J=h=>(h=F(h,!0),h.buffer||(h=new Uint8Array(h)),h),G=(h,y,T,C=!0)=>{h=Lr(h)?new URL(h):z.normalize(h),le.readFile(h,C?void 0:"utf8",(D,U)=>{D?T(D):y(C?U.buffer:U)})},!d.thisProgram&&1<process.argv.length&&(v=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),w=(h,y)=>{throw process.exitCode=h,y},d.inspect=()=>"[Emscripten Module object]";let c;try{c=xm()}catch(h){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),h}global.Worker=c.Worker}else(A||$)&&($?P=self.location.href:typeof document<"u"&&document.currentScript&&(P=document.currentScript.src),typeof r<"u"&&r&&(P=r),P.indexOf("blob:")!==0?P=P.substr(0,P.replace(/[?#].*/,"").lastIndexOf("/")+1):P="",_||(F=c=>{var h=new XMLHttpRequest;return h.open("GET",c,!1),h.send(null),h.responseText},$&&(J=c=>{var h=new XMLHttpRequest;return h.open("GET",c,!1),h.responseType="arraybuffer",h.send(null),new Uint8Array(h.response)}),G=(c,h,y)=>{var T=new XMLHttpRequest;T.open("GET",c,!0),T.responseType="arraybuffer",T.onload=()=>{T.status==200||T.status==0&&T.response?h(T.response):y()},T.onerror=y,T.send(null)}));_&&typeof performance>"u"&&(global.performance=_m().performance);var q=console.log.bind(console),Xe=console.error.bind(console);_&&(q=(...c)=>le.writeSync(1,c.join(" ")+`
`),Xe=(...c)=>le.writeSync(2,c.join(" ")+`
`));var Ye=q,se=Xe;Object.assign(d,b),b=null,typeof WebAssembly!="object"&&Kr("no native wasm support detected");var Ee,ut,Te=!1,Oe,xe,Pe,lt,Qe,yt,Z,ge,Ie,kt,Vt;function Je(){var c=Ee.buffer;d.HEAP8=xe=new Int8Array(c),d.HEAP16=lt=new Int16Array(c),d.HEAPU8=Pe=new Uint8Array(c),d.HEAPU16=Qe=new Uint16Array(c),d.HEAP32=yt=new Int32Array(c),d.HEAPU32=Z=new Uint32Array(c),d.HEAPF32=ge=new Float32Array(c),d.HEAPF64=Vt=new Float64Array(c),d.HEAP64=Ie=new BigInt64Array(c),d.HEAPU64=kt=new BigUint64Array(c)}var vt=16777216;if(O)Ee=d.wasmMemory;else if(d.wasmMemory)Ee=d.wasmMemory;else if(Ee=new WebAssembly.Memory({initial:vt/65536,maximum:65536,shared:!0}),!(Ee.buffer instanceof SharedArrayBuffer))throw se("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),_&&se("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");Je(),vt=Ee.buffer.byteLength;var zr=[],Mr=[],sn=[],jr=0,kn=null,un=null;function ao(){if(jr--,jr==0&&(kn!==null&&(clearInterval(kn),kn=null),un)){var c=un;un=null,c()}}function Kr(c){throw c="Aborted("+c+")",se(c),Te=!0,Oe=1,c=new WebAssembly.RuntimeError(c+". Build with -sASSERTIONS for more info."),m(c),c}var wt=c=>c.startsWith("data:application/octet-stream;base64,"),Lr=c=>c.startsWith("file://"),xr;xr="ort-wasm-simd-threaded.wasm",wt(xr)||(xr=L(xr));function so(c){if(J)return J(c);throw"both async and sync fetching of the wasm failed"}function ti(c){if(A||$){if(typeof fetch=="function"&&!Lr(c))return fetch(c,{credentials:"same-origin"}).then(h=>{if(!h.ok)throw"failed to load wasm binary file at '"+c+"'";return h.arrayBuffer()}).catch(()=>so(c));if(G)return new Promise((h,y)=>{G(c,T=>h(new Uint8Array(T)),y)})}return Promise.resolve().then(()=>so(c))}function Ut(c,h,y){return ti(c).then(T=>WebAssembly.instantiate(T,h)).then(T=>T).then(y,T=>{se(`failed to asynchronously prepare wasm: ${T}`),Kr(T)})}function uo(c,h){var y=xr;return typeof WebAssembly.instantiateStreaming!="function"||wt(y)||Lr(y)||_||typeof fetch!="function"?Ut(y,c,h):fetch(y,{credentials:"same-origin"}).then(T=>WebAssembly.instantiateStreaming(T,c).then(h,function(C){return se(`wasm streaming compile failed: ${C}`),se("falling back to ArrayBuffer instantiation"),Ut(y,c,h)}))}var ln={904236:(c,h,y,T)=>{if(typeof d>"u"||!d.Fb)return 1;if(c=Ze(c>>>0),c.startsWith("./")&&(c=c.substring(2)),c=d.Fb.get(c),!c)return 2;if(h>>>=0,y>>>=0,T>>>=0,h+y>c.byteLength)return 3;try{return t().set(c.subarray(h,h+y),T>>>0),0}catch{return 4}},904737:c=>d.$b(c),904770:c=>d.bc(c),904802:(c,h,y)=>{d.Ob(c,h,y,!0)},904841:(c,h,y)=>{d.Ob(c,h,y)},904874:c=>{d.eb("Abs",c,void 0)},904925:c=>{d.eb("Neg",c,void 0)},904976:c=>{d.eb("Floor",c,void 0)},905029:c=>{d.eb("Ceil",c,void 0)},905081:c=>{d.eb("Reciprocal",c,void 0)},905139:c=>{d.eb("Sqrt",c,void 0)},905191:c=>{d.eb("Exp",c,void 0)},905242:c=>{d.eb("Erf",c,void 0)},905293:c=>{d.eb("Sigmoid",c,void 0)},905348:(c,h,y)=>{d.eb("HardSigmoid",c,{alpha:h,beta:y})},905427:c=>{d.eb("Log",c,void 0)},905478:c=>{d.eb("Sin",c,void 0)},905529:c=>{d.eb("Cos",c,void 0)},905580:c=>{d.eb("Tan",c,void 0)},905631:c=>{d.eb("Asin",c,void 0)},905683:c=>{d.eb("Acos",c,void 0)},905735:c=>{d.eb("Atan",c,void 0)},905787:c=>{d.eb("Sinh",c,void 0)},905839:c=>{d.eb("Cosh",c,void 0)},905891:c=>{d.eb("Asinh",c,void 0)},905944:c=>{d.eb("Acosh",c,void 0)},905997:c=>{d.eb("Atanh",c,void 0)},906050:c=>{d.eb("Tanh",c,void 0)},906102:c=>{d.eb("Not",c,void 0)},906153:(c,h,y)=>{d.eb("Clip",c,{min:h,max:y})},906222:c=>{d.eb("Clip",c,void 0)},906274:(c,h)=>{d.eb("Elu",c,{alpha:h})},906332:c=>{d.eb("Relu",c,void 0)},906384:(c,h)=>{d.eb("LeakyRelu",c,{alpha:h})},906448:(c,h)=>{d.eb("ThresholdedRelu",c,{alpha:h})},906518:(c,h)=>{d.eb("Cast",c,{to:h})},906576:c=>{d.eb("Add",c,void 0)},906627:c=>{d.eb("Sub",c,void 0)},906678:c=>{d.eb("Mul",c,void 0)},906729:c=>{d.eb("Div",c,void 0)},906780:c=>{d.eb("Pow",c,void 0)},906831:c=>{d.eb("Equal",c,void 0)},906884:c=>{d.eb("Greater",c,void 0)},906939:c=>{d.eb("GreaterOrEqual",c,void 0)},907001:c=>{d.eb("Less",c,void 0)},907053:c=>{d.eb("LessOrEqual",c,void 0)},907112:(c,h,y,T,C)=>{d.eb("ReduceMean",c,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:T?Array.from(s().subarray(T>>>0,C>>>0)):[]})},907271:(c,h,y,T,C)=>{d.eb("ReduceMax",c,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:T?Array.from(s().subarray(T>>>0,C>>>0)):[]})},907429:(c,h,y,T,C)=>{d.eb("ReduceMin",c,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:T?Array.from(s().subarray(T>>>0,C>>>0)):[]})},907587:(c,h,y,T,C)=>{d.eb("ReduceProd",c,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:T?Array.from(s().subarray(T>>>0,C>>>0)):[]})},907746:(c,h,y,T,C)=>{d.eb("ReduceSum",c,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:T?Array.from(s().subarray(T>>>0,C>>>0)):[]})},907904:(c,h,y,T,C)=>{d.eb("ReduceL1",c,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:T?Array.from(s().subarray(T>>>0,C>>>0)):[]})},908061:(c,h,y,T,C)=>{d.eb("ReduceL2",c,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:T?Array.from(s().subarray(T>>>0,C>>>0)):[]})},908218:(c,h,y,T,C)=>{d.eb("ReduceLogSum",c,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:T?Array.from(s().subarray(T>>>0,C>>>0)):[]})},908379:(c,h,y,T,C)=>{d.eb("ReduceSumSquare",c,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:T?Array.from(s().subarray(T>>>0,C>>>0)):[]})},908543:(c,h,y,T,C)=>{d.eb("ReduceLogSumExp",c,{keepDims:!!h,noopWithEmptyAxes:!!y,axes:T?Array.from(s().subarray(T>>>0,C>>>0)):[]})},908707:c=>{d.eb("Where",c,void 0)},908760:(c,h,y)=>{d.eb("Transpose",c,{perm:h?Array.from(s().subarray(h>>>0,y>>>0)):[]})},908868:(c,h,y,T,C,D,U,Y,re,te,he,Ae,Me,N,we)=>{d.eb("ConvTranspose",c,{format:re?"NHWC":"NCHW",autoPad:h,dilations:[y],group:T,kernel_shape:[C],pads:[D,U],strides:[Y],wIsConst:()=>!!n()[te>>>0],outputPadding:he?Array.from(s().subarray(he>>>0,Ae>>>0)):[],outputShape:Me?Array.from(s().subarray(Me>>>0,N>>>0)):[],activation:Ze(we)})},909270:(c,h,y,T,C,D,U,Y,re,te,he,Ae,Me,N)=>{d.eb("ConvTranspose",c,{format:Y?"NHWC":"NCHW",autoPad:h,dilations:Array.from(s().subarray(y>>>0,(y>>>0)+2>>>0)),group:T,kernelShape:Array.from(s().subarray(C>>>0,(C>>>0)+2>>>0)),pads:Array.from(s().subarray(D>>>0,(D>>>0)+4>>>0)),strides:Array.from(s().subarray(U>>>0,(U>>>0)+2>>>0)),wIsConst:()=>!!n()[re>>>0],outputPadding:te?Array.from(s().subarray(te>>>0,he>>>0)):[],outputShape:Ae?Array.from(s().subarray(Ae>>>0,Me>>>0)):[],activation:Ze(N)})},909835:(c,h,y,T,C,D,U,Y,re,te,he,Ae,Me,N,we)=>{d.eb("ConvTranspose",c,{format:re?"NHWC":"NCHW",autoPad:h,dilations:[y],group:T,kernel_shape:[C],pads:[D,U],strides:[Y],wIsConst:()=>!!n()[te>>>0],outputPadding:he?Array.from(s().subarray(he>>>0,Ae>>>0)):[],outputShape:Me?Array.from(s().subarray(Me>>>0,N>>>0)):[],activation:Ze(we)})},910237:(c,h,y,T,C,D,U,Y,re,te,he,Ae,Me,N)=>{d.eb("ConvTranspose",c,{format:Y?"NHWC":"NCHW",autoPad:h,dilations:Array.from(s().subarray(y>>>0,(y>>>0)+2>>>0)),group:T,kernelShape:Array.from(s().subarray(C>>>0,(C>>>0)+2>>>0)),pads:Array.from(s().subarray(D>>>0,(D>>>0)+4>>>0)),strides:Array.from(s().subarray(U>>>0,(U>>>0)+2>>>0)),wIsConst:()=>!!n()[re>>>0],outputPadding:te?Array.from(s().subarray(te>>>0,he>>>0)):[],outputShape:Ae?Array.from(s().subarray(Ae>>>0,Me>>>0)):[],activation:Ze(N)})},910802:(c,h)=>{d.eb("GlobalAveragePool",c,{format:h?"NHWC":"NCHW"})},910893:(c,h,y,T,C,D,U,Y,re,te,he,Ae,Me,N,we,We)=>{d.eb("AveragePool",c,{format:We?"NHWC":"NCHW",auto_pad:h,ceil_mode:y,count_include_pad:T,storage_order:C,dilations:[D,U],kernel_shape:[Y,re],pads:[te,he,Ae,Me],strides:[N,we]})},911177:(c,h)=>{d.eb("GlobalAveragePool",c,{format:h?"NHWC":"NCHW"})},911268:(c,h,y,T,C,D,U,Y,re,te,he,Ae,Me,N,we,We)=>{d.eb("AveragePool",c,{format:We?"NHWC":"NCHW",auto_pad:h,ceil_mode:y,count_include_pad:T,storage_order:C,dilations:[D,U],kernel_shape:[Y,re],pads:[te,he,Ae,Me],strides:[N,we]})},911552:(c,h)=>{d.eb("GlobalMaxPool",c,{format:h?"NHWC":"NCHW"})},911639:(c,h,y,T,C,D,U,Y,re,te,he,Ae,Me,N,we,We)=>{d.eb("MaxPool",c,{format:We?"NHWC":"NCHW",auto_pad:h,ceil_mode:y,count_include_pad:T,storage_order:C,dilations:[D,U],kernel_shape:[Y,re],pads:[te,he,Ae,Me],strides:[N,we]})},911919:(c,h)=>{d.eb("GlobalMaxPool",c,{format:h?"NHWC":"NCHW"})},912006:(c,h,y,T,C,D,U,Y,re,te,he,Ae,Me,N,we,We)=>{d.eb("MaxPool",c,{format:We?"NHWC":"NCHW",auto_pad:h,ceil_mode:y,count_include_pad:T,storage_order:C,dilations:[D,U],kernel_shape:[Y,re],pads:[te,he,Ae,Me],strides:[N,we]})},912286:(c,h,y,T,C)=>{d.eb("Gemm",c,{alpha:h,beta:y,transA:T,transB:C})},912390:c=>{d.eb("MatMul",c,void 0)},912444:(c,h,y,T)=>{d.eb("ArgMax",c,{keepDims:!!h,selectLastIndex:!!y,axis:T})},912552:(c,h,y,T)=>{d.eb("ArgMin",c,{keepDims:!!h,selectLastIndex:!!y,axis:T})},912660:(c,h)=>{d.eb("Softmax",c,{axis:h})},912723:(c,h)=>{d.eb("Concat",c,{axis:h})},912783:(c,h,y,T,C)=>{d.eb("Split",c,{axis:h,numOutputs:y,splitSizes:T?Array.from(s().subarray(T>>>0,C>>>0)):[]})},912923:c=>{d.eb("Expand",c,void 0)},912977:(c,h)=>{d.eb("Gather",c,{axis:Number(h)})},913048:(c,h)=>{d.eb("GatherElements",c,{axis:Number(h)})},913127:(c,h,y,T,C,D,U,Y,re,te,he)=>{d.eb("Resize",c,{antialias:h,axes:y?Array.from(s().subarray(y>>>0,T>>>0)):[],coordinateTransformMode:Ze(C),cubicCoeffA:D,excludeOutside:U,extrapolationValue:Y,keepAspectRatioPolicy:Ze(re),mode:Ze(te),nearestMode:Ze(he)})},913473:(c,h,y,T,C,D,U)=>{d.eb("Slice",c,{starts:h?Array.from(s().subarray(h>>>0,y>>>0)):[],ends:T?Array.from(s().subarray(T>>>0,C>>>0)):[],axes:D?Array.from(s().subarray(D>>>0,U>>>0)):[]})},913689:c=>{d.eb("Tile",c,void 0)},913741:(c,h,y)=>{d.eb("LayerNormalization",c,{axis:Number(h),epsilon:Number(y)})},913848:(c,h,y)=>{d.eb("InstanceNormalization",c,{epsilon:h,format:y?"NHWC":"NCHW"})},913962:(c,h,y)=>{d.eb("InstanceNormalization",c,{epsilon:h,format:y?"NHWC":"NCHW"})},914076:c=>{d.eb("Range",c,void 0)},914129:(c,h)=>{d.eb("Einsum",c,{equation:Ze(h)})},914210:(c,h,y,T,C)=>{d.eb("Pad",c,{mode:h,value:y,pads:T?Array.from(s().subarray(T>>>0,C>>>0)):[]})},914337:(c,h,y,T,C,D)=>{d.eb("BatchNormalization",c,{epsilon:h,momentum:y,spatial:!!C,trainingMode:!!T,format:D?"NHWC":"NCHW"})},914506:(c,h,y,T,C,D)=>{d.eb("BatchNormalization",c,{epsilon:h,momentum:y,spatial:!!C,trainingMode:!!T,format:D?"NHWC":"NCHW"})},914675:(c,h,y)=>{d.eb("CumSum",c,{exclusive:Number(h),reverse:Number(y)})},914772:(c,h,y,T,C,D,U,Y,re)=>{d.eb("Attention",c,{numHeads:h,isUnidirectional:y,maskFilterValue:T,scale:C,doRotary:D,qkvHiddenSizes:U?Array.from(s().subarray(Number(Y)>>>0,Number(Y)+U>>>0)):[],pastPresentShareBuffer:!!re})},915044:c=>{d.eb("Gelu",c,void 0)},915096:(c,h,y,T,C,D)=>{d.eb("MultiHeadAttention",c,{numHeads:h,isUnidirectional:y,maskFilterValue:T,scale:C,doRotary:D})},915255:c=>{d.eb("BiasAdd",c,void 0)},915310:c=>{d.eb("BiasSplitGelu",c,void 0)},915371:(c,h)=>{d.eb("SkipLayerNormalization",c,{epsilon:h})},915452:(c,h,y,T,C,D,U,Y,re,te,he,Ae,Me)=>{d.eb("Conv",c,{format:re?"NHWC":"NCHW",auto_pad:h,dilations:[y],group:T,kernel_shape:[C],pads:D?Array.from(s().subarray(D>>>0,U>>>0)):[],strides:[Y],w_is_const:()=>!!n()[te>>>0],activation:Ze(he),activation_params:Ae?Array.from(u().subarray(Ae>>>0,Me>>>0)):[]})},915822:(c,h,y,T,C,D,U,Y,re,te,he,Ae,Me,N,we,We)=>{d.eb("Conv",c,{format:Ae?"NHWC":"NCHW",auto_pad:h,dilations:[y,T],group:C,kernel_shape:[D,U],pads:Y?Array.from(s().subarray(Y>>>0,re>>>0)):[],strides:[te,he],w_is_const:()=>!!n()[Me>>>0],activation:Ze(N),activation_params:we?Array.from(u().subarray(we>>>0,We>>>0)):[]})},916213:c=>{d.cc(c)},916247:(c,h)=>d.dc(c,h,d.Eb.fc,d.Eb.errors)};function lo(c){this.name="ExitStatus",this.message=`Program terminated with exit(${c})`,this.status=c}var er=c=>{c.terminate(),c.onmessage=()=>{}},ri=c=>{$e.yb.length==0&&(mo(),$e.Pb($e.yb[0]));var h=$e.yb.pop();if(!h)return 6;$e.zb.push(h),$e.pb[c.xb]=h,h.xb=c.xb;var y={cmd:"run",start_routine:c.hc,arg:c.Vb,pthread_ptr:c.xb};return _&&h.unref(),h.postMessage(y,c.nc),0},St=0,co=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,fo=(c,h,y)=>{h>>>=0;var T=h+y;for(y=h;c[y]&&!(y>=T);)++y;if(16<y-h&&c.buffer&&co)return co.decode(c.buffer instanceof SharedArrayBuffer?c.slice(h,y):c.subarray(h,y));for(T="";h<y;){var C=c[h++];if(C&128){var D=c[h++]&63;if((C&224)==192)T+=String.fromCharCode((C&31)<<6|D);else{var U=c[h++]&63;C=(C&240)==224?(C&15)<<12|D<<6|U:(C&7)<<18|D<<12|U<<6|c[h++]&63,65536>C?T+=String.fromCharCode(C):(C-=65536,T+=String.fromCharCode(55296|C>>10,56320|C&1023))}}else T+=String.fromCharCode(C)}return T},Ze=(c,h)=>(c>>>=0)?fo(t(),c,h):"",po=c=>{var h=ds();return c=c(),$i(h),c};function De(c,h){var y=arguments.length-2,T=arguments;return po(()=>{for(var C=2*y,D=cs(8*C),U=D>>>3,Y=0;Y<y;Y++){var re=T[2+Y];typeof re=="bigint"?(Ie[U+2*Y]=1n,Ie[U+2*Y+1]=re):(Ie[U+2*Y]=0n,l()[U+2*Y+1>>>0]=re)}return Al(c,C,D,h)})}function Gt(c){if(O)return De(0,1,c);Oe=c,0<St||($e.ic(),d.onExit?.(c),Te=!0),w(c,new lo(c))}var Dn=c=>{if(Oe=c,O)throw ni(c),"unwind";Gt(c)},ho=c=>{c instanceof lo||c=="unwind"||w(1,c)};function es(){for(var c=d.numThreads;c--;)mo();zr.unshift(()=>{jr++,ts(()=>ao())})}function mo(){var c=L("ort-wasm-simd-threaded.worker.js");c=new Worker(c),$e.yb.push(c)}function ts(c){O?c():Promise.all($e.yb.map($e.Pb)).then(c)}var $e={yb:[],zb:[],Ub:[],pb:{},Ib(){O?($e.receiveObjectTransfer=$e.ec,$e.threadInitTLS=$e.Tb,$e.setExitStatus=$e.Sb):es()},Sb:c=>Oe=c,sc:["$terminateWorker"],ic:()=>{for(var c of $e.zb)er(c);for(c of $e.yb)er(c);$e.yb=[],$e.zb=[],$e.pb=[]},Rb:c=>{var h=c.xb;delete $e.pb[h],$e.yb.push(c),$e.zb.splice($e.zb.indexOf(c),1),c.xb=0,us(h)},ec(){},Tb(){$e.Ub.forEach(c=>c())},Pb:c=>new Promise(h=>{c.onmessage=D=>{D=D.data;var U=D.cmd;if(D.targetThread&&D.targetThread!=Ti()){var Y=$e.pb[D.targetThread];Y?Y.postMessage(D,D.transferList):se(`Internal error! Worker sent a message "${U}" to target pthread ${D.targetThread}, but that thread no longer exists!`)}else U==="checkMailbox"?pn():U==="spawnThread"?ri(D):U==="cleanupThread"?$e.Rb($e.pb[D.thread]):U==="killThread"?(D=D.thread,U=$e.pb[D],delete $e.pb[D],er(U),us(D),$e.zb.splice($e.zb.indexOf(U),1),U.xb=0):U==="cancelThread"?$e.pb[D.thread].postMessage({cmd:"cancel"}):U==="loaded"?(c.loaded=!0,_&&!c.xb&&c.unref(),h(c)):U==="alert"?alert(`Thread ${D.threadId}: ${D.text}`):D.target==="setimmediate"?c.postMessage(D):U==="callHandler"?d[D.handler](...D.args):U&&se(`worker sent an unknown command ${U}`)},c.onerror=D=>{throw se(`worker sent an error! ${D.filename}:${D.lineno}: ${D.message}`),D},_&&(c.on("message",D=>c.onmessage({data:D})),c.on("error",D=>c.onerror(D)));var y=[],T=["onExit"],C;for(C of T)d.hasOwnProperty(C)&&y.push(C);c.postMessage({cmd:"load",handlers:y,urlOrBlob:d.mainScriptUrlOrBlob||r,wasmMemory:Ee,wasmModule:ut})})};d.PThread=$e;var Bn=c=>{for(;0<c.length;)c.shift()(d)};d.establishStackSpace=()=>{var c=Ti(),h=a()[c+52>>>2>>>0];c=a()[c+56>>>2>>>0],Cl(h,h-c),$i(h)};function ni(c){if(O)return De(1,0,c);Dn(c)}d.invokeEntryPoint=(c,h)=>{c=El.apply(null,[c,h]),0<St?$e.Sb(c):ls(c)};function rs(c){this.Db=c-24,this.pc=function(h){a()[this.Db+4>>>2>>>0]=h},this.Mb=function(h){a()[this.Db+8>>>2>>>0]=h},this.Ib=function(h,y){this.Kb(),this.pc(h),this.Mb(y)},this.Kb=function(){a()[this.Db+16>>>2>>>0]=0}}var oi=0,go=0;function bo(c,h,y,T){return O?De(2,1,c,h,y,T):dn(c,h,y,T)}function dn(c,h,y,T){if(c>>>=0,h>>>=0,y>>>=0,T>>>=0,typeof SharedArrayBuffer>"u")return se("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var C=[];return O&&C.length===0?bo(c,h,y,T):(c={hc:y,xb:c,Vb:T,nc:C},O?(c.qc="spawnThread",postMessage(c,C),0):ri(c))}function ii(c,h,y){return O?De(3,1,c,h,y):0}function cr(c,h){if(O)return De(4,1,c,h)}var Dt=c=>{for(var h=0,y=0;y<c.length;++y){var T=c.charCodeAt(y);127>=T?h++:2047>=T?h+=2:55296<=T&&57343>=T?(h+=4,++y):h+=3}return h},yo=(c,h,y,T)=>{if(y>>>=0,!(0<T))return 0;var C=y;T=y+T-1;for(var D=0;D<c.length;++D){var U=c.charCodeAt(D);if(55296<=U&&57343>=U){var Y=c.charCodeAt(++D);U=65536+((U&1023)<<10)|Y&1023}if(127>=U){if(y>=T)break;h[y++>>>0]=U}else{if(2047>=U){if(y+1>=T)break;h[y++>>>0]=192|U>>6}else{if(65535>=U){if(y+2>=T)break;h[y++>>>0]=224|U>>12}else{if(y+3>=T)break;h[y++>>>0]=240|U>>18,h[y++>>>0]=128|U>>12&63}h[y++>>>0]=128|U>>6&63}h[y++>>>0]=128|U&63}}return h[y>>>0]=0,y-C},Yr=(c,h,y)=>yo(c,t(),h,y);function vo(c,h){if(O)return De(5,1,c,h)}function wo(c,h,y){if(O)return De(6,1,c,h,y)}function ai(c,h,y){return O?De(7,1,c,h,y):0}function Rn(c,h){if(O)return De(8,1,c,h)}function si(c,h,y){if(O)return De(9,1,c,h,y)}function ui(c,h,y,T){if(O)return De(10,1,c,h,y,T)}function li(c,h,y,T){if(O)return De(11,1,c,h,y,T)}function di(c,h,y,T){if(O)return De(12,1,c,h,y,T)}function xo(c){if(O)return De(13,1,c)}function cn(c,h){if(O)return De(14,1,c,h)}function ci(c,h,y){if(O)return De(15,1,c,h,y)}var zn=c=>{if(c===null)return"null";var h=typeof c;return h==="object"||h==="array"||h==="function"?c.toString():""+c},_o,Jt=c=>{for(var h="";t()[c>>>0];)h+=_o[t()[c++>>>0]];return h},To={},Mn={},ns={},Bt;function fi(c,h,y={}){var T=h.name;if(!c)throw new Bt(`type "${T}" must have a positive integer typeid pointer`);if(Mn.hasOwnProperty(c)){if(y.Yb)return;throw new Bt(`Cannot register type '${T}' twice`)}Mn[c]=h,delete ns[c],To.hasOwnProperty(c)&&(h=To[c],delete To[c],h.forEach(C=>C()))}function tr(c,h,y={}){if(!("argPackAdvance"in h))throw new TypeError("registerType registeredInstance requires argPackAdvance");fi(c,h,y)}var $o=(c,h,y)=>{switch(h){case 1:return y?T=>n()[T>>>0>>>0]:T=>t()[T>>>0>>>0];case 2:return y?T=>o()[T>>>1>>>0]:T=>i()[T>>>1>>>0];case 4:return y?T=>s()[T>>>2>>>0]:T=>a()[T>>>2>>>0];case 8:return y?T=>Ie[T>>>3]:T=>kt[T>>>3];default:throw new TypeError(`invalid integer width (${h}): ${c}`)}};function Ln(){this.wb=[void 0],this.Nb=[]}var Rt=new Ln;function fn(c){c>>>=0,c>=Rt.Db&&--Rt.get(c).Qb===0&&Rt.Mb(c)}var It=c=>{if(!c)throw new Bt("Cannot use deleted val. handle = "+c);return Rt.get(c).value},zt=c=>{switch(c){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return Rt.Kb({Qb:1,value:c})}};function pi(c){return this.fromWireType(s()[c>>>2>>>0])}var hi=(c,h)=>{switch(h){case 4:return function(y){return this.fromWireType(u()[y>>>2>>>0])};case 8:return function(y){return this.fromWireType(l()[y>>>3>>>0])};default:throw new TypeError(`invalid float width (${h}): ${c}`)}};function mi(c){return this.fromWireType(a()[c>>>2>>>0])}var gi=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,bi=(c,h)=>{for(var y=c>>1,T=y+h/2;!(y>=T)&&i()[y>>>0];)++y;if(y<<=1,32<y-c&&gi)return gi.decode(t().slice(c,y));for(y="",T=0;!(T>=h/2);++T){var C=o()[c+2*T>>>1>>>0];if(C==0)break;y+=String.fromCharCode(C)}return y},yi=(c,h,y)=>{if(y??=2147483647,2>y)return 0;y-=2;var T=h;y=y<2*c.length?y/2:c.length;for(var C=0;C<y;++C){var D=c.charCodeAt(C);o()[h>>>1>>>0]=D,h+=2}return o()[h>>>1>>>0]=0,h-T},Nn=c=>2*c.length,os=(c,h)=>{for(var y=0,T="";!(y>=h/4);){var C=s()[c+4*y>>>2>>>0];if(C==0)break;++y,65536<=C?(C-=65536,T+=String.fromCharCode(55296|C>>10,56320|C&1023)):T+=String.fromCharCode(C)}return T},ve=(c,h,y)=>{if(h>>>=0,y??=2147483647,4>y)return 0;var T=h;y=T+y-4;for(var C=0;C<c.length;++C){var D=c.charCodeAt(C);if(55296<=D&&57343>=D){var U=c.charCodeAt(++C);D=65536+((D&1023)<<10)|U&1023}if(s()[h>>>2>>>0]=D,h+=4,h+4>y)break}return s()[h>>>2>>>0]=0,h-T},vi=c=>{for(var h=0,y=0;y<c.length;++y){var T=c.charCodeAt(y);55296<=T&&57343>=T&&++y,h+=4}return h},Xr=()=>{if(!(0<St))try{O?ls(Oe):Dn(Oe)}catch(c){ho(c)}};function Wt(c){c>>>=0,typeof Atomics.oc=="function"&&(Atomics.oc(s(),c>>>2,c).value.then(pn),c+=128,Atomics.store(s(),c>>>2,1))}d.__emscripten_thread_mailbox_await=Wt;var pn=()=>{var c=Ti();if(c&&(Wt(c),!Te))try{Ol(),Xr()}catch(h){ho(h)}};d.checkMailbox=pn;var Fn=[],Vn=(c,h)=>{var y=Mn[c];if(y===void 0)throw c=Sl(c),y=Jt(c),_r(c),new Bt(h+" has unknown type "+y);return y},So=(c,h,y)=>{var T=[];return c=c.toWireType(T,y),T.length&&(a()[h>>>2>>>0]=zt(T)),c},hn=c=>{try{c()}catch(h){Kr(h)}};function wi(){var c=de,h={};for(let[y,T]of Object.entries(c))h[y]=typeof T=="function"?function(){Nr.push(y);try{return T.apply(null,arguments)}finally{Te||(Nr.pop(),Qt&&fr===1&&Nr.length===0&&(fr=0,St+=1,hn(kl),typeof Fibers<"u"&&Fibers.uc()))}}:T;return h}var fr=0,Qt=null,xi=0,Nr=[],Io={},f={},g=0,x=null,S=[];function k(){return new Promise((c,h)=>{x={resolve:c,reject:h}})}function V(){var c=Ao(65548),h=c+12;a()[c>>>2>>>0]=h,a()[c+4>>>2>>>0]=h+65536,h=Nr[0];var y=Io[h];return y===void 0&&(y=g++,Io[h]=y,f[y]=h),h=y,s()[c+8>>>2>>>0]=h,c}function j(){var c=s()[Qt+8>>>2>>>0];return c=de[f[c]],--St,c()}function ne(c){if(!Te){if(fr===0){var h=!1,y=!1;c((T=0)=>{if(!Te&&(xi=T,h=!0,y)){fr=2,hn(()=>Dl(Qt)),typeof Browser<"u"&&Browser.Jb.Xb&&Browser.Jb.resume(),T=!1;try{var C=j()}catch(Y){C=Y,T=!0}var D=!1;if(!Qt){var U=x;U&&(x=null,(T?U.reject:U.resolve)(C),D=!0)}if(T&&!D)throw C}}),y=!0,h||(fr=1,Qt=V(),typeof Browser<"u"&&Browser.Jb.Xb&&Browser.Jb.pause(),hn(()=>Pl(Qt)))}else fr===2?(fr=0,hn(Bl),_r(Qt),Qt=null,S.forEach(T=>{if(!Te)try{T(),Xr()}catch(C){ho(C)}})):Kr(`invalid state: ${fr}`);return xi}}function ee(c){return ne(h=>{c().then(h)})}var Q=[],fe={},Se=c=>{var h=fe[c];return h===void 0?Jt(c):h},Be=()=>typeof globalThis=="object"?globalThis:Function("return this")(),M=c=>{var h=Q.length;return Q.push(c),h},be=(c,h)=>{for(var y=Array(c),T=0;T<c;++T)y[T]=Vn(a()[h+4*T>>>2>>>0],"parameter "+T);return y},Fe=(c,h)=>Object.defineProperty(h,"name",{value:c});function Fr(c){var h=Function;if(!(h instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof h} which is not a function`);var y=Fe(h.name||"unknownFunctionName",function(){});return y.prototype=h.prototype,y=new y,c=h.apply(y,c),c instanceof Object?c:y}var Vr=c=>c%4===0&&(c%100!==0||c%400===0),sl=[0,31,60,91,121,152,182,213,244,274,305,335],ul=[0,31,59,90,120,151,181,212,243,273,304,334];function ll(c,h,y,T,C,D,U){return O?De(16,1,c,h,y,T,C,D,U):-52}function dl(c,h,y,T,C,D){if(O)return De(17,1,c,h,y,T,C,D)}var cl=c=>{var h=Dt(c)+1,y=Ao(h);return y&&Yr(c,y,h),y},is=[],fl=(c,h)=>{is.length=0;for(var y;y=t()[c++>>>0];){var T=y!=105;T&=y!=112,h+=T&&h%8?4:0,is.push(y==112?a()[h>>>2>>>0]:y==106?Ie[h>>>3]:y==105?s()[h>>>2>>>0]:l()[h>>>3>>>0]),h+=T?8:4}return is},as={},pl=()=>{if(!ss){var c={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:v||"./this.program"},h;for(h in as)as[h]===void 0?delete c[h]:c[h]=as[h];var y=[];for(h in c)y.push(`${h}=${c[h]}`);ss=y}return ss},ss;function hl(c,h){if(O)return De(18,1,c,h);c>>>=0,h>>>=0;var y=0;return pl().forEach((T,C)=>{var D=h+y;for(C=a()[c+4*C>>>2>>>0]=D,D=0;D<T.length;++D)n()[C++>>>0>>>0]=T.charCodeAt(D);n()[C>>>0>>>0]=0,y+=T.length+1}),0}function ml(c,h){if(O)return De(19,1,c,h);c>>>=0,h>>>=0;var y=pl();a()[c>>>2>>>0]=y.length;var T=0;return y.forEach(C=>T+=C.length+1),a()[h>>>2>>>0]=T,0}function gl(c){return O?De(20,1,c):52}function bl(c,h,y,T){return O?De(21,1,c,h,y,T):52}function yl(c,h,y,T){return O?De(22,1,c,h,y,T):70}var $0=[null,[],[]];function vl(c,h,y,T){if(O)return De(23,1,c,h,y,T);h>>>=0,y>>>=0,T>>>=0;for(var C=0,D=0;D<y;D++){var U=a()[h>>>2>>>0],Y=a()[h+4>>>2>>>0];h+=8;for(var re=0;re<Y;re++){var te=t()[U+re>>>0],he=$0[c];te===0||te===10?((c===1?Ye:se)(fo(he,0)),he.length=0):he.push(te)}C+=Y}return a()[T>>>2>>>0]=C,0}var wl=[31,29,31,30,31,30,31,31,30,31,30,31],xl=[31,28,31,30,31,30,31,31,30,31,30,31];function S0(c){var h=Array(Dt(c)+1);return yo(c,h,0,h.length),h}var I0=(c,h)=>{n().set(c,h>>>0)};function _l(c,h,y,T){function C(N,we,We){for(N=typeof N=="number"?N.toString():N||"";N.length<we;)N=We[0]+N;return N}function D(N,we){return C(N,we,"0")}function U(N,we){function We(zl){return 0>zl?-1:0<zl?1:0}var mn;return(mn=We(N.getFullYear()-we.getFullYear()))===0&&(mn=We(N.getMonth()-we.getMonth()))===0&&(mn=We(N.getDate()-we.getDate())),mn}function Y(N){switch(N.getDay()){case 0:return new Date(N.getFullYear()-1,11,29);case 1:return N;case 2:return new Date(N.getFullYear(),0,3);case 3:return new Date(N.getFullYear(),0,2);case 4:return new Date(N.getFullYear(),0,1);case 5:return new Date(N.getFullYear()-1,11,31);case 6:return new Date(N.getFullYear()-1,11,30)}}function re(N){var we=N.Ab;for(N=new Date(new Date(N.Bb+1900,0,1).getTime());0<we;){var We=N.getMonth(),mn=(Vr(N.getFullYear())?wl:xl)[We];if(we>mn-N.getDate())we-=mn-N.getDate()+1,N.setDate(1),11>We?N.setMonth(We+1):(N.setMonth(0),N.setFullYear(N.getFullYear()+1));else{N.setDate(N.getDate()+we);break}}return We=new Date(N.getFullYear()+1,0,4),we=Y(new Date(N.getFullYear(),0,4)),We=Y(We),0>=U(we,N)?0>=U(We,N)?N.getFullYear()+1:N.getFullYear():N.getFullYear()-1}c>>>=0,h>>>=0,y>>>=0,T>>>=0;var te=a()[T+40>>>2>>>0];T={lc:s()[T>>>2>>>0],kc:s()[T+4>>>2>>>0],Gb:s()[T+8>>>2>>>0],Lb:s()[T+12>>>2>>>0],Hb:s()[T+16>>>2>>>0],Bb:s()[T+20>>>2>>>0],vb:s()[T+24>>>2>>>0],Ab:s()[T+28>>>2>>>0],tc:s()[T+32>>>2>>>0],jc:s()[T+36>>>2>>>0],mc:te?Ze(te):""},y=Ze(y),te={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var he in te)y=y.replace(new RegExp(he,"g"),te[he]);var Ae="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Me="January February March April May June July August September October November December".split(" ");te={"%a":N=>Ae[N.vb].substring(0,3),"%A":N=>Ae[N.vb],"%b":N=>Me[N.Hb].substring(0,3),"%B":N=>Me[N.Hb],"%C":N=>D((N.Bb+1900)/100|0,2),"%d":N=>D(N.Lb,2),"%e":N=>C(N.Lb,2," "),"%g":N=>re(N).toString().substring(2),"%G":N=>re(N),"%H":N=>D(N.Gb,2),"%I":N=>(N=N.Gb,N==0?N=12:12<N&&(N-=12),D(N,2)),"%j":N=>{for(var we=0,We=0;We<=N.Hb-1;we+=(Vr(N.Bb+1900)?wl:xl)[We++]);return D(N.Lb+we,3)},"%m":N=>D(N.Hb+1,2),"%M":N=>D(N.kc,2),"%n":()=>`
`,"%p":N=>0<=N.Gb&&12>N.Gb?"AM":"PM","%S":N=>D(N.lc,2),"%t":()=>"	","%u":N=>N.vb||7,"%U":N=>D(Math.floor((N.Ab+7-N.vb)/7),2),"%V":N=>{var we=Math.floor((N.Ab+7-(N.vb+6)%7)/7);if(2>=(N.vb+371-N.Ab-2)%7&&we++,we)we==53&&(We=(N.vb+371-N.Ab)%7,We==4||We==3&&Vr(N.Bb)||(we=1));else{we=52;var We=(N.vb+7-N.Ab-1)%7;(We==4||We==5&&Vr(N.Bb%400-1))&&we++}return D(we,2)},"%w":N=>N.vb,"%W":N=>D(Math.floor((N.Ab+7-(N.vb+6)%7)/7),2),"%y":N=>(N.Bb+1900).toString().substring(2),"%Y":N=>N.Bb+1900,"%z":N=>{N=N.jc;var we=0<=N;return N=Math.abs(N)/60,(we?"+":"-")+("0000"+(N/60*100+N%60)).slice(-4)},"%Z":N=>N.mc,"%%":()=>"%"},y=y.replace(/%%/g,"\0\0");for(he in te)y.includes(he)&&(y=y.replace(new RegExp(he,"g"),te[he](T)));return y=y.replace(/\0\0/g,"%"),he=S0(y),he.length>h?0:(I0(he,c),he.length-1)}$e.Ib();for(var Tl=Array(256),_i=0;256>_i;++_i)Tl[_i]=String.fromCharCode(_i);_o=Tl,Bt=d.BindingError=class extends Error{constructor(c){super(c),this.name="BindingError"}},d.InternalError=class extends Error{constructor(c){super(c),this.name="InternalError"}},Object.assign(Ln.prototype,{get(c){return this.wb[c]},has(c){return this.wb[c]!==void 0},Kb(c){var h=this.Nb.pop()||this.wb.length;return this.wb[h]=c,h},Mb(c){this.wb[c]=void 0,this.Nb.push(c)}}),Rt.wb.push({value:void 0},{value:null},{value:!0},{value:!1}),Rt.Db=Rt.wb.length,d.count_emval_handles=()=>{for(var c=0,h=Rt.Db;h<Rt.wb.length;++h)Rt.wb[h]!==void 0&&++c;return c};var A0=[Gt,ni,bo,ii,cr,vo,wo,ai,Rn,si,ui,li,di,xo,cn,ci,ll,dl,hl,ml,gl,bl,yl,vl],O0={ua:function(c,h,y){return ee(async()=>{await d.ac(c,h,y)})},b:function(c,h,y){throw c>>>=0,new rs(c).Ib(h>>>0,y>>>0),oi=c,go++,oi},ga:function(c){Il(c>>>0,!$,1,!A,131072,!1),$e.Tb()},F:function(c){c>>>=0,O?postMessage({cmd:"cleanupThread",thread:c}):$e.Rb($e.pb[c])},Y:dn,z:ii,ma:cr,U:vo,W:wo,N:ai,ka:Rn,da:si,ja:ui,H:li,V:di,S:xo,la:cn,T:ci,K:function(c,h,y,T,C){c>>>=0,h>>>=0,y>>>=0,h=Jt(h);var D=h.indexOf("u")!=-1;D&&(C=(1n<<64n)-1n),tr(c,{name:h,fromWireType:U=>U,toWireType:function(U,Y){if(typeof Y!="bigint"&&typeof Y!="number")throw new TypeError(`Cannot convert "${zn(Y)}" to ${this.name}`);if(Y<T||Y>C)throw new TypeError(`Passing a number "${zn(Y)}" from JS side to C/C++ side to an argument of type "${h}", which is outside the valid range [${T}, ${C}]!`);return Y},argPackAdvance:8,readValueFromPointer:$o(h,y,!D),Cb:null})},sa:function(c,h,y,T){c>>>=0,h=Jt(h>>>0),tr(c,{name:h,fromWireType:function(C){return!!C},toWireType:function(C,D){return D?y:T},argPackAdvance:8,readValueFromPointer:function(C){return this.fromWireType(t()[C>>>0])},Cb:null})},ra:function(c,h){c>>>=0,h=Jt(h>>>0),tr(c,{name:h,fromWireType:y=>{var T=It(y);return fn(y),T},toWireType:(y,T)=>zt(T),argPackAdvance:8,readValueFromPointer:pi,Cb:null})},J:function(c,h,y){c>>>=0,y>>>=0,h=Jt(h>>>0),tr(c,{name:h,fromWireType:T=>T,toWireType:(T,C)=>C,argPackAdvance:8,readValueFromPointer:hi(h,y),Cb:null})},v:function(c,h,y,T,C){if(c>>>=0,y>>>=0,h=Jt(h>>>0),C===-1&&(C=4294967295),C=Y=>Y,T===0){var D=32-8*y;C=Y=>Y<<D>>>D}var U=h.includes("unsigned")?function(Y,re){return re>>>0}:function(Y,re){return re};tr(c,{name:h,fromWireType:C,toWireType:U,argPackAdvance:8,readValueFromPointer:$o(h,y,T!==0),Cb:null})},o:function(c,h,y){function T(D){var U=a()[D>>>2>>>0];return D=a()[D+4>>>2>>>0],new C(n().buffer,D,U)}c>>>=0;var C=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][h];y=Jt(y>>>0),tr(c,{name:y,fromWireType:T,argPackAdvance:8,readValueFromPointer:T},{Yb:!0})},L:function(c,h){c>>>=0,h=Jt(h>>>0);var y=h==="std::string";tr(c,{name:h,fromWireType:function(T){var C=a()[T>>>2>>>0],D=T+4;if(y)for(var U=D,Y=0;Y<=C;++Y){var re=D+Y;if(Y==C||t()[re>>>0]==0){if(U=Ze(U,re-U),te===void 0)var te=U;else te+=String.fromCharCode(0),te+=U;U=re+1}}else{for(te=Array(C),Y=0;Y<C;++Y)te[Y]=String.fromCharCode(t()[D+Y>>>0]);te=te.join("")}return _r(T),te},toWireType:function(T,C){C instanceof ArrayBuffer&&(C=new Uint8Array(C));var D=typeof C=="string";if(!(D||C instanceof Uint8Array||C instanceof Uint8ClampedArray||C instanceof Int8Array))throw new Bt("Cannot pass non-string to std::string");var U=y&&D?Dt(C):C.length,Y=Ao(4+U+1),re=Y+4;if(a()[Y>>>2>>>0]=U,y&&D)Yr(C,re,U+1);else if(D)for(D=0;D<U;++D){var te=C.charCodeAt(D);if(255<te)throw _r(re),new Bt("String has UTF-16 code units that do not fit in 8 bits");t()[re+D>>>0]=te}else for(D=0;D<U;++D)t()[re+D>>>0]=C[D];return T!==null&&T.push(_r,Y),Y},argPackAdvance:8,readValueFromPointer:mi,Cb(T){_r(T)}})},B:function(c,h,y){if(c>>>=0,h>>>=0,y>>>=0,y=Jt(y),h===2)var T=bi,C=yi,D=Nn,U=()=>i(),Y=1;else h===4&&(T=os,C=ve,D=vi,U=()=>a(),Y=2);tr(c,{name:y,fromWireType:re=>{for(var te=a()[re>>>2>>>0],he=U(),Ae,Me=re+4,N=0;N<=te;++N){var we=re+4+N*h;(N==te||he[we>>>Y]==0)&&(Me=T(Me,we-Me),Ae===void 0?Ae=Me:(Ae+=String.fromCharCode(0),Ae+=Me),Me=we+h)}return _r(re),Ae},toWireType:(re,te)=>{if(typeof te!="string")throw new Bt(`Cannot pass non-string to C++ string type ${y}`);var he=D(te),Ae=Ao(4+he+h);return a()[Ae>>>2]=he>>Y,C(te,Ae+4,he+h),re!==null&&re.push(_r,Ae),Ae},argPackAdvance:8,readValueFromPointer:pi,Cb(re){_r(re)}})},ta:function(c,h){c>>>=0,h=Jt(h>>>0),tr(c,{Zb:!0,name:h,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},qa:()=>1,Q:function(c,h){c>>>=0,c==h>>>0?setTimeout(()=>pn()):O?postMessage({targetThread:c,cmd:"checkMailbox"}):(c=$e.pb[c])&&c.postMessage({cmd:"checkMailbox"})},Z:function(c,h,y,T){h>>>=0,y/=2,Fn.length=y,T=T>>>0>>>3;for(var C=0;C<y;C++)Fn[C]=Ie[T+2*C]?Ie[T+2*C+1]:l()[T+2*C+1>>>0];return c=0>c?ln[-c-1]:A0[c],$e.Wb=h,h=c.apply(null,Fn),$e.Wb=0,h},fa:Wt,pa:function(c){_&&$e.pb[c>>>0].ref()},t:function(c,h,y){return h>>>=0,y>>>=0,c=It(c>>>0),h=Vn(h,"emval::as"),So(h,y,c)},y:function(c){return c>>>=0,ee(()=>(c=It(c),c.then(zt)))},p:function(c,h,y,T){return y>>>=0,T>>>=0,c=Q[c>>>0],h=It(h>>>0),c(null,h,y,T)},k:function(c,h,y,T,C){return y>>>=0,T>>>=0,C>>>=0,c=Q[c>>>0],h=It(h>>>0),y=Se(y),c(h,h[y],T,C)},c:fn,C:function(c,h){return h>>>=0,c=It(c>>>0),h=It(h),c==h},n:function(c){return c>>>=0,c===0?zt(Be()):(c=Se(c),zt(Be()[c]))},j:function(c,h,y){h=be(c,h>>>0);var T=h.shift();c--;var C=`return function (obj, func, destructorsRef, args) {
`,D=0,U=[];y===0&&U.push("obj");for(var Y=["retType"],re=[T],te=0;te<c;++te)U.push("arg"+te),Y.push("argType"+te),re.push(h[te]),C+=`  var arg${te} = argType${te}.readValueFromPointer(args${D?"+"+D:""});
`,D+=h[te].argPackAdvance;for(C+=`  var rv = ${y===1?"new func":"func.call"}(${U.join(", ")});
`,te=0;te<c;++te)h[te].deleteObject&&(C+=`  argType${te}.deleteObject(arg${te});
`);return T.Zb||(Y.push("emval_returnValue"),re.push(So),C+=`  return emval_returnValue(retType, destructorsRef, rv);
`),Y.push(C+`};
`),c=Fr(Y).apply(null,re),y=`methodCaller<(${h.map(he=>he.name).join(", ")}) => ${T.name}>`,M(Fe(y,c))},s:function(c,h){return h>>>=0,c=It(c>>>0),h=It(h),zt(c[h])},e:function(c){c>>>=0,4<c&&(Rt.get(c).Qb+=1)},w:function(){return zt([])},m:function(c){c=It(c>>>0);for(var h=Array(c.length),y=0;y<c.length;y++)h[y]=c[y];return zt(h)},f:function(c){return zt(Se(c>>>0))},l:function(){return zt({})},i:function(c){c>>>=0;for(var h=It(c);h.length;){var y=h.pop();h.pop()(y)}fn(c)},h:function(c,h,y){h>>>=0,y>>>=0,c=It(c>>>0),h=It(h),y=It(y),c[h]=y},d:function(c,h){return h>>>=0,c=Vn(c>>>0,"_emval_take_value"),c=c.readValueFromPointer(h),zt(c)},aa:function(c,h){c=-9007199254740992>c||9007199254740992<c?NaN:Number(c),h>>>=0,c=new Date(1e3*c),s()[h>>>2>>>0]=c.getUTCSeconds(),s()[h+4>>>2>>>0]=c.getUTCMinutes(),s()[h+8>>>2>>>0]=c.getUTCHours(),s()[h+12>>>2>>>0]=c.getUTCDate(),s()[h+16>>>2>>>0]=c.getUTCMonth(),s()[h+20>>>2>>>0]=c.getUTCFullYear()-1900,s()[h+24>>>2>>>0]=c.getUTCDay(),c=(c.getTime()-Date.UTC(c.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,s()[h+28>>>2>>>0]=c},ba:function(c,h){c=-9007199254740992>c||9007199254740992<c?NaN:Number(c),h>>>=0,c=new Date(1e3*c),s()[h>>>2>>>0]=c.getSeconds(),s()[h+4>>>2>>>0]=c.getMinutes(),s()[h+8>>>2>>>0]=c.getHours(),s()[h+12>>>2>>>0]=c.getDate(),s()[h+16>>>2>>>0]=c.getMonth(),s()[h+20>>>2>>>0]=c.getFullYear()-1900,s()[h+24>>>2>>>0]=c.getDay();var y=(Vr(c.getFullYear())?sl:ul)[c.getMonth()]+c.getDate()-1|0;s()[h+28>>>2>>>0]=y,s()[h+36>>>2>>>0]=-(60*c.getTimezoneOffset()),y=new Date(c.getFullYear(),6,1).getTimezoneOffset();var T=new Date(c.getFullYear(),0,1).getTimezoneOffset();c=(y!=T&&c.getTimezoneOffset()==Math.min(T,y))|0,s()[h+32>>>2>>>0]=c},ca:function(c){c>>>=0;var h=new Date(s()[c+20>>>2>>>0]+1900,s()[c+16>>>2>>>0],s()[c+12>>>2>>>0],s()[c+8>>>2>>>0],s()[c+4>>>2>>>0],s()[c>>>2>>>0],0),y=s()[c+32>>>2>>>0],T=h.getTimezoneOffset(),C=new Date(h.getFullYear(),6,1).getTimezoneOffset(),D=new Date(h.getFullYear(),0,1).getTimezoneOffset(),U=Math.min(D,C);return 0>y?s()[c+32>>>2>>>0]=+(C!=D&&U==T):0<y!=(U==T)&&(C=Math.max(D,C),h.setTime(h.getTime()+6e4*((0<y?U:C)-T))),s()[c+24>>>2>>>0]=h.getDay(),y=(Vr(h.getFullYear())?sl:ul)[h.getMonth()]+h.getDate()-1|0,s()[c+28>>>2>>>0]=y,s()[c>>>2>>>0]=h.getSeconds(),s()[c+4>>>2>>>0]=h.getMinutes(),s()[c+8>>>2>>>0]=h.getHours(),s()[c+12>>>2>>>0]=h.getDate(),s()[c+16>>>2>>>0]=h.getMonth(),s()[c+20>>>2>>>0]=h.getYear(),c=h.getTime(),isNaN(c)?(s()[$l()>>>2>>>0]=61,c=-1):c/=1e3,BigInt(c)},_:ll,$:dl,P:function(c,h,y){function T(te){return(te=te.toTimeString().match(/\(([A-Za-z ]+)\)$/))?te[1]:"GMT"}c>>>=0,h>>>=0,y>>>=0;var C=new Date().getFullYear(),D=new Date(C,0,1),U=new Date(C,6,1);C=D.getTimezoneOffset();var Y=U.getTimezoneOffset(),re=Math.max(C,Y);a()[c>>>2>>>0]=60*re,s()[h>>>2>>>0]=+(C!=Y),c=T(D),h=T(U),c=cl(c),h=cl(h),Y<C?(a()[y>>>2>>>0]=c,a()[y+4>>>2>>>0]=h):(a()[y>>>2>>>0]=h,a()[y+4>>>2>>>0]=c)},q:()=>{Kr("")},g:function(c,h,y){return c>>>=0,h=fl(h>>>0,y>>>0),ln[c].apply(null,h)},M:function(c,h,y){return c>>>=0,h=fl(h>>>0,y>>>0),ln[c].apply(null,h)},G:()=>{},I:()=>Date.now(),oa:()=>{throw St+=1,"unwind"},R:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>_?($m(),Ur(Tm)).cpus().length:navigator.hardwareConcurrency,O:function(c){c>>>=0;var h=t().length;if(c<=h||4294901760<c)return!1;for(var y=1;4>=y;y*=2){var T=h*(1+.2/y);T=Math.min(T,c+100663296);var C=Math;T=Math.max(c,T);e:{C=(C.min.call(C,4294901760,T+(65536-T%65536)%65536)-Ee.buffer.byteLength+65535)/65536;try{Ee.grow(C),Je();var D=1;break e}catch{}D=void 0}if(D)return!0}return!1},ha:hl,ia:ml,X:Dn,A:gl,E:bl,ea:yl,D:vl,a:Ee||d.wasmMemory,na:_l,r:function(c,h,y,T){return _l(c>>>0,h>>>0,y>>>0,T>>>0)}},de=function(){function c(y,T){return de=y.exports,de=wi(),de=C0(),$e.Ub.push(de.bb),Mr.unshift(de.va),ut=T,ao(),de}var h={a:O0};if(jr++,d.instantiateWasm)try{return d.instantiateWasm(h,c)}catch(y){se(`Module.instantiateWasm callback failed with error: ${y}`),m(y)}return uo(h,function(y){c(y.instance,y.module)}).catch(m),{}}();d._OrtInit=(c,h)=>(d._OrtInit=de.wa)(c,h),d._OrtGetLastError=(c,h)=>(d._OrtGetLastError=de.xa)(c,h),d._OrtCreateSessionOptions=(c,h,y,T,C,D,U,Y,re,te)=>(d._OrtCreateSessionOptions=de.ya)(c,h,y,T,C,D,U,Y,re,te),d._OrtAppendExecutionProvider=(c,h)=>(d._OrtAppendExecutionProvider=de.za)(c,h),d._OrtAddFreeDimensionOverride=(c,h,y)=>(d._OrtAddFreeDimensionOverride=de.Aa)(c,h,y),d._OrtAddSessionConfigEntry=(c,h,y)=>(d._OrtAddSessionConfigEntry=de.Ba)(c,h,y),d._OrtReleaseSessionOptions=c=>(d._OrtReleaseSessionOptions=de.Ca)(c),d._OrtCreateSession=(c,h,y)=>(d._OrtCreateSession=de.Da)(c,h,y),d._OrtReleaseSession=c=>(d._OrtReleaseSession=de.Ea)(c),d._OrtGetInputOutputCount=(c,h,y)=>(d._OrtGetInputOutputCount=de.Fa)(c,h,y),d._OrtGetInputName=(c,h)=>(d._OrtGetInputName=de.Ga)(c,h),d._OrtGetOutputName=(c,h)=>(d._OrtGetOutputName=de.Ha)(c,h),d._OrtFree=c=>(d._OrtFree=de.Ia)(c),d._OrtCreateTensor=(c,h,y,T,C,D)=>(d._OrtCreateTensor=de.Ja)(c,h,y,T,C,D),d._OrtGetTensorData=(c,h,y,T,C)=>(d._OrtGetTensorData=de.Ka)(c,h,y,T,C),d._OrtReleaseTensor=c=>(d._OrtReleaseTensor=de.La)(c),d._OrtCreateRunOptions=(c,h,y,T)=>(d._OrtCreateRunOptions=de.Ma)(c,h,y,T),d._OrtAddRunConfigEntry=(c,h,y)=>(d._OrtAddRunConfigEntry=de.Na)(c,h,y),d._OrtReleaseRunOptions=c=>(d._OrtReleaseRunOptions=de.Oa)(c),d._OrtCreateBinding=c=>(d._OrtCreateBinding=de.Pa)(c),d._OrtBindInput=(c,h,y)=>(d._OrtBindInput=de.Qa)(c,h,y),d._OrtBindOutput=(c,h,y,T)=>(d._OrtBindOutput=de.Ra)(c,h,y,T),d._OrtClearBoundOutputs=c=>(d._OrtClearBoundOutputs=de.Sa)(c),d._OrtReleaseBinding=c=>(d._OrtReleaseBinding=de.Ta)(c),d._OrtRunWithBinding=(c,h,y,T,C)=>(d._OrtRunWithBinding=de.Ua)(c,h,y,T,C),d._OrtRun=(c,h,y,T,C,D,U,Y)=>(d._OrtRun=de.Va)(c,h,y,T,C,D,U,Y),d._OrtEndProfiling=c=>(d._OrtEndProfiling=de.Wa)(c),d._JsepOutput=(c,h,y)=>(d._JsepOutput=de.Xa)(c,h,y),d._JsepGetNodeName=c=>(d._JsepGetNodeName=de.Ya)(c);var $l=()=>($l=de.Za)(),Ti=d._pthread_self=()=>(Ti=d._pthread_self=de._a)(),Ao=d._malloc=c=>(Ao=d._malloc=de.$a)(c),_r=d._free=c=>(_r=d._free=de.ab)(c);d.__emscripten_tls_init=()=>(d.__emscripten_tls_init=de.bb)();var Sl=c=>(Sl=de.cb)(c);d.__embind_initialize_bindings=()=>(d.__embind_initialize_bindings=de.db)();var Il=d.__emscripten_thread_init=(c,h,y,T,C,D)=>(Il=d.__emscripten_thread_init=de.fb)(c,h,y,T,C,D);d.__emscripten_thread_crashed=()=>(d.__emscripten_thread_crashed=de.gb)();var Al=(c,h,y,T)=>(Al=de.hb)(c,h,y,T),us=c=>(us=de.ib)(c),ls=d.__emscripten_thread_exit=c=>(ls=d.__emscripten_thread_exit=de.jb)(c),Ol=()=>(Ol=de.kb)(),Cl=(c,h)=>(Cl=de.lb)(c,h),ds=()=>(ds=de.mb)(),$i=c=>($i=de.nb)(c),cs=c=>(cs=de.ob)(c),El=d.dynCall_ii=(c,h)=>(El=d.dynCall_ii=de.qb)(c,h),Pl=c=>(Pl=de.rb)(c),kl=()=>(kl=de.sb)(),Dl=c=>(Dl=de.tb)(c),Bl=()=>(Bl=de.ub)();d.___start_em_js=916359,d.___stop_em_js=916520;function C0(){var c=de;c=Object.assign({},c);var h=T=>()=>T()>>>0,y=T=>C=>T(C)>>>0;return c.Za=h(c.Za),c._a=h(c._a),c.$a=y(c.$a),c.cb=y(c.cb),c.emscripten_main_runtime_thread_id=h(c.emscripten_main_runtime_thread_id),c.mb=h(c.mb),c.ob=y(c.ob),c}d.wasmMemory=Ee,d.stackAlloc=cs,d.stackSave=ds,d.stackRestore=$i,d.keepRuntimeAlive=()=>0<St,d.UTF8ToString=Ze,d.stringToUTF8=Yr,d.lengthBytesUTF8=Dt,d.ExitStatus=lo,d.PThread=$e;var Si;un=function c(){Si||Rl(),Si||(un=c)};function Rl(){if(!(0<jr))if(O)p(d),O||Bn(Mr),startWorker(d);else{if(d.preRun)for(typeof d.preRun=="function"&&(d.preRun=[d.preRun]);d.preRun.length;)zr.unshift(d.preRun.shift());Bn(zr),0<jr||Si||(Si=!0,d.calledRun=!0,Te||(O||Bn(Mr),p(d),O||Bn(sn)))}}return Rl(),e.ready}})();typeof Im=="object"&&typeof Iu=="object"?Iu.exports=Sm:typeof define=="function"&&define.amd&&define([],()=>Sm)});var Om=et((HP,c2)=>{c2.exports='"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed?.(),a}}self.onmessage=handleMessage;\n'});var Em,f2,Au,Ou,$a,Cm,p2,h2,m2,Pm,dt,to=R(()=>{"use strict";Em=wm();f2=Am(),Ou=!1,$a=!1,Cm=!1,p2=r=>{if(r===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+r+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+r+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},h2=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},m2=(r,e)=>r?e?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":e?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Pm=async r=>{if(Ou)return Promise.resolve();if($a)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Cm)throw new Error("previous call to 'initializeWebAssembly()' failed.");$a=!0;let e=r.initTimeout,n=r.numThreads,t=r.simd,o=p2(n),i=t&&h2(),s=r.wasmPaths,a=typeof s=="string"?s:void 0,u=m2(i,o),l=typeof s=="object"?s[u]:void 0,d=!1,p=[];if(e>0&&p.push(new Promise(m=>{setTimeout(()=>{d=!0,m()},e)})),p.push(new Promise((m,b)=>{let v=o?f2:Em,w={locateFile:(A,$)=>{if(o&&A.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Om()],{type:"text/javascript"}));if(A.endsWith(".wasm")){if(l)return l;let _=a??$;return u==="ort-wasm-simd.wasm"?_+"ort-wasm-simd.jsep.wasm":u==="ort-wasm-simd-threaded.wasm"?_+"ort-wasm-simd-threaded.jsep.wasm":_+u}return $+A}};if(o)if(w.numThreads=n,typeof Blob>"u")w.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let A=`var ortWasmThreaded=${v.toString()};`;w.mainScriptUrlOrBlob=new Blob([A],{type:"text/javascript"})}v(w).then(A=>{$a=!1,Ou=!0,Au=A,m()},A=>{$a=!1,Cm=!0,b(A)})})),await Promise.race(p),d)throw new Error(`WebAssembly backend initializing failed due to timeout: ${e}ms`)},dt=()=>{if(Ou&&Au)return Au;throw new Error("WebAssembly is not initialized yet.")}});var ht,Ho,ot,Sa=R(()=>{"use strict";to();ht=(r,e)=>{let n=dt(),t=n.lengthBytesUTF8(r)+1,o=n._malloc(t);return n.stringToUTF8(r,o,t),e.push(o),o},Ho=(r,e,n,t)=>{if(typeof r=="object"&&r!==null){if(n.has(r))throw new Error("Circular reference in options");n.add(r)}Object.entries(r).forEach(([o,i])=>{let s=e?e+o:o;if(typeof i=="object")Ho(i,s+".",n,t);else if(typeof i=="string"||typeof i=="number")t(s,i.toString());else if(typeof i=="boolean")t(s,i?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof i}`)})},ot=r=>{let e=dt(),n=e.stackSave();try{let t=e.stackAlloc(8);e._OrtGetLastError(t,t+4);let o=e.HEAP32[t/4],i=e.HEAPU32[t/4+1],s=i?e.UTF8ToString(i):"";throw new Error(`${r} ERROR_CODE: ${o}, ERROR_MESSAGE: ${s}`)}finally{e.stackRestore(n)}}});var km,Dm=R(()=>{"use strict";to();Sa();km=r=>{let e=dt(),n=0,t=[],o=r||{};try{if(r?.logSeverityLevel===void 0)o.logSeverityLevel=2;else if(typeof r.logSeverityLevel!="number"||!Number.isInteger(r.logSeverityLevel)||r.logSeverityLevel<0||r.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${r.logSeverityLevel}`);if(r?.logVerbosityLevel===void 0)o.logVerbosityLevel=0;else if(typeof r.logVerbosityLevel!="number"||!Number.isInteger(r.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${r.logVerbosityLevel}`);r?.terminate===void 0&&(o.terminate=!1);let i=0;return r?.tag!==void 0&&(i=ht(r.tag,t)),n=e._OrtCreateRunOptions(o.logSeverityLevel,o.logVerbosityLevel,!!o.terminate,i),n===0&&ot("Can't create run options."),r?.extra!==void 0&&Ho(r.extra,"",new WeakSet,(s,a)=>{let u=ht(s,t),l=ht(a,t);e._OrtAddRunConfigEntry(n,u,l)!==0&&ot(`Can't set a run config entry: ${s} - ${a}.`)}),[n,t]}catch(i){throw n!==0&&e._OrtReleaseRunOptions(n),t.forEach(s=>e._free(s)),i}}});var g2,b2,y2,v2,Bm,Rm=R(()=>{"use strict";to();Sa();g2=r=>{switch(r){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${r}`)}},b2=r=>{switch(r){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${r}`)}},y2=r=>{r.extra||(r.extra={}),r.extra.session||(r.extra.session={});let e=r.extra.session;e.use_ort_model_bytes_directly||(e.use_ort_model_bytes_directly="1"),r.executionProviders&&r.executionProviders.some(n=>(typeof n=="string"?n:n.name)==="webgpu")&&(r.enableMemPattern=!1)},v2=(r,e,n)=>{for(let t of e){let o=typeof t=="string"?t:t.name;switch(o){case"webnn":if(o="WEBNN",typeof t!="string"){let s=t;if(s?.deviceType){let a=ht("deviceType",n),u=ht(s.deviceType,n);dt()._OrtAddSessionConfigEntry(r,a,u)!==0&&ot(`Can't set a session config entry: 'deviceType' - ${s.deviceType}.`)}if(s?.numThreads){let a=s.numThreads;(typeof a!="number"||!Number.isInteger(a)||a<0)&&(a=0);let u=ht("numThreads",n),l=ht(a.toString(),n);dt()._OrtAddSessionConfigEntry(r,u,l)!==0&&ot(`Can't set a session config entry: 'numThreads' - ${s.numThreads}.`)}if(s?.powerPreference){let a=ht("powerPreference",n),u=ht(s.powerPreference,n);dt()._OrtAddSessionConfigEntry(r,a,u)!==0&&ot(`Can't set a session config entry: 'powerPreference' - ${s.powerPreference}.`)}}break;case"webgpu":if(o="JS",typeof t!="string"){let s=t;if(s?.preferredLayout){if(s.preferredLayout!=="NCHW"&&s.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${s.preferredLayout}`);let a=ht("preferredLayout",n),u=ht(s.preferredLayout,n);dt()._OrtAddSessionConfigEntry(r,a,u)!==0&&ot(`Can't set a session config entry: 'preferredLayout' - ${s.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${o}`)}let i=ht(o,n);dt()._OrtAppendExecutionProvider(r,i)!==0&&ot(`Can't append execution provider: ${o}.`)}},Bm=r=>{let e=dt(),n=0,t=[],o=r||{};y2(o);try{let i=g2(o.graphOptimizationLevel??"all"),s=b2(o.executionMode??"sequential"),a=typeof o.logId=="string"?ht(o.logId,t):0,u=o.logSeverityLevel??2;if(!Number.isInteger(u)||u<0||u>4)throw new Error(`log serverity level is not valid: ${u}`);let l=o.logVerbosityLevel??0;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log verbosity level is not valid: ${l}`);let d=typeof o.optimizedModelFilePath=="string"?ht(o.optimizedModelFilePath,t):0;if(n=e._OrtCreateSessionOptions(i,!!o.enableCpuMemArena,!!o.enableMemPattern,s,!!o.enableProfiling,0,a,u,l,d),n===0&&ot("Can't create session options."),o.executionProviders&&v2(n,o.executionProviders,t),o.freeDimensionOverrides)for(let[p,m]of Object.entries(o.freeDimensionOverrides)){if(typeof p!="string")throw new Error(`free dimension override name must be a string: ${p}`);if(typeof m!="number"||!Number.isInteger(m)||m<0)throw new Error(`free dimension override value must be a non-negative integer: ${m}`);let b=ht(p,t);e._OrtAddFreeDimensionOverride(n,b,m)!==0&&ot(`Can't set a free dimension override: ${p} - ${m}.`)}return o.extra!==void 0&&Ho(o.extra,"",new WeakSet,(p,m)=>{let b=ht(p,t),v=ht(m,t);e._OrtAddSessionConfigEntry(n,b,v)!==0&&ot(`Can't set a session config entry: ${p} - ${m}.`)}),[n,t]}catch(i){throw n!==0&&e._OrtReleaseSessionOptions(n),t.forEach(s=>e._free(s)),i}}});var Cu,Xt,qo,Ia,jo,Aa,Eu,st=R(()=>{"use strict";Cu=r=>{switch(r){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${r}`)}},Xt=r=>{switch(r){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${r}`)}},qo=r=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][r],Ia=r=>{switch(r){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${r}`)}},jo=r=>{switch(r){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${r}`)}},Aa=r=>r==="float32"||r==="int32"||r==="int64"||r==="bool"||r==="float16"||r==="uint32",Eu=r=>{switch(r){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${r}`)}}});var Ko,Pu=R(()=>{"use strict";Ko=async r=>{if(typeof r=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(r))}catch(e){if(e.code==="ERR_FS_FILE_TOO_LARGE"){let n=(void 0)(r),t=[];for await(let o of n)t.push(o);return new Uint8Array(Buffer.concat(t))}throw e}else{let e=await fetch(r);if(!e.ok)throw new Error(`failed to load external data file: ${r}`);let n=e.headers.get("Content-Length"),t=n?parseInt(n,10):0;if(t<1073741824)return new Uint8Array(await e.arrayBuffer());{if(!e.body)throw new Error(`failed to load external data file: ${r}, no response body.`);let o=e.body.getReader(),i;try{i=new ArrayBuffer(t)}catch(a){if(a instanceof RangeError){let u=Math.ceil(t/65536);i=new WebAssembly.Memory({initial:u,maximum:u}).buffer}else throw a}let s=0;for(;;){let{done:a,value:u}=await o.read();if(a)break;let l=u.byteLength;new Uint8Array(i,s,l).set(u),s+=l}return new Uint8Array(i,0,t)}}else return r instanceof Blob?new Uint8Array(await r.arrayBuffer()):r instanceof Uint8Array?r:new Uint8Array(r)}});var w2,x2,zm,Mm,Lm,_2,at,on=R(()=>{"use strict";st();w2=["V","I","W","E","F"],x2=(r,e)=>{console.log(`[${w2[r]},${new Date().toISOString()}]${e}`)},Lm=(r,e)=>{zm=r,Mm=e},_2=(r,e)=>{let n=jo(r),t=jo(zm);n>=t&&x2(n,typeof e=="function"?e():e)},at=(...r)=>{Mm&&_2(...r)}});var Nm,Fm=R(()=>{"use strict";st();Nm=(r,e)=>new(Ia(e))(r)});var Oa=R(()=>{"use strict"});var Ca,T2,Vm,Du,ku,Gm,Wm=R(()=>{"use strict";on();Oa();Ca=r=>Math.ceil(r/16)*16,T2=1,Vm=()=>T2++,Du=async(r,e,n,t)=>{let o=Ca(n),i=r.device.createBuffer({size:o,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let s=r.getCommandEncoder();r.endComputePass(),s.copyBufferToBuffer(e,0,i,0,o),r.flush(),await i.mapAsync(GPUMapMode.READ);let a=i.getMappedRange();if(t){let u=t();return u.set(new Uint8Array(a,0,n)),u}else return new Uint8Array(a.slice(0,n))}finally{i.destroy()}},ku=class{constructor(e){this.backend=e;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map}upload(e,n){let t=n.buffer,o=n.byteOffset,i=n.byteLength,s=Ca(i),a=this.storageCache.get(e);if(!a)throw new Error("gpu data for uploading does not exist");if(a.originalSize!==i)throw new Error(`inconsistent data size. gpu data size=${a.originalSize}, data size=${i}`);let u=this.backend.device.createBuffer({mappedAtCreation:!0,size:s,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=u.getMappedRange();new Uint8Array(l).set(new Uint8Array(t,o,i)),u.unmap();let d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(u,0,a.gpuData.buffer,0,s),at("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`),this.buffersForUploadingPending.push(u)}memcpy(e,n){let t=this.storageCache.get(e);if(!t)throw new Error("source gpu data for memcpy does not exist");let o=this.storageCache.get(n);if(!o)throw new Error("destination gpu data for memcpy does not exist");if(t.originalSize!==o.originalSize)throw new Error("inconsistent source and destination gpu data size");let i=Ca(t.originalSize),s=this.backend.getCommandEncoder();this.backend.endComputePass(),s.copyBufferToBuffer(t.gpuData.buffer,0,o.gpuData.buffer,0,i)}registerExternalBuffer(e,n,t){let o;if(t){if(o=this.externalBuffers.get(t),o===void 0)throw new Error("previous buffer is not registered");if(e===t)return at("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${n}) => id=${o}, buffer is the same, skip.`),o;this.externalBuffers.delete(t)}else o=Vm();return this.storageCache.set(o,{gpuData:{id:o,type:0,buffer:e},originalSize:n}),this.externalBuffers.set(e,o),at("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${n}) => id=${o}, registered.`),o}unregisterExternalBuffer(e){let n=this.externalBuffers.get(e);n!==void 0&&(this.storageCache.delete(n),this.externalBuffers.delete(e),at("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${n}`))}create(e,n=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let t=Ca(e),o,i=(n&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,s=(n&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(i||s){let u=i?this.freeBuffers:this.freeUniformBuffers,l=u.get(t);l||(l=[],u.set(t,l)),l.length>0?o=l.pop():o=this.backend.device.createBuffer({size:t,usage:n})}else o=this.backend.device.createBuffer({size:t,usage:n});let a={id:Vm(),type:0,buffer:o};return this.storageCache.set(a.id,{gpuData:a,originalSize:e}),at("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${a.id}`),a}get(e){return this.storageCache.get(e)?.gpuData}release(e){let n=this.storageCache.get(e);if(!n)throw new Error("releasing data does not exist");return at("verbose",()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${n.gpuData.id}`),this.storageCache.delete(e),this.buffersPending.push(n.gpuData.buffer),n.originalSize}async download(e,n){let t=this.storageCache.get(e);if(!t)throw new Error("data does not exist");await Du(this.backend,t.gpuData.buffer,t.originalSize,n)}refreshPendingBuffers(){for(let e of this.buffersForUploadingPending)e.destroy();this.buffersForUploadingPending=[];for(let e of this.buffersPending)(e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(e.size).push(e):(e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(e.size).push(e):e.destroy();this.buffersPending=[]}dispose(){this.freeBuffers.forEach(e=>{e.forEach(n=>{n.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(n=>{n.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map}},Gm=(...r)=>new ku(...r)});var Bu,Le,Et=R(()=>{"use strict";Bu=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},Le=r=>new Bu(r)});var Ru,Cr,H,En,Ea,Pa,ka,Ne=R(()=>{"use strict";Ru=class{static calcMatMulShape(e,n){return e[1]!==n[0]?void 0:[e[0],n[1]]}},Cr=class{static calcShape(e,n,t=!1){let o=e.length,i=n.length;if(o===0)return n;if(i===0)return e;let s=Math.max(e.length,n.length),a=new Array(s);if(t){if(o<2||i<2)return;let u=Ru.calcMatMulShape([e[o-2],e[o-1]],[n[i-2],n[i-1]]);if(u===void 0)return;[a[s-2],a[s-1]]=u}for(let u=t?3:1;u<=s;u++){let l=o-u<0?1:e[o-u],d=i-u<0?1:n[i-u];if(l!==d&&l>1&&d>1)return;a[s-u]=Math.max(l,d)}return a}static isValidBroadcast(e,n){let t=e.length,o=n.length;if(t>o)return!1;for(let i=1;i<=t;i++)if(e[t-i]!==1&&e[t-i]!==n[o-i])return!1;return!0}},H=class r{static size(e){return r.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,n,e.length)}static sizeToDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,0,n)}static getSizeFromDimensionRange(e,n,t){let o=1;for(let i=n;i<t;i++){if(e[i]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");o*=e[i]}return o}static computeStrides(e){let n=e.length;if(n===0)return[];if(n===1)return[1];let t=new Array(n);t[n-1]=1,t[n-2]=e[n-1];for(let o=n-3;o>=0;--o)t[o]=t[o+1]*e[o+1];return t}static normalizeAxis(e,n){if(e<-n&&e>=n)throw new Error("unsupported axis for this operation.");return e<0?e+n:e}static normalizeAxes(e,n){return e.map(t=>this.normalizeAxis(t,n??e.length))}static sortBasedOnPerm(e,n){return n?n.map(t=>e[t]):e.slice().reverse()}static padShape(e,n){let t=e.length;return e.map((o,i)=>o+n[i]+n[i+t])}static areEqual(e,n){return e.length!==n.length?!1:e.every((t,o)=>t===n[o])}},En=class r{static adjustPoolAttributes(e,n,t,o,i,s){if(!e&&t.length!==n.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let a=0;a<n.length-2;a++)a>=t.length?t.push(n[a+2]):t[a]=n[a+2];for(let a=0;a<t.length;a++)if(a<o.length){if(o[a]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let a=0;a<t.length;a++)if(a<i.length){if(i[a]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let a=0;a<t.length*2;a++)if(a<s.length){if(s[a]<0)throw new Error("pad should be greater than or equal to 1")}else s.push(0);for(let a=0;a<t.length;a++){if(t[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(s[a]>=t[a]||s[a+t.length]>=t[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,n,t,o,i,s,a){if(a){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let u=0;u<e.length-2;u++)r.adjustPadAndReturnShape(e[u+(s?1:2)],n[u],t[u],o[u],i,u,u+e.length-2,a)}}static computePoolOutputShape(e,n,t,o,i,s,a){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let u=[n[0],n[1]];return r.computeShapeHelper(e,n,u,t,o,i,s,a),u}static computeConvOutputShape(e,n,t,o,i,s,a){if(e.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let u=[e[0],n[0]];return r.computeShapeHelper(!1,e,u,t,o,i,s,a),u}static computeShapeHelper(e,n,t,o,i,s,a,u){if(e)for(let l=0;l<n.length-2;l++)t.push(1);else for(let l=0;l<n.length-2;l++)t.push(r.adjustPadAndReturnShape(n[l+2],o[l],i[l],s[l],a,l,l+n.length-2,u))}static adjustPadAndReturnShape(e,n,t,o,i,s,a,u){let l=t*(o-1)+1;if(u&&u!=="NOTSET")switch(u){case"VALID":return i[s]=0,i[a]=0,Math.floor((e-l)/n+1);case"SAME_LOWER":case"SAME_UPPER":if(t!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let p=((e+n-1)/n-1)*n+o-e;return i[s]=Math.floor(u==="SAME_LOWER"?(p+1)/2:p/2),i[a]=p-i[s],Math.floor((e+p-o)/n+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+i[s]+i[a]-l)/n+1)}},Ea=class{static getShapeOfGemmResult(e,n,t,o,i){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let s,a,u;n?(s=e[1],a=e[0]):(s=e[0],a=e[1]);let l=-1;if(o?(u=t[0],l=1):(u=t[1],l=0),t[l]!==a)throw new Error("dimension mismatch");if(s<=0||u<=0||a<=0)throw new Error("invalid shape specified");if(i&&!Cr.isValidBroadcast(i,[s,u]))throw new Error("gemm: invalid bias shape for broadcast");return[s,u,a]}},Pa=-34028234663852886e22,ka=34028234663852886e22});var $2,Mu,gt,yr,K,bt,Pt,vr,Zt,_e,Lu,W,ie,Da,zu,Hm,ro,ze=R(()=>{"use strict";st();Ne();$2=64,Mu=(r,e)=>{if(e===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(r){case 10:return e>1?`vec${e}<f16>`:"f16";case 1:return e>1?`vec${e}<f32>`:"f32";case 6:return e>1?`vec${e}<i32>`:"i32";case 12:return e>1?`vec${e}<u32>`:"u32";case 7:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(e!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${r}`)}},gt=(r,e=1)=>{let n=Mu(r,e);return typeof n=="string"?n:n[0]},yr=(r,e=1)=>{let n=Mu(r,e);return typeof n=="string"?n:n[1]},K=r=>r.length===0?[]:[{type:"uint32",data:r},{type:"uint32",data:H.computeStrides(r)}],bt=r=>r%4===0?4:r%2===0?2:1,Pt=(r="f32",e,n="0")=>!e||e===1?`${r}(${n})`:`vec${e}<${r}>(${n})`,vr=(r,e,n)=>r==="f32"?n:e===1?`f32(${n})`:`vec${e}f(${n})`,Zt=(r,e)=>e===4?`(${r}.x + ${r}.y + ${r}.z + ${r}.w)`:e===2?`(${r}.x + ${r}.y)`:e===3?`(${r}.x + ${r}.y + ${r}.z)`:r,_e=(r,e,n,t)=>r.startsWith("uniforms.")&&n>4?typeof e=="string"?t==="f16"?`${r}[(${e}) / 8][(${e}) % 8 / 4][(${e}) % 8 % 4]`:`${r}[(${e}) / 4][(${e}) % 4]`:t==="f16"?`${r}[${Math.floor(e/8)}][${Math.floor(e%8/4)}][${e%8%4}]`:`${r}[${Math.floor(e/4)}][${e%4}]`:n>1?`${r}[${e}]`:r,Lu=(r,e,n,t,o)=>{let i=typeof n=="number",s=i?n:n.length,a=[...new Array(s).keys()],u=s<2?"u32":s<=4?`vec${s}<u32>`:`array<u32, ${s}>`,l=Mu(e,o),d=typeof l=="string"?l:l[1],p=typeof l=="string"?l:l[0],m={indices:u,value:d,storage:p,tensor:e},b=Z=>typeof Z=="string"?Z:`${Z}u`,v={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},w=i?"uniforms.":"",A=`${w}${r}_shape`,$=`${w}${r}_strides`,_="";for(let Z=0;Z<s-1;Z++)_+=`
    let dim${Z} = current / ${_e($,Z,s)};
    let rest${Z} = current % ${_e($,Z,s)};
    indices[${Z}] = dim${Z};
    current = rest${Z};
    `;_+=`indices[${s-1}] = current;`;let O=s<2?"":`
  fn o2i_${r}(offset: u32) -> ${m.indices} {
    var indices: ${m.indices};
    var current = offset;
    ${_}
    return indices;
  }`,P=Z=>(v.offsetToIndices=!0,s<2?Z:`o2i_${r}(${Z})`),L=[];if(s>=2)for(let Z=s-1;Z>=0;Z--)L.push(`${_e($,Z,s)} * (indices[${Z}])`);let F=s<2?"":`
  fn i2o_${r}(indices: ${m.indices}) -> u32 {
    return ${L.join("+")};
  }`,G=Z=>(v.indicesToOffset=!0,s<2?Z:`i2o_${r}(${Z})`),J=(...Z)=>s===0?"0u":`${m.indices}(${Z.map(b).join(",")})`,le=(Z,ge)=>s<2?`${Z}`:`${_e(Z,ge,s)}`,z=(Z,ge,Ie)=>s<2?`${Z}=${Ie};`:`${_e(Z,ge,s)}=${Ie};`,q={},Xe=(Z,ge)=>{v.broadcastedIndicesToOffset=!0;let Ie=`${ge.name}broadcastedIndicesTo${r}Offset`;if(Ie in q)return`${Ie}(${Z})`;let kt=[];for(let Vt=s-1;Vt>=0;Vt--){let Je=ge.indicesGet("outputIndices",Vt+ge.rank-s);kt.push(`${le($,Vt)} * (${Je} % ${le(A,Vt)})`)}return q[Ie]=`fn ${Ie}(outputIndices: ${ge.type.indices}) -> u32 {
             return ${kt.length>0?kt.join("+"):"0u"};
           }`,`${Ie}(${Z})`},Ye=(Z,ge)=>(()=>{if(m.storage===m.value)return`${r}[${Z}]=${ge};`;if(m.storage==="vec2<u32>"&&m.value==="i32")return`${r}[${Z}]=vec2<u32>(u32(${ge}), select(0u, 0xFFFFFFFFu, ${ge} < 0));`;if(m.storage==="vec2<u32>"&&m.value==="u32")return`${r}[${Z}]=vec2<u32>(u32(${ge}), 0u);`;if(m.storage==="u32"&&m.value==="vec4<bool>")return`${r}[${Z}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ge}));`;throw new Error(`not supported combination of storage type ${m.storage} and value type ${m.value} yet`)})(),se=Z=>(()=>{if(m.storage===m.value)return`${r}[${Z}]`;if(m.storage==="vec2<u32>"&&m.value==="i32")return`i32(${r}[${Z}].x)`;if(m.storage==="vec2<u32>"&&m.value==="u32")return`u32(${r}[${Z}].x)`;if(m.storage==="u32"&&m.value==="vec4<bool>")return`vec4<bool>(bool(${r}[${Z}] & 0xFFu), bool(${r}[${Z}] & 0xFF00u), bool(${r}[${Z}] & 0xFF0000u), bool(${r}[${Z}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${m.storage} and value type ${m.value} yet`)})(),Ee=s<2?"":`
  fn get_${r}ByIndices(indices: ${m.indices}) -> ${d} {
    return ${se(`i2o_${r}(indices)`)};
  }`,ut=s<2?"":(()=>{let Z=a.map(Ie=>`d${Ie}: u32`).join(", "),ge=a.map(Ie=>`d${Ie}`).join(", ");return`
  fn get_${r}(${Z}) -> ${d} {
    return get_${r}ByIndices(${J(ge)});
  }`})(),Te=(...Z)=>{if(Z.length!==s)throw new Error(`indices length must be ${s}`);let ge=Z.map(b).join(",");return s===0?se("0u"):s===1?se(ge[0]):(v.get=!0,v.getByIndices=!0,v.indicesToOffset=!0,`get_${r}(${ge})`)},Oe=Z=>s<2?se(Z):(v.getByIndices=!0,v.indicesToOffset=!0,`get_${r}ByIndices(${Z})`),xe=s<2?"":`
  fn set_${r}ByIndices(indices: ${m.indices}, value: ${d}) {
    ${Ye(`i2o_${r}(indices)`,"value")}
  }`,Pe=s<2?"":(()=>{let Z=a.map(Ie=>`d${Ie}: u32`).join(", "),ge=a.map(Ie=>`d${Ie}`).join(", ");return`
  fn set_${r}(${Z}, value: ${d}) {
    set_${r}ByIndices(${J(ge)}, value);
  }`})();return{impl:()=>{let Z=[],ge=!1;return v.offsetToIndices&&(Z.push(O),ge=!0),v.indicesToOffset&&(Z.push(F),ge=!0),v.broadcastedIndicesToOffset&&(Object.values(q).forEach(Ie=>Z.push(Ie)),ge=!0),v.set&&(Z.push(Pe),ge=!0),v.setByIndices&&(Z.push(xe),ge=!0),v.get&&(Z.push(ut),ge=!0),v.getByIndices&&(Z.push(Ee),ge=!0),!i&&ge&&Z.unshift(`const ${A} = ${m.indices}(${n.join(",")});`,`const ${$} = ${m.indices}(${H.computeStrides(n).join(",")});`),Z.join(`
`)},type:m,offsetToIndices:P,indicesToOffset:G,broadcastedIndicesToOffset:Xe,indices:J,indicesGet:le,indicesSet:z,set:(...Z)=>{if(Z.length!==s+1)throw new Error(`indices length must be ${s}`);let ge=Z[s];if(typeof ge!="string")throw new Error("value must be string");let Ie=Z.slice(0,s).map(b).join(",");return s===0?Ye("0u",ge):s===1?Ye(Ie[0],ge):(v.set=!0,v.setByIndices=!0,v.indicesToOffset=!0,`set_${r}(${Ie}, ${ge})`)},setByOffset:Ye,setByIndices:(Z,ge)=>s<2?Ye(Z,ge):(v.setByIndices=!0,v.indicesToOffset=!0,`set_${r}ByIndices(${Z}, ${ge});`),get:Te,getByOffset:se,getByIndices:Oe,usage:t,name:r,strides:$,shape:A,rank:s}},W=(r,e,n,t=1)=>Lu(r,e,n,"input",t),ie=(r,e,n,t=1)=>Lu(r,e,n,"output",t),Da=(r,e,n,t=1)=>Lu(r,e,n,"internal",t),zu=class{constructor(e){this.normalizedDispatchGroup=e;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=$2){let n=typeof e=="number"?e:e[0],t=typeof e=="number"?1:e[1],o=typeof e=="number"?1:e[2],i=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,s=i?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,a=i?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${n*t*o}u + local_idx;`;return`@compute @workgroup_size(${n}, ${t}, ${o})
  fn main(${s}) {
    ${a}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,n){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let t=e.usage==="input"?"read":"read_write",o=e.type.storage;return`@group(0) @binding(${n}) var<storage, ${t}> ${e.name}: array<${o}>;`}declareVariables(...e){return e.map(n=>this.declareVariable(n,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(n=>this.registerInternalVariable(n)),this}registerUniform(e,n,t=1){return this.uniforms.push({name:e,type:n,length:t}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:n,type:t,length:o}of this.uniforms)if(o&&o>4)t==="f16"?e.push(`@align(16) ${n}:array<mat2x4<${t}>, ${Math.ceil(o/8)}>`):e.push(`${n}:array<vec4<${t}>, ${Math.ceil(o/4)}>`);else{let i=o==null||o===1?t:`vec${o}<${t}>`;e.push(`${n}:${i}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}},Hm=r=>new zu(r),ro=(r,e)=>{let n=r.length,t=[];for(let o=0;o<n;o++){let i=n-1-o,s=r[i]||1;(e[e.length-1-o]||1)>1&&s===1&&t.unshift(i)}return t}});var S2,qm,I2,A2,wr,jm,Km,no=R(()=>{"use strict";Ne();Et();ze();S2=r=>{if(!r||r.length!==1)throw new Error("Transpose requires 1 input.")},qm=(r,e)=>e&&e.length!==r?[...new Array(r).keys()].reverse():e,I2=(r,e)=>H.sortBasedOnPerm(r,qm(r.length,e)),A2=(r,e,n,t)=>{let o=[];o.push(`fn perm(i: ${t.type.indices}) -> ${n.type.indices} {
    var a: ${n.type.indices};`);for(let i=0;i<e;++i)o.push(n.indicesSet("a",r[i],`i[${i}]`));return o.push("return a;}"),o.join(`
`)},wr=(r,e)=>{let n=r.dataType,t=r.dims.length,o=qm(t,e),i=I2(r.dims,o),s=ie("output",n,i.length),a=W("a",n,t),u=l=>`
  ${l.registerUniform("output_size","u32").declareVariables(a,s)}

  ${A2(o,t,a,s)}

  ${l.mainStart()}
    ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${s.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${s.setByOffset("global_idx",a.getByIndices("aIndices"))}
  }`;return{name:"Transpose",shaderCache:{hint:`${e}`,inputDependencies:["rank"]},getRunData:l=>{let d=H.size(i);return{outputs:[{dims:i,dataType:l[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:[{type:"uint32",data:d},...K(l[0].dims),...K(i)]}},getShaderSource:u}},jm=(r,e)=>{S2(r.inputs),r.compute(wr(r.inputs[0],e.perm))},Km=r=>Le({perm:r.perm})});var O2,C2,E2,P2,k2,D2,B2,R2,z2,M2,Er,Ym,Xm,Zm,Jm,Qm,eg,tg,rg,ng,og,ig=R(()=>{"use strict";Ne();ze();Ba();no();O2={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},C2={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},E2={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},P2={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},k2=(r,e)=>{let n=[];for(let t=e-r;t<e;++t)n.push(t);return n},D2=(r,e)=>{let n=[],t=r.length;for(let i=0;i<t;i++)e.indexOf(i)===-1&&n.push(r[i]);let o=e.map(i=>r[i]);return[n,o]},B2=(r,e)=>{let n=r.length+e.length,t=[],o=0;for(let i=0;i<n;i++)e.indexOf(i)===-1?t.push(r[o++]):t.push(1);return t},R2=(r,e)=>{for(let n=0;n<r.length;++n)if(r[r.length-n-1]!==e-1-n)return!1;return!0},z2=(r,e)=>{let n=[];if(!R2(r,e)){for(let t=0;t<e;++t)r.indexOf(t)===-1&&n.push(t);r.forEach(t=>n.push(t))}return n},M2=(r,e,n,t,o,i,s)=>{let a=n[0].dims,u=H.size(i),l=H.size(s),d=W("_A",n[0].dataType,a),p=ie("output",o,i),m=32,b=`
          var<workgroup> aBestValues : array<${p.type.storage}, ${m}>;
       `;return{name:r,shaderCache:e,getShaderSource:w=>`
        ${w.registerUniform("reduceSize","u32").declareVariables(d,p)}
        ${b}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${w.mainStart(m)}

          let outputIndex = global_idx / ${m};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = ${p.type.storage}(${E2[t]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${m}) {
           let candidate = ${p.type.storage}(${d.getByOffset("offset + k")});
           bestValue = ${O2[t]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${m}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${C2[t]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${p.setByOffset("outputIndex",`${t==="mean"?`bestValue / ${p.type.storage}(uniforms.reduceSize)`:`${P2[t]}`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:i,dataType:o}],dispatchGroup:{x:u},programUniforms:[{type:"uint32",data:l}]})}},Er=(r,e,n,t)=>{let o=r.inputs.length===1?n:Nu(r.inputs,n),i=o.axes;i.length===0&&!o.noopWithEmptyAxes&&(i=r.inputs[0].dims.map((b,v)=>v));let s=H.normalizeAxes(i,r.inputs[0].dims.length),a=s,u=r.inputs[0],l=z2(a,r.inputs[0].dims.length);l.length>0&&(u=r.compute(wr(r.inputs[0],l),{inputs:[0],outputs:[-1]})[0],a=k2(a.length,u.dims.length));let[d,p]=D2(u.dims,a),m=d;o.keepDims&&(m=B2(d,s)),r.compute(M2(e,{hint:o.cacheKey,inputDependencies:["type"]},[u],t,r.inputs[0].dataType,m,p),{inputs:[u]})},Ym=(r,e)=>{Er(r,"ReduceMeanShared",e,"mean")},Xm=(r,e)=>{Er(r,"ReduceL1Shared",e,"l1")},Zm=(r,e)=>{Er(r,"ReduceL2Shared",e,"l2")},Jm=(r,e)=>{Er(r,"ReduceLogSumExpShared",e,"logSumExp")},Qm=(r,e)=>{Er(r,"ReduceMaxShared",e,"max")},eg=(r,e)=>{Er(r,"ReduceMinShared",e,"min")},tg=(r,e)=>{Er(r,"ReduceProdShared",e,"prod")},rg=(r,e)=>{Er(r,"ReduceSumShared",e,"sum")},ng=(r,e)=>{Er(r,"ReduceSumSquareShared",e,"sumSquare")},og=(r,e)=>{Er(r,"ReduceLogSumShared",e,"logSum")}});var Pr,L2,Ra,Nu,kr,N2,F2,V2,U2,G2,W2,H2,q2,j2,K2,Dr,ag,sg,ug,lg,dg,cg,fg,pg,hg,mg,Ba=R(()=>{"use strict";Ne();Et();ze();ig();Pr=r=>{if(!r||r.length===0||r.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(r.length===2&&r[1].dims.length!==1)throw new Error("Invalid axes input dims.")},L2=r=>["","",`var value = ${r.getByIndices("input_indices")};`,""],Ra=(r,e,n,t,o,i,s=!1,a=!1)=>{let u=[],l=n[0].dims,d=l.length,p=H.normalizeAxes(o,d),m=!a&&p.length===0;l.forEach((A,$)=>{m||p.indexOf($)>=0?s&&u.push(1):u.push(A)});let b=u.length,v=H.size(u);return{name:r,shaderCache:e,getShaderSource:A=>{let $=[],_=W("_A",n[0].dataType,d),O=ie("output",i,b),P=t(_,O,p),L=P[2];for(let F=0,G=0;F<d;F++)m||p.indexOf(F)>=0?(s&&G++,L=`for(var j${F}: u32 = 0; j${F} < ${l[F]}; j${F}++) {
                  ${P[2].includes("last_index")?`let last_index = j${F};`:""}
                  ${_.indicesSet("input_indices",F,`j${F}`)}
                  ${L}
                }`):($.push(`${_.indicesSet("input_indices",F,O.indicesGet("output_indices",G))};`),G++);return`

        ${A.registerUniform("output_size","u32").declareVariables(_,O)}

        ${A.mainStart()}
          ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${_.type.indices};
          let output_indices = ${O.offsetToIndices("global_idx")};

          ${$.join(`
`)}
          ${P[0]}       // init ops for reduce max/min
          ${P[1]}
          ${L}
          ${P[3]}
          ${P.length===4?O.setByOffset("global_idx","value"):P.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:u,dataType:i}],dispatchGroup:{x:Math.ceil(v/64)},programUniforms:[{type:"uint32",data:v},...K(l),...K(u)]})}},Nu=(r,e)=>{let n=[];return r[1].dims[0]>0&&r[1].getBigInt64Array().forEach(t=>n.push(Number(t))),Le({axes:n,keepDims:e.keepDims,noopWithEmptyAxes:e.noopWithEmptyAxes})},kr=(r,e,n,t)=>{let o=r.inputs,i=o.length===1?n:Nu(o,n);r.compute(Ra(e,{hint:i.cacheKey,inputDependencies:["rank"]},[o[0]],i.noopWithEmptyAxes&&i.axes.length===0?L2:t,i.axes,o[0].dataType,i.keepDims,i.noopWithEmptyAxes),{inputs:[0]})},N2=(r,e)=>{Pr(r.inputs),kr(r,"ReduceLogSum",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,"value = log(value);"])},F2=(r,e)=>{Pr(r.inputs),kr(r,"ReduceL1",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += abs(${t.getByIndices("input_indices")});`,""])},V2=(r,e)=>{Pr(r.inputs),kr(r,"ReduceL2",e,(t,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},U2=(r,e)=>{Pr(r.inputs),kr(r,"ReduceLogSumExp",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += exp(${t.getByIndices("input_indices")});`,"value = log(value);"])},G2=(r,e)=>{Pr(r.inputs),kr(r,"ReduceMax",e,(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(t.indicesSet("input_indices",a,0));return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = max(value, ${t.getByIndices("input_indices")});`,""]})},W2=(r,e)=>{Pr(r.inputs),kr(r,"ReduceMean",e,(t,o,i)=>{let s=1;for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&(s*=r.inputs[0].dims[a]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${o.type.value}(sum / ${s});`]})},H2=(r,e)=>{Pr(r.inputs),kr(r,"ReduceMin",e,(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`input_indices[${a}] = 0;`);return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = min(value, ${t.getByIndices("input_indices")});`,""]})},q2=(r,e)=>{Pr(r.inputs),kr(r,"ReduceProd",e,(t,o)=>[`var value = ${o.type.storage}(1);`,"",`value *= ${t.getByIndices("input_indices")};`,""])},j2=(r,e)=>{Pr(r.inputs),kr(r,"ReduceSum",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,""])},K2=(r,e)=>{Pr(r.inputs),kr(r,"ReduceSumSquare",e,(t,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += t * t;`,""])},Dr=(r,e,n)=>{if(e.length===0)return n;let t=1,o=1;for(let i=0;i<e.length;i++)e.indexOf(i)===-1?t*=r[i]:o*=r[i];return o<32&&t>1024},ag=(r,e)=>{Dr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?W2(r,e):Ym(r,e)},sg=(r,e)=>{Dr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?F2(r,e):Xm(r,e)},ug=(r,e)=>{Dr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?V2(r,e):Zm(r,e)},lg=(r,e)=>{Dr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?U2(r,e):Jm(r,e)},dg=(r,e)=>{Dr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?G2(r,e):Qm(r,e)},cg=(r,e)=>{Dr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?H2(r,e):eg(r,e)},fg=(r,e)=>{Dr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?q2(r,e):tg(r,e)},pg=(r,e)=>{Dr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?j2(r,e):rg(r,e)},hg=(r,e)=>{Dr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?K2(r,e):ng(r,e)},mg=(r,e)=>{Dr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?N2(r,e):og(r,e)}});var gg,bg,yg,Fu,vg=R(()=>{"use strict";st();Et();Ba();gg=r=>{if(!r||r.length===0||r.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(r[0].dataType!==1)throw new Error("Invalid input type.")},bg=(r,e)=>{gg(r.inputs);let n=(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`input_indices[${a}] = 0;`);return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${t.getByIndices("input_indices")} ${e.selectLastIndex>0?"<=":"<"} value) {
         value = ${t.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",o.setByOffset("global_idx","best_index")]};r.compute(Ra("ArgMin",{hint:e.cacheKey,inputDependencies:["rank"]},[r.inputs[0]],n,[e.axis],7,e.keepDims),{inputs:[0]})},yg=(r,e)=>{gg(r.inputs);let n=(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`input_indices[${a}] = 0;`);return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${t.getByIndices("input_indices")} ${e.selectLastIndex>0?">=":">"} value) {
         value = ${t.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",o.setByOffset("global_idx","best_index")]};r.compute(Ra("argMax",{hint:e.cacheKey,inputDependencies:["rank"]},[r.inputs[0]],n,[e.axis],7,e.keepDims),{inputs:[0]})},Fu=r=>Le(r)});var Y2,X2,Z2,J2,za,Q2,wg,Vu=R(()=>{"use strict";st();Oa();ze();Y2=(r,e)=>{let n=r[0],t=r[1],o=r[2],i=r[3],s=r[4],a=r[5];if(s&&a)throw new Error("Attention cannot have both past and relative_position_bias");if(n.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let u=n.dims[0],l=n.dims[1],d=n.dims[2];if(o.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(t.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(t.dims[0]!==d)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(o.dims[0]!==t.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let p=o.dims[0]/3,m=p,b=m;if(e.qkvHiddenSizes.length>0){if(e.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let O of e.qkvHiddenSizes)if(O%e.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");p=e.qkvHiddenSizes[0],m=e.qkvHiddenSizes[1],b=e.qkvHiddenSizes[2]}let v=l;if(p!==m)throw new Error("qkv_hidden_sizes first element should be same as the second");if(o.dims[0]!==p+m+b)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let w=0;if(s){if(m!==b)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(s.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(s.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(s.dims[1]!==u)throw new Error('Input "past" second dimension must be batch_size');if(s.dims[2]!==e.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(s.dims[4]!==m/e.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');e.pastPresentShareBuffer||(w=s.dims[3])}let A=v+w,$=-1,_=0;if(i)throw new Error("Mask not supported");if(s)throw new Error("past is not supported");if(a)throw new Error("relativePositionBias is not supported");return{batchSize:u,sequenceLength:l,pastSequenceLength:w,kvSequenceLength:v,totalSequenceLength:A,maxSequenceLength:$,inputHiddenSize:d,hiddenSize:p,vHiddenSize:b,headSize:Math.floor(p/e.numHeads),vHeadSize:Math.floor(b/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:_,scale:e.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},X2=(r,e,n,t)=>{let o=bt(t),i=64,s=t/o;s<i?i=1:s/8<64&&(i=Math.ceil(s/8));let a=Math.ceil(t/o/i),l=[{type:Xt(e.dataType),data:1/t},{type:"uint32",data:s},{type:"uint32",data:a}],d=gt(e.dataType,o),p=m=>{let b=ie("x",e.dataType,e.dims,o),v="thread_max_vector";o===2?v="max(thread_max_vector.x, thread_max_vector.y)":o===4&&(v="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let w=yr(e.dataType),A=[{name:"d_inv",type:w},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`
  var<workgroup> wgMax: array<f32, ${i}>;
  var<workgroup> wgSum: array<f32, ${i}>;
  ${m.registerUniforms(A).declareVariables(b)}
  ${m.mainStart([i,1,1])}
    let localOffset = local_idx * uniforms.elements_per_wg;
    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;

    var thread_max_vector = ${Pt("f32",o,"-3.402823e+38f")};
    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
      thread_max_vector = max(${vr(w,o,"x[offset + i]")}, thread_max_vector);
    }
    wgMax[local_idx] = ${v};
    workgroupBarrier();

    var maxValue = -3.402823e+38f;
    for (var i = 0u; i < ${i}; i++) {
      maxValue = max(wgMax[i], maxValue);
    }

    var sumVector = ${Pt("f32",o,"0")};
    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
      sumVector += exp(${vr(w,o,"x[offset + i]")} - maxValue);
    }
    wgSum[local_idx] = ${Zt("sumVector",o)};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${i}; i++) {
      sum += wgSum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
        x[offset + i] = ${Pt(w,o,"uniforms.d_inv")};
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
        let f32input = ${vr(w,o,"x[offset + i]")};
        x[offset + i] = ${b.type.value}(exp(f32input - maxValue) / sum);
      }
    }
  }`};r.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${i};${d};${o}`},getShaderSource:p,getRunData:()=>({outputs:[],dispatchGroup:{x:n},programUniforms:l})},{inputs:[e],outputs:[]})},Z2=(r,e,n,t,o,i)=>{let s=[o.batchSize,o.numHeads,o.sequenceLength,o.kvSequenceLength+o.pastSequenceLength],a=i.scale===0?1/Math.sqrt(o.headSize):i.scale,u=bt(o.headSize),l=o.headSize/u,d=12,p={x:Math.ceil(o.totalSequenceLength/d),y:Math.ceil(o.sequenceLength/d),z:o.batchSize*o.numHeads},m=Xt(e.dataType),b=[{type:"uint32",data:o.sequenceLength},{type:"uint32",data:l},{type:"uint32",data:o.totalSequenceLength},{type:"uint32",data:o.kvSequenceLength},{type:m,data:a}],v=[e,n],w=$=>{let _=W("q",e.dataType,e.dims,u),O=W("key",n.dataType,n.dims,u),P=ie("output",e.dataType,s),L=gt(e.dataType),F=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:L}];return`
  const beta: ${L} = 1.0;
  const TILE_SIZE = ${d}u;

  var<workgroup> tileQ: array<${_.type.storage}, ${d*d}>;
  var<workgroup> tileK: array<${_.type.storage}, ${d*d}>;
  ${$.registerUniforms(F).declareVariables(_,O,P)}
  ${$.mainStart([d,d,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let lm = m + local_id.y;
    let ln = n + local_id.x;

    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;
    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;

    var value = ${Pt(L,u)};
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m + local_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];
      }

      workgroupBarrier();
    }

    let headOffset = headIdx * uniforms.M * uniforms.N;
    if (lm < uniforms.M && ln < uniforms.N) {
      let outputIdx = headOffset + lm * uniforms.N + ln;
      output[outputIdx] = ${Zt("value",u)} * uniforms.alpha;
    }
  }`},A=r.compute({name:"AttentionProbs",shaderCache:{hint:`${u}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:e.dataType,gpuDataType:0}],dispatchGroup:p,programUniforms:b}),getShaderSource:w},{inputs:v,outputs:[-1]})[0];return X2(r,A,o.batchSize*o.numHeads*o.sequenceLength,o.totalSequenceLength),A},J2=(r,e,n,t)=>{let o=[t.batchSize,t.sequenceLength,t.vHiddenSize],i=12,s={x:Math.ceil(t.vHeadSize/i),y:Math.ceil(t.sequenceLength/i),z:t.batchSize*t.numHeads},a=[{type:"uint32",data:t.sequenceLength},{type:"uint32",data:t.totalSequenceLength},{type:"uint32",data:t.vHeadSize},{type:"uint32",data:t.numHeads},{type:"uint32",data:t.vHiddenSize}],u=l=>{let d=W("probs",e.dataType,e.dims),p=W("v",n.dataType,n.dims),m=ie("output",e.dataType,o),b=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`
  const TILE_SIZE = ${i}u;
  var<workgroup> tileQ: array<${d.type.value}, ${i*i}>;
  var<workgroup> tileK: array<${d.type.value}, ${i*i}>;
  ${l.registerUniforms(b).declareVariables(d,p,m)}
  ${l.mainStart([i,i,1])}
   let headIdx = workgroup_id.z;
   let m = workgroup_id.y * TILE_SIZE + local_id.y;
   let n = workgroup_id.x * TILE_SIZE + local_id.x;

   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;
   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;

   var value = ${d.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
     if (m < uniforms.M && w + local_id.x < uniforms.K) {
       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
     }
     if (n < uniforms.N && w + local_id.y < uniforms.K) {
       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];
     }
     workgroupBarrier();
     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;
   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + currentBatchHeadNumber * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return r.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:o,dataType:e.dataType,gpuDataType:0}],dispatchGroup:s,programUniforms:a}),getShaderSource:u},{inputs:[e,n],outputs:[0]})[0]},za=(r,e,n,t,o,i,s,a,u,l,d)=>{let p=Z2(r,e,n,u,l,d);J2(r,p,t,l)},Q2=(r,e)=>{let n=[e.batchSize,e.numHeads,e.sequenceLength,e.headSize],t=e.sequenceLength,o=e.inputHiddenSize,i=e.headSize,s=12,a={x:Math.ceil(e.headSize/s),y:Math.ceil(e.sequenceLength/s),z:e.batchSize*e.numHeads},u=[r.inputs[0],r.inputs[1],r.inputs[2]],l=[{type:"uint32",data:t},{type:"uint32",data:o},{type:"uint32",data:i},{type:"uint32",data:e.numHeads},{type:"uint32",data:e.headSize},{type:"uint32",data:e.hiddenSize},{type:"uint32",data:e.hiddenSize+e.hiddenSize+e.vHiddenSize}],d=p=>{let m=ie("output_q",u[0].dataType,n),b=ie("output_k",u[0].dataType,n),v=ie("output_v",u[0].dataType,n),w=W("input",u[0].dataType,u[0].dims),A=W("weight",u[1].dataType,u[1].dims),$=W("bias",u[2].dataType,u[2].dims),_=w.type.storage,O=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${s}u;
  var<workgroup> tileInput: array<${_}, ${s*s}>;
  var<workgroup> tileWeightQ: array<${_}, ${s*s}>;
  var<workgroup> tileWeightK: array<${_}, ${s*s}>;
  var<workgroup> tileWeightV: array<${_}, ${s*s}>;
  ${p.registerUniforms(O).declareVariables(w,A,$,m,b,v)}
  ${p.mainStart([s,s,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE + local_id.y;
    let n = workgroup_id.x * TILE_SIZE + local_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${_}(0);
    var valueK = ${_}(0);
    var valueV = ${_}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return r.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:n,dataType:r.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:r.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:r.inputs[0].dataType,gpuDataType:0}],dispatchGroup:a,programUniforms:l}),getShaderSource:d},{inputs:u,outputs:[-1,-1,-1]})},wg=(r,e)=>{let n=Y2(r.inputs,e),[t,o,i]=Q2(r,n);return za(r,t,o,i,r.inputs[4],void 0,void 0,void 0,r.inputs[5],n,e)}});var e_,t_,r_,xg,_g=R(()=>{"use strict";Ot();Ne();Et();ze();e_=(r,e)=>{if(!r||r.length!==5)throw new Error("BatchNormalization requires 5 inputs");let n=(t,o,i)=>{let s=o.length;if(s!==t.length)throw new Error(`${i}: num dimensions != ${s}`);o.forEach((a,u)=>{if(a!==t[u])throw new Error(`${i}: dim[${u}] do not match`)})};if(r[0].dims.length>1){let t=e.format==="NHWC"?e.spatial?r[0].dims.slice(-1):r[0].dims.slice(-1).concat(r[0].dims.slice(1,r[0].dims.length-1)):r[0].dims.slice(1,e.spatial?2:void 0);n(r[1].dims,t,"Invalid input scale"),n(r[2].dims,t,"Invalid input B"),n(r[3].dims,t,"Invalid input mean"),n(r[4].dims,t,"Invalid input var")}else n(r[1].dims,[1],"Invalid input scale"),n(r[2].dims,[1],"Invalid input B"),n(r[3].dims,[1],"Invalid input mean"),n(r[4].dims,[1],"Invalid input var")},t_=(r,e)=>{let{epsilon:n,spatial:t,format:o}=e,i=r[0].dims,s=t?bt(i[i.length-1]):1,a=o==="NHWC"&&i.length>1?s:1,u=H.size(i)/s,l=t,d=l?i.length:i,p=W("x",r[0].dataType,r[0].dims,s),m=W("scale",r[1].dataType,r[1].dims,a),b=W("bias",r[2].dataType,r[2].dims,a),v=W("inputMean",r[3].dataType,r[3].dims,a),w=W("inputVar",r[4].dataType,r[4].dims,a),A=ie("y",r[0].dataType,d,s),$=()=>{let O="";if(t)O=`let cOffset = ${i.length===1?"0u":o==="NHWC"?`outputIndices[${i.length-1}] / ${s}`:"outputIndices[1]"};`;else if(o==="NCHW")O=`
            ${A.indicesSet("outputIndices","0","0")}
            let cOffset = ${A.indicesToOffset("outputIndices")};`;else{O=`var cIndices = ${m.type.indices}(0);
                       cIndices[0] = outputIndices[${i.length-1}];`;for(let P=1;P<m.rank;P++)O+=`cIndices[${P}] = outputIndices[${P}];`;O+=`let cOffset = ${m.indicesToOffset("cIndices")};`}return O},_=O=>`
  const epsilon = ${n};
  ${O.registerUniform("outputSize","u32").declareVariables(p,m,b,v,w,A)}
  ${O.mainStart()}
  ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${A.offsetToIndices(`global_idx * ${s}`)};
    ${$()}
    let scale = ${m.getByOffset("cOffset")};
    let bias = ${b.getByOffset("cOffset")};
    let inputMean = ${v.getByOffset("cOffset")};
    let inputVar = ${w.getByOffset("cOffset")};
    let x = ${p.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${A.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${e.epsilon}_${e.format}_${t}_${s}`,inputDependencies:l?["rank","type","type","type","type"]:void 0},getShaderSource:_,getRunData:()=>({outputs:[{dims:r[0].dims,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l?[{type:"uint32",data:u},...K(i)]:[{type:"uint32",data:u}]})}},r_=r=>Le(r),xg=(r,e)=>{let{inputs:n,outputCount:t}=r,o=r_({...e,outputCount:t});if(ye.webgpu.validateInputContent&&e_(n,o),e.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");r.compute(t_(n,o))}});var n_,o_,Tg,$g=R(()=>{"use strict";Ne();ze();n_=r=>{if(r[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(r[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(r[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(r[0].dims[2]!==r[1].dims[0])throw new Error("last dimension of input and bias are not the same")},o_=r=>{let e=r[0].dims,n=r[0].dims[2],t=H.size(e)/4,o=r[0].dataType,i=W("input",o,e,4),s=W("bias",o,[n],4),a=W("residual",o,e,4),u=ie("output",o,e,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:e,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(t/64)}}),getShaderSource:d=>`
  const channels = ${n}u / 4;
  ${d.declareVariables(i,s,a,u)}

  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes(t)}
    let value = ${i.getByOffset("global_idx")}
      + ${s.getByOffset("global_idx % channels")} + ${a.getByOffset("global_idx")};
    ${u.setByOffset("global_idx","value")}
  }`}},Tg=r=>{n_(r.inputs),r.compute(o_(r.inputs))}});var i_,Ke,Sg,Ig,Ag,Og,Cg,Eg,Pg,kg,Dg,a_,Bg,Rg,zg,Mg,Ma,Lg,La,Ng,Fg,Vg,Ug,Gg,Wg,Hg,qg,jg,Kg,Yg,Xg,Zg,Jg,Qg,eb,tb,rb,nb,Uu=R(()=>{"use strict";st();Ne();Et();ze();i_=(r,e,n,t,o,i)=>{let s=Math.ceil(e/4),a="";typeof o=="string"?a=`${o}(a)`:a=o("a");let u=W("inputData",n,[s],4),l=ie("outputData",t,[s],4);return`
      ${r.registerUniform("vec_size","u32").declareVariables(u,l)}

  ${i??""}

  ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${u.getByOffset("global_idx")};
    ${l.setByOffset("global_idx",a)}
  }`},Ke=(r,e,n,t,o,i=r.dataType)=>({name:e,shaderCache:{hint:o,inputDependencies:["type"]},getShaderSource:s=>i_(s,H.size(r.dims),r.dataType,i,n,t),getRunData:s=>({outputs:[{dims:r.dims,dataType:i}],dispatchGroup:{x:Math.ceil(H.size(s[0].dims)/64/4)},programUniforms:[{type:"uint32",data:Math.ceil(H.size(r.dims)/4)}]})}),Sg=r=>{r.compute(Ke(r.inputs[0],"Abs","abs"))},Ig=r=>{r.compute(Ke(r.inputs[0],"Acos","acos"))},Ag=r=>{r.compute(Ke(r.inputs[0],"Acosh","acosh"))},Og=r=>{r.compute(Ke(r.inputs[0],"Asin","asin"))},Cg=r=>{r.compute(Ke(r.inputs[0],"Asinh","asinh"))},Eg=r=>{r.compute(Ke(r.inputs[0],"Atan","atan"))},Pg=r=>{r.compute(Ke(r.inputs[0],"Atanh","atanh"))},kg=r=>Le(r),Dg=(r,e)=>{let n;switch(e.to){case 10:n="vec4<f16>";break;case 1:n="vec4<f32>";break;case 12:n="vec4<u32>";break;case 6:n="vec4<i32>";break;case 9:n="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${e.to}`)}r.compute(Ke(r.inputs[0],"Cast",n,void 0,e.cacheKey,e.to))},a_=r=>{let e=r.length>=2&&r[1].data!==0?r[1].getFloat32Array()[0]:Pa,n=r.length>=3&&r[2].data!==0?r[2].getFloat32Array()[0]:ka;return Le({min:e,max:n})},Bg=(r,e)=>{let n=r.inputs.length===1?e:a_(r.inputs),t=yr(r.inputs[0].dataType);r.compute(Ke(r.inputs[0],"Clip",o=>`clamp(${o}, clip_min_, clip_max_)`,`
    const clip_min_: vec4<${t}> = vec4(${t}(${n.min}));
    const clip_max_: vec4<${t}> = vec4(${t}(${n.max}));
`,n.cacheKey),{inputs:[0]})},Rg=r=>{r.compute(Ke(r.inputs[0],"Ceil","ceil"))},zg=r=>{r.compute(Ke(r.inputs[0],"Cos","cos"))},Mg=r=>{r.compute(Ke(r.inputs[0],"Cosh","cosh"))},Ma=r=>Le(r),Lg=(r,e)=>{let n=yr(r.inputs[0].dataType);r.compute(Ke(r.inputs[0],"Elu",t=>`elu_vf32(${t})`,`
  const elu_alpha_ = ${n}(${e.alpha});

  fn elu_f32(a: ${n}) -> ${n} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${n}>) -> vec4<${n}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,e.cacheKey))},La=(r,e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: ${r}) -> ${r} {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,Ng=r=>{let e=yr(r.inputs[0].dataType);r.compute(Ke(r.inputs[0],"Erf",n=>`erf_vf32(${n})`,La(`vec4<${e}>`,e)))},Fg=r=>{r.compute(Ke(r.inputs[0],"Exp","exp"))},Vg=r=>{r.compute(Ke(r.inputs[0],"Floor","floor"))},Ug=r=>{let e=yr(r.inputs[0].dataType);r.compute(Ke(r.inputs[0],"Gelu",n=>`0.5 * ${n} * (1.0 + erf_vf32(${n} * 0.7071067811865475))`,La(`vec4<${e}>`,e)))},Gg=(r,e)=>{let n=yr(r.inputs[0].dataType);r.compute(Ke(r.inputs[0],"LeakyRelu",t=>`select(leaky_relu_alpha_ * ${t}, ${t}, ${t} >= vec4<${n}>(0.0))`,`const leaky_relu_alpha_ = ${n}(${e.alpha});`,e.cacheKey))},Wg=r=>{r.compute(Ke(r.inputs[0],"Not",e=>`!${e}`))},Hg=r=>{r.compute(Ke(r.inputs[0],"Neg",e=>`-${e}`))},qg=r=>{r.compute(Ke(r.inputs[0],"Reciprocal",e=>`1.0/${e}`))},jg=r=>{let e=yr(r.inputs[0].dataType);r.compute(Ke(r.inputs[0],"Relu",n=>`select(vec4<${e}>(0.0), ${n}, ${n} > vec4<${e}>(0.0))`))},Kg=r=>{r.compute(Ke(r.inputs[0],"Sigmoid",e=>`(1.0 / (1.0 + exp(-${e})))`))},Yg=r=>Le(r),Xg=(r,e)=>{let n=yr(r.inputs[0].dataType);r.compute(Ke(r.inputs[0],"HardSigmoid",t=>`max(vec4<${n}>(0.0), min(vec4<${n}>(1.0), ${e.alpha} * ${t} + vec4<${n}>(${e.beta})))`,void 0,e.cacheKey))},Zg=r=>{r.compute(Ke(r.inputs[0],"Sin","sin"))},Jg=r=>{r.compute(Ke(r.inputs[0],"Sinh","sinh"))},Qg=r=>{r.compute(Ke(r.inputs[0],"Sqrt","sqrt"))},eb=r=>{r.compute(Ke(r.inputs[0],"Tan","tan"))},tb=r=>{r.compute(Ke(r.inputs[0],"Tanh",e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`))},rb=(r,e)=>{let n=yr(r.inputs[0].dataType);return r.compute(Ke(r.inputs[0],"ThresholdedRelu",t=>`select(vec4<${n}>(0.0), ${t}, ${t} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${n}>(${e.alpha});`,e.cacheKey)),0},nb=r=>{r.compute(Ke(r.inputs[0],"Log","log"))}});var u_,l_,ob,ib=R(()=>{"use strict";Ne();ze();Uu();u_=r=>{if(r[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(r[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(r[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(r[0].dims[2]!==r[1].dims[0])throw new Error("last dimension of input and bias are not the same")},l_=r=>{let e=r[0].dims.slice();e[2]=e[2]/2;let n=W("input",r[0].dataType,r[0].dims,4),t=W("bias",r[0].dataType,[r[0].dims[2]],4),o=ie("output",r[0].dataType,e,4),i=H.size(e)/4,s=gt(r[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:e,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:u=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${r[0].dims[2]/4/2}u;

  ${u.declareVariables(n,t,o)}

  ${La(`vec4<${s}>`,s)}

  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes(i)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${o.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},ob=r=>{u_(r.inputs),r.compute(l_(r.inputs))}});var d_,c_,Br,ab,sb,ub,lb,db,cb,fb,pb,hb,mb,gb=R(()=>{"use strict";st();Ne();ze();d_=(r,e,n,t,o,i,s,a,u,l,d,p)=>{let m,b;typeof a=="string"?m=b=(_,O)=>`${a}((${_}),(${O}))`:typeof a=="function"?m=b=a:(m=a.scalar,b=a.vector);let v=ie("outputData",d,t.length,4),w=W("aData",u,e.length,4),A=W("bData",l,n.length,4),$;if(o)if(i){let _=H.size(e)===1,O=H.size(n)===1,P=e.length>0&&e[e.length-1]%4===0,L=n.length>0&&n[n.length-1]%4===0;_||O?$=v.setByOffset("global_idx",b(_?`${w.type.value}(${w.getByOffset("0")}.x)`:w.getByOffset("global_idx"),O?`${A.type.value}(${A.getByOffset("0")}.x)`:A.getByOffset("global_idx"))):$=`
            let outputIndices = ${v.offsetToIndices("global_idx * 4u")};
            let offsetA = ${w.broadcastedIndicesToOffset("outputIndices",v)};
            let offsetB = ${A.broadcastedIndicesToOffset("outputIndices",v)};
            ${v.setByOffset("global_idx",b(s||P?w.getByOffset("offsetA / 4u"):`${w.type.value}(${w.getByOffset("offsetA / 4u")}[offsetA % 4u])`,s||L?A.getByOffset("offsetB / 4u"):`${A.type.value}(${A.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else $=v.setByOffset("global_idx",b(w.getByOffset("global_idx"),A.getByOffset("global_idx")));else{if(!i)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let _=(O,P,L="")=>{let F=`aData[indexA${P}][componentA${P}]`,G=`bData[indexB${P}][componentB${P}]`;return`
            let outputIndices${P} = ${v.offsetToIndices(`global_idx * 4u + ${P}u`)};
            let offsetA${P} = ${w.broadcastedIndicesToOffset(`outputIndices${P}`,v)};
            let offsetB${P} = ${A.broadcastedIndicesToOffset(`outputIndices${P}`,v)};
            let indexA${P} = offsetA${P} / 4u;
            let indexB${P} = offsetB${P} / 4u;
            let componentA${P} = offsetA${P} % 4u;
            let componentB${P} = offsetB${P} % 4u;
            ${O}[${P}] = ${L}(${m(F,G)});
          `};d===9?$=`
            var data = vec4<u32>(0);
            ${_("data",0,"u32")}
            ${_("data",1,"u32")}
            ${_("data",2,"u32")}
            ${_("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:$=`
            ${_("outputData[global_idx]",0)}
            ${_("outputData[global_idx]",1)}
            ${_("outputData[global_idx]",2)}
            ${_("outputData[global_idx]",3)}
          `}return`
        ${r.registerUniform("vec_size","u32").declareVariables(w,A,v)}

        ${p??""}

        ${r.mainStart()}
        ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${$}
      }`},c_=(r,e,n,t,o,i,s=n.dataType)=>{let a=!H.areEqual(n.dims,t.dims),u=n.dims,l=H.size(n.dims),d=!1,p=!1,m=[a];if(a){let b=Cr.calcShape(n.dims,t.dims,!1);if(!b)throw new Error("Can't perform binary op on the given tensors");u=b,l=H.size(u);let v=H.size(n.dims)===1,w=H.size(t.dims)===1,A=n.dims.length>0&&n.dims[n.dims.length-1]%4===0,$=t.dims.length>0&&t.dims[t.dims.length-1]%4===0;m.push(v),m.push(w),m.push(A),m.push($);let _=1;for(let O=1;O<u.length;O++){let P=n.dims[n.dims.length-O]??1,L=t.dims[t.dims.length-O]??1;if(P===L)_*=P;else break}_%4===0?(p=!0,d=!0):(v||w||A||$)&&(d=!0)}else d=!0;return m.push(d),{name:r,shaderCache:{hint:e+m.map(b=>b.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:b=>d_(b,n.dims,t.dims,u,d,a,p,o,n.dataType,t.dataType,s,i),getRunData:()=>({outputs:[{dims:u,dataType:s}],dispatchGroup:{x:Math.ceil(l/64/4)},programUniforms:[{type:"uint32",data:Math.ceil(H.size(u)/4)},...K(n.dims),...K(t.dims),...K(u)]})}},Br=(r,e,n,t,o,i)=>{r.compute(c_(e,o??"",r.inputs[0],r.inputs[1],n,t,i))},ab=r=>{Br(r,"Add",(e,n)=>`${e}+${n}`)},sb=r=>{Br(r,"Div",(e,n)=>`${e}/${n}`)},ub=r=>{Br(r,"Equal",{scalar:(e,n)=>`u32(${e}==${n})`,vector:(e,n)=>`vec4<u32>(${e}==${n})`},void 0,void 0,9)},lb=r=>{Br(r,"Mul",(e,n)=>`${e}*${n}`)},db=r=>{let e=W("input",r.inputs[0].dataType,r.inputs[0].dims).type.value;Br(r,"Pow",{scalar:(t,o)=>`pow_custom(${t},${o})`,vector:(t,o)=>`pow_vector_custom(${t},${o})`},`
    fn pow_custom(a : ${e}, b : ${e}) -> ${e} {
      if (b == ${e}(0.0)) {
        return ${e}(1.0);
      } else if (a < ${e}(0.0) && f32(b) != floor(f32(b))) {
        return ${e}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${e}(1.0), round(f32(abs(b) % ${e}(2.0))) != 1.0) * ${e}(${e==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${e}>, b : vec4<${e}>) -> vec4<${e}> {
      // TODO: implement vectorized pow
      return vec4<${e}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},cb=r=>{Br(r,"Sub",(e,n)=>`${e}-${n}`)},fb=r=>{Br(r,"Greater",{scalar:(e,n)=>`u32(${e}>${n})`,vector:(e,n)=>`vec4<u32>(${e}>${n})`},void 0,void 0,9)},pb=r=>{Br(r,"Less",{scalar:(e,n)=>`u32(${e}<${n})`,vector:(e,n)=>`vec4<u32>(${e}<${n})`},void 0,void 0,9)},hb=r=>{Br(r,"GreaterOrEqual",{scalar:(e,n)=>`u32(${e}>=${n})`,vector:(e,n)=>`vec4<u32>(${e}>=${n})`},void 0,void 0,9)},mb=r=>{Br(r,"LessOrEqual",{scalar:(e,n)=>`u32(${e}<=${n})`,vector:(e,n)=>`vec4<u32>(${e}<=${n})`},void 0,void 0,9)}});var p_,h_,m_,g_,bb,yb,vb=R(()=>{"use strict";Ne();Et();ze();p_=r=>{if(!r||r.length<1)throw new Error("too few inputs");let e=r[0].dataType,n=r[0].dims.length;for(let t of r){if(t.dataType!==e)throw new Error("input tensors should be one type");if(t.dims.length!==n)throw new Error("input tensors should have the same shape")}},h_=(r,e)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${r}u>(${e});
    for (var i: u32 = 0u; i < ${r}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${r}u;
  }`,m_=(r,e)=>{let n=r.length,t=[];for(let o=0;o<n;++o){let i=e.setByOffset("global_idx",r[o].getByIndices("indices"));n===1?t.push(i):o===0?t.push(`if (inputIndex == ${o}u) { ${i} }`):o===n-1?t.push(`else { ${i} }`):t.push(`else if (inputIndex == ${o}) { ${i} }`)}return t.join(`
`)},g_=(r,e)=>{let n=r[0].dims.slice();if(e>=n.length||e<-1*n.length)throw new Error("axis specified for concat doesn't match input dimensionality");let t=e<0?n.length+e:e,o=n.slice(0);for(let $=1;$<r.length;$++){let _=r[$].dims.slice();for(let O=0;O<n.length;O++)if(O===t)o[t]+=_[O];else if(n[O]!==_[O])throw new Error("non concat dimensions must match")}let i=H.size(o),s=new Array(r.length),a=new Array(r.length),u=r[0].dataType,l=0,d=[],p=[],m=[{type:"uint32",data:i}];for(let $=0;$<r.length;++$)l+=r[$].dims[t],s[$]=l,p.push(r[$].dims.length),a[$]=W(`input${$}`,u,p[$]),d.push("rank"),m.push({type:"uint32",data:s[$]});for(let $=0;$<r.length;++$)m.push(...K(r[$].dims));m.push(...K(o));let b=ie("output",u,o.length),v=b.indicesGet("indices",t),w=Array.from(Array(s.length).keys()).map($=>`uniforms.sizeInConcatAxis${$}`).join(","),A=$=>`

  ${(()=>{$.registerUniform("outputSize","u32");for(let _=0;_<r.length;_++)$.registerUniform(`sizeInConcatAxis${_}`,"u32");return $.declareVariables(...a,b)})()}

  ${h_(s.length,w)}

  ${$.mainStart()}
    ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${b.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${v});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${s.length}u>(${w});
      ${v} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${m_(a,b)}
  }`;return{name:"Concat",shaderCache:{hint:`${e}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:o,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:m}),getShaderSource:A}},bb=(r,e)=>{p_(r.inputs),r.compute(g_(r.inputs,e.axis))},yb=r=>Le({axis:r.axis})});var Rr,Na,an=R(()=>{"use strict";Ne();Rr=(r,e)=>{switch(r.activation){case"Relu":return`value = max(value, ${e}(0.0));`;case"Sigmoid":return`value = (${e}(1.0) / (${e}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${e}(uniforms.clip_min), ${e}(uniforms.clip_max));`;default:return""}},Na=r=>{let e=r?.activation||"";if(e==="Clip"){let[n,t]=r?.activation_params||[Pa,ka];return{activation:e,clipMax:t,clipMin:n}}return{activation:e}}});var $t,Fa,Va=R(()=>{"use strict";$t=(r,e)=>{switch(r){case 1:return e;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${r}-component is not supported.`)}},Fa=r=>`
      ${r?"value = value + getBiasByOutputCoords(coords);":""}
      `});var Ua,Gu=R(()=>{"use strict";Ua=r=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${r}.x), i32(${r}.y), i32(${r}.z), 1));
}
`});var b_,y_,Yo,wb,v_,Xo,w_,Ga,Zo=R(()=>{"use strict";Ne();ze();an();Va();b_=(r,e)=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${e?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${e?", batchIndices":""});
        `,y_=(r,e)=>r?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${e===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,Yo=(r,e,n="f32",t,o=!1,i=32,s=!1,a=32)=>{let u=e[1]*r[1],l=e[0]*r[0],d=o?u:i,p=o?i:u,m=d/e[0],b=i/e[1];if(!((o&&m===4&&r[1]===4||!o&&(m===3||m===4))&&d%e[0]===0&&i%e[1]===0&&r[0]===4))throw new Error(`If transposeA ${o} is true, innerElementSize ${m} and workPerThread[1] ${r[1]} must be 4.
      Otherwise, innerElementSize ${m} must be 3 or 4.
  tileAWidth ${d} must be divisible by workgroupSize[0]${e[0]}. tileInner ${i} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${r[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${m}<${n}>, ${d/m}>, ${p}>;
var<workgroup> mm_Bsub: array<array<vec4<${n}>, ${l/r[0]}>, ${i}>;

const rowPerThread = ${r[1]};
const colPerThread = ${r[0]};
const innerElementSize = ${m};
const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${s?"0":"i32(globalId.z)"};
  ${t?`let batchIndices = ${t.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${u};

  let num_tiles = ${s?`${Math.ceil(a/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${s?`i32(globalId.z) * ${a}`:"0"};

  var acc: array<vec4<${n}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${b};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${b_(o,t)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${b}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${t?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${m===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${y_(o,m)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},wb=(r,e)=>r?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${e?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${e?", batchIndices":""});
            `,v_=r=>r?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Xo=(r,e,n="f32",t,o=!1,i=32,s=!1,a=32,u=!1)=>{let l=r[1]*e[1],d=r[0]*e[0],p=o?l:i,m=o?i:l;if(!(m%e[1]===0&&p%e[0]===0&&i%e[1]===0))throw new Error(`tileAHight ${m} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${p} must be divisible by workgroupSize[0]${e[0]}, tileInner ${i} must be divisible by workgroupSize[1]${e[1]}`);let b=m/e[1],v=p/e[0],w=i/e[1],A=u?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${l};
    let globalColStart = i32(workgroupId.x) * ${d};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${m}; inputRow = inputRow + ${e[1]}) {
        for (var inputCol = localCol; inputCol < ${p}; inputCol = inputCol + ${e[0]}) {
          ${wb(o,t)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${i}; inputRow = inputRow + ${e[1]}) {
            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${e[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${t?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${n}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${o?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${e[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${e[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${l};

let tileRowA = i32(localId.y) * ${b};
let tileColA = i32(localId.x) * ${v};
let tileRowB = i32(localId.y) * ${w};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${b}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${v}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${wb(o,t)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${w}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${t?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${n}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${v_(o)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${n}, ${p}>, ${m}>;
  var<workgroup> mm_Bsub : array<array<${n}, ${d}>, ${i}>;
  const rowPerThread = ${r[1]};
  const colPerThread = ${r[0]};
  const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${s?"0":"i32(globalId.z)"};
    ${t?`let batchIndices = ${t.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${s?`${Math.ceil(a/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${s?`i32(globalId.z) * ${a}`:"0"};

    var acc : array<array<${n}, colPerThread>, rowPerThread>;

    // Without this initialization strange values show up in acc.
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = 0.0;
      }
    }
    ${A}
  }
`},w_=(r,e,n,t,o,i=!1)=>{let[s,a,u]=o,[l,d,p,m]=t,b=ro(s,u),v=ro(a,u),w=gt(t[0].type.tensor),A=()=>{let O=d.rank,P=l.rank,L=`var aIndices: ${d.type.indices};`;for(let F=O-2-1,G=P-1;F>=0;F--,G--)L+=`
aIndices[${F}] = ${P>1?`batchIndices[${G}]`:"batchIndices"};`;return b.forEach(F=>{L+=`
aIndices[${F}] = 0;`}),L+=`
aIndices[${O-2}] = u32(row);
                   aIndices[${O-1}] = u32(colIn);`,L},$=()=>{let O=p.rank,P=l.rank,L=`var bIndices: ${p.type.indices};`;for(let F=O-2-1,G=P-1;F>=0;F--,G--)L+=`
bIndices[${F}] = ${P>1?`batchIndices[${G}]`:"batchIndices"};`;return v.forEach(F=>{L+=`
bIndices[${F}] = 0;`}),L+=`
bIndices[${O-2}] = u32(row);
                   bIndices[${O-1}] = u32(colIn);`,L};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${$t(r,w)} {
      var value = ${$t(r,w)}(0.0);
      let col = colIn * ${r};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        ${A()}
        value = ${d.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${$t(r,w)} {
      var value = ${$t(r,w)}(0.0);
      let col = colIn * ${r};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        ${$()}
        value = ${p.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${$t(r,w)}) {
      let col = colIn * ${r};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${e?`value = value + ${i?"bias[colIn]":`${$t(r,w)}(bias[row])`};`:""}
        ${n}
        ${m.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},Ga=(r,e,n,t,o=!1)=>{let i=r[0].dims,s=r[1].dims,a=i.slice(0,-2),u=s.slice(0,-2),l=t?t.slice(0,-2):n.slice(0,-2),d=H.size(l),p=i[i.length-2],m=i[i.length-1],b=s[s.length-1],v=m%4===0&&b%4===0,w=p<=8?[4,1,1]:[4,4,1],A=[8,8,1],$=[Math.ceil(b/A[0]/w[0]),Math.ceil(p/A[1]/w[1]),Math.ceil(d/A[2]/w[2])],_=v?4:1,O=[...a,p,m/_],P=O.length,L=[...u,m,b/_],F=L.length,G=[d,p,b/_],J=[{type:"int32",data:p},{type:"int32",data:b},{type:"int32",data:m}];e.activation==="Clip"&&J.push({type:"float32",data:e.clipMax},{type:"float32",data:e.clipMin}),J.push(...K(l),...K(O),...K(L));let le=["rank","rank"],z=r.length>2;z&&(J.push(...K(r[2].dims)),le.push("rank")),J.push(...K(G));let q=Xe=>{let Ye=l.length,se=Da("batchDims",r[0].dataType,Ye,1),Ee=gt(r[0].dataType),ut=W("a",r[0].dataType,P,_),Te=W("b",r[1].dataType,F,_),Oe=ie("result",r[0].dataType,G.length,_),xe=[ut,Te];if(z){let yt=o?_:1;xe.push(W("bias",r[2].dataType,r[2].dims.length,yt))}let Pe=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];e.activation==="Clip"&&Pe.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"});let lt=Rr(e,Oe.type.value),Qe=w_(_,z,lt,[se,ut,Te,Oe],[a,u,l],o);return`
  ${Xe.registerUniforms(Pe).registerInternalVariables(se).declareVariables(...xe,Oe)}
  ${Qe}
  ${v?Yo(w,A,Ee,se):Xo(w,A,Ee,se)}
                   `};return{name:"MatMul",shaderCache:{hint:`${w};${e.activation};${v};${o}`,inputDependencies:le},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:$[0],y:$[1],z:$[2]},programUniforms:J}),getShaderSource:q}}});var x_,xb,_b=R(()=>{"use strict";on();ze();an();Va();Gu();Zo();x_=(r,e,n,t,o=!1,i,s=4,a=4,u=4,l="f32")=>{let d=z=>{switch(z){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${l}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${z} is not supported.`)}},p=z=>{switch(z){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${z} is not supported.`)}},m=r?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,b=r?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,v=r?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",w=r?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",A=r?"row":"col",$=r?"col":"row",_=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${A} / outWidth;
    let outCol = ${A} % outWidth;

    let WRow = ${$} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${$} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${$} % inChannels;
    var resData = ${$t(s,l)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${v} && xCol >= 0 && xCol < ${w}) {
      ${m}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${d(s)}
    }
    return resData;`,O=r?e&&t?`
    let col = colIn * ${s};
    ${_}`:`
    let col = colIn * ${s};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${_}
    }
    return ${$t(s,l)}(0.0);`:t&&n?`
    let col = colIn * ${s};
    ${_}`:`
    let col = colIn * ${s};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${_}
    }
    return ${$t(s,l)}(0.0);`,P=`${p(a)}`,L=$t(u,l),F=r?$t(s,l):$t(a,l),G=r?$t(a,l):$t(s,l),J=Rr(i,L);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${F} {
      ${r?O:P}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${G} {
      ${r?P:O}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${L}) {
      let col = colIn * ${u};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${b}
      ${Fa(o)}
      ${J}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},xb=(r,e,n,t,o,i,s,a)=>{let u=e.format==="NHWC",l=u?r[0].dims[3]:r[0].dims[1],d=n[0],p=u?n[2]:n[3],m=u?n[1]:n[2],b=u?n[3]:n[1],v=u&&(l%4===0||l%3===0)&&b%4===0,w=u?b:p*m,A=u?p*m:b,$=[8,8,1],_=t<=8?[4,1,1]:[4,4,1],O=[Math.ceil(w/$[0]/_[0]),Math.ceil(A/$[1]/_[1]),Math.ceil(d/$[2]/_[2])];at("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${O}`);let P=v?u&&l%4!==0?3:4:1,L=$[1]*_[1],F=$[0]*_[0],G=Math.max($[0]*P,$[1]),J=t%L===0,le=o%F===0,z=i%G===0,q=v?[P,4,4]:[1,1,1],Xe=[{type:"int32",data:t},{type:"int32",data:o},{type:"int32",data:i},{type:"int32",data:[e.pads[0],e.pads[1]]},{type:"int32",data:e.strides},{type:"int32",data:e.dilations}];e.activation==="Clip"&&Xe.push({type:"float32",data:e.clipMax},{type:"float32",data:e.clipMin}),Xe.push(...K(r[0].dims),...K(r[1].dims));let Ye=["rank","rank"];s&&(Xe.push(...K(r[2].dims)),Ye.push("rank")),Xe.push(...K(n));let se=Ee=>{let ut=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];e.activation==="Clip"&&ut.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"});let Te=v?4:1,Oe=gt(r[0].dataType),xe=`
      fn setOutputAtIndex(flatIndex : i32, value : ${v?`vec4<${Oe}>`:Oe}) {
        result[flatIndex] = ${v?`vec4<${Oe}>`:Oe}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${v?`vec4<${Oe}>`:Oe}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${v?"/ 4":""}, value);
      }`,Pe=W("x",r[0].dataType,r[0].dims.length,P===3?1:P),lt=W("w",r[1].dataType,r[1].dims.length,Te),Qe=[Pe,lt],yt=ie("result",r[0].dataType,n.length,Te);if(s){let Z=W("bias",r[2].dataType,r[2].dims.length,Te);Qe.push(Z),xe+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${v?`vec4<${Oe}>`:Oe} {
          return bias[coords.${u?"w":"y"}${v?"/ 4":""}];
        }`}return`
        ${Ua("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${Ee.registerUniforms(ut).declareVariables(...Qe,yt)}
        ${xe}
        ${x_(u,J,le,z,s,e,q[0],q[1],q[2],Oe)}
        ${v?Yo(_,$,Oe,void 0,!u,G):Xo(_,$,Oe,void 0,!u,G,!1,void 0,a)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${e.cacheKey};${P};${v};${J};${le};${z};${L};${F};${G}`,inputDependencies:Ye},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:O[0],y:O[1],z:O[2]},programUniforms:Xe}),getShaderSource:se}}});var Wu,Tb=R(()=>{"use strict";Ne();ze();qu();an();Wu=(r,e,n)=>{let t=r.length>2,o=t?"value += b[output_channel];":"",i=r[0].dims,s=r[1].dims,a=s[0]/e.group,u=e.format==="NHWC",l=Hu(i,s,e.dilations,e.pads,e.strides,u),d=H.size(l),p=[{type:"uint32",data:d},{type:"uint32",data:e.dilations},{type:"uint32",data:[e.strides[0],e.strides[1]]},{type:"uint32",data:[e.pads[0],e.pads[1]]},{type:"uint32",data:a}];e.activation==="Clip"&&p.push({type:"float32",data:e.clipMax},{type:"float32",data:e.clipMin}),p.push(...K(i),...K(s),...K(l));let m=["rank","rank"];t&&(p.push(...K(r[2].dims)),m.push("rank")),p.push(...K(l));let b=v=>{let w=ie("output",r[0].dataType,l.length),A=Rr(e,w.type.value),$=W("x",r[0].dataType,i.length),_=W("w",r[1].dataType,s.length),O=[$,_];t&&O.push(W("b",r[2].dataType,r[2].dims));let P=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:e.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return e.activation==="Clip"&&P.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}),`
  ${v.registerUniforms(P).declareVariables(...O,w)}

  ${v.mainStart()}
    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${w.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${u?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${u?1:2}], outputIndices[${u?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel / uniforms.output_channels_per_group;

    var value: ${w.type.value} = ${w.type.value}(0);
    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[${u?1:2}]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[${u?2:3}]) {
            continue;
          }

          let xVal = ${u?$.get("batch","xHeight","xWidth","input_channel"):$.get("batch","input_channel","xHeight","xWidth")};
          let wVal = ${_.get("output_channel","wInChannel","wHeight","wWidth")};
          value += xVal*wVal;
        }
      }
    }
    ${o}
    ${A}
    ${w.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:e.cacheKey,inputDependencies:m},getRunData:()=>({outputs:[{dims:n?n(l):l,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:p}),getShaderSource:b}}});var ju,__,$b,Ku=R(()=>{"use strict";Ne();Zo();ze();an();ju=(r,e,n,t,o=!1)=>{let i=r[0].dims,s=r[1].dims,a=i[i.length-2],u=s[s.length-1],l=i[i.length-1],d=bt(u),p=bt(l),m=bt(a),b=H.size(n)/d/m,v=r.length>2,w=t?t.slice(0,-2):n.slice(0,-2),$=[H.size(w),a,u],_=[{type:"uint32",data:b},{type:"uint32",data:a},{type:"uint32",data:u},{type:"uint32",data:l}];e.activation==="Clip"&&_.push({type:"float32",data:e.clipMax},{type:"float32",data:e.clipMin}),_.push(...K(w),...K(i),...K(s)),v&&_.push(...K(r[2].dims)),_.push(...K($));let O=P=>{let L=Da("batch_dims",r[0].dataType,w.length),F=W("a",r[0].dataType,i.length,p),G=W("b",r[1].dataType,s.length,d),J=ie("output",r[0].dataType,$.length,d),le=Rr(e,J.type.value),z=[F,G],q="";if(v){let xe=o?d:1;z.push(W("bias",r[2].dataType,r[2].dims.length,xe)),q=`${o?`value += bias[col / ${xe}];`:`value += ${J.type.value}(bias[row + i]);`}`}let Xe=i.slice(0,-2),Ye=s.slice(0,-2),se=ro(Xe,w),Ee=ro(Ye,w),ut=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];e.activation==="Clip"&&ut.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"});let Te=(xe,Pe)=>{let lt=xe.rank,Qe=xe.name;if(lt===2)return`var ${Qe}_indices = ${xe.type.indices}(0u, 0u);`;let yt=L.rank,Z=`var ${Qe}_indices: ${xe.type.indices};`;for(let ge=lt-2-1,Ie=yt-1;ge>=0;ge--,Ie--)Z+=`
${Qe}_indices[${ge}] = ${yt>1?`batch_indices[${Ie}]`:"batch_indices"};`;return Pe.forEach(ge=>{Z+=`
${Qe}_indices[${ge}] = 0;`}),Z+=`${Qe}_indices[${lt-2}] = 0u;
                     ${Qe}_indices[${lt-1}] = 0u;`,Z},Oe=()=>{let xe=`var a_data: ${F.type.value};`;for(let Pe=0;Pe<p;Pe++)xe+=`
              let b_data${Pe} = b[(b_offset + (k + ${Pe}) * uniforms.N + col) / ${d}];`;for(let Pe=0;Pe<m;Pe++){xe+=`a_data = a[(a_offset + (row + ${Pe}) * uniforms.K + k) / ${p}];`;for(let lt=0;lt<p;lt++)xe+=`
            values[${Pe}] = fma(${G.type.value}(a_data${p===1?"":`[${lt}]`}), b_data${lt}, values[${Pe}]);
`}return xe};return`
  ${P.registerUniforms(ut).registerInternalVariables(L).declareVariables(...z,J)}
  ${P.mainStart()}
    ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${d})) * ${d};
    var index1 = global_idx / (uniforms.N / ${d});
    let stride1 = uniforms.M / ${m};
    let row = (index1 % stride1) * ${m};
    let batch = index1 / stride1;

    ${n.length===2?"":`let batch_indices = ${L.offsetToIndices("batch")};`}
    ${Te(F,se)}
    let a_offset = ${F.indicesToOffset("a_indices")};
    ${Te(G,Ee)}
    let b_offset = ${G.indicesToOffset("b_indices")};
    var values: array<${J.type.value}, ${m}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${p}) {
      ${Oe()}
    }
    for (var i = 0u; i < ${m}u; i++) {
      var value = values[i];
      ${q}
      ${le}
      let cur_indices = ${J.type.indices}(batch, row + i, col);
      let offset = ${J.indicesToOffset("cur_indices")};
      ${J.setByOffset(`offset / ${d}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${e.activation};${d};${p};${m};${o}`,inputDependencies:v?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:_}),getShaderSource:O}},__=r=>{if(!r||r.length!==2)throw new Error("MatMul requires 2 inputs.");if(r[0].dims[r[0].dims.length-1]!==r[1].dims[r[1].dims.length-2])throw new Error("shared dimension does not match.")},$b=r=>{__(r.inputs);let e=Cr.calcShape(r.inputs[0].dims,r.inputs[1].dims,!0);if(!e)throw new Error("Can't use matmul on the given tensors");let n=e[e.length-1],t=r.inputs[0].dims[r.inputs[0].dims.length-1];n<8&&t<8?r.compute(ju(r.inputs,{activation:""},e)):r.compute(Ga(r.inputs,{activation:""},e))}});var Hu,Sb,T_,Ib,Yu,$_,S_,Xu,qu=R(()=>{"use strict";Ne();_b();Zo();Tb();an();Ku();no();Hu=(r,e,n,t,o,i)=>{let s=r[0],a=r.slice(i?1:2,i?3:4),u=a.length,l=e[0],p=e.slice(2).map((v,w)=>v+(v-1)*(n[w]-1)),b=a.map((v,w)=>v+t[w]+t[w+u]).map((v,w)=>Math.floor((v-p[w]+o[w])/o[w]));return b.splice(0,0,s),b.splice(i?3:1,0,l),b},Sb=[2,3,1,0],T_=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4&&r[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(r[0].dims.length!==r[1].dims.length)throw new Error("filter does not have same dimension as input");let n=r[0].dims[e.format==="NHWC"?r[0].dims.length-1:1],t=r[1].dims[1]*e.group;if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(r.length===3&&(r[2].dims.length!==1||r[1].dims[0]!==r[2].dims[0]))throw new Error("invalid bias");let o=r[0].dims.length-2;if(e.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(e.strides.length!==o)throw new Error(`strides should be ${o}D`);if(e.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape")},Ib=(r,e)=>{let n=r.kernelShape.slice();for(let i=2;i<e[1].dims.length;++i)n[i-2]===0&&(n[i-2]=e[1].dims[i]);let t=r.pads.slice();En.adjustPadsBasedOnAutoPad(e[0].dims,r.strides,r.dilations,n,t,r.format==="NHWC",r.autoPad);let o=Object.assign({},r);return Object.assign(o,{kernelShape:n,pads:t}),o},Yu=r=>{let e=Na(r),n=r.format,t=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][r.auto_pad],o=r.dilations,i=r.group,s=r.kernel_shape,a=r.pads,u=r.strides,l=r.w_is_const();return{autoPad:t,format:n,dilations:o,group:i,kernelShape:s,pads:a,strides:u,wIsConst:l,...e,cacheKey:`${r.format};${e.activation};`}},$_=(r,e,n)=>{let t=Ib(n,e),o=n.format==="NHWC";if(n.group!==1){r.compute(Wu(e,t));return}let i=e.length===3,s=e[0].dims[o?1:2],a=e[0].dims[o?2:3],u=e[0].dims[o?3:1],l=e[1].dims[2],d=e[1].dims[3],p=Hu(e[0].dims,e[1].dims,n.dilations,t.pads,n.strides,o),m=p[o?1:2],b=p[o?2:3],v=p[o?3:1],w=o&&l===s&&d===a&&n.pads[0]===0&&n.pads[1]===0;if(w||l===1&&d===1&&n.dilations[0]===1&&n.dilations[1]===1&&n.strides[0]===1&&n.strides[1]===1&&n.pads[0]===0&&n.pads[1]===0){let F=p[0],G,J,le,z=[];if(o){let Ye=r.kernelCustomData.wT??r.compute(wr(e[1],Sb),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];if(n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=Ye),w){let se=s*a*u;G=e[0].reshape([1,F,se]),J=Ye.reshape([1,se,v]),le=[1,F,v]}else G=e[0].reshape([F,s*a,u]),J=Ye.reshape([1,u,v]),le=[F,m*b,v];z.push(G),z.push(J)}else G=e[0].reshape([F,u,s*a]),J=e[1].reshape([1,v,u]),le=[F,v,m*b],z.push(J),z.push(G);i&&z.push(e[2]);let q=le[2],Xe=z[0].dims[z[0].dims.length-1];q<8&&Xe<8?r.compute(ju(z,t,p,le,o),{inputs:z}):r.compute(Ga(z,t,p,le,o),{inputs:z});return}let A=!0,$=r.kernelCustomData.wT??r.compute(wr(e[1],Sb),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=$);let _=[e[0],$];i&&_.push(e[2]);let O=o?m*b:v,P=o?v:m*b,L=l*d*u;r.compute(xb(_,t,p,O,P,L,i,A),{inputs:_})},S_=(r,e)=>{let n=e.format==="NHWC",t=[r.inputs[0].reshape(n?[r.inputs[0].dims[0],1,r.inputs[0].dims[1],r.inputs[0].dims[2]]:[r.inputs[0].dims[0],r.inputs[0].dims[1],1,r.inputs[0].dims[2]]),r.inputs[1].reshape([r.inputs[1].dims[0],r.inputs[1].dims[1],1,r.inputs[1].dims[2]])];r.inputs.length===3&&t.push(r.inputs[2]);let o=[0,e.pads[0],0,e.pads[1]],i=[1].concat(e.strides),s=[1].concat(e.dilations),a=[1].concat(e.kernelShape),u=Ib({...e,pads:o,strides:i,dilations:s,kernelShape:a},t);r.compute(Wu(t,u,l=>n?[l[0],l[2],l[3]]:[]))},Xu=(r,e)=>{T_(r.inputs,e),r.inputs[0].dims.length===3?S_(r,e):$_(r,r.inputs,e)}});var I_,Ab,Ob=R(()=>{"use strict";on();ze();an();Va();Gu();Zo();I_=(r,e=!1,n,t=4)=>{let o=$t(t,"f32"),i=$=>{switch($){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];
            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];
            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];
            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${$} is not supported.`)}},s=r?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,a=r?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,u=r?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",l=r?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",d=r?"row":"col",p=r?"col":"row",m=`
      let inChannels = ${r?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      let outRow = ${d} / outWidth;
      let outCol = ${d} % outWidth;

      let WRow = ${p} / (uniforms.filter_dims[1] * inChannels);
      let WCol = ${p} / inChannels % uniforms.filter_dims[1];
      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(${u}) || fract(xR) > 0.0) {
        return ${o}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${l}) || fract(xC) > 0.0) {
        return ${o}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${p} % inChannels;
      ${s}
      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${t}];`,b=r?`
      let col = colIn * ${t};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
        ${m}
      }
      return ${o}(0.0);`:`
      let col = colIn * ${t};
      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
        ${m}
      }
      return ${o}(0.0);`,v=`
      let col = colIn * ${t};
      let inChannels = ${r?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);
      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];
      if (${r?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${i(t)}
      }
      return ${o}(0.0);
      `,w=Rr(n,o);return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${o} {
    ${r?b:v}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${o} {
    ${r?v:b}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${o}) {
    let col = colIn * ${t};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
      var value = valueInput;
      let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${a}
      ${Fa(e)}
      ${w}
      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${t}] = value;
    }
  }`},Ab=(r,e,n,t,o,i,s,a)=>{let u=e.format==="NHWC",l=u?r[0].dims[3]:r[0].dims[1],d=n[0],p=u?n[2]:n[3],m=u?n[1]:n[2],b=u?n[3]:n[1],v=u?l%4===0&&b%4===0:p%4===0&&b%4===0,w=u?b:p*m,A=u?p*m:b,$=v?[8,8,1]:[w<=4||A<=4?4:16,w>4&&A<=4?4:16,1],_=v?[4,4,1]:[w<=4?1:4,w>4&&A<=4?1:4,1],O=[Math.ceil(w/$[0]/_[0]),Math.ceil(A/$[1]/_[1]),Math.ceil(d/$[2]/_[2])];at("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${O}`);let P=v?4:1,L=Math.max($[0]*P,$[1]),F=v?4:1,G=[e.kernelShape[u?1:2],e.kernelShape[u?2:3]],J=[G[0]+(e.dilations[0]<=1?0:(G[0]-1)*(e.dilations[0]-1)),G[1]+(e.dilations[1]<=1?0:(G[1]-1)*(e.dilations[1]-1))],le=[J[0]-1-Math.floor((e.pads[0]+e.pads[2])/2),J[1]-1-Math.floor((e.pads[1]+e.pads[3])/2)],z=[{type:"int32",data:t},{type:"int32",data:o},{type:"int32",data:i},{type:"int32",data:e.strides},{type:"int32",data:e.dilations},{type:"int32",data:G},{type:"int32",data:le}];e.activation==="Clip"&&z.push({type:"float32",data:e.clipMax},{type:"float32",data:e.clipMin}),z.push(...K(r[0].dims),...K(r[1].dims));let q=["rank","rank"];s&&(z.push(...K(r[2].dims)),q.push("rank")),z.push(...K(n));let Xe=Ye=>{let se=W("x",r[0].dataType,r[0].dims.length,F),Ee=W("w",r[1].dataType,r[1].dims.length,1),ut=ie("result",r[0].dataType,n.length,F),Te=[se,Ee],Oe="";if(s){let Pe=W("bias",r[2].dataType,r[2].dims.length,F);Te.push(Pe),Oe+=`
          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${v?"vec4<f32>":"f32"} {
            return bias[coords.${u?"w":"y"}${v?"/ 4":""}];
          }`}let xe=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:G.length},{name:"pads",type:"i32",length:le.length}];return e.activation==="Clip"&&xe.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}),`
        ${Ua("uniforms.result_strides")}
        ${Ye.registerUniforms(xe).declareVariables(...Te,ut)};
        ${Oe}
        ${I_(u,s,e,P)}
        ${v?Yo(_,$,"f32",void 0,!u,L):Xo(_,$,"f32",void 0,!u,L,!1,void 0,a)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${e.cacheKey};${_};${$};${v}`,inputDependencies:q},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:O[0],y:O[1],z:O[2]},programUniforms:z}),getShaderSource:Xe}}});var A_,Zu,Cb=R(()=>{"use strict";on();Ne();ze();A_=(r,e,n,t,o,i=!1,s,a,u=!1)=>{let l=u?1:2,d=u?2:3,p=u?3:1,m=i?2:1,b=`
  fn setOutputAtIndex(flatIndex : u32, value : ${i?`vec4<${s}>`:s}) {
    result[flatIndex] = ${i?`vec4<${s}>`:s}(value);
  }`;t&&(b+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${i?`vec4<${s}>`:s} {
      return bias[coords.${u?"w":"y"}${i?"/ 4":""}];
    }`);let v=i?4:1,w=W("W",e[1].dataType,e[1].dims.length,v),A=W("Dy",e[0].dataType,e[0].dims.length,v),$=[A,w];t&&$.push(W("bias",e[2].dataType,[n[p]].length,v));let _=ie("result",e[0].dataType,n.length,v),O=`{
        let batch: u32 = ${o?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];
        let r = ${o?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];
        let c = ${o?"global_id.y":"workgroup_id.y"} * ${m};
        let d1: u32 = ${o?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${s}>, ${m}>;
        for (var i = 0; i < ${m}; i++) {
          dotProd[i] = vec4<${s}>(0.0);
        }
        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {
          var dyR = (${s}(dyCorner.x) + ${s}(wR)) / ${s}(uniforms.strides.x);
          let wRPerm = uniforms.filter_dims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${s}(uniforms.Dy_shape[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {
            let dyC = (${s}(dyCorner.y) + ${s}(wC)) / ${s}(uniforms.strides.y);
            let dyC2 = (${s}(dyCorner.y) + 1.0 + ${s}(wC)) / ${s}(uniforms.strides.y);
            let wCPerm = uniforms.filter_dims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${s}(uniforms.Dy_shape[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${s}(uniforms.Dy_shape[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${A.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${s}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${A.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${s}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = uniforms.Dy_shape[${p}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${A.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${s}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${A.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${s}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${m}; i = i + 1) {
          let value = dotProd[i] + ${t?"bias[c+i]":`vec4<${s}>(0.0)`};
          ${_.set("batch","r","c + i","d1","value")};
        }
      }`,P=`
          let outputIndices = ${_.offsetToIndices("global_idx")};
          let batch = ${_.indicesGet("outputIndices",0)};
          let d1 = ${_.indicesGet("outputIndices",p)};
          let r = ${_.indicesGet("outputIndices",l)};
          let c = ${_.indicesGet("outputIndices",d)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / uniforms.output_channels_per_group;
          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = ${s}(0.0);
          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
            if (wR % uniforms.dilations.x != 0) {
              continue;
            }
            let dyR = (${s}(dyRCorner) + ${s}(wR)) / ${s}(uniforms.strides[0]);
            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
            if (dyR < 0.0 || dyR >= ${s}(uniforms.Dy_shape[${l}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
              if (wC % uniforms.dilations.y != 0) {
                continue;
              }
              let dyC = (${s}(dyCCorner) + ${s}(wC)) / ${s}(uniforms.strides.y);
              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
              if (dyC < 0.0 || dyC >= ${s}(uniforms.Dy_shape[${d}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * uniforms.input_channels_per_group;
              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {
                let xValue = ${u?A.get("batch","idyR","idyC","inputChannel"):A.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${w.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${t?"bias[d1]":`${s}(0.0)`};
          ${_.setByOffset("global_idx","value")};
        `;return`
  ${r.registerUniforms(a).declareVariables(...$,_)}
  ${b}

    ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
  ${i?O:P}}`},Zu=(r,e,n)=>{let t=r.length>2,o=e.outputShape,i=H.size(o),s=[Math.ceil(i/64),1,1];at("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${s}`);let a=e.format==="NHWC",u=["rank","rank"],l=[e.strides[0],e.strides[1]],d=[e.kernelShape[a?1:2],e.kernelShape[a?2:3]],p=[e.dilations[0],e.dilations[1]],m=[d[0]+(e.dilations[0]<=1?0:(e.kernelShape[a?1:2]-1)*(e.dilations[0]-1)),d[1]+(e.dilations[1]<=1?0:(e.kernelShape[a?2:3]-1)*(e.dilations[1]-1))],b=[m[0]-1-Math.floor((e.pads[0]+e.pads[2])/2),m[1]-1-Math.floor(e.pads[1]+e.pads[3])/2],v=!1,w=e.group,A=r[1].dims,$=A[0]/w,_=A[1],O=[{type:"int32",data:i},{type:"uint32",data:l},{type:"uint32",data:d},{type:"uint32",data:p},{type:"uint32",data:m},{type:"int32",data:b},{type:"uint32",data:$},{type:"uint32",data:_},...K(r[0].dims),...K(r[1].dims)];t&&(O.push(...K(r[2].dims)),u.push("rank")),O.push(...K(o));let P=s[1]===1&&s[2]===1,L=F=>{let G=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:l.length},{name:"filter_dims",type:"u32",length:d.length},{name:"dilations",type:"u32",length:d.length},{name:"effective_filter_dims",type:"u32",length:m.length},{name:"pads",type:"i32",length:b.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],J=gt(r[0].dataType);return`${A_(F,r,o,t,P,v,J,G,a)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${e.cacheKey};`,inputDependencies:u},getRunData:()=>({dispatchGroup:{x:s[0],y:s[1],z:s[2]},outputs:[{dims:n?n(o):o,dataType:r[0].dataType}],programUniforms:O}),getShaderSource:L}}});var O_,C_,E_,Eb,Pb,P_,k_,D_,B_,kb,Db=R(()=>{"use strict";Ob();Cb();an();no();O_=(r,e,n,t,o,i)=>(r-1)*e+n+(t-1)*o+1-i,C_=(r,e,n,t,o)=>{let i=Math.floor(r/2);e==="SAME_UPPER"?(n[t]=i,n[o]=r-i):e==="SAME_LOWER"&&(n[t]=r-i,n[o]=i)},E_=(r,e,n,t,o,i,s,a,u,l)=>{let d=r.length-2,p=l.length===0;if(u.length===0)for(let v=0;v<d;++v)u.push(0);let m=r[0],b=e[a?3:1]*o;for(let v=0,w=r.length-d-(a?1:0);v<d;++v,++w){let A=r[w],$=p?A*s[v]:l[v],_=O_(A,s[v],i[v],e[w],n[v],$);C_(_,t,i,v,v+d),p&&l.push(s[v]*(A-1)+u[v]+(e[w]-1)*n[v]+1-i[v]-i[v+d])}l.splice(0,0,m),l.splice(a?3:1,0,b)},Eb=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0||r.kernelShape.reduce((p,m)=>p*m,1)===0){n.length=0;for(let p=2;p<e[1].dims.length;++p)n.push(e[1].dims[p])}let t=r.format==="NHWC";n.splice(0,0,e[1].dims[0]),n.splice(t?3:1,0,e[1].dims[1]);let o=r.pads.slice(),i=r.outputShape.slice(),s=r.outputPadding.slice(),a=e[0].dims,u=r.dilations.slice();if(u.reduce((p,m)=>p+m,0)===0){let p=e[0].dims.length-2;u=new Array(p).fill(1)}let l=r.strides.slice();if(l.reduce((p,m)=>p+m,0)===0){let p=e[0].dims.length-2;l=new Array(p).fill(1)}E_(a,n,u,r.autoPad,r.group,o,l,t,s,i);let d=Object.assign({},r);return Object.assign(d,{kernelShape:n,pads:o,outputPadding:s,outputShape:i,dilations:u,strides:l}),d},Pb=r=>{let e=Na(r),n=r.format,t=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof r.autoPad>"u"?0:r.autoPad],o=r.dilations,i=r.group,s=r.kernelShape,a=r.pads,u=r.strides,l=r.wIsConst(),d=r.outputPadding,p=r.outputShape;return{autoPad:t,format:n,dilations:o,group:i,kernelShape:s,outputPadding:d,outputShape:p,pads:a,strides:u,wIsConst:l,...e,cacheKey:`${r.format};${e.activation};`}},P_=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4&&r[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(r[0].dims.length!==r[1].dims.length)throw new Error("filter does not have same dimension as input");let n=r[0].dims[e.format==="NHWC"?r[0].dims.length-1:1],t=r[1].dims[0];if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=r[1].dims[1]*e.group;if(r.length===3&&(r[2].dims.length!==1||r[2].dims[0]!==o))throw new Error("invalid bias");let i=r[0].dims.length-2;if(e.dilations.reduce((d,p)=>d+p,0)>0&&e.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(e.strides.reduce((d,p)=>d+p,0)>0&&e.strides.length!==i)throw new Error(`strides should be ${i}D`);if(e.pads.reduce((d,p)=>d+p,0)>0&&e.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(e.outputPadding.length!==i&&e.outputPadding.length!==0)throw new Error(`output_padding should be ${i}D`);if(e.kernelShape.reduce((d,p)=>d+p,0)>0&&e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==r[0].dims.length-2)throw new Error("invalid output shape")},k_=[2,3,1,0],D_=(r,e,n)=>{let t=Eb(n,e),o=n.format==="NHWC",i=t.outputShape,s=i[o?3:1],a=e[0].dims[o?3:1];if(t.group!==1||s===1&&a===1){r.compute(Zu(e,t));return}let u=i[o?1:2],l=i[o?2:3],d=e[1].dims[2],p=e[1].dims[3],m=o?u*l:s,b=o?s:u*l,v=d*p*a,w=!0,A=r.kernelCustomData.wT??r.compute(wr(e[1],k_),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=A);let $=[e[0],A],_=e.length===3;_&&(!o&&e[2].dims.length===1?$.push(e[2].reshape([e[2].dims[0],1,1])):$.push(e[2])),r.compute(Ab($,t,i,m,b,v,_,w),{inputs:$})},B_=(r,e)=>{let n=e.format==="NHWC",t=[r.inputs[0].reshape(n?[r.inputs[0].dims[0],1,r.inputs[0].dims[1],r.inputs[0].dims[2]]:[r.inputs[0].dims[0],r.inputs[0].dims[1],1,r.inputs[0].dims[2]]),r.inputs[1].reshape([r.inputs[1].dims[0],r.inputs[1].dims[1],1,r.inputs[1].dims[2]])];t.length===3&&t.push(r.inputs[2]);let o=e.kernelShape;(o.length===0||o[0]===0)&&(o=[r.inputs[1].dims[2]]);let i=e.dilations;(i.length===0||i[0]===0)&&(i=[1]);let s=e.strides;(s.length===0||s[0]===0)&&(s=[1]);let a=e.pads;a.length===0&&(a=[0,0]),a=[0,a[0],0,a[1]],s=[1].concat(s),i=[1].concat(i),o=[1].concat(o);let u=Eb({...e,pads:a,strides:s,dilations:i,kernelShape:o},t);r.compute(Zu(t,u,l=>n?[l[0],l[2],l[3]]:[l[0],l[1],l[3]]))},kb=(r,e)=>{P_(r.inputs,e),r.inputs[0].dims.length===3?B_(r,e):D_(r,r.inputs,e)}});var R_,Bb,Rb,zb=R(()=>{"use strict";st();Ne();Et();ze();R_=(r,e,n,t)=>{let o=H.size(e),i=e.length,s=W("input",r,i),a=ie("output",r,i),u=n.dataType===6?n.getInt32Array()[0]:Number(n.getBigInt64Array()[0]),l=H.normalizeAxis(u,i),d=p=>{let m=` i32(${s.indicesGet("inputIndices","uniforms.axis")}) `,b=_e("uniforms.input_shape","uniforms.axis",i),v=t.reverse?m+(t.exclusive?" + 1":""):"0",w=t.reverse?b:m+(t.exclusive?"":" + 1");return`
                ${p.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(s,a)}
                ${p.mainStart()}
                  ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${a.offsetToIndices("global_idx")};
                  var sum = ${a.type.value}(0);
                  let first : i32 = ${v};
                  let last : i32 = ${w};
                  for (var i : i32 = first; i < last; i++) {
                    ${s.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${s.getByIndices("inputIndices")};
                  }
                  ${a.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:e,dataType:r}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:"uint32",data:o},{type:"int32",data:l},...K(e),...K(e)]}),getShaderSource:d}},Bb=(r,e)=>{let n=r.inputs[0].dims,t=r.inputs[0].dataType,o=r.inputs[1];r.compute(R_(t,n,o,e),{inputs:[0]})},Rb=r=>{let e=r.exclusive===1,n=r.reverse===1;return Le({exclusive:e,reverse:n})}});var Ju,Wa,Mb,z_,M_,Qu,el,Lb,L_,Nb,Fb,Vb=R(()=>{"use strict";Ne();Et();ze();Ju="[a-zA-Z]|\\.\\.\\.",Wa="("+Ju+")+",Mb="^"+Wa+"$",z_="("+Wa+",)*"+Wa,M_="^"+z_+"$",Qu=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,n){let t=this.symbolToIndices.get(e);t===void 0?t=[n]:t.push(n),this.symbolToIndices.set(e,t)}},el=class{constructor(e,n){this.equation=n;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[t,o]=n.includes("->")?n.split("->",2):[n,""];if(!t.match(RegExp(M_)))throw new Error("Invalid LHS term");if(t.split(",").forEach((a,u)=>{let l=e[u].dims.slice();if(!a.match(RegExp(Mb)))throw new Error("Invalid LHS term");let d=this.processTerm(a,!0,l,u);this.lhs.push(d)}),o==="")o+=[...this.symbolToInfo.entries()].filter(([a,u])=>u.count===1||a==="...").map(([a])=>a).join("");else if(!o.match(RegExp(Wa)))throw new Error("Invalid RHS");o.match(RegExp(Ju,"g"))?.forEach(a=>{if(a==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let u=this.symbolToInfo.get(a);if(u===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(u.dimValue)}}),this.rhs=this.processTerm(o,!1,this.outputDims)}addSymbol(e,n,t){let o=this.symbolToInfo.get(e);if(o!==void 0){if(o.dimValue!==n&&o.count!==1)throw new Error("Dimension mismatch");o.count++,o.inputIndices.push(t)}else o={count:1,dimValue:n,inputIndices:[t]};this.symbolToInfo.set(e,o)}processTerm(e,n,t,o=-1){let i=t.length,s=!1,a=[],u=0;if(!e.match(RegExp(Mb))&&!n&&e!=="")throw new Error("Invalid LHS term");let l=e.match(RegExp(Ju,"g")),d=new Qu(o);return l?.forEach((p,m)=>{if(p==="..."){if(s)throw new Error("Only one ellipsis is allowed per input term");s=!0;let b=i-l.length+1;if(b<0)throw new Error("Ellipsis out of bounds");if(a=t.slice(u,u+b),this.hasEllipsis){if(this.ellipsisDims.length!==a.length||this.ellipsisDims.toString()!==a.toString())throw new Error("Ellipsis dimensions mismatch")}else if(n)this.hasEllipsis=!0,this.ellipsisDims=a;else throw new Error("Ellipsis must be specified in the LHS");for(let v=0;v<a.length;v++){let w=String.fromCharCode("0".charCodeAt(0)+v);d.addSymbol(w,m+v),this.addSymbol(w,t[u++],o)}}else d.addSymbol(p,m+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(p,t[u++],o)}),d}},Lb=r=>r+"_max",L_=(r,e,n,t)=>{let i=r.map(d=>d.length).map((d,p)=>W(`input${p}`,e,d)),s=H.size(t),a=ie("output",e,t.length),u=[...n.symbolToInfo.keys()].filter(d=>!n.rhs.symbolToIndices.has(d)),l=d=>{let p=[],m="var prod = 1.0;",b="var sum = 0.0;",v="sum += prod;",w=[],A=[],$=[],_=[],O=n.symbolToInfo.size===n.rhs.symbolToIndices.size;n.symbolToInfo.forEach((L,F)=>{if(n.rhs.symbolToIndices.has(F)){let G=n.rhs.symbolToIndices.get(F)?.[0];G!==void 0&&n.lhs.forEach((J,le)=>{if(L.inputIndices.includes(le)){let z=J.symbolToIndices.get(F);if(z===void 0)throw new Error("Invalid symbol error");z.forEach(q=>{p.push(`${i[le].indicesSet(`input${le}Indices`,q,a.indicesGet("outputIndices",G))}`)})}})}else n.lhs.forEach((G,J)=>{if(L.inputIndices.includes(J)){let le=G.symbolToIndices.get(F);if(le===void 0)throw new Error("Invalid symbol error");le.forEach(z=>{w.push(`${i[J].indicesSet(`input${J}Indices`,z,`${F}`)}`)}),_.push(`prod *= ${i[J].getByIndices(`input${J}Indices`)};`)}}),A.push(`for(var ${F}: u32 = 0; ${F} < uniforms.${Lb(F)}; ${F}++) {`),$.push("}")});let P=O?[...p,`let sum = ${i.map((L,F)=>L.getByIndices(`input${F}Indices`)).join(" * ")};`]:[...p,b,...A,...w,m,..._,v,...$];return`
            ${d.registerUniforms(u.map(L=>({name:`${Lb(L)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...i,a)}

            ${d.mainStart()}
            ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${a.offsetToIndices("global_idx")};
            ${i.map((L,F)=>`var input${F}Indices: ${i[F].type.indices};`).join(`
`)}
            ${P.join(`
`)};
            ${a.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:n.equation,inputDependencies:r.map(()=>"rank")},getRunData:()=>{let d=u.filter(m=>n.symbolToInfo.has(m)).map(m=>({type:"uint32",data:n.symbolToInfo.get(m)?.dimValue||0}));d.push({type:"uint32",data:s});let p=r.map((m,b)=>[...K(m)]).reduce((m,b)=>m.concat(b),d);return p.push(...K(t)),{outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:p}},getShaderSource:l}},Nb=(r,e)=>{let n=new el(r.inputs,e.equation),t=n.outputDims,o=r.inputs.map((i,s)=>i.dims);r.compute(L_(o,r.inputs[0].dataType,n,t))},Fb=r=>{let e=r.equation.replace(/\s+/g,"");return Le({equation:e})}});var N_,Ub,F_,V_,Gb,Wb=R(()=>{"use strict";st();Ne();ze();N_=r=>{if(!r||r.length!==2)throw new Error("Expand requires 2 input.");let e=r[0].dims,n=Array.from(r[1].getBigInt64Array(),Number),t=n.length<e.length?0:n.length-e.length,o=e.length<n.length?0:e.length-n.length;for(;t<n.length&&o<e.length;++t,++o)if(n[t]!==e[o]&&n[t]!==1&&e[o]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Ub=(r,e)=>{let n=r.length-e.length,t=[];for(let o=0;o<n;++o)t.push(r[o]);for(let o=0;o<e.length;++o)t.push(e[o]===1?r[o+n]:e[o]);return t},F_=(r,e)=>r.length>e.length?Ub(r,e):Ub(e,r),V_=r=>{let e=r[0].dims,n=Array.from(r[1].getBigInt64Array(),Number),t=F_(e,n),o=r[0].dataType,i=o===9?4:1,s=Math.ceil(H.size(t)/i),a=l=>{let d=W("input",o,e.length,i),p=ie("output",o,t.length,i),m;if(o===9){let b=(v,w,A="")=>`
          let outputIndices${w} = ${p.offsetToIndices(`outputOffset + ${w}u`)};
          let offset${w} = ${d.broadcastedIndicesToOffset(`outputIndices${w}`,p)};
          let index${w} = offset${w} / 4u;
          let component${w} = offset${w} % 4u;
          ${v}[${w}] = ${A}(${d.getByOffset(`index${w}`)}[component${w}]);
        `;m=`
        let outputOffset = global_idx * ${i};
        var data = vec4<u32>(0);
        ${b("data",0,"u32")}
        ${b("data",1,"u32")}
        ${b("data",2,"u32")}
        ${b("data",3,"u32")}
        ${p.setByOffset("global_idx","data")}
      }`}else m=`
        let outputIndices = ${p.offsetToIndices("global_idx")};
        let inputOffset = ${d.broadcastedIndicesToOffset("outputIndices",p)};
        ${p.setByOffset("global_idx",d.getByOffset("inputOffset"))}
      }`;return`
    ${l.registerUniform("vec_size","u32").declareVariables(d,p)}
    ${l.mainStart()}
    ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${m}`},u=[{type:"uint32",data:s},...K(e),...K(t)];return{name:"Expand",shaderCache:{hint:`${t.length}`,inputDependencies:["rank"]},getShaderSource:a,getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:u})}},Gb=r=>{N_(r.inputs),r.compute(V_(r.inputs),{inputs:[0]})}});var U_,G_,Hb,qb,jb=R(()=>{"use strict";st();Ne();Et();ze();U_=r=>{if(!r||r.length!==2)throw new Error("Gather requires 2 inputs.")},G_=(r,e)=>{let n=r[0].dims,t=r[1].dims,o=n.length,i=H.normalizeAxis(e.axis,o),s=n.slice(0);s.splice(i,1,...t);let a=n[i],u=r[0].dataType===9?4:1,l=Math.ceil(H.size(s)/u),d=[{type:"uint32",data:l},{type:"int32",data:a},{type:"uint32",data:i},...K(r[0].dims),...K(r[1].dims),...K(s)],p=m=>{let b=W("data",r[0].dataType,r[0].dims.length,u),v=W("inputIndices",r[1].dataType,r[1].dims.length),w=ie("output",r[0].dataType,s.length,u),A=_=>{let O=t.length,P=`var indicesIndices${_}  = ${v.type.indices}(0);`;for(let L=0;L<O;L++)P+=`${O>1?`indicesIndices${_}[${L}]`:`indicesIndices${_}`} = ${s.length>1?`outputIndices${_}[uniforms.axis + ${L}]`:`outputIndices${_}`};`;P+=`
          var idx${_} = ${v.getByIndices(`indicesIndices${_}`)};
          if (idx${_} < 0) {
            idx${_} = idx${_} + uniforms.axisDimLimit;
          }
          var dataIndices${_} = ${b.type.indices}(0);
        `;for(let L=0,F=0;L<o;L++)L===i?(P+=`${o>1?`dataIndices${_}[${L}]`:`dataIndices${_}`} = u32(idx${_});`,F+=O):(P+=`${o>1?`dataIndices${_}[${L}]`:`dataIndices${_}`} = ${s.length>1?`outputIndices${_}[${F}]`:`outputIndices${_}`};`,F++);return P},$;if(r[0].dataType===9){let _=(O,P,L="")=>`
          let outputIndices${P} = ${w.offsetToIndices(`outputOffset + ${P}u`)};
          ${A(P)};
          let offset${P} = ${b.indicesToOffset(`dataIndices${P}`)};
          let index${P} = offset${P} / 4u;
          let component${P} = offset${P} % 4u;
          ${O}[${P}] = ${L}(${b.getByOffset(`index${P}`)}[component${P}]);
        `;$=`
        let outputOffset = global_idx * ${u};
        var value = vec4<u32>(0);
        ${_("value",0,"u32")}
        ${_("value",1,"u32")}
        ${_("value",2,"u32")}
        ${_("value",3,"u32")}
        ${w.setByOffset("global_idx","value")}
      `}else $=`
      let outputIndices = ${w.offsetToIndices("global_idx")};
      ${A("")};
      let value = ${b.getByIndices("dataIndices")};
      ${w.setByOffset("global_idx","value")};
      `;return`
      ${m.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(b,v,w)}
      ${m.mainStart()}
        ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${$}
      }`};return{name:"Gather",shaderCache:{hint:e.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:s,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:p}},Hb=r=>Le({axis:r.axis}),qb=(r,e)=>{let n=r.inputs;U_(n),r.compute(G_(r.inputs,e))}});var W_,H_,Kb,Yb,Xb=R(()=>{"use strict";Ne();Et();ze();W_=r=>{if(!r||r.length!==2)throw new Error("GatherElements requires 2 inputs.");if(r[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(r[0].dims.length!==r[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},H_=(r,e)=>{let n=r[0].dims,t=r[0].dataType,o=n.length,i=r[1].dims,s=r[1].dataType,a=H.normalizeAxis(e.axis,o),u=n[a],l=i.slice(0),d=H.size(l),p=W("input",t,o),m=W("indicesInput",s,i.length),b=ie("output",t,l.length),v=[{type:"uint32",data:d},{type:"int32",data:u},{type:"uint32",data:a}];return v.push(...K(n)),v.push(...K(i)),v.push(...K(l)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:l,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:v}),getShaderSource:$=>`
      ${$.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(p,m,b)}
      ${$.mainStart()}
      ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${b.offsetToIndices("global_idx")};

      var idx = ${m.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${p.type.indices}(outputIndices);
      ${p.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${p.getByIndices("inputIndices")};

      ${b.setByOffset("global_idx","value")};
  }`}},Kb=r=>Le({axis:r.axis}),Yb=(r,e)=>{let n=r.inputs;W_(n),r.compute(H_(r.inputs,e))}});var q_,j_,Zb,Jb,Qb=R(()=>{"use strict";Ne();ze();q_=r=>{if(!r)throw new Error("Input is missing");if(r.length<2||r.length>3)throw new Error("Invaid input number.");if(r.length===3&&r[2].dims.length>2)throw new Error("Invalid input shape of C");if(r[0].dataType!==r[1].dataType||r.length===3&&r[0].dataType!==r[2].dataType)throw new Error("Input types are mismatched")},j_=(r,e)=>{let n=r[0].dims.slice(),t=r[1].dims.slice(),[o,i,s]=Ea.getShapeOfGemmResult(n,e.transA,t,e.transB,r.length===3?r[2].dims:void 0),a=[o,i];if(!a)throw new Error("Can't use gemm on the given tensors");let u=H.size(a),l=[{type:"uint32",data:u},{type:"uint32",data:o},{type:"uint32",data:i},{type:"uint32",data:s},{type:"float32",data:e.alpha},{type:"float32",data:e.beta}],d=["type","type"];r.length===3&&(l.push(...K(r[2].dims)),d.push("rank")),l.push(...K(a));let p=m=>{let b="";e.transA&&e.transB?b="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":e.transA&&!e.transB?b="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!e.transA&&e.transB?b="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!e.transA&&!e.transB&&(b="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let v=e.alpha===1?"":"value *= uniforms.alpha;",w=W("a",r[0].dataType,r[0].dims),A=W("b",r[1].dataType,r[1].dims),$=w.type.value,_=null,O=[w,A];r.length===3&&(_=W("c",r[2].dataType,r[2].dims.length),O.push(_));let P=ie("output",r[0].dataType,a.length);O.push(P);let L=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${m.registerUniforms(L).declareVariables(...O)}

  ${m.mainStart()}
    ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${$}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${b}
    }

    ${v}
    ${(()=>_!=null?`let cOffset = ${_.broadcastedIndicesToOffset("vec2(m, n)",P)}; value += ${$}(uniforms.beta) * ${_.getByOffset("cOffset")};`:"")()}
    output[global_idx] = value;
  }`};return{name:"Gemm",shaderCache:{hint:`${e.cacheKey}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:a,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l}),getShaderSource:p}},Zb=r=>{let e=r.transA,n=r.transB,t=r.alpha,o=r.beta;return{transA:e,transB:n,alpha:t,beta:o,cacheKey:`${r.transA};${r.transB};${r.alpha===1}`}},Jb=(r,e)=>{q_(r.inputs),r.compute(j_(r.inputs,e))}});var K_,Y_,X_,ey,ty=R(()=>{"use strict";st();Ne();ze();K_=(r,e)=>{let n=r[0].dims,t=n,o=2,i=H.sizeToDimension(n,o),s=H.sizeFromDimension(n,o),a=bt(s),u=s/a,l=[n[0],n[1],u],d=["rank","type","type"],p=[{type:"uint32",data:s},{type:"uint32",data:u}];p.push(...K(l),...K(l));let m=b=>{let v=W("x",r[0].dataType,l.length,a),w=W("scale",r[1].dataType,r[1].dims),A=W("bias",r[2].dataType,r[2].dims),$=ie("output",r[0].dataType,l.length,a),_=[v,w,A,$],O=v.type.value,P=a===1?"f32":`vec${a}<f32>`,L=64,F=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`
  var<workgroup> meanShared : f32;
  var<workgroup> squaredNormShared : f32;
  var<workgroup> workgroupShared : array<${P}, ${L}>;
  const workgroupSize = ${L}u;
  ${b.registerUniforms(F).declareVariables(..._)}
  ${b.mainStart(L)}
    let norm = global_idx / workgroupSize;
    let batch = norm / uniforms.x_shape[1];
    let channel = norm % uniforms.x_shape[1];
    let localIndex = local_id.x;

    // initialize workgroup memory
    var initial = ${P}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      initial = initial + ${P}(${v.get("batch","channel","h")});
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the mean of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      meanShared = ${Zt("workgroupShared[0]",a)} / f32(uniforms.normSize);
    }
    workgroupBarrier();

    // reinitialize workgroup memory.
    initial = ${P}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let deviation =  ${P}(${v.get("batch","channel","h")}) - ${P}(meanShared);
      initial = initial + deviation * deviation;
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the sum of square of deviation of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      squaredNormShared = ${Zt("workgroupShared[0]",a)};
    }
    workgroupBarrier();

    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${e.epsilon}));
    let channelScale = invStdDev * f32(${w.getByOffset("channel")});
    let channelShift = f32(${A.getByOffset("channel")}) - meanShared * channelScale;
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let value = ${v.get("batch","channel","h")} * ${O}(${P}(channelScale)) + ${O}(${P}(channelShift));
      ${$.set("batch","channel","h","value")};
    }
  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${e.epsilon};${a}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:i},programUniforms:p}),getShaderSource:m}},Y_=(r,e,n,t,o,i,s,a)=>{let u=bt(s),l=64,d=u===1?"vec2f":`mat2x${u}f`,p=u===1?"f32":`vec${u}f`,m=(F,G)=>`${d}(${F}, ${G})`,b=o*s/u,v=Math.ceil(i/l),w=["type"],A=[{type:"uint32",data:v},{type:"uint32",data:i},{type:"uint32",data:Math.floor(s/u)},{type:"uint32",data:Math.floor(i*s/u)}],$=F=>{let G=W("input",e.dataType,e.dims,u);return`
  ${F.declareVariables(G)}
  @group(0) @binding(1) var<storage, read_write> output : array<${d}>;
  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};
  @group(0) @binding(2) var<uniform> uniforms: Uniforms;

  ${F.mainStart(l)}
    let currentImageNumber = global_idx / ${l} / uniforms.C;
    let currentChannelNumber = (global_idx / ${l}) % uniforms.C;
    let wgId = global_idx % ${l};
    let wgOffset = wgId * uniforms.wg_size;
    if (wgOffset >= uniforms.H) {
        return;
    }
    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);

    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;
    var sum = ${Pt("f32",u)};
    var squaredSum = ${Pt("f32",u)};
    for (var i: u32 = wgOffset; i < wgMax; i++) {
        let value = ${p}(input[offset + i * uniforms.C]);
        sum += value;
        squaredSum += value * value;
    }
    output[global_idx] = ${m("sum","squaredSum")};
  }`},_=r.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${u}`,inputDependencies:w},getRunData:()=>({outputs:[{dims:[o,s,l,2],dataType:1}],dispatchGroup:{x:o*s/u},programUniforms:A}),getShaderSource:$},{inputs:[e],outputs:[-1]})[0],O=[{type:"uint32",data:b},{type:"uint32",data:i},{type:"uint32",data:Math.floor(s/u)},{type:"uint32",data:Math.floor(l*s/u)}],P=["type","type","type"],L=F=>{let G=W("scale",n.dataType,n.dims,u),J=W("bias",t.dataType,t.dims,u);return`
  @group(0) @binding(0) var<storage, read> input : array<${d}>;
  @group(0) @binding(1) var<storage, read> scale : array<${G.type.storage}>;
  @group(0) @binding(2) var<storage, read> bias : array<${J.type.storage}>;
  @group(0) @binding(3) var<storage, read_write> output : array<${d}>;
  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};
  @group(0) @binding(4) var<uniform> uniforms: Uniforms;

  ${F.mainStart()}
    ${F.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}
    let currentImageNumber = global_idx / uniforms.C;
    let currentChannelNumber = global_idx % uniforms.C;

    let offset = currentImageNumber * uniforms.image_size;
    var sum = ${Pt("f32",u)};
    var squaredSum = ${Pt("f32",u)};
    for (var i: u32 = 0; i < ${l}; i++) {
        let value = input[offset + i + currentChannelNumber * ${l}];
        sum += value[0];
        squaredSum += value[1];
    }
    sum = sum / f32(uniforms.H);
    squaredSum = squaredSum / f32(uniforms.H);
    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${a}));
    let channelScale = invStdDev * ${p}(scale[currentChannelNumber]);
    let channelShift = ${p}(bias[currentChannelNumber]) - sum * channelScale;

    output[global_idx] = ${m("channelScale","channelShift")};
  }`};return r.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${u};${a}`,inputDependencies:P},getRunData:()=>({outputs:[{dims:[o,s,2],dataType:1}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:O}),getShaderSource:L},{inputs:[_,n,t],outputs:[-1]})[0]},X_=(r,e,n)=>{let t=e[0].dims,o=t,i=t[0],s=t[t.length-1],a=H.sizeFromDimension(t,1)/s,u=bt(s),l=H.size(o)/u,d=[{type:"uint32",data:a},{type:"uint32",data:Math.floor(s/u)}],p=["type","type"],m=Y_(r,e[0],e[1],e[2],i,a,s,n.epsilon),b=v=>{let w=gt(e[0].dataType),A=u===1?"vec2f":`mat2x${u}f`,$=u===1?w:`vec${u}<${w}>`,_=W("input",e[0].dataType,e[0].dims,u),O=ie("output",e[0].dataType,o,u);return`
  @group(0) @binding(0) var<storage, read> input : array<${_.type.storage}>;
  @group(0) @binding(1) var<storage, read> scaleInput : array<${A}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${O.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${v.mainStart()}
    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);
    let currentChannelNumber = global_idx % uniforms.C;

    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;
    let scale = scaleInput[scaleOffset];
    output[global_idx] = fma(input[global_idx], ${$}(scale[0]), ${$}(scale[1]));
  }`};r.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${u}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:b},{inputs:[e[0],m]})},ey=(r,e)=>{e.format==="NHWC"?X_(r,r.inputs,e):r.compute(K_(r.inputs,e))}});var Z_,J_,ry,ny=R(()=>{"use strict";st();Ne();ze();Z_=r=>{if(!r||r.length<2)throw new Error("layerNorm requires at least 2 inputs.")},J_=(r,e,n)=>{let t=r[0].dims,o=r[1],i=r[2],s=t,a=H.normalizeAxis(e.axis,t.length),u=H.sizeToDimension(t,a),l=H.sizeFromDimension(t,a),d=H.size(o.dims),p=i?H.size(i.dims):0;if(d!==l||i&&p!==l)throw new Error(`Size of X.shape()[axis:] == ${l}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${d} and bias size of ${p}`);let m=[];for(let P=0;P<t.length;++P)P<a?m.push(t[P]):m.push(1);let b=bt(l),v=["type","type"],w=[{type:"uint32",data:u},{type:"float32",data:l},{type:"uint32",data:Math.floor(l/b)},{type:"float32",data:e.epsilon}];i&&v.push("type");let A=n>1,$=n>2,_=P=>{let L=gt(r[0].dataType),F=[W("x",r[0].dataType,r[0].dims,b),W("scale",o.dataType,o.dims,b)];i&&F.push(W("bias",i.dataType,i.dims,b)),F.push(ie("output",r[0].dataType,s,b)),A&&F.push(ie("mean_data_output",1,m)),$&&F.push(ie("inv_std_output",1,m));let G=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${P.registerUniforms(G).declareVariables(...F)}
  ${P.mainStart()}
    ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var meanVector = ${Pt("f32",b)};
    var meanSquareVector = ${Pt("f32",b)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${vr(L,b,"x[h + offset]")};
      meanVector += value;
      meanSquareVector += value * value;
    }
    let mean = ${Zt("meanVector",b)} / uniforms.norm_size;
    let invStdDev =
        inverseSqrt(${Zt("meanSquareVector",b)} / uniforms.norm_size - mean * mean + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${vr(L,b,"x[j + offset]")};
      let f32scale = ${vr(L,b,"scale[j]")};
      output[j + offset] = ${F[0].type.value}((f32input - mean) * invStdDev * f32scale
        ${i?`+ ${vr(L,b,"bias[j]")}`:""}
      );
    }

    ${A?"mean_data_output[global_idx] = mean":""};
    ${$?"inv_std_output[global_idx] = invStdDev":""};
  }`},O=[{dims:s,dataType:r[0].dataType}];return A&&O.push({dims:m,dataType:1}),$&&O.push({dims:m,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${b};${n}`,inputDependencies:v},getRunData:()=>({outputs:O,dispatchGroup:{x:Math.ceil(u/64)},programUniforms:w}),getShaderSource:_}},ry=(r,e)=>{Z_(r.inputs),r.compute(J_(r.inputs,e,r.outputCount))}});var Q_,iy,oy,e1,tl,ay,sy=R(()=>{"use strict";Ne();Et();Oa();Vu();ze();no();Q_=(r,e)=>{let n=r[0],t=r[1],o=r[2],i=r[3],s=r[4],a=r[5],u=r[6],l=r[7];if(n.dims.length!==3&&n.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let d=!1,p=n.dims[0],m=n.dims[1],b=n.dims.length===3?d?n.dims[2]/3:n.dims[2]:e.numHeads*n.dims[4],v=m,w=0,A=0,$=Math.floor(b/e.numHeads);if(u&&l){if(u.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');w=u.dims[2],A=u.dims[2]}else if(u||l)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let _;if(t){if(n.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(t.dims.length<3||t.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(n.dims[0]!==t.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(t.dims.length===3){if(t.dims[2]!==n.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');_=2,v=t.dims[1]}else if(t.dims.length===5){if(t.dims[2]!==e.numHeads||t.dims[3]!==2||t.dims[4]!==$)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(o)throw new Error('Expect "value" be none when "key" has packed kv format.');_=5,v=t.dims[1]}else{if(t.dims[1]!==e.numHeads||t.dims[3]!==$)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');_=0,v=t.dims[2]}}else{if(n.dims.length!==3&&n.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(n.dims.length===5&&(n.dims[2]!==e.numHeads||n.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');_=3}if(i){if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(o&&n.dims.length===5&&n.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let O=0;if(s){O=8;let J=s.dims;throw J.length===1?J[0]===p?O=1:J[0]===3*p+2&&(O=3):J.length===2&&J[0]===p&&J[1]===v&&(O=5),O===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)'):new Error("Mask not supported")}let P=!1,L=b;if(o){if(o.dims.length!==3&&o.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(n.dims[0]!==o.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(o.dims.length===3){if(v!==o.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');L=o.dims[2]}else{if(v!==o.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');L=o.dims[1]*o.dims[3],P=!0}}let F=w+v,G=!1;if(s)throw new Error("Key padding mask is not supported");if(a)throw new Error("extraAddQk is not supported");if(u)throw new Error("pastKey is not supported");if(l)throw new Error("pastValue is not supported");return{batchSize:p,sequenceLength:m,pastSequenceLength:w,kvSequenceLength:v,totalSequenceLength:F,maxSequenceLength:A,inputHiddenSize:0,hiddenSize:b,vHiddenSize:L,headSize:$,vHeadSize:Math.floor(L/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:O,scale:e.scale,broadcastResPosBias:G,passPastInKv:P,qkvFormat:_}},iy=r=>Le({...r}),oy=Le({perm:[0,2,1,3]}),e1=(r,e,n,t,o,i,s)=>{let a=[t,o,i],u=H.size(a),l=[{type:"uint32",data:u},{type:"uint32",data:s},{type:"uint32",data:i}],d=p=>{let m=ie("qkv_with_bias",e.dataType,a),b=W("qkv",e.dataType,a),v=W("bias",n.dataType,a),w=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${p.registerUniforms(w).declareVariables(b,v,m)}
  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return r.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:e.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l}),getShaderSource:d},{inputs:[e,n],outputs:[-1]})[0]},tl=(r,e,n,t,o,i,s,a)=>{let u=i;if(s){if(t===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return u=e1(r,i,s,e,t,n*o,a),u=u.reshape([e,t,n,o]),r.compute(wr(u,oy.perm),{inputs:[u],outputs:[-1]})[0]}else return i.dims.length===3&&(u=i.reshape([e,t,n,o])),r.compute(wr(u,oy.perm),{inputs:[u],outputs:[-1]})[0]},ay=(r,e)=>{let n=Q_(r.inputs,e);if(r.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(r.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let t=r.inputs[1]&&r.inputs[2]&&r.inputs[1].dims.length===4&&r.inputs[2].dims.length===4,o=tl(r,n.batchSize,n.numHeads,n.sequenceLength,n.headSize,r.inputs[0],r.inputs[3],0);if(t)return za(r,o,r.inputs[1],r.inputs[2],r.inputs[4],void 0,void 0,void 0,r.inputs[5],n,e);let i=tl(r,n.batchSize,n.numHeads,n.kvSequenceLength,n.headSize,r.inputs[1],r.inputs[3],n.hiddenSize),s=tl(r,n.batchSize,n.numHeads,n.kvSequenceLength,n.vHeadSize,r.inputs[2],r.inputs[3],2*n.hiddenSize);za(r,o,i,s,r.inputs[4],void 0,r.inputs[6],r.inputs[7],r.inputs[5],n,e)}});var t1,r1,n1,o1,i1,a1,s1,u1,uy,ly=R(()=>{"use strict";st();Ne();ze();t1=r=>{if(!r||r.length<1)throw new Error("Too few inputs");if(r[0].dataType!==1&&r[0].dataType!==10)throw new Error("Input type must be float or float16.");if(r.length>=2){let e=r[0].dims.length*2===r[1].dims[0];if(r.length===4&&(e=r[3].dims[0]*2===r[1].dims[0]),!e)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},r1=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
            k = i32(${r.indicesGet("indices",o)}) - ${_e("uniforms.pads",o,n)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${_e("uniforms.x_shape",o,e)})) {
              break;
            }
            offset += k * i32(${_e("uniforms.x_strides",o,e)});
        `;return`
          value = ${r.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${t}
            value = x[offset];
          }
      `},n1=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
                k = i32(${r.indicesGet("indices",o)}) - ${_e("uniforms.pads",o,n)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${_e("uniforms.x_shape",o,e)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${_e("uniforms.x_shape",o,e)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${_e("uniforms.x_strides",o,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${t}
              value = x[offset];
          `},o1=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
                k = i32(${r.indicesGet("indices",o)}) - ${_e("uniforms.pads",o,n)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${_e("uniforms.x_shape",o,e)})) {
                  k = i32(${_e("uniforms.x_shape",o,e)}) - 1;
                }
                offset += k * i32(${_e("uniforms.x_strides",o,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${t}
              value = x[offset];
          `},i1=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
                k = i32(${r.indicesGet("indices",o)}) - ${_e("uniforms.pads",o,n)};
                if (k < 0)  {
                  k += i32(${_e("uniforms.x_shape",o,e)}]);
                }
                if (k >= i32(${_e("uniforms.x_shape",o,e)})) {
                  k -= i32(${_e("uniforms.x_shape",o,e)});
                }
                offset += k * i32(${_e("uniforms.x_strides",o,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${t}
              value = x[offset];
          `},a1=(r,e,n)=>{switch(n.mode){case 0:return r1(r,e,n.pads.length);case 1:return n1(r,e,n.pads.length);case 2:return o1(r,e,n.pads.length);case 3:return i1(r,e,n.pads.length);default:throw new Error("Invalid mode")}},s1=(r,e)=>{let n=H.padShape(r[0].dims.slice(),e.pads),t=r[0].dims,i=[{type:"uint32",data:H.size(n)},{type:"uint32",data:e.pads}];if(e.mode===0){let u=Xt(r[0].dataType);i.push({type:u,data:e.value})}i.push(...K(r[0].dims),...K(n));let s=["rank"],a=u=>{let l=ie("output",r[0].dataType,n.length),d=W("x",r[0].dataType,t.length),p=d.type.value,m=a1(l,t.length,e),b=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:e.pads.length}];return e.mode===0&&b.push({name:"constant_value",type:p}),`
            ${u.registerUniforms(b).declareVariables(d,l)}
            ${u.mainStart()}
            ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${l.offsetToIndices("global_idx")};

            var value = ${p}(0);
            ${m}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${e.mode}`,inputDependencies:s},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(H.size(n)/64)},programUniforms:i}),getShaderSource:a}},u1=(r,e)=>{if(r.length>1){let n=r[1].getBigInt64Array(),t=r.length>=3&&r[2].data?r[2].getFloat32Array()[0]:0,o=r[0].dims.length,i=new Int32Array(2*o).fill(0);if(r.length>=4){let a=r[3].getBigInt64Array();for(let u=0;u<a.length;u++)i[Number(a[u])]=Number(n[u]),i[Number(a[u])+o]=Number(n[u+a.length])}else n.forEach((a,u)=>i[Number(u)]=Number(a));let s=[];return i.forEach(a=>s.push(a)),{mode:e.mode,value:t,pads:s}}else return e},uy=(r,e)=>{t1(r.inputs);let n=u1(r.inputs,e);r.compute(s1(r.inputs,n),{inputs:[0]})}});var Ha,dy,cy,fy,py,l1,d1,hy,my,gy,by,yy,vy,wy,xy,_y,Ty,$y,Sy,Iy=R(()=>{"use strict";Ot();Ne();ze();Ha=r=>{if(ye.webgpu.validateInputContent&&(!r||r.length!==1))throw new Error("Pool ops requires 1 input.")},dy=(r,e,n)=>{let t=e.format==="NHWC",o=r.dims.slice();t&&o.splice(1,0,o.pop());let i=Object.hasOwnProperty.call(e,"dilations"),s=e.kernelShape.slice(),a=e.strides.slice(),u=i?e.dilations.slice():[],l=e.pads.slice();En.adjustPoolAttributes(n,o,s,a,u,l);let d=En.computePoolOutputShape(n,o,a,u,s,l,e.autoPad),p=Object.assign({},e);i?Object.assign(p,{kernelShape:s,strides:a,pads:l,dilations:u,cacheKey:e.cacheKey}):Object.assign(p,{kernelShape:s,strides:a,pads:l,cacheKey:e.cacheKey});let m=d.slice();return m.push(m.splice(1,1)[0]),[p,t?m:d]},cy=(r,e)=>{let n=e.format==="NHWC",t=H.size(r),o=H.size(e.kernelShape),i=[{type:"uint32",data:t},{type:"uint32",data:o}],s=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(e.kernelShape.length<=2){let a=e.kernelShape[e.kernelShape.length-1],u=e.strides[e.strides.length-1],l=e.pads[e.pads.length/2-1],d=e.pads[e.pads.length-1],p=!!(l+d);i.push({type:"uint32",data:a},{type:"uint32",data:u},{type:"uint32",data:l},{type:"uint32",data:d}),s.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let m=!1;if(e.kernelShape.length===2){let b=e.kernelShape[e.kernelShape.length-2],v=e.strides[e.strides.length-2],w=e.pads[e.pads.length/2-2],A=e.pads[e.pads.length-2];m=!!(w+A),i.push({type:"uint32",data:b},{type:"uint32",data:v},{type:"uint32",data:w},{type:"uint32",data:A}),s.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[i,s,!0,p,m]}else{if(n)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let a=H.computeStrides(e.kernelShape);i.push({type:"uint32",data:a},{type:"uint32",data:e.pads},{type:"uint32",data:e.strides}),s.push({name:"kernelStrides",type:"u32",length:a.length},{name:"pads",type:"u32",length:e.pads.length},{name:"strides",type:"u32",length:e.strides.length});let u=e.pads.reduce((l,d)=>l+d);return[i,s,!!u,!1,!1]}},fy=(r,e,n,t,o,i,s,a,u,l,d,p)=>{let m=o.format==="NHWC",b=e.type.value,v=ie("output",e.type.tensor,t);if(o.kernelShape.length<=2){let w="",A="",$="",_=n-(m?2:1);if(d?w=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${_}] = indices[${_}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${_}] < 0 || xIndices[${_}]
                      >= uniforms.x_shape[${_}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`:w=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${_}] = indices[${_}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`,o.kernelShape.length===2){let P=n-(m?3:2);p?A=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${P}] = indices[${P}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${P}] < 0 || xIndices[${P}] >= uniforms.x_shape[${P}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:A=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${P}] = indices[${P}] * uniforms.sh - uniforms.phStart + j;
                `,$=`
              }
            `}return`
            ${r.registerUniforms(u).declareVariables(e,v)}

            ${r.mainStart()}
              ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${v.offsetToIndices("global_idx")};
              var xIndices = ${v.offsetToIndices("global_idx")};

              var value = ${b}(${a});
              var pad = 0;
              ${A}
              ${w}
              ${$}
              ${s}

              output[global_idx] = value;
            }`}else{if(m)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let w=o.kernelShape.length,A=o.pads.length,$="";return l?$=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${e.indicesToOffset("xIndices")}];
                ${i}
              }`:$=`
              }
              let x_val = x[${e.indicesToOffset("xIndices")}];
              ${i}
            `,`
            ${r.registerUniforms(u).declareVariables(e,v)}

            ${r.mainStart()}
              ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${v.offsetToIndices("global_idx")};
              var xIndices = ${v.offsetToIndices("global_idx")};

              var offsets: array<u32, ${w}>;

              var value = ${b}(${a});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${w-1}u; j++) {
                  offsets[j] = offset / ${_e("uniforms.kernelStrides","j",w)};
                  offset -= offsets[j] * ${_e("uniforms.kernelStrides","j",w)};
                }
                offsets[${w-1}] = offset;

                isPad = false;
                for (var j = ${n-w}u; j < ${n}u; j++) {
                  xIndices[j] = indices[j] * ${_e("uniforms.strides",`j - ${n-w}u`,w)}
                    + offsets[j - ${n-w}u] - ${_e("uniforms.pads","j - 2u",A)};
                  ${$}
              }
              ${s}

              output[global_idx] = value;
            }`}},py=r=>`${r.format};${r.ceilMode};${r.autoPad};${r.kernelShape.length}`,l1=r=>`${py(r)};${r.countIncludePad}`,d1=r=>`${py(r)};${r.storageOrder};${r.dilations}`,hy=r=>({format:r.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][r.auto_pad],ceilMode:r.ceil_mode,kernelShape:r.kernel_shape,strides:r.strides,pads:r.pads}),my=(r,e,n,t)=>{let[o,i]=dy(e,t,n),s=W("x",e.dataType,e.dims.length),a=s.type.value,u="value += x_val;",l="";o.countIncludePad?l+=`value /= ${a}(uniforms.kernelSize);`:l+=`value /= ${a}(i32(uniforms.kernelSize) - pad);`;let[d,p,m,b,v]=cy(i,o);d.push(...K(e.dims),...K(i));let w=["rank"];return{name:r,shaderCache:{hint:`${t.cacheKey};${m};${b};${v}`,inputDependencies:w},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(H.size(i)/64)},programUniforms:d}),getShaderSource:A=>fy(A,s,e.dims.length,i.length,o,u,l,0,p,m,b,v)}},gy=r=>{let e=r.count_include_pad!==0,n=hy(r);if(n.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let t={countIncludePad:e,...n,cacheKey:""};return{...t,cacheKey:l1(t)}},by=(r,e)=>{Ha(r.inputs),r.compute(my("AveragePool",r.inputs[0],!1,e))},yy={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},vy=r=>{let e=r.format;return{format:e,...yy,cacheKey:e}},wy=(r,e)=>{Ha(r.inputs),r.compute(my("GlobalAveragePool",r.inputs[0],!0,e))},xy=(r,e,n,t)=>{let[o,i]=dy(e,t,n),s=`
      value = max(x_val, value);
    `,a="",u=W("x",e.dataType,e.dims.length),l=["rank"],[d,p,m,b,v]=cy(i,o);return d.push(...K(e.dims),...K(i)),{name:r,shaderCache:{hint:`${t.cacheKey};${m};${b};${v}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(H.size(i)/64)},programUniforms:d}),getShaderSource:w=>fy(w,u,e.dims.length,i.length,o,s,a,-1e5,p,m,b,v)}},_y=(r,e)=>{Ha(r.inputs),r.compute(xy("MaxPool",r.inputs[0],!1,e))},Ty=r=>{let e=r.storage_order,n=r.dilations,t=hy(r);if(e!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let o={storageOrder:e,dilations:n,...t,cacheKey:""};return{...o,cacheKey:d1(o)}},$y=r=>{let e=r.format;return{format:e,...yy,cacheKey:e}},Sy=(r,e)=>{Ha(r.inputs),r.compute(xy("GlobalMaxPool",r.inputs[0],!0,e))}});var f1,p1,Ay,Oy=R(()=>{"use strict";Ot();st();ze();f1=(r,e,n)=>{let t=r===e,o=r<e&&n<0,i=r>e&&n>0;if(t||o||i)throw new Error("Range these inputs' contents are invalid.")},p1=(r,e,n,t)=>{let o=Math.abs(Math.ceil((e-r)/n)),i=[o],s=o,a=Xt(t),u=[{type:"uint32",data:s},{type:a,data:r},{type:a,data:n},...K(i)],l=d=>{let p=ie("output",t,i.length),m=p.type.value,b=[{name:"outputSize",type:"u32"},{name:"start",type:m},{name:"delta",type:m}];return`
        ${d.registerUniforms(b).declareVariables(p)}
        ${d.mainStart()}
        ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${m}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${t}`},getShaderSource:l,getRunData:()=>({outputs:[{dims:i,dataType:t}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:u})}},Ay=r=>{let e=0,n=0,t=0;r.inputs[0].dataType===6?(e=r.inputs[0].getInt32Array()[0],n=r.inputs[1].getInt32Array()[0],t=r.inputs[2].getInt32Array()[0]):r.inputs[0].dataType===1&&(e=r.inputs[0].getFloat32Array()[0],n=r.inputs[1].getFloat32Array()[0],t=r.inputs[2].getFloat32Array()[0]),ye.webgpu.validateInputContent&&f1(e,n,t),r.compute(p1(e,n,t,r.inputs[0].dataType),{inputs:[]})}});var h1,m1,g1,b1,y1,v1,w1,x1,_1,T1,$1,Cy,S1,I1,A1,O1,C1,Ey,Py,ky=R(()=>{"use strict";Ne();Et();ze();h1=(r,e)=>{if(r.every(n=>n>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),r.length>0){if(e.mode==="linear"){if(!(r.length===2||r.length===3||r.length===4&&r[0]===1&&r[1]===1||r.length===4&&r[0]===1&&r[3]===1||r.length===5&&r[0]===1&&r[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(e.mode==="cubic"&&!(r.length===2||r.length===4&&r[0]===1&&r[1]===1||r.length===4&&r[0]===1&&r[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},m1=(r,e,n)=>{e.every(o=>o>=0&&o<n||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let t=new Array(n).fill(1);return e.forEach((o,i)=>t[o]=r[i]),t},g1=(r,e,n,t,o,i)=>{let[s,a,u]=n>10?[1,2,3]:[-1,r.length>1?1:-1,-1],l=r[0].dims.length;if(s>0&&r.length>s&&r[s].dims.length>0)r[s].getFloat32Array().forEach(d=>i.push(d));else if(e.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(a>0&&r.length>a&&r[a].dims.length>0){if(r[a].getFloat32Array().forEach(d=>t.push(d)),t.length!==0&&t.length!==l&&n>=18&&t.length!==e.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");h1(t,e),e.axes.length>0&&m1(t,e.axes,l).forEach((d,p)=>t[p]=d)}if(u>0&&r.length>u&&(r[u].getBigInt64Array().forEach(d=>o.push(Number(d))),o.length!==l||n>=18&&o.length===e.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(e.axes.length>0){if(t.length!==e.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(o.length!==e.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof t<"u"&&typeof o<"u"&&t.length>0&&o.length>l)throw new Error("Resize requires only of scales or sizes to be specified")},b1=(r,e)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${e} { `+(()=>{switch(r){case"asymmetric":return`return ${e}(xResized) / ${e}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${e}(xResized) + 0.5) / ${e}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${e}(xResized) + 0.5) / ${e}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${e}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${e}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${e}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${e}(roiStart) * ${e}(lengthOriginal - 1) +
                        (${e}(xResized) * ${e}(roiEnd - roiStart) * ${e}(lengthOriginal - 1)) /
                        ${e}(lengthResized - 1);
                  } else {
                    return 0.5 * ${e}(roiStart + roiEnd) * ${e}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${e}xScale * ${e}(lengthResized);
                  const adjustment = ${e}(lengthResized) / outputWidth;
                  const center = ${e}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${e}(xResized) + 0.5) / ${e}(xScale)) - 0.5;`;case"half_pixel":return`return ((${e}(xResized) + 0.5) / ${e}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${r} is not supported`)}})()+"}",y1=(r,e,n)=>`fn getNearestPixelFromOriginal(xOriginal: ${n}, isDownSample: bool) -> ${n} {`+(()=>{switch(r){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(e<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${r} is not supported`)}})()+"}",v1=(r,e,n)=>{let t=new Array(n).fill(0).concat(new Array(n).fill(1)),o=r.length===0?t:r.slice();return e.length>0?(e.forEach((i,s)=>{t[i]=o[s],t[s+n]=o[e.length+s]}),t):o},w1=(r,e,n,t)=>{let o=[];if(n.length>0)if(t.length>0){if(r.forEach(i=>o.push(i)),Math.max(...t)>r.length)throw new Error("axes is out of bound");t.forEach((i,s)=>o[i]=n[s])}else n.forEach(i=>o.push(i));else{if(e.length===0)throw new Error("Resize requires either scales or sizes.");o=r.map((i,s)=>Math.round(i*e[s]))}return o},x1=(r,e,n)=>{let t=(()=>{switch(n.keepAspectRatioPolicy){case"not_larger":return n.axes.length>0?Math.min(...n.axes.map(i=>e[i]),Number.MAX_VALUE):Math.min(...e,Number.MAX_VALUE);case"not_smaller":return n.axes.length>0?Math.max(...n.axes.map(i=>e[i]),Number.MIN_VALUE):Math.max(...e,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${n.keepAspectRatioPolicy} is not supported`)}})();e.fill(1,0,e.length);let o=r.slice();return n.axes.length>0?(n.axes.forEach(i=>e[i]=t),n.axes.forEach(i=>o[i]=Math.round(r[i]*e[i]))):(e.fill(t,0,e.length),o.forEach((i,s)=>o[s]=Math.round(i*e[s]))),o},_1=(r,e,n,t,o)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${r.type.indices}) -> array<${r.type.value}, ${n.length}> {
      var original_indices: array<${r.type.value}, ${n.length}>;
      for (var i:u32 = 0; i < ${n.length}; i++) {
        var output_index = ${r.indicesGet("output_indices","i")};
        var scale = ${_e("uniforms.scales","i",t)};
        var roi_low = ${_e("uniforms.roi","i",o)};
        var roi_hi = ${_e("uniforms.roi",`i + ${e.length}`,o)};
        if (scale == 1.0) {
          original_indices[i] = ${r.type.value}(output_index);
        } else {
          var input_shape_i = ${_e("uniforms.input_shape","i",e.length)};
          var output_shape_i = ${_e("uniforms.output_shape","i",n.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,T1=(r,e,n,t,o,i,s)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> ${r.type.indices} {
      var input_indices: ${r.type.indices};
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${_e("uniforms.scales","i",o)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${_e("uniforms.roi","i",i)};
          var roi_hi = ${_e("uniforms.roi",`i + ${n.length}`,i)};
          var input_shape_i = ${_e("uniforms.input_shape","i",n.length)};
          var output_shape_i = ${_e("uniforms.output_shape","i",t.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${s} || (original_idx >= 0 && original_idx < ${e.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${e.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${r.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,$1=(r,e)=>`
    fn checkInputIndices(input_indices: ${r.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${e.length}; i++) {
        var input_index = ${r.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${_e("uniforms.input_shape","i",e.length)}) {
          return false;
        }
      }
      return true;
    }`,Cy=(r,e,n,t)=>r.rank>t?`
    ${r.indicesSet("input_indices",e,"channel")};
    ${r.indicesSet("input_indices",n,"batch")};
`:"",S1=(r,e,n,t,o)=>{let[s,a,u,l]=n.length===2?[-1,0,1,-1]:[0,2,3,1],d=r.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {
      var input_indices: ${r.type.indices};
      ${r.indicesSet("input_indices",a,`max(0, min(row, ${n[a]} - 1))`)};
      ${r.indicesSet("input_indices",u,`max(0, min(col, ${n[u]} - 1))`)};
      ${Cy(r,l,s,2)}
      return ${r.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${e.type.indices}) -> ${d} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${d} = originalIndices[${a}];
      var col:${d} = originalIndices[${u}];
      ${t?`if (row < 0 || row > (${n[a]} - 1) || col < 0 || col > (${n[u]} - 1)) {
        return ${o};
      }`:""};
      row = max(0, min(row, ${n[a]} - 1));
      col = max(0, min(col, ${n[u]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${n.length>2?`u32(originalIndices[${l}])`:"0"};
      var batch: u32 =  ${n.length>2?`u32(originalIndices[${s}])`:"0"};
      var x11: ${d} = getInputValue(batch, channel, row1, col1);
      var x12: ${d} = getInputValue(batch, channel, row1, col2);
      var x21: ${d} = getInputValue(batch, channel, row2, col1);
      var x22: ${d} = getInputValue(batch, channel, row2, col2);
      var dx1: ${d} = abs(row - ${d}(row1));
      var dx2: ${d} = abs(${d}(row2) - row);
      var dy1: ${d} = abs(col - ${d}(col1));
      var dy2: ${d} = abs(${d}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},I1=(r,e,n,t,o,i,s,a,u,l)=>{let d=n.length===2,p=!0,[m,b]=d?[0,1]:p?[2,3]:[1,2],v=r.type.value,w=A=>{let $=A===m?"row":"col";return`
      fn ${$}CubicInterpolation(input_indices: ${r.type.indices}, output_indices: ${e.type.indices}) -> ${v} {
        var output_index = ${e.indicesGet("output_indices",A)};
        var originalIdx: ${v} = getOriginalCoordinateFromResizedCoordinate(output_index, ${o[A]},
        ${t[A]}, ${n[A]}, ${i[A]}, ${i[A]} + ${n.length});
        var fractOriginalIdx: ${v} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${a} && (originalIdx < 0 || originalIdx > (${n[A]} - 1))) {
          return ${u};
        }
        var data: array<${v}, 4> = array<${v}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${$}: ${v} = originalIdx + ${v}(i);
          if (${$} < 0 || ${$} >= ${n[A]}) {
            ${(()=>l?`coefs[i + 1] = 0.0;
                        continue;`:a?`return ${u};`:`${$} = max(0, min(${$}, ${n[A]} - 1));`)()};
          }
        var input_indices_copy: ${r.type.indices} = input_indices;
          ${r.indicesSet("input_indices_copy",A,`u32(${$})`)};
          data[i + 1] = ${A===m?r.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${w(m)};
    ${w(b)};
  fn getCubicInterpolationCoefs(s: ${v}) -> array<${v}, 4> {
    var absS = abs(s);
    var coeffs: array<${v}, 4> = array<${v}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${v} = 1.0 - absS;
    var twoMinusAbsS: ${v} = 2.0 - absS;
    var onePlusAbsS: ${v} = 1.0 + absS;
    coeffs[0] = ((${s} * onePlusAbsS - 5 * ${s}) * onePlusAbsS + 8 * ${s}) * onePlusAbsS - 4 * ${s};
    coeffs[1] = ((${s} + 2) * absS - (${s} + 3)) * absS * absS + 1;
    coeffs[2] = ((${s} + 2) * oneMinusAbsS - (${s} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${s} * twoMinusAbsS - 5 * ${s}) * twoMinusAbsS + 8 * ${s}) * twoMinusAbsS - 4 * ${s};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${v}, 4>, coefs: array<${v}, 4>) -> ${v} {
    var coefsSum: ${v} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${e.type.indices}) -> ${v} {
    var input_indices: ${r.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},A1=(r,e,n,t,o)=>{let[s,a,u,l,d]=n.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],p=r.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${p} {
      var input_indices: ${r.type.indices};
      ${r.indicesSet("input_indices",a,`max(0, min(depth, ${n[a]} - 1))`)};
      ${r.indicesSet("input_indices",u,`max(0, min(height, ${n[u]} - 1))`)};
      ${r.indicesSet("input_indices",l,`max(0, min(width, ${n[l]} - 1))`)};
      ${Cy(r,d,s,3)}
      return ${r.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${e.type.indices}) -> ${p} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${p} = originalIndices[${a}];
      var height:${p} = originalIndices[${u}];
      var width:${p} = originalIndices[${l}];
      ${t?`if (depth < 0 || depth > (${n[a]} - 1) || height < 0 || height > (${n[u]} - 1) || width < 0 || (width > ${n[l]} - 1)) {
      return ${o};
        }`:""};

    depth = max(0, min(depth, ${n[a]} - 1));
      height = max(0, min(height, ${n[u]} - 1));
      width = max(0, min(width, ${n[l]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${n.length>3?`u32(originalIndices[${d}])`:"0"};
      var batch: u32 =  ${n.length>3?`u32(originalIndices[${s}])`:"0"};

      var x111: ${p} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${p} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${p} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${p} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${p} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${p} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${p} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${p} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${p} = abs(depth - ${p}(depth1));
      var dx2: ${p} = abs(${p}(depth2) - depth);
      var dy1: ${p} = abs(height - ${p}(height1));
      var dy2: ${p} = abs(${p}(height2) - height);
      var dz1: ${p} = abs(width - ${p}(width1));
      var dz2: ${p} = abs(${p}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},O1=(r,e,n,t,o,i)=>{let s=r.dims,a=v1(i,e.axes,s.length),u=w1(s,t,o,e.axes),l=t.slice();t.length===0&&(l=s.map((_,O)=>_===0?1:u[O]/_),e.keepAspectRatioPolicy!=="stretch"&&(u=x1(s,l,e)));let d=ie("output",r.dataType,u.length),p=W("input",r.dataType,s.length),m=H.size(u),b=s.length===u.length&&s.every((_,O)=>_===u[O]),v=e.coordinateTransformMode==="tf_crop_and_resize",w=e.extrapolationValue,A=p.type.value,$=_=>`
      ${b?"":`
      ${b1(e.coordinateTransformMode,A)};
      ${(()=>{switch(e.mode){case"nearest":return`
              ${$1(p,s)};
              ${y1(e.nearestMode,n,A)};
              ${T1(p,d,s,u,l.length,a.length,v)};
              `;case"linear":return`
              ${_1(d,s,u,l.length,a.length)};
              ${(()=>{if(s.length===2||s.length===4)return`${S1(p,d,s,v,w)}`;if(s.length===3||s.length===5)return`${A1(p,d,s,v,w)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(s.length===2||s.length===4)return`${I1(p,d,s,u,l,a,e.cubicCoeffA,v,e.extrapolationValue,e.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${_.registerUniform("output_size","u32").registerUniform("scales","f32",l.length).registerUniform("roi","f32",a.length).declareVariables(p,d)}
      ${_.mainStart()}
        ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${b?"output[global_idx] = input[global_idx];":`
        let output_indices = ${d.offsetToIndices("global_idx")};
        var input_indices: ${p.type.indices};
        ${(()=>{switch(e.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${p.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${e.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${s.length===2||s.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${e.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${e.cacheKey}|${n}|${l.length>0?l:""}|${o.length>0?o:""}|${a.length>0?a:""}|${b}|${s}`,inputDependencies:["rank"]},getShaderSource:$,getRunData:()=>({outputs:[{dims:u,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:[{type:"uint32",data:m},{type:"float32",data:l},{type:"float32",data:a},...K(s),...K(u)]})}},C1=r=>{let e=r.customDataBuffer;return new Uint32Array(e,e.byteOffset,1)[0]},Ey=(r,e)=>{let n=[],t=[],o=[],i=C1(r);if(e.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");g1(r.inputs,e,i,n,t,o),r.compute(O1(r.inputs[0],e,i,n,t,o),{inputs:[0]})},Py=r=>{let e=r.antialias,n=r.axes,t=r.coordinateTransformMode,o=r.cubicCoeffA,i=r.excludeOutside!==0,s=r.extrapolationValue,a=r.keepAspectRatioPolicy,u=r.mode,l=r.nearestMode===""?"simple":r.nearestMode;return Le({antialias:e,axes:n,coordinateTransformMode:t,cubicCoeffA:o,excludeOutside:i,extrapolationValue:s,keepAspectRatioPolicy:a,mode:u,nearestMode:l})}});var E1,P1,Dy,By=R(()=>{"use strict";st();Ne();ze();E1=r=>{if(!r||r.length<3)throw new Error("layerNorm requires at least 3 inputs.");let e=r[0],n=r[1],t=r[2];if(e.dataType!==n.dataType||e.dataType!==t.dataType)throw new Error("All inputs must have the same data type");if(e.dims.length!==3&&e.dims.length!==2)throw new Error("Input must be 2D or 3D");if(n.dims.length!==3&&n.dims.length!==2)throw new Error("Skip must be 2D or 3D");let o=e.dims[e.dims.length-1],i=e.dims[e.dims.length-2];if(n.dims[n.dims.length-1]!==o)throw new Error("Skip must have the same hidden size as input");if(n.dims[n.dims.length-2]!==i)throw new Error("Skip must have the same sequence length as input");if(t.dims.length!==1)throw new Error("Gamma must be 1D");if(t.dims[t.dims.length-1]!==o)throw new Error("Gamma must have the same hidden size as input");if(r.length>3){let s=r[3];if(s.dims.length!==1)throw new Error("Beta must be 1D");if(s.dims[s.dims.length-1]!==o)throw new Error("Beta must have the same hidden size as input")}if(r.length>4){let s=r[4];if(s.dims.length!==1)throw new Error("Bias must be 1D");if(s.dims[s.dims.length-1]!==o)throw new Error("Bias must have the same hidden size as input")}},P1=(r,e,n,t)=>{let o=r[0].dims,i=H.size(o),s=o,a=i,u=o.slice(-1)[0],l=t?o.slice(0,-1).concat(1):[],d=r.length>3,p=r.length>4,m=t&&n>1,b=t&&n>2,v=n>3,w=bt(u),A=[{type:"uint32",data:a},{type:"uint32",data:w},{type:"uint32",data:u},{type:"float32",data:e.epsilon}],$=O=>{let P=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],L=[W("x",r[0].dataType,r[0].dims,w),W("skip",r[1].dataType,r[1].dims,w),W("gamma",r[2].dataType,r[2].dims,w)];d&&L.push(W("beta",r[3].dataType,r[3].dims,w)),p&&L.push(W("bias",r[4].dataType,r[4].dims,w)),L.push(ie("output",r[0].dataType,s,w)),m&&L.push(ie("mean_output",1,l)),b&&L.push(ie("inv_std_output",1,l)),v&&L.push(ie("input_skip_bias_sum",r[0].dataType,s,w));let F=gt(r[0].dataType);return`

      ${O.registerUniforms(P).declareVariables(...L)}

      ${O.mainStart()}
        ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}
        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        let offset = global_idx * hidden_size_vectorized;
        var sum = ${Pt("f32",w)};
        var squareSum = ${Pt("f32",w)};
        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${p?"bias[i]":"0.0"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${v?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${vr(F,w,"value")};
          sum += f32_value;
          squareSum += f32_value * f32_value;
        }
        let mean = ${Zt("sum",w)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${Zt("squareSum",w)} / f32(uniforms.hidden_size) - mean * mean + uniforms.epsilon);
        ${m?"mean_output[global_idx] = mean;":""}
        ${b?"inv_std_output[global_idx] = inv_std_dev;":""}
        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {
          output[offset + i] = (output[offset + i] - ${F}(mean)) * ${F}(inv_std_dev) * gamma[i] + ${d?"beta[i]":"0.0"};
        }
      }`},_=[{dims:s,dataType:r[0].dataType}];return n>1&&_.push({dims:l,dataType:1}),n>2&&_.push({dims:l,dataType:1}),n>3&&_.push({dims:o,dataType:r[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${w};${m};${b};${v}`,inputDependencies:r.map((O,P)=>"type")},getShaderSource:$,getRunData:()=>({outputs:_,dispatchGroup:{x:Math.ceil(a/u/64)},programUniforms:A})}},Dy=(r,e)=>{E1(r.inputs);let t=[0];r.outputCount>1&&t.push(-3),r.outputCount>2&&t.push(-3),r.outputCount>3&&t.push(3),r.compute(P1(r.inputs,e,r.outputCount,!1),{outputs:t})}});var k1,qa,D1,Ry,B1,R1,zy,My,Ly=R(()=>{"use strict";st();Ne();Et();ze();k1=(r,e)=>{if(!r||r.length<1)throw new Error("too few inputs");if(e.axes.length!==0){if(e.axes.length!==e.starts.length||e.axes.length!==e.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(e.starts.length!==e.ends.length)throw new Error("starts and ends must have the same length");r.slice(1).forEach((n,t)=>{if(r[t+1].dataType!==6&&r[t+1].dataType!==7)throw new Error(`Input ${t} must be an array of int32 or int64`)})},qa=(r,e)=>{let n=[];if(r.length>e)if(r[e].dataType===7)r[e].getBigInt64Array().forEach(t=>n.push(Number(t)));else if(r[e].dataType===6)r[e].getInt32Array().forEach(t=>n.push(Number(t)));else throw new Error(`Input ${e} must be an array of int32 or int64`);return n},D1=(r,e)=>{if(r.length>1){let n=qa(r,1),t=qa(r,2),o=qa(r,3);return o.length===0&&(o=[...Array(r[0].dims.length).keys()]),Le({starts:n,ends:t,axes:o})}else return e},Ry=(r,e,n,t,o)=>{let i=r;return r<0&&(i+=n[t[e]]),o[e]<0?Math.max(0,Math.min(i,n[t[e]]-1)):Math.max(0,Math.min(i,n[t[e]]))},B1=(r,e,n)=>`fn calculateInputIndices(output_indices: ${e.type.indices}) -> ${r.type.indices} {
          var input_indices: ${r.type.indices};
          var carry = 0u;
          for (var i = ${n.length}; i >= 0; i--) {
            let input_shape_i = ${_e("uniforms.input_shape","i",n.length)};
            let steps_i = ${_e("uniforms.steps","i",n.length)};
            let signs_i = ${_e("uniforms.signs","i",n.length)};
            let starts_i = ${_e("uniforms.starts","i",n.length)};
            var output_index = ${e.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${r.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,R1=(r,e)=>{let n=r[0].dims,t=H.size(n),o=e.axes.length>0?H.normalizeAxes(e.axes,n.length):[...Array(n.length).keys()],i=qa(r,4);i.forEach($=>$!==0||(()=>{throw new Error("step cannot be 0")})),i.length===0&&(i=Array(o.length).fill(1));let s=e.starts.map(($,_)=>Ry($,_,n,o,i)),a=e.ends.map(($,_)=>Ry($,_,n,o,i));if(o.length!==s.length||o.length!==a.length)throw new Error("start, ends and axes should have the same number of elements");if(o.length!==n.length)for(let $=0;$<n.length;++$)o.includes($)||(s.splice($,0,0),a.splice($,0,n[$]),i.splice($,0,1));let u=i.map($=>Math.sign($));i.forEach(($,_,O)=>{if($<0){let P=(a[_]-s[_])/$,L=s[_],F=L+P*i[_];s[_]=F,a[_]=L,O[_]=-$}});let l=n.slice(0);o.forEach(($,_)=>{l[$]=Math.ceil((a[$]-s[$])/i[$])});let d={dims:l,dataType:r[0].dataType},p=ie("output",r[0].dataType,l.length),m=W("input",r[0].dataType,r[0].dims.length),b=H.size(l),v=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:s.length},{name:"signs",type:"i32",length:u.length},{name:"steps",type:"u32",length:i.length}],w=[{type:"uint32",data:b},{type:"uint32",data:s},{type:"int32",data:u},{type:"uint32",data:i},...K(r[0].dims),...K(l)],A=$=>`
      ${$.registerUniforms(v).declareVariables(m,p)}
        ${B1(m,p,n)}
        ${$.mainStart()}
          ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${p.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${p.setByOffset("global_idx",m.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${u.length}_${s.length}_${i.length}`,inputDependencies:["rank"]},getShaderSource:A,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(t/64)},programUniforms:w})}},zy=(r,e)=>{k1(r.inputs,e);let n=D1(r.inputs,e);r.compute(R1(r.inputs,n),{inputs:[0]})},My=r=>{let e=r.starts,n=r.ends,t=r.axes;return Le({starts:e,ends:n,axes:t})}});var z1,M1,Ny,Fy,Vy=R(()=>{"use strict";Ne();Et();ze();z1=r=>{if(!r||r.length!==1)throw new Error("Softmax op requires 1 input.")},M1=(r,e)=>{let n=r.dims,t=H.size(n),o=64,i=e.axis;if(i<0&&(i=n.length+i),i<n.length-1)throw new Error("softmax only supports last axis for now.");let s=n[i],a=t/s,u=bt(s),l=s/u,d=(A,$)=>$===4?`max(max(${A}.x, ${A}.y), max(${A}.z, ${A}.w))`:$===2?`max(${A}.x, ${A}.y)`:$===3?`max(max(${A}.x, ${A}.y), ${A}.z)`:A,p=W("x",r.dataType,r.dims,u),m=ie("result",r.dataType,r.dims,u),b=p.type.value,v=gt(r.dataType)==="f32"?`var threadMax = ${b}(-3.402823e+38f);`:`var threadMax = ${b}(-65504.0h);`,w=A=>`
      var<workgroup> rowMaxShared : ${b};
      var<workgroup> rowSumShared : ${b};
      var<workgroup> threadShared : array<${b}, ${o}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${b} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${b}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${A.registerUniform("packedCols","i32").declareVariables(p,m)}
      ${A.mainStart()}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${o};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${v}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${b}(${d("threadShared[0]",u)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${b}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${b}(${Zt("threadShared[0]",u)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`;return{name:"Softmax",shaderCache:{hint:`${u}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:n,dataType:r.dataType}],dispatchGroup:{x:a},programUniforms:[{type:"uint32",data:l}]}),getShaderSource:w}},Ny=(r,e)=>{z1(r.inputs),r.compute(M1(r.inputs[0],e))},Fy=r=>Le({axis:r.axis})});var L1,N1,F1,V1,U1,Uy,Gy,Wy=R(()=>{"use strict";Ne();Et();ze();L1=r=>{if(!r||r.length<1)throw new Error("too few inputs")},N1=(r,e)=>{let n=[],t=e.numOutputs;return r[1].dims[0]>0&&(r[1].getBigInt64Array().forEach(o=>n.push(Number(o))),t=n.length),Le({numOutputs:t,axis:e.axis,splitSizes:n})},F1=r=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${r}u; i += 1u ) {
    if (index < ${_e("uniforms.size_in_split_axis","i",r)}) {
        return i;
    }
    }
    return ${r}u;
}`,V1=r=>{let e=r.length,n=[];for(let t=0;t<e;++t){let o=r[t].setByIndices("indices","input[global_idx]");e===1?n.push(o):t===0?n.push(`if (output_number == ${t}u) { ${o} }`):t===e-1?n.push(`else { ${o} }`):n.push(`else if (output_number == ${t}) { ${o} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${r[0].type.indices}, global_idx: u32) {
        ${n.join(`
`)}
      }`},U1=(r,e)=>{let n=r[0].dims,t=H.size(n),o=r[0].dataType,i=H.normalizeAxis(e.axis,n.length),s=new Array(e.numOutputs),a=W("input",o,n),u=new Array(e.numOutputs),l=[],d=[],p=0,m=[{type:"uint32",data:t}];for(let v=0;v<e.numOutputs;v++){p+=e.splitSizes[v],u[v]=p;let w=n.slice();w[e.axis]=e.splitSizes[v],d.push(w),s[v]=ie(`output${v}`,o,w),l.push({dims:d[v],dataType:r[0].dataType})}m.push({type:"uint32",data:u}),m.push(...K(n)),d.forEach(v=>m.push(...K(v)));let b=v=>`
  ${v.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",u.length).declareVariables(a,...s)}
  ${F1(u.length)}
  ${V1(s)}

  ${v.mainStart()}
    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${a.offsetToIndices("global_idx")};
    var index = ${a.indicesGet("indices",i)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${_e("uniforms.size_in_split_axis","output_number - 1u",u.length)};
      ${a.indicesSet("indices",i,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:e.cacheKey,inputDependencies:["rank"]},getShaderSource:b,getRunData:()=>({outputs:l,dispatchGroup:{x:Math.ceil(t/64)},programUniforms:m})}},Uy=(r,e)=>{L1(r.inputs);let n=r.inputs.length===1?e:N1(r.inputs,e);r.compute(U1(r.inputs,n),{inputs:[0]})},Gy=r=>{let e=r.axis,n=r.splitSizes,t=r.numOutputs<0?n.length:r.numOutputs;if(t!==n.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Le({axis:e,numOutputs:t,splitSizes:n})}});var Hy,G1,W1,H1,qy,jy=R(()=>{"use strict";st();Ne();ze();Hy=r=>Array.from(r.getBigInt64Array(),Number),G1=r=>{if(!r||r.length!==2)throw new Error("Tile requires 2 inputs.");if(r[0].dataType!==1&&r[0].dataType!==6&&r[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(r[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(r[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Hy(r[1]).length!==r[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},W1=(r,e)=>{let n=[];for(let t=0;t<r.length;++t)n.push(r[t]*e[t]);return n},H1=r=>{let e=r[0].dims,n=Hy(r[1]),t=W1(e,n),o=H.size(t),i=r[0].dataType,s=W("input",i,e.length),a=ie("output",i,t.length),u=l=>`
      const inputShape = ${s.indices(...e)};
      ${l.registerUniform("output_size","u32").declareVariables(s,a)}
      ${l.mainStart()}
      ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${a.offsetToIndices("global_idx")};
      var input_indices: ${s.type.indices};
      for (var i = 0; i < ${e.length}; i++) {
        let input_dim_i = ${s.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${a.indicesGet("output_indices","i")}  % input_dim_i;

        ${s.indicesSet("input_indices","i","input_dim_value")}
      }
      ${a.setByOffset("global_idx",s.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${n}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:"uint32",data:o},...K(r[0].dims),...K(t)]}),getShaderSource:u}},qy=r=>{G1(r.inputs),r.compute(H1(r.inputs),{inputs:[0]})}});var q1,j1,Ky,Yy=R(()=>{"use strict";st();Ne();ze();q1=(r,e,n,t,o)=>{let i=ie("output_data",o,n.length,4),s=W("a_data",e[1].dataType,e[1].dims.length,4),a=W("b_data",e[2].dataType,e[2].dims.length,4),u=W("c_data",e[0].dataType,e[0].dims.length,4),l,d=(p,m,b)=>`select(${m}, ${p}, ${b})`;if(!t)l=i.setByOffset("global_idx",d(s.getByOffset("global_idx"),a.getByOffset("global_idx"),u.getByOffset("global_idx")));else{let p=(m,b,v="")=>{let w=`a_data[index_a${b}][component_a${b}]`,A=`b_data[index_b${b}][component_b${b}]`,$=`bool(c_data[index_c${b}] & ${4278190080>>>(3-b)*8}u)`;return`
            let output_indices${b} = ${i.offsetToIndices(`global_idx * 4u + ${b}u`)};
            let offset_a${b} = ${s.broadcastedIndicesToOffset(`output_indices${b}`,i)};
            let offset_b${b} = ${a.broadcastedIndicesToOffset(`output_indices${b}`,i)};
            let offset_c${b} = ${u.broadcastedIndicesToOffset(`output_indices${b}`,i)};
            let index_a${b} = offset_a${b} / 4u;
            let index_b${b} = offset_b${b} / 4u;
            let index_c${b} = offset_c${b} / 4u;
            let component_a${b} = offset_a${b} % 4u;
            let component_b${b} = offset_b${b} % 4u;
            ${m}[${b}] = ${v}(${d(w,A,$)});
          `};o===9?l=`
            var data = vec4<u32>(0);
            ${p("data",0,"u32")}
            ${p("data",1,"u32")}
            ${p("data",2,"u32")}
            ${p("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:l=`
            ${p("output_data[global_idx]",0)}
            ${p("output_data[global_idx]",1)}
            ${p("output_data[global_idx]",2)}
            ${p("output_data[global_idx]",3)}
          `}return`
        ${r.registerUniform("vec_size","u32").declareVariables(u,s,a,i)}
        ${r.mainStart()}
        ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${l}
      }`},j1=r=>{let e=r[1].dims,n=r[2].dims,t=r[0].dims,o=r[1].dataType,i=!(H.areEqual(e,n)&&H.areEqual(n,t)),s=e,a=H.size(e);if(i){let l=Cr.calcShape(Cr.calcShape(e,n,!1),t,!1);if(!l)throw new Error("Can't perform where op on the given tensors");s=l,a=H.size(s)}let u=Math.ceil(a/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:l=>q1(l,r,s,i,o),getRunData:()=>({outputs:[{dims:s,dataType:o}],dispatchGroup:{x:Math.ceil(a/64/4)},programUniforms:[{type:"uint32",data:u},...K(t),...K(e),...K(n),...K(s)]})}},Ky=r=>{r.compute(j1(r.inputs))}});var Xy,Zy=R(()=>{"use strict";vg();Vu();_g();$g();ib();gb();vb();qu();Db();zb();Vb();Wb();jb();Xb();Qb();ty();ny();Ku();sy();ly();Iy();Oy();Ba();ky();By();Ly();Vy();Wy();jy();no();Uu();Yy();Xy=new Map([["Abs",[Sg]],["Acos",[Ig]],["Acosh",[Ag]],["Add",[ab]],["ArgMax",[yg,Fu]],["ArgMin",[bg,Fu]],["Asin",[Og]],["Asinh",[Cg]],["Atan",[Eg]],["Atanh",[Pg]],["Attention",[wg]],["AveragePool",[by,gy]],["BatchNormalization",[xg]],["BiasAdd",[Tg]],["BiasSplitGelu",[ob]],["Cast",[Dg,kg]],["Ceil",[Rg]],["Clip",[Bg]],["Concat",[bb,yb]],["Conv",[Xu,Yu]],["ConvTranspose",[kb,Pb]],["Cos",[zg]],["Cosh",[Mg]],["CumSum",[Bb,Rb]],["Div",[sb]],["Einsum",[Nb,Fb]],["Elu",[Lg,Ma]],["Equal",[ub]],["Erf",[Ng]],["Exp",[Fg]],["Expand",[Gb]],["Floor",[Vg]],["FusedConv",[Xu,Yu]],["Gather",[qb,Hb]],["GatherElements",[Yb,Kb]],["Gelu",[Ug]],["Gemm",[Jb,Zb]],["GlobalAveragePool",[wy,vy]],["GlobalMaxPool",[Sy,$y]],["Greater",[fb]],["GreaterOrEqual",[hb]],["HardSigmoid",[Xg,Yg]],["InstanceNormalization",[ey]],["LayerNormalization",[ry]],["LeakyRelu",[Gg,Ma]],["Less",[pb]],["LessOrEqual",[mb]],["Log",[nb]],["MatMul",[$b]],["MaxPool",[_y,Ty]],["Mul",[lb]],["MultiHeadAttention",[ay,iy]],["Neg",[Hg]],["Not",[Wg]],["Pad",[uy]],["Pow",[db]],["Range",[Ay]],["Reciprocal",[qg]],["ReduceMin",[cg]],["ReduceMean",[ag]],["ReduceMax",[dg]],["ReduceSum",[pg]],["ReduceProd",[fg]],["ReduceL1",[sg]],["ReduceL2",[ug]],["ReduceLogSum",[mg]],["ReduceLogSumExp",[lg]],["ReduceSumSquare",[hg]],["Relu",[jg]],["Resize",[Ey,Py]],["Sigmoid",[Kg]],["Sin",[Zg]],["Sinh",[Jg]],["Slice",[zy,My]],["SkipLayerNormalization",[Dy]],["Split",[Uy,Gy]],["Sqrt",[Qg]],["Softmax",[Ny,Fy]],["Sub",[cb]],["Tan",[eb]],["Tanh",[tb]],["ThresholdedRelu",[rb,Ma]],["Tile",[qy]],["Transpose",[jm,Km]],["Where",[Ky]]])});var ja,Jy=R(()=>{"use strict";Ot();on();ze();ja=class{constructor(e){this.backend=e;this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,n){this.repo.set(e,n)}run(e,n,t,o,i){Ht(e.programInfo.name);let s=this.backend.device,a=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2),a.setPipeline(e.computePipeline);let u=[];for(let d of n)u.push({binding:u.length,resource:{buffer:d.buffer}});for(let d of t)u.push({binding:u.length,resource:{buffer:d.buffer}});i&&u.push({binding:u.length,resource:i});let l=s.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:u,label:e.programInfo.name});a.setBindGroup(0,l),a.dispatchWorkgroups(...o),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),qt(e.programInfo.name)}dispose(){}build(e,n){Ht(e.name);let t=this.backend.device,o=[];t.features.has("shader-f16")&&o.push("enable f16;");let i=Hm(n),s=e.getShaderSource(i),a=`${o.join(`
`)}
${i.additionalImplementations}
${s}`,u=t.createShaderModule({code:a,label:e.name});at("verbose",()=>`[WebGPU] ${e.name} shader code: ${a}`);let l=t.createComputePipeline({compute:{module:u,entryPoint:"main"},layout:"auto",label:e.name});return qt(e.name),{programInfo:e,computePipeline:l}}normalizeDispatchGroupSize(e){let n=typeof e=="number"?e:e.x,t=typeof e=="number"?1:e.y||1,o=typeof e=="number"?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(n<=i&&t<=i&&o<=i)return[n,t,o];let s=n*t*o,a=Math.ceil(Math.sqrt(s));if(a>i){if(a=Math.ceil(Math.cbrt(s)),a>i)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[a,a,a]}else return[a,a,1]}}});var K1,Y1,Ka,Qy=R(()=>{"use strict";Ot();st();on();Fm();Wm();Zy();Jy();K1=(r,e)=>{if(e.length!==r.length)throw new Error(`inputDependencies length ${e.length} is not equal to inputTensors length ${r.length}.`);let n=[];for(let t=0;t<r.length;++t){let o=r[t].dataType;switch(e[t]){case"none":{n.push("");break}case"type":{n.push(`${o}`);break}case"rank":{let i=r[t].dims.length;n.push(`${o};${i}`);break}case"dims":{let i=r[t].dims.join(",");n.push(`${o};${i}`);break}default:throw new Error(`unsupported input dependency: ${e[t]}`)}}return n.join("|")},Y1=(r,e,n)=>{let t=r.name;return r.shaderCache?.hint&&(t+="["+r.shaderCache.hint+"]"),t+=":"+n+`:${K1(e,r.shaderCache?.inputDependencies??new Array(e.length).fill("dims"))}`,t},Ka=class{constructor(){this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,n){this.env=e;let t=[],o={requiredLimits:{maxComputeWorkgroupStorageSize:n.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:n.limits.maxStorageBufferBindingSize,maxBufferSize:n.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:n.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:n.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:n.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:n.limits.maxComputeWorkgroupSizeZ},requiredFeatures:t};n.features.has("chromium-experimental-timestamp-query-inside-passes")?t.push("chromium-experimental-timestamp-query-inside-passes"):n.features.has("timestamp-query")&&t.push("timestamp-query"),n.features.has("shader-f16")&&t.push("shader-f16"),this.device=await n.requestDevice(o),this.gpuDataManager=Gm(this),this.programManager=new ja(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Lm(e.logLevel,!!e.debug),this.device.onuncapturederror=i=>{i.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${i.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e={};this.queryType==="at-passes"&&(e.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=this.getCommandEncoder().beginComputePass(e)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Ht(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{let n=new BigUint64Array(e.getMappedRange()),t=this.pendingQueries.get(e);for(let o=0;o<n.length/2;o++){let i=t[o],s=i.kernelId,a=this.kernels.get(s),u=a.kernelType,l=a.kernelName,d=i.programName,p=i.inputTensorViews,m=i.outputTensorViews,b=n[o*2],v=n[o*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=b);let w=Number(b-this.queryTimeBase),A=Number(v-this.queryTimeBase);if(!Number.isSafeInteger(w)||!Number.isSafeInteger(A))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:p.map($=>({dims:$.dims,dataType:Xt($.dataType)})),outputsMetadata:m.map($=>({dims:$.dims,dataType:Xt($.dataType)})),kernelId:s,kernelType:u,kernelName:l,programName:d,startTime:w,endTime:A});else{let $="";p.forEach((O,P)=>{$+=`input[${P}]: [${O.dims}] | ${Xt(O.dataType)}, `});let _="";m.forEach((O,P)=>{_+=`output[${P}]: [${O.dims}] | ${Xt(O.dataType)}, `}),console.log(`[profiling] kernel "${s}|${u}|${l}|${d}" ${$}${_}execution time: ${A-w} ns`)}Co("GPU",`${d}::${b}::${v}`)}e.unmap(),this.pendingQueries.delete(e)}),qt()}run(e,n,t,o,i){Ht(e.name);let s=[];for(let _=0;_<n.length;++_){let O=this.gpuDataManager.get(n[_].data);if(!O)throw new Error(`no GPU data for input: ${n[_].data}`);s[_]=O}let{outputs:a,dispatchGroup:u,programUniforms:l}=e.getRunData(n),d=t.length===0?a.map((_,O)=>O):t;if(d.length!==a.length)throw new Error(`Output size ${d.length} must be equal to ${a.length}.`);let p=[],m=[];for(let _=0;_<a.length;++_){if(!Number.isInteger(d[_])||d[_]<-3||d[_]>=a.length)throw new Error(`Invalid output index: ${d[_]}`);if(d[_]===-3)continue;let O=d[_]===-1,P=d[_]===-2,L=O||P?i(a[_].dataType,a[_].dims):o(d[_],a[_].dataType,a[_].dims),F=this.gpuDataManager.get(L.data);if(!F)throw new Error(`no GPU data for output: ${L.data}`);if(O&&this.temporaryData.push(F),P){let G=this.kernelPersistentData.get(this.currentKernelId);G||(G=[],this.kernelPersistentData.set(this.currentKernelId,G)),G.push(F)}p.push(L),m.push(F)}let b;if(l){let _=0,O=[];l.forEach(G=>{let J=typeof G.data=="number"?[G.data]:G.data;if(J.length===0)return;let le=G.type==="float16"?2:4,z,q;G.type==="float16"?(q=J.length>4?16:J.length>2?8:J.length*le,z=J.length>4?16:le*J.length):(q=J.length<=2?J.length*le:16,z=16),_=Math.ceil(_/q)*q,O.push(_);let Xe=G.type==="float16"?8:4;_+=J.length>4?Math.ceil(J.length/Xe)*z:J.length*le});let P=16;_=Math.ceil(_/P)*P;let L=new ArrayBuffer(_);l.forEach((G,J)=>{let le=O[J],z=typeof G.data=="number"?[G.data]:G.data;G.type==="int32"?new Int32Array(L,le,z.length).set(z):G.type==="uint32"?new Uint32Array(L,le,z.length).set(z):G.type==="float16"?new Uint16Array(L,le,z.length).set(z):new Float32Array(L,le,z.length).set(z)});let F=this.gpuDataManager.create(_,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(F.buffer,0,L,0,_),this.gpuDataManager.release(F.id),b={offset:0,size:_,buffer:F.buffer}}let v=this.programManager.normalizeDispatchGroupSize(u),w=v[1]===1&&v[2]===1,A=Y1(e,n,w),$=this.programManager.getArtifact(A);if($||($=this.programManager.build(e,v),this.programManager.setArtifact(A,$),at("info",()=>`[artifact] key: ${A}, programName: ${e.name}`)),at("info",()=>`[ProgramManager] run "${e.name}" (key=${A}) with ${v[0]}x${v[1]}x${v[2]}`),this.queryType!=="none"){let _={kernelId:this.currentKernelId,programName:$.programInfo.name,inputTensorViews:n,outputTensorViews:p};this.pendingKernels.push(_)}return this.programManager.run($,s,m,v,b),qt(e.name),p}upload(e,n){this.gpuDataManager.upload(e,n)}memcpy(e,n){this.gpuDataManager.memcpy(e,n)}async download(e,n){await this.gpuDataManager.download(e,n)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,n,t,o){let i=Xy.get(e);if(!i)throw new Error(`kernel not implemented: ${e}`);let s={kernelType:e,kernelName:o,kernelEntry:i[0],attributes:[i[1],t]};this.kernels.set(n,s)}releaseKernel(e){let n=this.kernelPersistentData.get(e);if(n){for(let t of n)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,n,t){let o=this.kernels.get(e);if(!o)throw new Error(`kernel not created: ${e}`);let i=o.kernelType,s=o.kernelName,a=o.kernelEntry,u=o.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${i}] ${s}" is not allowed to be called recursively`);this.currentKernelId=e,u[0]&&(u[1]=u[0](u[1]),u[0]=void 0),at("info",()=>`[WebGPU] Start to run kernel "[${i}] ${s}"...`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),a(n,u[1]),0}catch(d){return t.push(Promise.resolve(`[WebGPU] Kernel "[${i}] ${s}" failed. ${d}`)),1}finally{l&&t.push(this.device.popErrorScope().then(d=>d?`GPU validation error for kernel "[${i}] ${s}": ${d.message}`:null));for(let d of this.temporaryData)this.gpuDataManager.release(d.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,n,t,o){let i=this.sessionExternalDataMapping.get(e);i||(i=new Map,this.sessionExternalDataMapping.set(e,i));let s=i.get(n),a=this.gpuDataManager.registerExternalBuffer(t,o,s?.[1]);return i.set(n,[a,t]),a}unregisterBuffers(e){let n=this.sessionExternalDataMapping.get(e);n&&(n.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[1])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let n=this.gpuDataManager.get(e);if(!n)throw new Error(`no GPU data for buffer: ${e}`);return n.buffer}createDownloader(e,n,t){return async()=>{let o=await Du(this,e,n);return Nm(o.buffer,t)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||this.env.wasm.trace)&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}onRunStart(){this.setQueryType()}}});var e0={};Zr(e0,{init:()=>X1});var Jo,rl,X1,t0=R(()=>{"use strict";st();Qy();on();Ne();Jo=class r{constructor(e,n,t,o){this.module=e;this.dataType=n;this.data=t;this.dims=o}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let e=H.size(this.dims);return e===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let e=H.size(this.dims);return e===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let e=H.size(this.dims);return e===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}reshape(e){if(H.size(e)!==H.size(this.dims))throw new Error("Invalid new shape");return new r(this.module,this.dataType,this.data,e)}},rl=class{constructor(e,n,t){this.module=e;this.backend=n;this.customDataOffset=0;this.customDataSize=0;let o=e.HEAPU32,i=t>>>2;this.opKernelContext=o[i++];let s=o[i++];this.outputCount=o[i++],this.customDataOffset=o[i++],this.customDataSize=o[i++];let a=[];for(let u=0;u<s;u++){let l=o[i++],d=o[i++],p=o[i++],m=[];for(let b=0;b<p;b++)m.push(o[i++]);a.push(new Jo(e,l,d,m))}this.inputs=a}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,n){let t=n?.inputs?.map(a=>typeof a=="number"?this.inputs[a]:a)??this.inputs,o=n?.outputs??[],i=(a,u,l)=>new Jo(this.module,u,this.output(a,l),l),s=(a,u)=>{let l=qo(a);if(!l)throw new Error(`Unsupported data type: ${a}`);let d=l*H.size(u);return new Jo(this.module,a,this.backend.gpuDataManager.create(d).id,u)};return this.backend.run(e,t,o,i,s)}output(e,n){let t=this.module.stackSave();try{let o=this.module.stackAlloc((1+n.length)*4),i=o>>2;this.module.HEAPU32[i++]=n.length;for(let s=0;s<n.length;s++)this.module.HEAPU32[i++]=n[s];return this.module._JsepOutput(this.opKernelContext,e,o)}catch(o){throw new Error(`Failed to generate kernel's output[${e}] with dims [${n}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${o}`)}finally{this.module.stackRestore(t)}}},X1=async(r,e,n)=>{let t=r.jsepInit;if(!t)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");let o=new Ka;await o.initialize(e,n),t(o,i=>o.alloc(i),i=>o.free(i),(i,s,a,u=!1)=>{if(u)at("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${i}, dst=${s}, size=${a}`),o.memcpy(i,s);else{at("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${i}, gpuDataId=${s}, size=${a}`);let l=r.HEAPU8.subarray(i>>>0,(i>>>0)+a);o.upload(s,l)}},async(i,s,a)=>{at("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${i}, dataOffset=${s}, size=${a}`),await o.download(i,()=>r.HEAPU8.subarray(s>>>0,(s>>>0)+a))},(i,s,a)=>o.createKernel(i,s,a,r.UTF8ToString(r._JsepGetNodeName(s))),i=>o.releaseKernel(i),(i,s,a,u)=>{at("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${a}, kernel=${i}, contextDataOffset=${s}`);let l=new rl(r,o,s);return o.computeKernel(i,l,u)})}});var Z1,n0,o0,Qo,J1,nl,i0,a0,r0,s0,u0,l0,d0=R(()=>{"use strict";Dm();Rm();st();to();Sa();Pu();Z1=(r,e)=>{dt()._OrtInit(r,e)!==0&&ot("Can't initialize onnxruntime.")},n0=async r=>{Z1(r.wasm.numThreads,jo(r.logLevel))},o0=async(r,e)=>{if(e==="webgpu"||e==="webnn"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let n=await navigator.gpu.requestAdapter();if(!n)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.');if(!r.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");let t=(t0(),Ur(e0)).init;await t(dt(),r,n)}},Qo=new Map,J1=r=>{let e=dt(),n=e.stackSave();try{let t=e.stackAlloc(8);return e._OrtGetInputOutputCount(r,t,t+4)!==0&&ot("Can't get session input/output count."),[e.HEAP32[t/4],e.HEAP32[t/4+1]]}finally{e.stackRestore(n)}},nl=r=>{let e=dt(),n=e._malloc(r.byteLength);if(n===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${r.byteLength}.`);return e.HEAPU8.set(r,n),[n,r.byteLength]},i0=async(r,e)=>{let n,t,o=dt();Array.isArray(r)?[n,t]=r:r.buffer===o.HEAPU8.buffer?[n,t]=[r.byteOffset,r.byteLength]:[n,t]=nl(r);let i=0,s=0,a=0,u=[],l=[],d=[];try{if([s,u]=Bm(e),e?.externalData&&o.mountExternalData){let $=[];for(let _ of e.externalData){let O=typeof _=="string"?_:_.path;$.push(Ko(typeof _=="string"?_:_.data).then(P=>{o.mountExternalData(O,P)}))}await Promise.all($)}i=await o._OrtCreateSession(n,t,s),i===0&&ot("Can't create a session.");let[p,m]=J1(i),b=[],v=[],w=[];for(let $=0;$<p;$++){let _=o._OrtGetInputName(i,$);_===0&&ot("Can't get an input name."),l.push(_),b.push(o.UTF8ToString(_))}for(let $=0;$<m;$++){let _=o._OrtGetOutputName(i,$);_===0&&ot("Can't get an output name."),d.push(_);let O=o.UTF8ToString(_);v.push(O);{let P=typeof e?.preferredOutputLocation=="string"?e.preferredOutputLocation:e?.preferredOutputLocation?.[O]??"cpu";if(P!=="cpu"&&P!=="cpu-pinned"&&P!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${P}.`);w.push(P)}}let A=null;return w.some($=>$==="gpu-buffer")&&(a=o._OrtCreateBinding(i),a===0&&ot("Can't create IO binding."),A={handle:a,outputPreferredLocations:w,outputPreferredLocationsEncoded:w.map($=>Eu($))}),Qo.set(i,[i,l,d,A]),[i,b,v]}catch(p){throw l.forEach(m=>o._OrtFree(m)),d.forEach(m=>o._OrtFree(m)),a!==0&&o._OrtReleaseBinding(a),i!==0&&o._OrtReleaseSession(i),p}finally{o._free(n),s!==0&&o._OrtReleaseSessionOptions(s),u.forEach(p=>o._free(p)),o.unmountExternalData?.()}},a0=r=>{let e=dt(),n=Qo.get(r);if(!n)throw new Error(`cannot release session. invalid session id: ${r}`);let[t,o,i,s]=n;s&&e._OrtReleaseBinding(s.handle),e.jsepUnregisterBuffers?.(r),o.forEach(a=>e._OrtFree(a)),i.forEach(a=>e._OrtFree(a)),e._OrtReleaseSession(t),Qo.delete(r)},r0=(r,e,n,t,o)=>{if(!r){e.push(0);return}let i=dt(),s=r[0],a=r[1],u=r[3],l,d;if(s==="string"&&u==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(u==="gpu-buffer"){let b=r[2].gpuBuffer,v=qo(Cu(s));d=a.reduce((w,A)=>w*A,1)*v,l=i.jsepRegisterBuffer(t,o,b,d)}else{let b=r[2];if(Array.isArray(b)){d=4*b.length,l=i._malloc(d),n.push(l);let v=l/4;for(let w=0;w<b.length;w++){if(typeof b[w]!="string")throw new TypeError(`tensor data at index ${w} is not a string`);i.HEAPU32[v++]=ht(b[w],n)}}else d=b.byteLength,l=i._malloc(d),n.push(l),i.HEAPU8.set(new Uint8Array(b.buffer,b.byteOffset,d),l)}let p=i.stackSave(),m=i.stackAlloc(4*a.length);try{let b=m/4;a.forEach(w=>i.HEAP32[b++]=w);let v=i._OrtCreateTensor(Cu(s),l,d,m,a.length,Eu(u));v===0&&ot(`Can't create tensor for input/output. session=${t}, index=${o}.`),e.push(v)}finally{i.stackRestore(p)}},s0=async(r,e,n,t,o,i)=>{let s=dt(),a=Qo.get(r);if(!a)throw new Error(`cannot run inference. invalid session id: ${r}`);let[u,l,d,p]=a,m=e.length,b=t.length,v=0,w=[],A=[],$=[],_=[],O=s.stackSave(),P=s.stackAlloc(m*4),L=s.stackAlloc(m*4),F=s.stackAlloc(b*4),G=s.stackAlloc(b*4);try{[v,w]=km(i);for(let se=0;se<m;se++)r0(n[se],A,_,r,e[se]);for(let se=0;se<b;se++)r0(o[se],$,_,r,m+t[se]);let J=P/4,le=L/4,z=F/4,q=G/4;for(let se=0;se<m;se++)s.HEAPU32[J++]=A[se],s.HEAPU32[le++]=l[e[se]];for(let se=0;se<b;se++)s.HEAPU32[z++]=$[se],s.HEAPU32[q++]=d[t[se]];if(p){let{handle:se,outputPreferredLocations:Ee,outputPreferredLocationsEncoded:ut}=p;if(l.length!==m)throw new Error(`input count from feeds (${m}) is expected to be always equal to model's input count (${l.length}).`);for(let Te=0;Te<m;Te++){let Oe=e[Te];await s._OrtBindInput(se,l[Oe],A[Te])!==0&&ot(`Can't bind input[${Te}] for session=${r}.`)}for(let Te=0;Te<b;Te++){let Oe=t[Te];o[Te]?.[3]?s._OrtBindOutput(se,d[Oe],$[Te],0)!==0&&ot(`Can't bind pre-allocated output[${Te}] for session=${r}.`):s._OrtBindOutput(se,d[Oe],0,ut[Oe])!==0&&ot(`Can't bind output[${Te}] to ${Ee[Te]} for session=${r}.`)}}s.jsepOnRunStart?.();let Xe;p?Xe=await s._OrtRunWithBinding(u,p.handle,b,F,v):Xe=await s._OrtRun(u,L,P,m,G,b,F,v),Xe!==0&&ot("failed to call OrtRun().");let Ye=[];for(let se=0;se<b;se++){let Ee=s.HEAPU32[F/4+se];if(Ee===$[se]){Ye.push(o[se]);continue}let ut=s.stackSave(),Te=s.stackAlloc(4*4),Oe=!1,xe,Pe=0;try{s._OrtGetTensorData(Ee,Te,Te+4,Te+8,Te+12)!==0&&ot(`Can't access output tensor data on index ${se}.`);let Qe=Te/4,yt=s.HEAPU32[Qe++];Pe=s.HEAPU32[Qe++];let Z=s.HEAPU32[Qe++],ge=s.HEAPU32[Qe++],Ie=[];for(let Je=0;Je<ge;Je++)Ie.push(s.HEAPU32[Z/4+Je]);s._OrtFree(Z);let kt=Ie.reduce((Je,vt)=>Je*vt,1);xe=Xt(yt);let Vt=p?.outputPreferredLocations[t[se]];if(xe==="string"){if(Vt==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let Je=[],vt=Pe/4;for(let zr=0;zr<kt;zr++){let Mr=s.HEAPU32[vt++],sn=zr===kt-1?void 0:s.HEAPU32[vt]-Mr;Je.push(s.UTF8ToString(Mr,sn))}Ye.push([xe,Ie,Je,"cpu"])}else if(Vt==="gpu-buffer"&&kt>0){let Je=s.jsepGetBuffer(Pe),vt=qo(yt);if(vt===void 0||!Aa(xe))throw new Error(`Unsupported data type: ${xe}`);Oe=!0,Ye.push([xe,Ie,{gpuBuffer:Je,download:s.jsepCreateDownloader(Je,kt*vt,xe),dispose:()=>{s._OrtReleaseTensor(Ee)}},"gpu-buffer"])}else{let Je=Ia(xe),vt=new Je(kt);new Uint8Array(vt.buffer,vt.byteOffset,vt.byteLength).set(s.HEAPU8.subarray(Pe,Pe+vt.byteLength)),Ye.push([xe,Ie,vt,"cpu"])}}finally{s.stackRestore(ut),xe==="string"&&Pe&&s._free(Pe),Oe||s._OrtReleaseTensor(Ee)}}return p&&s._OrtClearBoundOutputs(p.handle),Ye}finally{s.stackRestore(O),A.forEach(J=>s._OrtReleaseTensor(J)),$.forEach(J=>s._OrtReleaseTensor(J)),_.forEach(J=>s._free(J)),v!==0&&s._OrtReleaseRunOptions(v),w.forEach(J=>s._free(J))}},u0=r=>{let e=dt(),n=Qo.get(r);if(!n)throw new Error("invalid session id");let t=n[0],o=e._OrtEndProfiling(t);o===0&&ot("Can't get an profile file name."),e._OrtFree(o)},l0=r=>{let e=[];for(let n of r){let t=n[2];!Array.isArray(t)&&"buffer"in t&&e.push(t.buffer)}return e}});var c0=et((_M,eT)=>{eT.exports='/*!\n * ONNX Runtime Web v1.18.0\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n"use strict";(()=>{var eo=Object.defineProperty;var kl=Object.getOwnPropertyDescriptor;var Rl=Object.getOwnPropertyNames;var Bl=Object.prototype.hasOwnProperty;var Q=(e,t)=>()=>(e&&(t=e(e=0)),t);var Br=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),hn=(e,t)=>{for(var r in t)eo(e,r,{get:t[r],enumerable:!0})},Dl=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of Rl(t))!Bl.call(e,i)&&i!==r&&eo(e,i,{get:()=>t[i],enumerable:!(o=kl(t,i))||o.enumerable});return e};var ur=e=>Dl(eo({},"__esModule",{value:!0}),e);var to={};hn(to,{createReadStream:()=>yi,readFile:()=>Ml,readFileSync:()=>zl});var Ml,zl,yi,ro=Q(()=>{Ml=void 0,zl=void 0,yi=void 0});var no={};hn(no,{join:()=>Ul});var Ul,oo=Q(()=>{Ul=void 0});var vi=Br((wi,io)=>{"use strict";var bi=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){var r=t,o,i;r.ready=new Promise((s,c)=>{o=s,i=c}),r.mountExternalData=(s,c)=>{(r.gb||(r.gb=new Map)).set(s,c)},r.unmountExternalData=()=>{delete r.gb},r.jsepInit=(s,c,g,$,I,D,H,X)=>{r.Fb=s,r.vb=c,r.xb=g,r.ob=$,r.wb=I,r.Sa=D,r.yb=H,r.zb=X,c=(q,j,ne)=>(...fe)=>{let $e=Je,k=j?.();fe=q(...fe);let ae=j?.();return k!==ae&&(q=ae,ne(k),j=ne=null),Je!=$e?Zr():fe},g=q=>async(...j)=>{try{if(r.fb)throw Error("Session already started");let ne=r.fb={Ab:j[0],errors:[]},fe=await q(...j);if(r.fb!==ne)throw Error("Session mismatch");s.flush();let $e=ne.errors;if(0<$e.length){let k=await Promise.all($e);if(k=k.filter(ae=>ae),0<k.length)throw Error(k.join(`\n`))}return fe}finally{r.fb=null}},r._OrtCreateSession=c(r._OrtCreateSession,()=>r._OrtCreateSession,q=>r._OrtCreateSession=q),r._OrtRun=g(c(r._OrtRun,()=>r._OrtRun,q=>r._OrtRun=q)),r._OrtRunWithBinding=g(c(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,q=>r._OrtRunWithBinding=q)),r._OrtBindInput=c(r._OrtBindInput,()=>r._OrtBindInput,q=>r._OrtBindInput=q),r.jsepRegisterBuffer=(q,j,ne,fe)=>s.registerBuffer(q,j,ne,fe),r.jsepUnregisterBuffers=q=>{s.unregisterBuffers(q)},r.jsepGetBuffer=q=>s.getBuffer(q),r.jsepCreateDownloader=(q,j,ne)=>s.createDownloader(q,j,ne),r.jsepOnRunStart=()=>s.onRunStart()};var u=Object.assign({},r),a="./this.program",p=(s,c)=>{throw c},m=typeof window=="object",h=typeof importScripts=="function",d=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",y="",w,_,v;if(d){var x=(ro(),ur(to)),T=(oo(),ur(no));y=h?T.dirname(y)+"/":__dirname+"/",w=(s,c)=>(s=ie(s)?new URL(s):T.normalize(s),x.readFileSync(s,c?void 0:"utf8")),v=s=>(s=w(s,!0),s.buffer||(s=new Uint8Array(s)),s),_=(s,c,g,$=!0)=>{s=ie(s)?new URL(s):T.normalize(s),x.readFile(s,$?void 0:"utf8",(I,D)=>{I?g(I):c($?D.buffer:D)})},!r.thisProgram&&1<process.argv.length&&(a=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),p=(s,c)=>{throw process.exitCode=s,c},r.inspect=()=>"[Emscripten Module object]"}else(m||h)&&(h?y=self.location.href:typeof document<"u"&&document.currentScript&&(y=document.currentScript.src),e&&(y=e),y.indexOf("blob:")!==0?y=y.substr(0,y.replace(/[?#].*/,"").lastIndexOf("/")+1):y="",w=s=>{var c=new XMLHttpRequest;return c.open("GET",s,!1),c.send(null),c.responseText},h&&(v=s=>{var c=new XMLHttpRequest;return c.open("GET",s,!1),c.responseType="arraybuffer",c.send(null),new Uint8Array(c.response)}),_=(s,c,g)=>{var $=new XMLHttpRequest;$.open("GET",s,!0),$.responseType="arraybuffer",$.onload=()=>{$.status==200||$.status==0&&$.response?c($.response):g()},$.onerror=g,$.send(null)});var C=console.log.bind(console),S=console.error.bind(console);Object.assign(r,u),u=null,typeof WebAssembly!="object"&&Ge("no native wasm support detected");var E,O=!1,U,M,N,Y,se,B,te,Pe,Ee,ee,be;function Me(){var s=E.buffer;r.HEAP8=M=new Int8Array(s),r.HEAP16=Y=new Int16Array(s),r.HEAPU8=N=new Uint8Array(s),r.HEAPU16=se=new Uint16Array(s),r.HEAP32=B=new Int32Array(s),r.HEAPU32=te=new Uint32Array(s),r.HEAPF32=Pe=new Float32Array(s),r.HEAPF64=be=new Float64Array(s),r.HEAP64=Ee=new BigInt64Array(s),r.HEAPU64=ee=new BigUint64Array(s)}var pe=[],ye=[],de=[],we=0,ze=null,Re=null;function Ge(s){throw s="Aborted("+s+")",S(s),O=!0,U=1,s=new WebAssembly.RuntimeError(s+". Build with -sASSERTIONS for more info."),i(s),s}var F=s=>s.startsWith("data:application/octet-stream;base64,"),ie=s=>s.startsWith("file://"),he;if(he="ort-wasm-simd.wasm",!F(he)){var Xe=he;he=r.locateFile?r.locateFile(Xe,y):y+Xe}function nt(s){if(v)return v(s);throw"both async and sync fetching of the wasm failed"}function ke(s){if(m||h){if(typeof fetch=="function"&&!ie(s))return fetch(s,{credentials:"same-origin"}).then(c=>{if(!c.ok)throw"failed to load wasm binary file at \'"+s+"\'";return c.arrayBuffer()}).catch(()=>nt(s));if(_)return new Promise((c,g)=>{_(s,$=>c(new Uint8Array($)),g)})}return Promise.resolve().then(()=>nt(s))}function Le(s,c,g){return ke(s).then($=>WebAssembly.instantiate($,c)).then($=>$).then(g,$=>{S(`failed to asynchronously prepare wasm: ${$}`),Ge($)})}function It(s,c){var g=he;return typeof WebAssembly.instantiateStreaming!="function"||F(g)||ie(g)||d||typeof fetch!="function"?Le(g,s,c):fetch(g,{credentials:"same-origin"}).then($=>WebAssembly.instantiateStreaming($,s).then(c,function(I){return S(`wasm streaming compile failed: ${I}`),S("falling back to ArrayBuffer instantiation"),Le(g,s,c)}))}var Tt={903368:(s,c,g,$)=>{if(typeof r>"u"||!r.gb)return 1;if(s=Fe(s>>>0),s.startsWith("./")&&(s=s.substring(2)),s=r.gb.get(s),!s)return 2;if(c>>>=0,g>>>=0,c+g>s.byteLength)return 3;try{return N.set(s.subarray(c,c+g),$>>>0>>>0),0}catch{return 4}},903869:s=>r.vb(s),903902:s=>r.xb(s),903934:(s,c,g)=>{r.ob(s,c,g,!0)},903973:(s,c,g)=>{r.ob(s,c,g)},904006:s=>{r.Sa("Abs",s,void 0)},904057:s=>{r.Sa("Neg",s,void 0)},904108:s=>{r.Sa("Floor",s,void 0)},904161:s=>{r.Sa("Ceil",s,void 0)},904213:s=>{r.Sa("Reciprocal",s,void 0)},904271:s=>{r.Sa("Sqrt",s,void 0)},904323:s=>{r.Sa("Exp",s,void 0)},904374:s=>{r.Sa("Erf",s,void 0)},904425:s=>{r.Sa("Sigmoid",s,void 0)},904480:(s,c,g)=>{r.Sa("HardSigmoid",s,{alpha:c,beta:g})},904559:s=>{r.Sa("Log",s,void 0)},904610:s=>{r.Sa("Sin",s,void 0)},904661:s=>{r.Sa("Cos",s,void 0)},904712:s=>{r.Sa("Tan",s,void 0)},904763:s=>{r.Sa("Asin",s,void 0)},904815:s=>{r.Sa("Acos",s,void 0)},904867:s=>{r.Sa("Atan",s,void 0)},904919:s=>{r.Sa("Sinh",s,void 0)},904971:s=>{r.Sa("Cosh",s,void 0)},905023:s=>{r.Sa("Asinh",s,void 0)},905076:s=>{r.Sa("Acosh",s,void 0)},905129:s=>{r.Sa("Atanh",s,void 0)},905182:s=>{r.Sa("Tanh",s,void 0)},905234:s=>{r.Sa("Not",s,void 0)},905285:(s,c,g)=>{r.Sa("Clip",s,{min:c,max:g})},905354:s=>{r.Sa("Clip",s,void 0)},905406:(s,c)=>{r.Sa("Elu",s,{alpha:c})},905464:s=>{r.Sa("Relu",s,void 0)},905516:(s,c)=>{r.Sa("LeakyRelu",s,{alpha:c})},905580:(s,c)=>{r.Sa("ThresholdedRelu",s,{alpha:c})},905650:(s,c)=>{r.Sa("Cast",s,{to:c})},905708:s=>{r.Sa("Add",s,void 0)},905759:s=>{r.Sa("Sub",s,void 0)},905810:s=>{r.Sa("Mul",s,void 0)},905861:s=>{r.Sa("Div",s,void 0)},905912:s=>{r.Sa("Pow",s,void 0)},905963:s=>{r.Sa("Equal",s,void 0)},906016:s=>{r.Sa("Greater",s,void 0)},906071:s=>{r.Sa("GreaterOrEqual",s,void 0)},906133:s=>{r.Sa("Less",s,void 0)},906185:s=>{r.Sa("LessOrEqual",s,void 0)},906244:(s,c,g,$,I)=>{r.Sa("ReduceMean",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(B.subarray($>>>0,I>>>0)):[]})},906403:(s,c,g,$,I)=>{r.Sa("ReduceMax",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(B.subarray($>>>0,I>>>0)):[]})},906561:(s,c,g,$,I)=>{r.Sa("ReduceMin",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(B.subarray($>>>0,I>>>0)):[]})},906719:(s,c,g,$,I)=>{r.Sa("ReduceProd",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(B.subarray($>>>0,I>>>0)):[]})},906878:(s,c,g,$,I)=>{r.Sa("ReduceSum",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(B.subarray($>>>0,I>>>0)):[]})},907036:(s,c,g,$,I)=>{r.Sa("ReduceL1",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(B.subarray($>>>0,I>>>0)):[]})},907193:(s,c,g,$,I)=>{r.Sa("ReduceL2",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(B.subarray($>>>0,I>>>0)):[]})},907350:(s,c,g,$,I)=>{r.Sa("ReduceLogSum",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(B.subarray($>>>0,I>>>0)):[]})},907511:(s,c,g,$,I)=>{r.Sa("ReduceSumSquare",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(B.subarray($>>>0,I>>>0)):[]})},907675:(s,c,g,$,I)=>{r.Sa("ReduceLogSumExp",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(B.subarray($>>>0,I>>>0)):[]})},907839:s=>{r.Sa("Where",s,void 0)},907892:(s,c,g)=>{r.Sa("Transpose",s,{perm:c?Array.from(B.subarray(c>>>0,g>>>0)):[]})},908e3:(s,c,g,$,I,D,H,X,q,j,ne,fe,$e,k,ae)=>{r.Sa("ConvTranspose",s,{format:q?"NHWC":"NCHW",autoPad:c,dilations:[g],group:$,kernel_shape:[I],pads:[D,H],strides:[X],wIsConst:()=>!!M[j>>>0],outputPadding:ne?Array.from(B.subarray(ne>>>0,fe>>>0)):[],outputShape:$e?Array.from(B.subarray($e>>>0,k>>>0)):[],activation:Fe(ae)})},908402:(s,c,g,$,I,D,H,X,q,j,ne,fe,$e,k)=>{r.Sa("ConvTranspose",s,{format:X?"NHWC":"NCHW",autoPad:c,dilations:Array.from(B.subarray(g>>>0,(g>>>0)+2>>>0)),group:$,kernelShape:Array.from(B.subarray(I>>>0,(I>>>0)+2>>>0)),pads:Array.from(B.subarray(D>>>0,(D>>>0)+4>>>0)),strides:Array.from(B.subarray(H>>>0,(H>>>0)+2>>>0)),wIsConst:()=>!!M[q>>>0],outputPadding:j?Array.from(B.subarray(j>>>0,ne>>>0)):[],outputShape:fe?Array.from(B.subarray(fe>>>0,$e>>>0)):[],activation:Fe(k)})},908967:(s,c,g,$,I,D,H,X,q,j,ne,fe,$e,k,ae)=>{r.Sa("ConvTranspose",s,{format:q?"NHWC":"NCHW",autoPad:c,dilations:[g],group:$,kernel_shape:[I],pads:[D,H],strides:[X],wIsConst:()=>!!M[j>>>0],outputPadding:ne?Array.from(B.subarray(ne>>>0,fe>>>0)):[],outputShape:$e?Array.from(B.subarray($e>>>0,k>>>0)):[],activation:Fe(ae)})},909369:(s,c,g,$,I,D,H,X,q,j,ne,fe,$e,k)=>{r.Sa("ConvTranspose",s,{format:X?"NHWC":"NCHW",autoPad:c,dilations:Array.from(B.subarray(g>>>0,(g>>>0)+2>>>0)),group:$,kernelShape:Array.from(B.subarray(I>>>0,(I>>>0)+2>>>0)),pads:Array.from(B.subarray(D>>>0,(D>>>0)+4>>>0)),strides:Array.from(B.subarray(H>>>0,(H>>>0)+2>>>0)),wIsConst:()=>!!M[q>>>0],outputPadding:j?Array.from(B.subarray(j>>>0,ne>>>0)):[],outputShape:fe?Array.from(B.subarray(fe>>>0,$e>>>0)):[],activation:Fe(k)})},909934:(s,c)=>{r.Sa("GlobalAveragePool",s,{format:c?"NHWC":"NCHW"})},910025:(s,c,g,$,I,D,H,X,q,j,ne,fe,$e,k,ae,Ae)=>{r.Sa("AveragePool",s,{format:Ae?"NHWC":"NCHW",auto_pad:c,ceil_mode:g,count_include_pad:$,storage_order:I,dilations:[D,H],kernel_shape:[X,q],pads:[j,ne,fe,$e],strides:[k,ae]})},910309:(s,c)=>{r.Sa("GlobalAveragePool",s,{format:c?"NHWC":"NCHW"})},910400:(s,c,g,$,I,D,H,X,q,j,ne,fe,$e,k,ae,Ae)=>{r.Sa("AveragePool",s,{format:Ae?"NHWC":"NCHW",auto_pad:c,ceil_mode:g,count_include_pad:$,storage_order:I,dilations:[D,H],kernel_shape:[X,q],pads:[j,ne,fe,$e],strides:[k,ae]})},910684:(s,c)=>{r.Sa("GlobalMaxPool",s,{format:c?"NHWC":"NCHW"})},910771:(s,c,g,$,I,D,H,X,q,j,ne,fe,$e,k,ae,Ae)=>{r.Sa("MaxPool",s,{format:Ae?"NHWC":"NCHW",auto_pad:c,ceil_mode:g,count_include_pad:$,storage_order:I,dilations:[D,H],kernel_shape:[X,q],pads:[j,ne,fe,$e],strides:[k,ae]})},911051:(s,c)=>{r.Sa("GlobalMaxPool",s,{format:c?"NHWC":"NCHW"})},911138:(s,c,g,$,I,D,H,X,q,j,ne,fe,$e,k,ae,Ae)=>{r.Sa("MaxPool",s,{format:Ae?"NHWC":"NCHW",auto_pad:c,ceil_mode:g,count_include_pad:$,storage_order:I,dilations:[D,H],kernel_shape:[X,q],pads:[j,ne,fe,$e],strides:[k,ae]})},911418:(s,c,g,$,I)=>{r.Sa("Gemm",s,{alpha:c,beta:g,transA:$,transB:I})},911522:s=>{r.Sa("MatMul",s,void 0)},911576:(s,c,g,$)=>{r.Sa("ArgMax",s,{keepDims:!!c,selectLastIndex:!!g,axis:$})},911684:(s,c,g,$)=>{r.Sa("ArgMin",s,{keepDims:!!c,selectLastIndex:!!g,axis:$})},911792:(s,c)=>{r.Sa("Softmax",s,{axis:c})},911855:(s,c)=>{r.Sa("Concat",s,{axis:c})},911915:(s,c,g,$,I)=>{r.Sa("Split",s,{axis:c,numOutputs:g,splitSizes:$?Array.from(B.subarray($>>>0,I>>>0)):[]})},912055:s=>{r.Sa("Expand",s,void 0)},912109:(s,c)=>{r.Sa("Gather",s,{axis:Number(c)})},912180:(s,c)=>{r.Sa("GatherElements",s,{axis:Number(c)})},912259:(s,c,g,$,I,D,H,X,q,j,ne)=>{r.Sa("Resize",s,{antialias:c,axes:g?Array.from(B.subarray(g>>>0,$>>>0)):[],coordinateTransformMode:Fe(I),cubicCoeffA:D,excludeOutside:H,extrapolationValue:X,keepAspectRatioPolicy:Fe(q),mode:Fe(j),nearestMode:Fe(ne)})},912605:(s,c,g,$,I,D,H)=>{r.Sa("Slice",s,{starts:c?Array.from(B.subarray(c>>>0,g>>>0)):[],ends:$?Array.from(B.subarray($>>>0,I>>>0)):[],axes:D?Array.from(B.subarray(D>>>0,H>>>0)):[]})},912821:s=>{r.Sa("Tile",s,void 0)},912873:(s,c,g)=>{r.Sa("LayerNormalization",s,{axis:Number(c),epsilon:Number(g)})},912980:(s,c,g)=>{r.Sa("InstanceNormalization",s,{epsilon:c,format:g?"NHWC":"NCHW"})},913094:(s,c,g)=>{r.Sa("InstanceNormalization",s,{epsilon:c,format:g?"NHWC":"NCHW"})},913208:s=>{r.Sa("Range",s,void 0)},913261:(s,c)=>{r.Sa("Einsum",s,{equation:Fe(c)})},913342:(s,c,g,$,I)=>{r.Sa("Pad",s,{mode:c,value:g,pads:$?Array.from(B.subarray($>>>0,I>>>0)):[]})},913469:(s,c,g,$,I,D)=>{r.Sa("BatchNormalization",s,{epsilon:c,momentum:g,spatial:!!I,trainingMode:!!$,format:D?"NHWC":"NCHW"})},913638:(s,c,g,$,I,D)=>{r.Sa("BatchNormalization",s,{epsilon:c,momentum:g,spatial:!!I,trainingMode:!!$,format:D?"NHWC":"NCHW"})},913807:(s,c,g)=>{r.Sa("CumSum",s,{exclusive:Number(c),reverse:Number(g)})},913904:(s,c,g,$,I,D,H,X,q)=>{r.Sa("Attention",s,{numHeads:c,isUnidirectional:g,maskFilterValue:$,scale:I,doRotary:D,qkvHiddenSizes:H?Array.from(B.subarray(Number(X)>>>0,Number(X)+H>>>0)):[],pastPresentShareBuffer:!!q})},914176:s=>{r.Sa("Gelu",s,void 0)},914228:(s,c,g,$,I,D)=>{r.Sa("MultiHeadAttention",s,{numHeads:c,isUnidirectional:g,maskFilterValue:$,scale:I,doRotary:D})},914387:s=>{r.Sa("BiasAdd",s,void 0)},914442:s=>{r.Sa("BiasSplitGelu",s,void 0)},914503:(s,c)=>{r.Sa("SkipLayerNormalization",s,{epsilon:c})},914584:(s,c,g,$,I,D,H,X,q,j,ne,fe,$e)=>{r.Sa("Conv",s,{format:q?"NHWC":"NCHW",auto_pad:c,dilations:[g],group:$,kernel_shape:[I],pads:D?Array.from(B.subarray(D>>>0,H>>>0)):[],strides:[X],w_is_const:()=>!!M[j>>>0],activation:Fe(ne),activation_params:fe?Array.from(Pe.subarray(fe>>>0,$e>>>0)):[]})},914954:(s,c,g,$,I,D,H,X,q,j,ne,fe,$e,k,ae,Ae)=>{r.Sa("Conv",s,{format:fe?"NHWC":"NCHW",auto_pad:c,dilations:[g,$],group:I,kernel_shape:[D,H],pads:X?Array.from(B.subarray(X>>>0,q>>>0)):[],strides:[j,ne],w_is_const:()=>!!M[$e>>>0],activation:Fe(k),activation_params:ae?Array.from(Pe.subarray(ae>>>0,Ae>>>0)):[]})},915345:s=>{r.yb(s)},915379:(s,c)=>r.zb(s,c,r.fb.Ab,r.fb.errors)};function Vt(s){this.name="ExitStatus",this.message=`Program terminated with exit(${s})`,this.status=s}function Rt(s){this.cb=s-24,this.rb=function(c){te[this.cb+4>>>2>>>0]=c},this.qb=function(c){te[this.cb+8>>>2>>>0]=c},this.kb=function(c,g){this.jb(),this.rb(c),this.qb(g)},this.jb=function(){te[this.cb+16>>>2>>>0]=0}}var Jt=0,Wt=0,mr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Bt=(s,c,g)=>{c>>>=0;var $=c+g;for(g=c;s[g]&&!(g>=$);)++g;if(16<g-c&&s.buffer&&mr)return mr.decode(s.subarray(c,g));for($="";c<g;){var I=s[c++];if(I&128){var D=s[c++]&63;if((I&224)==192)$+=String.fromCharCode((I&31)<<6|D);else{var H=s[c++]&63;I=(I&240)==224?(I&15)<<12|D<<6|H:(I&7)<<18|D<<12|H<<6|s[c++]&63,65536>I?$+=String.fromCharCode(I):(I-=65536,$+=String.fromCharCode(55296|I>>10,56320|I&1023))}}else $+=String.fromCharCode(I)}return $},Fe=(s,c)=>(s>>>=0)?Bt(N,s,c):"",Et=s=>{for(var c=0,g=0;g<s.length;++g){var $=s.charCodeAt(g);127>=$?c++:2047>=$?c+=2:55296<=$&&57343>=$?(c+=4,++g):c+=3}return c},bt=(s,c,g,$)=>{if(g>>>=0,!(0<$))return 0;var I=g;$=g+$-1;for(var D=0;D<s.length;++D){var H=s.charCodeAt(D);if(55296<=H&&57343>=H){var X=s.charCodeAt(++D);H=65536+((H&1023)<<10)|X&1023}if(127>=H){if(g>=$)break;c[g++>>>0]=H}else{if(2047>=H){if(g+1>=$)break;c[g++>>>0]=192|H>>6}else{if(65535>=H){if(g+2>=$)break;c[g++>>>0]=224|H>>12}else{if(g+3>=$)break;c[g++>>>0]=240|H>>18,c[g++>>>0]=128|H>>12&63}c[g++>>>0]=128|H>>6&63}c[g++>>>0]=128|H&63}}return c[g>>>0]=0,g-I},fr=s=>{if(s===null)return"null";var c=typeof s;return c==="object"||c==="array"||c==="function"?s.toString():""+s},Gr,ot=s=>{for(var c="";N[s>>>0];)c+=Gr[N[s++>>>0]];return c},hr={},Nt={},gr={},ct;function Lr(s,c,g={}){var $=c.name;if(!s)throw new ct(`type "${$}" must have a positive integer typeid pointer`);if(Nt.hasOwnProperty(s)){if(g.tb)return;throw new ct(`Cannot register type \'${$}\' twice`)}Nt[s]=c,delete gr[s],hr.hasOwnProperty(s)&&(c=hr[s],delete hr[s],c.forEach(I=>I()))}function qe(s,c,g={}){if(!("argPackAdvance"in c))throw new TypeError("registerType registeredInstance requires argPackAdvance");Lr(s,c,g)}var yr=(s,c,g)=>{switch(c){case 1:return g?$=>M[$>>>0>>>0]:$=>N[$>>>0>>>0];case 2:return g?$=>Y[$>>>1>>>0]:$=>se[$>>>1>>>0];case 4:return g?$=>B[$>>>2>>>0]:$=>te[$>>>2>>>0];case 8:return g?$=>Ee[$>>>3]:$=>ee[$>>>3];default:throw new TypeError(`invalid integer width (${c}): ${s}`)}};function br(){this.$a=[void 0],this.nb=[]}var Oe=new br;function wr(s){s>>>=0,s>=Oe.cb&&--Oe.get(s).pb===0&&Oe.jb(s)}var ve=s=>{if(!s)throw new ct("Cannot use deleted val. handle = "+s);return Oe.get(s).value},it=s=>{switch(s){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return Oe.kb({pb:1,value:s})}};function Qt(s){return this.fromWireType(B[s>>>2>>>0])}var vr=(s,c)=>{switch(c){case 4:return function(g){return this.fromWireType(Pe[g>>>2>>>0])};case 8:return function(g){return this.fromWireType(be[g>>>3>>>0])};default:throw new TypeError(`invalid float width (${c}): ${s}`)}};function Hn(s){return this.fromWireType(te[s>>>2>>>0])}var $r=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Gn=(s,c)=>{for(var g=s>>1,$=g+c/2;!(g>=$)&&se[g>>>0];)++g;if(g<<=1,32<g-s&&$r)return $r.decode(N.subarray(s>>>0,g>>>0));for(g="",$=0;!($>=c/2);++$){var I=Y[s+2*$>>>1>>>0];if(I==0)break;g+=String.fromCharCode(I)}return g},me=(s,c,g)=>{if(g??=2147483647,2>g)return 0;g-=2;var $=c;g=g<2*s.length?g/2:s.length;for(var I=0;I<g;++I)Y[c>>>1>>>0]=s.charCodeAt(I),c+=2;return Y[c>>>1>>>0]=0,c-$},er=s=>2*s.length,Fr=(s,c)=>{for(var g=0,$="";!(g>=c/4);){var I=B[s+4*g>>>2>>>0];if(I==0)break;++g,65536<=I?(I-=65536,$+=String.fromCharCode(55296|I>>10,56320|I&1023)):$+=String.fromCharCode(I)}return $},Ln=(s,c,g)=>{if(c>>>=0,g??=2147483647,4>g)return 0;var $=c;g=$+g-4;for(var I=0;I<s.length;++I){var D=s.charCodeAt(I);if(55296<=D&&57343>=D){var H=s.charCodeAt(++I);D=65536+((D&1023)<<10)|H&1023}if(B[c>>>2>>>0]=D,c+=4,c+4>g)break}return B[c>>>2>>>0]=0,c-$},jr=s=>{for(var c=0,g=0;g<s.length;++g){var $=s.charCodeAt(g);55296<=$&&57343>=$&&++g,c+=4}return c},_r=(s,c)=>{var g=Nt[s];if(g===void 0)throw s=Ft(s),g=ot(s),at(s),new ct(c+" has unknown type "+g);return g},Sr=(s,c,g)=>{var $=[];return s=s.toWireType($,g),$.length&&(te[c>>>2>>>0]=it($)),s},Ht=s=>{try{s()}catch(c){Ge(c)}};function qr(){var s=ue,c={};for(let[g,$]of Object.entries(s))c[g]=typeof $=="function"?function(){Dt.push(g);try{return $.apply(null,arguments)}finally{O||(Dt.pop(),Je&&mt===1&&Dt.length===0&&(mt=0,Ht(ln),typeof Fibers<"u"&&Fibers.Hb()))}}:$;return c}var mt=0,Je=null,xr=0,Dt=[],Cr={},Ar={},Kr=0,tr=null,Yr=[];function Zr(){return new Promise((s,c)=>{tr={resolve:s,reject:c}})}function Xr(){var s=Mt(65548),c=s+12;te[s>>>2>>>0]=c,te[s+4>>>2>>>0]=c+65536,c=Dt[0];var g=Cr[c];return g===void 0&&(g=Kr++,Cr[c]=g,Ar[g]=c),B[s+8>>>2>>>0]=g,s}function Jr(s){if(!O){if(mt===0){var c=!1,g=!1;s(($=0)=>{if(!O&&(xr=$,c=!0,g)){mt=2,Ht(()=>ft(Je)),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.resume(),$=!1;try{var I=(0,ue[Ar[B[Je+8>>>2>>>0]]])()}catch(X){I=X,$=!0}var D=!1;if(!Je){var H=tr;H&&(tr=null,($?H.reject:H.resolve)(I),D=!0)}if($&&!D)throw I}}),g=!0,c||(mt=1,Je=Xr(),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.pause(),Ht(()=>jt(Je)))}else mt===2?(mt=0,Ht(dt),at(Je),Je=null,Yr.forEach($=>{if(!O)try{$();try{U=U=$=U,r.onExit?.($),O=!0,p($,new Vt($))}catch(I){I instanceof Vt||I=="unwind"||p(1,I)}}catch(I){I instanceof Vt||I=="unwind"||p(1,I)}})):Ge(`invalid state: ${mt}`);return xr}}function Ir(s){return Jr(c=>{s().then(c)})}var Gt=[],Qr={},rr=s=>{var c=Qr[s];return c===void 0?ot(s):c},Tr=()=>typeof globalThis=="object"?globalThis:Function("return this")(),lt=s=>{var c=Gt.length;return Gt.push(s),c},Er=(s,c)=>{for(var g=Array(s),$=0;$<s;++$)g[$]=_r(te[c+4*$>>>2>>>0],"parameter "+$);return g},nr=(s,c)=>Object.defineProperty(c,"name",{value:s});function Fn(s){var c=Function;if(!(c instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof c} which is not a function`);var g=nr(c.name||"unknownFunctionName",function(){});return g.prototype=c.prototype,g=new g,s=c.apply(g,s),s instanceof Object?s:g}var Qe=s=>s%4===0&&(s%100!==0||s%400===0),en=[0,31,60,91,121,152,182,213,244,274,305,335],pt=[0,31,59,90,120,151,181,212,243,273,304,334],Pr=s=>{var c=Et(s)+1,g=Mt(c);return g&&bt(s,N,g,c),g},or=[],et=(s,c)=>{or.length=0;for(var g;g=N[s++>>>0];){var $=g!=105;$&=g!=112,c+=$&&c%8?4:0,or.push(g==112?te[c>>>2>>>0]:g==106?Ee[c>>>3]:g==105?B[c>>>2>>>0]:be[c>>>3>>>0]),c+=$?8:4}return or},Lt={},Ke=()=>{if(!tt){var s={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:a||"./this.program"},c;for(c in Lt)Lt[c]===void 0?delete s[c]:s[c]=Lt[c];var g=[];for(c in s)g.push(`${c}=${s[c]}`);tt=g}return tt},tt,tn=[null,[],[]],rn=[31,29,31,30,31,30,31,31,30,31,30,31],nn=[31,28,31,30,31,30,31,31,30,31,30,31];function on(s){var c=Array(Et(s)+1);return bt(s,c,0,c.length),c}function an(s,c,g,$){function I(k,ae,Ae){for(k=typeof k=="number"?k.toString():k||"";k.length<ae;)k=Ae[0]+k;return k}function D(k,ae){return I(k,ae,"0")}function H(k,ae){function Ae(kt){return 0>kt?-1:0<kt?1:0}var Ot;return(Ot=Ae(k.getFullYear()-ae.getFullYear()))===0&&(Ot=Ae(k.getMonth()-ae.getMonth()))===0&&(Ot=Ae(k.getDate()-ae.getDate())),Ot}function X(k){switch(k.getDay()){case 0:return new Date(k.getFullYear()-1,11,29);case 1:return k;case 2:return new Date(k.getFullYear(),0,3);case 3:return new Date(k.getFullYear(),0,2);case 4:return new Date(k.getFullYear(),0,1);case 5:return new Date(k.getFullYear()-1,11,31);case 6:return new Date(k.getFullYear()-1,11,30)}}function q(k){var ae=k.ab;for(k=new Date(new Date(k.bb+1900,0,1).getTime());0<ae;){var Ae=k.getMonth(),Ot=(Qe(k.getFullYear())?rn:nn)[Ae];if(ae>Ot-k.getDate())ae-=Ot-k.getDate()+1,k.setDate(1),11>Ae?k.setMonth(Ae+1):(k.setMonth(0),k.setFullYear(k.getFullYear()+1));else{k.setDate(k.getDate()+ae);break}}return Ae=new Date(k.getFullYear()+1,0,4),ae=X(new Date(k.getFullYear(),0,4)),Ae=X(Ae),0>=H(ae,k)?0>=H(Ae,k)?k.getFullYear()+1:k.getFullYear():k.getFullYear()-1}s>>>=0,c>>>=0,g>>>=0,$>>>=0;var j=te[$+40>>>2>>>0];$={Db:B[$>>>2>>>0],Cb:B[$+4>>>2>>>0],hb:B[$+8>>>2>>>0],mb:B[$+12>>>2>>>0],ib:B[$+16>>>2>>>0],bb:B[$+20>>>2>>>0],Wa:B[$+24>>>2>>>0],ab:B[$+28>>>2>>>0],Gb:B[$+32>>>2>>>0],Bb:B[$+36>>>2>>>0],Eb:j?Fe(j):""},g=Fe(g),j={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ne in j)g=g.replace(new RegExp(ne,"g"),j[ne]);var fe="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),$e="January February March April May June July August September October November December".split(" ");j={"%a":k=>fe[k.Wa].substring(0,3),"%A":k=>fe[k.Wa],"%b":k=>$e[k.ib].substring(0,3),"%B":k=>$e[k.ib],"%C":k=>D((k.bb+1900)/100|0,2),"%d":k=>D(k.mb,2),"%e":k=>I(k.mb,2," "),"%g":k=>q(k).toString().substring(2),"%G":k=>q(k),"%H":k=>D(k.hb,2),"%I":k=>(k=k.hb,k==0?k=12:12<k&&(k-=12),D(k,2)),"%j":k=>{for(var ae=0,Ae=0;Ae<=k.ib-1;ae+=(Qe(k.bb+1900)?rn:nn)[Ae++]);return D(k.mb+ae,3)},"%m":k=>D(k.ib+1,2),"%M":k=>D(k.Cb,2),"%n":()=>`\n`,"%p":k=>0<=k.hb&&12>k.hb?"AM":"PM","%S":k=>D(k.Db,2),"%t":()=>"	","%u":k=>k.Wa||7,"%U":k=>D(Math.floor((k.ab+7-k.Wa)/7),2),"%V":k=>{var ae=Math.floor((k.ab+7-(k.Wa+6)%7)/7);if(2>=(k.Wa+371-k.ab-2)%7&&ae++,ae)ae==53&&(Ae=(k.Wa+371-k.ab)%7,Ae==4||Ae==3&&Qe(k.bb)||(ae=1));else{ae=52;var Ae=(k.Wa+7-k.ab-1)%7;(Ae==4||Ae==5&&Qe(k.bb%400-1))&&ae++}return D(ae,2)},"%w":k=>k.Wa,"%W":k=>D(Math.floor((k.ab+7-(k.Wa+6)%7)/7),2),"%y":k=>(k.bb+1900).toString().substring(2),"%Y":k=>k.bb+1900,"%z":k=>{k=k.Bb;var ae=0<=k;return k=Math.abs(k)/60,(ae?"+":"-")+("0000"+(k/60*100+k%60)).slice(-4)},"%Z":k=>k.Eb,"%%":()=>"%"},g=g.replace(/%%/g,"\\0\\0");for(ne in j)g.includes(ne)&&(g=g.replace(new RegExp(ne,"g"),j[ne]($)));return g=g.replace(/\\0\\0/g,"%"),ne=on(g),ne.length>c?0:(M.set(ne,s>>>0),ne.length-1)}for(var sn=Array(256),ir=0;256>ir;++ir)sn[ir]=String.fromCharCode(ir);Gr=sn,ct=r.BindingError=class extends Error{constructor(s){super(s),this.name="BindingError"}},r.InternalError=class extends Error{constructor(s){super(s),this.name="InternalError"}},Object.assign(br.prototype,{get(s){return this.$a[s]},has(s){return this.$a[s]!==void 0},kb(s){var c=this.nb.pop()||this.$a.length;return this.$a[c]=s,c},jb(s){this.$a[s]=void 0,this.nb.push(s)}}),Oe.$a.push({value:void 0},{value:null},{value:!0},{value:!1}),Oe.cb=Oe.$a.length,r.count_emval_handles=()=>{for(var s=0,c=Oe.cb;c<Oe.$a.length;++c)Oe.$a[c]!==void 0&&++s;return s};var jn={ia:function(s,c,g){return Ir(async()=>{await r.wb(s,c,g)})},a:function(s,c,g){throw s>>>=0,new Rt(s).kb(c>>>0,g>>>0),Jt=s,Wt++,Jt},w:function(){return 0},ca:function(){},P:function(){},R:function(){},J:function(){return 0},aa:function(){},X:function(){},$:function(){},D:function(){},Q:function(){},N:function(){},ba:function(){},O:function(){},G:function(s,c,g,$,I){c>>>=0,c=ot(c);var D=c.indexOf("u")!=-1;D&&(I=(1n<<64n)-1n),qe(s>>>0,{name:c,fromWireType:H=>H,toWireType:function(H,X){if(typeof X!="bigint"&&typeof X!="number")throw new TypeError(`Cannot convert "${fr(X)}" to ${this.name}`);if(X<$||X>I)throw new TypeError(`Passing a number "${fr(X)}" from JS side to C/C++ side to an argument of type "${c}", which is outside the valid range [${$}, ${I}]!`);return X},argPackAdvance:8,readValueFromPointer:yr(c,g>>>0,!D),eb:null})},ga:function(s,c,g,$){c=ot(c>>>0),qe(s>>>0,{name:c,fromWireType:function(I){return!!I},toWireType:function(I,D){return D?g:$},argPackAdvance:8,readValueFromPointer:function(I){return this.fromWireType(N[I>>>0])},eb:null})},fa:function(s,c){c=ot(c>>>0),qe(s>>>0,{name:c,fromWireType:g=>{var $=ve(g);return wr(g),$},toWireType:(g,$)=>it($),argPackAdvance:8,readValueFromPointer:Qt,eb:null})},F:function(s,c,g){c=ot(c>>>0),qe(s>>>0,{name:c,fromWireType:$=>$,toWireType:($,I)=>I,argPackAdvance:8,readValueFromPointer:vr(c,g>>>0),eb:null})},t:function(s,c,g,$,I){if(s>>>=0,g>>>=0,c=ot(c>>>0),I===-1&&(I=4294967295),I=X=>X,$===0){var D=32-8*g;I=X=>X<<D>>>D}var H=c.includes("unsigned")?function(X,q){return q>>>0}:function(X,q){return q};qe(s,{name:c,fromWireType:I,toWireType:H,argPackAdvance:8,readValueFromPointer:yr(c,g,$!==0),eb:null})},n:function(s,c,g){function $(D){return new I(M.buffer,te[D+4>>>2>>>0],te[D>>>2>>>0])}var I=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][c];g=ot(g>>>0),qe(s>>>0,{name:g,fromWireType:$,argPackAdvance:8,readValueFromPointer:$},{tb:!0})},H:function(s,c){c=ot(c>>>0);var g=c==="std::string";qe(s>>>0,{name:c,fromWireType:function($){var I=te[$>>>2>>>0],D=$+4;if(g)for(var H=D,X=0;X<=I;++X){var q=D+X;if(X==I||N[q>>>0]==0){if(H=Fe(H,q-H),j===void 0)var j=H;else j+=String.fromCharCode(0),j+=H;H=q+1}}else{for(j=Array(I),X=0;X<I;++X)j[X]=String.fromCharCode(N[D+X>>>0]);j=j.join("")}return at($),j},toWireType:function($,I){I instanceof ArrayBuffer&&(I=new Uint8Array(I));var D=typeof I=="string";if(!(D||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array))throw new ct("Cannot pass non-string to std::string");var H=g&&D?Et(I):I.length,X=Mt(4+H+1),q=X+4;if(te[X>>>2>>>0]=H,g&&D)bt(I,N,q,H+1);else if(D)for(D=0;D<H;++D){var j=I.charCodeAt(D);if(255<j)throw at(q),new ct("String has UTF-16 code units that do not fit in 8 bits");N[q+D>>>0]=j}else for(D=0;D<H;++D)N[q+D>>>0]=I[D];return $!==null&&$.push(at,X),X},argPackAdvance:8,readValueFromPointer:Hn,eb($){at($)}})},y:function(s,c,g){if(c>>>=0,g>>>=0,g=ot(g),c===2)var $=Gn,I=me,D=er,H=()=>se,X=1;else c===4&&($=Fr,I=Ln,D=jr,H=()=>te,X=2);qe(s>>>0,{name:g,fromWireType:q=>{for(var j=te[q>>>2>>>0],ne=H(),fe,$e=q+4,k=0;k<=j;++k){var ae=q+4+k*c;(k==j||ne[ae>>>X]==0)&&($e=$($e,ae-$e),fe===void 0?fe=$e:(fe+=String.fromCharCode(0),fe+=$e),$e=ae+c)}return at(q),fe},toWireType:(q,j)=>{if(typeof j!="string")throw new ct(`Cannot pass non-string to C++ string type ${g}`);var ne=D(j),fe=Mt(4+ne+c);return te[fe>>>2]=ne>>X,I(j,fe+4,ne+c),q!==null&&q.push(at,fe),fe},argPackAdvance:8,readValueFromPointer:Qt,eb(q){at(q)}})},ha:function(s,c){c=ot(c>>>0),qe(s>>>0,{ub:!0,name:c,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},da:()=>1,s:function(s,c,g){return c>>>=0,g>>>=0,s=ve(s>>>0),c=_r(c,"emval::as"),Sr(c,g,s)},v:function(s){return s>>>=0,Ir(()=>(s=ve(s),s.then(it)))},o:function(s,c,g,$){return g>>>=0,$>>>=0,s=Gt[s>>>0],c=ve(c>>>0),s(null,c,g,$)},k:function(s,c,g,$,I){return g>>>=0,$>>>=0,I>>>=0,s=Gt[s>>>0],c=ve(c>>>0),g=rr(g),s(c,c[g],$,I)},b:wr,z:function(s,c){return c>>>=0,s=ve(s>>>0),c=ve(c),s==c},m:function(s){return s>>>=0,s===0?it(Tr()):(s=rr(s),it(Tr()[s]))},i:function(s,c,g){c=Er(s,c>>>0);var $=c.shift();s--;var I=`return function (obj, func, destructorsRef, args) {\n`,D=0,H=[];g===0&&H.push("obj");for(var X=["retType"],q=[$],j=0;j<s;++j)H.push("arg"+j),X.push("argType"+j),q.push(c[j]),I+=`  var arg${j} = argType${j}.readValueFromPointer(args${D?"+"+D:""});\n`,D+=c[j].argPackAdvance;for(I+=`  var rv = ${g===1?"new func":"func.call"}(${H.join(", ")});\n`,j=0;j<s;++j)c[j].deleteObject&&(I+=`  argType${j}.deleteObject(arg${j});\n`);return $.ub||(X.push("emval_returnValue"),q.push(Sr),I+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),X.push(I+`};\n`),s=Fn(X).apply(null,q),g=`methodCaller<(${c.map(ne=>ne.name).join(", ")}) => ${$.name}>`,lt(nr(g,s))},r:function(s,c){return c>>>=0,s=ve(s>>>0),c=ve(c),it(s[c])},e:function(s){s>>>=0,4<s&&(Oe.get(s).pb+=1)},u:function(){return it([])},l:function(s){s=ve(s>>>0);for(var c=Array(s.length),g=0;g<s.length;g++)c[g]=s[g];return it(c)},d:function(s){return it(rr(s>>>0))},j:function(){return it({})},h:function(s){s>>>=0;for(var c=ve(s);c.length;){var g=c.pop();c.pop()(g)}wr(s)},g:function(s,c,g){c>>>=0,g>>>=0,s=ve(s>>>0),c=ve(c),g=ve(g),s[c]=g},c:function(s,c){return c>>>=0,s=_r(s>>>0,"_emval_take_value"),s=s.readValueFromPointer(c),it(s)},U:function(s,c){s=-9007199254740992>s||9007199254740992<s?NaN:Number(s),c>>>=0,s=new Date(1e3*s),B[c>>>2>>>0]=s.getUTCSeconds(),B[c+4>>>2>>>0]=s.getUTCMinutes(),B[c+8>>>2>>>0]=s.getUTCHours(),B[c+12>>>2>>>0]=s.getUTCDate(),B[c+16>>>2>>>0]=s.getUTCMonth(),B[c+20>>>2>>>0]=s.getUTCFullYear()-1900,B[c+24>>>2>>>0]=s.getUTCDay(),B[c+28>>>2>>>0]=(s.getTime()-Date.UTC(s.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},V:function(s,c){s=-9007199254740992>s||9007199254740992<s?NaN:Number(s),c>>>=0,s=new Date(1e3*s),B[c>>>2>>>0]=s.getSeconds(),B[c+4>>>2>>>0]=s.getMinutes(),B[c+8>>>2>>>0]=s.getHours(),B[c+12>>>2>>>0]=s.getDate(),B[c+16>>>2>>>0]=s.getMonth(),B[c+20>>>2>>>0]=s.getFullYear()-1900,B[c+24>>>2>>>0]=s.getDay(),B[c+28>>>2>>>0]=(Qe(s.getFullYear())?en:pt)[s.getMonth()]+s.getDate()-1|0,B[c+36>>>2>>>0]=-(60*s.getTimezoneOffset());var g=new Date(s.getFullYear(),6,1).getTimezoneOffset(),$=new Date(s.getFullYear(),0,1).getTimezoneOffset();B[c+32>>>2>>>0]=(g!=$&&s.getTimezoneOffset()==Math.min($,g))|0},W:function(s){s>>>=0;var c=new Date(B[s+20>>>2>>>0]+1900,B[s+16>>>2>>>0],B[s+12>>>2>>>0],B[s+8>>>2>>>0],B[s+4>>>2>>>0],B[s>>>2>>>0],0),g=B[s+32>>>2>>>0],$=c.getTimezoneOffset(),I=new Date(c.getFullYear(),6,1).getTimezoneOffset(),D=new Date(c.getFullYear(),0,1).getTimezoneOffset(),H=Math.min(D,I);return 0>g?B[s+32>>>2>>>0]=+(I!=D&&H==$):0<g!=(H==$)&&(I=Math.max(D,I),c.setTime(c.getTime()+6e4*((0<g?H:I)-$))),B[s+24>>>2>>>0]=c.getDay(),B[s+28>>>2>>>0]=(Qe(c.getFullYear())?en:pt)[c.getMonth()]+c.getDate()-1|0,B[s>>>2>>>0]=c.getSeconds(),B[s+4>>>2>>>0]=c.getMinutes(),B[s+8>>>2>>>0]=c.getHours(),B[s+12>>>2>>>0]=c.getDate(),B[s+16>>>2>>>0]=c.getMonth(),B[s+20>>>2>>>0]=c.getYear(),s=c.getTime(),isNaN(s)?(B[un()>>>2>>>0]=61,s=-1):s/=1e3,BigInt(s)},S:function(){return-52},T:function(){},L:function(s,c,g){function $(q){return(q=q.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?q[1]:"GMT"}g>>>=0;var I=new Date().getFullYear(),D=new Date(I,0,1),H=new Date(I,6,1);I=D.getTimezoneOffset();var X=H.getTimezoneOffset();te[s>>>0>>>2>>>0]=60*Math.max(I,X),B[c>>>0>>>2>>>0]=+(I!=X),s=$(D),c=$(H),s=Pr(s),c=Pr(c),X<I?(te[g>>>2>>>0]=s,te[g+4>>>2>>>0]=c):(te[g>>>2>>>0]=c,te[g+4>>>2>>>0]=s)},A:()=>{Ge("")},f:function(s,c,g){return s>>>=0,c=et(c>>>0,g>>>0),Tt[s].apply(null,c)},I:function(s,c,g){return s>>>=0,c=et(c>>>0,g>>>0),Tt[s].apply(null,c)},E:()=>Date.now(),M:function(){return 4294901760},q:()=>performance.now(),K:function(s){s>>>=0;var c=N.length;if(4294901760<s)return!1;for(var g=1;4>=g;g*=2){var $=c*(1+.2/g);$=Math.min($,s+100663296);var I=Math;$=Math.max(s,$);e:{I=(I.min.call(I,4294901760,$+(65536-$%65536)%65536)-E.buffer.byteLength+65535)/65536;try{E.grow(I),Me();var D=1;break e}catch{}D=void 0}if(D)return!0}return!1},Z:function(s,c){s>>>=0,c>>>=0;var g=0;return Ke().forEach(($,I)=>{var D=c+g;for(I=te[s+4*I>>>2>>>0]=D,D=0;D<$.length;++D)M[I++>>>0>>>0]=$.charCodeAt(D);M[I>>>0>>>0]=0,g+=$.length+1}),0},_:function(s,c){s>>>=0,c>>>=0;var g=Ke();te[s>>>2>>>0]=g.length;var $=0;return g.forEach(I=>$+=I.length+1),te[c>>>2>>>0]=$,0},x:()=>52,C:function(){return 52},Y:function(){return 70},B:function(s,c,g,$){c>>>=0,g>>>=0,$>>>=0;for(var I=0,D=0;D<g;D++){var H=te[c>>>2>>>0],X=te[c+4>>>2>>>0];c+=8;for(var q=0;q<X;q++){var j=N[H+q>>>0],ne=tn[s];j===0||j===10?((s===1?C:S)(Bt(ne,0)),ne.length=0):ne.push(j)}I+=X}return te[$>>>2>>>0]=I,0},ea:an,p:function(s,c,g,$){return an(s>>>0,c>>>0,g>>>0,$>>>0)}},ue=function(){function s(g){return ue=g.exports,ue=qr(),ue=dn(),E=ue.ja,Me(),ye.unshift(ue.ka),we--,we==0&&(ze!==null&&(clearInterval(ze),ze=null),Re&&(g=Re,Re=null,g())),ue}var c={a:jn};if(we++,r.instantiateWasm)try{return r.instantiateWasm(c,s)}catch(g){S(`Module.instantiateWasm callback failed with error: ${g}`),i(g)}return It(c,function(g){s(g.instance)}).catch(i),{}}();r._OrtInit=(s,c)=>(r._OrtInit=ue.la)(s,c),r._OrtGetLastError=(s,c)=>(r._OrtGetLastError=ue.ma)(s,c),r._OrtCreateSessionOptions=(s,c,g,$,I,D,H,X,q,j)=>(r._OrtCreateSessionOptions=ue.na)(s,c,g,$,I,D,H,X,q,j),r._OrtAppendExecutionProvider=(s,c)=>(r._OrtAppendExecutionProvider=ue.oa)(s,c),r._OrtAddFreeDimensionOverride=(s,c,g)=>(r._OrtAddFreeDimensionOverride=ue.pa)(s,c,g),r._OrtAddSessionConfigEntry=(s,c,g)=>(r._OrtAddSessionConfigEntry=ue.qa)(s,c,g),r._OrtReleaseSessionOptions=s=>(r._OrtReleaseSessionOptions=ue.ra)(s),r._OrtCreateSession=(s,c,g)=>(r._OrtCreateSession=ue.sa)(s,c,g),r._OrtReleaseSession=s=>(r._OrtReleaseSession=ue.ta)(s),r._OrtGetInputOutputCount=(s,c,g)=>(r._OrtGetInputOutputCount=ue.ua)(s,c,g),r._OrtGetInputName=(s,c)=>(r._OrtGetInputName=ue.va)(s,c),r._OrtGetOutputName=(s,c)=>(r._OrtGetOutputName=ue.wa)(s,c),r._OrtFree=s=>(r._OrtFree=ue.xa)(s),r._OrtCreateTensor=(s,c,g,$,I,D)=>(r._OrtCreateTensor=ue.ya)(s,c,g,$,I,D),r._OrtGetTensorData=(s,c,g,$,I)=>(r._OrtGetTensorData=ue.za)(s,c,g,$,I),r._OrtReleaseTensor=s=>(r._OrtReleaseTensor=ue.Aa)(s),r._OrtCreateRunOptions=(s,c,g,$)=>(r._OrtCreateRunOptions=ue.Ba)(s,c,g,$),r._OrtAddRunConfigEntry=(s,c,g)=>(r._OrtAddRunConfigEntry=ue.Ca)(s,c,g),r._OrtReleaseRunOptions=s=>(r._OrtReleaseRunOptions=ue.Da)(s),r._OrtCreateBinding=s=>(r._OrtCreateBinding=ue.Ea)(s),r._OrtBindInput=(s,c,g)=>(r._OrtBindInput=ue.Fa)(s,c,g),r._OrtBindOutput=(s,c,g,$)=>(r._OrtBindOutput=ue.Ga)(s,c,g,$),r._OrtClearBoundOutputs=s=>(r._OrtClearBoundOutputs=ue.Ha)(s),r._OrtReleaseBinding=s=>(r._OrtReleaseBinding=ue.Ia)(s),r._OrtRunWithBinding=(s,c,g,$,I)=>(r._OrtRunWithBinding=ue.Ja)(s,c,g,$,I),r._OrtRun=(s,c,g,$,I,D,H,X)=>(r._OrtRun=ue.Ka)(s,c,g,$,I,D,H,X),r._OrtEndProfiling=s=>(r._OrtEndProfiling=ue.La)(s),r._JsepOutput=(s,c,g)=>(r._JsepOutput=ue.Ma)(s,c,g),r._JsepGetNodeName=s=>(r._JsepGetNodeName=ue.Na)(s);var un=()=>(un=ue.Oa)(),Mt=r._malloc=s=>(Mt=r._malloc=ue.Pa)(s),at=r._free=s=>(at=r._free=ue.Qa)(s),Ft=s=>(Ft=ue.Ra)(s),ar=()=>(ar=ue.Ta)(),sr=s=>(sr=ue.Ua)(s),Or=s=>(Or=ue.Va)(s),jt=s=>(jt=ue.Xa)(s),ln=()=>(ln=ue.Ya)(),ft=s=>(ft=ue.Za)(s),dt=()=>(dt=ue._a)();r.___start_em_js=915491,r.___stop_em_js=915652;function dn(){var s=ue;s=Object.assign({},s);var c=$=>()=>$()>>>0,g=$=>I=>$(I)>>>0;return s.Oa=c(s.Oa),s.Pa=g(s.Pa),s.Ra=g(s.Ra),s.Ta=c(s.Ta),s.Va=g(s.Va),s}r.stackAlloc=Or,r.stackSave=ar,r.stackRestore=sr,r.UTF8ToString=Fe,r.stringToUTF8=(s,c,g)=>bt(s,N,c,g),r.lengthBytesUTF8=Et;var Pt;Re=function s(){Pt||kr(),Pt||(Re=s)};function kr(){if(!(0<we)){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;){var s=r.preRun.shift();pe.unshift(s)}for(;0<pe.length;)pe.shift()(r);if(!(0<we||Pt||(Pt=!0,r.calledRun=!0,O))){for(;0<ye.length;)ye.shift()(r);for(o(r);0<de.length;)de.shift()(r)}}}return kr(),t.ready}})();typeof wi=="object"&&typeof io=="object"?io.exports=bi:typeof define=="function"&&define.amd&&define([],()=>bi)});var $i=Br(()=>{});var _i=Br(()=>{});var Si={};hn(Si,{cpus:()=>Vl});var Vl,xi=Q(()=>{Vl=void 0});var Ii=Br((Ai,ao)=>{"use strict";var Ci=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){function r(){return be.buffer!=de.buffer&&ke(),de}function o(){return be.buffer!=de.buffer&&ke(),we}function i(){return be.buffer!=de.buffer&&ke(),ze}function u(){return be.buffer!=de.buffer&&ke(),Re}function a(){return be.buffer!=de.buffer&&ke(),Ge}function p(){return be.buffer!=de.buffer&&ke(),F}function m(){return be.buffer!=de.buffer&&ke(),ie}function h(){return be.buffer!=de.buffer&&ke(),nt}var d=t,y,w;d.ready=new Promise((n,l)=>{y=n,w=l}),d.mountExternalData=(n,l)=>{(d.Fb||(d.Fb=new Map)).set(n,l)},d.unmountExternalData=()=>{delete d.Fb},d.jsepInit=(n,l,f,b,A,P,z,L)=>{d.rc=n,d.$b=l,d.bc=f,d.Ob=b,d.ac=A,d.eb=P,d.cc=z,d.dc=L,l=(Z,K,oe)=>(...ge)=>{let Se=dt,R=K?.();ge=Z(...ge);let le=K?.();return R!==le&&(Z=le,oe(R),K=oe=null),dt!=Se?I():ge},f=Z=>async(...K)=>{try{if(d.Eb)throw Error("Session already started");let oe=d.Eb={fc:K[0],errors:[]},ge=await Z(...K);if(d.Eb!==oe)throw Error("Session mismatch");n.flush();let Se=oe.errors;if(0<Se.length){let R=await Promise.all(Se);if(R=R.filter(le=>le),0<R.length)throw Error(R.join(`\n`))}return ge}finally{d.Eb=null}},d._OrtCreateSession=l(d._OrtCreateSession,()=>d._OrtCreateSession,Z=>d._OrtCreateSession=Z),d._OrtRun=f(l(d._OrtRun,()=>d._OrtRun,Z=>d._OrtRun=Z)),d._OrtRunWithBinding=f(l(d._OrtRunWithBinding,()=>d._OrtRunWithBinding,Z=>d._OrtRunWithBinding=Z)),d._OrtBindInput=l(d._OrtBindInput,()=>d._OrtBindInput,Z=>d._OrtBindInput=Z),d.jsepRegisterBuffer=(Z,K,oe,ge)=>n.registerBuffer(Z,K,oe,ge),d.jsepUnregisterBuffers=Z=>{n.unregisterBuffers(Z)},d.jsepGetBuffer=Z=>n.getBuffer(Z),d.jsepCreateDownloader=(Z,K,oe)=>n.createDownloader(Z,K,oe),d.jsepOnRunStart=()=>n.onRunStart()};var _=Object.assign({},d),v="./this.program",x=(n,l)=>{throw l},T=typeof window=="object",C=typeof importScripts=="function",S=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",E=d.ENVIRONMENT_IS_PTHREAD||!1,O="";function U(n){return d.locateFile?d.locateFile(n,O):O+n}var M,N,Y;if(S){var se=(ro(),ur(to)),B=(oo(),ur(no));O=C?B.dirname(O)+"/":__dirname+"/",M=(l,f)=>(l=Et(l)?new URL(l):B.normalize(l),se.readFileSync(l,f?void 0:"utf8")),Y=l=>(l=M(l,!0),l.buffer||(l=new Uint8Array(l)),l),N=(l,f,b,A=!0)=>{l=Et(l)?new URL(l):B.normalize(l),se.readFile(l,A?void 0:"utf8",(P,z)=>{P?b(P):f(A?z.buffer:z)})},!d.thisProgram&&1<process.argv.length&&(v=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),x=(l,f)=>{throw process.exitCode=l,f},d.inspect=()=>"[Emscripten Module object]";let n;try{n=$i()}catch(l){throw console.error(\'The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?\'),l}global.Worker=n.Worker}else(T||C)&&(C?O=self.location.href:typeof document<"u"&&document.currentScript&&(O=document.currentScript.src),typeof e<"u"&&e&&(O=e),O.indexOf("blob:")!==0?O=O.substr(0,O.replace(/[?#].*/,"").lastIndexOf("/")+1):O="",S||(M=n=>{var l=new XMLHttpRequest;return l.open("GET",n,!1),l.send(null),l.responseText},C&&(Y=n=>{var l=new XMLHttpRequest;return l.open("GET",n,!1),l.responseType="arraybuffer",l.send(null),new Uint8Array(l.response)}),N=(n,l,f)=>{var b=new XMLHttpRequest;b.open("GET",n,!0),b.responseType="arraybuffer",b.onload=()=>{b.status==200||b.status==0&&b.response?l(b.response):f()},b.onerror=f,b.send(null)}));S&&typeof performance>"u"&&(global.performance=_i().performance);var te=console.log.bind(console),Pe=console.error.bind(console);S&&(te=(...n)=>se.writeSync(1,n.join(" ")+`\n`),Pe=(...n)=>se.writeSync(2,n.join(" ")+`\n`));var Ee=te,ee=Pe;Object.assign(d,_),_=null,typeof WebAssembly!="object"&&Bt("no native wasm support detected");var be,Me,pe=!1,ye,de,we,ze,Re,Ge,F,ie,he,Xe,nt;function ke(){var n=be.buffer;d.HEAP8=de=new Int8Array(n),d.HEAP16=ze=new Int16Array(n),d.HEAPU8=we=new Uint8Array(n),d.HEAPU16=Re=new Uint16Array(n),d.HEAP32=Ge=new Int32Array(n),d.HEAPU32=F=new Uint32Array(n),d.HEAPF32=ie=new Float32Array(n),d.HEAPF64=nt=new Float64Array(n),d.HEAP64=he=new BigInt64Array(n),d.HEAPU64=Xe=new BigUint64Array(n)}var Le=16777216;if(E)be=d.wasmMemory;else if(d.wasmMemory)be=d.wasmMemory;else if(be=new WebAssembly.Memory({initial:Le/65536,maximum:65536,shared:!0}),!(be.buffer instanceof SharedArrayBuffer))throw ee("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),S&&ee("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");ke(),Le=be.buffer.byteLength;var It=[],Tt=[],Vt=[],Rt=0,Jt=null,Wt=null;function mr(){if(Rt--,Rt==0&&(Jt!==null&&(clearInterval(Jt),Jt=null),Wt)){var n=Wt;Wt=null,n()}}function Bt(n){throw n="Aborted("+n+")",ee(n),pe=!0,ye=1,n=new WebAssembly.RuntimeError(n+". Build with -sASSERTIONS for more info."),w(n),n}var Fe=n=>n.startsWith("data:application/octet-stream;base64,"),Et=n=>n.startsWith("file://"),bt;bt="ort-wasm-simd-threaded.wasm",Fe(bt)||(bt=U(bt));function fr(n){if(Y)return Y(n);throw"both async and sync fetching of the wasm failed"}function Gr(n){if(T||C){if(typeof fetch=="function"&&!Et(n))return fetch(n,{credentials:"same-origin"}).then(l=>{if(!l.ok)throw"failed to load wasm binary file at \'"+n+"\'";return l.arrayBuffer()}).catch(()=>fr(n));if(N)return new Promise((l,f)=>{N(n,b=>l(new Uint8Array(b)),f)})}return Promise.resolve().then(()=>fr(n))}function ot(n,l,f){return Gr(n).then(b=>WebAssembly.instantiate(b,l)).then(b=>b).then(f,b=>{ee(`failed to asynchronously prepare wasm: ${b}`),Bt(b)})}function hr(n,l){var f=bt;return typeof WebAssembly.instantiateStreaming!="function"||Fe(f)||Et(f)||S||typeof fetch!="function"?ot(f,n,l):fetch(f,{credentials:"same-origin"}).then(b=>WebAssembly.instantiateStreaming(b,n).then(l,function(A){return ee(`wasm streaming compile failed: ${A}`),ee("falling back to ArrayBuffer instantiation"),ot(f,n,l)}))}var Nt={904236:(n,l,f,b)=>{if(typeof d>"u"||!d.Fb)return 1;if(n=Oe(n>>>0),n.startsWith("./")&&(n=n.substring(2)),n=d.Fb.get(n),!n)return 2;if(l>>>=0,f>>>=0,b>>>=0,l+f>n.byteLength)return 3;try{return o().set(n.subarray(l,l+f),b>>>0),0}catch{return 4}},904737:n=>d.$b(n),904770:n=>d.bc(n),904802:(n,l,f)=>{d.Ob(n,l,f,!0)},904841:(n,l,f)=>{d.Ob(n,l,f)},904874:n=>{d.eb("Abs",n,void 0)},904925:n=>{d.eb("Neg",n,void 0)},904976:n=>{d.eb("Floor",n,void 0)},905029:n=>{d.eb("Ceil",n,void 0)},905081:n=>{d.eb("Reciprocal",n,void 0)},905139:n=>{d.eb("Sqrt",n,void 0)},905191:n=>{d.eb("Exp",n,void 0)},905242:n=>{d.eb("Erf",n,void 0)},905293:n=>{d.eb("Sigmoid",n,void 0)},905348:(n,l,f)=>{d.eb("HardSigmoid",n,{alpha:l,beta:f})},905427:n=>{d.eb("Log",n,void 0)},905478:n=>{d.eb("Sin",n,void 0)},905529:n=>{d.eb("Cos",n,void 0)},905580:n=>{d.eb("Tan",n,void 0)},905631:n=>{d.eb("Asin",n,void 0)},905683:n=>{d.eb("Acos",n,void 0)},905735:n=>{d.eb("Atan",n,void 0)},905787:n=>{d.eb("Sinh",n,void 0)},905839:n=>{d.eb("Cosh",n,void 0)},905891:n=>{d.eb("Asinh",n,void 0)},905944:n=>{d.eb("Acosh",n,void 0)},905997:n=>{d.eb("Atanh",n,void 0)},906050:n=>{d.eb("Tanh",n,void 0)},906102:n=>{d.eb("Not",n,void 0)},906153:(n,l,f)=>{d.eb("Clip",n,{min:l,max:f})},906222:n=>{d.eb("Clip",n,void 0)},906274:(n,l)=>{d.eb("Elu",n,{alpha:l})},906332:n=>{d.eb("Relu",n,void 0)},906384:(n,l)=>{d.eb("LeakyRelu",n,{alpha:l})},906448:(n,l)=>{d.eb("ThresholdedRelu",n,{alpha:l})},906518:(n,l)=>{d.eb("Cast",n,{to:l})},906576:n=>{d.eb("Add",n,void 0)},906627:n=>{d.eb("Sub",n,void 0)},906678:n=>{d.eb("Mul",n,void 0)},906729:n=>{d.eb("Div",n,void 0)},906780:n=>{d.eb("Pow",n,void 0)},906831:n=>{d.eb("Equal",n,void 0)},906884:n=>{d.eb("Greater",n,void 0)},906939:n=>{d.eb("GreaterOrEqual",n,void 0)},907001:n=>{d.eb("Less",n,void 0)},907053:n=>{d.eb("LessOrEqual",n,void 0)},907112:(n,l,f,b,A)=>{d.eb("ReduceMean",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},907271:(n,l,f,b,A)=>{d.eb("ReduceMax",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},907429:(n,l,f,b,A)=>{d.eb("ReduceMin",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},907587:(n,l,f,b,A)=>{d.eb("ReduceProd",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},907746:(n,l,f,b,A)=>{d.eb("ReduceSum",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},907904:(n,l,f,b,A)=>{d.eb("ReduceL1",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},908061:(n,l,f,b,A)=>{d.eb("ReduceL2",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},908218:(n,l,f,b,A)=>{d.eb("ReduceLogSum",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},908379:(n,l,f,b,A)=>{d.eb("ReduceSumSquare",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},908543:(n,l,f,b,A)=>{d.eb("ReduceLogSumExp",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},908707:n=>{d.eb("Where",n,void 0)},908760:(n,l,f)=>{d.eb("Transpose",n,{perm:l?Array.from(a().subarray(l>>>0,f>>>0)):[]})},908868:(n,l,f,b,A,P,z,L,Z,K,oe,ge,Se,R,le)=>{d.eb("ConvTranspose",n,{format:Z?"NHWC":"NCHW",autoPad:l,dilations:[f],group:b,kernel_shape:[A],pads:[P,z],strides:[L],wIsConst:()=>!!r()[K>>>0],outputPadding:oe?Array.from(a().subarray(oe>>>0,ge>>>0)):[],outputShape:Se?Array.from(a().subarray(Se>>>0,R>>>0)):[],activation:Oe(le)})},909270:(n,l,f,b,A,P,z,L,Z,K,oe,ge,Se,R)=>{d.eb("ConvTranspose",n,{format:L?"NHWC":"NCHW",autoPad:l,dilations:Array.from(a().subarray(f>>>0,(f>>>0)+2>>>0)),group:b,kernelShape:Array.from(a().subarray(A>>>0,(A>>>0)+2>>>0)),pads:Array.from(a().subarray(P>>>0,(P>>>0)+4>>>0)),strides:Array.from(a().subarray(z>>>0,(z>>>0)+2>>>0)),wIsConst:()=>!!r()[Z>>>0],outputPadding:K?Array.from(a().subarray(K>>>0,oe>>>0)):[],outputShape:ge?Array.from(a().subarray(ge>>>0,Se>>>0)):[],activation:Oe(R)})},909835:(n,l,f,b,A,P,z,L,Z,K,oe,ge,Se,R,le)=>{d.eb("ConvTranspose",n,{format:Z?"NHWC":"NCHW",autoPad:l,dilations:[f],group:b,kernel_shape:[A],pads:[P,z],strides:[L],wIsConst:()=>!!r()[K>>>0],outputPadding:oe?Array.from(a().subarray(oe>>>0,ge>>>0)):[],outputShape:Se?Array.from(a().subarray(Se>>>0,R>>>0)):[],activation:Oe(le)})},910237:(n,l,f,b,A,P,z,L,Z,K,oe,ge,Se,R)=>{d.eb("ConvTranspose",n,{format:L?"NHWC":"NCHW",autoPad:l,dilations:Array.from(a().subarray(f>>>0,(f>>>0)+2>>>0)),group:b,kernelShape:Array.from(a().subarray(A>>>0,(A>>>0)+2>>>0)),pads:Array.from(a().subarray(P>>>0,(P>>>0)+4>>>0)),strides:Array.from(a().subarray(z>>>0,(z>>>0)+2>>>0)),wIsConst:()=>!!r()[Z>>>0],outputPadding:K?Array.from(a().subarray(K>>>0,oe>>>0)):[],outputShape:ge?Array.from(a().subarray(ge>>>0,Se>>>0)):[],activation:Oe(R)})},910802:(n,l)=>{d.eb("GlobalAveragePool",n,{format:l?"NHWC":"NCHW"})},910893:(n,l,f,b,A,P,z,L,Z,K,oe,ge,Se,R,le,Ie)=>{d.eb("AveragePool",n,{format:Ie?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:A,dilations:[P,z],kernel_shape:[L,Z],pads:[K,oe,ge,Se],strides:[R,le]})},911177:(n,l)=>{d.eb("GlobalAveragePool",n,{format:l?"NHWC":"NCHW"})},911268:(n,l,f,b,A,P,z,L,Z,K,oe,ge,Se,R,le,Ie)=>{d.eb("AveragePool",n,{format:Ie?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:A,dilations:[P,z],kernel_shape:[L,Z],pads:[K,oe,ge,Se],strides:[R,le]})},911552:(n,l)=>{d.eb("GlobalMaxPool",n,{format:l?"NHWC":"NCHW"})},911639:(n,l,f,b,A,P,z,L,Z,K,oe,ge,Se,R,le,Ie)=>{d.eb("MaxPool",n,{format:Ie?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:A,dilations:[P,z],kernel_shape:[L,Z],pads:[K,oe,ge,Se],strides:[R,le]})},911919:(n,l)=>{d.eb("GlobalMaxPool",n,{format:l?"NHWC":"NCHW"})},912006:(n,l,f,b,A,P,z,L,Z,K,oe,ge,Se,R,le,Ie)=>{d.eb("MaxPool",n,{format:Ie?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:A,dilations:[P,z],kernel_shape:[L,Z],pads:[K,oe,ge,Se],strides:[R,le]})},912286:(n,l,f,b,A)=>{d.eb("Gemm",n,{alpha:l,beta:f,transA:b,transB:A})},912390:n=>{d.eb("MatMul",n,void 0)},912444:(n,l,f,b)=>{d.eb("ArgMax",n,{keepDims:!!l,selectLastIndex:!!f,axis:b})},912552:(n,l,f,b)=>{d.eb("ArgMin",n,{keepDims:!!l,selectLastIndex:!!f,axis:b})},912660:(n,l)=>{d.eb("Softmax",n,{axis:l})},912723:(n,l)=>{d.eb("Concat",n,{axis:l})},912783:(n,l,f,b,A)=>{d.eb("Split",n,{axis:l,numOutputs:f,splitSizes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},912923:n=>{d.eb("Expand",n,void 0)},912977:(n,l)=>{d.eb("Gather",n,{axis:Number(l)})},913048:(n,l)=>{d.eb("GatherElements",n,{axis:Number(l)})},913127:(n,l,f,b,A,P,z,L,Z,K,oe)=>{d.eb("Resize",n,{antialias:l,axes:f?Array.from(a().subarray(f>>>0,b>>>0)):[],coordinateTransformMode:Oe(A),cubicCoeffA:P,excludeOutside:z,extrapolationValue:L,keepAspectRatioPolicy:Oe(Z),mode:Oe(K),nearestMode:Oe(oe)})},913473:(n,l,f,b,A,P,z)=>{d.eb("Slice",n,{starts:l?Array.from(a().subarray(l>>>0,f>>>0)):[],ends:b?Array.from(a().subarray(b>>>0,A>>>0)):[],axes:P?Array.from(a().subarray(P>>>0,z>>>0)):[]})},913689:n=>{d.eb("Tile",n,void 0)},913741:(n,l,f)=>{d.eb("LayerNormalization",n,{axis:Number(l),epsilon:Number(f)})},913848:(n,l,f)=>{d.eb("InstanceNormalization",n,{epsilon:l,format:f?"NHWC":"NCHW"})},913962:(n,l,f)=>{d.eb("InstanceNormalization",n,{epsilon:l,format:f?"NHWC":"NCHW"})},914076:n=>{d.eb("Range",n,void 0)},914129:(n,l)=>{d.eb("Einsum",n,{equation:Oe(l)})},914210:(n,l,f,b,A)=>{d.eb("Pad",n,{mode:l,value:f,pads:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},914337:(n,l,f,b,A,P)=>{d.eb("BatchNormalization",n,{epsilon:l,momentum:f,spatial:!!A,trainingMode:!!b,format:P?"NHWC":"NCHW"})},914506:(n,l,f,b,A,P)=>{d.eb("BatchNormalization",n,{epsilon:l,momentum:f,spatial:!!A,trainingMode:!!b,format:P?"NHWC":"NCHW"})},914675:(n,l,f)=>{d.eb("CumSum",n,{exclusive:Number(l),reverse:Number(f)})},914772:(n,l,f,b,A,P,z,L,Z)=>{d.eb("Attention",n,{numHeads:l,isUnidirectional:f,maskFilterValue:b,scale:A,doRotary:P,qkvHiddenSizes:z?Array.from(a().subarray(Number(L)>>>0,Number(L)+z>>>0)):[],pastPresentShareBuffer:!!Z})},915044:n=>{d.eb("Gelu",n,void 0)},915096:(n,l,f,b,A,P)=>{d.eb("MultiHeadAttention",n,{numHeads:l,isUnidirectional:f,maskFilterValue:b,scale:A,doRotary:P})},915255:n=>{d.eb("BiasAdd",n,void 0)},915310:n=>{d.eb("BiasSplitGelu",n,void 0)},915371:(n,l)=>{d.eb("SkipLayerNormalization",n,{epsilon:l})},915452:(n,l,f,b,A,P,z,L,Z,K,oe,ge,Se)=>{d.eb("Conv",n,{format:Z?"NHWC":"NCHW",auto_pad:l,dilations:[f],group:b,kernel_shape:[A],pads:P?Array.from(a().subarray(P>>>0,z>>>0)):[],strides:[L],w_is_const:()=>!!r()[K>>>0],activation:Oe(oe),activation_params:ge?Array.from(m().subarray(ge>>>0,Se>>>0)):[]})},915822:(n,l,f,b,A,P,z,L,Z,K,oe,ge,Se,R,le,Ie)=>{d.eb("Conv",n,{format:ge?"NHWC":"NCHW",auto_pad:l,dilations:[f,b],group:A,kernel_shape:[P,z],pads:L?Array.from(a().subarray(L>>>0,Z>>>0)):[],strides:[K,oe],w_is_const:()=>!!r()[Se>>>0],activation:Oe(R),activation_params:le?Array.from(m().subarray(le>>>0,Ie>>>0)):[]})},916213:n=>{d.cc(n)},916247:(n,l)=>d.dc(n,l,d.Eb.fc,d.Eb.errors)};function gr(n){this.name="ExitStatus",this.message=`Program terminated with exit(${n})`,this.status=n}var ct=n=>{n.terminate(),n.onmessage=()=>{}},Lr=n=>{me.yb.length==0&&($r(),me.Pb(me.yb[0]));var l=me.yb.pop();if(!l)return 6;me.zb.push(l),me.pb[n.xb]=l,l.xb=n.xb;var f={cmd:"run",start_routine:n.hc,arg:n.Vb,pthread_ptr:n.xb};return S&&l.unref(),l.postMessage(f,n.nc),0},qe=0,yr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,br=(n,l,f)=>{l>>>=0;var b=l+f;for(f=l;n[f]&&!(f>=b);)++f;if(16<f-l&&n.buffer&&yr)return yr.decode(n.buffer instanceof SharedArrayBuffer?n.slice(l,f):n.subarray(l,f));for(b="";l<f;){var A=n[l++];if(A&128){var P=n[l++]&63;if((A&224)==192)b+=String.fromCharCode((A&31)<<6|P);else{var z=n[l++]&63;A=(A&240)==224?(A&15)<<12|P<<6|z:(A&7)<<18|P<<12|z<<6|n[l++]&63,65536>A?b+=String.fromCharCode(A):(A-=65536,b+=String.fromCharCode(55296|A>>10,56320|A&1023))}}else b+=String.fromCharCode(A)}return b},Oe=(n,l)=>(n>>>=0)?br(o(),n,l):"",wr=n=>{var l=Jn();return n=n(),mn(l),n};function ve(n,l){var f=arguments.length-2,b=arguments;return wr(()=>{for(var A=2*f,P=Qn(8*A),z=P>>>3,L=0;L<f;L++){var Z=b[2+L];typeof Z=="bigint"?(he[z+2*L]=1n,he[z+2*L+1]=Z):(he[z+2*L]=0n,h()[z+2*L+1>>>0]=Z)}return si(n,A,P,l)})}function it(n){if(E)return ve(0,1,n);ye=n,0<qe||(me.ic(),d.onExit?.(n),pe=!0),x(n,new gr(n))}var Qt=n=>{if(ye=n,E)throw Fr(n),"unwind";it(n)},vr=n=>{n instanceof gr||n=="unwind"||x(1,n)};function Hn(){for(var n=d.numThreads;n--;)$r();It.unshift(()=>{Rt++,Gn(()=>mr())})}function $r(){var n=U("ort-wasm-simd-threaded.worker.js");n=new Worker(n),me.yb.push(n)}function Gn(n){E?n():Promise.all(me.yb.map(me.Pb)).then(n)}var me={yb:[],zb:[],Ub:[],pb:{},Ib(){E?(me.receiveObjectTransfer=me.ec,me.threadInitTLS=me.Tb,me.setExitStatus=me.Sb):Hn()},Sb:n=>ye=n,sc:["$terminateWorker"],ic:()=>{for(var n of me.zb)ct(n);for(n of me.yb)ct(n);me.yb=[],me.zb=[],me.pb=[]},Rb:n=>{var l=n.xb;delete me.pb[l],me.yb.push(n),me.zb.splice(me.zb.indexOf(n),1),n.xb=0,Zn(l)},ec(){},Tb(){me.Ub.forEach(n=>n())},Pb:n=>new Promise(l=>{n.onmessage=P=>{P=P.data;var z=P.cmd;if(P.targetThread&&P.targetThread!=pn()){var L=me.pb[P.targetThread];L?L.postMessage(P,P.transferList):ee(`Internal error! Worker sent a message "${z}" to target pthread ${P.targetThread}, but that thread no longer exists!`)}else z==="checkMailbox"?Ft():z==="spawnThread"?Lr(P):z==="cleanupThread"?me.Rb(me.pb[P.thread]):z==="killThread"?(P=P.thread,z=me.pb[P],delete me.pb[P],ct(z),Zn(P),me.zb.splice(me.zb.indexOf(z),1),z.xb=0):z==="cancelThread"?me.pb[P.thread].postMessage({cmd:"cancel"}):z==="loaded"?(n.loaded=!0,S&&!n.xb&&n.unref(),l(n)):z==="alert"?alert(`Thread ${P.threadId}: ${P.text}`):P.target==="setimmediate"?n.postMessage(P):z==="callHandler"?d[P.handler](...P.args):z&&ee(`worker sent an unknown command ${z}`)},n.onerror=P=>{throw ee(`worker sent an error! ${P.filename}:${P.lineno}: ${P.message}`),P},S&&(n.on("message",P=>n.onmessage({data:P})),n.on("error",P=>n.onerror(P)));var f=[],b=["onExit"],A;for(A of b)d.hasOwnProperty(A)&&f.push(A);n.postMessage({cmd:"load",handlers:f,urlOrBlob:d.mainScriptUrlOrBlob||e,wasmMemory:be,wasmModule:Me})})};d.PThread=me;var er=n=>{for(;0<n.length;)n.shift()(d)};d.establishStackSpace=()=>{var n=pn(),l=p()[n+52>>>2>>>0];n=p()[n+56>>>2>>>0],li(l,l-n),mn(l)};function Fr(n){if(E)return ve(1,0,n);Qt(n)}d.invokeEntryPoint=(n,l)=>{n=di.apply(null,[n,l]),0<qe?me.Sb(n):Xn(n)};function Ln(n){this.Db=n-24,this.pc=function(l){p()[this.Db+4>>>2>>>0]=l},this.Mb=function(l){p()[this.Db+8>>>2>>>0]=l},this.Ib=function(l,f){this.Kb(),this.pc(l),this.Mb(f)},this.Kb=function(){p()[this.Db+16>>>2>>>0]=0}}var jr=0,_r=0;function Sr(n,l,f,b){return E?ve(2,1,n,l,f,b):Ht(n,l,f,b)}function Ht(n,l,f,b){if(n>>>=0,l>>>=0,f>>>=0,b>>>=0,typeof SharedArrayBuffer>"u")return ee("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var A=[];return E&&A.length===0?Sr(n,l,f,b):(n={hc:f,xb:n,Vb:b,nc:A},E?(n.qc="spawnThread",postMessage(n,A),0):Lr(n))}function qr(n,l,f){return E?ve(3,1,n,l,f):0}function mt(n,l){if(E)return ve(4,1,n,l)}var Je=n=>{for(var l=0,f=0;f<n.length;++f){var b=n.charCodeAt(f);127>=b?l++:2047>=b?l+=2:55296<=b&&57343>=b?(l+=4,++f):l+=3}return l},xr=(n,l,f,b)=>{if(f>>>=0,!(0<b))return 0;var A=f;b=f+b-1;for(var P=0;P<n.length;++P){var z=n.charCodeAt(P);if(55296<=z&&57343>=z){var L=n.charCodeAt(++P);z=65536+((z&1023)<<10)|L&1023}if(127>=z){if(f>=b)break;l[f++>>>0]=z}else{if(2047>=z){if(f+1>=b)break;l[f++>>>0]=192|z>>6}else{if(65535>=z){if(f+2>=b)break;l[f++>>>0]=224|z>>12}else{if(f+3>=b)break;l[f++>>>0]=240|z>>18,l[f++>>>0]=128|z>>12&63}l[f++>>>0]=128|z>>6&63}l[f++>>>0]=128|z&63}}return l[f>>>0]=0,f-A},Dt=(n,l,f)=>xr(n,o(),l,f);function Cr(n,l){if(E)return ve(5,1,n,l)}function Ar(n,l,f){if(E)return ve(6,1,n,l,f)}function Kr(n,l,f){return E?ve(7,1,n,l,f):0}function tr(n,l){if(E)return ve(8,1,n,l)}function Yr(n,l,f){if(E)return ve(9,1,n,l,f)}function Zr(n,l,f,b){if(E)return ve(10,1,n,l,f,b)}function Xr(n,l,f,b){if(E)return ve(11,1,n,l,f,b)}function Jr(n,l,f,b){if(E)return ve(12,1,n,l,f,b)}function Ir(n){if(E)return ve(13,1,n)}function Gt(n,l){if(E)return ve(14,1,n,l)}function Qr(n,l,f){if(E)return ve(15,1,n,l,f)}var rr=n=>{if(n===null)return"null";var l=typeof n;return l==="object"||l==="array"||l==="function"?n.toString():""+n},Tr,lt=n=>{for(var l="";o()[n>>>0];)l+=Tr[o()[n++>>>0]];return l},Er={},nr={},Fn={},Qe;function en(n,l,f={}){var b=l.name;if(!n)throw new Qe(`type "${b}" must have a positive integer typeid pointer`);if(nr.hasOwnProperty(n)){if(f.Yb)return;throw new Qe(`Cannot register type \'${b}\' twice`)}nr[n]=l,delete Fn[n],Er.hasOwnProperty(n)&&(l=Er[n],delete Er[n],l.forEach(A=>A()))}function pt(n,l,f={}){if(!("argPackAdvance"in l))throw new TypeError("registerType registeredInstance requires argPackAdvance");en(n,l,f)}var Pr=(n,l,f)=>{switch(l){case 1:return f?b=>r()[b>>>0>>>0]:b=>o()[b>>>0>>>0];case 2:return f?b=>i()[b>>>1>>>0]:b=>u()[b>>>1>>>0];case 4:return f?b=>a()[b>>>2>>>0]:b=>p()[b>>>2>>>0];case 8:return f?b=>he[b>>>3]:b=>Xe[b>>>3];default:throw new TypeError(`invalid integer width (${l}): ${n}`)}};function or(){this.wb=[void 0],this.Nb=[]}var et=new or;function Lt(n){n>>>=0,n>=et.Db&&--et.get(n).Qb===0&&et.Mb(n)}var Ke=n=>{if(!n)throw new Qe("Cannot use deleted val. handle = "+n);return et.get(n).value},tt=n=>{switch(n){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return et.Kb({Qb:1,value:n})}};function tn(n){return this.fromWireType(a()[n>>>2>>>0])}var rn=(n,l)=>{switch(l){case 4:return function(f){return this.fromWireType(m()[f>>>2>>>0])};case 8:return function(f){return this.fromWireType(h()[f>>>3>>>0])};default:throw new TypeError(`invalid float width (${l}): ${n}`)}};function nn(n){return this.fromWireType(p()[n>>>2>>>0])}var on=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,an=(n,l)=>{for(var f=n>>1,b=f+l/2;!(f>=b)&&u()[f>>>0];)++f;if(f<<=1,32<f-n&&on)return on.decode(o().slice(n,f));for(f="",b=0;!(b>=l/2);++b){var A=i()[n+2*b>>>1>>>0];if(A==0)break;f+=String.fromCharCode(A)}return f},sn=(n,l,f)=>{if(f??=2147483647,2>f)return 0;f-=2;var b=l;f=f<2*n.length?f/2:n.length;for(var A=0;A<f;++A){var P=n.charCodeAt(A);i()[l>>>1>>>0]=P,l+=2}return i()[l>>>1>>>0]=0,l-b},ir=n=>2*n.length,jn=(n,l)=>{for(var f=0,b="";!(f>=l/4);){var A=a()[n+4*f>>>2>>>0];if(A==0)break;++f,65536<=A?(A-=65536,b+=String.fromCharCode(55296|A>>10,56320|A&1023)):b+=String.fromCharCode(A)}return b},ue=(n,l,f)=>{if(l>>>=0,f??=2147483647,4>f)return 0;var b=l;f=b+f-4;for(var A=0;A<n.length;++A){var P=n.charCodeAt(A);if(55296<=P&&57343>=P){var z=n.charCodeAt(++A);P=65536+((P&1023)<<10)|z&1023}if(a()[l>>>2>>>0]=P,l+=4,l+4>f)break}return a()[l>>>2>>>0]=0,l-b},un=n=>{for(var l=0,f=0;f<n.length;++f){var b=n.charCodeAt(f);55296<=b&&57343>=b&&++f,l+=4}return l},Mt=()=>{if(!(0<qe))try{E?Xn(ye):Qt(ye)}catch(n){vr(n)}};function at(n){n>>>=0,typeof Atomics.oc=="function"&&(Atomics.oc(a(),n>>>2,n).value.then(Ft),n+=128,Atomics.store(a(),n>>>2,1))}d.__emscripten_thread_mailbox_await=at;var Ft=()=>{var n=pn();if(n&&(at(n),!pe))try{ui(),Mt()}catch(l){vr(l)}};d.checkMailbox=Ft;var ar=[],sr=(n,l)=>{var f=nr[n];if(f===void 0)throw n=ii(n),f=lt(n),wt(n),new Qe(l+" has unknown type "+f);return f},Or=(n,l,f)=>{var b=[];return n=n.toWireType(b,f),b.length&&(p()[l>>>2>>>0]=tt(b)),n},jt=n=>{try{n()}catch(l){Bt(l)}};function ln(){var n=re,l={};for(let[f,b]of Object.entries(n))l[f]=typeof b=="function"?function(){Pt.push(f);try{return b.apply(null,arguments)}finally{pe||(Pt.pop(),dt&&ft===1&&Pt.length===0&&(ft=0,qe+=1,jt(pi),typeof Fibers<"u"&&Fibers.uc()))}}:b;return l}var ft=0,dt=null,dn=0,Pt=[],kr={},s={},c=0,g=null,$=[];function I(){return new Promise((n,l)=>{g={resolve:n,reject:l}})}function D(){var n=Rr(65548),l=n+12;p()[n>>>2>>>0]=l,p()[n+4>>>2>>>0]=l+65536,l=Pt[0];var f=kr[l];return f===void 0&&(f=c++,kr[l]=f,s[f]=l),l=f,a()[n+8>>>2>>>0]=l,n}function H(){var n=a()[dt+8>>>2>>>0];return n=re[s[n]],--qe,n()}function X(n){if(!pe){if(ft===0){var l=!1,f=!1;n((b=0)=>{if(!pe&&(dn=b,l=!0,f)){ft=2,jt(()=>mi(dt)),typeof Browser<"u"&&Browser.Jb.Xb&&Browser.Jb.resume(),b=!1;try{var A=H()}catch(L){A=L,b=!0}var P=!1;if(!dt){var z=g;z&&(g=null,(b?z.reject:z.resolve)(A),P=!0)}if(b&&!P)throw A}}),f=!0,l||(ft=1,dt=D(),typeof Browser<"u"&&Browser.Jb.Xb&&Browser.Jb.pause(),jt(()=>ci(dt)))}else ft===2?(ft=0,jt(fi),wt(dt),dt=null,$.forEach(b=>{if(!pe)try{b(),Mt()}catch(A){vr(A)}})):Bt(`invalid state: ${ft}`);return dn}}function q(n){return X(l=>{n().then(l)})}var j=[],ne={},fe=n=>{var l=ne[n];return l===void 0?lt(n):l},$e=()=>typeof globalThis=="object"?globalThis:Function("return this")(),k=n=>{var l=j.length;return j.push(n),l},ae=(n,l)=>{for(var f=Array(n),b=0;b<n;++b)f[b]=sr(p()[l+4*b>>>2>>>0],"parameter "+b);return f},Ae=(n,l)=>Object.defineProperty(l,"name",{value:n});function Ot(n){var l=Function;if(!(l instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof l} which is not a function`);var f=Ae(l.name||"unknownFunctionName",function(){});return f.prototype=l.prototype,f=new f,n=l.apply(f,n),n instanceof Object?n:f}var kt=n=>n%4===0&&(n%100!==0||n%400===0),No=[0,31,60,91,121,152,182,213,244,274,305,335],Ho=[0,31,59,90,120,151,181,212,243,273,304,334];function Go(n,l,f,b,A,P,z){return E?ve(16,1,n,l,f,b,A,P,z):-52}function Lo(n,l,f,b,A,P){if(E)return ve(17,1,n,l,f,b,A,P)}var Fo=n=>{var l=Je(n)+1,f=Rr(l);return f&&Dt(n,f,l),f},qn=[],jo=(n,l)=>{qn.length=0;for(var f;f=o()[n++>>>0];){var b=f!=105;b&=f!=112,l+=b&&l%8?4:0,qn.push(f==112?p()[l>>>2>>>0]:f==106?he[l>>>3]:f==105?a()[l>>>2>>>0]:h()[l>>>3>>>0]),l+=b?8:4}return qn},Kn={},qo=()=>{if(!Yn){var n={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:v||"./this.program"},l;for(l in Kn)Kn[l]===void 0?delete n[l]:n[l]=Kn[l];var f=[];for(l in n)f.push(`${l}=${n[l]}`);Yn=f}return Yn},Yn;function Ko(n,l){if(E)return ve(18,1,n,l);n>>>=0,l>>>=0;var f=0;return qo().forEach((b,A)=>{var P=l+f;for(A=p()[n+4*A>>>2>>>0]=P,P=0;P<b.length;++P)r()[A++>>>0>>>0]=b.charCodeAt(P);r()[A>>>0>>>0]=0,f+=b.length+1}),0}function Yo(n,l){if(E)return ve(19,1,n,l);n>>>=0,l>>>=0;var f=qo();p()[n>>>2>>>0]=f.length;var b=0;return f.forEach(A=>b+=A.length+1),p()[l>>>2>>>0]=b,0}function Zo(n){return E?ve(20,1,n):52}function Xo(n,l,f,b){return E?ve(21,1,n,l,f,b):52}function Jo(n,l,f,b){return E?ve(22,1,n,l,f,b):70}var Al=[null,[],[]];function Qo(n,l,f,b){if(E)return ve(23,1,n,l,f,b);l>>>=0,f>>>=0,b>>>=0;for(var A=0,P=0;P<f;P++){var z=p()[l>>>2>>>0],L=p()[l+4>>>2>>>0];l+=8;for(var Z=0;Z<L;Z++){var K=o()[z+Z>>>0],oe=Al[n];K===0||K===10?((n===1?Ee:ee)(br(oe,0)),oe.length=0):oe.push(K)}A+=L}return p()[b>>>2>>>0]=A,0}var ei=[31,29,31,30,31,30,31,31,30,31,30,31],ti=[31,28,31,30,31,30,31,31,30,31,30,31];function Il(n){var l=Array(Je(n)+1);return xr(n,l,0,l.length),l}var Tl=(n,l)=>{r().set(n,l>>>0)};function ri(n,l,f,b){function A(R,le,Ie){for(R=typeof R=="number"?R.toString():R||"";R.length<le;)R=Ie[0]+R;return R}function P(R,le){return A(R,le,"0")}function z(R,le){function Ie(gi){return 0>gi?-1:0<gi?1:0}var qt;return(qt=Ie(R.getFullYear()-le.getFullYear()))===0&&(qt=Ie(R.getMonth()-le.getMonth()))===0&&(qt=Ie(R.getDate()-le.getDate())),qt}function L(R){switch(R.getDay()){case 0:return new Date(R.getFullYear()-1,11,29);case 1:return R;case 2:return new Date(R.getFullYear(),0,3);case 3:return new Date(R.getFullYear(),0,2);case 4:return new Date(R.getFullYear(),0,1);case 5:return new Date(R.getFullYear()-1,11,31);case 6:return new Date(R.getFullYear()-1,11,30)}}function Z(R){var le=R.Ab;for(R=new Date(new Date(R.Bb+1900,0,1).getTime());0<le;){var Ie=R.getMonth(),qt=(kt(R.getFullYear())?ei:ti)[Ie];if(le>qt-R.getDate())le-=qt-R.getDate()+1,R.setDate(1),11>Ie?R.setMonth(Ie+1):(R.setMonth(0),R.setFullYear(R.getFullYear()+1));else{R.setDate(R.getDate()+le);break}}return Ie=new Date(R.getFullYear()+1,0,4),le=L(new Date(R.getFullYear(),0,4)),Ie=L(Ie),0>=z(le,R)?0>=z(Ie,R)?R.getFullYear()+1:R.getFullYear():R.getFullYear()-1}n>>>=0,l>>>=0,f>>>=0,b>>>=0;var K=p()[b+40>>>2>>>0];b={lc:a()[b>>>2>>>0],kc:a()[b+4>>>2>>>0],Gb:a()[b+8>>>2>>>0],Lb:a()[b+12>>>2>>>0],Hb:a()[b+16>>>2>>>0],Bb:a()[b+20>>>2>>>0],vb:a()[b+24>>>2>>>0],Ab:a()[b+28>>>2>>>0],tc:a()[b+32>>>2>>>0],jc:a()[b+36>>>2>>>0],mc:K?Oe(K):""},f=Oe(f),K={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var oe in K)f=f.replace(new RegExp(oe,"g"),K[oe]);var ge="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Se="January February March April May June July August September October November December".split(" ");K={"%a":R=>ge[R.vb].substring(0,3),"%A":R=>ge[R.vb],"%b":R=>Se[R.Hb].substring(0,3),"%B":R=>Se[R.Hb],"%C":R=>P((R.Bb+1900)/100|0,2),"%d":R=>P(R.Lb,2),"%e":R=>A(R.Lb,2," "),"%g":R=>Z(R).toString().substring(2),"%G":R=>Z(R),"%H":R=>P(R.Gb,2),"%I":R=>(R=R.Gb,R==0?R=12:12<R&&(R-=12),P(R,2)),"%j":R=>{for(var le=0,Ie=0;Ie<=R.Hb-1;le+=(kt(R.Bb+1900)?ei:ti)[Ie++]);return P(R.Lb+le,3)},"%m":R=>P(R.Hb+1,2),"%M":R=>P(R.kc,2),"%n":()=>`\n`,"%p":R=>0<=R.Gb&&12>R.Gb?"AM":"PM","%S":R=>P(R.lc,2),"%t":()=>"	","%u":R=>R.vb||7,"%U":R=>P(Math.floor((R.Ab+7-R.vb)/7),2),"%V":R=>{var le=Math.floor((R.Ab+7-(R.vb+6)%7)/7);if(2>=(R.vb+371-R.Ab-2)%7&&le++,le)le==53&&(Ie=(R.vb+371-R.Ab)%7,Ie==4||Ie==3&&kt(R.Bb)||(le=1));else{le=52;var Ie=(R.vb+7-R.Ab-1)%7;(Ie==4||Ie==5&&kt(R.Bb%400-1))&&le++}return P(le,2)},"%w":R=>R.vb,"%W":R=>P(Math.floor((R.Ab+7-(R.vb+6)%7)/7),2),"%y":R=>(R.Bb+1900).toString().substring(2),"%Y":R=>R.Bb+1900,"%z":R=>{R=R.jc;var le=0<=R;return R=Math.abs(R)/60,(le?"+":"-")+("0000"+(R/60*100+R%60)).slice(-4)},"%Z":R=>R.mc,"%%":()=>"%"},f=f.replace(/%%/g,"\\0\\0");for(oe in K)f.includes(oe)&&(f=f.replace(new RegExp(oe,"g"),K[oe](b)));return f=f.replace(/\\0\\0/g,"%"),oe=Il(f),oe.length>l?0:(Tl(oe,n),oe.length-1)}me.Ib();for(var ni=Array(256),cn=0;256>cn;++cn)ni[cn]=String.fromCharCode(cn);Tr=ni,Qe=d.BindingError=class extends Error{constructor(n){super(n),this.name="BindingError"}},d.InternalError=class extends Error{constructor(n){super(n),this.name="InternalError"}},Object.assign(or.prototype,{get(n){return this.wb[n]},has(n){return this.wb[n]!==void 0},Kb(n){var l=this.Nb.pop()||this.wb.length;return this.wb[l]=n,l},Mb(n){this.wb[n]=void 0,this.Nb.push(n)}}),et.wb.push({value:void 0},{value:null},{value:!0},{value:!1}),et.Db=et.wb.length,d.count_emval_handles=()=>{for(var n=0,l=et.Db;l<et.wb.length;++l)et.wb[l]!==void 0&&++n;return n};var El=[it,Fr,Sr,qr,mt,Cr,Ar,Kr,tr,Yr,Zr,Xr,Jr,Ir,Gt,Qr,Go,Lo,Ko,Yo,Zo,Xo,Jo,Qo],Pl={ua:function(n,l,f){return q(async()=>{await d.ac(n,l,f)})},b:function(n,l,f){throw n>>>=0,new Ln(n).Ib(l>>>0,f>>>0),jr=n,_r++,jr},ga:function(n){ai(n>>>0,!C,1,!T,131072,!1),me.Tb()},F:function(n){n>>>=0,E?postMessage({cmd:"cleanupThread",thread:n}):me.Rb(me.pb[n])},Y:Ht,z:qr,ma:mt,U:Cr,W:Ar,N:Kr,ka:tr,da:Yr,ja:Zr,H:Xr,V:Jr,S:Ir,la:Gt,T:Qr,K:function(n,l,f,b,A){n>>>=0,l>>>=0,f>>>=0,l=lt(l);var P=l.indexOf("u")!=-1;P&&(A=(1n<<64n)-1n),pt(n,{name:l,fromWireType:z=>z,toWireType:function(z,L){if(typeof L!="bigint"&&typeof L!="number")throw new TypeError(`Cannot convert "${rr(L)}" to ${this.name}`);if(L<b||L>A)throw new TypeError(`Passing a number "${rr(L)}" from JS side to C/C++ side to an argument of type "${l}", which is outside the valid range [${b}, ${A}]!`);return L},argPackAdvance:8,readValueFromPointer:Pr(l,f,!P),Cb:null})},sa:function(n,l,f,b){n>>>=0,l=lt(l>>>0),pt(n,{name:l,fromWireType:function(A){return!!A},toWireType:function(A,P){return P?f:b},argPackAdvance:8,readValueFromPointer:function(A){return this.fromWireType(o()[A>>>0])},Cb:null})},ra:function(n,l){n>>>=0,l=lt(l>>>0),pt(n,{name:l,fromWireType:f=>{var b=Ke(f);return Lt(f),b},toWireType:(f,b)=>tt(b),argPackAdvance:8,readValueFromPointer:tn,Cb:null})},J:function(n,l,f){n>>>=0,f>>>=0,l=lt(l>>>0),pt(n,{name:l,fromWireType:b=>b,toWireType:(b,A)=>A,argPackAdvance:8,readValueFromPointer:rn(l,f),Cb:null})},v:function(n,l,f,b,A){if(n>>>=0,f>>>=0,l=lt(l>>>0),A===-1&&(A=4294967295),A=L=>L,b===0){var P=32-8*f;A=L=>L<<P>>>P}var z=l.includes("unsigned")?function(L,Z){return Z>>>0}:function(L,Z){return Z};pt(n,{name:l,fromWireType:A,toWireType:z,argPackAdvance:8,readValueFromPointer:Pr(l,f,b!==0),Cb:null})},o:function(n,l,f){function b(P){var z=p()[P>>>2>>>0];return P=p()[P+4>>>2>>>0],new A(r().buffer,P,z)}n>>>=0;var A=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][l];f=lt(f>>>0),pt(n,{name:f,fromWireType:b,argPackAdvance:8,readValueFromPointer:b},{Yb:!0})},L:function(n,l){n>>>=0,l=lt(l>>>0);var f=l==="std::string";pt(n,{name:l,fromWireType:function(b){var A=p()[b>>>2>>>0],P=b+4;if(f)for(var z=P,L=0;L<=A;++L){var Z=P+L;if(L==A||o()[Z>>>0]==0){if(z=Oe(z,Z-z),K===void 0)var K=z;else K+=String.fromCharCode(0),K+=z;z=Z+1}}else{for(K=Array(A),L=0;L<A;++L)K[L]=String.fromCharCode(o()[P+L>>>0]);K=K.join("")}return wt(b),K},toWireType:function(b,A){A instanceof ArrayBuffer&&(A=new Uint8Array(A));var P=typeof A=="string";if(!(P||A instanceof Uint8Array||A instanceof Uint8ClampedArray||A instanceof Int8Array))throw new Qe("Cannot pass non-string to std::string");var z=f&&P?Je(A):A.length,L=Rr(4+z+1),Z=L+4;if(p()[L>>>2>>>0]=z,f&&P)Dt(A,Z,z+1);else if(P)for(P=0;P<z;++P){var K=A.charCodeAt(P);if(255<K)throw wt(Z),new Qe("String has UTF-16 code units that do not fit in 8 bits");o()[Z+P>>>0]=K}else for(P=0;P<z;++P)o()[Z+P>>>0]=A[P];return b!==null&&b.push(wt,L),L},argPackAdvance:8,readValueFromPointer:nn,Cb(b){wt(b)}})},B:function(n,l,f){if(n>>>=0,l>>>=0,f>>>=0,f=lt(f),l===2)var b=an,A=sn,P=ir,z=()=>u(),L=1;else l===4&&(b=jn,A=ue,P=un,z=()=>p(),L=2);pt(n,{name:f,fromWireType:Z=>{for(var K=p()[Z>>>2>>>0],oe=z(),ge,Se=Z+4,R=0;R<=K;++R){var le=Z+4+R*l;(R==K||oe[le>>>L]==0)&&(Se=b(Se,le-Se),ge===void 0?ge=Se:(ge+=String.fromCharCode(0),ge+=Se),Se=le+l)}return wt(Z),ge},toWireType:(Z,K)=>{if(typeof K!="string")throw new Qe(`Cannot pass non-string to C++ string type ${f}`);var oe=P(K),ge=Rr(4+oe+l);return p()[ge>>>2]=oe>>L,A(K,ge+4,oe+l),Z!==null&&Z.push(wt,ge),ge},argPackAdvance:8,readValueFromPointer:tn,Cb(Z){wt(Z)}})},ta:function(n,l){n>>>=0,l=lt(l>>>0),pt(n,{Zb:!0,name:l,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},qa:()=>1,Q:function(n,l){n>>>=0,n==l>>>0?setTimeout(()=>Ft()):E?postMessage({targetThread:n,cmd:"checkMailbox"}):(n=me.pb[n])&&n.postMessage({cmd:"checkMailbox"})},Z:function(n,l,f,b){l>>>=0,f/=2,ar.length=f,b=b>>>0>>>3;for(var A=0;A<f;A++)ar[A]=he[b+2*A]?he[b+2*A+1]:h()[b+2*A+1>>>0];return n=0>n?Nt[-n-1]:El[n],me.Wb=l,l=n.apply(null,ar),me.Wb=0,l},fa:at,pa:function(n){S&&me.pb[n>>>0].ref()},t:function(n,l,f){return l>>>=0,f>>>=0,n=Ke(n>>>0),l=sr(l,"emval::as"),Or(l,f,n)},y:function(n){return n>>>=0,q(()=>(n=Ke(n),n.then(tt)))},p:function(n,l,f,b){return f>>>=0,b>>>=0,n=j[n>>>0],l=Ke(l>>>0),n(null,l,f,b)},k:function(n,l,f,b,A){return f>>>=0,b>>>=0,A>>>=0,n=j[n>>>0],l=Ke(l>>>0),f=fe(f),n(l,l[f],b,A)},c:Lt,C:function(n,l){return l>>>=0,n=Ke(n>>>0),l=Ke(l),n==l},n:function(n){return n>>>=0,n===0?tt($e()):(n=fe(n),tt($e()[n]))},j:function(n,l,f){l=ae(n,l>>>0);var b=l.shift();n--;var A=`return function (obj, func, destructorsRef, args) {\n`,P=0,z=[];f===0&&z.push("obj");for(var L=["retType"],Z=[b],K=0;K<n;++K)z.push("arg"+K),L.push("argType"+K),Z.push(l[K]),A+=`  var arg${K} = argType${K}.readValueFromPointer(args${P?"+"+P:""});\n`,P+=l[K].argPackAdvance;for(A+=`  var rv = ${f===1?"new func":"func.call"}(${z.join(", ")});\n`,K=0;K<n;++K)l[K].deleteObject&&(A+=`  argType${K}.deleteObject(arg${K});\n`);return b.Zb||(L.push("emval_returnValue"),Z.push(Or),A+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),L.push(A+`};\n`),n=Ot(L).apply(null,Z),f=`methodCaller<(${l.map(oe=>oe.name).join(", ")}) => ${b.name}>`,k(Ae(f,n))},s:function(n,l){return l>>>=0,n=Ke(n>>>0),l=Ke(l),tt(n[l])},e:function(n){n>>>=0,4<n&&(et.get(n).Qb+=1)},w:function(){return tt([])},m:function(n){n=Ke(n>>>0);for(var l=Array(n.length),f=0;f<n.length;f++)l[f]=n[f];return tt(l)},f:function(n){return tt(fe(n>>>0))},l:function(){return tt({})},i:function(n){n>>>=0;for(var l=Ke(n);l.length;){var f=l.pop();l.pop()(f)}Lt(n)},h:function(n,l,f){l>>>=0,f>>>=0,n=Ke(n>>>0),l=Ke(l),f=Ke(f),n[l]=f},d:function(n,l){return l>>>=0,n=sr(n>>>0,"_emval_take_value"),n=n.readValueFromPointer(l),tt(n)},aa:function(n,l){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),l>>>=0,n=new Date(1e3*n),a()[l>>>2>>>0]=n.getUTCSeconds(),a()[l+4>>>2>>>0]=n.getUTCMinutes(),a()[l+8>>>2>>>0]=n.getUTCHours(),a()[l+12>>>2>>>0]=n.getUTCDate(),a()[l+16>>>2>>>0]=n.getUTCMonth(),a()[l+20>>>2>>>0]=n.getUTCFullYear()-1900,a()[l+24>>>2>>>0]=n.getUTCDay(),n=(n.getTime()-Date.UTC(n.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,a()[l+28>>>2>>>0]=n},ba:function(n,l){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),l>>>=0,n=new Date(1e3*n),a()[l>>>2>>>0]=n.getSeconds(),a()[l+4>>>2>>>0]=n.getMinutes(),a()[l+8>>>2>>>0]=n.getHours(),a()[l+12>>>2>>>0]=n.getDate(),a()[l+16>>>2>>>0]=n.getMonth(),a()[l+20>>>2>>>0]=n.getFullYear()-1900,a()[l+24>>>2>>>0]=n.getDay();var f=(kt(n.getFullYear())?No:Ho)[n.getMonth()]+n.getDate()-1|0;a()[l+28>>>2>>>0]=f,a()[l+36>>>2>>>0]=-(60*n.getTimezoneOffset()),f=new Date(n.getFullYear(),6,1).getTimezoneOffset();var b=new Date(n.getFullYear(),0,1).getTimezoneOffset();n=(f!=b&&n.getTimezoneOffset()==Math.min(b,f))|0,a()[l+32>>>2>>>0]=n},ca:function(n){n>>>=0;var l=new Date(a()[n+20>>>2>>>0]+1900,a()[n+16>>>2>>>0],a()[n+12>>>2>>>0],a()[n+8>>>2>>>0],a()[n+4>>>2>>>0],a()[n>>>2>>>0],0),f=a()[n+32>>>2>>>0],b=l.getTimezoneOffset(),A=new Date(l.getFullYear(),6,1).getTimezoneOffset(),P=new Date(l.getFullYear(),0,1).getTimezoneOffset(),z=Math.min(P,A);return 0>f?a()[n+32>>>2>>>0]=+(A!=P&&z==b):0<f!=(z==b)&&(A=Math.max(P,A),l.setTime(l.getTime()+6e4*((0<f?z:A)-b))),a()[n+24>>>2>>>0]=l.getDay(),f=(kt(l.getFullYear())?No:Ho)[l.getMonth()]+l.getDate()-1|0,a()[n+28>>>2>>>0]=f,a()[n>>>2>>>0]=l.getSeconds(),a()[n+4>>>2>>>0]=l.getMinutes(),a()[n+8>>>2>>>0]=l.getHours(),a()[n+12>>>2>>>0]=l.getDate(),a()[n+16>>>2>>>0]=l.getMonth(),a()[n+20>>>2>>>0]=l.getYear(),n=l.getTime(),isNaN(n)?(a()[oi()>>>2>>>0]=61,n=-1):n/=1e3,BigInt(n)},_:Go,$:Lo,P:function(n,l,f){function b(K){return(K=K.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?K[1]:"GMT"}n>>>=0,l>>>=0,f>>>=0;var A=new Date().getFullYear(),P=new Date(A,0,1),z=new Date(A,6,1);A=P.getTimezoneOffset();var L=z.getTimezoneOffset(),Z=Math.max(A,L);p()[n>>>2>>>0]=60*Z,a()[l>>>2>>>0]=+(A!=L),n=b(P),l=b(z),n=Fo(n),l=Fo(l),L<A?(p()[f>>>2>>>0]=n,p()[f+4>>>2>>>0]=l):(p()[f>>>2>>>0]=l,p()[f+4>>>2>>>0]=n)},q:()=>{Bt("")},g:function(n,l,f){return n>>>=0,l=jo(l>>>0,f>>>0),Nt[n].apply(null,l)},M:function(n,l,f){return n>>>=0,l=jo(l>>>0,f>>>0),Nt[n].apply(null,l)},G:()=>{},I:()=>Date.now(),oa:()=>{throw qe+=1,"unwind"},R:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>S?(xi(),ur(Si)).cpus().length:navigator.hardwareConcurrency,O:function(n){n>>>=0;var l=o().length;if(n<=l||4294901760<n)return!1;for(var f=1;4>=f;f*=2){var b=l*(1+.2/f);b=Math.min(b,n+100663296);var A=Math;b=Math.max(n,b);e:{A=(A.min.call(A,4294901760,b+(65536-b%65536)%65536)-be.buffer.byteLength+65535)/65536;try{be.grow(A),ke();var P=1;break e}catch{}P=void 0}if(P)return!0}return!1},ha:Ko,ia:Yo,X:Qt,A:Zo,E:Xo,ea:Jo,D:Qo,a:be||d.wasmMemory,na:ri,r:function(n,l,f,b){return ri(n>>>0,l>>>0,f>>>0,b>>>0)}},re=function(){function n(f,b){return re=f.exports,re=ln(),re=Ol(),me.Ub.push(re.bb),Tt.unshift(re.va),Me=b,mr(),re}var l={a:Pl};if(Rt++,d.instantiateWasm)try{return d.instantiateWasm(l,n)}catch(f){ee(`Module.instantiateWasm callback failed with error: ${f}`),w(f)}return hr(l,function(f){n(f.instance,f.module)}).catch(w),{}}();d._OrtInit=(n,l)=>(d._OrtInit=re.wa)(n,l),d._OrtGetLastError=(n,l)=>(d._OrtGetLastError=re.xa)(n,l),d._OrtCreateSessionOptions=(n,l,f,b,A,P,z,L,Z,K)=>(d._OrtCreateSessionOptions=re.ya)(n,l,f,b,A,P,z,L,Z,K),d._OrtAppendExecutionProvider=(n,l)=>(d._OrtAppendExecutionProvider=re.za)(n,l),d._OrtAddFreeDimensionOverride=(n,l,f)=>(d._OrtAddFreeDimensionOverride=re.Aa)(n,l,f),d._OrtAddSessionConfigEntry=(n,l,f)=>(d._OrtAddSessionConfigEntry=re.Ba)(n,l,f),d._OrtReleaseSessionOptions=n=>(d._OrtReleaseSessionOptions=re.Ca)(n),d._OrtCreateSession=(n,l,f)=>(d._OrtCreateSession=re.Da)(n,l,f),d._OrtReleaseSession=n=>(d._OrtReleaseSession=re.Ea)(n),d._OrtGetInputOutputCount=(n,l,f)=>(d._OrtGetInputOutputCount=re.Fa)(n,l,f),d._OrtGetInputName=(n,l)=>(d._OrtGetInputName=re.Ga)(n,l),d._OrtGetOutputName=(n,l)=>(d._OrtGetOutputName=re.Ha)(n,l),d._OrtFree=n=>(d._OrtFree=re.Ia)(n),d._OrtCreateTensor=(n,l,f,b,A,P)=>(d._OrtCreateTensor=re.Ja)(n,l,f,b,A,P),d._OrtGetTensorData=(n,l,f,b,A)=>(d._OrtGetTensorData=re.Ka)(n,l,f,b,A),d._OrtReleaseTensor=n=>(d._OrtReleaseTensor=re.La)(n),d._OrtCreateRunOptions=(n,l,f,b)=>(d._OrtCreateRunOptions=re.Ma)(n,l,f,b),d._OrtAddRunConfigEntry=(n,l,f)=>(d._OrtAddRunConfigEntry=re.Na)(n,l,f),d._OrtReleaseRunOptions=n=>(d._OrtReleaseRunOptions=re.Oa)(n),d._OrtCreateBinding=n=>(d._OrtCreateBinding=re.Pa)(n),d._OrtBindInput=(n,l,f)=>(d._OrtBindInput=re.Qa)(n,l,f),d._OrtBindOutput=(n,l,f,b)=>(d._OrtBindOutput=re.Ra)(n,l,f,b),d._OrtClearBoundOutputs=n=>(d._OrtClearBoundOutputs=re.Sa)(n),d._OrtReleaseBinding=n=>(d._OrtReleaseBinding=re.Ta)(n),d._OrtRunWithBinding=(n,l,f,b,A)=>(d._OrtRunWithBinding=re.Ua)(n,l,f,b,A),d._OrtRun=(n,l,f,b,A,P,z,L)=>(d._OrtRun=re.Va)(n,l,f,b,A,P,z,L),d._OrtEndProfiling=n=>(d._OrtEndProfiling=re.Wa)(n),d._JsepOutput=(n,l,f)=>(d._JsepOutput=re.Xa)(n,l,f),d._JsepGetNodeName=n=>(d._JsepGetNodeName=re.Ya)(n);var oi=()=>(oi=re.Za)(),pn=d._pthread_self=()=>(pn=d._pthread_self=re._a)(),Rr=d._malloc=n=>(Rr=d._malloc=re.$a)(n),wt=d._free=n=>(wt=d._free=re.ab)(n);d.__emscripten_tls_init=()=>(d.__emscripten_tls_init=re.bb)();var ii=n=>(ii=re.cb)(n);d.__embind_initialize_bindings=()=>(d.__embind_initialize_bindings=re.db)();var ai=d.__emscripten_thread_init=(n,l,f,b,A,P)=>(ai=d.__emscripten_thread_init=re.fb)(n,l,f,b,A,P);d.__emscripten_thread_crashed=()=>(d.__emscripten_thread_crashed=re.gb)();var si=(n,l,f,b)=>(si=re.hb)(n,l,f,b),Zn=n=>(Zn=re.ib)(n),Xn=d.__emscripten_thread_exit=n=>(Xn=d.__emscripten_thread_exit=re.jb)(n),ui=()=>(ui=re.kb)(),li=(n,l)=>(li=re.lb)(n,l),Jn=()=>(Jn=re.mb)(),mn=n=>(mn=re.nb)(n),Qn=n=>(Qn=re.ob)(n),di=d.dynCall_ii=(n,l)=>(di=d.dynCall_ii=re.qb)(n,l),ci=n=>(ci=re.rb)(n),pi=()=>(pi=re.sb)(),mi=n=>(mi=re.tb)(n),fi=()=>(fi=re.ub)();d.___start_em_js=916359,d.___stop_em_js=916520;function Ol(){var n=re;n=Object.assign({},n);var l=b=>()=>b()>>>0,f=b=>A=>b(A)>>>0;return n.Za=l(n.Za),n._a=l(n._a),n.$a=f(n.$a),n.cb=f(n.cb),n.emscripten_main_runtime_thread_id=l(n.emscripten_main_runtime_thread_id),n.mb=l(n.mb),n.ob=f(n.ob),n}d.wasmMemory=be,d.stackAlloc=Qn,d.stackSave=Jn,d.stackRestore=mn,d.keepRuntimeAlive=()=>0<qe,d.UTF8ToString=Oe,d.stringToUTF8=Dt,d.lengthBytesUTF8=Je,d.ExitStatus=gr,d.PThread=me;var fn;Wt=function n(){fn||hi(),fn||(Wt=n)};function hi(){if(!(0<Rt))if(E)y(d),E||er(Tt),startWorker(d);else{if(d.preRun)for(typeof d.preRun=="function"&&(d.preRun=[d.preRun]);d.preRun.length;)It.unshift(d.preRun.shift());er(It),0<Rt||fn||(fn=!0,d.calledRun=!0,pe||(E||er(Tt),y(d),E||er(Vt)))}}return hi(),t.ready}})();typeof Ai=="object"&&typeof ao=="object"?ao.exports=Ci:typeof define=="function"&&define.amd&&define([],()=>Ci)});var Ti=Br((Vp,Wl)=>{Wl.exports=\'"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed?.(),a}}self.onmessage=handleMessage;\\n\'});var lo,st,Mr,yn,zr,Bi,co,Ve=Q(()=>{"use strict";lo=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},st=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},Mr=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],yn=e=>{switch(e){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},zr=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Bi=e=>e==="float32"||e==="int32"||e==="int64"||e==="bool"||e==="float16"||e==="uint32",co=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var bn=Q(()=>{"use strict"});var Mi=Q(()=>{"use strict";bn()});var zi,Ui=Q(()=>{"use strict";zi="1.18.0"});var Vi,Kt,po=Q(()=>{"use strict";Ui();Vi="warning",Kt={wasm:{},webgl:{},webgpu:{},versions:{common:zi},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Vi=e}},get logLevel(){return Vi}};Object.defineProperty(Kt,"logLevel",{enumerable:!0})});var lr,Wi=Q(()=>{"use strict";po();lr=Kt});var Ni=Q(()=>{"use strict"});var Hi=Q(()=>{"use strict";wn()});var Li=Q(()=>{"use strict"});var Fi=Q(()=>{"use strict";wn()});var wn=Q(()=>{"use strict";Ni();Hi();Li();Fi()});var vn=Q(()=>{"use strict";wn()});var mo,ji,Yt,Zt,fo=Q(()=>{"use strict";po();mo=(e,t)=>{Kt.wasm.trace&&console.timeStamp(`${e}::ORT::${t}`)},ji=(e,t)=>{let r=new Error().stack?.split(/\\r\\n|\\r|\\n/g)||[],o=!1;for(let i=0;i<r.length;i++){if(o&&!r[i].includes("TRACE_FUNC")){let u=`FUNC_${e}::${r[i].trim().split(" ")[1]}`;t&&(u+=`::${t}`),mo("CPU",u);return}r[i].includes("TRACE_FUNC")&&(o=!0)}},Yt=e=>{Kt.wasm.trace&&ji("BEGIN",e)},Zt=e=>{Kt.wasm.trace&&ji("END",e)}});var qi=Q(()=>{"use strict";bn();vn();fo()});var Ki=Q(()=>{"use strict";qi()});var Yi=Q(()=>{"use strict"});var Zi=Q(()=>{"use strict";bn();vn()});var Xi=Q(()=>{"use strict";Zi()});var dr=Q(()=>{"use strict";Mi();Wi();Ki();vn();fo();Yi();Xi()});var Xl,Jl,Ji,Qi,ea,Ql,De,zt=Q(()=>{"use strict";Ve();Xl=["V","I","W","E","F"],Jl=(e,t)=>{console.log(`[${Xl[e]},${new Date().toISOString()}]${t}`)},ea=(e,t)=>{Ji=e,Qi=t},Ql=(e,t)=>{let r=zr(e),o=zr(Ji);r>=o&&Jl(r,typeof t=="function"?t():t)},De=(...e)=>{Qi&&Ql(...e)}});var ta,ra=Q(()=>{"use strict";Ve();ta=(e,t)=>new(yn(t))(e)});var $n=Q(()=>{"use strict"});var _n,ed,na,go,ho,ia,aa=Q(()=>{"use strict";zt();$n();_n=e=>Math.ceil(e/16)*16,ed=1,na=()=>ed++,go=async(e,t,r,o)=>{let i=_n(r),u=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let a=e.getCommandEncoder();e.endComputePass(),a.copyBufferToBuffer(t,0,u,0,i),e.flush(),await u.mapAsync(GPUMapMode.READ);let p=u.getMappedRange();if(o){let m=o();return m.set(new Uint8Array(p,0,r)),m}else return new Uint8Array(p.slice(0,r))}finally{u.destroy()}},ho=class{constructor(t){this.backend=t;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map}upload(t,r){let o=r.buffer,i=r.byteOffset,u=r.byteLength,a=_n(u),p=this.storageCache.get(t);if(!p)throw new Error("gpu data for uploading does not exist");if(p.originalSize!==u)throw new Error(`inconsistent data size. gpu data size=${p.originalSize}, data size=${u}`);let m=this.backend.device.createBuffer({mappedAtCreation:!0,size:a,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),h=m.getMappedRange();new Uint8Array(h).set(new Uint8Array(o,i,u)),m.unmap();let d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(m,0,p.gpuData.buffer,0,a),De("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(m)}memcpy(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("source gpu data for memcpy does not exist");let i=this.storageCache.get(r);if(!i)throw new Error("destination gpu data for memcpy does not exist");if(o.originalSize!==i.originalSize)throw new Error("inconsistent source and destination gpu data size");let u=_n(o.originalSize),a=this.backend.getCommandEncoder();this.backend.endComputePass(),a.copyBufferToBuffer(o.gpuData.buffer,0,i.gpuData.buffer,0,u)}registerExternalBuffer(t,r,o){let i;if(o){if(i=this.externalBuffers.get(o),i===void 0)throw new Error("previous buffer is not registered");if(t===o)return De("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, buffer is the same, skip.`),i;this.externalBuffers.delete(o)}else i=na();return this.storageCache.set(i,{gpuData:{id:i,type:0,buffer:t},originalSize:r}),this.externalBuffers.set(t,i),De("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, registered.`),i}unregisterExternalBuffer(t){let r=this.externalBuffers.get(t);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(t),De("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let o=_n(t),i,u=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,a=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(u||a){let m=u?this.freeBuffers:this.freeUniformBuffers,h=m.get(o);h||(h=[],m.set(o,h)),h.length>0?i=h.pop():i=this.backend.device.createBuffer({size:o,usage:r})}else i=this.backend.device.createBuffer({size:o,usage:r});let p={id:na(),type:0,buffer:i};return this.storageCache.set(p.id,{gpuData:p,originalSize:t}),De("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${p.id}`),p}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r=this.storageCache.get(t);if(!r)throw new Error("releasing data does not exist");return De("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("data does not exist");await go(this.backend,o.gpuData.buffer,o.originalSize,r)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();this.buffersForUploadingPending=[];for(let t of this.buffersPending)(t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(t.size).push(t):(t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(t.size).push(t):t.destroy();this.buffersPending=[]}dispose(){this.freeBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map}},ia=(...e)=>new ho(...e)});var yo,xe,Ye=Q(()=>{"use strict";yo=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},xe=e=>new yo(e)});var bo,vt,W,Xt,Sn,xn,Cn,Ce=Q(()=>{"use strict";bo=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},vt=class{static calcShape(t,r,o=!1){let i=t.length,u=r.length;if(i===0)return r;if(u===0)return t;let a=Math.max(t.length,r.length),p=new Array(a);if(o){if(i<2||u<2)return;let m=bo.calcMatMulShape([t[i-2],t[i-1]],[r[u-2],r[u-1]]);if(m===void 0)return;[p[a-2],p[a-1]]=m}for(let m=o?3:1;m<=a;m++){let h=i-m<0?1:t[i-m],d=u-m<0?1:r[u-m];if(h!==d&&h>1&&d>1)return;p[a-m]=Math.max(h,d)}return p}static isValidBroadcast(t,r){let o=t.length,i=r.length;if(o>i)return!1;for(let u=1;u<=o;u++)if(t[o-u]!==1&&t[o-u]!==r[i-u])return!1;return!0}},W=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,o){let i=1;for(let u=r;u<o;u++){if(t[u]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=t[u]}return i}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let o=new Array(r);o[r-1]=1,o[r-2]=t[r-1];for(let i=r-3;i>=0;--i)o[i]=o[i+1]*t[i+1];return o}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(o=>this.normalizeAxis(o,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(o=>t[o]):t.slice().reverse()}static padShape(t,r){let o=t.length;return t.map((i,u)=>i+r[u]+r[u+o])}static areEqual(t,r){return t.length!==r.length?!1:t.every((o,i)=>o===r[i])}},Xt=class e{static adjustPoolAttributes(t,r,o,i,u,a){if(!t&&o.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let p=0;p<r.length-2;p++)p>=o.length?o.push(r[p+2]):o[p]=r[p+2];for(let p=0;p<o.length;p++)if(p<i.length){if(i[p]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let p=0;p<o.length;p++)if(p<u.length){if(u[p]<0)throw new Error("dilations should be greater than or equal to 1")}else u.push(1);for(let p=0;p<o.length*2;p++)if(p<a.length){if(a[p]<0)throw new Error("pad should be greater than or equal to 1")}else a.push(0);for(let p=0;p<o.length;p++){if(o[p]<=0)throw new Error("kernel shapes need to be greater than 0");if(a[p]>=o[p]||a[p+o.length]>=o[p])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,o,i,u,a,p){if(p){if(u.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let m=0;m<t.length-2;m++)e.adjustPadAndReturnShape(t[m+(a?1:2)],r[m],o[m],i[m],u,m,m+t.length-2,p)}}static computePoolOutputShape(t,r,o,i,u,a,p){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let m=[r[0],r[1]];return e.computeShapeHelper(t,r,m,o,i,u,a,p),m}static computeConvOutputShape(t,r,o,i,u,a,p){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let m=[t[0],r[0]];return e.computeShapeHelper(!1,t,m,o,i,u,a,p),m}static computeShapeHelper(t,r,o,i,u,a,p,m){if(t)for(let h=0;h<r.length-2;h++)o.push(1);else for(let h=0;h<r.length-2;h++)o.push(e.adjustPadAndReturnShape(r[h+2],i[h],u[h],a[h],p,h,h+r.length-2,m))}static adjustPadAndReturnShape(t,r,o,i,u,a,p,m){let h=o*(i-1)+1;if(m&&m!=="NOTSET")switch(m){case"VALID":return u[a]=0,u[p]=0,Math.floor((t-h)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(o!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let y=((t+r-1)/r-1)*r+i-t;return u[a]=Math.floor(m==="SAME_LOWER"?(y+1)/2:y/2),u[p]=y-u[a],Math.floor((t+y-i)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+u[a]+u[p]-h)/r+1)}},Sn=class{static getShapeOfGemmResult(t,r,o,i,u){if(t.length!==2||o.length!==2)throw new Error("shape need to be of size 2");let a,p,m;r?(a=t[1],p=t[0]):(a=t[0],p=t[1]);let h=-1;if(i?(m=o[0],h=1):(m=o[1],h=0),o[h]!==p)throw new Error("dimension mismatch");if(a<=0||m<=0||p<=0)throw new Error("invalid shape specified");if(u&&!vt.isValidBroadcast(u,[a,m]))throw new Error("gemm: invalid bias shape for broadcast");return[a,m,p]}},xn=-34028234663852886e22,Cn=34028234663852886e22});var td,vo,Ne,ht,G,He,Ze,gt,ut,ce,$o,V,J,An,wo,sa,cr,_e=Q(()=>{"use strict";Ve();Ce();td=64,vo=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},Ne=(e,t=1)=>{let r=vo(e,t);return typeof r=="string"?r:r[0]},ht=(e,t=1)=>{let r=vo(e,t);return typeof r=="string"?r:r[1]},G=e=>e.length===0?[]:[{type:"uint32",data:e},{type:"uint32",data:W.computeStrides(e)}],He=e=>e%4===0?4:e%2===0?2:1,Ze=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,gt=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}f(${r})`,ut=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,ce=(e,t,r,o)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?o==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:o==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,$o=(e,t,r,o,i)=>{let u=typeof r=="number",a=u?r:r.length,p=[...new Array(a).keys()],m=a<2?"u32":a<=4?`vec${a}<u32>`:`array<u32, ${a}>`,h=vo(t,i),d=typeof h=="string"?h:h[1],y=typeof h=="string"?h:h[0],w={indices:m,value:d,storage:y,tensor:t},_=F=>typeof F=="string"?F:`${F}u`,v={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},x=u?"uniforms.":"",T=`${x}${e}_shape`,C=`${x}${e}_strides`,S="";for(let F=0;F<a-1;F++)S+=`\n    let dim${F} = current / ${ce(C,F,a)};\n    let rest${F} = current % ${ce(C,F,a)};\n    indices[${F}] = dim${F};\n    current = rest${F};\n    `;S+=`indices[${a-1}] = current;`;let E=a<2?"":`\n  fn o2i_${e}(offset: u32) -> ${w.indices} {\n    var indices: ${w.indices};\n    var current = offset;\n    ${S}\n    return indices;\n  }`,O=F=>(v.offsetToIndices=!0,a<2?F:`o2i_${e}(${F})`),U=[];if(a>=2)for(let F=a-1;F>=0;F--)U.push(`${ce(C,F,a)} * (indices[${F}])`);let M=a<2?"":`\n  fn i2o_${e}(indices: ${w.indices}) -> u32 {\n    return ${U.join("+")};\n  }`,N=F=>(v.indicesToOffset=!0,a<2?F:`i2o_${e}(${F})`),Y=(...F)=>a===0?"0u":`${w.indices}(${F.map(_).join(",")})`,se=(F,ie)=>a<2?`${F}`:`${ce(F,ie,a)}`,B=(F,ie,he)=>a<2?`${F}=${he};`:`${ce(F,ie,a)}=${he};`,te={},Pe=(F,ie)=>{v.broadcastedIndicesToOffset=!0;let he=`${ie.name}broadcastedIndicesTo${e}Offset`;if(he in te)return`${he}(${F})`;let Xe=[];for(let nt=a-1;nt>=0;nt--){let ke=ie.indicesGet("outputIndices",nt+ie.rank-a);Xe.push(`${se(C,nt)} * (${ke} % ${se(T,nt)})`)}return te[he]=`fn ${he}(outputIndices: ${ie.type.indices}) -> u32 {\n             return ${Xe.length>0?Xe.join("+"):"0u"};\n           }`,`${he}(${F})`},Ee=(F,ie)=>(()=>{if(w.storage===w.value)return`${e}[${F}]=${ie};`;if(w.storage==="vec2<u32>"&&w.value==="i32")return`${e}[${F}]=vec2<u32>(u32(${ie}), select(0u, 0xFFFFFFFFu, ${ie} < 0));`;if(w.storage==="vec2<u32>"&&w.value==="u32")return`${e}[${F}]=vec2<u32>(u32(${ie}), 0u);`;if(w.storage==="u32"&&w.value==="vec4<bool>")return`${e}[${F}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ie}));`;throw new Error(`not supported combination of storage type ${w.storage} and value type ${w.value} yet`)})(),ee=F=>(()=>{if(w.storage===w.value)return`${e}[${F}]`;if(w.storage==="vec2<u32>"&&w.value==="i32")return`i32(${e}[${F}].x)`;if(w.storage==="vec2<u32>"&&w.value==="u32")return`u32(${e}[${F}].x)`;if(w.storage==="u32"&&w.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${F}] & 0xFFu), bool(${e}[${F}] & 0xFF00u), bool(${e}[${F}] & 0xFF0000u), bool(${e}[${F}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${w.storage} and value type ${w.value} yet`)})(),be=a<2?"":`\n  fn get_${e}ByIndices(indices: ${w.indices}) -> ${d} {\n    return ${ee(`i2o_${e}(indices)`)};\n  }`,Me=a<2?"":(()=>{let F=p.map(he=>`d${he}: u32`).join(", "),ie=p.map(he=>`d${he}`).join(", ");return`\n  fn get_${e}(${F}) -> ${d} {\n    return get_${e}ByIndices(${Y(ie)});\n  }`})(),pe=(...F)=>{if(F.length!==a)throw new Error(`indices length must be ${a}`);let ie=F.map(_).join(",");return a===0?ee("0u"):a===1?ee(ie[0]):(v.get=!0,v.getByIndices=!0,v.indicesToOffset=!0,`get_${e}(${ie})`)},ye=F=>a<2?ee(F):(v.getByIndices=!0,v.indicesToOffset=!0,`get_${e}ByIndices(${F})`),de=a<2?"":`\n  fn set_${e}ByIndices(indices: ${w.indices}, value: ${d}) {\n    ${Ee(`i2o_${e}(indices)`,"value")}\n  }`,we=a<2?"":(()=>{let F=p.map(he=>`d${he}: u32`).join(", "),ie=p.map(he=>`d${he}`).join(", ");return`\n  fn set_${e}(${F}, value: ${d}) {\n    set_${e}ByIndices(${Y(ie)}, value);\n  }`})();return{impl:()=>{let F=[],ie=!1;return v.offsetToIndices&&(F.push(E),ie=!0),v.indicesToOffset&&(F.push(M),ie=!0),v.broadcastedIndicesToOffset&&(Object.values(te).forEach(he=>F.push(he)),ie=!0),v.set&&(F.push(we),ie=!0),v.setByIndices&&(F.push(de),ie=!0),v.get&&(F.push(Me),ie=!0),v.getByIndices&&(F.push(be),ie=!0),!u&&ie&&F.unshift(`const ${T} = ${w.indices}(${r.join(",")});`,`const ${C} = ${w.indices}(${W.computeStrides(r).join(",")});`),F.join(`\n`)},type:w,offsetToIndices:O,indicesToOffset:N,broadcastedIndicesToOffset:Pe,indices:Y,indicesGet:se,indicesSet:B,set:(...F)=>{if(F.length!==a+1)throw new Error(`indices length must be ${a}`);let ie=F[a];if(typeof ie!="string")throw new Error("value must be string");let he=F.slice(0,a).map(_).join(",");return a===0?Ee("0u",ie):a===1?Ee(he[0],ie):(v.set=!0,v.setByIndices=!0,v.indicesToOffset=!0,`set_${e}(${he}, ${ie})`)},setByOffset:Ee,setByIndices:(F,ie)=>a<2?Ee(F,ie):(v.setByIndices=!0,v.indicesToOffset=!0,`set_${e}ByIndices(${F}, ${ie});`),get:pe,getByOffset:ee,getByIndices:ye,usage:o,name:e,strides:C,shape:T,rank:a}},V=(e,t,r,o=1)=>$o(e,t,r,"input",o),J=(e,t,r,o=1)=>$o(e,t,r,"output",o),An=(e,t,r,o=1)=>$o(e,t,r,"internal",o),wo=class{constructor(t){this.normalizedDispatchGroup=t;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=td){let r=typeof t=="number"?t:t[0],o=typeof t=="number"?1:t[1],i=typeof t=="number"?1:t[2],u=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,a=u?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>`,p=u?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${r*o*i}u + local_idx;`;return`@compute @workgroup_size(${r}, ${o}, ${i})\n  fn main(${a}) {\n    ${p}\n  `}appendVariableUniforms(t){t.rank!==0&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,r){if(t.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let o=t.usage==="input"?"read":"read_write",i=t.type.storage;return`@group(0) @binding(${r}) var<storage, ${o}> ${t.name}: array<${i}>;`}declareVariables(...t){return t.map(r=>this.declareVariable(r,this.variableIndex++)).join(`\n`)}registerInternalVariable(t){if(t.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(t,r,o=1){return this.uniforms.push({name:t,type:r,length:o}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:r,type:o,length:i}of this.uniforms)if(i&&i>4)o==="f16"?t.push(`@align(16) ${r}:array<mat2x4<${o}>, ${Math.ceil(i/8)}>`):t.push(`${r}:array<vec4<${o}>, ${Math.ceil(i/4)}>`);else{let u=i==null||i===1?o:`vec${i}<${o}>`;t.push(`${r}:${u}`)}return`\n      struct Uniforms { ${t.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`\n`)+this.internalVariables.map(t=>t.impl()).join(`\n`)}},sa=e=>new wo(e),cr=(e,t)=>{let r=e.length,o=[];for(let i=0;i<r;i++){let u=r-1-i,a=e[u]||1;(t[t.length-1-i]||1)>1&&a===1&&o.unshift(u)}return o}});var rd,ua,nd,od,yt,la,da,pr=Q(()=>{"use strict";Ce();Ye();_e();rd=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},ua=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,nd=(e,t)=>W.sortBasedOnPerm(e,ua(e.length,t)),od=(e,t,r,o)=>{let i=[];i.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let u=0;u<t;++u)i.push(r.indicesSet("a",e[u],`i[${u}]`));return i.push("return a;}"),i.join(`\n`)},yt=(e,t)=>{let r=e.dataType,o=e.dims.length,i=ua(o,t),u=nd(e.dims,i),a=J("output",r,u.length),p=V("a",r,o),m=h=>`\n  ${h.registerUniform("output_size","u32").declareVariables(p,a)}\n\n  ${od(i,o,p,a)}\n\n  ${h.mainStart()}\n    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${a.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${a.setByOffset("global_idx",p.getByIndices("aIndices"))}\n  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:h=>{let d=W.size(u);return{outputs:[{dims:u,dataType:h[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:[{type:"uint32",data:d},...G(h[0].dims),...G(u)]}},getShaderSource:m}},la=(e,t)=>{rd(e.inputs),e.compute(yt(e.inputs[0],t.perm))},da=e=>xe({perm:e.perm})});var id,ad,sd,ud,ld,dd,cd,pd,md,fd,$t,ca,pa,ma,fa,ha,ga,ya,ba,wa,va,$a=Q(()=>{"use strict";Ce();_e();In();pr();id={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},ad={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},sd={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},ud={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},ld=(e,t)=>{let r=[];for(let o=t-e;o<t;++o)r.push(o);return r},dd=(e,t)=>{let r=[],o=e.length;for(let u=0;u<o;u++)t.indexOf(u)===-1&&r.push(e[u]);let i=t.map(u=>e[u]);return[r,i]},cd=(e,t)=>{let r=e.length+t.length,o=[],i=0;for(let u=0;u<r;u++)t.indexOf(u)===-1?o.push(e[i++]):o.push(1);return o},pd=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},md=(e,t)=>{let r=[];if(!pd(e,t)){for(let o=0;o<t;++o)e.indexOf(o)===-1&&r.push(o);e.forEach(o=>r.push(o))}return r},fd=(e,t,r,o,i,u,a)=>{let p=r[0].dims,m=W.size(u),h=W.size(a),d=V("_A",r[0].dataType,p),y=J("output",i,u),w=32,_=`\n          var<workgroup> aBestValues : array<${y.type.storage}, ${w}>;\n       `;return{name:e,shaderCache:t,getShaderSource:x=>`\n        ${x.registerUniform("reduceSize","u32").declareVariables(d,y)}\n        ${_}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${x.mainStart(w)}\n\n          let outputIndex = global_idx / ${w};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = ${y.type.storage}(${sd[o]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${w}) {\n           let candidate = ${y.type.storage}(${d.getByOffset("offset + k")});\n           bestValue = ${id[o]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${w}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${ad[o]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${y.setByOffset("outputIndex",`${o==="mean"?`bestValue / ${y.type.storage}(uniforms.reduceSize)`:`${ud[o]}`}`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:u,dataType:i}],dispatchGroup:{x:m},programUniforms:[{type:"uint32",data:h}]})}},$t=(e,t,r,o)=>{let i=e.inputs.length===1?r:_o(e.inputs,r),u=i.axes;u.length===0&&!i.noopWithEmptyAxes&&(u=e.inputs[0].dims.map((_,v)=>v));let a=W.normalizeAxes(u,e.inputs[0].dims.length),p=a,m=e.inputs[0],h=md(p,e.inputs[0].dims.length);h.length>0&&(m=e.compute(yt(e.inputs[0],h),{inputs:[0],outputs:[-1]})[0],p=ld(p.length,m.dims.length));let[d,y]=dd(m.dims,p),w=d;i.keepDims&&(w=cd(d,a)),e.compute(fd(t,{hint:i.cacheKey,inputDependencies:["type"]},[m],o,e.inputs[0].dataType,w,y),{inputs:[m]})},ca=(e,t)=>{$t(e,"ReduceMeanShared",t,"mean")},pa=(e,t)=>{$t(e,"ReduceL1Shared",t,"l1")},ma=(e,t)=>{$t(e,"ReduceL2Shared",t,"l2")},fa=(e,t)=>{$t(e,"ReduceLogSumExpShared",t,"logSumExp")},ha=(e,t)=>{$t(e,"ReduceMaxShared",t,"max")},ga=(e,t)=>{$t(e,"ReduceMinShared",t,"min")},ya=(e,t)=>{$t(e,"ReduceProdShared",t,"prod")},ba=(e,t)=>{$t(e,"ReduceSumShared",t,"sum")},wa=(e,t)=>{$t(e,"ReduceSumSquareShared",t,"sumSquare")},va=(e,t)=>{$t(e,"ReduceLogSumShared",t,"logSum")}});var _t,hd,Tn,_o,St,gd,yd,bd,wd,vd,$d,_d,Sd,xd,Cd,xt,_a,Sa,xa,Ca,Aa,Ia,Ta,Ea,Pa,Oa,In=Q(()=>{"use strict";Ce();Ye();_e();$a();_t=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},hd=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],Tn=(e,t,r,o,i,u,a=!1,p=!1)=>{let m=[],h=r[0].dims,d=h.length,y=W.normalizeAxes(i,d),w=!p&&y.length===0;h.forEach((T,C)=>{w||y.indexOf(C)>=0?a&&m.push(1):m.push(T)});let _=m.length,v=W.size(m);return{name:e,shaderCache:t,getShaderSource:T=>{let C=[],S=V("_A",r[0].dataType,d),E=J("output",u,_),O=o(S,E,y),U=O[2];for(let M=0,N=0;M<d;M++)w||y.indexOf(M)>=0?(a&&N++,U=`for(var j${M}: u32 = 0; j${M} < ${h[M]}; j${M}++) {\n                  ${O[2].includes("last_index")?`let last_index = j${M};`:""}\n                  ${S.indicesSet("input_indices",M,`j${M}`)}\n                  ${U}\n                }`):(C.push(`${S.indicesSet("input_indices",M,E.indicesGet("output_indices",N))};`),N++);return`\n\n        ${T.registerUniform("output_size","u32").declareVariables(S,E)}\n\n        ${T.mainStart()}\n          ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${S.type.indices};\n          let output_indices = ${E.offsetToIndices("global_idx")};\n\n          ${C.join(`\n`)}\n          ${O[0]}       // init ops for reduce max/min\n          ${O[1]}\n          ${U}\n          ${O[3]}\n          ${O.length===4?E.setByOffset("global_idx","value"):O.slice(4).join(`\n`)}\n        }`},getRunData:()=>({outputs:[{dims:m,dataType:u}],dispatchGroup:{x:Math.ceil(v/64)},programUniforms:[{type:"uint32",data:v},...G(h),...G(m)]})}},_o=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(o=>r.push(Number(o))),xe({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},St=(e,t,r,o)=>{let i=e.inputs,u=i.length===1?r:_o(i,r);e.compute(Tn(t,{hint:u.cacheKey,inputDependencies:["rank"]},[i[0]],u.noopWithEmptyAxes&&u.axes.length===0?hd:o,u.axes,i[0].dataType,u.keepDims,u.noopWithEmptyAxes),{inputs:[0]})},gd=(e,t)=>{_t(e.inputs),St(e,"ReduceLogSum",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,"value = log(value);"])},yd=(e,t)=>{_t(e.inputs),St(e,"ReduceL1",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += abs(${o.getByIndices("input_indices")});`,""])},bd=(e,t)=>{_t(e.inputs),St(e,"ReduceL2",t,(o,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},wd=(e,t)=>{_t(e.inputs),St(e,"ReduceLogSumExp",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += exp(${o.getByIndices("input_indices")});`,"value = log(value);"])},vd=(e,t)=>{_t(e.inputs),St(e,"ReduceMax",t,(o,i,u)=>{let a=[];for(let p=0;p<o.rank;p++)(u.indexOf(p)>=0||u.length===0)&&a.push(o.indicesSet("input_indices",p,0));return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = max(value, ${o.getByIndices("input_indices")});`,""]})},$d=(e,t)=>{_t(e.inputs),St(e,"ReduceMean",t,(o,i,u)=>{let a=1;for(let p=0;p<o.rank;p++)(u.indexOf(p)>=0||u.length===0)&&(a*=e.inputs[0].dims[p]);return["var sum = f32(0);","",`sum += f32(${o.getByIndices("input_indices")});`,`let value = ${i.type.value}(sum / ${a});`]})},_d=(e,t)=>{_t(e.inputs),St(e,"ReduceMin",t,(o,i,u)=>{let a=[];for(let p=0;p<o.rank;p++)(u.indexOf(p)>=0||u.length===0)&&a.push(`input_indices[${p}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = min(value, ${o.getByIndices("input_indices")});`,""]})},Sd=(e,t)=>{_t(e.inputs),St(e,"ReduceProd",t,(o,i)=>[`var value = ${i.type.storage}(1);`,"",`value *= ${o.getByIndices("input_indices")};`,""])},xd=(e,t)=>{_t(e.inputs),St(e,"ReduceSum",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,""])},Cd=(e,t)=>{_t(e.inputs),St(e,"ReduceSumSquare",t,(o,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += t * t;`,""])},xt=(e,t,r)=>{if(t.length===0)return r;let o=1,i=1;for(let u=0;u<t.length;u++)t.indexOf(u)===-1?o*=e[u]:i*=e[u];return i<32&&o>1024},_a=(e,t)=>{xt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?$d(e,t):ca(e,t)},Sa=(e,t)=>{xt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?yd(e,t):pa(e,t)},xa=(e,t)=>{xt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?bd(e,t):ma(e,t)},Ca=(e,t)=>{xt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?wd(e,t):fa(e,t)},Aa=(e,t)=>{xt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?vd(e,t):ha(e,t)},Ia=(e,t)=>{xt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?_d(e,t):ga(e,t)},Ta=(e,t)=>{xt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Sd(e,t):ya(e,t)},Ea=(e,t)=>{xt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?xd(e,t):ba(e,t)},Pa=(e,t)=>{xt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Cd(e,t):wa(e,t)},Oa=(e,t)=>{xt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?gd(e,t):va(e,t)}});var ka,Ra,Ba,So,Da=Q(()=>{"use strict";Ve();Ye();In();ka=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},Ra=(e,t)=>{ka(e.inputs);let r=(o,i,u)=>{let a=[];for(let p=0;p<o.rank;p++)(u.indexOf(p)>=0||u.length===0)&&a.push(`input_indices[${p}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(Tn("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},Ba=(e,t)=>{ka(e.inputs);let r=(o,i,u)=>{let a=[];for(let p=0;p<o.rank;p++)(u.indexOf(p)>=0||u.length===0)&&a.push(`input_indices[${p}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(Tn("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},So=e=>xe(e)});var Ad,Id,Td,Ed,En,Pd,Ma,xo=Q(()=>{"use strict";Ve();$n();_e();Ad=(e,t)=>{let r=e[0],o=e[1],i=e[2],u=e[3],a=e[4],p=e[5];if(a&&p)throw new Error("Attention cannot have both past and relative_position_bias");if(r.dims.length!==3)throw new Error(\'Input "input" must have 3 dimensions\');let m=r.dims[0],h=r.dims[1],d=r.dims[2];if(i.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimensions\');if(o.dims.length!==2)throw new Error(\'Input "weights" is expected to have 2 dimensions\');if(o.dims[0]!==d)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(i.dims[0]!==o.dims[1])throw new Error(\'Input "bias" dimension 0 should have same length as dimension 1 of input "weights"\');let y=i.dims[0]/3,w=y,_=w;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let E of t.qkvHiddenSizes)if(E%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");y=t.qkvHiddenSizes[0],w=t.qkvHiddenSizes[1],_=t.qkvHiddenSizes[2]}let v=h;if(y!==w)throw new Error("qkv_hidden_sizes first element should be same as the second");if(i.dims[0]!==y+w+_)throw new Error(\'Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes\');let x=0;if(a){if(w!==_)throw new Error(\'Input "past" expect k_hidden_size == v_hidden_size\');if(a.dims.length!==5)throw new Error(\'Input "past" must have 5 dimensions\');if(a.dims[0]!==2)throw new Error(\'Input "past" first dimension must be 2\');if(a.dims[1]!==m)throw new Error(\'Input "past" second dimension must be batch_size\');if(a.dims[2]!==t.numHeads)throw new Error(\'Input "past" third dimension must be num_heads\');if(a.dims[4]!==w/t.numHeads)throw new Error(\'Input "past" fifth dimension must be k_hidden_size / num_heads\');t.pastPresentShareBuffer||(x=a.dims[3])}let T=v+x,C=-1,S=0;if(u)throw new Error("Mask not supported");if(a)throw new Error("past is not supported");if(p)throw new Error("relativePositionBias is not supported");return{batchSize:m,sequenceLength:h,pastSequenceLength:x,kvSequenceLength:v,totalSequenceLength:T,maxSequenceLength:C,inputHiddenSize:d,hiddenSize:y,vHiddenSize:_,headSize:Math.floor(y/t.numHeads),vHeadSize:Math.floor(_/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:S,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Id=(e,t,r,o)=>{let i=He(o),u=64,a=o/i;a<u?u=1:a/8<64&&(u=Math.ceil(a/8));let p=Math.ceil(o/i/u),h=[{type:st(t.dataType),data:1/o},{type:"uint32",data:a},{type:"uint32",data:p}],d=Ne(t.dataType,i),y=w=>{let _=J("x",t.dataType,t.dims,i),v="thread_max_vector";i===2?v="max(thread_max_vector.x, thread_max_vector.y)":i===4&&(v="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let x=ht(t.dataType),T=[{name:"d_inv",type:x},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`\n  var<workgroup> wgMax: array<f32, ${u}>;\n  var<workgroup> wgSum: array<f32, ${u}>;\n  ${w.registerUniforms(T).declareVariables(_)}\n  ${w.mainStart([u,1,1])}\n    let localOffset = local_idx * uniforms.elements_per_wg;\n    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;\n\n    var thread_max_vector = ${Ze("f32",i,"-3.402823e+38f")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      thread_max_vector = max(${gt(x,i,"x[offset + i]")}, thread_max_vector);\n    }\n    wgMax[local_idx] = ${v};\n    workgroupBarrier();\n\n    var maxValue = -3.402823e+38f;\n    for (var i = 0u; i < ${u}; i++) {\n      maxValue = max(wgMax[i], maxValue);\n    }\n\n    var sumVector = ${Ze("f32",i,"0")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      sumVector += exp(${gt(x,i,"x[offset + i]")} - maxValue);\n    }\n    wgSum[local_idx] = ${ut("sumVector",i)};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${u}; i++) {\n      sum += wgSum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        x[offset + i] = ${Ze(x,i,"uniforms.d_inv")};\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        let f32input = ${gt(x,i,"x[offset + i]")};\n        x[offset + i] = ${_.type.value}(exp(f32input - maxValue) / sum);\n      }\n    }\n  }`};e.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${u};${d};${i}`},getShaderSource:y,getRunData:()=>({outputs:[],dispatchGroup:{x:r},programUniforms:h})},{inputs:[t],outputs:[]})},Td=(e,t,r,o,i,u)=>{let a=[i.batchSize,i.numHeads,i.sequenceLength,i.kvSequenceLength+i.pastSequenceLength],p=u.scale===0?1/Math.sqrt(i.headSize):u.scale,m=He(i.headSize),h=i.headSize/m,d=12,y={x:Math.ceil(i.totalSequenceLength/d),y:Math.ceil(i.sequenceLength/d),z:i.batchSize*i.numHeads},w=st(t.dataType),_=[{type:"uint32",data:i.sequenceLength},{type:"uint32",data:h},{type:"uint32",data:i.totalSequenceLength},{type:"uint32",data:i.kvSequenceLength},{type:w,data:p}],v=[t,r],x=C=>{let S=V("q",t.dataType,t.dims,m),E=V("key",r.dataType,r.dims,m),O=J("output",t.dataType,a),U=Ne(t.dataType),M=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:U}];return`\n  const beta: ${U} = 1.0;\n  const TILE_SIZE = ${d}u;\n\n  var<workgroup> tileQ: array<${S.type.storage}, ${d*d}>;\n  var<workgroup> tileK: array<${S.type.storage}, ${d*d}>;\n  ${C.registerUniforms(M).declareVariables(S,E,O)}\n  ${C.mainStart([d,d,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let lm = m + local_id.y;\n    let ln = n + local_id.x;\n\n    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;\n    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;\n\n    var value = ${Ze(U,m)};\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m + local_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * uniforms.M * uniforms.N;\n    if (lm < uniforms.M && ln < uniforms.N) {\n      let outputIdx = headOffset + lm * uniforms.N + ln;\n      output[outputIdx] = ${ut("value",m)} * uniforms.alpha;\n    }\n  }`},T=e.compute({name:"AttentionProbs",shaderCache:{hint:`${m}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:t.dataType,gpuDataType:0}],dispatchGroup:y,programUniforms:_}),getShaderSource:x},{inputs:v,outputs:[-1]})[0];return Id(e,T,i.batchSize*i.numHeads*i.sequenceLength,i.totalSequenceLength),T},Ed=(e,t,r,o)=>{let i=[o.batchSize,o.sequenceLength,o.vHiddenSize],u=12,a={x:Math.ceil(o.vHeadSize/u),y:Math.ceil(o.sequenceLength/u),z:o.batchSize*o.numHeads},p=[{type:"uint32",data:o.sequenceLength},{type:"uint32",data:o.totalSequenceLength},{type:"uint32",data:o.vHeadSize},{type:"uint32",data:o.numHeads},{type:"uint32",data:o.vHiddenSize}],m=h=>{let d=V("probs",t.dataType,t.dims),y=V("v",r.dataType,r.dims),w=J("output",t.dataType,i),_=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`\n  const TILE_SIZE = ${u}u;\n  var<workgroup> tileQ: array<${d.type.value}, ${u*u}>;\n  var<workgroup> tileK: array<${d.type.value}, ${u*u}>;\n  ${h.registerUniforms(_).declareVariables(d,y,w)}\n  ${h.mainStart([u,u,1])}\n   let headIdx = workgroup_id.z;\n   let m = workgroup_id.y * TILE_SIZE + local_id.y;\n   let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;\n   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;\n\n   var value = ${d.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n     if (m < uniforms.M && w + local_id.x < uniforms.K) {\n       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n     }\n     if (n < uniforms.N && w + local_id.y < uniforms.K) {\n       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];\n     }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;\n   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + currentBatchHeadNumber * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`};return e.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:i,dataType:t.dataType,gpuDataType:0}],dispatchGroup:a,programUniforms:p}),getShaderSource:m},{inputs:[t,r],outputs:[0]})[0]},En=(e,t,r,o,i,u,a,p,m,h,d)=>{let y=Td(e,t,r,m,h,d);Ed(e,y,o,h)},Pd=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],o=t.sequenceLength,i=t.inputHiddenSize,u=t.headSize,a=12,p={x:Math.ceil(t.headSize/a),y:Math.ceil(t.sequenceLength/a),z:t.batchSize*t.numHeads},m=[e.inputs[0],e.inputs[1],e.inputs[2]],h=[{type:"uint32",data:o},{type:"uint32",data:i},{type:"uint32",data:u},{type:"uint32",data:t.numHeads},{type:"uint32",data:t.headSize},{type:"uint32",data:t.hiddenSize},{type:"uint32",data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],d=y=>{let w=J("output_q",m[0].dataType,r),_=J("output_k",m[0].dataType,r),v=J("output_v",m[0].dataType,r),x=V("input",m[0].dataType,m[0].dims),T=V("weight",m[1].dataType,m[1].dims),C=V("bias",m[2].dataType,m[2].dims),S=x.type.storage,E=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`\n  const TILE_SIZE = ${a}u;\n  var<workgroup> tileInput: array<${S}, ${a*a}>;\n  var<workgroup> tileWeightQ: array<${S}, ${a*a}>;\n  var<workgroup> tileWeightK: array<${S}, ${a*a}>;\n  var<workgroup> tileWeightV: array<${S}, ${a*a}>;\n  ${y.registerUniforms(E).declareVariables(x,T,C,w,_,v)}\n  ${y.mainStart([a,a,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = workgroup_id.y * TILE_SIZE + local_id.y;\n    let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${S}(0);\n    var valueK = ${S}(0);\n    var valueV = ${S}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:p,programUniforms:h}),getShaderSource:d},{inputs:m,outputs:[-1,-1,-1]})},Ma=(e,t)=>{let r=Ad(e.inputs,t),[o,i,u]=Pd(e,r);return En(e,o,i,u,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t)}});var Od,kd,Rd,za,Ua=Q(()=>{"use strict";dr();Ce();Ye();_e();Od=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(o,i,u)=>{let a=i.length;if(a!==o.length)throw new Error(`${u}: num dimensions != ${a}`);i.forEach((p,m)=>{if(p!==o[m])throw new Error(`${u}: dim[${m}] do not match`)})};if(e[0].dims.length>1){let o=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,o,"Invalid input scale"),r(e[2].dims,o,"Invalid input B"),r(e[3].dims,o,"Invalid input mean"),r(e[4].dims,o,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},kd=(e,t)=>{let{epsilon:r,spatial:o,format:i}=t,u=e[0].dims,a=o?He(u[u.length-1]):1,p=i==="NHWC"&&u.length>1?a:1,m=W.size(u)/a,h=o,d=h?u.length:u,y=V("x",e[0].dataType,e[0].dims,a),w=V("scale",e[1].dataType,e[1].dims,p),_=V("bias",e[2].dataType,e[2].dims,p),v=V("inputMean",e[3].dataType,e[3].dims,p),x=V("inputVar",e[4].dataType,e[4].dims,p),T=J("y",e[0].dataType,d,a),C=()=>{let E="";if(o)E=`let cOffset = ${u.length===1?"0u":i==="NHWC"?`outputIndices[${u.length-1}] / ${a}`:"outputIndices[1]"};`;else if(i==="NCHW")E=`\n            ${T.indicesSet("outputIndices","0","0")}\n            let cOffset = ${T.indicesToOffset("outputIndices")};`;else{E=`var cIndices = ${w.type.indices}(0);\n                       cIndices[0] = outputIndices[${u.length-1}];`;for(let O=1;O<w.rank;O++)E+=`cIndices[${O}] = outputIndices[${O}];`;E+=`let cOffset = ${w.indicesToOffset("cIndices")};`}return E},S=E=>`\n  const epsilon = ${r};\n  ${E.registerUniform("outputSize","u32").declareVariables(y,w,_,v,x,T)}\n  ${E.mainStart()}\n  ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${T.offsetToIndices(`global_idx * ${a}`)};\n    ${C()}\n    let scale = ${w.getByOffset("cOffset")};\n    let bias = ${_.getByOffset("cOffset")};\n    let inputMean = ${v.getByOffset("cOffset")};\n    let inputVar = ${x.getByOffset("cOffset")};\n    let x = ${y.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${T.setByOffset("global_idx","value")}\n  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${o}_${a}`,inputDependencies:h?["rank","type","type","type","type"]:void 0},getShaderSource:S,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:h?[{type:"uint32",data:m},...G(u)]:[{type:"uint32",data:m}]})}},Rd=e=>xe(e),za=(e,t)=>{let{inputs:r,outputCount:o}=e,i=Rd({...t,outputCount:o});if(lr.webgpu.validateInputContent&&Od(r,i),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(kd(r,i))}});var Bd,Dd,Va,Wa=Q(()=>{"use strict";Ce();_e();Bd=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Dd=e=>{let t=e[0].dims,r=e[0].dims[2],o=W.size(t)/4,i=e[0].dataType,u=V("input",i,t,4),a=V("bias",i,[r],4),p=V("residual",i,t,4),m=J("output",i,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:d=>`\n  const channels = ${r}u / 4;\n  ${d.declareVariables(u,a,p,m)}\n\n  ${d.mainStart()}\n    ${d.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n    let value = ${u.getByOffset("global_idx")}\n      + ${a.getByOffset("global_idx % channels")} + ${p.getByOffset("global_idx")};\n    ${m.setByOffset("global_idx","value")}\n  }`}},Va=e=>{Bd(e.inputs),e.compute(Dd(e.inputs))}});var Md,Te,Na,Ha,Ga,La,Fa,ja,qa,Ka,Ya,zd,Za,Xa,Ja,Qa,Pn,es,On,ts,rs,ns,os,is,as,ss,us,ls,ds,cs,ps,ms,fs,hs,gs,ys,bs,ws,Co=Q(()=>{"use strict";Ve();Ce();Ye();_e();Md=(e,t,r,o,i,u)=>{let a=Math.ceil(t/4),p="";typeof i=="string"?p=`${i}(a)`:p=i("a");let m=V("inputData",r,[a],4),h=J("outputData",o,[a],4);return`\n      ${e.registerUniform("vec_size","u32").declareVariables(m,h)}\n\n  ${u??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${m.getByOffset("global_idx")};\n    ${h.setByOffset("global_idx",p)}\n  }`},Te=(e,t,r,o,i,u=e.dataType)=>({name:t,shaderCache:{hint:i,inputDependencies:["type"]},getShaderSource:a=>Md(a,W.size(e.dims),e.dataType,u,r,o),getRunData:a=>({outputs:[{dims:e.dims,dataType:u}],dispatchGroup:{x:Math.ceil(W.size(a[0].dims)/64/4)},programUniforms:[{type:"uint32",data:Math.ceil(W.size(e.dims)/4)}]})}),Na=e=>{e.compute(Te(e.inputs[0],"Abs","abs"))},Ha=e=>{e.compute(Te(e.inputs[0],"Acos","acos"))},Ga=e=>{e.compute(Te(e.inputs[0],"Acosh","acosh"))},La=e=>{e.compute(Te(e.inputs[0],"Asin","asin"))},Fa=e=>{e.compute(Te(e.inputs[0],"Asinh","asinh"))},ja=e=>{e.compute(Te(e.inputs[0],"Atan","atan"))},qa=e=>{e.compute(Te(e.inputs[0],"Atanh","atanh"))},Ka=e=>xe(e),Ya=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${t.to}`)}e.compute(Te(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},zd=e=>{let t=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:xn,r=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:Cn;return xe({min:t,max:r})},Za=(e,t)=>{let r=e.inputs.length===1?t:zd(e.inputs),o=ht(e.inputs[0].dataType);e.compute(Te(e.inputs[0],"Clip",i=>`clamp(${i}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${o}> = vec4(${o}(${r.min}));\n    const clip_max_: vec4<${o}> = vec4(${o}(${r.max}));\n`,r.cacheKey),{inputs:[0]})},Xa=e=>{e.compute(Te(e.inputs[0],"Ceil","ceil"))},Ja=e=>{e.compute(Te(e.inputs[0],"Cos","cos"))},Qa=e=>{e.compute(Te(e.inputs[0],"Cosh","cosh"))},Pn=e=>xe(e),es=(e,t)=>{let r=ht(e.inputs[0].dataType);e.compute(Te(e.inputs[0],"Elu",o=>`elu_vf32(${o})`,`\n  const elu_alpha_ = ${r}(${t.alpha});\n\n  fn elu_f32(a: ${r}) -> ${r} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},On=(e,t="f32")=>`\nconst r0: ${t} = 0.3275911;\nconst r1: ${t} = 0.254829592;\nconst r2: ${t} = -0.284496736;\nconst r3: ${t} = 1.421413741;\nconst r4: ${t} = -1.453152027;\nconst r5: ${t} = 1.061405429;\n\nfn erf_vf32(v: ${e}) -> ${e} {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,ts=e=>{let t=ht(e.inputs[0].dataType);e.compute(Te(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,On(`vec4<${t}>`,t)))},rs=e=>{e.compute(Te(e.inputs[0],"Exp","exp"))},ns=e=>{e.compute(Te(e.inputs[0],"Floor","floor"))},os=e=>{let t=ht(e.inputs[0].dataType);e.compute(Te(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,On(`vec4<${t}>`,t)))},is=(e,t)=>{let r=ht(e.inputs[0].dataType);e.compute(Te(e.inputs[0],"LeakyRelu",o=>`select(leaky_relu_alpha_ * ${o}, ${o}, ${o} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},as=e=>{e.compute(Te(e.inputs[0],"Not",t=>`!${t}`))},ss=e=>{e.compute(Te(e.inputs[0],"Neg",t=>`-${t}`))},us=e=>{e.compute(Te(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},ls=e=>{let t=ht(e.inputs[0].dataType);e.compute(Te(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},ds=e=>{e.compute(Te(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},cs=e=>xe(e),ps=(e,t)=>{let r=ht(e.inputs[0].dataType);e.compute(Te(e.inputs[0],"HardSigmoid",o=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${o} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},ms=e=>{e.compute(Te(e.inputs[0],"Sin","sin"))},fs=e=>{e.compute(Te(e.inputs[0],"Sinh","sinh"))},hs=e=>{e.compute(Te(e.inputs[0],"Sqrt","sqrt"))},gs=e=>{e.compute(Te(e.inputs[0],"Tan","tan"))},ys=e=>{e.compute(Te(e.inputs[0],"Tanh",t=>`sign(${t}) * (1 - exp(-2 * abs(${t}))) / (1 + exp(-2 * abs(${t})))`))},bs=(e,t)=>{let r=ht(e.inputs[0].dataType);return e.compute(Te(e.inputs[0],"ThresholdedRelu",o=>`select(vec4<${r}>(0.0), ${o}, ${o} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},ws=e=>{e.compute(Te(e.inputs[0],"Log","log"))}});var Vd,Wd,vs,$s=Q(()=>{"use strict";Ce();_e();Co();Vd=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Wd=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=V("input",e[0].dataType,e[0].dims,4),o=V("bias",e[0].dataType,[e[0].dims[2]],4),i=J("output",e[0].dataType,t,4),u=W.size(t)/4,a=Ne(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)}}),getShaderSource:m=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${m.declareVariables(r,o,i)}\n\n  ${On(`vec4<${a}>`,a)}\n\n  ${m.mainStart()}\n    ${m.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${i.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},vs=e=>{Vd(e.inputs),e.compute(Wd(e.inputs))}});var Nd,Hd,Ct,_s,Ss,xs,Cs,As,Is,Ts,Es,Ps,Os,ks=Q(()=>{"use strict";Ve();Ce();_e();Nd=(e,t,r,o,i,u,a,p,m,h,d,y)=>{let w,_;typeof p=="string"?w=_=(S,E)=>`${p}((${S}),(${E}))`:typeof p=="function"?w=_=p:(w=p.scalar,_=p.vector);let v=J("outputData",d,o.length,4),x=V("aData",m,t.length,4),T=V("bData",h,r.length,4),C;if(i)if(u){let S=W.size(t)===1,E=W.size(r)===1,O=t.length>0&&t[t.length-1]%4===0,U=r.length>0&&r[r.length-1]%4===0;S||E?C=v.setByOffset("global_idx",_(S?`${x.type.value}(${x.getByOffset("0")}.x)`:x.getByOffset("global_idx"),E?`${T.type.value}(${T.getByOffset("0")}.x)`:T.getByOffset("global_idx"))):C=`\n            let outputIndices = ${v.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${x.broadcastedIndicesToOffset("outputIndices",v)};\n            let offsetB = ${T.broadcastedIndicesToOffset("outputIndices",v)};\n            ${v.setByOffset("global_idx",_(a||O?x.getByOffset("offsetA / 4u"):`${x.type.value}(${x.getByOffset("offsetA / 4u")}[offsetA % 4u])`,a||U?T.getByOffset("offsetB / 4u"):`${T.type.value}(${T.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else C=v.setByOffset("global_idx",_(x.getByOffset("global_idx"),T.getByOffset("global_idx")));else{if(!u)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let S=(E,O,U="")=>{let M=`aData[indexA${O}][componentA${O}]`,N=`bData[indexB${O}][componentB${O}]`;return`\n            let outputIndices${O} = ${v.offsetToIndices(`global_idx * 4u + ${O}u`)};\n            let offsetA${O} = ${x.broadcastedIndicesToOffset(`outputIndices${O}`,v)};\n            let offsetB${O} = ${T.broadcastedIndicesToOffset(`outputIndices${O}`,v)};\n            let indexA${O} = offsetA${O} / 4u;\n            let indexB${O} = offsetB${O} / 4u;\n            let componentA${O} = offsetA${O} % 4u;\n            let componentB${O} = offsetB${O} % 4u;\n            ${E}[${O}] = ${U}(${w(M,N)});\n          `};d===9?C=`\n            var data = vec4<u32>(0);\n            ${S("data",0,"u32")}\n            ${S("data",1,"u32")}\n            ${S("data",2,"u32")}\n            ${S("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:C=`\n            ${S("outputData[global_idx]",0)}\n            ${S("outputData[global_idx]",1)}\n            ${S("outputData[global_idx]",2)}\n            ${S("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(x,T,v)}\n\n        ${y??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${C}\n      }`},Hd=(e,t,r,o,i,u,a=r.dataType)=>{let p=!W.areEqual(r.dims,o.dims),m=r.dims,h=W.size(r.dims),d=!1,y=!1,w=[p];if(p){let _=vt.calcShape(r.dims,o.dims,!1);if(!_)throw new Error("Can\'t perform binary op on the given tensors");m=_,h=W.size(m);let v=W.size(r.dims)===1,x=W.size(o.dims)===1,T=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,C=o.dims.length>0&&o.dims[o.dims.length-1]%4===0;w.push(v),w.push(x),w.push(T),w.push(C);let S=1;for(let E=1;E<m.length;E++){let O=r.dims[r.dims.length-E]??1,U=o.dims[o.dims.length-E]??1;if(O===U)S*=O;else break}S%4===0?(y=!0,d=!0):(v||x||T||C)&&(d=!0)}else d=!0;return w.push(d),{name:e,shaderCache:{hint:t+w.map(_=>_.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:_=>Nd(_,r.dims,o.dims,m,d,p,y,i,r.dataType,o.dataType,a,u),getRunData:()=>({outputs:[{dims:m,dataType:a}],dispatchGroup:{x:Math.ceil(h/64/4)},programUniforms:[{type:"uint32",data:Math.ceil(W.size(m)/4)},...G(r.dims),...G(o.dims),...G(m)]})}},Ct=(e,t,r,o,i,u)=>{e.compute(Hd(t,i??"",e.inputs[0],e.inputs[1],r,o,u))},_s=e=>{Ct(e,"Add",(t,r)=>`${t}+${r}`)},Ss=e=>{Ct(e,"Div",(t,r)=>`${t}/${r}`)},xs=e=>{Ct(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},Cs=e=>{Ct(e,"Mul",(t,r)=>`${t}*${r}`)},As=e=>{let t=V("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Ct(e,"Pow",{scalar:(o,i)=>`pow_custom(${o},${i})`,vector:(o,i)=>`pow_vector_custom(${o},${i})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},Is=e=>{Ct(e,"Sub",(t,r)=>`${t}-${r}`)},Ts=e=>{Ct(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},Es=e=>{Ct(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},Ps=e=>{Ct(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},Os=e=>{Ct(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}});var Ld,Fd,jd,qd,Rs,Bs,Ds=Q(()=>{"use strict";Ce();Ye();_e();Ld=e=>{if(!e||e.length<1)throw new Error("too few inputs");let t=e[0].dataType,r=e[0].dims.length;for(let o of e){if(o.dataType!==t)throw new Error("input tensors should be one type");if(o.dims.length!==r)throw new Error("input tensors should have the same shape")}},Fd=(e,t)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${t});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,jd=(e,t)=>{let r=e.length,o=[];for(let i=0;i<r;++i){let u=t.setByOffset("global_idx",e[i].getByIndices("indices"));r===1?o.push(u):i===0?o.push(`if (inputIndex == ${i}u) { ${u} }`):i===r-1?o.push(`else { ${u} }`):o.push(`else if (inputIndex == ${i}) { ${u} }`)}return o.join(`\n`)},qd=(e,t)=>{let r=e[0].dims.slice();if(t>=r.length||t<-1*r.length)throw new Error("axis specified for concat doesn\'t match input dimensionality");let o=t<0?r.length+t:t,i=r.slice(0);for(let C=1;C<e.length;C++){let S=e[C].dims.slice();for(let E=0;E<r.length;E++)if(E===o)i[o]+=S[E];else if(r[E]!==S[E])throw new Error("non concat dimensions must match")}let u=W.size(i),a=new Array(e.length),p=new Array(e.length),m=e[0].dataType,h=0,d=[],y=[],w=[{type:"uint32",data:u}];for(let C=0;C<e.length;++C)h+=e[C].dims[o],a[C]=h,y.push(e[C].dims.length),p[C]=V(`input${C}`,m,y[C]),d.push("rank"),w.push({type:"uint32",data:a[C]});for(let C=0;C<e.length;++C)w.push(...G(e[C].dims));w.push(...G(i));let _=J("output",m,i.length),v=_.indicesGet("indices",o),x=Array.from(Array(a.length).keys()).map(C=>`uniforms.sizeInConcatAxis${C}`).join(","),T=C=>`\n\n  ${(()=>{C.registerUniform("outputSize","u32");for(let S=0;S<e.length;S++)C.registerUniform(`sizeInConcatAxis${S}`,"u32");return C.declareVariables(...p,_)})()}\n\n  ${Fd(a.length,x)}\n\n  ${C.mainStart()}\n    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${_.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${v});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${a.length}u>(${x});\n      ${v} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${jd(p,_)}\n  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:w}),getShaderSource:T}},Rs=(e,t)=>{Ld(e.inputs),e.compute(qd(e.inputs,t.axis))},Bs=e=>xe({axis:e.axis})});var At,kn,Ut=Q(()=>{"use strict";Ce();At=(e,t)=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(uniforms.clip_min), ${t}(uniforms.clip_max));`;default:return""}},kn=e=>{let t=e?.activation||"";if(t==="Clip"){let[r,o]=e?.activation_params||[xn,Cn];return{activation:t,clipMax:o,clipMin:r}}return{activation:t}}});var je,Rn,Bn=Q(()=>{"use strict";je=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Rn=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `});var Dn,Ao=Q(()=>{"use strict";Dn=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`});var Kd,Yd,Ur,Ms,Zd,Vr,Xd,Mn,Wr=Q(()=>{"use strict";Ce();_e();Ut();Bn();Kd=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,Yd=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,Ur=(e,t,r="f32",o,i=!1,u=32,a=!1,p=32)=>{let m=t[1]*e[1],h=t[0]*e[0],d=i?m:u,y=i?u:m,w=d/t[0],_=u/t[1];if(!((i&&w===4&&e[1]===4||!i&&(w===3||w===4))&&d%t[0]===0&&u%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${i} is true, innerElementSize ${w} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${w} must be 3 or 4.\n  tileAWidth ${d} must be divisible by workgroupSize[0]${t[0]}. tileInner ${u} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${w}<${r}>, ${d/w}>, ${y}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${r}>, ${h/e[0]}>, ${u}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${w};\nconst tileInner = ${u};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${a?"0":"i32(globalId.z)"};\n  ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${m};\n\n  let num_tiles = ${a?`${Math.ceil(p/u)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n  var kStart = ${a?`i32(globalId.z) * ${p}`:"0"};\n\n  var acc: array<vec4<${r}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${_};\n  for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${Kd(i,o)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${o?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${w===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${Yd(i,w)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},Ms=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,Zd=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Vr=(e,t,r="f32",o,i=!1,u=32,a=!1,p=32,m=!1)=>{let h=e[1]*t[1],d=e[0]*t[0],y=i?h:u,w=i?u:h;if(!(w%t[1]===0&&y%t[0]===0&&u%t[1]===0))throw new Error(`tileAHight ${w} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${y} must be divisible by workgroupSize[0]${t[0]}, tileInner ${u} must be divisible by workgroupSize[1]${t[1]}`);let _=w/t[1],v=y/t[0],x=u/t[1],T=m?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${h};\n    let globalColStart = i32(workgroupId.x) * ${d};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${w}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${y}; inputCol = inputCol + ${t[0]}) {\n          ${Ms(i,o)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${u}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${o?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${r}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${h};\n\nlet tileRowA = i32(localId.y) * ${_};\nlet tileColA = i32(localId.x) * ${v};\nlet tileRowB = i32(localId.y) * ${x};\n// Loop over shared dimension.\nfor (var t = 0; t < num_tiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${v}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${Ms(i,o)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${x}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${o?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${r}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${Zd(i)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${r}, ${y}>, ${w}>;\n  var<workgroup> mm_Bsub : array<array<${r}, ${d}>, ${u}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${u};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${a?"0":"i32(globalId.z)"};\n    ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n    let num_tiles = ${a?`${Math.ceil(p/u)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n    var kStart = ${a?`i32(globalId.z) * ${p}`:"0"};\n\n    var acc : array<array<${r}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${T}\n  }\n`},Xd=(e,t,r,o,i,u=!1)=>{let[a,p,m]=i,[h,d,y,w]=o,_=cr(a,m),v=cr(p,m),x=Ne(o[0].type.tensor),T=()=>{let E=d.rank,O=h.rank,U=`var aIndices: ${d.type.indices};`;for(let M=E-2-1,N=O-1;M>=0;M--,N--)U+=`\naIndices[${M}] = ${O>1?`batchIndices[${N}]`:"batchIndices"};`;return _.forEach(M=>{U+=`\naIndices[${M}] = 0;`}),U+=`\naIndices[${E-2}] = u32(row);\n                   aIndices[${E-1}] = u32(colIn);`,U},C=()=>{let E=y.rank,O=h.rank,U=`var bIndices: ${y.type.indices};`;for(let M=E-2-1,N=O-1;M>=0;M--,N--)U+=`\nbIndices[${M}] = ${O>1?`batchIndices[${N}]`:"batchIndices"};`;return v.forEach(M=>{U+=`\nbIndices[${M}] = 0;`}),U+=`\nbIndices[${E-2}] = u32(row);\n                   bIndices[${E-1}] = u32(colIn);`,U};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${je(e,x)} {\n      var value = ${je(e,x)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\n      {\n        ${T()}\n        value = ${d.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${je(e,x)} {\n      var value = ${je(e,x)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\n      {\n        ${C()}\n        value = ${y.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${je(e,x)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${u?"bias[colIn]":`${je(e,x)}(bias[row])`};`:""}\n        ${r}\n        ${w.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},Mn=(e,t,r,o,i=!1)=>{let u=e[0].dims,a=e[1].dims,p=u.slice(0,-2),m=a.slice(0,-2),h=o?o.slice(0,-2):r.slice(0,-2),d=W.size(h),y=u[u.length-2],w=u[u.length-1],_=a[a.length-1],v=w%4===0&&_%4===0,x=y<=8?[4,1,1]:[4,4,1],T=[8,8,1],C=[Math.ceil(_/T[0]/x[0]),Math.ceil(y/T[1]/x[1]),Math.ceil(d/T[2]/x[2])],S=v?4:1,E=[...p,y,w/S],O=E.length,U=[...m,w,_/S],M=U.length,N=[d,y,_/S],Y=[{type:"int32",data:y},{type:"int32",data:_},{type:"int32",data:w}];t.activation==="Clip"&&Y.push({type:"float32",data:t.clipMax},{type:"float32",data:t.clipMin}),Y.push(...G(h),...G(E),...G(U));let se=["rank","rank"],B=e.length>2;B&&(Y.push(...G(e[2].dims)),se.push("rank")),Y.push(...G(N));let te=Pe=>{let Ee=h.length,ee=An("batchDims",e[0].dataType,Ee,1),be=Ne(e[0].dataType),Me=V("a",e[0].dataType,O,S),pe=V("b",e[1].dataType,M,S),ye=J("result",e[0].dataType,N.length,S),de=[Me,pe];if(B){let Ge=i?S:1;de.push(V("bias",e[2].dataType,e[2].dims.length,Ge))}let we=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];t.activation==="Clip"&&we.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"});let ze=At(t,ye.type.value),Re=Xd(S,B,ze,[ee,Me,pe,ye],[p,m,h],i);return`\n  ${Pe.registerUniforms(we).registerInternalVariables(ee).declareVariables(...de,ye)}\n  ${Re}\n  ${v?Ur(x,T,be,ee):Vr(x,T,be,ee)}\n                   `};return{name:"MatMul",shaderCache:{hint:`${x};${t.activation};${v};${i}`,inputDependencies:se},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:C[0],y:C[1],z:C[2]},programUniforms:Y}),getShaderSource:te}}});var Jd,zs,Us=Q(()=>{"use strict";zt();_e();Ut();Bn();Ao();Wr();Jd=(e,t,r,o,i=!1,u,a=4,p=4,m=4,h="f32")=>{let d=B=>{switch(B){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${h}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${B} is not supported.`)}},y=B=>{switch(B){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${B} is not supported.`)}},w=e?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,_=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,v=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",x=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",T=e?"row":"col",C=e?"col":"row",S=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${T} / outWidth;\n    let outCol = ${T} % outWidth;\n\n    let WRow = ${C} / (i32(uniforms.w_shape[1]) * inChannels);\n    let WCol = ${C} / inChannels % i32(uniforms.w_shape[1]);\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n    let xCh = ${C} % inChannels;\n    var resData = ${je(a,h)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the \'same\' padding type.\n    if (xRow >= 0 && xRow < ${v} && xCol >= 0 && xCol < ${x}) {\n      ${w}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${d(a)}\n    }\n    return resData;`,E=e?t&&o?`\n    let col = colIn * ${a};\n    ${S}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n      ${S}\n    }\n    return ${je(a,h)}(0.0);`:o&&r?`\n    let col = colIn * ${a};\n    ${S}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${S}\n    }\n    return ${je(a,h)}(0.0);`,O=`${y(p)}`,U=je(m,h),M=e?je(a,h):je(p,h),N=e?je(p,h):je(a,h),Y=At(u,U);return`\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${M} {\n      ${e?E:O}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${N} {\n      ${e?O:E}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${U}) {\n      let col = colIn * ${m};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${_}\n      ${Rn(i)}\n      ${Y}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},zs=(e,t,r,o,i,u,a,p)=>{let m=t.format==="NHWC",h=m?e[0].dims[3]:e[0].dims[1],d=r[0],y=m?r[2]:r[3],w=m?r[1]:r[2],_=m?r[3]:r[1],v=m&&(h%4===0||h%3===0)&&_%4===0,x=m?_:y*w,T=m?y*w:_,C=[8,8,1],S=o<=8?[4,1,1]:[4,4,1],E=[Math.ceil(x/C[0]/S[0]),Math.ceil(T/C[1]/S[1]),Math.ceil(d/C[2]/S[2])];De("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${E}`);let O=v?m&&h%4!==0?3:4:1,U=C[1]*S[1],M=C[0]*S[0],N=Math.max(C[0]*O,C[1]),Y=o%U===0,se=i%M===0,B=u%N===0,te=v?[O,4,4]:[1,1,1],Pe=[{type:"int32",data:o},{type:"int32",data:i},{type:"int32",data:u},{type:"int32",data:[t.pads[0],t.pads[1]]},{type:"int32",data:t.strides},{type:"int32",data:t.dilations}];t.activation==="Clip"&&Pe.push({type:"float32",data:t.clipMax},{type:"float32",data:t.clipMin}),Pe.push(...G(e[0].dims),...G(e[1].dims));let Ee=["rank","rank"];a&&(Pe.push(...G(e[2].dims)),Ee.push("rank")),Pe.push(...G(r));let ee=be=>{let Me=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];t.activation==="Clip"&&Me.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"});let pe=v?4:1,ye=Ne(e[0].dataType),de=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${v?`vec4<${ye}>`:ye}) {\n        result[flatIndex] = ${v?`vec4<${ye}>`:ye}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${v?`vec4<${ye}>`:ye}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${v?"/ 4":""}, value);\n      }`,we=V("x",e[0].dataType,e[0].dims.length,O===3?1:O),ze=V("w",e[1].dataType,e[1].dims.length,pe),Re=[we,ze],Ge=J("result",e[0].dataType,r.length,pe);if(a){let F=V("bias",e[2].dataType,e[2].dims.length,pe);Re.push(F),de+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${v?`vec4<${ye}>`:ye} {\n          return bias[coords.${m?"w":"y"}${v?"/ 4":""}];\n        }`}return`\n        ${Dn("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${be.registerUniforms(Me).declareVariables(...Re,Ge)}\n        ${de}\n        ${Jd(m,Y,se,B,a,t,te[0],te[1],te[2],ye)}\n        ${v?Ur(S,C,ye,void 0,!m,N):Vr(S,C,ye,void 0,!m,N,!1,void 0,p)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${O};${v};${Y};${se};${B};${U};${M};${N}`,inputDependencies:Ee},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:Pe}),getShaderSource:ee}}});var Io,Vs=Q(()=>{"use strict";Ce();_e();Eo();Ut();Io=(e,t,r)=>{let o=e.length>2,i=o?"value += b[output_channel];":"",u=e[0].dims,a=e[1].dims,p=a[0]/t.group,m=t.format==="NHWC",h=To(u,a,t.dilations,t.pads,t.strides,m),d=W.size(h),y=[{type:"uint32",data:d},{type:"uint32",data:t.dilations},{type:"uint32",data:[t.strides[0],t.strides[1]]},{type:"uint32",data:[t.pads[0],t.pads[1]]},{type:"uint32",data:p}];t.activation==="Clip"&&y.push({type:"float32",data:t.clipMax},{type:"float32",data:t.clipMin}),y.push(...G(u),...G(a),...G(h));let w=["rank","rank"];o&&(y.push(...G(e[2].dims)),w.push("rank")),y.push(...G(h));let _=v=>{let x=J("output",e[0].dataType,h.length),T=At(t,x.type.value),C=V("x",e[0].dataType,u.length),S=V("w",e[1].dataType,a.length),E=[C,S];o&&E.push(V("b",e[2].dataType,e[2].dims));let O=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return t.activation==="Clip"&&O.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}),`\n  ${v.registerUniforms(O).declareVariables(...E,x)}\n\n  ${v.mainStart()}\n    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let outputIndices = ${x.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${m?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${m?1:2}], outputIndices[${m?2:3}]) * uniforms.strides - uniforms.pads;\n    let group_id: u32 = output_channel / uniforms.output_channels_per_group;\n\n    var value: ${x.type.value} = ${x.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\n      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[${m?1:2}]) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[${m?2:3}]) {\n            continue;\n          }\n\n          let xVal = ${m?C.get("batch","xHeight","xWidth","input_channel"):C.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${S.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${i}\n    ${T}\n    ${x.setByOffset("global_idx","value")}\n  }`};return{name:"GroupedConv",shaderCache:{hint:t.cacheKey,inputDependencies:w},getRunData:()=>({outputs:[{dims:r?r(h):h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:y}),getShaderSource:_}}});var Po,Qd,Ws,Oo=Q(()=>{"use strict";Ce();Wr();_e();Ut();Po=(e,t,r,o,i=!1)=>{let u=e[0].dims,a=e[1].dims,p=u[u.length-2],m=a[a.length-1],h=u[u.length-1],d=He(m),y=He(h),w=He(p),_=W.size(r)/d/w,v=e.length>2,x=o?o.slice(0,-2):r.slice(0,-2),C=[W.size(x),p,m],S=[{type:"uint32",data:_},{type:"uint32",data:p},{type:"uint32",data:m},{type:"uint32",data:h}];t.activation==="Clip"&&S.push({type:"float32",data:t.clipMax},{type:"float32",data:t.clipMin}),S.push(...G(x),...G(u),...G(a)),v&&S.push(...G(e[2].dims)),S.push(...G(C));let E=O=>{let U=An("batch_dims",e[0].dataType,x.length),M=V("a",e[0].dataType,u.length,y),N=V("b",e[1].dataType,a.length,d),Y=J("output",e[0].dataType,C.length,d),se=At(t,Y.type.value),B=[M,N],te="";if(v){let de=i?d:1;B.push(V("bias",e[2].dataType,e[2].dims.length,de)),te=`${i?`value += bias[col / ${de}];`:`value += ${Y.type.value}(bias[row + i]);`}`}let Pe=u.slice(0,-2),Ee=a.slice(0,-2),ee=cr(Pe,x),be=cr(Ee,x),Me=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];t.activation==="Clip"&&Me.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"});let pe=(de,we)=>{let ze=de.rank,Re=de.name;if(ze===2)return`var ${Re}_indices = ${de.type.indices}(0u, 0u);`;let Ge=U.rank,F=`var ${Re}_indices: ${de.type.indices};`;for(let ie=ze-2-1,he=Ge-1;ie>=0;ie--,he--)F+=`\n${Re}_indices[${ie}] = ${Ge>1?`batch_indices[${he}]`:"batch_indices"};`;return we.forEach(ie=>{F+=`\n${Re}_indices[${ie}] = 0;`}),F+=`${Re}_indices[${ze-2}] = 0u;\n                     ${Re}_indices[${ze-1}] = 0u;`,F},ye=()=>{let de=`var a_data: ${M.type.value};`;for(let we=0;we<y;we++)de+=`\n              let b_data${we} = b[(b_offset + (k + ${we}) * uniforms.N + col) / ${d}];`;for(let we=0;we<w;we++){de+=`a_data = a[(a_offset + (row + ${we}) * uniforms.K + k) / ${y}];`;for(let ze=0;ze<y;ze++)de+=`\n            values[${we}] = fma(${N.type.value}(a_data${y===1?"":`[${ze}]`}), b_data${ze}, values[${we}]);\n`}return de};return`\n  ${O.registerUniforms(Me).registerInternalVariables(U).declareVariables(...B,Y)}\n  ${O.mainStart()}\n    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let col = (global_idx % (uniforms.N / ${d})) * ${d};\n    var index1 = global_idx / (uniforms.N / ${d});\n    let stride1 = uniforms.M / ${w};\n    let row = (index1 % stride1) * ${w};\n    let batch = index1 / stride1;\n\n    ${r.length===2?"":`let batch_indices = ${U.offsetToIndices("batch")};`}\n    ${pe(M,ee)}\n    let a_offset = ${M.indicesToOffset("a_indices")};\n    ${pe(N,be)}\n    let b_offset = ${N.indicesToOffset("b_indices")};\n    var values: array<${Y.type.value}, ${w}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${y}) {\n      ${ye()}\n    }\n    for (var i = 0u; i < ${w}u; i++) {\n      var value = values[i];\n      ${te}\n      ${se}\n      let cur_indices = ${Y.type.indices}(batch, row + i, col);\n      let offset = ${Y.indicesToOffset("cur_indices")};\n      ${Y.setByOffset(`offset / ${d}`,"value")};\n    }\n  }\n  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${d};${y};${w};${i}`,inputDependencies:v?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:S}),getShaderSource:E}},Qd=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Ws=e=>{Qd(e.inputs);let t=vt.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can\'t use matmul on the given tensors");let r=t[t.length-1],o=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&o<8?e.compute(Po(e.inputs,{activation:""},t)):e.compute(Mn(e.inputs,{activation:""},t))}});var To,Ns,ec,Hs,ko,tc,rc,Ro,Eo=Q(()=>{"use strict";Ce();Us();Wr();Vs();Ut();Oo();pr();To=(e,t,r,o,i,u)=>{let a=e[0],p=e.slice(u?1:2,u?3:4),m=p.length,h=t[0],y=t.slice(2).map((v,x)=>v+(v-1)*(r[x]-1)),_=p.map((v,x)=>v+o[x]+o[x+m]).map((v,x)=>Math.floor((v-y[x]+i[x])/i[x]));return _.splice(0,0,a),_.splice(u?3:1,0,h),_},Ns=[2,3,1,0],ec=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[1]*t.group;if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let i=e[0].dims.length-2;if(t.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(t.strides.length!==i)throw new Error(`strides should be ${i}D`);if(t.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},Hs=(e,t)=>{let r=e.kernelShape.slice();for(let u=2;u<t[1].dims.length;++u)r[u-2]===0&&(r[u-2]=t[1].dims[u]);let o=e.pads.slice();Xt.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,o,e.format==="NHWC",e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:r,pads:o}),i},ko=e=>{let t=kn(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],i=e.dilations,u=e.group,a=e.kernel_shape,p=e.pads,m=e.strides,h=e.w_is_const();return{autoPad:o,format:r,dilations:i,group:u,kernelShape:a,pads:p,strides:m,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},tc=(e,t,r)=>{let o=Hs(r,t),i=r.format==="NHWC";if(r.group!==1){e.compute(Io(t,o));return}let u=t.length===3,a=t[0].dims[i?1:2],p=t[0].dims[i?2:3],m=t[0].dims[i?3:1],h=t[1].dims[2],d=t[1].dims[3],y=To(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,i),w=y[i?1:2],_=y[i?2:3],v=y[i?3:1],x=i&&h===a&&d===p&&r.pads[0]===0&&r.pads[1]===0;if(x||h===1&&d===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let M=y[0],N,Y,se,B=[];if(i){let Ee=e.kernelCustomData.wT??e.compute(yt(t[1],Ns),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Ee),x){let ee=a*p*m;N=t[0].reshape([1,M,ee]),Y=Ee.reshape([1,ee,v]),se=[1,M,v]}else N=t[0].reshape([M,a*p,m]),Y=Ee.reshape([1,m,v]),se=[M,w*_,v];B.push(N),B.push(Y)}else N=t[0].reshape([M,m,a*p]),Y=t[1].reshape([1,v,m]),se=[M,v,w*_],B.push(Y),B.push(N);u&&B.push(t[2]);let te=se[2],Pe=B[0].dims[B[0].dims.length-1];te<8&&Pe<8?e.compute(Po(B,o,y,se,i),{inputs:B}):e.compute(Mn(B,o,y,se,i),{inputs:B});return}let T=!0,C=e.kernelCustomData.wT??e.compute(yt(t[1],Ns),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=C);let S=[t[0],C];u&&S.push(t[2]);let E=i?w*_:v,O=i?v:w*_,U=h*d*m;e.compute(zs(S,o,y,E,O,U,u,T),{inputs:S})},rc=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let i=[0,t.pads[0],0,t.pads[1]],u=[1].concat(t.strides),a=[1].concat(t.dilations),p=[1].concat(t.kernelShape),m=Hs({...t,pads:i,strides:u,dilations:a,kernelShape:p},o);e.compute(Io(o,m,h=>r?[h[0],h[2],h[3]]:[]))},Ro=(e,t)=>{ec(e.inputs,t),e.inputs[0].dims.length===3?rc(e,t):tc(e,e.inputs,t)}});var nc,Gs,Ls=Q(()=>{"use strict";zt();_e();Ut();Bn();Ao();Wr();nc=(e,t=!1,r,o=4)=>{let i=je(o,"f32"),u=C=>{switch(C){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return vec4<f32>(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${C} is not supported.`)}},a=e?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,p=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,m=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",h=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",d=e?"row":"col",y=e?"col":"row",w=`\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      let outRow = ${d} / outWidth;\n      let outCol = ${d} % outWidth;\n\n      let WRow = ${y} / (uniforms.filter_dims[1] * inChannels);\n      let WCol = ${y} / inChannels % uniforms.filter_dims[1];\n      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(${m}) || fract(xR) > 0.0) {\n        return ${i}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${h}) || fract(xC) > 0.0) {\n        return ${i}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${y} % inChannels;\n      ${a}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${o}];`,_=e?`\n      let col = colIn * ${o};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n        ${w}\n      }\n      return ${i}(0.0);`:`\n      let col = colIn * ${o};\n      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n        ${w}\n      }\n      return ${i}(0.0);`,v=`\n      let col = colIn * ${o};\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);\n      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];\n      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${u(o)}\n      }\n      return ${i}(0.0);\n      `,x=At(r,i);return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${i} {\n    ${e?_:v}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${i} {\n    ${e?v:_}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${i}) {\n    let col = colIn * ${o};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n      var value = valueInput;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${p}\n      ${Rn(t)}\n      ${x}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${o}] = value;\n    }\n  }`},Gs=(e,t,r,o,i,u,a,p)=>{let m=t.format==="NHWC",h=m?e[0].dims[3]:e[0].dims[1],d=r[0],y=m?r[2]:r[3],w=m?r[1]:r[2],_=m?r[3]:r[1],v=m?h%4===0&&_%4===0:y%4===0&&_%4===0,x=m?_:y*w,T=m?y*w:_,C=v?[8,8,1]:[x<=4||T<=4?4:16,x>4&&T<=4?4:16,1],S=v?[4,4,1]:[x<=4?1:4,x>4&&T<=4?1:4,1],E=[Math.ceil(x/C[0]/S[0]),Math.ceil(T/C[1]/S[1]),Math.ceil(d/C[2]/S[2])];De("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${E}`);let O=v?4:1,U=Math.max(C[0]*O,C[1]),M=v?4:1,N=[t.kernelShape[m?1:2],t.kernelShape[m?2:3]],Y=[N[0]+(t.dilations[0]<=1?0:(N[0]-1)*(t.dilations[0]-1)),N[1]+(t.dilations[1]<=1?0:(N[1]-1)*(t.dilations[1]-1))],se=[Y[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),Y[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],B=[{type:"int32",data:o},{type:"int32",data:i},{type:"int32",data:u},{type:"int32",data:t.strides},{type:"int32",data:t.dilations},{type:"int32",data:N},{type:"int32",data:se}];t.activation==="Clip"&&B.push({type:"float32",data:t.clipMax},{type:"float32",data:t.clipMin}),B.push(...G(e[0].dims),...G(e[1].dims));let te=["rank","rank"];a&&(B.push(...G(e[2].dims)),te.push("rank")),B.push(...G(r));let Pe=Ee=>{let ee=V("x",e[0].dataType,e[0].dims.length,M),be=V("w",e[1].dataType,e[1].dims.length,1),Me=J("result",e[0].dataType,r.length,M),pe=[ee,be],ye="";if(a){let we=V("bias",e[2].dataType,e[2].dims.length,M);pe.push(we),ye+=`\n          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${v?"vec4<f32>":"f32"} {\n            return bias[coords.${m?"w":"y"}${v?"/ 4":""}];\n          }`}let de=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:N.length},{name:"pads",type:"i32",length:se.length}];return t.activation==="Clip"&&de.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}),`\n        ${Dn("uniforms.result_strides")}\n        ${Ee.registerUniforms(de).declareVariables(...pe,Me)};\n        ${ye}\n        ${nc(m,a,t,O)}\n        ${v?Ur(S,C,"f32",void 0,!m,U):Vr(S,C,"f32",void 0,!m,U,!1,void 0,p)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${S};${C};${v}`,inputDependencies:te},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:B}),getShaderSource:Pe}}});var oc,Bo,Fs=Q(()=>{"use strict";zt();Ce();_e();oc=(e,t,r,o,i,u=!1,a,p,m=!1)=>{let h=m?1:2,d=m?2:3,y=m?3:1,w=u?2:1,_=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${u?`vec4<${a}>`:a}) {\n    result[flatIndex] = ${u?`vec4<${a}>`:a}(value);\n  }`;o&&(_+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${u?`vec4<${a}>`:a} {\n      return bias[coords.${m?"w":"y"}${u?"/ 4":""}];\n    }`);let v=u?4:1,x=V("W",t[1].dataType,t[1].dims.length,v),T=V("Dy",t[0].dataType,t[0].dims.length,v),C=[T,x];o&&C.push(V("bias",t[2].dataType,[r[y]].length,v));let S=J("result",t[0].dataType,r.length,v),E=`{\n        let batch: u32 = ${i?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];\n        let r = ${i?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];\n        let c = ${i?"global_id.y":"workgroup_id.y"} * ${w};\n        let d1: u32 = ${i?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${a}>, ${w}>;\n        for (var i = 0; i < ${w}; i++) {\n          dotProd[i] = vec4<${a}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {\n          var dyR = (${a}(dyCorner.x) + ${a}(wR)) / ${a}(uniforms.strides.x);\n          let wRPerm = uniforms.filter_dims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {\n            let dyC = (${a}(dyCorner.y) + ${a}(wC)) / ${a}(uniforms.strides.y);\n            let dyC2 = (${a}(dyCorner.y) + 1.0 + ${a}(wC)) / ${a}(uniforms.strides.y);\n            let wCPerm = uniforms.filter_dims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${a}(uniforms.Dy_shape[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${T.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${T.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${a}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = uniforms.Dy_shape[${y}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${T.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${T.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${w}; i = i + 1) {\n          let value = dotProd[i] + ${o?"bias[c+i]":`vec4<${a}>(0.0)`};\n          ${S.set("batch","r","c + i","d1","value")};\n        }\n      }`,O=`\n          let outputIndices = ${S.offsetToIndices("global_idx")};\n          let batch = ${S.indicesGet("outputIndices",0)};\n          let d1 = ${S.indicesGet("outputIndices",y)};\n          let r = ${S.indicesGet("outputIndices",h)};\n          let c = ${S.indicesGet("outputIndices",d)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / uniforms.output_channels_per_group;\n          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = ${a}(0.0);\n          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\n            if (wR % uniforms.dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${a}(dyRCorner) + ${a}(wR)) / ${a}(uniforms.strides[0]);\n            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\n            if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[${h}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\n              if (wC % uniforms.dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${a}(dyCCorner) + ${a}(wC)) / ${a}(uniforms.strides.y);\n              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\n              if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[${d}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * uniforms.input_channels_per_group;\n              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {\n                let xValue = ${m?T.get("batch","idyR","idyC","inputChannel"):T.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${x.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${o?"bias[d1]":`${a}(0.0)`};\n          ${S.setByOffset("global_idx","value")};\n        `;return`\n  ${e.registerUniforms(p).declareVariables(...C,S)}\n  ${_}\n\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};\n  ${u?E:O}}`},Bo=(e,t,r)=>{let o=e.length>2,i=t.outputShape,u=W.size(i),a=[Math.ceil(u/64),1,1];De("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${a}`);let p=t.format==="NHWC",m=["rank","rank"],h=[t.strides[0],t.strides[1]],d=[t.kernelShape[p?1:2],t.kernelShape[p?2:3]],y=[t.dilations[0],t.dilations[1]],w=[d[0]+(t.dilations[0]<=1?0:(t.kernelShape[p?1:2]-1)*(t.dilations[0]-1)),d[1]+(t.dilations[1]<=1?0:(t.kernelShape[p?2:3]-1)*(t.dilations[1]-1))],_=[w[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),w[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],v=!1,x=t.group,T=e[1].dims,C=T[0]/x,S=T[1],E=[{type:"int32",data:u},{type:"uint32",data:h},{type:"uint32",data:d},{type:"uint32",data:y},{type:"uint32",data:w},{type:"int32",data:_},{type:"uint32",data:C},{type:"uint32",data:S},...G(e[0].dims),...G(e[1].dims)];o&&(E.push(...G(e[2].dims)),m.push("rank")),E.push(...G(i));let O=a[1]===1&&a[2]===1,U=M=>{let N=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:h.length},{name:"filter_dims",type:"u32",length:d.length},{name:"dilations",type:"u32",length:d.length},{name:"effective_filter_dims",type:"u32",length:w.length},{name:"pads",type:"i32",length:_.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],Y=Ne(e[0].dataType);return`${oc(M,e,i,o,O,v,Y,N,p)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:m},getRunData:()=>({dispatchGroup:{x:a[0],y:a[1],z:a[2]},outputs:[{dims:r?r(i):i,dataType:e[0].dataType}],programUniforms:E}),getShaderSource:U}}});var ic,ac,sc,js,qs,uc,lc,dc,cc,Ks,Ys=Q(()=>{"use strict";Ls();Fs();Ut();pr();ic=(e,t,r,o,i,u)=>(e-1)*t+r+(o-1)*i+1-u,ac=(e,t,r,o,i)=>{let u=Math.floor(e/2);t==="SAME_UPPER"?(r[o]=u,r[i]=e-u):t==="SAME_LOWER"&&(r[o]=e-u,r[i]=u)},sc=(e,t,r,o,i,u,a,p,m,h)=>{let d=e.length-2,y=h.length===0;if(m.length===0)for(let v=0;v<d;++v)m.push(0);let w=e[0],_=t[p?3:1]*i;for(let v=0,x=e.length-d-(p?1:0);v<d;++v,++x){let T=e[x],C=y?T*a[v]:h[v],S=ic(T,a[v],u[v],t[x],r[v],C);ac(S,o,u,v,v+d),y&&h.push(a[v]*(T-1)+m[v]+(t[x]-1)*r[v]+1-u[v]-u[v+d])}h.splice(0,0,w),h.splice(p?3:1,0,_)},js=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((y,w)=>y*w,1)===0){r.length=0;for(let y=2;y<t[1].dims.length;++y)r.push(t[1].dims[y])}let o=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(o?3:1,0,t[1].dims[1]);let i=e.pads.slice(),u=e.outputShape.slice(),a=e.outputPadding.slice(),p=t[0].dims,m=e.dilations.slice();if(m.reduce((y,w)=>y+w,0)===0){let y=t[0].dims.length-2;m=new Array(y).fill(1)}let h=e.strides.slice();if(h.reduce((y,w)=>y+w,0)===0){let y=t[0].dims.length-2;h=new Array(y).fill(1)}sc(p,r,m,e.autoPad,e.group,i,h,o,a,u);let d=Object.assign({},e);return Object.assign(d,{kernelShape:r,pads:i,outputPadding:a,outputShape:u,dilations:m,strides:h}),d},qs=e=>{let t=kn(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],i=e.dilations,u=e.group,a=e.kernelShape,p=e.pads,m=e.strides,h=e.wIsConst(),d=e.outputPadding,y=e.outputShape;return{autoPad:o,format:r,dilations:i,group:u,kernelShape:a,outputPadding:d,outputShape:y,pads:p,strides:m,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},uc=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[0];if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let i=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==i))throw new Error("invalid bias");let u=e[0].dims.length-2;if(t.dilations.reduce((d,y)=>d+y,0)>0&&t.dilations.length!==u)throw new Error(`dilations should be ${u}D`);if(t.strides.reduce((d,y)=>d+y,0)>0&&t.strides.length!==u)throw new Error(`strides should be ${u}D`);if(t.pads.reduce((d,y)=>d+y,0)>0&&t.pads.length!==u*2)throw new Error(`pads should be ${u*2}D`);if(t.outputPadding.length!==u&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${u}D`);if(t.kernelShape.reduce((d,y)=>d+y,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},lc=[2,3,1,0],dc=(e,t,r)=>{let o=js(r,t),i=r.format==="NHWC",u=o.outputShape,a=u[i?3:1],p=t[0].dims[i?3:1];if(o.group!==1||a===1&&p===1){e.compute(Bo(t,o));return}let m=u[i?1:2],h=u[i?2:3],d=t[1].dims[2],y=t[1].dims[3],w=i?m*h:a,_=i?a:m*h,v=d*y*p,x=!0,T=e.kernelCustomData.wT??e.compute(yt(t[1],lc),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=T);let C=[t[0],T],S=t.length===3;S&&(!i&&t[2].dims.length===1?C.push(t[2].reshape([t[2].dims[0],1,1])):C.push(t[2])),e.compute(Gs(C,o,u,w,_,v,S,x),{inputs:C})},cc=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];o.length===3&&o.push(e.inputs[2]);let i=t.kernelShape;(i.length===0||i[0]===0)&&(i=[e.inputs[1].dims[2]]);let u=t.dilations;(u.length===0||u[0]===0)&&(u=[1]);let a=t.strides;(a.length===0||a[0]===0)&&(a=[1]);let p=t.pads;p.length===0&&(p=[0,0]),p=[0,p[0],0,p[1]],a=[1].concat(a),u=[1].concat(u),i=[1].concat(i);let m=js({...t,pads:p,strides:a,dilations:u,kernelShape:i},o);e.compute(Bo(o,m,h=>r?[h[0],h[2],h[3]]:[h[0],h[1],h[3]]))},Ks=(e,t)=>{uc(e.inputs,t),e.inputs[0].dims.length===3?cc(e,t):dc(e,e.inputs,t)}});var pc,Zs,Xs,Js=Q(()=>{"use strict";Ve();Ce();Ye();_e();pc=(e,t,r,o)=>{let i=W.size(t),u=t.length,a=V("input",e,u),p=J("output",e,u),m=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),h=W.normalizeAxis(m,u),d=y=>{let w=` i32(${a.indicesGet("inputIndices","uniforms.axis")}) `,_=ce("uniforms.input_shape","uniforms.axis",u),v=o.reverse?w+(o.exclusive?" + 1":""):"0",x=o.reverse?_:w+(o.exclusive?"":" + 1");return`\n                ${y.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(a,p)}\n                ${y.mainStart()}\n                  ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${p.offsetToIndices("global_idx")};\n                  var sum = ${p.type.value}(0);\n                  let first : i32 = ${v};\n                  let last : i32 = ${x};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${a.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${a.getByIndices("inputIndices")};\n                  }\n                  ${p.setByOffset("global_idx","sum")};\n                }`};return{name:"CumSum",shaderCache:{hint:o.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:"uint32",data:i},{type:"int32",data:h},...G(t),...G(t)]}),getShaderSource:d}},Zs=(e,t)=>{let r=e.inputs[0].dims,o=e.inputs[0].dataType,i=e.inputs[1];e.compute(pc(o,r,i,t),{inputs:[0]})},Xs=e=>{let t=e.exclusive===1,r=e.reverse===1;return xe({exclusive:t,reverse:r})}});var Do,zn,Qs,mc,fc,Mo,zo,eu,hc,tu,ru,nu=Q(()=>{"use strict";Ce();Ye();_e();Do="[a-zA-Z]|\\\\.\\\\.\\\\.",zn="("+Do+")+",Qs="^"+zn+"$",mc="("+zn+",)*"+zn,fc="^"+mc+"$",Mo=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let o=this.symbolToIndices.get(t);o===void 0?o=[r]:o.push(r),this.symbolToIndices.set(t,o)}},zo=class{constructor(t,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[o,i]=r.includes("->")?r.split("->",2):[r,""];if(!o.match(RegExp(fc)))throw new Error("Invalid LHS term");if(o.split(",").forEach((p,m)=>{let h=t[m].dims.slice();if(!p.match(RegExp(Qs)))throw new Error("Invalid LHS term");let d=this.processTerm(p,!0,h,m);this.lhs.push(d)}),i==="")i+=[...this.symbolToInfo.entries()].filter(([p,m])=>m.count===1||p==="...").map(([p])=>p).join("");else if(!i.match(RegExp(zn)))throw new Error("Invalid RHS");i.match(RegExp(Do,"g"))?.forEach(p=>{if(p==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let m=this.symbolToInfo.get(p);if(m===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(m.dimValue)}}),this.rhs=this.processTerm(i,!1,this.outputDims)}addSymbol(t,r,o){let i=this.symbolToInfo.get(t);if(i!==void 0){if(i.dimValue!==r&&i.count!==1)throw new Error("Dimension mismatch");i.count++,i.inputIndices.push(o)}else i={count:1,dimValue:r,inputIndices:[o]};this.symbolToInfo.set(t,i)}processTerm(t,r,o,i=-1){let u=o.length,a=!1,p=[],m=0;if(!t.match(RegExp(Qs))&&!r&&t!=="")throw new Error("Invalid LHS term");let h=t.match(RegExp(Do,"g")),d=new Mo(i);return h?.forEach((y,w)=>{if(y==="..."){if(a)throw new Error("Only one ellipsis is allowed per input term");a=!0;let _=u-h.length+1;if(_<0)throw new Error("Ellipsis out of bounds");if(p=o.slice(m,m+_),this.hasEllipsis){if(this.ellipsisDims.length!==p.length||this.ellipsisDims.toString()!==p.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=p;else throw new Error("Ellipsis must be specified in the LHS");for(let v=0;v<p.length;v++){let x=String.fromCharCode("0".charCodeAt(0)+v);d.addSymbol(x,w+v),this.addSymbol(x,o[m++],i)}}else d.addSymbol(y,w+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(y,o[m++],i)}),d}},eu=e=>e+"_max",hc=(e,t,r,o)=>{let u=e.map(d=>d.length).map((d,y)=>V(`input${y}`,t,d)),a=W.size(o),p=J("output",t,o.length),m=[...r.symbolToInfo.keys()].filter(d=>!r.rhs.symbolToIndices.has(d)),h=d=>{let y=[],w="var prod = 1.0;",_="var sum = 0.0;",v="sum += prod;",x=[],T=[],C=[],S=[],E=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((U,M)=>{if(r.rhs.symbolToIndices.has(M)){let N=r.rhs.symbolToIndices.get(M)?.[0];N!==void 0&&r.lhs.forEach((Y,se)=>{if(U.inputIndices.includes(se)){let B=Y.symbolToIndices.get(M);if(B===void 0)throw new Error("Invalid symbol error");B.forEach(te=>{y.push(`${u[se].indicesSet(`input${se}Indices`,te,p.indicesGet("outputIndices",N))}`)})}})}else r.lhs.forEach((N,Y)=>{if(U.inputIndices.includes(Y)){let se=N.symbolToIndices.get(M);if(se===void 0)throw new Error("Invalid symbol error");se.forEach(B=>{x.push(`${u[Y].indicesSet(`input${Y}Indices`,B,`${M}`)}`)}),S.push(`prod *= ${u[Y].getByIndices(`input${Y}Indices`)};`)}}),T.push(`for(var ${M}: u32 = 0; ${M} < uniforms.${eu(M)}; ${M}++) {`),C.push("}")});let O=E?[...y,`let sum = ${u.map((U,M)=>U.getByIndices(`input${M}Indices`)).join(" * ")};`]:[...y,_,...T,...x,w,...S,v,...C];return`\n            ${d.registerUniforms(m.map(U=>({name:`${eu(U)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...u,p)}\n\n            ${d.mainStart()}\n            ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${p.offsetToIndices("global_idx")};\n            ${u.map((U,M)=>`var input${M}Indices: ${u[M].type.indices};`).join(`\n`)}\n            ${O.join(`\n`)};\n            ${p.setByOffset("global_idx","sum")};\n          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let d=m.filter(w=>r.symbolToInfo.has(w)).map(w=>({type:"uint32",data:r.symbolToInfo.get(w)?.dimValue||0}));d.push({type:"uint32",data:a});let y=e.map((w,_)=>[...G(w)]).reduce((w,_)=>w.concat(_),d);return y.push(...G(o)),{outputs:[{dims:o,dataType:t}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:y}},getShaderSource:h}},tu=(e,t)=>{let r=new zo(e.inputs,t.equation),o=r.outputDims,i=e.inputs.map((u,a)=>u.dims);e.compute(hc(i,e.inputs[0].dataType,r,o))},ru=e=>{let t=e.equation.replace(/\\s+/g,"");return xe({equation:t})}});var gc,ou,yc,bc,iu,au=Q(()=>{"use strict";Ve();Ce();_e();gc=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=r.length<t.length?0:r.length-t.length,i=t.length<r.length?0:t.length-r.length;for(;o<r.length&&i<t.length;++o,++i)if(r[o]!==t[i]&&r[o]!==1&&t[i]!==1)throw new Error("Expand requires shape to be broadcastable to input")},ou=(e,t)=>{let r=e.length-t.length,o=[];for(let i=0;i<r;++i)o.push(e[i]);for(let i=0;i<t.length;++i)o.push(t[i]===1?e[i+r]:t[i]);return o},yc=(e,t)=>e.length>t.length?ou(e,t):ou(t,e),bc=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=yc(t,r),i=e[0].dataType,u=i===9?4:1,a=Math.ceil(W.size(o)/u),p=h=>{let d=V("input",i,t.length,u),y=J("output",i,o.length,u),w;if(i===9){let _=(v,x,T="")=>`\n          let outputIndices${x} = ${y.offsetToIndices(`outputOffset + ${x}u`)};\n          let offset${x} = ${d.broadcastedIndicesToOffset(`outputIndices${x}`,y)};\n          let index${x} = offset${x} / 4u;\n          let component${x} = offset${x} % 4u;\n          ${v}[${x}] = ${T}(${d.getByOffset(`index${x}`)}[component${x}]);\n        `;w=`\n        let outputOffset = global_idx * ${u};\n        var data = vec4<u32>(0);\n        ${_("data",0,"u32")}\n        ${_("data",1,"u32")}\n        ${_("data",2,"u32")}\n        ${_("data",3,"u32")}\n        ${y.setByOffset("global_idx","data")}\n      }`}else w=`\n        let outputIndices = ${y.offsetToIndices("global_idx")};\n        let inputOffset = ${d.broadcastedIndicesToOffset("outputIndices",y)};\n        ${y.setByOffset("global_idx",d.getByOffset("inputOffset"))}\n      }`;return`\n    ${h.registerUniform("vec_size","u32").declareVariables(d,y)}\n    ${h.mainStart()}\n    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${w}`},m=[{type:"uint32",data:a},...G(t),...G(o)];return{name:"Expand",shaderCache:{hint:`${o.length}`,inputDependencies:["rank"]},getShaderSource:p,getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:m})}},iu=e=>{gc(e.inputs),e.compute(bc(e.inputs),{inputs:[0]})}});var wc,vc,su,uu,lu=Q(()=>{"use strict";Ve();Ce();Ye();_e();wc=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},vc=(e,t)=>{let r=e[0].dims,o=e[1].dims,i=r.length,u=W.normalizeAxis(t.axis,i),a=r.slice(0);a.splice(u,1,...o);let p=r[u],m=e[0].dataType===9?4:1,h=Math.ceil(W.size(a)/m),d=[{type:"uint32",data:h},{type:"int32",data:p},{type:"uint32",data:u},...G(e[0].dims),...G(e[1].dims),...G(a)],y=w=>{let _=V("data",e[0].dataType,e[0].dims.length,m),v=V("inputIndices",e[1].dataType,e[1].dims.length),x=J("output",e[0].dataType,a.length,m),T=S=>{let E=o.length,O=`var indicesIndices${S}  = ${v.type.indices}(0);`;for(let U=0;U<E;U++)O+=`${E>1?`indicesIndices${S}[${U}]`:`indicesIndices${S}`} = ${a.length>1?`outputIndices${S}[uniforms.axis + ${U}]`:`outputIndices${S}`};`;O+=`\n          var idx${S} = ${v.getByIndices(`indicesIndices${S}`)};\n          if (idx${S} < 0) {\n            idx${S} = idx${S} + uniforms.axisDimLimit;\n          }\n          var dataIndices${S} = ${_.type.indices}(0);\n        `;for(let U=0,M=0;U<i;U++)U===u?(O+=`${i>1?`dataIndices${S}[${U}]`:`dataIndices${S}`} = u32(idx${S});`,M+=E):(O+=`${i>1?`dataIndices${S}[${U}]`:`dataIndices${S}`} = ${a.length>1?`outputIndices${S}[${M}]`:`outputIndices${S}`};`,M++);return O},C;if(e[0].dataType===9){let S=(E,O,U="")=>`\n          let outputIndices${O} = ${x.offsetToIndices(`outputOffset + ${O}u`)};\n          ${T(O)};\n          let offset${O} = ${_.indicesToOffset(`dataIndices${O}`)};\n          let index${O} = offset${O} / 4u;\n          let component${O} = offset${O} % 4u;\n          ${E}[${O}] = ${U}(${_.getByOffset(`index${O}`)}[component${O}]);\n        `;C=`\n        let outputOffset = global_idx * ${m};\n        var value = vec4<u32>(0);\n        ${S("value",0,"u32")}\n        ${S("value",1,"u32")}\n        ${S("value",2,"u32")}\n        ${S("value",3,"u32")}\n        ${x.setByOffset("global_idx","value")}\n      `}else C=`\n      let outputIndices = ${x.offsetToIndices("global_idx")};\n      ${T("")};\n      let value = ${_.getByIndices("dataIndices")};\n      ${x.setByOffset("global_idx","value")};\n      `;return`\n      ${w.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(_,v,x)}\n      ${w.mainStart()}\n        ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${C}\n      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:d}),getShaderSource:y}},su=e=>xe({axis:e.axis}),uu=(e,t)=>{let r=e.inputs;wc(r),e.compute(vc(e.inputs,t))}});var $c,_c,du,cu,pu=Q(()=>{"use strict";Ce();Ye();_e();$c=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},_c=(e,t)=>{let r=e[0].dims,o=e[0].dataType,i=r.length,u=e[1].dims,a=e[1].dataType,p=W.normalizeAxis(t.axis,i),m=r[p],h=u.slice(0),d=W.size(h),y=V("input",o,i),w=V("indicesInput",a,u.length),_=J("output",o,h.length),v=[{type:"uint32",data:d},{type:"int32",data:m},{type:"uint32",data:p}];return v.push(...G(r)),v.push(...G(u)),v.push(...G(h)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:v}),getShaderSource:C=>`\n      ${C.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(y,w,_)}\n      ${C.mainStart()}\n      ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${_.offsetToIndices("global_idx")};\n\n      var idx = ${w.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${y.type.indices}(outputIndices);\n      ${y.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${y.getByIndices("inputIndices")};\n\n      ${_.setByOffset("global_idx","value")};\n  }`}},du=e=>xe({axis:e.axis}),cu=(e,t)=>{let r=e.inputs;$c(r),e.compute(_c(e.inputs,t))}});var Sc,xc,mu,fu,hu=Q(()=>{"use strict";Ce();_e();Sc=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},xc=(e,t)=>{let r=e[0].dims.slice(),o=e[1].dims.slice(),[i,u,a]=Sn.getShapeOfGemmResult(r,t.transA,o,t.transB,e.length===3?e[2].dims:void 0),p=[i,u];if(!p)throw new Error("Can\'t use gemm on the given tensors");let m=W.size(p),h=[{type:"uint32",data:m},{type:"uint32",data:i},{type:"uint32",data:u},{type:"uint32",data:a},{type:"float32",data:t.alpha},{type:"float32",data:t.beta}],d=["type","type"];e.length===3&&(h.push(...G(e[2].dims)),d.push("rank")),h.push(...G(p));let y=w=>{let _="";t.transA&&t.transB?_="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?_="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?_="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(_="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let v=t.alpha===1?"":"value *= uniforms.alpha;",x=V("a",e[0].dataType,e[0].dims),T=V("b",e[1].dataType,e[1].dims),C=x.type.value,S=null,E=[x,T];e.length===3&&(S=V("c",e[2].dataType,e[2].dims.length),E.push(S));let O=J("output",e[0].dataType,p.length);E.push(O);let U=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`\n  ${w.registerUniforms(U).declareVariables(...E)}\n\n  ${w.mainStart()}\n    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let m = global_idx / uniforms.N;\n    let n = global_idx % uniforms.N;\n\n    var value = ${C}(0);\n    for (var k: u32 = 0u; k < uniforms.K; k++) {\n      ${_}\n    }\n\n    ${v}\n    ${(()=>S!=null?`let cOffset = ${S.broadcastedIndicesToOffset("vec2(m, n)",O)}; value += ${C}(uniforms.beta) * ${S.getByOffset("cOffset")};`:"")()}\n    output[global_idx] = value;\n  }`};return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:p,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:h}),getShaderSource:y}},mu=e=>{let t=e.transA,r=e.transB,o=e.alpha,i=e.beta;return{transA:t,transB:r,alpha:o,beta:i,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},fu=(e,t)=>{Sc(e.inputs),e.compute(xc(e.inputs,t))}});var Cc,Ac,Ic,gu,yu=Q(()=>{"use strict";Ve();Ce();_e();Cc=(e,t)=>{let r=e[0].dims,o=r,i=2,u=W.sizeToDimension(r,i),a=W.sizeFromDimension(r,i),p=He(a),m=a/p,h=[r[0],r[1],m],d=["rank","type","type"],y=[{type:"uint32",data:a},{type:"uint32",data:m}];y.push(...G(h),...G(h));let w=_=>{let v=V("x",e[0].dataType,h.length,p),x=V("scale",e[1].dataType,e[1].dims),T=V("bias",e[2].dataType,e[2].dims),C=J("output",e[0].dataType,h.length,p),S=[v,x,T,C],E=v.type.value,O=p===1?"f32":`vec${p}<f32>`,U=64,M=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`\n  var<workgroup> meanShared : f32;\n  var<workgroup> squaredNormShared : f32;\n  var<workgroup> workgroupShared : array<${O}, ${U}>;\n  const workgroupSize = ${U}u;\n  ${_.registerUniforms(M).declareVariables(...S)}\n  ${_.mainStart(U)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / uniforms.x_shape[1];\n    let channel = norm % uniforms.x_shape[1];\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial = ${O}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      initial = initial + ${O}(${v.get("batch","channel","h")});\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = ${ut("workgroupShared[0]",p)} / f32(uniforms.normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = ${O}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let deviation =  ${O}(${v.get("batch","channel","h")}) - ${O}(meanShared);\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = ${ut("workgroupShared[0]",p)};\n    }\n    workgroupBarrier();\n\n    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${t.epsilon}));\n    let channelScale = invStdDev * f32(${x.getByOffset("channel")});\n    let channelShift = f32(${T.getByOffset("channel")}) - meanShared * channelScale;\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let value = ${v.get("batch","channel","h")} * ${E}(${O}(channelScale)) + ${E}(${O}(channelShift));\n      ${C.set("batch","channel","h","value")};\n    }\n  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${t.epsilon};${p}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:u},programUniforms:y}),getShaderSource:w}},Ac=(e,t,r,o,i,u,a,p)=>{let m=He(a),h=64,d=m===1?"vec2f":`mat2x${m}f`,y=m===1?"f32":`vec${m}f`,w=(M,N)=>`${d}(${M}, ${N})`,_=i*a/m,v=Math.ceil(u/h),x=["type"],T=[{type:"uint32",data:v},{type:"uint32",data:u},{type:"uint32",data:Math.floor(a/m)},{type:"uint32",data:Math.floor(u*a/m)}],C=M=>{let N=V("input",t.dataType,t.dims,m);return`\n  ${M.declareVariables(N)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${d}>;\n  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};\n  @group(0) @binding(2) var<uniform> uniforms: Uniforms;\n\n  ${M.mainStart(h)}\n    let currentImageNumber = global_idx / ${h} / uniforms.C;\n    let currentChannelNumber = (global_idx / ${h}) % uniforms.C;\n    let wgId = global_idx % ${h};\n    let wgOffset = wgId * uniforms.wg_size;\n    if (wgOffset >= uniforms.H) {\n        return;\n    }\n    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);\n\n    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;\n    var sum = ${Ze("f32",m)};\n    var squaredSum = ${Ze("f32",m)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${y}(input[offset + i * uniforms.C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${w("sum","squaredSum")};\n  }`},S=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${m}`,inputDependencies:x},getRunData:()=>({outputs:[{dims:[i,a,h,2],dataType:1}],dispatchGroup:{x:i*a/m},programUniforms:T}),getShaderSource:C},{inputs:[t],outputs:[-1]})[0],E=[{type:"uint32",data:_},{type:"uint32",data:u},{type:"uint32",data:Math.floor(a/m)},{type:"uint32",data:Math.floor(h*a/m)}],O=["type","type","type"],U=M=>{let N=V("scale",r.dataType,r.dims,m),Y=V("bias",o.dataType,o.dims,m);return`\n  @group(0) @binding(0) var<storage, read> input : array<${d}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${N.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${Y.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${d}>;\n  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};\n  @group(0) @binding(4) var<uniform> uniforms: Uniforms;\n\n  ${M.mainStart()}\n    ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}\n    let currentImageNumber = global_idx / uniforms.C;\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let offset = currentImageNumber * uniforms.image_size;\n    var sum = ${Ze("f32",m)};\n    var squaredSum = ${Ze("f32",m)};\n    for (var i: u32 = 0; i < ${h}; i++) {\n        let value = input[offset + i + currentChannelNumber * ${h}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(uniforms.H);\n    squaredSum = squaredSum / f32(uniforms.H);\n    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${p}));\n    let channelScale = invStdDev * ${y}(scale[currentChannelNumber]);\n    let channelShift = ${y}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${w("channelScale","channelShift")};\n  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${m};${p}`,inputDependencies:O},getRunData:()=>({outputs:[{dims:[i,a,2],dataType:1}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:E}),getShaderSource:U},{inputs:[S,r,o],outputs:[-1]})[0]},Ic=(e,t,r)=>{let o=t[0].dims,i=o,u=o[0],a=o[o.length-1],p=W.sizeFromDimension(o,1)/a,m=He(a),h=W.size(i)/m,d=[{type:"uint32",data:p},{type:"uint32",data:Math.floor(a/m)}],y=["type","type"],w=Ac(e,t[0],t[1],t[2],u,p,a,r.epsilon),_=v=>{let x=Ne(t[0].dataType),T=m===1?"vec2f":`mat2x${m}f`,C=m===1?x:`vec${m}<${x}>`,S=V("input",t[0].dataType,t[0].dims,m),E=J("output",t[0].dataType,i,m);return`\n  @group(0) @binding(0) var<storage, read> input : array<${S.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${T}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${E.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${v.mainStart()}\n    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${C}(scale[0]), ${C}(scale[1]));\n  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${m}`,inputDependencies:y},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:d}),getShaderSource:_},{inputs:[t[0],w]})},gu=(e,t)=>{t.format==="NHWC"?Ic(e,e.inputs,t):e.compute(Cc(e.inputs,t))}});var Tc,Ec,bu,wu=Q(()=>{"use strict";Ve();Ce();_e();Tc=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Ec=(e,t,r)=>{let o=e[0].dims,i=e[1],u=e[2],a=o,p=W.normalizeAxis(t.axis,o.length),m=W.sizeToDimension(o,p),h=W.sizeFromDimension(o,p),d=W.size(i.dims),y=u?W.size(u.dims):0;if(d!==h||u&&y!==h)throw new Error(`Size of X.shape()[axis:] == ${h}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${d} and bias size of ${y}`);let w=[];for(let O=0;O<o.length;++O)O<p?w.push(o[O]):w.push(1);let _=He(h),v=["type","type"],x=[{type:"uint32",data:m},{type:"float32",data:h},{type:"uint32",data:Math.floor(h/_)},{type:"float32",data:t.epsilon}];u&&v.push("type");let T=r>1,C=r>2,S=O=>{let U=Ne(e[0].dataType),M=[V("x",e[0].dataType,e[0].dims,_),V("scale",i.dataType,i.dims,_)];u&&M.push(V("bias",u.dataType,u.dims,_)),M.push(J("output",e[0].dataType,a,_)),T&&M.push(J("mean_data_output",1,w)),C&&M.push(J("inv_std_output",1,w));let N=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`\n  ${O.registerUniforms(N).declareVariables(...M)}\n  ${O.mainStart()}\n    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var meanVector = ${Ze("f32",_)};\n    var meanSquareVector = ${Ze("f32",_)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${gt(U,_,"x[h + offset]")};\n      meanVector += value;\n      meanSquareVector += value * value;\n    }\n    let mean = ${ut("meanVector",_)} / uniforms.norm_size;\n    let invStdDev =\n        inverseSqrt(${ut("meanSquareVector",_)} / uniforms.norm_size - mean * mean + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${gt(U,_,"x[j + offset]")};\n      let f32scale = ${gt(U,_,"scale[j]")};\n      output[j + offset] = ${M[0].type.value}((f32input - mean) * invStdDev * f32scale\n        ${u?`+ ${gt(U,_,"bias[j]")}`:""}\n      );\n    }\n\n    ${T?"mean_data_output[global_idx] = mean":""};\n    ${C?"inv_std_output[global_idx] = invStdDev":""};\n  }`},E=[{dims:a,dataType:e[0].dataType}];return T&&E.push({dims:w,dataType:1}),C&&E.push({dims:w,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${_};${r}`,inputDependencies:v},getRunData:()=>({outputs:E,dispatchGroup:{x:Math.ceil(m/64)},programUniforms:x}),getShaderSource:S}},bu=(e,t)=>{Tc(e.inputs),e.compute(Ec(e.inputs,t,e.outputCount))}});var Pc,$u,vu,Oc,Uo,_u,Su=Q(()=>{"use strict";Ce();Ye();$n();xo();_e();pr();Pc=(e,t)=>{let r=e[0],o=e[1],i=e[2],u=e[3],a=e[4],p=e[5],m=e[6],h=e[7];if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let d=!1,y=r.dims[0],w=r.dims[1],_=r.dims.length===3?d?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],v=w,x=0,T=0,C=Math.floor(_/t.numHeads);if(m&&h){if(m.dims.length!==4)throw new Error(\'Input "past_key" is expected to have 4 dimensions\');if(h.dims.length!==4)throw new Error(\'Input "past_value" is expected to have 4 dimensions\');x=m.dims[2],T=m.dims[2]}else if(m||h)throw new Error(\'Input "past_key" and "past_value" shall be both present or both absent\');let S;if(o){if(r.dims.length!==3)throw new Error(\'Input "query" is expected to have 3 dimensions when key is given\');if(o.dims.length<3||o.dims.length>5)throw new Error(\'Input "key" is expected to have 3, 4, or 5 dimensions\');if(r.dims[0]!==o.dims[0])throw new Error(\'Input "query" and "key" shall have same dim 0 (batch size)\');if(o.dims.length===3){if(o.dims[2]!==r.dims[2])throw new Error(\'Input "query" and "key" shall have same dim 2 (hidden_size)\');S=2,v=o.dims[1]}else if(o.dims.length===5){if(o.dims[2]!==t.numHeads||o.dims[3]!==2||o.dims[4]!==C)throw new Error(\'Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv\');if(i)throw new Error(\'Expect "value" be none when "key" has packed kv format.\');S=5,v=o.dims[1]}else{if(o.dims[1]!==t.numHeads||o.dims[3]!==C)throw new Error(\'Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key\');S=0,v=o.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error(\'Input "query" is expected to have 3 or 5 dimensions when key is empty\');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error(\'Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv\');S=3}if(u){if(u.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimension\');if(i&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let E=0;if(a){E=8;let Y=a.dims;throw Y.length===1?Y[0]===y?E=1:Y[0]===3*y+2&&(E=3):Y.length===2&&Y[0]===y&&Y[1]===v&&(E=5),E===8?new Error(\'Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)\'):new Error("Mask not supported")}let O=!1,U=_;if(i){if(i.dims.length!==3&&i.dims.length!==4)throw new Error(\'Input "value" is expected to have 3 or 4 dimensions\');if(r.dims[0]!==i.dims[0])throw new Error(\'Input "query" and "value" shall have same dim 0 (batch_size)\');if(i.dims.length===3){if(v!==i.dims[1])throw new Error(\'Input "key" and "value" shall have the same dim 1 (kv_sequence_length)\');U=i.dims[2]}else{if(v!==i.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)\');U=i.dims[1]*i.dims[3],O=!0}}let M=x+v,N=!1;if(a)throw new Error("Key padding mask is not supported");if(p)throw new Error("extraAddQk is not supported");if(m)throw new Error("pastKey is not supported");if(h)throw new Error("pastValue is not supported");return{batchSize:y,sequenceLength:w,pastSequenceLength:x,kvSequenceLength:v,totalSequenceLength:M,maxSequenceLength:T,inputHiddenSize:0,hiddenSize:_,vHiddenSize:U,headSize:C,vHeadSize:Math.floor(U/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:E,scale:t.scale,broadcastResPosBias:N,passPastInKv:O,qkvFormat:S}},$u=e=>xe({...e}),vu=xe({perm:[0,2,1,3]}),Oc=(e,t,r,o,i,u,a)=>{let p=[o,i,u],m=W.size(p),h=[{type:"uint32",data:m},{type:"uint32",data:a},{type:"uint32",data:u}],d=y=>{let w=J("qkv_with_bias",t.dataType,p),_=V("qkv",t.dataType,p),v=V("bias",r.dataType,p),x=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`\n  ${y.registerUniforms(x).declareVariables(_,v,w)}\n  ${y.mainStart()}\n    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:p,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:h}),getShaderSource:d},{inputs:[t,r],outputs:[-1]})[0]},Uo=(e,t,r,o,i,u,a,p)=>{let m=u;if(a){if(o===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return m=Oc(e,u,a,t,o,r*i,p),m=m.reshape([t,o,r,i]),e.compute(yt(m,vu.perm),{inputs:[m],outputs:[-1]})[0]}else return u.dims.length===3&&(m=u.reshape([t,o,r,i])),e.compute(yt(m,vu.perm),{inputs:[m],outputs:[-1]})[0]},_u=(e,t)=>{let r=Pc(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let o=e.inputs[1]&&e.inputs[2]&&e.inputs[1].dims.length===4&&e.inputs[2].dims.length===4,i=Uo(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,e.inputs[0],e.inputs[3],0);if(o)return En(e,i,e.inputs[1],e.inputs[2],e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t);let u=Uo(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,e.inputs[1],e.inputs[3],r.hiddenSize),a=Uo(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,e.inputs[2],e.inputs[3],2*r.hiddenSize);En(e,i,u,a,e.inputs[4],void 0,e.inputs[6],e.inputs[7],e.inputs[5],r,t)}});var kc,Rc,Bc,Dc,Mc,zc,Uc,Vc,xu,Cu=Q(()=>{"use strict";Ve();Ce();_e();kc=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Rc=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n            k = i32(${e.indicesGet("indices",i)}) - ${ce("uniforms.pads",i,r)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${ce("uniforms.x_shape",i,t)})) {\n              break;\n            }\n            offset += k * i32(${ce("uniforms.x_strides",i,t)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${o}\n            value = x[offset];\n          }\n      `},Bc=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${ce("uniforms.pads",i,r)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${ce("uniforms.x_shape",i,t)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${ce("uniforms.x_shape",i,t)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${ce("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},Dc=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${ce("uniforms.pads",i,r)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${ce("uniforms.x_shape",i,t)})) {\n                  k = i32(${ce("uniforms.x_shape",i,t)}) - 1;\n                }\n                offset += k * i32(${ce("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},Mc=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${ce("uniforms.pads",i,r)};\n                if (k < 0)  {\n                  k += i32(${ce("uniforms.x_shape",i,t)}]);\n                }\n                if (k >= i32(${ce("uniforms.x_shape",i,t)})) {\n                  k -= i32(${ce("uniforms.x_shape",i,t)});\n                }\n                offset += k * i32(${ce("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},zc=(e,t,r)=>{switch(r.mode){case 0:return Rc(e,t,r.pads.length);case 1:return Bc(e,t,r.pads.length);case 2:return Dc(e,t,r.pads.length);case 3:return Mc(e,t,r.pads.length);default:throw new Error("Invalid mode")}},Uc=(e,t)=>{let r=W.padShape(e[0].dims.slice(),t.pads),o=e[0].dims,u=[{type:"uint32",data:W.size(r)},{type:"uint32",data:t.pads}];if(t.mode===0){let m=st(e[0].dataType);u.push({type:m,data:t.value})}u.push(...G(e[0].dims),...G(r));let a=["rank"],p=m=>{let h=J("output",e[0].dataType,r.length),d=V("x",e[0].dataType,o.length),y=d.type.value,w=zc(h,o.length,t),_=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&_.push({name:"constant_value",type:y}),`\n            ${m.registerUniforms(_).declareVariables(d,h)}\n            ${m.mainStart()}\n            ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${h.offsetToIndices("global_idx")};\n\n            var value = ${y}(0);\n            ${w}\n            output[global_idx] = value;\n        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}`,inputDependencies:a},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(W.size(r)/64)},programUniforms:u}),getShaderSource:p}},Vc=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),o=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,i=e[0].dims.length,u=new Int32Array(2*i).fill(0);if(e.length>=4){let p=e[3].getBigInt64Array();for(let m=0;m<p.length;m++)u[Number(p[m])]=Number(r[m]),u[Number(p[m])+i]=Number(r[m+p.length])}else r.forEach((p,m)=>u[Number(m)]=Number(p));let a=[];return u.forEach(p=>a.push(p)),{mode:t.mode,value:o,pads:a}}else return t},xu=(e,t)=>{kc(e.inputs);let r=Vc(e.inputs,t);e.compute(Uc(e.inputs,r),{inputs:[0]})}});var Un,Au,Iu,Tu,Eu,Wc,Nc,Pu,Ou,ku,Ru,Bu,Du,Mu,zu,Uu,Vu,Wu,Nu,Hu=Q(()=>{"use strict";dr();Ce();_e();Un=e=>{if(lr.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},Au=(e,t,r)=>{let o=t.format==="NHWC",i=e.dims.slice();o&&i.splice(1,0,i.pop());let u=Object.hasOwnProperty.call(t,"dilations"),a=t.kernelShape.slice(),p=t.strides.slice(),m=u?t.dilations.slice():[],h=t.pads.slice();Xt.adjustPoolAttributes(r,i,a,p,m,h);let d=Xt.computePoolOutputShape(r,i,p,m,a,h,t.autoPad),y=Object.assign({},t);u?Object.assign(y,{kernelShape:a,strides:p,pads:h,dilations:m,cacheKey:t.cacheKey}):Object.assign(y,{kernelShape:a,strides:p,pads:h,cacheKey:t.cacheKey});let w=d.slice();return w.push(w.splice(1,1)[0]),[y,o?w:d]},Iu=(e,t)=>{let r=t.format==="NHWC",o=W.size(e),i=W.size(t.kernelShape),u=[{type:"uint32",data:o},{type:"uint32",data:i}],a=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let p=t.kernelShape[t.kernelShape.length-1],m=t.strides[t.strides.length-1],h=t.pads[t.pads.length/2-1],d=t.pads[t.pads.length-1],y=!!(h+d);u.push({type:"uint32",data:p},{type:"uint32",data:m},{type:"uint32",data:h},{type:"uint32",data:d}),a.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let w=!1;if(t.kernelShape.length===2){let _=t.kernelShape[t.kernelShape.length-2],v=t.strides[t.strides.length-2],x=t.pads[t.pads.length/2-2],T=t.pads[t.pads.length-2];w=!!(x+T),u.push({type:"uint32",data:_},{type:"uint32",data:v},{type:"uint32",data:x},{type:"uint32",data:T}),a.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[u,a,!0,y,w]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let p=W.computeStrides(t.kernelShape);u.push({type:"uint32",data:p},{type:"uint32",data:t.pads},{type:"uint32",data:t.strides}),a.push({name:"kernelStrides",type:"u32",length:p.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let m=t.pads.reduce((h,d)=>h+d);return[u,a,!!m,!1,!1]}},Tu=(e,t,r,o,i,u,a,p,m,h,d,y)=>{let w=i.format==="NHWC",_=t.type.value,v=J("output",t.type.tensor,o);if(i.kernelShape.length<=2){let x="",T="",C="",S=r-(w?2:1);if(d?x=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${S}] = indices[${S}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${S}] < 0 || xIndices[${S}]\n                      >= uniforms.x_shape[${S}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${u}\n                }`:x=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${S}] = indices[${S}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${u}\n                }`,i.kernelShape.length===2){let O=r-(w?3:2);y?T=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${O}] = indices[${O}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${O}] < 0 || xIndices[${O}] >= uniforms.x_shape[${O}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:T=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${O}] = indices[${O}] * uniforms.sh - uniforms.phStart + j;\n                `,C=`\n              }\n            `}return`\n            ${e.registerUniforms(m).declareVariables(t,v)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${v.offsetToIndices("global_idx")};\n              var xIndices = ${v.offsetToIndices("global_idx")};\n\n              var value = ${_}(${p});\n              var pad = 0;\n              ${T}\n              ${x}\n              ${C}\n              ${a}\n\n              output[global_idx] = value;\n            }`}else{if(w)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let x=i.kernelShape.length,T=i.pads.length,C="";return h?C=`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${u}\n              }`:C=`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${u}\n            `,`\n            ${e.registerUniforms(m).declareVariables(t,v)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${v.offsetToIndices("global_idx")};\n              var xIndices = ${v.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${x}>;\n\n              var value = ${_}(${p});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${x-1}u; j++) {\n                  offsets[j] = offset / ${ce("uniforms.kernelStrides","j",x)};\n                  offset -= offsets[j] * ${ce("uniforms.kernelStrides","j",x)};\n                }\n                offsets[${x-1}] = offset;\n\n                isPad = false;\n                for (var j = ${r-x}u; j < ${r}u; j++) {\n                  xIndices[j] = indices[j] * ${ce("uniforms.strides",`j - ${r-x}u`,x)}\n                    + offsets[j - ${r-x}u] - ${ce("uniforms.pads","j - 2u",T)};\n                  ${C}\n              }\n              ${a}\n\n              output[global_idx] = value;\n            }`}},Eu=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Wc=e=>`${Eu(e)};${e.countIncludePad}`,Nc=e=>`${Eu(e)};${e.storageOrder};${e.dilations}`,Pu=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Ou=(e,t,r,o)=>{let[i,u]=Au(t,o,r),a=V("x",t.dataType,t.dims.length),p=a.type.value,m="value += x_val;",h="";i.countIncludePad?h+=`value /= ${p}(uniforms.kernelSize);`:h+=`value /= ${p}(i32(uniforms.kernelSize) - pad);`;let[d,y,w,_,v]=Iu(u,i);d.push(...G(t.dims),...G(u));let x=["rank"];return{name:e,shaderCache:{hint:`${o.cacheKey};${w};${_};${v}`,inputDependencies:x},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(W.size(u)/64)},programUniforms:d}),getShaderSource:T=>Tu(T,a,t.dims.length,u.length,i,m,h,0,y,w,_,v)}},ku=e=>{let t=e.count_include_pad!==0,r=Pu(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let o={countIncludePad:t,...r,cacheKey:""};return{...o,cacheKey:Wc(o)}},Ru=(e,t)=>{Un(e.inputs),e.compute(Ou("AveragePool",e.inputs[0],!1,t))},Bu={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Du=e=>{let t=e.format;return{format:t,...Bu,cacheKey:t}},Mu=(e,t)=>{Un(e.inputs),e.compute(Ou("GlobalAveragePool",e.inputs[0],!0,t))},zu=(e,t,r,o)=>{let[i,u]=Au(t,o,r),a=`\n      value = max(x_val, value);\n    `,p="",m=V("x",t.dataType,t.dims.length),h=["rank"],[d,y,w,_,v]=Iu(u,i);return d.push(...G(t.dims),...G(u)),{name:e,shaderCache:{hint:`${o.cacheKey};${w};${_};${v}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(W.size(u)/64)},programUniforms:d}),getShaderSource:x=>Tu(x,m,t.dims.length,u.length,i,a,p,-1e5,y,w,_,v)}},Uu=(e,t)=>{Un(e.inputs),e.compute(zu("MaxPool",e.inputs[0],!1,t))},Vu=e=>{let t=e.storage_order,r=e.dilations,o=Pu(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(o.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let i={storageOrder:t,dilations:r,...o,cacheKey:""};return{...i,cacheKey:Nc(i)}},Wu=e=>{let t=e.format;return{format:t,...Bu,cacheKey:t}},Nu=(e,t)=>{Un(e.inputs),e.compute(zu("GlobalMaxPool",e.inputs[0],!0,t))}});var Gc,Lc,Gu,Lu=Q(()=>{"use strict";dr();Ve();_e();Gc=(e,t,r)=>{let o=e===t,i=e<t&&r<0,u=e>t&&r>0;if(o||i||u)throw new Error("Range these inputs\' contents are invalid.")},Lc=(e,t,r,o)=>{let i=Math.abs(Math.ceil((t-e)/r)),u=[i],a=i,p=st(o),m=[{type:"uint32",data:a},{type:p,data:e},{type:p,data:r},...G(u)],h=d=>{let y=J("output",o,u.length),w=y.type.value,_=[{name:"outputSize",type:"u32"},{name:"start",type:w},{name:"delta",type:w}];return`\n        ${d.registerUniforms(_).declareVariables(y)}\n        ${d.mainStart()}\n        ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${w}(global_idx) * uniforms.delta;\n      }`};return{name:"Range",shaderCache:{hint:`${o}`},getShaderSource:h,getRunData:()=>({outputs:[{dims:u,dataType:o}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:m})}},Gu=e=>{let t=0,r=0,o=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],o=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],o=e.inputs[2].getFloat32Array()[0]),lr.webgpu.validateInputContent&&Gc(t,r,o),e.compute(Lc(t,r,o,e.inputs[0].dataType),{inputs:[]})}});var Fc,jc,qc,Kc,Yc,Zc,Xc,Jc,Qc,ep,tp,Fu,rp,np,op,ip,ap,ju,qu,Ku=Q(()=>{"use strict";Ce();Ye();_e();Fc=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},jc=(e,t,r)=>{t.every(i=>i>=0&&i<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let o=new Array(r).fill(1);return t.forEach((i,u)=>o[i]=e[u]),o},qc=(e,t,r,o,i,u)=>{let[a,p,m]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],h=e[0].dims.length;if(a>0&&e.length>a&&e[a].dims.length>0)e[a].getFloat32Array().forEach(d=>u.push(d));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(p>0&&e.length>p&&e[p].dims.length>0){if(e[p].getFloat32Array().forEach(d=>o.push(d)),o.length!==0&&o.length!==h&&r>=18&&o.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Fc(o,t),t.axes.length>0&&jc(o,t.axes,h).forEach((d,y)=>o[y]=d)}if(m>0&&e.length>m&&(e[m].getBigInt64Array().forEach(d=>i.push(Number(d))),i.length!==h||r>=18&&i.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(o.length!==t.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(i.length!==t.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(typeof o<"u"&&typeof i<"u"&&o.length>0&&i.length>h)throw new Error("Resize requires only of scales or sizes to be specified")},Kc=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n                    // offset-by-one error later in floor().\n                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\n                    let fract =\n                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);\n                    return whole + fract;\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +\n                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /\n                        ${t}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);\n                  const adjustment = ${t}(lengthResized) / outputWidth;\n                  const center = ${t}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Yc=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Zc=(e,t,r)=>{let o=new Array(r).fill(0).concat(new Array(r).fill(1)),i=e.length===0?o:e.slice();return t.length>0?(t.forEach((u,a)=>{o[u]=i[a],o[a+r]=i[t.length+a]}),o):i},Xc=(e,t,r,o)=>{let i=[];if(r.length>0)if(o.length>0){if(e.forEach(u=>i.push(u)),Math.max(...o)>e.length)throw new Error("axes is out of bound");o.forEach((u,a)=>i[u]=r[a])}else r.forEach(u=>i.push(u));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");i=e.map((u,a)=>Math.round(u*t[a]))}return i},Jc=(e,t,r)=>{let o=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(u=>t[u]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(u=>t[u]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let i=e.slice();return r.axes.length>0?(r.axes.forEach(u=>t[u]=o),r.axes.forEach(u=>i[u]=Math.round(e[u]*t[u]))):(t.fill(o,0,t.length),i.forEach((u,a)=>i[a]=Math.round(u*t[a]))),i},Qc=(e,t,r,o,i)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {\n      var original_indices: array<${e.type.value}, ${r.length}>;\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${ce("uniforms.scales","i",o)};\n        var roi_low = ${ce("uniforms.roi","i",i)};\n        var roi_hi = ${ce("uniforms.roi",`i + ${t.length}`,i)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${ce("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${ce("uniforms.output_shape","i",r.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,ep=(e,t,r,o,i,u,a)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${o.length}; i++) {\n        var output_index = ${t.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${ce("uniforms.scales","i",i)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${ce("uniforms.roi","i",u)};\n          var roi_hi = ${ce("uniforms.roi",`i + ${r.length}`,u)};\n          var input_shape_i = ${ce("uniforms.input_shape","i",r.length)};\n          var output_shape_i = ${ce("uniforms.output_shape","i",o.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${a} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i"," input_index")}\n      }\n      return input_indices;\n    }`,tp=(e,t)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${ce("uniforms.input_shape","i",t.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,Fu=(e,t,r,o)=>e.rank>o?`\n    ${e.indicesSet("input_indices",t,"channel")};\n    ${e.indicesSet("input_indices",r,"batch")};\n`:"",rp=(e,t,r,o,i)=>{let[a,p,m,h]=r.length===2?[-1,0,1,-1]:[0,2,3,1],d=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",p,`max(0, min(row, ${r[p]} - 1))`)};\n      ${e.indicesSet("input_indices",m,`max(0, min(col, ${r[m]} - 1))`)};\n      ${Fu(e,h,a,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${d} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${d} = originalIndices[${p}];\n      var col:${d} = originalIndices[${m}];\n      ${o?`if (row < 0 || row > (${r[p]} - 1) || col < 0 || col > (${r[m]} - 1)) {\n        return ${i};\n      }`:""};\n      row = max(0, min(row, ${r[p]} - 1));\n      col = max(0, min(col, ${r[m]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${r.length>2?`u32(originalIndices[${h}])`:"0"};\n      var batch: u32 =  ${r.length>2?`u32(originalIndices[${a}])`:"0"};\n      var x11: ${d} = getInputValue(batch, channel, row1, col1);\n      var x12: ${d} = getInputValue(batch, channel, row1, col2);\n      var x21: ${d} = getInputValue(batch, channel, row2, col1);\n      var x22: ${d} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${d} = abs(row - ${d}(row1));\n      var dx2: ${d} = abs(${d}(row2) - row);\n      var dy1: ${d} = abs(col - ${d}(col1));\n      var dy2: ${d} = abs(${d}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},np=(e,t,r,o,i,u,a,p,m,h)=>{let d=r.length===2,y=!0,[w,_]=d?[0,1]:y?[2,3]:[1,2],v=e.type.value,x=T=>{let C=T===w?"row":"col";return`\n      fn ${C}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${v} {\n        var output_index = ${t.indicesGet("output_indices",T)};\n        var originalIdx: ${v} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[T]},\n        ${o[T]}, ${r[T]}, ${u[T]}, ${u[T]} + ${r.length});\n        var fractOriginalIdx: ${v} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${p} && (originalIdx < 0 || originalIdx > (${r[T]} - 1))) {\n          return ${m};\n        }\n        var data: array<${v}, 4> = array<${v}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${C}: ${v} = originalIdx + ${v}(i);\n          if (${C} < 0 || ${C} >= ${r[T]}) {\n            ${(()=>h?`coefs[i + 1] = 0.0;\n                        continue;`:p?`return ${m};`:`${C} = max(0, min(${C}, ${r[T]} - 1));`)()};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",T,`u32(${C})`)};\n          data[i + 1] = ${T===w?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${x(w)};\n    ${x(_)};\n  fn getCubicInterpolationCoefs(s: ${v}) -> array<${v}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${v}, 4> = array<${v}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${v} = 1.0 - absS;\n    var twoMinusAbsS: ${v} = 2.0 - absS;\n    var onePlusAbsS: ${v} = 1.0 + absS;\n    coeffs[0] = ((${a} * onePlusAbsS - 5 * ${a}) * onePlusAbsS + 8 * ${a}) * onePlusAbsS - 4 * ${a};\n    coeffs[1] = ((${a} + 2) * absS - (${a} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${a} + 2) * oneMinusAbsS - (${a} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${a} * twoMinusAbsS - 5 * ${a}) * twoMinusAbsS + 8 * ${a}) * twoMinusAbsS - 4 * ${a};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${v}, 4>, coefs: array<${v}, 4>) -> ${v} {\n    var coefsSum: ${v} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${v} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},op=(e,t,r,o,i)=>{let[a,p,m,h,d]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],y=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${y} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",p,`max(0, min(depth, ${r[p]} - 1))`)};\n      ${e.indicesSet("input_indices",m,`max(0, min(height, ${r[m]} - 1))`)};\n      ${e.indicesSet("input_indices",h,`max(0, min(width, ${r[h]} - 1))`)};\n      ${Fu(e,d,a,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${y} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${y} = originalIndices[${p}];\n      var height:${y} = originalIndices[${m}];\n      var width:${y} = originalIndices[${h}];\n      ${o?`if (depth < 0 || depth > (${r[p]} - 1) || height < 0 || height > (${r[m]} - 1) || width < 0 || (width > ${r[h]} - 1)) {\n      return ${i};\n        }`:""};\n\n    depth = max(0, min(depth, ${r[p]} - 1));\n      height = max(0, min(height, ${r[m]} - 1));\n      width = max(0, min(width, ${r[h]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${r.length>3?`u32(originalIndices[${d}])`:"0"};\n      var batch: u32 =  ${r.length>3?`u32(originalIndices[${a}])`:"0"};\n\n      var x111: ${y} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${y} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${y} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${y} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${y} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${y} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${y} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${y} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${y} = abs(depth - ${y}(depth1));\n      var dx2: ${y} = abs(${y}(depth2) - depth);\n      var dy1: ${y} = abs(height - ${y}(height1));\n      var dy2: ${y} = abs(${y}(height2) - height);\n      var dz1: ${y} = abs(width - ${y}(width1));\n      var dz2: ${y} = abs(${y}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},ip=(e,t,r,o,i,u)=>{let a=e.dims,p=Zc(u,t.axes,a.length),m=Xc(a,o,i,t.axes),h=o.slice();o.length===0&&(h=a.map((S,E)=>S===0?1:m[E]/S),t.keepAspectRatioPolicy!=="stretch"&&(m=Jc(a,h,t)));let d=J("output",e.dataType,m.length),y=V("input",e.dataType,a.length),w=W.size(m),_=a.length===m.length&&a.every((S,E)=>S===m[E]),v=t.coordinateTransformMode==="tf_crop_and_resize",x=t.extrapolationValue,T=y.type.value,C=S=>`\n      ${_?"":`\n      ${Kc(t.coordinateTransformMode,T)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${tp(y,a)};\n              ${Yc(t.nearestMode,r,T)};\n              ${ep(y,d,a,m,h.length,p.length,v)};\n              `;case"linear":return`\n              ${Qc(d,a,m,h.length,p.length)};\n              ${(()=>{if(a.length===2||a.length===4)return`${rp(y,d,a,v,x)}`;if(a.length===3||a.length===5)return`${op(y,d,a,v,x)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(a.length===2||a.length===4)return`${np(y,d,a,m,h,p,t.cubicCoeffA,v,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${S.registerUniform("output_size","u32").registerUniform("scales","f32",h.length).registerUniform("roi","f32",p.length).declareVariables(y,d)}\n      ${S.mainStart()}\n        ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${_?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${d.offsetToIndices("global_idx")};\n        var input_indices: ${y.type.indices};\n        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${y.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${t.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${a.length===2||a.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n`}\n      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${h.length>0?h:""}|${i.length>0?i:""}|${p.length>0?p:""}|${_}|${a}`,inputDependencies:["rank"]},getShaderSource:C,getRunData:()=>({outputs:[{dims:m,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:[{type:"uint32",data:w},{type:"float32",data:h},{type:"float32",data:p},...G(a),...G(m)]})}},ap=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},ju=(e,t)=>{let r=[],o=[],i=[],u=ap(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");qc(e.inputs,t,u,r,o,i),e.compute(ip(e.inputs[0],t,u,r,o,i),{inputs:[0]})},qu=e=>{let t=e.antialias,r=e.axes,o=e.coordinateTransformMode,i=e.cubicCoeffA,u=e.excludeOutside!==0,a=e.extrapolationValue,p=e.keepAspectRatioPolicy,m=e.mode,h=e.nearestMode===""?"simple":e.nearestMode;return xe({antialias:t,axes:r,coordinateTransformMode:o,cubicCoeffA:i,excludeOutside:u,extrapolationValue:a,keepAspectRatioPolicy:p,mode:m,nearestMode:h})}});var sp,up,Yu,Zu=Q(()=>{"use strict";Ve();Ce();_e();sp=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],o=e[2];if(t.dataType!==r.dataType||t.dataType!==o.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let i=t.dims[t.dims.length-1],u=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==u)throw new Error("Skip must have the same sequence length as input");if(o.dims.length!==1)throw new Error("Gamma must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let a=e[3];if(a.dims.length!==1)throw new Error("Beta must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let a=e[4];if(a.dims.length!==1)throw new Error("Bias must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}},up=(e,t,r,o)=>{let i=e[0].dims,u=W.size(i),a=i,p=u,m=i.slice(-1)[0],h=o?i.slice(0,-1).concat(1):[],d=e.length>3,y=e.length>4,w=o&&r>1,_=o&&r>2,v=r>3,x=He(m),T=[{type:"uint32",data:p},{type:"uint32",data:x},{type:"uint32",data:m},{type:"float32",data:t.epsilon}],C=E=>{let O=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],U=[V("x",e[0].dataType,e[0].dims,x),V("skip",e[1].dataType,e[1].dims,x),V("gamma",e[2].dataType,e[2].dims,x)];d&&U.push(V("beta",e[3].dataType,e[3].dims,x)),y&&U.push(V("bias",e[4].dataType,e[4].dims,x)),U.push(J("output",e[0].dataType,a,x)),w&&U.push(J("mean_output",1,h)),_&&U.push(J("inv_std_output",1,h)),v&&U.push(J("input_skip_bias_sum",e[0].dataType,a,x));let M=Ne(e[0].dataType);return`\n\n      ${E.registerUniforms(O).declareVariables(...U)}\n\n      ${E.mainStart()}\n        ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\n        let offset = global_idx * hidden_size_vectorized;\n        var sum = ${Ze("f32",x)};\n        var squareSum = ${Ze("f32",x)};\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          let skip_value = skip[offset + i];\n          let bias_value = ${y?"bias[i]":"0.0"};\n          let input_value = x[offset + i];\n          let value = input_value + skip_value + bias_value;\n          ${v?"input_skip_bias_sum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32_value = ${gt(M,x,"value")};\n          sum += f32_value;\n          squareSum += f32_value * f32_value;\n        }\n        let mean = ${ut("sum",x)} / f32(uniforms.hidden_size);\n        let inv_std_dev = inverseSqrt(${ut("squareSum",x)} / f32(uniforms.hidden_size) - mean * mean + uniforms.epsilon);\n        ${w?"mean_output[global_idx] = mean;":""}\n        ${_?"inv_std_output[global_idx] = inv_std_dev;":""}\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          output[offset + i] = (output[offset + i] - ${M}(mean)) * ${M}(inv_std_dev) * gamma[i] + ${d?"beta[i]":"0.0"};\n        }\n      }`},S=[{dims:a,dataType:e[0].dataType}];return r>1&&S.push({dims:h,dataType:1}),r>2&&S.push({dims:h,dataType:1}),r>3&&S.push({dims:i,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${x};${w};${_};${v}`,inputDependencies:e.map((E,O)=>"type")},getShaderSource:C,getRunData:()=>({outputs:S,dispatchGroup:{x:Math.ceil(p/m/64)},programUniforms:T})}},Yu=(e,t)=>{sp(e.inputs);let o=[0];e.outputCount>1&&o.push(-3),e.outputCount>2&&o.push(-3),e.outputCount>3&&o.push(3),e.compute(up(e.inputs,t,e.outputCount,!1),{outputs:o})}});var lp,Vn,dp,Xu,cp,pp,Ju,Qu,el=Q(()=>{"use strict";Ve();Ce();Ye();_e();lp=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,o)=>{if(e[o+1].dataType!==6&&e[o+1].dataType!==7)throw new Error(`Input ${o} must be an array of int32 or int64`)})},Vn=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(o=>r.push(Number(o)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(o=>r.push(Number(o)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},dp=(e,t)=>{if(e.length>1){let r=Vn(e,1),o=Vn(e,2),i=Vn(e,3);return i.length===0&&(i=[...Array(e[0].dims.length).keys()]),xe({starts:r,ends:o,axes:i})}else return t},Xu=(e,t,r,o,i)=>{let u=e;return e<0&&(u+=r[o[t]]),i[t]<0?Math.max(0,Math.min(u,r[o[t]]-1)):Math.max(0,Math.min(u,r[o[t]]))},cp=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${r.length}; i >= 0; i--) {\n            let input_shape_i = ${ce("uniforms.input_shape","i",r.length)};\n            let steps_i = ${ce("uniforms.steps","i",r.length)};\n            let signs_i = ${ce("uniforms.signs","i",r.length)};\n            let starts_i = ${ce("uniforms.starts","i",r.length)};\n            var output_index = ${t.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,pp=(e,t)=>{let r=e[0].dims,o=W.size(r),i=t.axes.length>0?W.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],u=Vn(e,4);u.forEach(C=>C!==0||(()=>{throw new Error("step cannot be 0")})),u.length===0&&(u=Array(i.length).fill(1));let a=t.starts.map((C,S)=>Xu(C,S,r,i,u)),p=t.ends.map((C,S)=>Xu(C,S,r,i,u));if(i.length!==a.length||i.length!==p.length)throw new Error("start, ends and axes should have the same number of elements");if(i.length!==r.length)for(let C=0;C<r.length;++C)i.includes(C)||(a.splice(C,0,0),p.splice(C,0,r[C]),u.splice(C,0,1));let m=u.map(C=>Math.sign(C));u.forEach((C,S,E)=>{if(C<0){let O=(p[S]-a[S])/C,U=a[S],M=U+O*u[S];a[S]=M,p[S]=U,E[S]=-C}});let h=r.slice(0);i.forEach((C,S)=>{h[C]=Math.ceil((p[C]-a[C])/u[C])});let d={dims:h,dataType:e[0].dataType},y=J("output",e[0].dataType,h.length),w=V("input",e[0].dataType,e[0].dims.length),_=W.size(h),v=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:a.length},{name:"signs",type:"i32",length:m.length},{name:"steps",type:"u32",length:u.length}],x=[{type:"uint32",data:_},{type:"uint32",data:a},{type:"int32",data:m},{type:"uint32",data:u},...G(e[0].dims),...G(h)],T=C=>`\n      ${C.registerUniforms(v).declareVariables(w,y)}\n        ${cp(w,y,r)}\n        ${C.mainStart()}\n          ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${y.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${y.setByOffset("global_idx",w.getByIndices("input_indices"))}\n      }`;return{name:"Slice",shaderCache:{hint:`${m.length}_${a.length}_${u.length}`,inputDependencies:["rank"]},getShaderSource:T,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:x})}},Ju=(e,t)=>{lp(e.inputs,t);let r=dp(e.inputs,t);e.compute(pp(e.inputs,r),{inputs:[0]})},Qu=e=>{let t=e.starts,r=e.ends,o=e.axes;return xe({starts:t,ends:r,axes:o})}});var mp,fp,tl,rl,nl=Q(()=>{"use strict";Ce();Ye();_e();mp=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},fp=(e,t)=>{let r=e.dims,o=W.size(r),i=64,u=t.axis;if(u<0&&(u=r.length+u),u<r.length-1)throw new Error("softmax only supports last axis for now.");let a=r[u],p=o/a,m=He(a),h=a/m,d=(T,C)=>C===4?`max(max(${T}.x, ${T}.y), max(${T}.z, ${T}.w))`:C===2?`max(${T}.x, ${T}.y)`:C===3?`max(max(${T}.x, ${T}.y), ${T}.z)`:T,y=V("x",e.dataType,e.dims,m),w=J("result",e.dataType,e.dims,m),_=y.type.value,v=Ne(e.dataType)==="f32"?`var threadMax = ${_}(-3.402823e+38f);`:`var threadMax = ${_}(-65504.0h);`,x=T=>`\n      var<workgroup> rowMaxShared : ${_};\n      var<workgroup> rowSumShared : ${_};\n      var<workgroup> threadShared : array<${_}, ${i}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${_} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${_}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${T.registerUniform("packedCols","i32").declareVariables(y,w)}\n      ${T.mainStart()}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = ${i};\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${v}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${_}(${d("threadShared[0]",m)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${_}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${_}(${ut("threadShared[0]",m)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`;return{name:"Softmax",shaderCache:{hint:`${m}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.dataType}],dispatchGroup:{x:p},programUniforms:[{type:"uint32",data:h}]}),getShaderSource:x}},tl=(e,t)=>{mp(e.inputs),e.compute(fp(e.inputs[0],t))},rl=e=>xe({axis:e.axis})});var hp,gp,yp,bp,wp,ol,il,al=Q(()=>{"use strict";Ce();Ye();_e();hp=e=>{if(!e||e.length<1)throw new Error("too few inputs")},gp=(e,t)=>{let r=[],o=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(i=>r.push(Number(i))),o=r.length),xe({numOutputs:o,axis:t.axis,splitSizes:r})},yp=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${ce("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,bp=e=>{let t=e.length,r=[];for(let o=0;o<t;++o){let i=e[o].setByIndices("indices","input[global_idx]");t===1?r.push(i):o===0?r.push(`if (output_number == ${o}u) { ${i} }`):o===t-1?r.push(`else { ${i} }`):r.push(`else if (output_number == ${o}) { ${i} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${r.join(`\n`)}\n      }`},wp=(e,t)=>{let r=e[0].dims,o=W.size(r),i=e[0].dataType,u=W.normalizeAxis(t.axis,r.length),a=new Array(t.numOutputs),p=V("input",i,r),m=new Array(t.numOutputs),h=[],d=[],y=0,w=[{type:"uint32",data:o}];for(let v=0;v<t.numOutputs;v++){y+=t.splitSizes[v],m[v]=y;let x=r.slice();x[t.axis]=t.splitSizes[v],d.push(x),a[v]=J(`output${v}`,i,x),h.push({dims:d[v],dataType:e[0].dataType})}w.push({type:"uint32",data:m}),w.push(...G(r)),d.forEach(v=>w.push(...G(v)));let _=v=>`\n  ${v.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",m.length).declareVariables(p,...a)}\n  ${yp(m.length)}\n  ${bp(a)}\n\n  ${v.mainStart()}\n    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${p.offsetToIndices("global_idx")};\n    var index = ${p.indicesGet("indices",u)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${ce("uniforms.size_in_split_axis","output_number - 1u",m.length)};\n      ${p.indicesSet("indices",u,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:_,getRunData:()=>({outputs:h,dispatchGroup:{x:Math.ceil(o/64)},programUniforms:w})}},ol=(e,t)=>{hp(e.inputs);let r=e.inputs.length===1?t:gp(e.inputs,t);e.compute(wp(e.inputs,r),{inputs:[0]})},il=e=>{let t=e.axis,r=e.splitSizes,o=e.numOutputs<0?r.length:e.numOutputs;if(o!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return xe({axis:t,numOutputs:o,splitSizes:r})}});var sl,vp,$p,_p,ul,ll=Q(()=>{"use strict";Ve();Ce();_e();sl=e=>Array.from(e.getBigInt64Array(),Number),vp=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(sl(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},$p=(e,t)=>{let r=[];for(let o=0;o<e.length;++o)r.push(e[o]*t[o]);return r},_p=e=>{let t=e[0].dims,r=sl(e[1]),o=$p(t,r),i=W.size(o),u=e[0].dataType,a=V("input",u,t.length),p=J("output",u,o.length),m=h=>`\n      const inputShape = ${a.indices(...t)};\n      ${h.registerUniform("output_size","u32").declareVariables(a,p)}\n      ${h.mainStart()}\n      ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${p.offsetToIndices("global_idx")};\n      var input_indices: ${a.type.indices};\n      for (var i = 0; i < ${t.length}; i++) {\n        let input_dim_i = ${a.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${p.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${a.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${p.setByOffset("global_idx",a.getByIndices("input_indices"))}\n    }`;return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:"uint32",data:i},...G(e[0].dims),...G(o)]}),getShaderSource:m}},ul=e=>{vp(e.inputs),e.compute(_p(e.inputs),{inputs:[0]})}});var Sp,xp,dl,cl=Q(()=>{"use strict";Ve();Ce();_e();Sp=(e,t,r,o,i)=>{let u=J("output_data",i,r.length,4),a=V("a_data",t[1].dataType,t[1].dims.length,4),p=V("b_data",t[2].dataType,t[2].dims.length,4),m=V("c_data",t[0].dataType,t[0].dims.length,4),h,d=(y,w,_)=>`select(${w}, ${y}, ${_})`;if(!o)h=u.setByOffset("global_idx",d(a.getByOffset("global_idx"),p.getByOffset("global_idx"),m.getByOffset("global_idx")));else{let y=(w,_,v="")=>{let x=`a_data[index_a${_}][component_a${_}]`,T=`b_data[index_b${_}][component_b${_}]`,C=`bool(c_data[index_c${_}] & ${4278190080>>>(3-_)*8}u)`;return`\n            let output_indices${_} = ${u.offsetToIndices(`global_idx * 4u + ${_}u`)};\n            let offset_a${_} = ${a.broadcastedIndicesToOffset(`output_indices${_}`,u)};\n            let offset_b${_} = ${p.broadcastedIndicesToOffset(`output_indices${_}`,u)};\n            let offset_c${_} = ${m.broadcastedIndicesToOffset(`output_indices${_}`,u)};\n            let index_a${_} = offset_a${_} / 4u;\n            let index_b${_} = offset_b${_} / 4u;\n            let index_c${_} = offset_c${_} / 4u;\n            let component_a${_} = offset_a${_} % 4u;\n            let component_b${_} = offset_b${_} % 4u;\n            ${w}[${_}] = ${v}(${d(x,T,C)});\n          `};i===9?h=`\n            var data = vec4<u32>(0);\n            ${y("data",0,"u32")}\n            ${y("data",1,"u32")}\n            ${y("data",2,"u32")}\n            ${y("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:h=`\n            ${y("output_data[global_idx]",0)}\n            ${y("output_data[global_idx]",1)}\n            ${y("output_data[global_idx]",2)}\n            ${y("output_data[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(m,a,p,u)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${h}\n      }`},xp=e=>{let t=e[1].dims,r=e[2].dims,o=e[0].dims,i=e[1].dataType,u=!(W.areEqual(t,r)&&W.areEqual(r,o)),a=t,p=W.size(t);if(u){let h=vt.calcShape(vt.calcShape(t,r,!1),o,!1);if(!h)throw new Error("Can\'t perform where op on the given tensors");a=h,p=W.size(a)}let m=Math.ceil(p/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:h=>Sp(h,e,a,u,i),getRunData:()=>({outputs:[{dims:a,dataType:i}],dispatchGroup:{x:Math.ceil(p/64/4)},programUniforms:[{type:"uint32",data:m},...G(o),...G(t),...G(r),...G(a)]})}},dl=e=>{e.compute(xp(e.inputs))}});var pl,ml=Q(()=>{"use strict";Da();xo();Ua();Wa();$s();ks();Ds();Eo();Ys();Js();nu();au();lu();pu();hu();yu();wu();Oo();Su();Cu();Hu();Lu();In();Ku();Zu();el();nl();al();ll();pr();Co();cl();pl=new Map([["Abs",[Na]],["Acos",[Ha]],["Acosh",[Ga]],["Add",[_s]],["ArgMax",[Ba,So]],["ArgMin",[Ra,So]],["Asin",[La]],["Asinh",[Fa]],["Atan",[ja]],["Atanh",[qa]],["Attention",[Ma]],["AveragePool",[Ru,ku]],["BatchNormalization",[za]],["BiasAdd",[Va]],["BiasSplitGelu",[vs]],["Cast",[Ya,Ka]],["Ceil",[Xa]],["Clip",[Za]],["Concat",[Rs,Bs]],["Conv",[Ro,ko]],["ConvTranspose",[Ks,qs]],["Cos",[Ja]],["Cosh",[Qa]],["CumSum",[Zs,Xs]],["Div",[Ss]],["Einsum",[tu,ru]],["Elu",[es,Pn]],["Equal",[xs]],["Erf",[ts]],["Exp",[rs]],["Expand",[iu]],["Floor",[ns]],["FusedConv",[Ro,ko]],["Gather",[uu,su]],["GatherElements",[cu,du]],["Gelu",[os]],["Gemm",[fu,mu]],["GlobalAveragePool",[Mu,Du]],["GlobalMaxPool",[Nu,Wu]],["Greater",[Ts]],["GreaterOrEqual",[Ps]],["HardSigmoid",[ps,cs]],["InstanceNormalization",[gu]],["LayerNormalization",[bu]],["LeakyRelu",[is,Pn]],["Less",[Es]],["LessOrEqual",[Os]],["Log",[ws]],["MatMul",[Ws]],["MaxPool",[Uu,Vu]],["Mul",[Cs]],["MultiHeadAttention",[_u,$u]],["Neg",[ss]],["Not",[as]],["Pad",[xu]],["Pow",[As]],["Range",[Gu]],["Reciprocal",[us]],["ReduceMin",[Ia]],["ReduceMean",[_a]],["ReduceMax",[Aa]],["ReduceSum",[Ea]],["ReduceProd",[Ta]],["ReduceL1",[Sa]],["ReduceL2",[xa]],["ReduceLogSum",[Oa]],["ReduceLogSumExp",[Ca]],["ReduceSumSquare",[Pa]],["Relu",[ls]],["Resize",[ju,qu]],["Sigmoid",[ds]],["Sin",[ms]],["Sinh",[fs]],["Slice",[Ju,Qu]],["SkipLayerNormalization",[Yu]],["Split",[ol,il]],["Sqrt",[hs]],["Softmax",[tl,rl]],["Sub",[Is]],["Tan",[gs]],["Tanh",[ys]],["ThresholdedRelu",[bs,Pn]],["Tile",[ul]],["Transpose",[la,da]],["Where",[dl]]])});var Wn,fl=Q(()=>{"use strict";dr();zt();_e();Wn=class{constructor(t){this.backend=t;this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,o,i,u){Yt(t.programInfo.name);let a=this.backend.device,p=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2),p.setPipeline(t.computePipeline);let m=[];for(let d of r)m.push({binding:m.length,resource:{buffer:d.buffer}});for(let d of o)m.push({binding:m.length,resource:{buffer:d.buffer}});u&&m.push({binding:m.length,resource:u});let h=a.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:m,label:t.programInfo.name});p.setBindGroup(0,h),p.dispatchWorkgroups(...i),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Zt(t.programInfo.name)}dispose(){}build(t,r){Yt(t.name);let o=this.backend.device,i=[];o.features.has("shader-f16")&&i.push("enable f16;");let u=sa(r),a=t.getShaderSource(u),p=`${i.join(`\n`)}\n${u.additionalImplementations}\n${a}`,m=o.createShaderModule({code:p,label:t.name});De("verbose",()=>`[WebGPU] ${t.name} shader code: ${p}`);let h=o.createComputePipeline({compute:{module:m,entryPoint:"main"},layout:"auto",label:t.name});return Zt(t.name),{programInfo:t,computePipeline:h}}normalizeDispatchGroupSize(t){let r=typeof t=="number"?t:t.x,o=typeof t=="number"?1:t.y||1,i=typeof t=="number"?1:t.z||1,u=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=u&&o<=u&&i<=u)return[r,o,i];let a=r*o*i,p=Math.ceil(Math.sqrt(a));if(p>u){if(p=Math.ceil(Math.cbrt(a)),p>u)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[p,p,p]}else return[p,p,1]}}});var Cp,Ap,Nn,hl=Q(()=>{"use strict";dr();Ve();zt();ra();aa();ml();fl();Cp=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let o=0;o<e.length;++o){let i=e[o].dataType;switch(t[o]){case"none":{r.push("");break}case"type":{r.push(`${i}`);break}case"rank":{let u=e[o].dims.length;r.push(`${i};${u}`);break}case"dims":{let u=e[o].dims.join(",");r.push(`${i};${u}`);break}default:throw new Error(`unsupported input dependency: ${t[o]}`)}}return r.join("|")},Ap=(e,t,r)=>{let o=e.name;return e.shaderCache?.hint&&(o+="["+e.shaderCache.hint+"]"),o+=":"+r+`:${Cp(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,o},Nn=class{constructor(){this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,r){this.env=t;let o=[],i={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:o};r.features.has("chromium-experimental-timestamp-query-inside-passes")?o.push("chromium-experimental-timestamp-query-inside-passes"):r.features.has("timestamp-query")&&o.push("timestamp-query"),r.features.has("shader-f16")&&o.push("shader-f16"),this.device=await r.requestDevice(i),this.gpuDataManager=ia(this),this.programManager=new Wn(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,ea(t.logLevel,!!t.debug),this.device.onuncapturederror=u=>{u.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${u.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t={};this.queryType==="at-passes"&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=this.getCommandEncoder().beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Yt(),this.endComputePass();let t;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),t=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(t,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&t.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(t.getMappedRange()),o=this.pendingQueries.get(t);for(let i=0;i<r.length/2;i++){let u=o[i],a=u.kernelId,p=this.kernels.get(a),m=p.kernelType,h=p.kernelName,d=u.programName,y=u.inputTensorViews,w=u.outputTensorViews,_=r[i*2],v=r[i*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=_);let x=Number(_-this.queryTimeBase),T=Number(v-this.queryTimeBase);if(!Number.isSafeInteger(x)||!Number.isSafeInteger(T))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:y.map(C=>({dims:C.dims,dataType:st(C.dataType)})),outputsMetadata:w.map(C=>({dims:C.dims,dataType:st(C.dataType)})),kernelId:a,kernelType:m,kernelName:h,programName:d,startTime:x,endTime:T});else{let C="";y.forEach((E,O)=>{C+=`input[${O}]: [${E.dims}] | ${st(E.dataType)}, `});let S="";w.forEach((E,O)=>{S+=`output[${O}]: [${E.dims}] | ${st(E.dataType)}, `}),console.log(`[profiling] kernel "${a}|${m}|${h}|${d}" ${C}${S}execution time: ${T-x} ns`)}mo("GPU",`${d}::${_}::${v}`)}t.unmap(),this.pendingQueries.delete(t)}),Zt()}run(t,r,o,i,u){Yt(t.name);let a=[];for(let S=0;S<r.length;++S){let E=this.gpuDataManager.get(r[S].data);if(!E)throw new Error(`no GPU data for input: ${r[S].data}`);a[S]=E}let{outputs:p,dispatchGroup:m,programUniforms:h}=t.getRunData(r),d=o.length===0?p.map((S,E)=>E):o;if(d.length!==p.length)throw new Error(`Output size ${d.length} must be equal to ${p.length}.`);let y=[],w=[];for(let S=0;S<p.length;++S){if(!Number.isInteger(d[S])||d[S]<-3||d[S]>=p.length)throw new Error(`Invalid output index: ${d[S]}`);if(d[S]===-3)continue;let E=d[S]===-1,O=d[S]===-2,U=E||O?u(p[S].dataType,p[S].dims):i(d[S],p[S].dataType,p[S].dims),M=this.gpuDataManager.get(U.data);if(!M)throw new Error(`no GPU data for output: ${U.data}`);if(E&&this.temporaryData.push(M),O){let N=this.kernelPersistentData.get(this.currentKernelId);N||(N=[],this.kernelPersistentData.set(this.currentKernelId,N)),N.push(M)}y.push(U),w.push(M)}let _;if(h){let S=0,E=[];h.forEach(N=>{let Y=typeof N.data=="number"?[N.data]:N.data;if(Y.length===0)return;let se=N.type==="float16"?2:4,B,te;N.type==="float16"?(te=Y.length>4?16:Y.length>2?8:Y.length*se,B=Y.length>4?16:se*Y.length):(te=Y.length<=2?Y.length*se:16,B=16),S=Math.ceil(S/te)*te,E.push(S);let Pe=N.type==="float16"?8:4;S+=Y.length>4?Math.ceil(Y.length/Pe)*B:Y.length*se});let O=16;S=Math.ceil(S/O)*O;let U=new ArrayBuffer(S);h.forEach((N,Y)=>{let se=E[Y],B=typeof N.data=="number"?[N.data]:N.data;N.type==="int32"?new Int32Array(U,se,B.length).set(B):N.type==="uint32"?new Uint32Array(U,se,B.length).set(B):N.type==="float16"?new Uint16Array(U,se,B.length).set(B):new Float32Array(U,se,B.length).set(B)});let M=this.gpuDataManager.create(S,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(M.buffer,0,U,0,S),this.gpuDataManager.release(M.id),_={offset:0,size:S,buffer:M.buffer}}let v=this.programManager.normalizeDispatchGroupSize(m),x=v[1]===1&&v[2]===1,T=Ap(t,r,x),C=this.programManager.getArtifact(T);if(C||(C=this.programManager.build(t,v),this.programManager.setArtifact(T,C),De("info",()=>`[artifact] key: ${T}, programName: ${t.name}`)),De("info",()=>`[ProgramManager] run "${t.name}" (key=${T}) with ${v[0]}x${v[1]}x${v[2]}`),this.queryType!=="none"){let S={kernelId:this.currentKernelId,programName:C.programInfo.name,inputTensorViews:r,outputTensorViews:y};this.pendingKernels.push(S)}return this.programManager.run(C,a,w,v,_),Zt(t.name),y}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,o,i){let u=pl.get(t);if(!u)throw new Error(`kernel not implemented: ${t}`);let a={kernelType:t,kernelName:i,kernelEntry:u[0],attributes:[u[1],o]};this.kernels.set(r,a)}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let o of r)this.gpuDataManager.release(o.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,o){let i=this.kernels.get(t);if(!i)throw new Error(`kernel not created: ${t}`);let u=i.kernelType,a=i.kernelName,p=i.kernelEntry,m=i.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${u}] ${a}" is not allowed to be called recursively`);this.currentKernelId=t,m[0]&&(m[1]=m[0](m[1]),m[0]=void 0),De("info",()=>`[WebGPU] Start to run kernel "[${u}] ${a}"...`);let h=this.env.debug;this.temporaryData=[];try{return h&&this.device.pushErrorScope("validation"),p(r,m[1]),0}catch(d){return o.push(Promise.resolve(`[WebGPU] Kernel "[${u}] ${a}" failed. ${d}`)),1}finally{h&&o.push(this.device.popErrorScope().then(d=>d?`GPU validation error for kernel "[${u}] ${a}": ${d.message}`:null));for(let d of this.temporaryData)this.gpuDataManager.release(d.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,o,i){let u=this.sessionExternalDataMapping.get(t);u||(u=new Map,this.sessionExternalDataMapping.set(t,u));let a=u.get(r),p=this.gpuDataManager.registerExternalBuffer(o,i,a?.[1]);return u.set(r,[p,o]),p}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(o=>this.gpuDataManager.unregisterExternalBuffer(o[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw new Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,o){return async()=>{let i=await go(this,t,r);return ta(i.buffer,o)}}writeTimestamp(t){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,t)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||this.env.wasm.trace)&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}onRunStart(){this.setQueryType()}}});var gl={};hn(gl,{init:()=>Ip});var Nr,Vo,Ip,yl=Q(()=>{"use strict";Ve();hl();zt();Ce();Nr=class e{constructor(t,r,o,i){this.module=t;this.dataType=r;this.data=o;this.dims=i}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=W.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=W.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=W.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(W.size(t)!==W.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},Vo=class{constructor(t,r,o){this.module=t;this.backend=r;this.customDataOffset=0;this.customDataSize=0;let i=t.HEAPU32,u=o>>>2;this.opKernelContext=i[u++];let a=i[u++];this.outputCount=i[u++],this.customDataOffset=i[u++],this.customDataSize=i[u++];let p=[];for(let m=0;m<a;m++){let h=i[u++],d=i[u++],y=i[u++],w=[];for(let _=0;_<y;_++)w.push(i[u++]);p.push(new Nr(t,h,d,w))}this.inputs=p}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(t,r){let o=r?.inputs?.map(p=>typeof p=="number"?this.inputs[p]:p)??this.inputs,i=r?.outputs??[],u=(p,m,h)=>new Nr(this.module,m,this.output(p,h),h),a=(p,m)=>{let h=Mr(p);if(!h)throw new Error(`Unsupported data type: ${p}`);let d=h*W.size(m);return new Nr(this.module,p,this.backend.gpuDataManager.create(d).id,m)};return this.backend.run(t,o,i,u,a)}output(t,r){let o=this.module.stackSave();try{let i=this.module.stackAlloc((1+r.length)*4),u=i>>2;this.module.HEAPU32[u++]=r.length;for(let a=0;a<r.length;a++)this.module.HEAPU32[u++]=r[a];return this.module._JsepOutput(this.opKernelContext,t,i)}catch(i){throw new Error(`Failed to generate kernel\'s output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${i}`)}finally{this.module.stackRestore(o)}}},Ip=async(e,t,r)=>{let o=e.jsepInit;if(!o)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");let i=new Nn;await i.initialize(t,r),o(i,u=>i.alloc(u),u=>i.free(u),(u,a,p,m=!1)=>{if(m)De("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${u}, dst=${a}, size=${p}`),i.memcpy(u,a);else{De("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${u}, gpuDataId=${a}, size=${p}`);let h=e.HEAPU8.subarray(u>>>0,(u>>>0)+p);i.upload(a,h)}},async(u,a,p)=>{De("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${u}, dataOffset=${a}, size=${p}`),await i.download(u,()=>e.HEAPU8.subarray(a>>>0,(a>>>0)+p))},(u,a,p)=>i.createKernel(u,a,p,e.UTF8ToString(e._JsepGetNodeName(a))),u=>i.releaseKernel(u),(u,a,p,m)=>{De("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${p}, kernel=${u}, contextDataOffset=${a}`);let h=new Vo(e,i,a);return i.computeKernel(u,h,m)})}});var Pi;Pi=vi();var Nl=Ii(),so,uo=!1,gn=!1,Ei=!1,Hl=e=>{if(e===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Gl=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Ll=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Oi=async e=>{if(uo)return Promise.resolve();if(gn)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(Ei)throw new Error("previous call to \'initializeWebAssembly()\' failed.");gn=!0;let t=e.initTimeout,r=e.numThreads,o=e.simd,i=Hl(r),u=o&&Gl(),a=e.wasmPaths,p=typeof a=="string"?a:void 0,m=Ll(u,i),h=typeof a=="object"?a[m]:void 0,d=!1,y=[];if(t>0&&y.push(new Promise(w=>{setTimeout(()=>{d=!0,w()},t)})),y.push(new Promise((w,_)=>{let v=i?Nl:Pi,x={locateFile:(T,C)=>{if(i&&T.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Ti()],{type:"text/javascript"}));if(T.endsWith(".wasm")){if(h)return h;let S=p??C;return m==="ort-wasm-simd.wasm"?S+"ort-wasm-simd.jsep.wasm":m==="ort-wasm-simd-threaded.wasm"?S+"ort-wasm-simd-threaded.jsep.wasm":S+m}return C+T}};if(i)if(x.numThreads=r,typeof Blob>"u")x.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let T=`var ortWasmThreaded=${v.toString()};`;x.mainScriptUrlOrBlob=new Blob([T],{type:"text/javascript"})}v(x).then(T=>{gn=!1,uo=!0,so=T,w()},T=>{gn=!1,Ei=!0,_(T)})})),await Promise.race(y),d)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Ue=()=>{if(uo&&so)return so;throw new Error("WebAssembly is not initialized yet.")};var We=(e,t)=>{let r=Ue(),o=r.lengthBytesUTF8(e)+1,i=r._malloc(o);return r.stringToUTF8(e,i,o),t.push(i),i},Dr=(e,t,r,o)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([i,u])=>{let a=t?t+i:i;if(typeof u=="object")Dr(u,a+".",r,o);else if(typeof u=="string"||typeof u=="number")o(a,u.toString());else if(typeof u=="boolean")o(a,u?"1":"0");else throw new Error(`Can\'t handle extra config type: ${typeof u}`)})},Be=e=>{let t=Ue(),r=t.stackSave();try{let o=t.stackAlloc(8);t._OrtGetLastError(o,o+4);let i=t.HEAP32[o/4],u=t.HEAPU32[o/4+1],a=u?t.UTF8ToString(u):"";throw new Error(`${e} ERROR_CODE: ${i}, ERROR_MESSAGE: ${a}`)}finally{t.stackRestore(r)}};var ki=e=>{let t=Ue(),r=0,o=[],i=e||{};try{if(e?.logSeverityLevel===void 0)i.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)i.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(i.terminate=!1);let u=0;return e?.tag!==void 0&&(u=We(e.tag,o)),r=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,u),r===0&&Be("Can\'t create run options."),e?.extra!==void 0&&Dr(e.extra,"",new WeakSet,(a,p)=>{let m=We(a,o),h=We(p,o);t._OrtAddRunConfigEntry(r,m,h)!==0&&Be(`Can\'t set a run config entry: ${a} - ${p}.`)}),[r,o]}catch(u){throw r!==0&&t._OrtReleaseRunOptions(r),o.forEach(a=>t._free(a)),u}};var Fl=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},jl=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},ql=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},Kl=(e,t,r)=>{for(let o of t){let i=typeof o=="string"?o:o.name;switch(i){case"webnn":if(i="WEBNN",typeof o!="string"){let a=o;if(a?.deviceType){let p=We("deviceType",r),m=We(a.deviceType,r);Ue()._OrtAddSessionConfigEntry(e,p,m)!==0&&Be(`Can\'t set a session config entry: \'deviceType\' - ${a.deviceType}.`)}if(a?.numThreads){let p=a.numThreads;(typeof p!="number"||!Number.isInteger(p)||p<0)&&(p=0);let m=We("numThreads",r),h=We(p.toString(),r);Ue()._OrtAddSessionConfigEntry(e,m,h)!==0&&Be(`Can\'t set a session config entry: \'numThreads\' - ${a.numThreads}.`)}if(a?.powerPreference){let p=We("powerPreference",r),m=We(a.powerPreference,r);Ue()._OrtAddSessionConfigEntry(e,p,m)!==0&&Be(`Can\'t set a session config entry: \'powerPreference\' - ${a.powerPreference}.`)}}break;case"webgpu":if(i="JS",typeof o!="string"){let a=o;if(a?.preferredLayout){if(a.preferredLayout!=="NCHW"&&a.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either \'NCHW\' or \'NHWC\': ${a.preferredLayout}`);let p=We("preferredLayout",r),m=We(a.preferredLayout,r);Ue()._OrtAddSessionConfigEntry(e,p,m)!==0&&Be(`Can\'t set a session config entry: \'preferredLayout\' - ${a.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${i}`)}let u=We(i,r);Ue()._OrtAppendExecutionProvider(e,u)!==0&&Be(`Can\'t append execution provider: ${i}.`)}},Ri=e=>{let t=Ue(),r=0,o=[],i=e||{};ql(i);try{let u=Fl(i.graphOptimizationLevel??"all"),a=jl(i.executionMode??"sequential"),p=typeof i.logId=="string"?We(i.logId,o):0,m=i.logSeverityLevel??2;if(!Number.isInteger(m)||m<0||m>4)throw new Error(`log serverity level is not valid: ${m}`);let h=i.logVerbosityLevel??0;if(!Number.isInteger(h)||h<0||h>4)throw new Error(`log verbosity level is not valid: ${h}`);let d=typeof i.optimizedModelFilePath=="string"?We(i.optimizedModelFilePath,o):0;if(r=t._OrtCreateSessionOptions(u,!!i.enableCpuMemArena,!!i.enableMemPattern,a,!!i.enableProfiling,0,p,m,h,d),r===0&&Be("Can\'t create session options."),i.executionProviders&&Kl(r,i.executionProviders,o),i.freeDimensionOverrides)for(let[y,w]of Object.entries(i.freeDimensionOverrides)){if(typeof y!="string")throw new Error(`free dimension override name must be a string: ${y}`);if(typeof w!="number"||!Number.isInteger(w)||w<0)throw new Error(`free dimension override value must be a non-negative integer: ${w}`);let _=We(y,o);t._OrtAddFreeDimensionOverride(r,_,w)!==0&&Be(`Can\'t set a free dimension override: ${y} - ${w}.`)}return i.extra!==void 0&&Dr(i.extra,"",new WeakSet,(y,w)=>{let _=We(y,o),v=We(w,o);t._OrtAddSessionConfigEntry(r,_,v)!==0&&Be(`Can\'t set a session config entry: ${y} - ${w}.`)}),[r,o]}catch(u){throw r!==0&&t._OrtReleaseSessionOptions(r),o.forEach(a=>t._free(a)),u}};Ve();var Di=async e=>{if(typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(e))}catch(t){if(t.code==="ERR_FS_FILE_TOO_LARGE"){let r=(void 0)(e),o=[];for await(let i of r)o.push(i);return new Uint8Array(Buffer.concat(o))}throw t}else{let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),o=r?parseInt(r,10):0;if(o<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let i=t.body.getReader(),u;try{u=new ArrayBuffer(o)}catch(p){if(p instanceof RangeError){let m=Math.ceil(o/65536);u=new WebAssembly.Memory({initial:m,maximum:m}).buffer}else throw p}let a=0;for(;;){let{done:p,value:m}=await i.read();if(p)break;let h=m.byteLength;new Uint8Array(u,a,h).set(m),a+=h}return new Uint8Array(u,0,o)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)};var Tp=(e,t)=>{Ue()._OrtInit(e,t)!==0&&Be("Can\'t initialize onnxruntime.")},wl=async e=>{Tp(e.wasm.numThreads,zr(e.logLevel))},vl=async(e,t)=>{if(t==="webgpu"||t==="webnn"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let r=await navigator.gpu.requestAdapter();if(!r)throw new Error(\'Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.\');if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");let o=(yl(),ur(gl)).init;await o(Ue(),e,r)}},Hr=new Map,Ep=e=>{let t=Ue(),r=t.stackSave();try{let o=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,o,o+4)!==0&&Be("Can\'t get session input/output count."),[t.HEAP32[o/4],t.HEAP32[o/4+1]]}finally{t.stackRestore(r)}},Wo=e=>{let t=Ue(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},$l=async(e,t)=>{let r,o,i=Ue();Array.isArray(e)?[r,o]=e:e.buffer===i.HEAPU8.buffer?[r,o]=[e.byteOffset,e.byteLength]:[r,o]=Wo(e);let u=0,a=0,p=0,m=[],h=[],d=[];try{if([a,m]=Ri(t),t?.externalData&&i.mountExternalData){let C=[];for(let S of t.externalData){let E=typeof S=="string"?S:S.path;C.push(Di(typeof S=="string"?S:S.data).then(O=>{i.mountExternalData(E,O)}))}await Promise.all(C)}u=await i._OrtCreateSession(r,o,a),u===0&&Be("Can\'t create a session.");let[y,w]=Ep(u),_=[],v=[],x=[];for(let C=0;C<y;C++){let S=i._OrtGetInputName(u,C);S===0&&Be("Can\'t get an input name."),h.push(S),_.push(i.UTF8ToString(S))}for(let C=0;C<w;C++){let S=i._OrtGetOutputName(u,C);S===0&&Be("Can\'t get an output name."),d.push(S);let E=i.UTF8ToString(S);v.push(E);{let O=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[E]??"cpu";if(O!=="cpu"&&O!=="cpu-pinned"&&O!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${O}.`);x.push(O)}}let T=null;return x.some(C=>C==="gpu-buffer")&&(p=i._OrtCreateBinding(u),p===0&&Be("Can\'t create IO binding."),T={handle:p,outputPreferredLocations:x,outputPreferredLocationsEncoded:x.map(C=>co(C))}),Hr.set(u,[u,h,d,T]),[u,_,v]}catch(y){throw h.forEach(w=>i._OrtFree(w)),d.forEach(w=>i._OrtFree(w)),p!==0&&i._OrtReleaseBinding(p),u!==0&&i._OrtReleaseSession(u),y}finally{i._free(r),a!==0&&i._OrtReleaseSessionOptions(a),m.forEach(y=>i._free(y)),i.unmountExternalData?.()}},_l=e=>{let t=Ue(),r=Hr.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[o,i,u,a]=r;a&&t._OrtReleaseBinding(a.handle),t.jsepUnregisterBuffers?.(e),i.forEach(p=>t._OrtFree(p)),u.forEach(p=>t._OrtFree(p)),t._OrtReleaseSession(o),Hr.delete(e)},bl=(e,t,r,o,i)=>{if(!e){t.push(0);return}let u=Ue(),a=e[0],p=e[1],m=e[3],h,d;if(a==="string"&&m==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(m==="gpu-buffer"){let _=e[2].gpuBuffer,v=Mr(lo(a));d=p.reduce((x,T)=>x*T,1)*v,h=u.jsepRegisterBuffer(o,i,_,d)}else{let _=e[2];if(Array.isArray(_)){d=4*_.length,h=u._malloc(d),r.push(h);let v=h/4;for(let x=0;x<_.length;x++){if(typeof _[x]!="string")throw new TypeError(`tensor data at index ${x} is not a string`);u.HEAPU32[v++]=We(_[x],r)}}else d=_.byteLength,h=u._malloc(d),r.push(h),u.HEAPU8.set(new Uint8Array(_.buffer,_.byteOffset,d),h)}let y=u.stackSave(),w=u.stackAlloc(4*p.length);try{let _=w/4;p.forEach(x=>u.HEAP32[_++]=x);let v=u._OrtCreateTensor(lo(a),h,d,w,p.length,co(m));v===0&&Be(`Can\'t create tensor for input/output. session=${o}, index=${i}.`),t.push(v)}finally{u.stackRestore(y)}},Sl=async(e,t,r,o,i,u)=>{let a=Ue(),p=Hr.get(e);if(!p)throw new Error(`cannot run inference. invalid session id: ${e}`);let[m,h,d,y]=p,w=t.length,_=o.length,v=0,x=[],T=[],C=[],S=[],E=a.stackSave(),O=a.stackAlloc(w*4),U=a.stackAlloc(w*4),M=a.stackAlloc(_*4),N=a.stackAlloc(_*4);try{[v,x]=ki(u);for(let ee=0;ee<w;ee++)bl(r[ee],T,S,e,t[ee]);for(let ee=0;ee<_;ee++)bl(i[ee],C,S,e,w+o[ee]);let Y=O/4,se=U/4,B=M/4,te=N/4;for(let ee=0;ee<w;ee++)a.HEAPU32[Y++]=T[ee],a.HEAPU32[se++]=h[t[ee]];for(let ee=0;ee<_;ee++)a.HEAPU32[B++]=C[ee],a.HEAPU32[te++]=d[o[ee]];if(y){let{handle:ee,outputPreferredLocations:be,outputPreferredLocationsEncoded:Me}=y;if(h.length!==w)throw new Error(`input count from feeds (${w}) is expected to be always equal to model\'s input count (${h.length}).`);for(let pe=0;pe<w;pe++){let ye=t[pe];await a._OrtBindInput(ee,h[ye],T[pe])!==0&&Be(`Can\'t bind input[${pe}] for session=${e}.`)}for(let pe=0;pe<_;pe++){let ye=o[pe];i[pe]?.[3]?a._OrtBindOutput(ee,d[ye],C[pe],0)!==0&&Be(`Can\'t bind pre-allocated output[${pe}] for session=${e}.`):a._OrtBindOutput(ee,d[ye],0,Me[ye])!==0&&Be(`Can\'t bind output[${pe}] to ${be[pe]} for session=${e}.`)}}a.jsepOnRunStart?.();let Pe;y?Pe=await a._OrtRunWithBinding(m,y.handle,_,M,v):Pe=await a._OrtRun(m,U,O,w,N,_,M,v),Pe!==0&&Be("failed to call OrtRun().");let Ee=[];for(let ee=0;ee<_;ee++){let be=a.HEAPU32[M/4+ee];if(be===C[ee]){Ee.push(i[ee]);continue}let Me=a.stackSave(),pe=a.stackAlloc(4*4),ye=!1,de,we=0;try{a._OrtGetTensorData(be,pe,pe+4,pe+8,pe+12)!==0&&Be(`Can\'t access output tensor data on index ${ee}.`);let Re=pe/4,Ge=a.HEAPU32[Re++];we=a.HEAPU32[Re++];let F=a.HEAPU32[Re++],ie=a.HEAPU32[Re++],he=[];for(let ke=0;ke<ie;ke++)he.push(a.HEAPU32[F/4+ke]);a._OrtFree(F);let Xe=he.reduce((ke,Le)=>ke*Le,1);de=st(Ge);let nt=y?.outputPreferredLocations[o[ee]];if(de==="string"){if(nt==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let ke=[],Le=we/4;for(let It=0;It<Xe;It++){let Tt=a.HEAPU32[Le++],Vt=It===Xe-1?void 0:a.HEAPU32[Le]-Tt;ke.push(a.UTF8ToString(Tt,Vt))}Ee.push([de,he,ke,"cpu"])}else if(nt==="gpu-buffer"&&Xe>0){let ke=a.jsepGetBuffer(we),Le=Mr(Ge);if(Le===void 0||!Bi(de))throw new Error(`Unsupported data type: ${de}`);ye=!0,Ee.push([de,he,{gpuBuffer:ke,download:a.jsepCreateDownloader(ke,Xe*Le,de),dispose:()=>{a._OrtReleaseTensor(be)}},"gpu-buffer"])}else{let ke=yn(de),Le=new ke(Xe);new Uint8Array(Le.buffer,Le.byteOffset,Le.byteLength).set(a.HEAPU8.subarray(we,we+Le.byteLength)),Ee.push([de,he,Le,"cpu"])}}finally{a.stackRestore(Me),de==="string"&&we&&a._free(we),ye||a._OrtReleaseTensor(be)}}return y&&a._OrtClearBoundOutputs(y.handle),Ee}finally{a.stackRestore(E),T.forEach(Y=>a._OrtReleaseTensor(Y)),C.forEach(Y=>a._OrtReleaseTensor(Y)),S.forEach(Y=>a._free(Y)),v!==0&&a._OrtReleaseRunOptions(v),x.forEach(Y=>a._free(Y))}},xl=e=>{let t=Ue(),r=Hr.get(e);if(!r)throw new Error("invalid session id");let o=r[0],i=t._OrtEndProfiling(o);i===0&&Be("Can\'t get an profile file name."),t._OrtFree(i)},Cl=e=>{let t=[];for(let r of e){let o=r[2];!Array.isArray(o)&&"buffer"in o&&t.push(o.buffer)}return t};self.onmessage=e=>{let{type:t,in:r}=e.data;try{switch(t){case"init-wasm":Oi(r.wasm).then(()=>{wl(r).then(()=>{postMessage({type:t})},o=>{postMessage({type:t,err:o})})},o=>{postMessage({type:t,err:o})});break;case"init-ep":{let{epName:o,env:i}=r;vl(i,o).then(()=>{postMessage({type:t})},u=>{postMessage({type:t,err:u})});break}case"copy-from":{let{buffer:o}=r,i=Wo(o);postMessage({type:t,out:i});break}case"create":{let{model:o,options:i}=r;$l(o,i).then(u=>{postMessage({type:t,out:u})},u=>{postMessage({type:t,err:u})});break}case"release":_l(r),postMessage({type:t});break;case"run":{let{sessionId:o,inputIndices:i,inputs:u,outputIndices:a,options:p}=r;Sl(o,i,u,a,new Array(a.length).fill(null),p).then(m=>{m.some(h=>h[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:m},Cl(m))},m=>{postMessage({type:t,err:m})});break}case"end-profiling":xl(r),postMessage({type:t});break;default:}}catch(o){postMessage({type:t,err:o})}};})();\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n'});var Pn,dr,ei,Xa,Za,ol,il,oo,io,tT,Ya,f0,p0,h0,m0,g0,b0,y0,al=R(()=>{"use strict";Ot();d0();to();Pn=()=>!!ye.wasm.proxy&&typeof document<"u",ei=!1,Xa=!1,Za=!1,il=new Map,oo=(r,e)=>{let n=il.get(r);n?n.push(e):il.set(r,[e])},io=()=>{if(ei||!Xa||Za||!dr)throw new Error("worker not ready")},tT=r=>{switch(r.data.type){case"init-wasm":ei=!1,r.data.err?(Za=!0,ol[1](r.data.err)):(Xa=!0,ol[0]());break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let e=il.get(r.data.type);r.data.err?e.shift()[1](r.data.err):e.shift()[0](r.data.out);break}default:}},Ya=typeof document<"u"?document?.currentScript?.src:void 0,f0=async()=>{if(!Xa){if(ei)throw new Error("multiple calls to 'initWasm()' detected.");if(Za)throw new Error("previous call to 'initWasm()' failed.");if(ei=!0,Pn())return ye.wasm.wasmPaths===void 0&&Ya&&Ya.indexOf("blob:")!==0&&(ye.wasm.wasmPaths=Ya.substr(0,+Ya.lastIndexOf("/")+1)),new Promise((r,e)=>{dr?.terminate();let n=URL.createObjectURL(new Blob([c0()],{type:"text/javascript"}));dr=new Worker(n,{name:"ort-wasm-proxy-worker"}),dr.onerror=o=>e(o),dr.onmessage=tT,URL.revokeObjectURL(n),ol=[r,e];let t={type:"init-wasm",in:ye};dr.postMessage(t)});try{await Pm(ye.wasm),await n0(ye),Xa=!0}catch(r){throw Za=!0,r}finally{ei=!1}}},p0=async r=>{if(Pn())return io(),new Promise((e,n)=>{oo("init-ep",[e,n]);let t={type:"init-ep",in:{epName:r,env:ye}};dr.postMessage(t)});await o0(ye,r)},h0=async r=>Pn()?(io(),new Promise((e,n)=>{oo("copy-from",[e,n]);let t={type:"copy-from",in:{buffer:r}};dr.postMessage(t,[r.buffer])})):nl(r),m0=async(r,e)=>{if(Pn()){if(e?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return io(),new Promise((n,t)=>{oo("create",[n,t]);let o={type:"create",in:{model:r,options:e}},i=[];r instanceof Uint8Array&&i.push(r.buffer),dr.postMessage(o,i)})}else return i0(r,e)},g0=async r=>{if(Pn())return io(),new Promise((e,n)=>{oo("release",[e,n]);let t={type:"release",in:r};dr.postMessage(t)});a0(r)},b0=async(r,e,n,t,o,i)=>{if(Pn()){if(n.some(s=>s[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(o.some(s=>s))throw new Error("pre-allocated output tensor is not supported for proxy.");return io(),new Promise((s,a)=>{oo("run",[s,a]);let u=n,l={type:"run",in:{sessionId:r,inputIndices:e,inputs:u,outputIndices:t,options:i}};dr.postMessage(l,l0(u))})}else return s0(r,e,n,t,o,i)},y0=async r=>{if(Pn())return io(),new Promise((e,n)=>{oo("end-profiling",[e,n]);let t={type:"end-profiling",in:r};dr.postMessage(t)});u0(r)}});var v0,rT,Ja,w0=R(()=>{"use strict";Ot();al();st();Pu();v0=(r,e)=>{switch(r.location){case"cpu":return[r.type,r.dims,r.data,"cpu"];case"gpu-buffer":return[r.type,r.dims,{gpuBuffer:r.gpuBuffer},"gpu-buffer"];default:throw new Error(`invalid data location: ${r.location} for ${e()}`)}},rT=r=>{switch(r[3]){case"cpu":return new xt(r[0],r[2],r[1]);case"gpu-buffer":{let e=r[0];if(!Aa(e))throw new Error(`not supported data type: ${e} for deserializing GPU tensor`);let{gpuBuffer:n,download:t,dispose:o}=r[2];return xt.fromGpuBuffer(n,{dataType:e,dims:r[1],download:t,dispose:o})}default:throw new Error(`invalid data location: ${r[3]}`)}},Ja=class{async fetchModelAndCopyToWasmMemory(e){return h0(await Ko(e))}async loadModel(e,n){Ht();let t;typeof e=="string"?typeof process<"u"&&process.versions&&process.versions.node?t=await Ko(e):t=await this.fetchModelAndCopyToWasmMemory(e):t=e,[this.sessionId,this.inputNames,this.outputNames]=await m0(t,n),qt()}async dispose(){return g0(this.sessionId)}async run(e,n,t){Ht();let o=[],i=[];Object.entries(e).forEach(m=>{let b=m[0],v=m[1],w=this.inputNames.indexOf(b);if(w===-1)throw new Error(`invalid input '${b}'`);o.push(v),i.push(w)});let s=[],a=[];Object.entries(n).forEach(m=>{let b=m[0],v=m[1],w=this.outputNames.indexOf(b);if(w===-1)throw new Error(`invalid output '${b}'`);s.push(v),a.push(w)});let u=o.map((m,b)=>v0(m,()=>`input "${this.inputNames[i[b]]}"`)),l=s.map((m,b)=>m?v0(m,()=>`output "${this.outputNames[a[b]]}"`):null),d=await b0(this.sessionId,i,u,a,l,t),p={};for(let m=0;m<d.length;m++)p[this.outputNames[a[m]]]=s[m]??rT(d[m]);return qt(),p}startProfiling(){}endProfiling(){y0(this.sessionId)}}});var nT,Qa,x0=R(()=>{"use strict";Ot();al();w0();nT=()=>{if((typeof ye.wasm.initTimeout!="number"||ye.wasm.initTimeout<0)&&(ye.wasm.initTimeout=0),typeof ye.wasm.simd!="boolean"&&(ye.wasm.simd=!0),typeof ye.wasm.proxy!="boolean"&&(ye.wasm.proxy=!1),typeof ye.wasm.trace!="boolean"&&(ye.wasm.trace=!1),typeof ye.wasm.numThreads!="number"||!Number.isInteger(ye.wasm.numThreads)||ye.wasm.numThreads<=0){(typeof self<"u"&&!self.crossOriginIsolated||typeof process<"u"&&process.versions&&process.versions.node)&&(ye.wasm.numThreads=1);let r=typeof navigator>"u"?(void 0)().length:navigator.hardwareConcurrency;ye.wasm.numThreads=Math.min(4,Math.ceil((r||1)/2))}},Qa=class{async init(e){nT(),await f0(),await p0(e)}async createInferenceSessionHandler(e,n){let t=new Ja;return await t.loadModel(e,n),Promise.resolve(t)}}});var _0={};Zr(_0,{wasmBackend:()=>oT});var oT,T0=R(()=>{"use strict";x0();oT=new Qa});var aT={};Zr(aT,{InferenceSession:()=>id,TRACE:()=>Co,TRACE_FUNC_BEGIN:()=>Ht,TRACE_FUNC_END:()=>qt,Tensor:()=>xt,TrainingSession:()=>ld,default:()=>iT,env:()=>ye,registerBackend:()=>Gr});module.exports=Ur(aT);Ot();Ot();Ot();var cd="1.18.0";var iT=ms;{let r=(gm(),Ur(mm)).onnxjsBackend;Gr("webgl",r,-10)}{let r=(T0(),Ur(_0)).wasmBackend;Gr("webgpu",r,5),Gr("webnn",r,5),Gr("cpu",r,10),Gr("wasm",r,10)}Object.defineProperty(ye.versions,"web",{value:cd,enumerable:!0});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/*! Bundled license information:

long/index.js:
  (**
   * @license
   * Copyright 2009 The Closure Library Authors
   * Copyright 2020 Daniel Wirtz / The long.js Authors.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
//# sourceMappingURL=ort.all.min.js.map
