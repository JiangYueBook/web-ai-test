/*!
 * ONNX Runtime Web v1.18.0
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
var Ca=Object.defineProperty;var Pd=Object.getOwnPropertyDescriptor;var Rd=Object.getOwnPropertyNames;var Bd=Object.prototype.hasOwnProperty;var Q=(e,t)=>()=>(e&&(t=e(e=0)),t);var yr=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),br=(e,t)=>{for(var r in t)Ca(e,r,{get:t[r],enumerable:!0})},Md=(e,t,r,a)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of Rd(t))!Bd.call(e,i)&&i!==r&&Ca(e,i,{get:()=>t[i],enumerable:!(a=Pd(t,i))||a.enumerable});return e};var tr=e=>Md(Ca({},"__esModule",{value:!0}),e);var Tn,rr,nr,En,On=Q(()=>{"use strict";Tn=new Map,rr=[],nr=(e,t,r)=>{if(t&&typeof t.init=="function"&&typeof t.createInferenceSessionHandler=="function"){let a=Tn.get(e);if(a===void 0)Tn.set(e,{backend:t,priority:r});else{if(a.priority>r)return;if(a.priority===r&&a.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${r}`)}if(r>=0){let i=rr.indexOf(e);i!==-1&&rr.splice(i,1);for(let s=0;s<rr.length;s++)if(Tn.get(rr[s]).priority<=r){rr.splice(s,0,e);return}rr.push(e)}return}throw new TypeError("not a valid backend")},En=async e=>{let t=e.length===0?rr:e,r=[];for(let a of t){let i=Tn.get(a);if(i){if(i.initialized)return i.backend;if(i.aborted)continue;let s=!!i.initPromise;try{return s||(i.initPromise=i.backend.init(a)),await i.initPromise,i.initialized=!0,i.backend}catch(o){s||r.push({name:a,err:o}),i.aborted=!0}finally{delete i.initPromise}}}throw new Error(`no available backend found. ERR: ${r.map(a=>`[${a.name}] ${a.err}`).join(", ")}`)}});var qi=Q(()=>{"use strict";On()});var ji,Ki=Q(()=>{"use strict";ji="1.18.0"});var Yi,ar,Ia=Q(()=>{"use strict";Ki();Yi="warning",ar={wasm:{},webgl:{},webgpu:{},versions:{common:ji},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Yi=e}},get logLevel(){return Yi}};Object.defineProperty(ar,"logLevel",{enumerable:!0})});var Ae,Zi=Q(()=>{"use strict";Ia();Ae=ar});var Xi,Qi,Ji=Q(()=>{"use strict";Xi=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);r.width=e.dims[3],r.height=e.dims[2];let a=r.getContext("2d");if(a!=null){let i,s;t?.tensorLayout!==void 0&&t.tensorLayout==="NHWC"?(i=e.dims[2],s=e.dims[3]):(i=e.dims[3],s=e.dims[2]);let o=t?.format!==void 0?t.format:"RGB",c=t?.norm,p,m;c===void 0||c.mean===void 0?p=[255,255,255,255]:typeof c.mean=="number"?p=[c.mean,c.mean,c.mean,c.mean]:(p=[c.mean[0],c.mean[1],c.mean[2],0],c.mean[3]!==void 0&&(p[3]=c.mean[3])),c===void 0||c.bias===void 0?m=[0,0,0,0]:typeof c.bias=="number"?m=[c.bias,c.bias,c.bias,c.bias]:(m=[c.bias[0],c.bias[1],c.bias[2],0],c.bias[3]!==void 0&&(m[3]=c.bias[3]));let l=s*i,g=0,b=l,w=l*2,$=-1;o==="RGBA"?(g=0,b=l,w=l*2,$=l*3):o==="RGB"?(g=0,b=l,w=l*2):o==="RBG"&&(g=0,w=l,b=l*2);for(let x=0;x<s;x++)for(let T=0;T<i;T++){let C=(e.data[g++]-m[0])*p[0],S=(e.data[b++]-m[1])*p[1],E=(e.data[w++]-m[2])*p[2],O=$===-1?255:(e.data[$++]-m[3])*p[3];a.fillStyle="rgba("+C+","+S+","+E+","+O+")",a.fillRect(T,x,1,1)}if("toDataURL"in r)return r.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},Qi=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),a;if(r!=null){let i,s,o;t?.tensorLayout!==void 0&&t.tensorLayout==="NHWC"?(i=e.dims[2],s=e.dims[1],o=e.dims[3]):(i=e.dims[3],s=e.dims[2],o=e.dims[1]);let c=t!==void 0&&t.format!==void 0?t.format:"RGB",p=t?.norm,m,l;p===void 0||p.mean===void 0?m=[255,255,255,255]:typeof p.mean=="number"?m=[p.mean,p.mean,p.mean,p.mean]:(m=[p.mean[0],p.mean[1],p.mean[2],255],p.mean[3]!==void 0&&(m[3]=p.mean[3])),p===void 0||p.bias===void 0?l=[0,0,0,0]:typeof p.bias=="number"?l=[p.bias,p.bias,p.bias,p.bias]:(l=[p.bias[0],p.bias[1],p.bias[2],0],p.bias[3]!==void 0&&(l[3]=p.bias[3]));let g=s*i;if(t!==void 0&&(t.format!==void 0&&o===4&&t.format!=="RGBA"||o===3&&t.format!=="RGB"&&t.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let b=4,w=0,$=1,x=2,T=3,C=0,S=g,E=g*2,O=-1;c==="RGBA"?(C=0,S=g,E=g*2,O=g*3):c==="RGB"?(C=0,S=g,E=g*2):c==="RBG"&&(C=0,E=g,S=g*2),a=r.createImageData(i,s);for(let U=0;U<s*i;w+=b,$+=b,x+=b,T+=b,U++)a.data[w]=(e.data[C++]-l[0])*m[0],a.data[$]=(e.data[S++]-l[1])*m[1],a.data[x]=(e.data[E++]-l[2])*m[2],a.data[T]=O===-1?255:(e.data[O++]-l[3])*m[3]}else throw new Error("Can not access image data");return a}});var Aa,eo,to,ro,no,ao=Q(()=>{"use strict";kn();Aa=(e,t)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(t.height===void 0||t.width===void 0)throw new Error("Image height and width must be defined");if(t.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:r,width:a}=t,i=t.norm??{mean:255,bias:0},s,o;typeof i.mean=="number"?s=[i.mean,i.mean,i.mean,i.mean]:s=[i.mean[0],i.mean[1],i.mean[2],i.mean[3]??255],typeof i.bias=="number"?o=[i.bias,i.bias,i.bias,i.bias]:o=[i.bias[0],i.bias[1],i.bias[2],i.bias[3]??0];let c=t.format!==void 0?t.format:"RGBA",p=t.tensorFormat!==void 0&&t.tensorFormat!==void 0?t.tensorFormat:"RGB",m=r*a,l=p==="RGBA"?new Float32Array(m*4):new Float32Array(m*3),g=4,b=0,w=1,$=2,x=3,T=0,C=m,S=m*2,E=-1;c==="RGB"&&(g=3,b=0,w=1,$=2,x=-1),p==="RGBA"?E=m*3:p==="RBG"?(T=0,S=m,C=m*2):p==="BGR"&&(S=0,C=m,T=m*2);for(let U=0;U<m;U++,b+=g,$+=g,w+=g,x+=g)l[T++]=(e[b]+o[0])/s[0],l[C++]=(e[w]+o[1])/s[1],l[S++]=(e[$]+o[2])/s[2],E!==-1&&x!==-1&&(l[E++]=(e[x]+o[3])/s[3]);return p==="RGBA"?new at("float32",l,[1,4,r,a]):new at("float32",l,[1,3,r,a])},eo=async(e,t)=>{let r=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,a=typeof ImageData<"u"&&e instanceof ImageData,i=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,s=typeof e=="string",o,c=t??{},p=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},m=l=>l instanceof HTMLCanvasElement||l instanceof OffscreenCanvas?l.getContext("2d"):null;if(r){let l=p();l.width=e.width,l.height=e.height;let g=m(l);if(g!=null){let b=e.height,w=e.width;if(t!==void 0&&t.resizedHeight!==void 0&&t.resizedWidth!==void 0&&(b=t.resizedHeight,w=t.resizedWidth),t!==void 0){if(c=t,t.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");c.tensorFormat="RGBA",c.height=b,c.width=w}else c.tensorFormat="RGBA",c.height=b,c.width=w;g.drawImage(e,0,0),o=g.getImageData(0,0,w,b).data}else throw new Error("Can not access image data")}else if(a){let l,g;if(t!==void 0&&t.resizedWidth!==void 0&&t.resizedHeight!==void 0?(l=t.resizedHeight,g=t.resizedWidth):(l=e.height,g=e.width),t!==void 0&&(c=t),c.format="RGBA",c.height=l,c.width=g,t!==void 0){let b=p();b.width=g,b.height=l;let w=m(b);if(w!=null)w.putImageData(e,0,0),o=w.getImageData(0,0,g,l).data;else throw new Error("Can not access image data")}else o=e.data}else if(i){if(t===void 0)throw new Error("Please provide image config with format for Imagebitmap");let l=p();l.width=e.width,l.height=e.height;let g=m(l);if(g!=null){let b=e.height,w=e.width;return g.drawImage(e,0,0,w,b),o=g.getImageData(0,0,w,b).data,c.height=b,c.width=w,Aa(o,c)}else throw new Error("Can not access image data")}else{if(s)return new Promise((l,g)=>{let b=p(),w=m(b);if(!e||!w)return g();let $=new Image;$.crossOrigin="Anonymous",$.src=e,$.onload=()=>{b.width=$.width,b.height=$.height,w.drawImage($,0,0,b.width,b.height);let x=w.getImageData(0,0,b.width,b.height);c.height=b.height,c.width=b.width,l(Aa(x.data,c))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(o!==void 0)return Aa(o,c);throw new Error("Input data provided is not supported - aborted tensor creation")},to=(e,t)=>{let{width:r,height:a,download:i,dispose:s}=t,o=[1,a,r,4];return new at({location:"texture",type:"float32",texture:e,dims:o,download:i,dispose:s})},ro=(e,t)=>{let{dataType:r,dims:a,download:i,dispose:s}=t;return new at({location:"gpu-buffer",type:r??"float32",gpuBuffer:e,dims:a,download:i,dispose:s})},no=(e,t,r)=>new at({location:"cpu-pinned",type:e,data:t,dims:r??[t.length]})});var Fr,Pn,io,oo,so=Q(()=>{"use strict";Fr=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["float16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),Pn=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),io=!1,oo=()=>{if(!io){io=!0;let e=typeof BigInt64Array<"u"&&typeof BigInt64Array.from=="function",t=typeof BigUint64Array<"u"&&typeof BigUint64Array.from=="function";e&&(Fr.set("int64",BigInt64Array),Pn.set(BigInt64Array,"int64")),t&&(Fr.set("uint64",BigUint64Array),Pn.set(BigUint64Array,"uint64"))}}});var uo,lo,co=Q(()=>{"use strict";kn();uo=e=>{let t=1;for(let r=0;r<e.length;r++){let a=e[r];if(typeof a!="number"||!Number.isSafeInteger(a))throw new TypeError(`dims[${r}] must be an integer, got: ${a}`);if(a<0)throw new RangeError(`dims[${r}] must be a non-negative integer, got: ${a}`);t*=a}return t},lo=(e,t)=>{switch(e.location){case"cpu":return new at(e.type,e.data,t);case"cpu-pinned":return new at({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new at({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new at({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}});var at,kn=Q(()=>{"use strict";Ji();ao();so();co();at=class{constructor(t,r,a){oo();let i,s;if(typeof t=="object"&&"location"in t)switch(this.dataLocation=t.location,i=t.type,s=t.dims,t.location){case"cpu-pinned":{let c=Fr.get(i);if(!c)throw new TypeError(`unsupported type "${i}" to create tensor from pinned buffer`);if(!(t.data instanceof c))throw new TypeError(`buffer should be of type ${c.name}`);this.cpuData=t.data;break}case"texture":{if(i!=="float32")throw new TypeError(`unsupported type "${i}" to create tensor from texture`);this.gpuTextureData=t.texture,this.downloader=t.download,this.disposer=t.dispose;break}case"gpu-buffer":{if(i!=="float32"&&i!=="float16"&&i!=="int32"&&i!=="int64"&&i!=="uint32"&&i!=="bool")throw new TypeError(`unsupported type "${i}" to create tensor from gpu buffer`);this.gpuBufferData=t.gpuBuffer,this.downloader=t.download,this.disposer=t.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let c,p;if(typeof t=="string")if(i=t,p=a,t==="string"){if(!Array.isArray(r))throw new TypeError("A string tensor's data must be a string array.");c=r}else{let m=Fr.get(t);if(m===void 0)throw new TypeError(`Unsupported tensor type: ${t}.`);if(Array.isArray(r)){if(t==="float16")throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");t==="uint64"||t==="int64"?c=m.from(r,BigInt):c=m.from(r)}else if(r instanceof m)c=r;else throw new TypeError(`A ${i} tensor's data must be type of ${m}`)}else if(p=r,Array.isArray(t)){if(t.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let m=typeof t[0];if(m==="string")i="string",c=t;else if(m==="boolean")i="bool",c=Uint8Array.from(t);else throw new TypeError(`Invalid element type of data array: ${m}.`)}else{let m=Pn.get(t.constructor);if(m===void 0)throw new TypeError(`Unsupported type for tensor data: ${t.constructor}.`);i=m,c=t}if(p===void 0)p=[c.length];else if(!Array.isArray(p))throw new TypeError("A tensor's dims must be a number array");s=p,this.cpuData=c,this.dataLocation="cpu"}let o=uo(s);if(this.cpuData&&o!==this.cpuData.length)throw new Error(`Tensor's size(${o}) does not match data length(${this.cpuData.length}).`);this.type=i,this.dims=s,this.size=o}static async fromImage(t,r){return eo(t,r)}static fromTexture(t,r){return to(t,r)}static fromGpuBuffer(t,r){return ro(t,r)}static fromPinnedBuffer(t,r,a){return no(t,r,a)}toDataURL(t){return Xi(this,t)}toImageData(t){return Qi(this,t)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(t){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,t&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(t){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return lo(this,t)}}});var Ze,Rn=Q(()=>{"use strict";kn();Ze=at});var Bn,po,mt,ht,Ta=Q(()=>{"use strict";Ia();Bn=(e,t)=>{ar.wasm.trace&&console.timeStamp(`${e}::ORT::${t}`)},po=(e,t)=>{let r=new Error().stack?.split(/\r\n|\r|\n/g)||[],a=!1;for(let i=0;i<r.length;i++){if(a&&!r[i].includes("TRACE_FUNC")){let s=`FUNC_${e}::${r[i].trim().split(" ")[1]}`;t&&(s+=`::${t}`),Bn("CPU",s);return}r[i].includes("TRACE_FUNC")&&(a=!0)}},mt=e=>{ar.wasm.trace&&po("BEGIN",e)},ht=e=>{ar.wasm.trace&&po("END",e)}});var Mn,fo=Q(()=>{"use strict";On();Rn();Ta();Mn=class e{constructor(t){this.handler=t}async run(t,r,a){mt();let i={},s={};if(typeof t!="object"||t===null||t instanceof Ze||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let o=!0;if(typeof r=="object"){if(r===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof Ze)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(r.length===0)throw new TypeError("'fetches' cannot be an empty array.");o=!1;for(let m of r){if(typeof m!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(m)===-1)throw new RangeError(`'fetches' contains invalid output name: ${m}.`);i[m]=null}if(typeof a=="object"&&a!==null)s=a;else if(typeof a<"u")throw new TypeError("'options' must be an object.")}else{let m=!1,l=Object.getOwnPropertyNames(r);for(let g of this.outputNames)if(l.indexOf(g)!==-1){let b=r[g];(b===null||b instanceof Ze)&&(m=!0,o=!1,i[g]=b)}if(m){if(typeof a=="object"&&a!==null)s=a;else if(typeof a<"u")throw new TypeError("'options' must be an object.")}else s=r}}else if(typeof r<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let m of this.inputNames)if(typeof t[m]>"u")throw new Error(`input '${m}' is missing in 'feeds'.`);if(o)for(let m of this.outputNames)i[m]=null;let c=await this.handler.run(t,i,s),p={};for(let m in c)if(Object.hasOwnProperty.call(c,m)){let l=c[m];l instanceof Ze?p[m]=l:p[m]=new Ze(l.type,l.data,l.dims)}return ht(),p}async release(){return this.handler.dispose()}static async create(t,r,a,i){mt();let s,o={};if(typeof t=="string"){if(s=t,typeof r=="object"&&r!==null)o=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(s=t,typeof r=="object"&&r!==null)o=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer){let g=t,b=0,w=t.byteLength;if(typeof r=="object"&&r!==null)o=r;else if(typeof r=="number"){if(b=r,!Number.isSafeInteger(b))throw new RangeError("'byteOffset' must be an integer.");if(b<0||b>=g.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${g.byteLength}).`);if(w=t.byteLength-b,typeof a=="number"){if(w=a,!Number.isSafeInteger(w))throw new RangeError("'byteLength' must be an integer.");if(w<=0||b+w>g.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${g.byteLength-b}].`);if(typeof i=="object"&&i!==null)o=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(typeof a<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof r<"u")throw new TypeError("'options' must be an object.");s=new Uint8Array(g,b,w)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let p=(o.executionProviders||[]).map(g=>typeof g=="string"?g:g.name),l=await(await En(p)).createInferenceSessionHandler(s,o);return ht(),new e(l)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}});var Dd,mo=Q(()=>{"use strict";fo();Dd=Mn});var ho=Q(()=>{"use strict"});var zd,Dn,go=Q(()=>{"use strict";On();Rn();zd="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",Dn=class e{constructor(t,r,a){this.handler=t,this.hasOptimizerModel=r,this.hasEvalModel=a}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(t,r){let a=t.evalModel||"",i=t.optimizerModel||"",s=r||{},c=(s.executionProviders||[]).map(m=>typeof m=="string"?m:m.name),p=await En(c);if(p.createTrainingSessionHandler){let m=await p.createTrainingSessionHandler(t.checkpointState,t.trainModel,a,i,s);return new e(m,!!t.optimizerModel,!!t.evalModel)}else throw new Error(zd)}typeNarrowingForRunStep(t,r,a,i,s){let o={},c={};if(typeof a!="object"||a===null||a instanceof Ze||Array.isArray(a))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let p=!0;if(typeof i=="object"){if(i===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(i instanceof Ze)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(i)){if(i.length===0)throw new TypeError("'fetches' cannot be an empty array.");p=!1;for(let m of i){if(typeof m!="string")throw new TypeError("'fetches' must be a string array or an object.");if(r.indexOf(m)===-1)throw new RangeError(`'fetches' contains invalid output name: ${m}.`);o[m]=null}if(typeof s=="object"&&s!==null)c=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let m=!1,l=Object.getOwnPropertyNames(i);for(let g of r)if(l.indexOf(g)!==-1){let b=i[g];(b===null||b instanceof Ze)&&(m=!0,p=!1,o[g]=b)}if(m){if(typeof s=="object"&&s!==null)c=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else c=i}}else if(typeof i<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let m of t)if(typeof a[m]>"u")throw new Error(`input '${m}' is missing in 'feeds'.`);if(p)for(let m of r)o[m]=null;return[o,c]}convertHandlerReturnTypeToMapOfTensors(t){let r={};for(let a in t)if(Object.hasOwnProperty.call(t,a)){let i=t[a];i instanceof Ze?r[a]=i:r[a]=new Ze(i.type,i.data,i.dims)}return r}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(t,r,a){let[i,s]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,t,r,a),o=await this.handler.runTrainStep(t,i,s);return this.convertHandlerReturnTypeToMapOfTensors(o)}async runOptimizerStep(t){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(t||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(t,r,a){if(this.hasEvalModel){let[i,s]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,t,r,a),o=await this.handler.runEvalStep(t,i,s);return this.convertHandlerReturnTypeToMapOfTensors(o)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(t=!0){return this.handler.getParametersSize(t)}async loadParametersBuffer(t,r=!0){let a=await this.getParametersSize(r);if(t.length!==4*a)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(t,r)}async getContiguousParameters(t=!0){return this.handler.getContiguousParameters(t)}async release(){return this.handler.dispose()}}});var Ud,yo=Q(()=>{"use strict";go();Ud=Dn});var Ea={};br(Ea,{InferenceSession:()=>Dd,TRACE:()=>Bn,TRACE_FUNC_BEGIN:()=>mt,TRACE_FUNC_END:()=>ht,Tensor:()=>Ze,TrainingSession:()=>Ud,env:()=>Ae,registerBackend:()=>nr});var bt=Q(()=>{"use strict";qi();Zi();mo();Rn();Ta();ho();yo()});var Oa={};br(Oa,{createReadStream:()=>vo,readFile:()=>Wd,readFileSync:()=>Nd});var Wd,Nd,vo,ka=Q(()=>{Wd=void 0,Nd=void 0,vo=void 0});var Pa={};br(Pa,{join:()=>Vd});var Vd,Ra=Q(()=>{Vd=void 0});var _o=yr(($o,Ba)=>{"use strict";var wo=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){var r=t,a,i;r.ready=new Promise((u,f)=>{a=u,i=f}),r.mountExternalData=(u,f)=>{(r.gb||(r.gb=new Map)).set(u,f)},r.unmountExternalData=()=>{delete r.gb},r.jsepInit=(u,f,y,_,A,M,H,X)=>{r.Fb=u,r.vb=f,r.xb=y,r.ob=_,r.wb=A,r.Sa=M,r.yb=H,r.zb=X,f=(j,q,ne)=>(...me)=>{let $e=et,P=q?.();me=j(...me);let oe=q?.();return P!==oe&&(j=oe,ne(P),q=ne=null),et!=$e?dn():me},y=j=>async(...q)=>{try{if(r.fb)throw Error("Session already started");let ne=r.fb={Ab:q[0],errors:[]},me=await j(...q);if(r.fb!==ne)throw Error("Session mismatch");u.flush();let $e=ne.errors;if(0<$e.length){let P=await Promise.all($e);if(P=P.filter(oe=>oe),0<P.length)throw Error(P.join(`
`))}return me}finally{r.fb=null}},r._OrtCreateSession=f(r._OrtCreateSession,()=>r._OrtCreateSession,j=>r._OrtCreateSession=j),r._OrtRun=y(f(r._OrtRun,()=>r._OrtRun,j=>r._OrtRun=j)),r._OrtRunWithBinding=y(f(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,j=>r._OrtRunWithBinding=j)),r._OrtBindInput=f(r._OrtBindInput,()=>r._OrtBindInput,j=>r._OrtBindInput=j),r.jsepRegisterBuffer=(j,q,ne,me)=>u.registerBuffer(j,q,ne,me),r.jsepUnregisterBuffers=j=>{u.unregisterBuffers(j)},r.jsepGetBuffer=j=>u.getBuffer(j),r.jsepCreateDownloader=(j,q,ne)=>u.createDownloader(j,q,ne),r.jsepOnRunStart=()=>u.onRunStart()};var s=Object.assign({},r),o="./this.program",c=(u,f)=>{throw f},p=typeof window=="object",m=typeof importScripts=="function",l=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",g="",b,w,$;if(l){var x=(ka(),tr(Oa)),T=(Ra(),tr(Pa));g=m?T.dirname(g)+"/":__dirname+"/",b=(u,f)=>(u=ie(u)?new URL(u):T.normalize(u),x.readFileSync(u,f?void 0:"utf8")),$=u=>(u=b(u,!0),u.buffer||(u=new Uint8Array(u)),u),w=(u,f,y,_=!0)=>{u=ie(u)?new URL(u):T.normalize(u),x.readFile(u,_?void 0:"utf8",(A,M)=>{A?y(A):f(_?M.buffer:M)})},!r.thisProgram&&1<process.argv.length&&(o=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),c=(u,f)=>{throw process.exitCode=u,f},r.inspect=()=>"[Emscripten Module object]"}else(p||m)&&(m?g=self.location.href:typeof document<"u"&&document.currentScript&&(g=document.currentScript.src),e&&(g=e),g.indexOf("blob:")!==0?g=g.substr(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1):g="",b=u=>{var f=new XMLHttpRequest;return f.open("GET",u,!1),f.send(null),f.responseText},m&&($=u=>{var f=new XMLHttpRequest;return f.open("GET",u,!1),f.responseType="arraybuffer",f.send(null),new Uint8Array(f.response)}),w=(u,f,y)=>{var _=new XMLHttpRequest;_.open("GET",u,!0),_.responseType="arraybuffer",_.onload=()=>{_.status==200||_.status==0&&_.response?f(_.response):y()},_.onerror=y,_.send(null)});var C=console.log.bind(console),S=console.error.bind(console);Object.assign(r,s),s=null,typeof WebAssembly!="object"&&Ge("no native wasm support detected");var E,O=!1,U,D,V,Y,se,B,te,ke,Oe,ee,be;function Ue(){var u=E.buffer;r.HEAP8=D=new Int8Array(u),r.HEAP16=Y=new Int16Array(u),r.HEAPU8=V=new Uint8Array(u),r.HEAPU16=se=new Uint16Array(u),r.HEAP32=B=new Int32Array(u),r.HEAPU32=te=new Uint32Array(u),r.HEAPF32=ke=new Float32Array(u),r.HEAPF64=be=new Float64Array(u),r.HEAP64=Oe=new BigInt64Array(u),r.HEAPU64=ee=new BigUint64Array(u)}var pe=[],ye=[],de=[],ve=0,We=null,Be=null;function Ge(u){throw u="Aborted("+u+")",S(u),O=!0,U=1,u=new WebAssembly.RuntimeError(u+". Build with -sASSERTIONS for more info."),i(u),u}var F=u=>u.startsWith("data:application/octet-stream;base64,"),ie=u=>u.startsWith("file://"),he;if(he="ort-wasm-simd.wasm",!F(he)){var Je=he;he=r.locateFile?r.locateFile(Je,g):g+Je}function ot(u){if($)return $(u);throw"both async and sync fetching of the wasm failed"}function Re(u){if(p||m){if(typeof fetch=="function"&&!ie(u))return fetch(u,{credentials:"same-origin"}).then(f=>{if(!f.ok)throw"failed to load wasm binary file at '"+u+"'";return f.arrayBuffer()}).catch(()=>ot(u));if(w)return new Promise((f,y)=>{w(u,_=>f(new Uint8Array(_)),y)})}return Promise.resolve().then(()=>ot(u))}function Fe(u,f,y){return Re(u).then(_=>WebAssembly.instantiate(_,f)).then(_=>_).then(y,_=>{S(`failed to asynchronously prepare wasm: ${_}`),Ge(_)})}function Bt(u,f){var y=he;return typeof WebAssembly.instantiateStreaming!="function"||F(y)||ie(y)||l||typeof fetch!="function"?Fe(y,u,f):fetch(y,{credentials:"same-origin"}).then(_=>WebAssembly.instantiateStreaming(_,u).then(f,function(A){return S(`wasm streaming compile failed: ${A}`),S("falling back to ArrayBuffer instantiation"),Fe(y,u,f)}))}var Mt={903368:(u,f,y,_)=>{if(typeof r>"u"||!r.gb)return 1;if(u=qe(u>>>0),u.startsWith("./")&&(u=u.substring(2)),u=r.gb.get(u),!u)return 2;if(f>>>=0,y>>>=0,f+y>u.byteLength)return 3;try{return V.set(u.subarray(f,f+y),_>>>0>>>0),0}catch{return 4}},903869:u=>r.vb(u),903902:u=>r.xb(u),903934:(u,f,y)=>{r.ob(u,f,y,!0)},903973:(u,f,y)=>{r.ob(u,f,y)},904006:u=>{r.Sa("Abs",u,void 0)},904057:u=>{r.Sa("Neg",u,void 0)},904108:u=>{r.Sa("Floor",u,void 0)},904161:u=>{r.Sa("Ceil",u,void 0)},904213:u=>{r.Sa("Reciprocal",u,void 0)},904271:u=>{r.Sa("Sqrt",u,void 0)},904323:u=>{r.Sa("Exp",u,void 0)},904374:u=>{r.Sa("Erf",u,void 0)},904425:u=>{r.Sa("Sigmoid",u,void 0)},904480:(u,f,y)=>{r.Sa("HardSigmoid",u,{alpha:f,beta:y})},904559:u=>{r.Sa("Log",u,void 0)},904610:u=>{r.Sa("Sin",u,void 0)},904661:u=>{r.Sa("Cos",u,void 0)},904712:u=>{r.Sa("Tan",u,void 0)},904763:u=>{r.Sa("Asin",u,void 0)},904815:u=>{r.Sa("Acos",u,void 0)},904867:u=>{r.Sa("Atan",u,void 0)},904919:u=>{r.Sa("Sinh",u,void 0)},904971:u=>{r.Sa("Cosh",u,void 0)},905023:u=>{r.Sa("Asinh",u,void 0)},905076:u=>{r.Sa("Acosh",u,void 0)},905129:u=>{r.Sa("Atanh",u,void 0)},905182:u=>{r.Sa("Tanh",u,void 0)},905234:u=>{r.Sa("Not",u,void 0)},905285:(u,f,y)=>{r.Sa("Clip",u,{min:f,max:y})},905354:u=>{r.Sa("Clip",u,void 0)},905406:(u,f)=>{r.Sa("Elu",u,{alpha:f})},905464:u=>{r.Sa("Relu",u,void 0)},905516:(u,f)=>{r.Sa("LeakyRelu",u,{alpha:f})},905580:(u,f)=>{r.Sa("ThresholdedRelu",u,{alpha:f})},905650:(u,f)=>{r.Sa("Cast",u,{to:f})},905708:u=>{r.Sa("Add",u,void 0)},905759:u=>{r.Sa("Sub",u,void 0)},905810:u=>{r.Sa("Mul",u,void 0)},905861:u=>{r.Sa("Div",u,void 0)},905912:u=>{r.Sa("Pow",u,void 0)},905963:u=>{r.Sa("Equal",u,void 0)},906016:u=>{r.Sa("Greater",u,void 0)},906071:u=>{r.Sa("GreaterOrEqual",u,void 0)},906133:u=>{r.Sa("Less",u,void 0)},906185:u=>{r.Sa("LessOrEqual",u,void 0)},906244:(u,f,y,_,A)=>{r.Sa("ReduceMean",u,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:_?Array.from(B.subarray(_>>>0,A>>>0)):[]})},906403:(u,f,y,_,A)=>{r.Sa("ReduceMax",u,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:_?Array.from(B.subarray(_>>>0,A>>>0)):[]})},906561:(u,f,y,_,A)=>{r.Sa("ReduceMin",u,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:_?Array.from(B.subarray(_>>>0,A>>>0)):[]})},906719:(u,f,y,_,A)=>{r.Sa("ReduceProd",u,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:_?Array.from(B.subarray(_>>>0,A>>>0)):[]})},906878:(u,f,y,_,A)=>{r.Sa("ReduceSum",u,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:_?Array.from(B.subarray(_>>>0,A>>>0)):[]})},907036:(u,f,y,_,A)=>{r.Sa("ReduceL1",u,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:_?Array.from(B.subarray(_>>>0,A>>>0)):[]})},907193:(u,f,y,_,A)=>{r.Sa("ReduceL2",u,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:_?Array.from(B.subarray(_>>>0,A>>>0)):[]})},907350:(u,f,y,_,A)=>{r.Sa("ReduceLogSum",u,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:_?Array.from(B.subarray(_>>>0,A>>>0)):[]})},907511:(u,f,y,_,A)=>{r.Sa("ReduceSumSquare",u,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:_?Array.from(B.subarray(_>>>0,A>>>0)):[]})},907675:(u,f,y,_,A)=>{r.Sa("ReduceLogSumExp",u,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:_?Array.from(B.subarray(_>>>0,A>>>0)):[]})},907839:u=>{r.Sa("Where",u,void 0)},907892:(u,f,y)=>{r.Sa("Transpose",u,{perm:f?Array.from(B.subarray(f>>>0,y>>>0)):[]})},908e3:(u,f,y,_,A,M,H,X,j,q,ne,me,$e,P,oe)=>{r.Sa("ConvTranspose",u,{format:j?"NHWC":"NCHW",autoPad:f,dilations:[y],group:_,kernel_shape:[A],pads:[M,H],strides:[X],wIsConst:()=>!!D[q>>>0],outputPadding:ne?Array.from(B.subarray(ne>>>0,me>>>0)):[],outputShape:$e?Array.from(B.subarray($e>>>0,P>>>0)):[],activation:qe(oe)})},908402:(u,f,y,_,A,M,H,X,j,q,ne,me,$e,P)=>{r.Sa("ConvTranspose",u,{format:X?"NHWC":"NCHW",autoPad:f,dilations:Array.from(B.subarray(y>>>0,(y>>>0)+2>>>0)),group:_,kernelShape:Array.from(B.subarray(A>>>0,(A>>>0)+2>>>0)),pads:Array.from(B.subarray(M>>>0,(M>>>0)+4>>>0)),strides:Array.from(B.subarray(H>>>0,(H>>>0)+2>>>0)),wIsConst:()=>!!D[j>>>0],outputPadding:q?Array.from(B.subarray(q>>>0,ne>>>0)):[],outputShape:me?Array.from(B.subarray(me>>>0,$e>>>0)):[],activation:qe(P)})},908967:(u,f,y,_,A,M,H,X,j,q,ne,me,$e,P,oe)=>{r.Sa("ConvTranspose",u,{format:j?"NHWC":"NCHW",autoPad:f,dilations:[y],group:_,kernel_shape:[A],pads:[M,H],strides:[X],wIsConst:()=>!!D[q>>>0],outputPadding:ne?Array.from(B.subarray(ne>>>0,me>>>0)):[],outputShape:$e?Array.from(B.subarray($e>>>0,P>>>0)):[],activation:qe(oe)})},909369:(u,f,y,_,A,M,H,X,j,q,ne,me,$e,P)=>{r.Sa("ConvTranspose",u,{format:X?"NHWC":"NCHW",autoPad:f,dilations:Array.from(B.subarray(y>>>0,(y>>>0)+2>>>0)),group:_,kernelShape:Array.from(B.subarray(A>>>0,(A>>>0)+2>>>0)),pads:Array.from(B.subarray(M>>>0,(M>>>0)+4>>>0)),strides:Array.from(B.subarray(H>>>0,(H>>>0)+2>>>0)),wIsConst:()=>!!D[j>>>0],outputPadding:q?Array.from(B.subarray(q>>>0,ne>>>0)):[],outputShape:me?Array.from(B.subarray(me>>>0,$e>>>0)):[],activation:qe(P)})},909934:(u,f)=>{r.Sa("GlobalAveragePool",u,{format:f?"NHWC":"NCHW"})},910025:(u,f,y,_,A,M,H,X,j,q,ne,me,$e,P,oe,Ie)=>{r.Sa("AveragePool",u,{format:Ie?"NHWC":"NCHW",auto_pad:f,ceil_mode:y,count_include_pad:_,storage_order:A,dilations:[M,H],kernel_shape:[X,j],pads:[q,ne,me,$e],strides:[P,oe]})},910309:(u,f)=>{r.Sa("GlobalAveragePool",u,{format:f?"NHWC":"NCHW"})},910400:(u,f,y,_,A,M,H,X,j,q,ne,me,$e,P,oe,Ie)=>{r.Sa("AveragePool",u,{format:Ie?"NHWC":"NCHW",auto_pad:f,ceil_mode:y,count_include_pad:_,storage_order:A,dilations:[M,H],kernel_shape:[X,j],pads:[q,ne,me,$e],strides:[P,oe]})},910684:(u,f)=>{r.Sa("GlobalMaxPool",u,{format:f?"NHWC":"NCHW"})},910771:(u,f,y,_,A,M,H,X,j,q,ne,me,$e,P,oe,Ie)=>{r.Sa("MaxPool",u,{format:Ie?"NHWC":"NCHW",auto_pad:f,ceil_mode:y,count_include_pad:_,storage_order:A,dilations:[M,H],kernel_shape:[X,j],pads:[q,ne,me,$e],strides:[P,oe]})},911051:(u,f)=>{r.Sa("GlobalMaxPool",u,{format:f?"NHWC":"NCHW"})},911138:(u,f,y,_,A,M,H,X,j,q,ne,me,$e,P,oe,Ie)=>{r.Sa("MaxPool",u,{format:Ie?"NHWC":"NCHW",auto_pad:f,ceil_mode:y,count_include_pad:_,storage_order:A,dilations:[M,H],kernel_shape:[X,j],pads:[q,ne,me,$e],strides:[P,oe]})},911418:(u,f,y,_,A)=>{r.Sa("Gemm",u,{alpha:f,beta:y,transA:_,transB:A})},911522:u=>{r.Sa("MatMul",u,void 0)},911576:(u,f,y,_)=>{r.Sa("ArgMax",u,{keepDims:!!f,selectLastIndex:!!y,axis:_})},911684:(u,f,y,_)=>{r.Sa("ArgMin",u,{keepDims:!!f,selectLastIndex:!!y,axis:_})},911792:(u,f)=>{r.Sa("Softmax",u,{axis:f})},911855:(u,f)=>{r.Sa("Concat",u,{axis:f})},911915:(u,f,y,_,A)=>{r.Sa("Split",u,{axis:f,numOutputs:y,splitSizes:_?Array.from(B.subarray(_>>>0,A>>>0)):[]})},912055:u=>{r.Sa("Expand",u,void 0)},912109:(u,f)=>{r.Sa("Gather",u,{axis:Number(f)})},912180:(u,f)=>{r.Sa("GatherElements",u,{axis:Number(f)})},912259:(u,f,y,_,A,M,H,X,j,q,ne)=>{r.Sa("Resize",u,{antialias:f,axes:y?Array.from(B.subarray(y>>>0,_>>>0)):[],coordinateTransformMode:qe(A),cubicCoeffA:M,excludeOutside:H,extrapolationValue:X,keepAspectRatioPolicy:qe(j),mode:qe(q),nearestMode:qe(ne)})},912605:(u,f,y,_,A,M,H)=>{r.Sa("Slice",u,{starts:f?Array.from(B.subarray(f>>>0,y>>>0)):[],ends:_?Array.from(B.subarray(_>>>0,A>>>0)):[],axes:M?Array.from(B.subarray(M>>>0,H>>>0)):[]})},912821:u=>{r.Sa("Tile",u,void 0)},912873:(u,f,y)=>{r.Sa("LayerNormalization",u,{axis:Number(f),epsilon:Number(y)})},912980:(u,f,y)=>{r.Sa("InstanceNormalization",u,{epsilon:f,format:y?"NHWC":"NCHW"})},913094:(u,f,y)=>{r.Sa("InstanceNormalization",u,{epsilon:f,format:y?"NHWC":"NCHW"})},913208:u=>{r.Sa("Range",u,void 0)},913261:(u,f)=>{r.Sa("Einsum",u,{equation:qe(f)})},913342:(u,f,y,_,A)=>{r.Sa("Pad",u,{mode:f,value:y,pads:_?Array.from(B.subarray(_>>>0,A>>>0)):[]})},913469:(u,f,y,_,A,M)=>{r.Sa("BatchNormalization",u,{epsilon:f,momentum:y,spatial:!!A,trainingMode:!!_,format:M?"NHWC":"NCHW"})},913638:(u,f,y,_,A,M)=>{r.Sa("BatchNormalization",u,{epsilon:f,momentum:y,spatial:!!A,trainingMode:!!_,format:M?"NHWC":"NCHW"})},913807:(u,f,y)=>{r.Sa("CumSum",u,{exclusive:Number(f),reverse:Number(y)})},913904:(u,f,y,_,A,M,H,X,j)=>{r.Sa("Attention",u,{numHeads:f,isUnidirectional:y,maskFilterValue:_,scale:A,doRotary:M,qkvHiddenSizes:H?Array.from(B.subarray(Number(X)>>>0,Number(X)+H>>>0)):[],pastPresentShareBuffer:!!j})},914176:u=>{r.Sa("Gelu",u,void 0)},914228:(u,f,y,_,A,M)=>{r.Sa("MultiHeadAttention",u,{numHeads:f,isUnidirectional:y,maskFilterValue:_,scale:A,doRotary:M})},914387:u=>{r.Sa("BiasAdd",u,void 0)},914442:u=>{r.Sa("BiasSplitGelu",u,void 0)},914503:(u,f)=>{r.Sa("SkipLayerNormalization",u,{epsilon:f})},914584:(u,f,y,_,A,M,H,X,j,q,ne,me,$e)=>{r.Sa("Conv",u,{format:j?"NHWC":"NCHW",auto_pad:f,dilations:[y],group:_,kernel_shape:[A],pads:M?Array.from(B.subarray(M>>>0,H>>>0)):[],strides:[X],w_is_const:()=>!!D[q>>>0],activation:qe(ne),activation_params:me?Array.from(ke.subarray(me>>>0,$e>>>0)):[]})},914954:(u,f,y,_,A,M,H,X,j,q,ne,me,$e,P,oe,Ie)=>{r.Sa("Conv",u,{format:me?"NHWC":"NCHW",auto_pad:f,dilations:[y,_],group:A,kernel_shape:[M,H],pads:X?Array.from(B.subarray(X>>>0,j>>>0)):[],strides:[q,ne],w_is_const:()=>!!D[$e>>>0],activation:qe(P),activation_params:oe?Array.from(ke.subarray(oe>>>0,Ie>>>0)):[]})},915345:u=>{r.yb(u)},915379:(u,f)=>r.zb(u,f,r.fb.Ab,r.fb.errors)};function qt(u){this.name="ExitStatus",this.message=`Program terminated with exit(${u})`,this.status=u}function Nt(u){this.cb=u-24,this.rb=function(f){te[this.cb+4>>>2>>>0]=f},this.qb=function(f){te[this.cb+8>>>2>>>0]=f},this.kb=function(f,y){this.jb(),this.rb(f),this.qb(y)},this.jb=function(){te[this.cb+16>>>2>>>0]=0}}var sr=0,jt=0,xr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Vt=(u,f,y)=>{f>>>=0;var _=f+y;for(y=f;u[y]&&!(y>=_);)++y;if(16<y-f&&u.buffer&&xr)return xr.decode(u.subarray(f,y));for(_="";f<y;){var A=u[f++];if(A&128){var M=u[f++]&63;if((A&224)==192)_+=String.fromCharCode((A&31)<<6|M);else{var H=u[f++]&63;A=(A&240)==224?(A&15)<<12|M<<6|H:(A&7)<<18|M<<12|H<<6|u[f++]&63,65536>A?_+=String.fromCharCode(A):(A-=65536,_+=String.fromCharCode(55296|A>>10,56320|A&1023))}}else _+=String.fromCharCode(A)}return _},qe=(u,f)=>(u>>>=0)?Vt(V,u,f):"",Dt=u=>{for(var f=0,y=0;y<u.length;++y){var _=u.charCodeAt(y);127>=_?f++:2047>=_?f+=2:55296<=_&&57343>=_?(f+=4,++y):f+=3}return f},Ct=(u,f,y,_)=>{if(y>>>=0,!(0<_))return 0;var A=y;_=y+_-1;for(var M=0;M<u.length;++M){var H=u.charCodeAt(M);if(55296<=H&&57343>=H){var X=u.charCodeAt(++M);H=65536+((H&1023)<<10)|X&1023}if(127>=H){if(y>=_)break;f[y++>>>0]=H}else{if(2047>=H){if(y+1>=_)break;f[y++>>>0]=192|H>>6}else{if(65535>=H){if(y+2>=_)break;f[y++>>>0]=224|H>>12}else{if(y+3>=_)break;f[y++>>>0]=240|H>>18,f[y++>>>0]=128|H>>12&63}f[y++>>>0]=128|H>>6&63}f[y++>>>0]=128|H&63}}return f[y>>>0]=0,y-A},Cr=u=>{if(u===null)return"null";var f=typeof u;return f==="object"||f==="array"||f==="function"?u.toString():""+u},rn,st=u=>{for(var f="";V[u>>>0];)f+=rn[V[u++>>>0]];return f},Ir={},Kt={},Ar={},gt;function nn(u,f,y={}){var _=f.name;if(!u)throw new gt(`type "${_}" must have a positive integer typeid pointer`);if(Kt.hasOwnProperty(u)){if(y.tb)return;throw new gt(`Cannot register type '${_}' twice`)}Kt[u]=f,delete Ar[u],Ir.hasOwnProperty(u)&&(f=Ir[u],delete Ir[u],f.forEach(A=>A()))}function Ke(u,f,y={}){if(!("argPackAdvance"in f))throw new TypeError("registerType registeredInstance requires argPackAdvance");nn(u,f,y)}var Tr=(u,f,y)=>{switch(f){case 1:return y?_=>D[_>>>0>>>0]:_=>V[_>>>0>>>0];case 2:return y?_=>Y[_>>>1>>>0]:_=>se[_>>>1>>>0];case 4:return y?_=>B[_>>>2>>>0]:_=>te[_>>>2>>>0];case 8:return y?_=>Oe[_>>>3]:_=>ee[_>>>3];default:throw new TypeError(`invalid integer width (${f}): ${u}`)}};function Er(){this.$a=[void 0],this.nb=[]}var Pe=new Er;function Or(u){u>>>=0,u>=Pe.cb&&--Pe.get(u).pb===0&&Pe.jb(u)}var we=u=>{if(!u)throw new gt("Cannot use deleted val. handle = "+u);return Pe.get(u).value},ut=u=>{switch(u){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return Pe.kb({pb:1,value:u})}};function ur(u){return this.fromWireType(B[u>>>2>>>0])}var kr=(u,f)=>{switch(f){case 4:return function(y){return this.fromWireType(ke[y>>>2>>>0])};case 8:return function(y){return this.fromWireType(be[y>>>3>>>0])};default:throw new TypeError(`invalid float width (${f}): ${u}`)}};function fa(u){return this.fromWireType(te[u>>>2>>>0])}var Pr=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,ma=(u,f)=>{for(var y=u>>1,_=y+f/2;!(y>=_)&&se[y>>>0];)++y;if(y<<=1,32<y-u&&Pr)return Pr.decode(V.subarray(u>>>0,y>>>0));for(y="",_=0;!(_>=f/2);++_){var A=Y[u+2*_>>>1>>>0];if(A==0)break;y+=String.fromCharCode(A)}return y},fe=(u,f,y)=>{if(y??=2147483647,2>y)return 0;y-=2;var _=f;y=y<2*u.length?y/2:u.length;for(var A=0;A<y;++A)Y[f>>>1>>>0]=u.charCodeAt(A),f+=2;return Y[f>>>1>>>0]=0,f-_},lr=u=>2*u.length,an=(u,f)=>{for(var y=0,_="";!(y>=f/4);){var A=B[u+4*y>>>2>>>0];if(A==0)break;++y,65536<=A?(A-=65536,_+=String.fromCharCode(55296|A>>10,56320|A&1023)):_+=String.fromCharCode(A)}return _},ha=(u,f,y)=>{if(f>>>=0,y??=2147483647,4>y)return 0;var _=f;y=_+y-4;for(var A=0;A<u.length;++A){var M=u.charCodeAt(A);if(55296<=M&&57343>=M){var H=u.charCodeAt(++A);M=65536+((M&1023)<<10)|H&1023}if(B[f>>>2>>>0]=M,f+=4,f+4>y)break}return B[f>>>2>>>0]=0,f-_},on=u=>{for(var f=0,y=0;y<u.length;++y){var _=u.charCodeAt(y);55296<=_&&57343>=_&&++y,f+=4}return f},Rr=(u,f)=>{var y=Kt[u];if(y===void 0)throw u=Qt(u),y=st(u),lt(u),new gt(f+" has unknown type "+y);return y},Br=(u,f,y)=>{var _=[];return u=u.toWireType(_,y),_.length&&(te[f>>>2>>>0]=ut(_)),u},Yt=u=>{try{u()}catch(f){Ge(f)}};function sn(){var u=ue,f={};for(let[y,_]of Object.entries(u))f[y]=typeof _=="function"?function(){Ht.push(y);try{return _.apply(null,arguments)}finally{O||(Ht.pop(),et&&wt===1&&Ht.length===0&&(wt=0,Yt(_n),typeof Fibers<"u"&&Fibers.Hb()))}}:_;return f}var wt=0,et=null,Mr=0,Ht=[],Dr={},zr={},un=0,dr=null,ln=[];function dn(){return new Promise((u,f)=>{dr={resolve:u,reject:f}})}function cn(){var u=Lt(65548),f=u+12;te[u>>>2>>>0]=f,te[u+4>>>2>>>0]=f+65536,f=Ht[0];var y=Dr[f];return y===void 0&&(y=un++,Dr[f]=y,zr[y]=f),B[u+8>>>2>>>0]=y,u}function pn(u){if(!O){if(wt===0){var f=!1,y=!1;u((_=0)=>{if(!O&&(Mr=_,f=!0,y)){wt=2,Yt(()=>$t(et)),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.resume(),_=!1;try{var A=(0,ue[zr[B[et+8>>>2>>>0]]])()}catch(X){A=X,_=!0}var M=!1;if(!et){var H=dr;H&&(dr=null,(_?H.reject:H.resolve)(A),M=!0)}if(_&&!M)throw A}}),y=!0,f||(wt=1,et=cn(),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.pause(),Yt(()=>Jt(et)))}else wt===2?(wt=0,Yt(ft),lt(et),et=null,ln.forEach(_=>{if(!O)try{_();try{U=U=_=U,r.onExit?.(_),O=!0,c(_,new qt(_))}catch(A){A instanceof qt||A=="unwind"||c(1,A)}}catch(A){A instanceof qt||A=="unwind"||c(1,A)}})):Ge(`invalid state: ${wt}`);return Mr}}function Ur(u){return pn(f=>{u().then(f)})}var Zt=[],fn={},cr=u=>{var f=fn[u];return f===void 0?st(u):f},Wr=()=>typeof globalThis=="object"?globalThis:Function("return this")(),pt=u=>{var f=Zt.length;return Zt.push(u),f},Nr=(u,f)=>{for(var y=Array(u),_=0;_<u;++_)y[_]=Rr(te[f+4*_>>>2>>>0],"parameter "+_);return y},pr=(u,f)=>Object.defineProperty(f,"name",{value:u});function ga(u){var f=Function;if(!(f instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof f} which is not a function`);var y=pr(f.name||"unknownFunctionName",function(){});return y.prototype=f.prototype,y=new y,u=f.apply(y,u),u instanceof Object?u:y}var tt=u=>u%4===0&&(u%100!==0||u%400===0),mn=[0,31,60,91,121,152,182,213,244,274,305,335],yt=[0,31,59,90,120,151,181,212,243,273,304,334],Vr=u=>{var f=Dt(u)+1,y=Lt(f);return y&&Ct(u,V,y,f),y},fr=[],rt=(u,f)=>{fr.length=0;for(var y;y=V[u++>>>0];){var _=y!=105;_&=y!=112,f+=_&&f%8?4:0,fr.push(y==112?te[f>>>2>>>0]:y==106?Oe[f>>>3]:y==105?B[f>>>2>>>0]:be[f>>>3>>>0]),f+=_?8:4}return fr},Xt={},Ye=()=>{if(!nt){var u={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:o||"./this.program"},f;for(f in Xt)Xt[f]===void 0?delete u[f]:u[f]=Xt[f];var y=[];for(f in u)y.push(`${f}=${u[f]}`);nt=y}return nt},nt,hn=[null,[],[]],gn=[31,29,31,30,31,30,31,31,30,31,30,31],yn=[31,28,31,30,31,30,31,31,30,31,30,31];function bn(u){var f=Array(Dt(u)+1);return Ct(u,f,0,f.length),f}function vn(u,f,y,_){function A(P,oe,Ie){for(P=typeof P=="number"?P.toString():P||"";P.length<oe;)P=Ie[0]+P;return P}function M(P,oe){return A(P,oe,"0")}function H(P,oe){function Ie(Wt){return 0>Wt?-1:0<Wt?1:0}var Ut;return(Ut=Ie(P.getFullYear()-oe.getFullYear()))===0&&(Ut=Ie(P.getMonth()-oe.getMonth()))===0&&(Ut=Ie(P.getDate()-oe.getDate())),Ut}function X(P){switch(P.getDay()){case 0:return new Date(P.getFullYear()-1,11,29);case 1:return P;case 2:return new Date(P.getFullYear(),0,3);case 3:return new Date(P.getFullYear(),0,2);case 4:return new Date(P.getFullYear(),0,1);case 5:return new Date(P.getFullYear()-1,11,31);case 6:return new Date(P.getFullYear()-1,11,30)}}function j(P){var oe=P.ab;for(P=new Date(new Date(P.bb+1900,0,1).getTime());0<oe;){var Ie=P.getMonth(),Ut=(tt(P.getFullYear())?gn:yn)[Ie];if(oe>Ut-P.getDate())oe-=Ut-P.getDate()+1,P.setDate(1),11>Ie?P.setMonth(Ie+1):(P.setMonth(0),P.setFullYear(P.getFullYear()+1));else{P.setDate(P.getDate()+oe);break}}return Ie=new Date(P.getFullYear()+1,0,4),oe=X(new Date(P.getFullYear(),0,4)),Ie=X(Ie),0>=H(oe,P)?0>=H(Ie,P)?P.getFullYear()+1:P.getFullYear():P.getFullYear()-1}u>>>=0,f>>>=0,y>>>=0,_>>>=0;var q=te[_+40>>>2>>>0];_={Db:B[_>>>2>>>0],Cb:B[_+4>>>2>>>0],hb:B[_+8>>>2>>>0],mb:B[_+12>>>2>>>0],ib:B[_+16>>>2>>>0],bb:B[_+20>>>2>>>0],Wa:B[_+24>>>2>>>0],ab:B[_+28>>>2>>>0],Gb:B[_+32>>>2>>>0],Bb:B[_+36>>>2>>>0],Eb:q?qe(q):""},y=qe(y),q={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ne in q)y=y.replace(new RegExp(ne,"g"),q[ne]);var me="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),$e="January February March April May June July August September October November December".split(" ");q={"%a":P=>me[P.Wa].substring(0,3),"%A":P=>me[P.Wa],"%b":P=>$e[P.ib].substring(0,3),"%B":P=>$e[P.ib],"%C":P=>M((P.bb+1900)/100|0,2),"%d":P=>M(P.mb,2),"%e":P=>A(P.mb,2," "),"%g":P=>j(P).toString().substring(2),"%G":P=>j(P),"%H":P=>M(P.hb,2),"%I":P=>(P=P.hb,P==0?P=12:12<P&&(P-=12),M(P,2)),"%j":P=>{for(var oe=0,Ie=0;Ie<=P.ib-1;oe+=(tt(P.bb+1900)?gn:yn)[Ie++]);return M(P.mb+oe,3)},"%m":P=>M(P.ib+1,2),"%M":P=>M(P.Cb,2),"%n":()=>`
`,"%p":P=>0<=P.hb&&12>P.hb?"AM":"PM","%S":P=>M(P.Db,2),"%t":()=>"	","%u":P=>P.Wa||7,"%U":P=>M(Math.floor((P.ab+7-P.Wa)/7),2),"%V":P=>{var oe=Math.floor((P.ab+7-(P.Wa+6)%7)/7);if(2>=(P.Wa+371-P.ab-2)%7&&oe++,oe)oe==53&&(Ie=(P.Wa+371-P.ab)%7,Ie==4||Ie==3&&tt(P.bb)||(oe=1));else{oe=52;var Ie=(P.Wa+7-P.ab-1)%7;(Ie==4||Ie==5&&tt(P.bb%400-1))&&oe++}return M(oe,2)},"%w":P=>P.Wa,"%W":P=>M(Math.floor((P.ab+7-(P.Wa+6)%7)/7),2),"%y":P=>(P.bb+1900).toString().substring(2),"%Y":P=>P.bb+1900,"%z":P=>{P=P.Bb;var oe=0<=P;return P=Math.abs(P)/60,(oe?"+":"-")+("0000"+(P/60*100+P%60)).slice(-4)},"%Z":P=>P.Eb,"%%":()=>"%"},y=y.replace(/%%/g,"\0\0");for(ne in q)y.includes(ne)&&(y=y.replace(new RegExp(ne,"g"),q[ne](_)));return y=y.replace(/\0\0/g,"%"),ne=bn(y),ne.length>f?0:(D.set(ne,u>>>0),ne.length-1)}for(var wn=Array(256),mr=0;256>mr;++mr)wn[mr]=String.fromCharCode(mr);rn=wn,gt=r.BindingError=class extends Error{constructor(u){super(u),this.name="BindingError"}},r.InternalError=class extends Error{constructor(u){super(u),this.name="InternalError"}},Object.assign(Er.prototype,{get(u){return this.$a[u]},has(u){return this.$a[u]!==void 0},kb(u){var f=this.nb.pop()||this.$a.length;return this.$a[f]=u,f},jb(u){this.$a[u]=void 0,this.nb.push(u)}}),Pe.$a.push({value:void 0},{value:null},{value:!0},{value:!1}),Pe.cb=Pe.$a.length,r.count_emval_handles=()=>{for(var u=0,f=Pe.cb;f<Pe.$a.length;++f)Pe.$a[f]!==void 0&&++u;return u};var ya={ia:function(u,f,y){return Ur(async()=>{await r.wb(u,f,y)})},a:function(u,f,y){throw u>>>=0,new Nt(u).kb(f>>>0,y>>>0),sr=u,jt++,sr},w:function(){return 0},ca:function(){},P:function(){},R:function(){},J:function(){return 0},aa:function(){},X:function(){},$:function(){},D:function(){},Q:function(){},N:function(){},ba:function(){},O:function(){},G:function(u,f,y,_,A){f>>>=0,f=st(f);var M=f.indexOf("u")!=-1;M&&(A=(1n<<64n)-1n),Ke(u>>>0,{name:f,fromWireType:H=>H,toWireType:function(H,X){if(typeof X!="bigint"&&typeof X!="number")throw new TypeError(`Cannot convert "${Cr(X)}" to ${this.name}`);if(X<_||X>A)throw new TypeError(`Passing a number "${Cr(X)}" from JS side to C/C++ side to an argument of type "${f}", which is outside the valid range [${_}, ${A}]!`);return X},argPackAdvance:8,readValueFromPointer:Tr(f,y>>>0,!M),eb:null})},ga:function(u,f,y,_){f=st(f>>>0),Ke(u>>>0,{name:f,fromWireType:function(A){return!!A},toWireType:function(A,M){return M?y:_},argPackAdvance:8,readValueFromPointer:function(A){return this.fromWireType(V[A>>>0])},eb:null})},fa:function(u,f){f=st(f>>>0),Ke(u>>>0,{name:f,fromWireType:y=>{var _=we(y);return Or(y),_},toWireType:(y,_)=>ut(_),argPackAdvance:8,readValueFromPointer:ur,eb:null})},F:function(u,f,y){f=st(f>>>0),Ke(u>>>0,{name:f,fromWireType:_=>_,toWireType:(_,A)=>A,argPackAdvance:8,readValueFromPointer:kr(f,y>>>0),eb:null})},t:function(u,f,y,_,A){if(u>>>=0,y>>>=0,f=st(f>>>0),A===-1&&(A=4294967295),A=X=>X,_===0){var M=32-8*y;A=X=>X<<M>>>M}var H=f.includes("unsigned")?function(X,j){return j>>>0}:function(X,j){return j};Ke(u,{name:f,fromWireType:A,toWireType:H,argPackAdvance:8,readValueFromPointer:Tr(f,y,_!==0),eb:null})},n:function(u,f,y){function _(M){return new A(D.buffer,te[M+4>>>2>>>0],te[M>>>2>>>0])}var A=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][f];y=st(y>>>0),Ke(u>>>0,{name:y,fromWireType:_,argPackAdvance:8,readValueFromPointer:_},{tb:!0})},H:function(u,f){f=st(f>>>0);var y=f==="std::string";Ke(u>>>0,{name:f,fromWireType:function(_){var A=te[_>>>2>>>0],M=_+4;if(y)for(var H=M,X=0;X<=A;++X){var j=M+X;if(X==A||V[j>>>0]==0){if(H=qe(H,j-H),q===void 0)var q=H;else q+=String.fromCharCode(0),q+=H;H=j+1}}else{for(q=Array(A),X=0;X<A;++X)q[X]=String.fromCharCode(V[M+X>>>0]);q=q.join("")}return lt(_),q},toWireType:function(_,A){A instanceof ArrayBuffer&&(A=new Uint8Array(A));var M=typeof A=="string";if(!(M||A instanceof Uint8Array||A instanceof Uint8ClampedArray||A instanceof Int8Array))throw new gt("Cannot pass non-string to std::string");var H=y&&M?Dt(A):A.length,X=Lt(4+H+1),j=X+4;if(te[X>>>2>>>0]=H,y&&M)Ct(A,V,j,H+1);else if(M)for(M=0;M<H;++M){var q=A.charCodeAt(M);if(255<q)throw lt(j),new gt("String has UTF-16 code units that do not fit in 8 bits");V[j+M>>>0]=q}else for(M=0;M<H;++M)V[j+M>>>0]=A[M];return _!==null&&_.push(lt,X),X},argPackAdvance:8,readValueFromPointer:fa,eb(_){lt(_)}})},y:function(u,f,y){if(f>>>=0,y>>>=0,y=st(y),f===2)var _=ma,A=fe,M=lr,H=()=>se,X=1;else f===4&&(_=an,A=ha,M=on,H=()=>te,X=2);Ke(u>>>0,{name:y,fromWireType:j=>{for(var q=te[j>>>2>>>0],ne=H(),me,$e=j+4,P=0;P<=q;++P){var oe=j+4+P*f;(P==q||ne[oe>>>X]==0)&&($e=_($e,oe-$e),me===void 0?me=$e:(me+=String.fromCharCode(0),me+=$e),$e=oe+f)}return lt(j),me},toWireType:(j,q)=>{if(typeof q!="string")throw new gt(`Cannot pass non-string to C++ string type ${y}`);var ne=M(q),me=Lt(4+ne+f);return te[me>>>2]=ne>>X,A(q,me+4,ne+f),j!==null&&j.push(lt,me),me},argPackAdvance:8,readValueFromPointer:ur,eb(j){lt(j)}})},ha:function(u,f){f=st(f>>>0),Ke(u>>>0,{ub:!0,name:f,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},da:()=>1,s:function(u,f,y){return f>>>=0,y>>>=0,u=we(u>>>0),f=Rr(f,"emval::as"),Br(f,y,u)},v:function(u){return u>>>=0,Ur(()=>(u=we(u),u.then(ut)))},o:function(u,f,y,_){return y>>>=0,_>>>=0,u=Zt[u>>>0],f=we(f>>>0),u(null,f,y,_)},k:function(u,f,y,_,A){return y>>>=0,_>>>=0,A>>>=0,u=Zt[u>>>0],f=we(f>>>0),y=cr(y),u(f,f[y],_,A)},b:Or,z:function(u,f){return f>>>=0,u=we(u>>>0),f=we(f),u==f},m:function(u){return u>>>=0,u===0?ut(Wr()):(u=cr(u),ut(Wr()[u]))},i:function(u,f,y){f=Nr(u,f>>>0);var _=f.shift();u--;var A=`return function (obj, func, destructorsRef, args) {
`,M=0,H=[];y===0&&H.push("obj");for(var X=["retType"],j=[_],q=0;q<u;++q)H.push("arg"+q),X.push("argType"+q),j.push(f[q]),A+=`  var arg${q} = argType${q}.readValueFromPointer(args${M?"+"+M:""});
`,M+=f[q].argPackAdvance;for(A+=`  var rv = ${y===1?"new func":"func.call"}(${H.join(", ")});
`,q=0;q<u;++q)f[q].deleteObject&&(A+=`  argType${q}.deleteObject(arg${q});
`);return _.ub||(X.push("emval_returnValue"),j.push(Br),A+=`  return emval_returnValue(retType, destructorsRef, rv);
`),X.push(A+`};
`),u=ga(X).apply(null,j),y=`methodCaller<(${f.map(ne=>ne.name).join(", ")}) => ${_.name}>`,pt(pr(y,u))},r:function(u,f){return f>>>=0,u=we(u>>>0),f=we(f),ut(u[f])},e:function(u){u>>>=0,4<u&&(Pe.get(u).pb+=1)},u:function(){return ut([])},l:function(u){u=we(u>>>0);for(var f=Array(u.length),y=0;y<u.length;y++)f[y]=u[y];return ut(f)},d:function(u){return ut(cr(u>>>0))},j:function(){return ut({})},h:function(u){u>>>=0;for(var f=we(u);f.length;){var y=f.pop();f.pop()(y)}Or(u)},g:function(u,f,y){f>>>=0,y>>>=0,u=we(u>>>0),f=we(f),y=we(y),u[f]=y},c:function(u,f){return f>>>=0,u=Rr(u>>>0,"_emval_take_value"),u=u.readValueFromPointer(f),ut(u)},U:function(u,f){u=-9007199254740992>u||9007199254740992<u?NaN:Number(u),f>>>=0,u=new Date(1e3*u),B[f>>>2>>>0]=u.getUTCSeconds(),B[f+4>>>2>>>0]=u.getUTCMinutes(),B[f+8>>>2>>>0]=u.getUTCHours(),B[f+12>>>2>>>0]=u.getUTCDate(),B[f+16>>>2>>>0]=u.getUTCMonth(),B[f+20>>>2>>>0]=u.getUTCFullYear()-1900,B[f+24>>>2>>>0]=u.getUTCDay(),B[f+28>>>2>>>0]=(u.getTime()-Date.UTC(u.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},V:function(u,f){u=-9007199254740992>u||9007199254740992<u?NaN:Number(u),f>>>=0,u=new Date(1e3*u),B[f>>>2>>>0]=u.getSeconds(),B[f+4>>>2>>>0]=u.getMinutes(),B[f+8>>>2>>>0]=u.getHours(),B[f+12>>>2>>>0]=u.getDate(),B[f+16>>>2>>>0]=u.getMonth(),B[f+20>>>2>>>0]=u.getFullYear()-1900,B[f+24>>>2>>>0]=u.getDay(),B[f+28>>>2>>>0]=(tt(u.getFullYear())?mn:yt)[u.getMonth()]+u.getDate()-1|0,B[f+36>>>2>>>0]=-(60*u.getTimezoneOffset());var y=new Date(u.getFullYear(),6,1).getTimezoneOffset(),_=new Date(u.getFullYear(),0,1).getTimezoneOffset();B[f+32>>>2>>>0]=(y!=_&&u.getTimezoneOffset()==Math.min(_,y))|0},W:function(u){u>>>=0;var f=new Date(B[u+20>>>2>>>0]+1900,B[u+16>>>2>>>0],B[u+12>>>2>>>0],B[u+8>>>2>>>0],B[u+4>>>2>>>0],B[u>>>2>>>0],0),y=B[u+32>>>2>>>0],_=f.getTimezoneOffset(),A=new Date(f.getFullYear(),6,1).getTimezoneOffset(),M=new Date(f.getFullYear(),0,1).getTimezoneOffset(),H=Math.min(M,A);return 0>y?B[u+32>>>2>>>0]=+(A!=M&&H==_):0<y!=(H==_)&&(A=Math.max(M,A),f.setTime(f.getTime()+6e4*((0<y?H:A)-_))),B[u+24>>>2>>>0]=f.getDay(),B[u+28>>>2>>>0]=(tt(f.getFullYear())?mn:yt)[f.getMonth()]+f.getDate()-1|0,B[u>>>2>>>0]=f.getSeconds(),B[u+4>>>2>>>0]=f.getMinutes(),B[u+8>>>2>>>0]=f.getHours(),B[u+12>>>2>>>0]=f.getDate(),B[u+16>>>2>>>0]=f.getMonth(),B[u+20>>>2>>>0]=f.getYear(),u=f.getTime(),isNaN(u)?(B[$n()>>>2>>>0]=61,u=-1):u/=1e3,BigInt(u)},S:function(){return-52},T:function(){},L:function(u,f,y){function _(j){return(j=j.toTimeString().match(/\(([A-Za-z ]+)\)$/))?j[1]:"GMT"}y>>>=0;var A=new Date().getFullYear(),M=new Date(A,0,1),H=new Date(A,6,1);A=M.getTimezoneOffset();var X=H.getTimezoneOffset();te[u>>>0>>>2>>>0]=60*Math.max(A,X),B[f>>>0>>>2>>>0]=+(A!=X),u=_(M),f=_(H),u=Vr(u),f=Vr(f),X<A?(te[y>>>2>>>0]=u,te[y+4>>>2>>>0]=f):(te[y>>>2>>>0]=f,te[y+4>>>2>>>0]=u)},A:()=>{Ge("")},f:function(u,f,y){return u>>>=0,f=rt(f>>>0,y>>>0),Mt[u].apply(null,f)},I:function(u,f,y){return u>>>=0,f=rt(f>>>0,y>>>0),Mt[u].apply(null,f)},E:()=>Date.now(),M:function(){return 4294901760},q:()=>performance.now(),K:function(u){u>>>=0;var f=V.length;if(4294901760<u)return!1;for(var y=1;4>=y;y*=2){var _=f*(1+.2/y);_=Math.min(_,u+100663296);var A=Math;_=Math.max(u,_);e:{A=(A.min.call(A,4294901760,_+(65536-_%65536)%65536)-E.buffer.byteLength+65535)/65536;try{E.grow(A),Ue();var M=1;break e}catch{}M=void 0}if(M)return!0}return!1},Z:function(u,f){u>>>=0,f>>>=0;var y=0;return Ye().forEach((_,A)=>{var M=f+y;for(A=te[u+4*A>>>2>>>0]=M,M=0;M<_.length;++M)D[A++>>>0>>>0]=_.charCodeAt(M);D[A>>>0>>>0]=0,y+=_.length+1}),0},_:function(u,f){u>>>=0,f>>>=0;var y=Ye();te[u>>>2>>>0]=y.length;var _=0;return y.forEach(A=>_+=A.length+1),te[f>>>2>>>0]=_,0},x:()=>52,C:function(){return 52},Y:function(){return 70},B:function(u,f,y,_){f>>>=0,y>>>=0,_>>>=0;for(var A=0,M=0;M<y;M++){var H=te[f>>>2>>>0],X=te[f+4>>>2>>>0];f+=8;for(var j=0;j<X;j++){var q=V[H+j>>>0],ne=hn[u];q===0||q===10?((u===1?C:S)(Vt(ne,0)),ne.length=0):ne.push(q)}A+=X}return te[_>>>2>>>0]=A,0},ea:vn,p:function(u,f,y,_){return vn(u>>>0,f>>>0,y>>>0,_>>>0)}},ue=function(){function u(y){return ue=y.exports,ue=sn(),ue=Sn(),E=ue.ja,Ue(),ye.unshift(ue.ka),ve--,ve==0&&(We!==null&&(clearInterval(We),We=null),Be&&(y=Be,Be=null,y())),ue}var f={a:ya};if(ve++,r.instantiateWasm)try{return r.instantiateWasm(f,u)}catch(y){S(`Module.instantiateWasm callback failed with error: ${y}`),i(y)}return Bt(f,function(y){u(y.instance)}).catch(i),{}}();r._OrtInit=(u,f)=>(r._OrtInit=ue.la)(u,f),r._OrtGetLastError=(u,f)=>(r._OrtGetLastError=ue.ma)(u,f),r._OrtCreateSessionOptions=(u,f,y,_,A,M,H,X,j,q)=>(r._OrtCreateSessionOptions=ue.na)(u,f,y,_,A,M,H,X,j,q),r._OrtAppendExecutionProvider=(u,f)=>(r._OrtAppendExecutionProvider=ue.oa)(u,f),r._OrtAddFreeDimensionOverride=(u,f,y)=>(r._OrtAddFreeDimensionOverride=ue.pa)(u,f,y),r._OrtAddSessionConfigEntry=(u,f,y)=>(r._OrtAddSessionConfigEntry=ue.qa)(u,f,y),r._OrtReleaseSessionOptions=u=>(r._OrtReleaseSessionOptions=ue.ra)(u),r._OrtCreateSession=(u,f,y)=>(r._OrtCreateSession=ue.sa)(u,f,y),r._OrtReleaseSession=u=>(r._OrtReleaseSession=ue.ta)(u),r._OrtGetInputOutputCount=(u,f,y)=>(r._OrtGetInputOutputCount=ue.ua)(u,f,y),r._OrtGetInputName=(u,f)=>(r._OrtGetInputName=ue.va)(u,f),r._OrtGetOutputName=(u,f)=>(r._OrtGetOutputName=ue.wa)(u,f),r._OrtFree=u=>(r._OrtFree=ue.xa)(u),r._OrtCreateTensor=(u,f,y,_,A,M)=>(r._OrtCreateTensor=ue.ya)(u,f,y,_,A,M),r._OrtGetTensorData=(u,f,y,_,A)=>(r._OrtGetTensorData=ue.za)(u,f,y,_,A),r._OrtReleaseTensor=u=>(r._OrtReleaseTensor=ue.Aa)(u),r._OrtCreateRunOptions=(u,f,y,_)=>(r._OrtCreateRunOptions=ue.Ba)(u,f,y,_),r._OrtAddRunConfigEntry=(u,f,y)=>(r._OrtAddRunConfigEntry=ue.Ca)(u,f,y),r._OrtReleaseRunOptions=u=>(r._OrtReleaseRunOptions=ue.Da)(u),r._OrtCreateBinding=u=>(r._OrtCreateBinding=ue.Ea)(u),r._OrtBindInput=(u,f,y)=>(r._OrtBindInput=ue.Fa)(u,f,y),r._OrtBindOutput=(u,f,y,_)=>(r._OrtBindOutput=ue.Ga)(u,f,y,_),r._OrtClearBoundOutputs=u=>(r._OrtClearBoundOutputs=ue.Ha)(u),r._OrtReleaseBinding=u=>(r._OrtReleaseBinding=ue.Ia)(u),r._OrtRunWithBinding=(u,f,y,_,A)=>(r._OrtRunWithBinding=ue.Ja)(u,f,y,_,A),r._OrtRun=(u,f,y,_,A,M,H,X)=>(r._OrtRun=ue.Ka)(u,f,y,_,A,M,H,X),r._OrtEndProfiling=u=>(r._OrtEndProfiling=ue.La)(u),r._JsepOutput=(u,f,y)=>(r._JsepOutput=ue.Ma)(u,f,y),r._JsepGetNodeName=u=>(r._JsepGetNodeName=ue.Na)(u);var $n=()=>($n=ue.Oa)(),Lt=r._malloc=u=>(Lt=r._malloc=ue.Pa)(u),lt=r._free=u=>(lt=r._free=ue.Qa)(u),Qt=u=>(Qt=ue.Ra)(u),hr=()=>(hr=ue.Ta)(),gr=u=>(gr=ue.Ua)(u),Hr=u=>(Hr=ue.Va)(u),Jt=u=>(Jt=ue.Xa)(u),_n=()=>(_n=ue.Ya)(),$t=u=>($t=ue.Za)(u),ft=()=>(ft=ue._a)();r.___start_em_js=915491,r.___stop_em_js=915652;function Sn(){var u=ue;u=Object.assign({},u);var f=_=>()=>_()>>>0,y=_=>A=>_(A)>>>0;return u.Oa=f(u.Oa),u.Pa=y(u.Pa),u.Ra=y(u.Ra),u.Ta=f(u.Ta),u.Va=y(u.Va),u}r.stackAlloc=Hr,r.stackSave=hr,r.stackRestore=gr,r.UTF8ToString=qe,r.stringToUTF8=(u,f,y)=>Ct(u,V,f,y),r.lengthBytesUTF8=Dt;var zt;Be=function u(){zt||Lr(),zt||(Be=u)};function Lr(){if(!(0<ve)){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;){var u=r.preRun.shift();pe.unshift(u)}for(;0<pe.length;)pe.shift()(r);if(!(0<ve||zt||(zt=!0,r.calledRun=!0,O))){for(;0<ye.length;)ye.shift()(r);for(a(r);0<de.length;)de.shift()(r)}}}return Lr(),t.ready}})();typeof $o=="object"&&typeof Ba=="object"?Ba.exports=wo:typeof define=="function"&&define.amd&&define([],()=>wo)});var So=yr(()=>{});var xo=yr(()=>{});var Co={};br(Co,{cpus:()=>Hd});var Hd,Io=Q(()=>{Hd=void 0});var Eo=yr((To,Ma)=>{"use strict";var Ao=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){function r(){return be.buffer!=de.buffer&&Re(),de}function a(){return be.buffer!=de.buffer&&Re(),ve}function i(){return be.buffer!=de.buffer&&Re(),We}function s(){return be.buffer!=de.buffer&&Re(),Be}function o(){return be.buffer!=de.buffer&&Re(),Ge}function c(){return be.buffer!=de.buffer&&Re(),F}function p(){return be.buffer!=de.buffer&&Re(),ie}function m(){return be.buffer!=de.buffer&&Re(),ot}var l=t,g,b;l.ready=new Promise((n,d)=>{g=n,b=d}),l.mountExternalData=(n,d)=>{(l.Fb||(l.Fb=new Map)).set(n,d)},l.unmountExternalData=()=>{delete l.Fb},l.jsepInit=(n,d,h,v,I,k,z,G)=>{l.rc=n,l.$b=d,l.bc=h,l.Ob=v,l.ac=I,l.eb=k,l.cc=z,l.dc=G,d=(Z,K,ae)=>(...ge)=>{let Se=ft,R=K?.();ge=Z(...ge);let le=K?.();return R!==le&&(Z=le,ae(R),K=ae=null),ft!=Se?A():ge},h=Z=>async(...K)=>{try{if(l.Eb)throw Error("Session already started");let ae=l.Eb={fc:K[0],errors:[]},ge=await Z(...K);if(l.Eb!==ae)throw Error("Session mismatch");n.flush();let Se=ae.errors;if(0<Se.length){let R=await Promise.all(Se);if(R=R.filter(le=>le),0<R.length)throw Error(R.join(`
`))}return ge}finally{l.Eb=null}},l._OrtCreateSession=d(l._OrtCreateSession,()=>l._OrtCreateSession,Z=>l._OrtCreateSession=Z),l._OrtRun=h(d(l._OrtRun,()=>l._OrtRun,Z=>l._OrtRun=Z)),l._OrtRunWithBinding=h(d(l._OrtRunWithBinding,()=>l._OrtRunWithBinding,Z=>l._OrtRunWithBinding=Z)),l._OrtBindInput=d(l._OrtBindInput,()=>l._OrtBindInput,Z=>l._OrtBindInput=Z),l.jsepRegisterBuffer=(Z,K,ae,ge)=>n.registerBuffer(Z,K,ae,ge),l.jsepUnregisterBuffers=Z=>{n.unregisterBuffers(Z)},l.jsepGetBuffer=Z=>n.getBuffer(Z),l.jsepCreateDownloader=(Z,K,ae)=>n.createDownloader(Z,K,ae),l.jsepOnRunStart=()=>n.onRunStart()};var w=Object.assign({},l),$="./this.program",x=(n,d)=>{throw d},T=typeof window=="object",C=typeof importScripts=="function",S=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",E=l.ENVIRONMENT_IS_PTHREAD||!1,O="";function U(n){return l.locateFile?l.locateFile(n,O):O+n}var D,V,Y;if(S){var se=(ka(),tr(Oa)),B=(Ra(),tr(Pa));O=C?B.dirname(O)+"/":__dirname+"/",D=(d,h)=>(d=Dt(d)?new URL(d):B.normalize(d),se.readFileSync(d,h?void 0:"utf8")),Y=d=>(d=D(d,!0),d.buffer||(d=new Uint8Array(d)),d),V=(d,h,v,I=!0)=>{d=Dt(d)?new URL(d):B.normalize(d),se.readFile(d,I?void 0:"utf8",(k,z)=>{k?v(k):h(I?z.buffer:z)})},!l.thisProgram&&1<process.argv.length&&($=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),x=(d,h)=>{throw process.exitCode=d,h},l.inspect=()=>"[Emscripten Module object]";let n;try{n=So()}catch(d){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),d}global.Worker=n.Worker}else(T||C)&&(C?O=self.location.href:typeof document<"u"&&document.currentScript&&(O=document.currentScript.src),typeof e<"u"&&e&&(O=e),O.indexOf("blob:")!==0?O=O.substr(0,O.replace(/[?#].*/,"").lastIndexOf("/")+1):O="",S||(D=n=>{var d=new XMLHttpRequest;return d.open("GET",n,!1),d.send(null),d.responseText},C&&(Y=n=>{var d=new XMLHttpRequest;return d.open("GET",n,!1),d.responseType="arraybuffer",d.send(null),new Uint8Array(d.response)}),V=(n,d,h)=>{var v=new XMLHttpRequest;v.open("GET",n,!0),v.responseType="arraybuffer",v.onload=()=>{v.status==200||v.status==0&&v.response?d(v.response):h()},v.onerror=h,v.send(null)}));S&&typeof performance>"u"&&(global.performance=xo().performance);var te=console.log.bind(console),ke=console.error.bind(console);S&&(te=(...n)=>se.writeSync(1,n.join(" ")+`
`),ke=(...n)=>se.writeSync(2,n.join(" ")+`
`));var Oe=te,ee=ke;Object.assign(l,w),w=null,typeof WebAssembly!="object"&&Vt("no native wasm support detected");var be,Ue,pe=!1,ye,de,ve,We,Be,Ge,F,ie,he,Je,ot;function Re(){var n=be.buffer;l.HEAP8=de=new Int8Array(n),l.HEAP16=We=new Int16Array(n),l.HEAPU8=ve=new Uint8Array(n),l.HEAPU16=Be=new Uint16Array(n),l.HEAP32=Ge=new Int32Array(n),l.HEAPU32=F=new Uint32Array(n),l.HEAPF32=ie=new Float32Array(n),l.HEAPF64=ot=new Float64Array(n),l.HEAP64=he=new BigInt64Array(n),l.HEAPU64=Je=new BigUint64Array(n)}var Fe=16777216;if(E)be=l.wasmMemory;else if(l.wasmMemory)be=l.wasmMemory;else if(be=new WebAssembly.Memory({initial:Fe/65536,maximum:65536,shared:!0}),!(be.buffer instanceof SharedArrayBuffer))throw ee("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),S&&ee("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");Re(),Fe=be.buffer.byteLength;var Bt=[],Mt=[],qt=[],Nt=0,sr=null,jt=null;function xr(){if(Nt--,Nt==0&&(sr!==null&&(clearInterval(sr),sr=null),jt)){var n=jt;jt=null,n()}}function Vt(n){throw n="Aborted("+n+")",ee(n),pe=!0,ye=1,n=new WebAssembly.RuntimeError(n+". Build with -sASSERTIONS for more info."),b(n),n}var qe=n=>n.startsWith("data:application/octet-stream;base64,"),Dt=n=>n.startsWith("file://"),Ct;Ct="ort-wasm-simd-threaded.wasm",qe(Ct)||(Ct=U(Ct));function Cr(n){if(Y)return Y(n);throw"both async and sync fetching of the wasm failed"}function rn(n){if(T||C){if(typeof fetch=="function"&&!Dt(n))return fetch(n,{credentials:"same-origin"}).then(d=>{if(!d.ok)throw"failed to load wasm binary file at '"+n+"'";return d.arrayBuffer()}).catch(()=>Cr(n));if(V)return new Promise((d,h)=>{V(n,v=>d(new Uint8Array(v)),h)})}return Promise.resolve().then(()=>Cr(n))}function st(n,d,h){return rn(n).then(v=>WebAssembly.instantiate(v,d)).then(v=>v).then(h,v=>{ee(`failed to asynchronously prepare wasm: ${v}`),Vt(v)})}function Ir(n,d){var h=Ct;return typeof WebAssembly.instantiateStreaming!="function"||qe(h)||Dt(h)||S||typeof fetch!="function"?st(h,n,d):fetch(h,{credentials:"same-origin"}).then(v=>WebAssembly.instantiateStreaming(v,n).then(d,function(I){return ee(`wasm streaming compile failed: ${I}`),ee("falling back to ArrayBuffer instantiation"),st(h,n,d)}))}var Kt={904236:(n,d,h,v)=>{if(typeof l>"u"||!l.Fb)return 1;if(n=Pe(n>>>0),n.startsWith("./")&&(n=n.substring(2)),n=l.Fb.get(n),!n)return 2;if(d>>>=0,h>>>=0,v>>>=0,d+h>n.byteLength)return 3;try{return a().set(n.subarray(d,d+h),v>>>0),0}catch{return 4}},904737:n=>l.$b(n),904770:n=>l.bc(n),904802:(n,d,h)=>{l.Ob(n,d,h,!0)},904841:(n,d,h)=>{l.Ob(n,d,h)},904874:n=>{l.eb("Abs",n,void 0)},904925:n=>{l.eb("Neg",n,void 0)},904976:n=>{l.eb("Floor",n,void 0)},905029:n=>{l.eb("Ceil",n,void 0)},905081:n=>{l.eb("Reciprocal",n,void 0)},905139:n=>{l.eb("Sqrt",n,void 0)},905191:n=>{l.eb("Exp",n,void 0)},905242:n=>{l.eb("Erf",n,void 0)},905293:n=>{l.eb("Sigmoid",n,void 0)},905348:(n,d,h)=>{l.eb("HardSigmoid",n,{alpha:d,beta:h})},905427:n=>{l.eb("Log",n,void 0)},905478:n=>{l.eb("Sin",n,void 0)},905529:n=>{l.eb("Cos",n,void 0)},905580:n=>{l.eb("Tan",n,void 0)},905631:n=>{l.eb("Asin",n,void 0)},905683:n=>{l.eb("Acos",n,void 0)},905735:n=>{l.eb("Atan",n,void 0)},905787:n=>{l.eb("Sinh",n,void 0)},905839:n=>{l.eb("Cosh",n,void 0)},905891:n=>{l.eb("Asinh",n,void 0)},905944:n=>{l.eb("Acosh",n,void 0)},905997:n=>{l.eb("Atanh",n,void 0)},906050:n=>{l.eb("Tanh",n,void 0)},906102:n=>{l.eb("Not",n,void 0)},906153:(n,d,h)=>{l.eb("Clip",n,{min:d,max:h})},906222:n=>{l.eb("Clip",n,void 0)},906274:(n,d)=>{l.eb("Elu",n,{alpha:d})},906332:n=>{l.eb("Relu",n,void 0)},906384:(n,d)=>{l.eb("LeakyRelu",n,{alpha:d})},906448:(n,d)=>{l.eb("ThresholdedRelu",n,{alpha:d})},906518:(n,d)=>{l.eb("Cast",n,{to:d})},906576:n=>{l.eb("Add",n,void 0)},906627:n=>{l.eb("Sub",n,void 0)},906678:n=>{l.eb("Mul",n,void 0)},906729:n=>{l.eb("Div",n,void 0)},906780:n=>{l.eb("Pow",n,void 0)},906831:n=>{l.eb("Equal",n,void 0)},906884:n=>{l.eb("Greater",n,void 0)},906939:n=>{l.eb("GreaterOrEqual",n,void 0)},907001:n=>{l.eb("Less",n,void 0)},907053:n=>{l.eb("LessOrEqual",n,void 0)},907112:(n,d,h,v,I)=>{l.eb("ReduceMean",n,{keepDims:!!d,noopWithEmptyAxes:!!h,axes:v?Array.from(o().subarray(v>>>0,I>>>0)):[]})},907271:(n,d,h,v,I)=>{l.eb("ReduceMax",n,{keepDims:!!d,noopWithEmptyAxes:!!h,axes:v?Array.from(o().subarray(v>>>0,I>>>0)):[]})},907429:(n,d,h,v,I)=>{l.eb("ReduceMin",n,{keepDims:!!d,noopWithEmptyAxes:!!h,axes:v?Array.from(o().subarray(v>>>0,I>>>0)):[]})},907587:(n,d,h,v,I)=>{l.eb("ReduceProd",n,{keepDims:!!d,noopWithEmptyAxes:!!h,axes:v?Array.from(o().subarray(v>>>0,I>>>0)):[]})},907746:(n,d,h,v,I)=>{l.eb("ReduceSum",n,{keepDims:!!d,noopWithEmptyAxes:!!h,axes:v?Array.from(o().subarray(v>>>0,I>>>0)):[]})},907904:(n,d,h,v,I)=>{l.eb("ReduceL1",n,{keepDims:!!d,noopWithEmptyAxes:!!h,axes:v?Array.from(o().subarray(v>>>0,I>>>0)):[]})},908061:(n,d,h,v,I)=>{l.eb("ReduceL2",n,{keepDims:!!d,noopWithEmptyAxes:!!h,axes:v?Array.from(o().subarray(v>>>0,I>>>0)):[]})},908218:(n,d,h,v,I)=>{l.eb("ReduceLogSum",n,{keepDims:!!d,noopWithEmptyAxes:!!h,axes:v?Array.from(o().subarray(v>>>0,I>>>0)):[]})},908379:(n,d,h,v,I)=>{l.eb("ReduceSumSquare",n,{keepDims:!!d,noopWithEmptyAxes:!!h,axes:v?Array.from(o().subarray(v>>>0,I>>>0)):[]})},908543:(n,d,h,v,I)=>{l.eb("ReduceLogSumExp",n,{keepDims:!!d,noopWithEmptyAxes:!!h,axes:v?Array.from(o().subarray(v>>>0,I>>>0)):[]})},908707:n=>{l.eb("Where",n,void 0)},908760:(n,d,h)=>{l.eb("Transpose",n,{perm:d?Array.from(o().subarray(d>>>0,h>>>0)):[]})},908868:(n,d,h,v,I,k,z,G,Z,K,ae,ge,Se,R,le)=>{l.eb("ConvTranspose",n,{format:Z?"NHWC":"NCHW",autoPad:d,dilations:[h],group:v,kernel_shape:[I],pads:[k,z],strides:[G],wIsConst:()=>!!r()[K>>>0],outputPadding:ae?Array.from(o().subarray(ae>>>0,ge>>>0)):[],outputShape:Se?Array.from(o().subarray(Se>>>0,R>>>0)):[],activation:Pe(le)})},909270:(n,d,h,v,I,k,z,G,Z,K,ae,ge,Se,R)=>{l.eb("ConvTranspose",n,{format:G?"NHWC":"NCHW",autoPad:d,dilations:Array.from(o().subarray(h>>>0,(h>>>0)+2>>>0)),group:v,kernelShape:Array.from(o().subarray(I>>>0,(I>>>0)+2>>>0)),pads:Array.from(o().subarray(k>>>0,(k>>>0)+4>>>0)),strides:Array.from(o().subarray(z>>>0,(z>>>0)+2>>>0)),wIsConst:()=>!!r()[Z>>>0],outputPadding:K?Array.from(o().subarray(K>>>0,ae>>>0)):[],outputShape:ge?Array.from(o().subarray(ge>>>0,Se>>>0)):[],activation:Pe(R)})},909835:(n,d,h,v,I,k,z,G,Z,K,ae,ge,Se,R,le)=>{l.eb("ConvTranspose",n,{format:Z?"NHWC":"NCHW",autoPad:d,dilations:[h],group:v,kernel_shape:[I],pads:[k,z],strides:[G],wIsConst:()=>!!r()[K>>>0],outputPadding:ae?Array.from(o().subarray(ae>>>0,ge>>>0)):[],outputShape:Se?Array.from(o().subarray(Se>>>0,R>>>0)):[],activation:Pe(le)})},910237:(n,d,h,v,I,k,z,G,Z,K,ae,ge,Se,R)=>{l.eb("ConvTranspose",n,{format:G?"NHWC":"NCHW",autoPad:d,dilations:Array.from(o().subarray(h>>>0,(h>>>0)+2>>>0)),group:v,kernelShape:Array.from(o().subarray(I>>>0,(I>>>0)+2>>>0)),pads:Array.from(o().subarray(k>>>0,(k>>>0)+4>>>0)),strides:Array.from(o().subarray(z>>>0,(z>>>0)+2>>>0)),wIsConst:()=>!!r()[Z>>>0],outputPadding:K?Array.from(o().subarray(K>>>0,ae>>>0)):[],outputShape:ge?Array.from(o().subarray(ge>>>0,Se>>>0)):[],activation:Pe(R)})},910802:(n,d)=>{l.eb("GlobalAveragePool",n,{format:d?"NHWC":"NCHW"})},910893:(n,d,h,v,I,k,z,G,Z,K,ae,ge,Se,R,le,Te)=>{l.eb("AveragePool",n,{format:Te?"NHWC":"NCHW",auto_pad:d,ceil_mode:h,count_include_pad:v,storage_order:I,dilations:[k,z],kernel_shape:[G,Z],pads:[K,ae,ge,Se],strides:[R,le]})},911177:(n,d)=>{l.eb("GlobalAveragePool",n,{format:d?"NHWC":"NCHW"})},911268:(n,d,h,v,I,k,z,G,Z,K,ae,ge,Se,R,le,Te)=>{l.eb("AveragePool",n,{format:Te?"NHWC":"NCHW",auto_pad:d,ceil_mode:h,count_include_pad:v,storage_order:I,dilations:[k,z],kernel_shape:[G,Z],pads:[K,ae,ge,Se],strides:[R,le]})},911552:(n,d)=>{l.eb("GlobalMaxPool",n,{format:d?"NHWC":"NCHW"})},911639:(n,d,h,v,I,k,z,G,Z,K,ae,ge,Se,R,le,Te)=>{l.eb("MaxPool",n,{format:Te?"NHWC":"NCHW",auto_pad:d,ceil_mode:h,count_include_pad:v,storage_order:I,dilations:[k,z],kernel_shape:[G,Z],pads:[K,ae,ge,Se],strides:[R,le]})},911919:(n,d)=>{l.eb("GlobalMaxPool",n,{format:d?"NHWC":"NCHW"})},912006:(n,d,h,v,I,k,z,G,Z,K,ae,ge,Se,R,le,Te)=>{l.eb("MaxPool",n,{format:Te?"NHWC":"NCHW",auto_pad:d,ceil_mode:h,count_include_pad:v,storage_order:I,dilations:[k,z],kernel_shape:[G,Z],pads:[K,ae,ge,Se],strides:[R,le]})},912286:(n,d,h,v,I)=>{l.eb("Gemm",n,{alpha:d,beta:h,transA:v,transB:I})},912390:n=>{l.eb("MatMul",n,void 0)},912444:(n,d,h,v)=>{l.eb("ArgMax",n,{keepDims:!!d,selectLastIndex:!!h,axis:v})},912552:(n,d,h,v)=>{l.eb("ArgMin",n,{keepDims:!!d,selectLastIndex:!!h,axis:v})},912660:(n,d)=>{l.eb("Softmax",n,{axis:d})},912723:(n,d)=>{l.eb("Concat",n,{axis:d})},912783:(n,d,h,v,I)=>{l.eb("Split",n,{axis:d,numOutputs:h,splitSizes:v?Array.from(o().subarray(v>>>0,I>>>0)):[]})},912923:n=>{l.eb("Expand",n,void 0)},912977:(n,d)=>{l.eb("Gather",n,{axis:Number(d)})},913048:(n,d)=>{l.eb("GatherElements",n,{axis:Number(d)})},913127:(n,d,h,v,I,k,z,G,Z,K,ae)=>{l.eb("Resize",n,{antialias:d,axes:h?Array.from(o().subarray(h>>>0,v>>>0)):[],coordinateTransformMode:Pe(I),cubicCoeffA:k,excludeOutside:z,extrapolationValue:G,keepAspectRatioPolicy:Pe(Z),mode:Pe(K),nearestMode:Pe(ae)})},913473:(n,d,h,v,I,k,z)=>{l.eb("Slice",n,{starts:d?Array.from(o().subarray(d>>>0,h>>>0)):[],ends:v?Array.from(o().subarray(v>>>0,I>>>0)):[],axes:k?Array.from(o().subarray(k>>>0,z>>>0)):[]})},913689:n=>{l.eb("Tile",n,void 0)},913741:(n,d,h)=>{l.eb("LayerNormalization",n,{axis:Number(d),epsilon:Number(h)})},913848:(n,d,h)=>{l.eb("InstanceNormalization",n,{epsilon:d,format:h?"NHWC":"NCHW"})},913962:(n,d,h)=>{l.eb("InstanceNormalization",n,{epsilon:d,format:h?"NHWC":"NCHW"})},914076:n=>{l.eb("Range",n,void 0)},914129:(n,d)=>{l.eb("Einsum",n,{equation:Pe(d)})},914210:(n,d,h,v,I)=>{l.eb("Pad",n,{mode:d,value:h,pads:v?Array.from(o().subarray(v>>>0,I>>>0)):[]})},914337:(n,d,h,v,I,k)=>{l.eb("BatchNormalization",n,{epsilon:d,momentum:h,spatial:!!I,trainingMode:!!v,format:k?"NHWC":"NCHW"})},914506:(n,d,h,v,I,k)=>{l.eb("BatchNormalization",n,{epsilon:d,momentum:h,spatial:!!I,trainingMode:!!v,format:k?"NHWC":"NCHW"})},914675:(n,d,h)=>{l.eb("CumSum",n,{exclusive:Number(d),reverse:Number(h)})},914772:(n,d,h,v,I,k,z,G,Z)=>{l.eb("Attention",n,{numHeads:d,isUnidirectional:h,maskFilterValue:v,scale:I,doRotary:k,qkvHiddenSizes:z?Array.from(o().subarray(Number(G)>>>0,Number(G)+z>>>0)):[],pastPresentShareBuffer:!!Z})},915044:n=>{l.eb("Gelu",n,void 0)},915096:(n,d,h,v,I,k)=>{l.eb("MultiHeadAttention",n,{numHeads:d,isUnidirectional:h,maskFilterValue:v,scale:I,doRotary:k})},915255:n=>{l.eb("BiasAdd",n,void 0)},915310:n=>{l.eb("BiasSplitGelu",n,void 0)},915371:(n,d)=>{l.eb("SkipLayerNormalization",n,{epsilon:d})},915452:(n,d,h,v,I,k,z,G,Z,K,ae,ge,Se)=>{l.eb("Conv",n,{format:Z?"NHWC":"NCHW",auto_pad:d,dilations:[h],group:v,kernel_shape:[I],pads:k?Array.from(o().subarray(k>>>0,z>>>0)):[],strides:[G],w_is_const:()=>!!r()[K>>>0],activation:Pe(ae),activation_params:ge?Array.from(p().subarray(ge>>>0,Se>>>0)):[]})},915822:(n,d,h,v,I,k,z,G,Z,K,ae,ge,Se,R,le,Te)=>{l.eb("Conv",n,{format:ge?"NHWC":"NCHW",auto_pad:d,dilations:[h,v],group:I,kernel_shape:[k,z],pads:G?Array.from(o().subarray(G>>>0,Z>>>0)):[],strides:[K,ae],w_is_const:()=>!!r()[Se>>>0],activation:Pe(R),activation_params:le?Array.from(p().subarray(le>>>0,Te>>>0)):[]})},916213:n=>{l.cc(n)},916247:(n,d)=>l.dc(n,d,l.Eb.fc,l.Eb.errors)};function Ar(n){this.name="ExitStatus",this.message=`Program terminated with exit(${n})`,this.status=n}var gt=n=>{n.terminate(),n.onmessage=()=>{}},nn=n=>{fe.yb.length==0&&(Pr(),fe.Pb(fe.yb[0]));var d=fe.yb.pop();if(!d)return 6;fe.zb.push(d),fe.pb[n.xb]=d,d.xb=n.xb;var h={cmd:"run",start_routine:n.hc,arg:n.Vb,pthread_ptr:n.xb};return S&&d.unref(),d.postMessage(h,n.nc),0},Ke=0,Tr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Er=(n,d,h)=>{d>>>=0;var v=d+h;for(h=d;n[h]&&!(h>=v);)++h;if(16<h-d&&n.buffer&&Tr)return Tr.decode(n.buffer instanceof SharedArrayBuffer?n.slice(d,h):n.subarray(d,h));for(v="";d<h;){var I=n[d++];if(I&128){var k=n[d++]&63;if((I&224)==192)v+=String.fromCharCode((I&31)<<6|k);else{var z=n[d++]&63;I=(I&240)==224?(I&15)<<12|k<<6|z:(I&7)<<18|k<<12|z<<6|n[d++]&63,65536>I?v+=String.fromCharCode(I):(I-=65536,v+=String.fromCharCode(55296|I>>10,56320|I&1023))}}else v+=String.fromCharCode(I)}return v},Pe=(n,d)=>(n>>>=0)?Er(a(),n,d):"",Or=n=>{var d=Sa();return n=n(),In(d),n};function we(n,d){var h=arguments.length-2,v=arguments;return Or(()=>{for(var I=2*h,k=xa(8*I),z=k>>>3,G=0;G<h;G++){var Z=v[2+G];typeof Z=="bigint"?(he[z+2*G]=1n,he[z+2*G+1]=Z):(he[z+2*G]=0n,m()[z+2*G+1>>>0]=Z)}return Di(n,I,k,d)})}function ut(n){if(E)return we(0,1,n);ye=n,0<Ke||(fe.ic(),l.onExit?.(n),pe=!0),x(n,new Ar(n))}var ur=n=>{if(ye=n,E)throw an(n),"unwind";ut(n)},kr=n=>{n instanceof Ar||n=="unwind"||x(1,n)};function fa(){for(var n=l.numThreads;n--;)Pr();Bt.unshift(()=>{Nt++,ma(()=>xr())})}function Pr(){var n=U("ort-wasm-simd-threaded.worker.js");n=new Worker(n),fe.yb.push(n)}function ma(n){E?n():Promise.all(fe.yb.map(fe.Pb)).then(n)}var fe={yb:[],zb:[],Ub:[],pb:{},Ib(){E?(fe.receiveObjectTransfer=fe.ec,fe.threadInitTLS=fe.Tb,fe.setExitStatus=fe.Sb):fa()},Sb:n=>ye=n,sc:["$terminateWorker"],ic:()=>{for(var n of fe.zb)gt(n);for(n of fe.yb)gt(n);fe.yb=[],fe.zb=[],fe.pb=[]},Rb:n=>{var d=n.xb;delete fe.pb[d],fe.yb.push(n),fe.zb.splice(fe.zb.indexOf(n),1),n.xb=0,$a(d)},ec(){},Tb(){fe.Ub.forEach(n=>n())},Pb:n=>new Promise(d=>{n.onmessage=k=>{k=k.data;var z=k.cmd;if(k.targetThread&&k.targetThread!=Cn()){var G=fe.pb[k.targetThread];G?G.postMessage(k,k.transferList):ee(`Internal error! Worker sent a message "${z}" to target pthread ${k.targetThread}, but that thread no longer exists!`)}else z==="checkMailbox"?Qt():z==="spawnThread"?nn(k):z==="cleanupThread"?fe.Rb(fe.pb[k.thread]):z==="killThread"?(k=k.thread,z=fe.pb[k],delete fe.pb[k],gt(z),$a(k),fe.zb.splice(fe.zb.indexOf(z),1),z.xb=0):z==="cancelThread"?fe.pb[k.thread].postMessage({cmd:"cancel"}):z==="loaded"?(n.loaded=!0,S&&!n.xb&&n.unref(),d(n)):z==="alert"?alert(`Thread ${k.threadId}: ${k.text}`):k.target==="setimmediate"?n.postMessage(k):z==="callHandler"?l[k.handler](...k.args):z&&ee(`worker sent an unknown command ${z}`)},n.onerror=k=>{throw ee(`worker sent an error! ${k.filename}:${k.lineno}: ${k.message}`),k},S&&(n.on("message",k=>n.onmessage({data:k})),n.on("error",k=>n.onerror(k)));var h=[],v=["onExit"],I;for(I of v)l.hasOwnProperty(I)&&h.push(I);n.postMessage({cmd:"load",handlers:h,urlOrBlob:l.mainScriptUrlOrBlob||e,wasmMemory:be,wasmModule:Ue})})};l.PThread=fe;var lr=n=>{for(;0<n.length;)n.shift()(l)};l.establishStackSpace=()=>{var n=Cn(),d=c()[n+52>>>2>>>0];n=c()[n+56>>>2>>>0],Ui(d,d-n),In(d)};function an(n){if(E)return we(1,0,n);ur(n)}l.invokeEntryPoint=(n,d)=>{n=Wi.apply(null,[n,d]),0<Ke?fe.Sb(n):_a(n)};function ha(n){this.Db=n-24,this.pc=function(d){c()[this.Db+4>>>2>>>0]=d},this.Mb=function(d){c()[this.Db+8>>>2>>>0]=d},this.Ib=function(d,h){this.Kb(),this.pc(d),this.Mb(h)},this.Kb=function(){c()[this.Db+16>>>2>>>0]=0}}var on=0,Rr=0;function Br(n,d,h,v){return E?we(2,1,n,d,h,v):Yt(n,d,h,v)}function Yt(n,d,h,v){if(n>>>=0,d>>>=0,h>>>=0,v>>>=0,typeof SharedArrayBuffer>"u")return ee("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var I=[];return E&&I.length===0?Br(n,d,h,v):(n={hc:h,xb:n,Vb:v,nc:I},E?(n.qc="spawnThread",postMessage(n,I),0):nn(n))}function sn(n,d,h){return E?we(3,1,n,d,h):0}function wt(n,d){if(E)return we(4,1,n,d)}var et=n=>{for(var d=0,h=0;h<n.length;++h){var v=n.charCodeAt(h);127>=v?d++:2047>=v?d+=2:55296<=v&&57343>=v?(d+=4,++h):d+=3}return d},Mr=(n,d,h,v)=>{if(h>>>=0,!(0<v))return 0;var I=h;v=h+v-1;for(var k=0;k<n.length;++k){var z=n.charCodeAt(k);if(55296<=z&&57343>=z){var G=n.charCodeAt(++k);z=65536+((z&1023)<<10)|G&1023}if(127>=z){if(h>=v)break;d[h++>>>0]=z}else{if(2047>=z){if(h+1>=v)break;d[h++>>>0]=192|z>>6}else{if(65535>=z){if(h+2>=v)break;d[h++>>>0]=224|z>>12}else{if(h+3>=v)break;d[h++>>>0]=240|z>>18,d[h++>>>0]=128|z>>12&63}d[h++>>>0]=128|z>>6&63}d[h++>>>0]=128|z&63}}return d[h>>>0]=0,h-I},Ht=(n,d,h)=>Mr(n,a(),d,h);function Dr(n,d){if(E)return we(5,1,n,d)}function zr(n,d,h){if(E)return we(6,1,n,d,h)}function un(n,d,h){return E?we(7,1,n,d,h):0}function dr(n,d){if(E)return we(8,1,n,d)}function ln(n,d,h){if(E)return we(9,1,n,d,h)}function dn(n,d,h,v){if(E)return we(10,1,n,d,h,v)}function cn(n,d,h,v){if(E)return we(11,1,n,d,h,v)}function pn(n,d,h,v){if(E)return we(12,1,n,d,h,v)}function Ur(n){if(E)return we(13,1,n)}function Zt(n,d){if(E)return we(14,1,n,d)}function fn(n,d,h){if(E)return we(15,1,n,d,h)}var cr=n=>{if(n===null)return"null";var d=typeof n;return d==="object"||d==="array"||d==="function"?n.toString():""+n},Wr,pt=n=>{for(var d="";a()[n>>>0];)d+=Wr[a()[n++>>>0]];return d},Nr={},pr={},ga={},tt;function mn(n,d,h={}){var v=d.name;if(!n)throw new tt(`type "${v}" must have a positive integer typeid pointer`);if(pr.hasOwnProperty(n)){if(h.Yb)return;throw new tt(`Cannot register type '${v}' twice`)}pr[n]=d,delete ga[n],Nr.hasOwnProperty(n)&&(d=Nr[n],delete Nr[n],d.forEach(I=>I()))}function yt(n,d,h={}){if(!("argPackAdvance"in d))throw new TypeError("registerType registeredInstance requires argPackAdvance");mn(n,d,h)}var Vr=(n,d,h)=>{switch(d){case 1:return h?v=>r()[v>>>0>>>0]:v=>a()[v>>>0>>>0];case 2:return h?v=>i()[v>>>1>>>0]:v=>s()[v>>>1>>>0];case 4:return h?v=>o()[v>>>2>>>0]:v=>c()[v>>>2>>>0];case 8:return h?v=>he[v>>>3]:v=>Je[v>>>3];default:throw new TypeError(`invalid integer width (${d}): ${n}`)}};function fr(){this.wb=[void 0],this.Nb=[]}var rt=new fr;function Xt(n){n>>>=0,n>=rt.Db&&--rt.get(n).Qb===0&&rt.Mb(n)}var Ye=n=>{if(!n)throw new tt("Cannot use deleted val. handle = "+n);return rt.get(n).value},nt=n=>{switch(n){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return rt.Kb({Qb:1,value:n})}};function hn(n){return this.fromWireType(o()[n>>>2>>>0])}var gn=(n,d)=>{switch(d){case 4:return function(h){return this.fromWireType(p()[h>>>2>>>0])};case 8:return function(h){return this.fromWireType(m()[h>>>3>>>0])};default:throw new TypeError(`invalid float width (${d}): ${n}`)}};function yn(n){return this.fromWireType(c()[n>>>2>>>0])}var bn=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,vn=(n,d)=>{for(var h=n>>1,v=h+d/2;!(h>=v)&&s()[h>>>0];)++h;if(h<<=1,32<h-n&&bn)return bn.decode(a().slice(n,h));for(h="",v=0;!(v>=d/2);++v){var I=i()[n+2*v>>>1>>>0];if(I==0)break;h+=String.fromCharCode(I)}return h},wn=(n,d,h)=>{if(h??=2147483647,2>h)return 0;h-=2;var v=d;h=h<2*n.length?h/2:n.length;for(var I=0;I<h;++I){var k=n.charCodeAt(I);i()[d>>>1>>>0]=k,d+=2}return i()[d>>>1>>>0]=0,d-v},mr=n=>2*n.length,ya=(n,d)=>{for(var h=0,v="";!(h>=d/4);){var I=o()[n+4*h>>>2>>>0];if(I==0)break;++h,65536<=I?(I-=65536,v+=String.fromCharCode(55296|I>>10,56320|I&1023)):v+=String.fromCharCode(I)}return v},ue=(n,d,h)=>{if(d>>>=0,h??=2147483647,4>h)return 0;var v=d;h=v+h-4;for(var I=0;I<n.length;++I){var k=n.charCodeAt(I);if(55296<=k&&57343>=k){var z=n.charCodeAt(++I);k=65536+((k&1023)<<10)|z&1023}if(o()[d>>>2>>>0]=k,d+=4,d+4>h)break}return o()[d>>>2>>>0]=0,d-v},$n=n=>{for(var d=0,h=0;h<n.length;++h){var v=n.charCodeAt(h);55296<=v&&57343>=v&&++h,d+=4}return d},Lt=()=>{if(!(0<Ke))try{E?_a(ye):ur(ye)}catch(n){kr(n)}};function lt(n){n>>>=0,typeof Atomics.oc=="function"&&(Atomics.oc(o(),n>>>2,n).value.then(Qt),n+=128,Atomics.store(o(),n>>>2,1))}l.__emscripten_thread_mailbox_await=lt;var Qt=()=>{var n=Cn();if(n&&(lt(n),!pe))try{zi(),Lt()}catch(d){kr(d)}};l.checkMailbox=Qt;var hr=[],gr=(n,d)=>{var h=pr[n];if(h===void 0)throw n=Bi(n),h=pt(n),It(n),new tt(d+" has unknown type "+h);return h},Hr=(n,d,h)=>{var v=[];return n=n.toWireType(v,h),v.length&&(c()[d>>>2>>>0]=nt(v)),n},Jt=n=>{try{n()}catch(d){Vt(d)}};function _n(){var n=re,d={};for(let[h,v]of Object.entries(n))d[h]=typeof v=="function"?function(){zt.push(h);try{return v.apply(null,arguments)}finally{pe||(zt.pop(),ft&&$t===1&&zt.length===0&&($t=0,Ke+=1,Jt(Vi),typeof Fibers<"u"&&Fibers.uc()))}}:v;return d}var $t=0,ft=null,Sn=0,zt=[],Lr={},u={},f=0,y=null,_=[];function A(){return new Promise((n,d)=>{y={resolve:n,reject:d}})}function M(){var n=Gr(65548),d=n+12;c()[n>>>2>>>0]=d,c()[n+4>>>2>>>0]=d+65536,d=zt[0];var h=Lr[d];return h===void 0&&(h=f++,Lr[d]=h,u[h]=d),d=h,o()[n+8>>>2>>>0]=d,n}function H(){var n=o()[ft+8>>>2>>>0];return n=re[u[n]],--Ke,n()}function X(n){if(!pe){if($t===0){var d=!1,h=!1;n((v=0)=>{if(!pe&&(Sn=v,d=!0,h)){$t=2,Jt(()=>Hi(ft)),typeof Browser<"u"&&Browser.Jb.Xb&&Browser.Jb.resume(),v=!1;try{var I=H()}catch(G){I=G,v=!0}var k=!1;if(!ft){var z=y;z&&(y=null,(v?z.reject:z.resolve)(I),k=!0)}if(v&&!k)throw I}}),h=!0,d||($t=1,ft=M(),typeof Browser<"u"&&Browser.Jb.Xb&&Browser.Jb.pause(),Jt(()=>Ni(ft)))}else $t===2?($t=0,Jt(Li),It(ft),ft=null,_.forEach(v=>{if(!pe)try{v(),Lt()}catch(I){kr(I)}})):Vt(`invalid state: ${$t}`);return Sn}}function j(n){return X(d=>{n().then(d)})}var q=[],ne={},me=n=>{var d=ne[n];return d===void 0?pt(n):d},$e=()=>typeof globalThis=="object"?globalThis:Function("return this")(),P=n=>{var d=q.length;return q.push(n),d},oe=(n,d)=>{for(var h=Array(n),v=0;v<n;++v)h[v]=gr(c()[d+4*v>>>2>>>0],"parameter "+v);return h},Ie=(n,d)=>Object.defineProperty(d,"name",{value:n});function Ut(n){var d=Function;if(!(d instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof d} which is not a function`);var h=Ie(d.name||"unknownFunctionName",function(){});return h.prototype=d.prototype,h=new h,n=d.apply(h,n),n instanceof Object?n:h}var Wt=n=>n%4===0&&(n%100!==0||n%400===0),gi=[0,31,60,91,121,152,182,213,244,274,305,335],yi=[0,31,59,90,120,151,181,212,243,273,304,334];function bi(n,d,h,v,I,k,z){return E?we(16,1,n,d,h,v,I,k,z):-52}function vi(n,d,h,v,I,k){if(E)return we(17,1,n,d,h,v,I,k)}var wi=n=>{var d=et(n)+1,h=Gr(d);return h&&Ht(n,h,d),h},ba=[],$i=(n,d)=>{ba.length=0;for(var h;h=a()[n++>>>0];){var v=h!=105;v&=h!=112,d+=v&&d%8?4:0,ba.push(h==112?c()[d>>>2>>>0]:h==106?he[d>>>3]:h==105?o()[d>>>2>>>0]:m()[d>>>3>>>0]),d+=v?8:4}return ba},va={},_i=()=>{if(!wa){var n={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:$||"./this.program"},d;for(d in va)va[d]===void 0?delete n[d]:n[d]=va[d];var h=[];for(d in n)h.push(`${d}=${n[d]}`);wa=h}return wa},wa;function Si(n,d){if(E)return we(18,1,n,d);n>>>=0,d>>>=0;var h=0;return _i().forEach((v,I)=>{var k=d+h;for(I=c()[n+4*I>>>2>>>0]=k,k=0;k<v.length;++k)r()[I++>>>0>>>0]=v.charCodeAt(k);r()[I>>>0>>>0]=0,h+=v.length+1}),0}function xi(n,d){if(E)return we(19,1,n,d);n>>>=0,d>>>=0;var h=_i();c()[n>>>2>>>0]=h.length;var v=0;return h.forEach(I=>v+=I.length+1),c()[d>>>2>>>0]=v,0}function Ci(n){return E?we(20,1,n):52}function Ii(n,d,h,v){return E?we(21,1,n,d,h,v):52}function Ai(n,d,h,v){return E?we(22,1,n,d,h,v):70}var Id=[null,[],[]];function Ti(n,d,h,v){if(E)return we(23,1,n,d,h,v);d>>>=0,h>>>=0,v>>>=0;for(var I=0,k=0;k<h;k++){var z=c()[d>>>2>>>0],G=c()[d+4>>>2>>>0];d+=8;for(var Z=0;Z<G;Z++){var K=a()[z+Z>>>0],ae=Id[n];K===0||K===10?((n===1?Oe:ee)(Er(ae,0)),ae.length=0):ae.push(K)}I+=G}return c()[v>>>2>>>0]=I,0}var Ei=[31,29,31,30,31,30,31,31,30,31,30,31],Oi=[31,28,31,30,31,30,31,31,30,31,30,31];function Ad(n){var d=Array(et(n)+1);return Mr(n,d,0,d.length),d}var Td=(n,d)=>{r().set(n,d>>>0)};function ki(n,d,h,v){function I(R,le,Te){for(R=typeof R=="number"?R.toString():R||"";R.length<le;)R=Te[0]+R;return R}function k(R,le){return I(R,le,"0")}function z(R,le){function Te(Fi){return 0>Fi?-1:0<Fi?1:0}var er;return(er=Te(R.getFullYear()-le.getFullYear()))===0&&(er=Te(R.getMonth()-le.getMonth()))===0&&(er=Te(R.getDate()-le.getDate())),er}function G(R){switch(R.getDay()){case 0:return new Date(R.getFullYear()-1,11,29);case 1:return R;case 2:return new Date(R.getFullYear(),0,3);case 3:return new Date(R.getFullYear(),0,2);case 4:return new Date(R.getFullYear(),0,1);case 5:return new Date(R.getFullYear()-1,11,31);case 6:return new Date(R.getFullYear()-1,11,30)}}function Z(R){var le=R.Ab;for(R=new Date(new Date(R.Bb+1900,0,1).getTime());0<le;){var Te=R.getMonth(),er=(Wt(R.getFullYear())?Ei:Oi)[Te];if(le>er-R.getDate())le-=er-R.getDate()+1,R.setDate(1),11>Te?R.setMonth(Te+1):(R.setMonth(0),R.setFullYear(R.getFullYear()+1));else{R.setDate(R.getDate()+le);break}}return Te=new Date(R.getFullYear()+1,0,4),le=G(new Date(R.getFullYear(),0,4)),Te=G(Te),0>=z(le,R)?0>=z(Te,R)?R.getFullYear()+1:R.getFullYear():R.getFullYear()-1}n>>>=0,d>>>=0,h>>>=0,v>>>=0;var K=c()[v+40>>>2>>>0];v={lc:o()[v>>>2>>>0],kc:o()[v+4>>>2>>>0],Gb:o()[v+8>>>2>>>0],Lb:o()[v+12>>>2>>>0],Hb:o()[v+16>>>2>>>0],Bb:o()[v+20>>>2>>>0],vb:o()[v+24>>>2>>>0],Ab:o()[v+28>>>2>>>0],tc:o()[v+32>>>2>>>0],jc:o()[v+36>>>2>>>0],mc:K?Pe(K):""},h=Pe(h),K={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ae in K)h=h.replace(new RegExp(ae,"g"),K[ae]);var ge="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Se="January February March April May June July August September October November December".split(" ");K={"%a":R=>ge[R.vb].substring(0,3),"%A":R=>ge[R.vb],"%b":R=>Se[R.Hb].substring(0,3),"%B":R=>Se[R.Hb],"%C":R=>k((R.Bb+1900)/100|0,2),"%d":R=>k(R.Lb,2),"%e":R=>I(R.Lb,2," "),"%g":R=>Z(R).toString().substring(2),"%G":R=>Z(R),"%H":R=>k(R.Gb,2),"%I":R=>(R=R.Gb,R==0?R=12:12<R&&(R-=12),k(R,2)),"%j":R=>{for(var le=0,Te=0;Te<=R.Hb-1;le+=(Wt(R.Bb+1900)?Ei:Oi)[Te++]);return k(R.Lb+le,3)},"%m":R=>k(R.Hb+1,2),"%M":R=>k(R.kc,2),"%n":()=>`
`,"%p":R=>0<=R.Gb&&12>R.Gb?"AM":"PM","%S":R=>k(R.lc,2),"%t":()=>"	","%u":R=>R.vb||7,"%U":R=>k(Math.floor((R.Ab+7-R.vb)/7),2),"%V":R=>{var le=Math.floor((R.Ab+7-(R.vb+6)%7)/7);if(2>=(R.vb+371-R.Ab-2)%7&&le++,le)le==53&&(Te=(R.vb+371-R.Ab)%7,Te==4||Te==3&&Wt(R.Bb)||(le=1));else{le=52;var Te=(R.vb+7-R.Ab-1)%7;(Te==4||Te==5&&Wt(R.Bb%400-1))&&le++}return k(le,2)},"%w":R=>R.vb,"%W":R=>k(Math.floor((R.Ab+7-(R.vb+6)%7)/7),2),"%y":R=>(R.Bb+1900).toString().substring(2),"%Y":R=>R.Bb+1900,"%z":R=>{R=R.jc;var le=0<=R;return R=Math.abs(R)/60,(le?"+":"-")+("0000"+(R/60*100+R%60)).slice(-4)},"%Z":R=>R.mc,"%%":()=>"%"},h=h.replace(/%%/g,"\0\0");for(ae in K)h.includes(ae)&&(h=h.replace(new RegExp(ae,"g"),K[ae](v)));return h=h.replace(/\0\0/g,"%"),ae=Ad(h),ae.length>d?0:(Td(ae,n),ae.length-1)}fe.Ib();for(var Pi=Array(256),xn=0;256>xn;++xn)Pi[xn]=String.fromCharCode(xn);Wr=Pi,tt=l.BindingError=class extends Error{constructor(n){super(n),this.name="BindingError"}},l.InternalError=class extends Error{constructor(n){super(n),this.name="InternalError"}},Object.assign(fr.prototype,{get(n){return this.wb[n]},has(n){return this.wb[n]!==void 0},Kb(n){var d=this.Nb.pop()||this.wb.length;return this.wb[d]=n,d},Mb(n){this.wb[n]=void 0,this.Nb.push(n)}}),rt.wb.push({value:void 0},{value:null},{value:!0},{value:!1}),rt.Db=rt.wb.length,l.count_emval_handles=()=>{for(var n=0,d=rt.Db;d<rt.wb.length;++d)rt.wb[d]!==void 0&&++n;return n};var Ed=[ut,an,Br,sn,wt,Dr,zr,un,dr,ln,dn,cn,pn,Ur,Zt,fn,bi,vi,Si,xi,Ci,Ii,Ai,Ti],Od={ua:function(n,d,h){return j(async()=>{await l.ac(n,d,h)})},b:function(n,d,h){throw n>>>=0,new ha(n).Ib(d>>>0,h>>>0),on=n,Rr++,on},ga:function(n){Mi(n>>>0,!C,1,!T,131072,!1),fe.Tb()},F:function(n){n>>>=0,E?postMessage({cmd:"cleanupThread",thread:n}):fe.Rb(fe.pb[n])},Y:Yt,z:sn,ma:wt,U:Dr,W:zr,N:un,ka:dr,da:ln,ja:dn,H:cn,V:pn,S:Ur,la:Zt,T:fn,K:function(n,d,h,v,I){n>>>=0,d>>>=0,h>>>=0,d=pt(d);var k=d.indexOf("u")!=-1;k&&(I=(1n<<64n)-1n),yt(n,{name:d,fromWireType:z=>z,toWireType:function(z,G){if(typeof G!="bigint"&&typeof G!="number")throw new TypeError(`Cannot convert "${cr(G)}" to ${this.name}`);if(G<v||G>I)throw new TypeError(`Passing a number "${cr(G)}" from JS side to C/C++ side to an argument of type "${d}", which is outside the valid range [${v}, ${I}]!`);return G},argPackAdvance:8,readValueFromPointer:Vr(d,h,!k),Cb:null})},sa:function(n,d,h,v){n>>>=0,d=pt(d>>>0),yt(n,{name:d,fromWireType:function(I){return!!I},toWireType:function(I,k){return k?h:v},argPackAdvance:8,readValueFromPointer:function(I){return this.fromWireType(a()[I>>>0])},Cb:null})},ra:function(n,d){n>>>=0,d=pt(d>>>0),yt(n,{name:d,fromWireType:h=>{var v=Ye(h);return Xt(h),v},toWireType:(h,v)=>nt(v),argPackAdvance:8,readValueFromPointer:hn,Cb:null})},J:function(n,d,h){n>>>=0,h>>>=0,d=pt(d>>>0),yt(n,{name:d,fromWireType:v=>v,toWireType:(v,I)=>I,argPackAdvance:8,readValueFromPointer:gn(d,h),Cb:null})},v:function(n,d,h,v,I){if(n>>>=0,h>>>=0,d=pt(d>>>0),I===-1&&(I=4294967295),I=G=>G,v===0){var k=32-8*h;I=G=>G<<k>>>k}var z=d.includes("unsigned")?function(G,Z){return Z>>>0}:function(G,Z){return Z};yt(n,{name:d,fromWireType:I,toWireType:z,argPackAdvance:8,readValueFromPointer:Vr(d,h,v!==0),Cb:null})},o:function(n,d,h){function v(k){var z=c()[k>>>2>>>0];return k=c()[k+4>>>2>>>0],new I(r().buffer,k,z)}n>>>=0;var I=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][d];h=pt(h>>>0),yt(n,{name:h,fromWireType:v,argPackAdvance:8,readValueFromPointer:v},{Yb:!0})},L:function(n,d){n>>>=0,d=pt(d>>>0);var h=d==="std::string";yt(n,{name:d,fromWireType:function(v){var I=c()[v>>>2>>>0],k=v+4;if(h)for(var z=k,G=0;G<=I;++G){var Z=k+G;if(G==I||a()[Z>>>0]==0){if(z=Pe(z,Z-z),K===void 0)var K=z;else K+=String.fromCharCode(0),K+=z;z=Z+1}}else{for(K=Array(I),G=0;G<I;++G)K[G]=String.fromCharCode(a()[k+G>>>0]);K=K.join("")}return It(v),K},toWireType:function(v,I){I instanceof ArrayBuffer&&(I=new Uint8Array(I));var k=typeof I=="string";if(!(k||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array))throw new tt("Cannot pass non-string to std::string");var z=h&&k?et(I):I.length,G=Gr(4+z+1),Z=G+4;if(c()[G>>>2>>>0]=z,h&&k)Ht(I,Z,z+1);else if(k)for(k=0;k<z;++k){var K=I.charCodeAt(k);if(255<K)throw It(Z),new tt("String has UTF-16 code units that do not fit in 8 bits");a()[Z+k>>>0]=K}else for(k=0;k<z;++k)a()[Z+k>>>0]=I[k];return v!==null&&v.push(It,G),G},argPackAdvance:8,readValueFromPointer:yn,Cb(v){It(v)}})},B:function(n,d,h){if(n>>>=0,d>>>=0,h>>>=0,h=pt(h),d===2)var v=vn,I=wn,k=mr,z=()=>s(),G=1;else d===4&&(v=ya,I=ue,k=$n,z=()=>c(),G=2);yt(n,{name:h,fromWireType:Z=>{for(var K=c()[Z>>>2>>>0],ae=z(),ge,Se=Z+4,R=0;R<=K;++R){var le=Z+4+R*d;(R==K||ae[le>>>G]==0)&&(Se=v(Se,le-Se),ge===void 0?ge=Se:(ge+=String.fromCharCode(0),ge+=Se),Se=le+d)}return It(Z),ge},toWireType:(Z,K)=>{if(typeof K!="string")throw new tt(`Cannot pass non-string to C++ string type ${h}`);var ae=k(K),ge=Gr(4+ae+d);return c()[ge>>>2]=ae>>G,I(K,ge+4,ae+d),Z!==null&&Z.push(It,ge),ge},argPackAdvance:8,readValueFromPointer:hn,Cb(Z){It(Z)}})},ta:function(n,d){n>>>=0,d=pt(d>>>0),yt(n,{Zb:!0,name:d,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},qa:()=>1,Q:function(n,d){n>>>=0,n==d>>>0?setTimeout(()=>Qt()):E?postMessage({targetThread:n,cmd:"checkMailbox"}):(n=fe.pb[n])&&n.postMessage({cmd:"checkMailbox"})},Z:function(n,d,h,v){d>>>=0,h/=2,hr.length=h,v=v>>>0>>>3;for(var I=0;I<h;I++)hr[I]=he[v+2*I]?he[v+2*I+1]:m()[v+2*I+1>>>0];return n=0>n?Kt[-n-1]:Ed[n],fe.Wb=d,d=n.apply(null,hr),fe.Wb=0,d},fa:lt,pa:function(n){S&&fe.pb[n>>>0].ref()},t:function(n,d,h){return d>>>=0,h>>>=0,n=Ye(n>>>0),d=gr(d,"emval::as"),Hr(d,h,n)},y:function(n){return n>>>=0,j(()=>(n=Ye(n),n.then(nt)))},p:function(n,d,h,v){return h>>>=0,v>>>=0,n=q[n>>>0],d=Ye(d>>>0),n(null,d,h,v)},k:function(n,d,h,v,I){return h>>>=0,v>>>=0,I>>>=0,n=q[n>>>0],d=Ye(d>>>0),h=me(h),n(d,d[h],v,I)},c:Xt,C:function(n,d){return d>>>=0,n=Ye(n>>>0),d=Ye(d),n==d},n:function(n){return n>>>=0,n===0?nt($e()):(n=me(n),nt($e()[n]))},j:function(n,d,h){d=oe(n,d>>>0);var v=d.shift();n--;var I=`return function (obj, func, destructorsRef, args) {
`,k=0,z=[];h===0&&z.push("obj");for(var G=["retType"],Z=[v],K=0;K<n;++K)z.push("arg"+K),G.push("argType"+K),Z.push(d[K]),I+=`  var arg${K} = argType${K}.readValueFromPointer(args${k?"+"+k:""});
`,k+=d[K].argPackAdvance;for(I+=`  var rv = ${h===1?"new func":"func.call"}(${z.join(", ")});
`,K=0;K<n;++K)d[K].deleteObject&&(I+=`  argType${K}.deleteObject(arg${K});
`);return v.Zb||(G.push("emval_returnValue"),Z.push(Hr),I+=`  return emval_returnValue(retType, destructorsRef, rv);
`),G.push(I+`};
`),n=Ut(G).apply(null,Z),h=`methodCaller<(${d.map(ae=>ae.name).join(", ")}) => ${v.name}>`,P(Ie(h,n))},s:function(n,d){return d>>>=0,n=Ye(n>>>0),d=Ye(d),nt(n[d])},e:function(n){n>>>=0,4<n&&(rt.get(n).Qb+=1)},w:function(){return nt([])},m:function(n){n=Ye(n>>>0);for(var d=Array(n.length),h=0;h<n.length;h++)d[h]=n[h];return nt(d)},f:function(n){return nt(me(n>>>0))},l:function(){return nt({})},i:function(n){n>>>=0;for(var d=Ye(n);d.length;){var h=d.pop();d.pop()(h)}Xt(n)},h:function(n,d,h){d>>>=0,h>>>=0,n=Ye(n>>>0),d=Ye(d),h=Ye(h),n[d]=h},d:function(n,d){return d>>>=0,n=gr(n>>>0,"_emval_take_value"),n=n.readValueFromPointer(d),nt(n)},aa:function(n,d){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),d>>>=0,n=new Date(1e3*n),o()[d>>>2>>>0]=n.getUTCSeconds(),o()[d+4>>>2>>>0]=n.getUTCMinutes(),o()[d+8>>>2>>>0]=n.getUTCHours(),o()[d+12>>>2>>>0]=n.getUTCDate(),o()[d+16>>>2>>>0]=n.getUTCMonth(),o()[d+20>>>2>>>0]=n.getUTCFullYear()-1900,o()[d+24>>>2>>>0]=n.getUTCDay(),n=(n.getTime()-Date.UTC(n.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,o()[d+28>>>2>>>0]=n},ba:function(n,d){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),d>>>=0,n=new Date(1e3*n),o()[d>>>2>>>0]=n.getSeconds(),o()[d+4>>>2>>>0]=n.getMinutes(),o()[d+8>>>2>>>0]=n.getHours(),o()[d+12>>>2>>>0]=n.getDate(),o()[d+16>>>2>>>0]=n.getMonth(),o()[d+20>>>2>>>0]=n.getFullYear()-1900,o()[d+24>>>2>>>0]=n.getDay();var h=(Wt(n.getFullYear())?gi:yi)[n.getMonth()]+n.getDate()-1|0;o()[d+28>>>2>>>0]=h,o()[d+36>>>2>>>0]=-(60*n.getTimezoneOffset()),h=new Date(n.getFullYear(),6,1).getTimezoneOffset();var v=new Date(n.getFullYear(),0,1).getTimezoneOffset();n=(h!=v&&n.getTimezoneOffset()==Math.min(v,h))|0,o()[d+32>>>2>>>0]=n},ca:function(n){n>>>=0;var d=new Date(o()[n+20>>>2>>>0]+1900,o()[n+16>>>2>>>0],o()[n+12>>>2>>>0],o()[n+8>>>2>>>0],o()[n+4>>>2>>>0],o()[n>>>2>>>0],0),h=o()[n+32>>>2>>>0],v=d.getTimezoneOffset(),I=new Date(d.getFullYear(),6,1).getTimezoneOffset(),k=new Date(d.getFullYear(),0,1).getTimezoneOffset(),z=Math.min(k,I);return 0>h?o()[n+32>>>2>>>0]=+(I!=k&&z==v):0<h!=(z==v)&&(I=Math.max(k,I),d.setTime(d.getTime()+6e4*((0<h?z:I)-v))),o()[n+24>>>2>>>0]=d.getDay(),h=(Wt(d.getFullYear())?gi:yi)[d.getMonth()]+d.getDate()-1|0,o()[n+28>>>2>>>0]=h,o()[n>>>2>>>0]=d.getSeconds(),o()[n+4>>>2>>>0]=d.getMinutes(),o()[n+8>>>2>>>0]=d.getHours(),o()[n+12>>>2>>>0]=d.getDate(),o()[n+16>>>2>>>0]=d.getMonth(),o()[n+20>>>2>>>0]=d.getYear(),n=d.getTime(),isNaN(n)?(o()[Ri()>>>2>>>0]=61,n=-1):n/=1e3,BigInt(n)},_:bi,$:vi,P:function(n,d,h){function v(K){return(K=K.toTimeString().match(/\(([A-Za-z ]+)\)$/))?K[1]:"GMT"}n>>>=0,d>>>=0,h>>>=0;var I=new Date().getFullYear(),k=new Date(I,0,1),z=new Date(I,6,1);I=k.getTimezoneOffset();var G=z.getTimezoneOffset(),Z=Math.max(I,G);c()[n>>>2>>>0]=60*Z,o()[d>>>2>>>0]=+(I!=G),n=v(k),d=v(z),n=wi(n),d=wi(d),G<I?(c()[h>>>2>>>0]=n,c()[h+4>>>2>>>0]=d):(c()[h>>>2>>>0]=d,c()[h+4>>>2>>>0]=n)},q:()=>{Vt("")},g:function(n,d,h){return n>>>=0,d=$i(d>>>0,h>>>0),Kt[n].apply(null,d)},M:function(n,d,h){return n>>>=0,d=$i(d>>>0,h>>>0),Kt[n].apply(null,d)},G:()=>{},I:()=>Date.now(),oa:()=>{throw Ke+=1,"unwind"},R:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>S?(Io(),tr(Co)).cpus().length:navigator.hardwareConcurrency,O:function(n){n>>>=0;var d=a().length;if(n<=d||4294901760<n)return!1;for(var h=1;4>=h;h*=2){var v=d*(1+.2/h);v=Math.min(v,n+100663296);var I=Math;v=Math.max(n,v);e:{I=(I.min.call(I,4294901760,v+(65536-v%65536)%65536)-be.buffer.byteLength+65535)/65536;try{be.grow(I),Re();var k=1;break e}catch{}k=void 0}if(k)return!0}return!1},ha:Si,ia:xi,X:ur,A:Ci,E:Ii,ea:Ai,D:Ti,a:be||l.wasmMemory,na:ki,r:function(n,d,h,v){return ki(n>>>0,d>>>0,h>>>0,v>>>0)}},re=function(){function n(h,v){return re=h.exports,re=_n(),re=kd(),fe.Ub.push(re.bb),Mt.unshift(re.va),Ue=v,xr(),re}var d={a:Od};if(Nt++,l.instantiateWasm)try{return l.instantiateWasm(d,n)}catch(h){ee(`Module.instantiateWasm callback failed with error: ${h}`),b(h)}return Ir(d,function(h){n(h.instance,h.module)}).catch(b),{}}();l._OrtInit=(n,d)=>(l._OrtInit=re.wa)(n,d),l._OrtGetLastError=(n,d)=>(l._OrtGetLastError=re.xa)(n,d),l._OrtCreateSessionOptions=(n,d,h,v,I,k,z,G,Z,K)=>(l._OrtCreateSessionOptions=re.ya)(n,d,h,v,I,k,z,G,Z,K),l._OrtAppendExecutionProvider=(n,d)=>(l._OrtAppendExecutionProvider=re.za)(n,d),l._OrtAddFreeDimensionOverride=(n,d,h)=>(l._OrtAddFreeDimensionOverride=re.Aa)(n,d,h),l._OrtAddSessionConfigEntry=(n,d,h)=>(l._OrtAddSessionConfigEntry=re.Ba)(n,d,h),l._OrtReleaseSessionOptions=n=>(l._OrtReleaseSessionOptions=re.Ca)(n),l._OrtCreateSession=(n,d,h)=>(l._OrtCreateSession=re.Da)(n,d,h),l._OrtReleaseSession=n=>(l._OrtReleaseSession=re.Ea)(n),l._OrtGetInputOutputCount=(n,d,h)=>(l._OrtGetInputOutputCount=re.Fa)(n,d,h),l._OrtGetInputName=(n,d)=>(l._OrtGetInputName=re.Ga)(n,d),l._OrtGetOutputName=(n,d)=>(l._OrtGetOutputName=re.Ha)(n,d),l._OrtFree=n=>(l._OrtFree=re.Ia)(n),l._OrtCreateTensor=(n,d,h,v,I,k)=>(l._OrtCreateTensor=re.Ja)(n,d,h,v,I,k),l._OrtGetTensorData=(n,d,h,v,I)=>(l._OrtGetTensorData=re.Ka)(n,d,h,v,I),l._OrtReleaseTensor=n=>(l._OrtReleaseTensor=re.La)(n),l._OrtCreateRunOptions=(n,d,h,v)=>(l._OrtCreateRunOptions=re.Ma)(n,d,h,v),l._OrtAddRunConfigEntry=(n,d,h)=>(l._OrtAddRunConfigEntry=re.Na)(n,d,h),l._OrtReleaseRunOptions=n=>(l._OrtReleaseRunOptions=re.Oa)(n),l._OrtCreateBinding=n=>(l._OrtCreateBinding=re.Pa)(n),l._OrtBindInput=(n,d,h)=>(l._OrtBindInput=re.Qa)(n,d,h),l._OrtBindOutput=(n,d,h,v)=>(l._OrtBindOutput=re.Ra)(n,d,h,v),l._OrtClearBoundOutputs=n=>(l._OrtClearBoundOutputs=re.Sa)(n),l._OrtReleaseBinding=n=>(l._OrtReleaseBinding=re.Ta)(n),l._OrtRunWithBinding=(n,d,h,v,I)=>(l._OrtRunWithBinding=re.Ua)(n,d,h,v,I),l._OrtRun=(n,d,h,v,I,k,z,G)=>(l._OrtRun=re.Va)(n,d,h,v,I,k,z,G),l._OrtEndProfiling=n=>(l._OrtEndProfiling=re.Wa)(n),l._JsepOutput=(n,d,h)=>(l._JsepOutput=re.Xa)(n,d,h),l._JsepGetNodeName=n=>(l._JsepGetNodeName=re.Ya)(n);var Ri=()=>(Ri=re.Za)(),Cn=l._pthread_self=()=>(Cn=l._pthread_self=re._a)(),Gr=l._malloc=n=>(Gr=l._malloc=re.$a)(n),It=l._free=n=>(It=l._free=re.ab)(n);l.__emscripten_tls_init=()=>(l.__emscripten_tls_init=re.bb)();var Bi=n=>(Bi=re.cb)(n);l.__embind_initialize_bindings=()=>(l.__embind_initialize_bindings=re.db)();var Mi=l.__emscripten_thread_init=(n,d,h,v,I,k)=>(Mi=l.__emscripten_thread_init=re.fb)(n,d,h,v,I,k);l.__emscripten_thread_crashed=()=>(l.__emscripten_thread_crashed=re.gb)();var Di=(n,d,h,v)=>(Di=re.hb)(n,d,h,v),$a=n=>($a=re.ib)(n),_a=l.__emscripten_thread_exit=n=>(_a=l.__emscripten_thread_exit=re.jb)(n),zi=()=>(zi=re.kb)(),Ui=(n,d)=>(Ui=re.lb)(n,d),Sa=()=>(Sa=re.mb)(),In=n=>(In=re.nb)(n),xa=n=>(xa=re.ob)(n),Wi=l.dynCall_ii=(n,d)=>(Wi=l.dynCall_ii=re.qb)(n,d),Ni=n=>(Ni=re.rb)(n),Vi=()=>(Vi=re.sb)(),Hi=n=>(Hi=re.tb)(n),Li=()=>(Li=re.ub)();l.___start_em_js=916359,l.___stop_em_js=916520;function kd(){var n=re;n=Object.assign({},n);var d=v=>()=>v()>>>0,h=v=>I=>v(I)>>>0;return n.Za=d(n.Za),n._a=d(n._a),n.$a=h(n.$a),n.cb=h(n.cb),n.emscripten_main_runtime_thread_id=d(n.emscripten_main_runtime_thread_id),n.mb=d(n.mb),n.ob=h(n.ob),n}l.wasmMemory=be,l.stackAlloc=xa,l.stackSave=Sa,l.stackRestore=In,l.keepRuntimeAlive=()=>0<Ke,l.UTF8ToString=Pe,l.stringToUTF8=Ht,l.lengthBytesUTF8=et,l.ExitStatus=Ar,l.PThread=fe;var An;jt=function n(){An||Gi(),An||(jt=n)};function Gi(){if(!(0<Nt))if(E)g(l),E||lr(Mt),startWorker(l);else{if(l.preRun)for(typeof l.preRun=="function"&&(l.preRun=[l.preRun]);l.preRun.length;)Bt.unshift(l.preRun.shift());lr(Bt),0<Nt||An||(An=!0,l.calledRun=!0,pe||(E||lr(Mt),g(l),E||lr(qt)))}}return Gi(),t.ready}})();typeof To=="object"&&typeof Ma=="object"?Ma.exports=Ao:typeof define=="function"&&define.amd&&define([],()=>Ao)});var Oo=yr((Mm,Ld)=>{Ld.exports='"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed?.(),a}}self.onmessage=handleMessage;\n'});var Po,Gd,Da,za,zn,ko,Fd,qd,jd,Ro,Ne,vr=Q(()=>{"use strict";Po=_o();Gd=Eo(),za=!1,zn=!1,ko=!1,Fd=e=>{if(e===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},qd=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},jd=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Ro=async e=>{if(za)return Promise.resolve();if(zn)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(ko)throw new Error("previous call to 'initializeWebAssembly()' failed.");zn=!0;let t=e.initTimeout,r=e.numThreads,a=e.simd,i=Fd(r),s=a&&qd(),o=e.wasmPaths,c=typeof o=="string"?o:void 0,p=jd(s,i),m=typeof o=="object"?o[p]:void 0,l=!1,g=[];if(t>0&&g.push(new Promise(b=>{setTimeout(()=>{l=!0,b()},t)})),g.push(new Promise((b,w)=>{let $=i?Gd:Po,x={locateFile:(T,C)=>{if(i&&T.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Oo()],{type:"text/javascript"}));if(T.endsWith(".wasm")){if(m)return m;let S=c??C;return p==="ort-wasm-simd.wasm"?S+"ort-wasm-simd.jsep.wasm":p==="ort-wasm-simd-threaded.wasm"?S+"ort-wasm-simd-threaded.jsep.wasm":S+p}return C+T}};if(i)if(x.numThreads=r,typeof Blob>"u")x.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let T=`var ortWasmThreaded=${$.toString()};`;x.mainScriptUrlOrBlob=new Blob([T],{type:"text/javascript"})}$(x).then(T=>{zn=!1,za=!0,Da=T,b()},T=>{zn=!1,ko=!0,w(T)})})),await Promise.race(g),l)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Ne=()=>{if(za&&Da)return Da;throw new Error("WebAssembly is not initialized yet.")}});var Ve,qr,Me,Un=Q(()=>{"use strict";vr();Ve=(e,t)=>{let r=Ne(),a=r.lengthBytesUTF8(e)+1,i=r._malloc(a);return r.stringToUTF8(e,i,a),t.push(i),i},qr=(e,t,r,a)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([i,s])=>{let o=t?t+i:i;if(typeof s=="object")qr(s,o+".",r,a);else if(typeof s=="string"||typeof s=="number")a(o,s.toString());else if(typeof s=="boolean")a(o,s?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof s}`)})},Me=e=>{let t=Ne(),r=t.stackSave();try{let a=t.stackAlloc(8);t._OrtGetLastError(a,a+4);let i=t.HEAP32[a/4],s=t.HEAPU32[a/4+1],o=s?t.UTF8ToString(s):"";throw new Error(`${e} ERROR_CODE: ${i}, ERROR_MESSAGE: ${o}`)}finally{t.stackRestore(r)}}});var Bo,Mo=Q(()=>{"use strict";vr();Un();Bo=e=>{let t=Ne(),r=0,a=[],i=e||{};try{if(e?.logSeverityLevel===void 0)i.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)i.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(i.terminate=!1);let s=0;return e?.tag!==void 0&&(s=Ve(e.tag,a)),r=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,s),r===0&&Me("Can't create run options."),e?.extra!==void 0&&qr(e.extra,"",new WeakSet,(o,c)=>{let p=Ve(o,a),m=Ve(c,a);t._OrtAddRunConfigEntry(r,p,m)!==0&&Me(`Can't set a run config entry: ${o} - ${c}.`)}),[r,a]}catch(s){throw r!==0&&t._OrtReleaseRunOptions(r),a.forEach(o=>t._free(o)),s}}});var Kd,Yd,Zd,Xd,Do,zo=Q(()=>{"use strict";vr();Un();Kd=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Yd=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Zd=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},Xd=(e,t,r)=>{for(let a of t){let i=typeof a=="string"?a:a.name;switch(i){case"webnn":if(i="WEBNN",typeof a!="string"){let o=a;if(o?.deviceType){let c=Ve("deviceType",r),p=Ve(o.deviceType,r);Ne()._OrtAddSessionConfigEntry(e,c,p)!==0&&Me(`Can't set a session config entry: 'deviceType' - ${o.deviceType}.`)}if(o?.numThreads){let c=o.numThreads;(typeof c!="number"||!Number.isInteger(c)||c<0)&&(c=0);let p=Ve("numThreads",r),m=Ve(c.toString(),r);Ne()._OrtAddSessionConfigEntry(e,p,m)!==0&&Me(`Can't set a session config entry: 'numThreads' - ${o.numThreads}.`)}if(o?.powerPreference){let c=Ve("powerPreference",r),p=Ve(o.powerPreference,r);Ne()._OrtAddSessionConfigEntry(e,c,p)!==0&&Me(`Can't set a session config entry: 'powerPreference' - ${o.powerPreference}.`)}}break;case"webgpu":if(i="JS",typeof a!="string"){let o=a;if(o?.preferredLayout){if(o.preferredLayout!=="NCHW"&&o.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${o.preferredLayout}`);let c=Ve("preferredLayout",r),p=Ve(o.preferredLayout,r);Ne()._OrtAddSessionConfigEntry(e,c,p)!==0&&Me(`Can't set a session config entry: 'preferredLayout' - ${o.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${i}`)}let s=Ve(i,r);Ne()._OrtAppendExecutionProvider(e,s)!==0&&Me(`Can't append execution provider: ${i}.`)}},Do=e=>{let t=Ne(),r=0,a=[],i=e||{};Zd(i);try{let s=Kd(i.graphOptimizationLevel??"all"),o=Yd(i.executionMode??"sequential"),c=typeof i.logId=="string"?Ve(i.logId,a):0,p=i.logSeverityLevel??2;if(!Number.isInteger(p)||p<0||p>4)throw new Error(`log serverity level is not valid: ${p}`);let m=i.logVerbosityLevel??0;if(!Number.isInteger(m)||m<0||m>4)throw new Error(`log verbosity level is not valid: ${m}`);let l=typeof i.optimizedModelFilePath=="string"?Ve(i.optimizedModelFilePath,a):0;if(r=t._OrtCreateSessionOptions(s,!!i.enableCpuMemArena,!!i.enableMemPattern,o,!!i.enableProfiling,0,c,p,m,l),r===0&&Me("Can't create session options."),i.executionProviders&&Xd(r,i.executionProviders,a),i.freeDimensionOverrides)for(let[g,b]of Object.entries(i.freeDimensionOverrides)){if(typeof g!="string")throw new Error(`free dimension override name must be a string: ${g}`);if(typeof b!="number"||!Number.isInteger(b)||b<0)throw new Error(`free dimension override value must be a non-negative integer: ${b}`);let w=Ve(g,a);t._OrtAddFreeDimensionOverride(r,w,b)!==0&&Me(`Can't set a free dimension override: ${g} - ${b}.`)}return i.extra!==void 0&&qr(i.extra,"",new WeakSet,(g,b)=>{let w=Ve(g,a),$=Ve(b,a);t._OrtAddSessionConfigEntry(r,w,$)!==0&&Me(`Can't set a session config entry: ${g} - ${b}.`)}),[r,a]}catch(s){throw r!==0&&t._OrtReleaseSessionOptions(r),a.forEach(o=>t._free(o)),s}}});var Ua,dt,jr,Wn,Kr,Nn,Wa,ze=Q(()=>{"use strict";Ua=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},dt=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},jr=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],Wn=e=>{switch(e){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Kr=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Nn=e=>e==="float32"||e==="int32"||e==="int64"||e==="bool"||e==="float16"||e==="uint32",Wa=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var Yr,Na=Q(()=>{"use strict";Yr=async e=>{if(typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(e))}catch(t){if(t.code==="ERR_FS_FILE_TOO_LARGE"){let r=(void 0)(e),a=[];for await(let i of r)a.push(i);return new Uint8Array(Buffer.concat(a))}throw t}else{let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),a=r?parseInt(r,10):0;if(a<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let i=t.body.getReader(),s;try{s=new ArrayBuffer(a)}catch(c){if(c instanceof RangeError){let p=Math.ceil(a/65536);s=new WebAssembly.Memory({initial:p,maximum:p}).buffer}else throw c}let o=0;for(;;){let{done:c,value:p}=await i.read();if(c)break;let m=p.byteLength;new Uint8Array(s,o,m).set(p),o+=m}return new Uint8Array(s,0,a)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}});var Qd,Jd,Uo,Wo,No,ec,De,Gt=Q(()=>{"use strict";ze();Qd=["V","I","W","E","F"],Jd=(e,t)=>{console.log(`[${Qd[e]},${new Date().toISOString()}]${t}`)},No=(e,t)=>{Uo=e,Wo=t},ec=(e,t)=>{let r=Kr(e),a=Kr(Uo);r>=a&&Jd(r,typeof t=="function"?t():t)},De=(...e)=>{Wo&&ec(...e)}});var Vo,Ho=Q(()=>{"use strict";ze();Vo=(e,t)=>new(Wn(t))(e)});var Vn=Q(()=>{"use strict"});var Hn,tc,Lo,Ha,Va,Fo,qo=Q(()=>{"use strict";Gt();Vn();Hn=e=>Math.ceil(e/16)*16,tc=1,Lo=()=>tc++,Ha=async(e,t,r,a)=>{let i=Hn(r),s=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let o=e.getCommandEncoder();e.endComputePass(),o.copyBufferToBuffer(t,0,s,0,i),e.flush(),await s.mapAsync(GPUMapMode.READ);let c=s.getMappedRange();if(a){let p=a();return p.set(new Uint8Array(c,0,r)),p}else return new Uint8Array(c.slice(0,r))}finally{s.destroy()}},Va=class{constructor(t){this.backend=t;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map}upload(t,r){let a=r.buffer,i=r.byteOffset,s=r.byteLength,o=Hn(s),c=this.storageCache.get(t);if(!c)throw new Error("gpu data for uploading does not exist");if(c.originalSize!==s)throw new Error(`inconsistent data size. gpu data size=${c.originalSize}, data size=${s}`);let p=this.backend.device.createBuffer({mappedAtCreation:!0,size:o,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),m=p.getMappedRange();new Uint8Array(m).set(new Uint8Array(a,i,s)),p.unmap();let l=this.backend.getCommandEncoder();this.backend.endComputePass(),l.copyBufferToBuffer(p,0,c.gpuData.buffer,0,o),De("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(p)}memcpy(t,r){let a=this.storageCache.get(t);if(!a)throw new Error("source gpu data for memcpy does not exist");let i=this.storageCache.get(r);if(!i)throw new Error("destination gpu data for memcpy does not exist");if(a.originalSize!==i.originalSize)throw new Error("inconsistent source and destination gpu data size");let s=Hn(a.originalSize),o=this.backend.getCommandEncoder();this.backend.endComputePass(),o.copyBufferToBuffer(a.gpuData.buffer,0,i.gpuData.buffer,0,s)}registerExternalBuffer(t,r,a){let i;if(a){if(i=this.externalBuffers.get(a),i===void 0)throw new Error("previous buffer is not registered");if(t===a)return De("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, buffer is the same, skip.`),i;this.externalBuffers.delete(a)}else i=Lo();return this.storageCache.set(i,{gpuData:{id:i,type:0,buffer:t},originalSize:r}),this.externalBuffers.set(t,i),De("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, registered.`),i}unregisterExternalBuffer(t){let r=this.externalBuffers.get(t);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(t),De("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let a=Hn(t),i,s=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,o=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(s||o){let p=s?this.freeBuffers:this.freeUniformBuffers,m=p.get(a);m||(m=[],p.set(a,m)),m.length>0?i=m.pop():i=this.backend.device.createBuffer({size:a,usage:r})}else i=this.backend.device.createBuffer({size:a,usage:r});let c={id:Lo(),type:0,buffer:i};return this.storageCache.set(c.id,{gpuData:c,originalSize:t}),De("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${c.id}`),c}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r=this.storageCache.get(t);if(!r)throw new Error("releasing data does not exist");return De("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(t,r){let a=this.storageCache.get(t);if(!a)throw new Error("data does not exist");await Ha(this.backend,a.gpuData.buffer,a.originalSize,r)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();this.buffersForUploadingPending=[];for(let t of this.buffersPending)(t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(t.size).push(t):(t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(t.size).push(t):t.destroy();this.buffersPending=[]}dispose(){this.freeBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map}},Fo=(...e)=>new Va(...e)});var La,xe,Xe=Q(()=>{"use strict";La=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},xe=e=>new La(e)});var Ga,At,N,ir,Ln,Gn,Fn,Ce=Q(()=>{"use strict";Ga=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},At=class{static calcShape(t,r,a=!1){let i=t.length,s=r.length;if(i===0)return r;if(s===0)return t;let o=Math.max(t.length,r.length),c=new Array(o);if(a){if(i<2||s<2)return;let p=Ga.calcMatMulShape([t[i-2],t[i-1]],[r[s-2],r[s-1]]);if(p===void 0)return;[c[o-2],c[o-1]]=p}for(let p=a?3:1;p<=o;p++){let m=i-p<0?1:t[i-p],l=s-p<0?1:r[s-p];if(m!==l&&m>1&&l>1)return;c[o-p]=Math.max(m,l)}return c}static isValidBroadcast(t,r){let a=t.length,i=r.length;if(a>i)return!1;for(let s=1;s<=a;s++)if(t[a-s]!==1&&t[a-s]!==r[i-s])return!1;return!0}},N=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,a){let i=1;for(let s=r;s<a;s++){if(t[s]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=t[s]}return i}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let a=new Array(r);a[r-1]=1,a[r-2]=t[r-1];for(let i=r-3;i>=0;--i)a[i]=a[i+1]*t[i+1];return a}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(a=>this.normalizeAxis(a,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(a=>t[a]):t.slice().reverse()}static padShape(t,r){let a=t.length;return t.map((i,s)=>i+r[s]+r[s+a])}static areEqual(t,r){return t.length!==r.length?!1:t.every((a,i)=>a===r[i])}},ir=class e{static adjustPoolAttributes(t,r,a,i,s,o){if(!t&&a.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let c=0;c<r.length-2;c++)c>=a.length?a.push(r[c+2]):a[c]=r[c+2];for(let c=0;c<a.length;c++)if(c<i.length){if(i[c]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let c=0;c<a.length;c++)if(c<s.length){if(s[c]<0)throw new Error("dilations should be greater than or equal to 1")}else s.push(1);for(let c=0;c<a.length*2;c++)if(c<o.length){if(o[c]<0)throw new Error("pad should be greater than or equal to 1")}else o.push(0);for(let c=0;c<a.length;c++){if(a[c]<=0)throw new Error("kernel shapes need to be greater than 0");if(o[c]>=a[c]||o[c+a.length]>=a[c])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,a,i,s,o,c){if(c){if(s.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let p=0;p<t.length-2;p++)e.adjustPadAndReturnShape(t[p+(o?1:2)],r[p],a[p],i[p],s,p,p+t.length-2,c)}}static computePoolOutputShape(t,r,a,i,s,o,c){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let p=[r[0],r[1]];return e.computeShapeHelper(t,r,p,a,i,s,o,c),p}static computeConvOutputShape(t,r,a,i,s,o,c){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let p=[t[0],r[0]];return e.computeShapeHelper(!1,t,p,a,i,s,o,c),p}static computeShapeHelper(t,r,a,i,s,o,c,p){if(t)for(let m=0;m<r.length-2;m++)a.push(1);else for(let m=0;m<r.length-2;m++)a.push(e.adjustPadAndReturnShape(r[m+2],i[m],s[m],o[m],c,m,m+r.length-2,p))}static adjustPadAndReturnShape(t,r,a,i,s,o,c,p){let m=a*(i-1)+1;if(p&&p!=="NOTSET")switch(p){case"VALID":return s[o]=0,s[c]=0,Math.floor((t-m)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(a!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let g=((t+r-1)/r-1)*r+i-t;return s[o]=Math.floor(p==="SAME_LOWER"?(g+1)/2:g/2),s[c]=g-s[o],Math.floor((t+g-i)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+s[o]+s[c]-m)/r+1)}},Ln=class{static getShapeOfGemmResult(t,r,a,i,s){if(t.length!==2||a.length!==2)throw new Error("shape need to be of size 2");let o,c,p;r?(o=t[1],c=t[0]):(o=t[0],c=t[1]);let m=-1;if(i?(p=a[0],m=1):(p=a[1],m=0),a[m]!==c)throw new Error("dimension mismatch");if(o<=0||p<=0||c<=0)throw new Error("invalid shape specified");if(s&&!At.isValidBroadcast(s,[o,p]))throw new Error("gemm: invalid bias shape for broadcast");return[o,p,c]}},Gn=-34028234663852886e22,Fn=34028234663852886e22});var rc,qa,He,_t,L,Le,Qe,St,ct,ce,ja,W,J,qn,Fa,jo,wr,_e=Q(()=>{"use strict";ze();Ce();rc=64,qa=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},He=(e,t=1)=>{let r=qa(e,t);return typeof r=="string"?r:r[0]},_t=(e,t=1)=>{let r=qa(e,t);return typeof r=="string"?r:r[1]},L=e=>e.length===0?[]:[{type:"uint32",data:e},{type:"uint32",data:N.computeStrides(e)}],Le=e=>e%4===0?4:e%2===0?2:1,Qe=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,St=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}f(${r})`,ct=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,ce=(e,t,r,a)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?a==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:a==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,ja=(e,t,r,a,i)=>{let s=typeof r=="number",o=s?r:r.length,c=[...new Array(o).keys()],p=o<2?"u32":o<=4?`vec${o}<u32>`:`array<u32, ${o}>`,m=qa(t,i),l=typeof m=="string"?m:m[1],g=typeof m=="string"?m:m[0],b={indices:p,value:l,storage:g,tensor:t},w=F=>typeof F=="string"?F:`${F}u`,$={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},x=s?"uniforms.":"",T=`${x}${e}_shape`,C=`${x}${e}_strides`,S="";for(let F=0;F<o-1;F++)S+=`
    let dim${F} = current / ${ce(C,F,o)};
    let rest${F} = current % ${ce(C,F,o)};
    indices[${F}] = dim${F};
    current = rest${F};
    `;S+=`indices[${o-1}] = current;`;let E=o<2?"":`
  fn o2i_${e}(offset: u32) -> ${b.indices} {
    var indices: ${b.indices};
    var current = offset;
    ${S}
    return indices;
  }`,O=F=>($.offsetToIndices=!0,o<2?F:`o2i_${e}(${F})`),U=[];if(o>=2)for(let F=o-1;F>=0;F--)U.push(`${ce(C,F,o)} * (indices[${F}])`);let D=o<2?"":`
  fn i2o_${e}(indices: ${b.indices}) -> u32 {
    return ${U.join("+")};
  }`,V=F=>($.indicesToOffset=!0,o<2?F:`i2o_${e}(${F})`),Y=(...F)=>o===0?"0u":`${b.indices}(${F.map(w).join(",")})`,se=(F,ie)=>o<2?`${F}`:`${ce(F,ie,o)}`,B=(F,ie,he)=>o<2?`${F}=${he};`:`${ce(F,ie,o)}=${he};`,te={},ke=(F,ie)=>{$.broadcastedIndicesToOffset=!0;let he=`${ie.name}broadcastedIndicesTo${e}Offset`;if(he in te)return`${he}(${F})`;let Je=[];for(let ot=o-1;ot>=0;ot--){let Re=ie.indicesGet("outputIndices",ot+ie.rank-o);Je.push(`${se(C,ot)} * (${Re} % ${se(T,ot)})`)}return te[he]=`fn ${he}(outputIndices: ${ie.type.indices}) -> u32 {
             return ${Je.length>0?Je.join("+"):"0u"};
           }`,`${he}(${F})`},Oe=(F,ie)=>(()=>{if(b.storage===b.value)return`${e}[${F}]=${ie};`;if(b.storage==="vec2<u32>"&&b.value==="i32")return`${e}[${F}]=vec2<u32>(u32(${ie}), select(0u, 0xFFFFFFFFu, ${ie} < 0));`;if(b.storage==="vec2<u32>"&&b.value==="u32")return`${e}[${F}]=vec2<u32>(u32(${ie}), 0u);`;if(b.storage==="u32"&&b.value==="vec4<bool>")return`${e}[${F}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ie}));`;throw new Error(`not supported combination of storage type ${b.storage} and value type ${b.value} yet`)})(),ee=F=>(()=>{if(b.storage===b.value)return`${e}[${F}]`;if(b.storage==="vec2<u32>"&&b.value==="i32")return`i32(${e}[${F}].x)`;if(b.storage==="vec2<u32>"&&b.value==="u32")return`u32(${e}[${F}].x)`;if(b.storage==="u32"&&b.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${F}] & 0xFFu), bool(${e}[${F}] & 0xFF00u), bool(${e}[${F}] & 0xFF0000u), bool(${e}[${F}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${b.storage} and value type ${b.value} yet`)})(),be=o<2?"":`
  fn get_${e}ByIndices(indices: ${b.indices}) -> ${l} {
    return ${ee(`i2o_${e}(indices)`)};
  }`,Ue=o<2?"":(()=>{let F=c.map(he=>`d${he}: u32`).join(", "),ie=c.map(he=>`d${he}`).join(", ");return`
  fn get_${e}(${F}) -> ${l} {
    return get_${e}ByIndices(${Y(ie)});
  }`})(),pe=(...F)=>{if(F.length!==o)throw new Error(`indices length must be ${o}`);let ie=F.map(w).join(",");return o===0?ee("0u"):o===1?ee(ie[0]):($.get=!0,$.getByIndices=!0,$.indicesToOffset=!0,`get_${e}(${ie})`)},ye=F=>o<2?ee(F):($.getByIndices=!0,$.indicesToOffset=!0,`get_${e}ByIndices(${F})`),de=o<2?"":`
  fn set_${e}ByIndices(indices: ${b.indices}, value: ${l}) {
    ${Oe(`i2o_${e}(indices)`,"value")}
  }`,ve=o<2?"":(()=>{let F=c.map(he=>`d${he}: u32`).join(", "),ie=c.map(he=>`d${he}`).join(", ");return`
  fn set_${e}(${F}, value: ${l}) {
    set_${e}ByIndices(${Y(ie)}, value);
  }`})();return{impl:()=>{let F=[],ie=!1;return $.offsetToIndices&&(F.push(E),ie=!0),$.indicesToOffset&&(F.push(D),ie=!0),$.broadcastedIndicesToOffset&&(Object.values(te).forEach(he=>F.push(he)),ie=!0),$.set&&(F.push(ve),ie=!0),$.setByIndices&&(F.push(de),ie=!0),$.get&&(F.push(Ue),ie=!0),$.getByIndices&&(F.push(be),ie=!0),!s&&ie&&F.unshift(`const ${T} = ${b.indices}(${r.join(",")});`,`const ${C} = ${b.indices}(${N.computeStrides(r).join(",")});`),F.join(`
`)},type:b,offsetToIndices:O,indicesToOffset:V,broadcastedIndicesToOffset:ke,indices:Y,indicesGet:se,indicesSet:B,set:(...F)=>{if(F.length!==o+1)throw new Error(`indices length must be ${o}`);let ie=F[o];if(typeof ie!="string")throw new Error("value must be string");let he=F.slice(0,o).map(w).join(",");return o===0?Oe("0u",ie):o===1?Oe(he[0],ie):($.set=!0,$.setByIndices=!0,$.indicesToOffset=!0,`set_${e}(${he}, ${ie})`)},setByOffset:Oe,setByIndices:(F,ie)=>o<2?Oe(F,ie):($.setByIndices=!0,$.indicesToOffset=!0,`set_${e}ByIndices(${F}, ${ie});`),get:pe,getByOffset:ee,getByIndices:ye,usage:a,name:e,strides:C,shape:T,rank:o}},W=(e,t,r,a=1)=>ja(e,t,r,"input",a),J=(e,t,r,a=1)=>ja(e,t,r,"output",a),qn=(e,t,r,a=1)=>ja(e,t,r,"internal",a),Fa=class{constructor(t){this.normalizedDispatchGroup=t;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=rc){let r=typeof t=="number"?t:t[0],a=typeof t=="number"?1:t[1],i=typeof t=="number"?1:t[2],s=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,o=s?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,c=s?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${r*a*i}u + local_idx;`;return`@compute @workgroup_size(${r}, ${a}, ${i})
  fn main(${o}) {
    ${c}
  `}appendVariableUniforms(t){t.rank!==0&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,r){if(t.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let a=t.usage==="input"?"read":"read_write",i=t.type.storage;return`@group(0) @binding(${r}) var<storage, ${a}> ${t.name}: array<${i}>;`}declareVariables(...t){return t.map(r=>this.declareVariable(r,this.variableIndex++)).join(`
`)}registerInternalVariable(t){if(t.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(t,r,a=1){return this.uniforms.push({name:t,type:r,length:a}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:r,type:a,length:i}of this.uniforms)if(i&&i>4)a==="f16"?t.push(`@align(16) ${r}:array<mat2x4<${a}>, ${Math.ceil(i/8)}>`):t.push(`${r}:array<vec4<${a}>, ${Math.ceil(i/4)}>`);else{let s=i==null||i===1?a:`vec${i}<${a}>`;t.push(`${r}:${s}`)}return`
      struct Uniforms { ${t.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`
`)+this.internalVariables.map(t=>t.impl()).join(`
`)}},jo=e=>new Fa(e),wr=(e,t)=>{let r=e.length,a=[];for(let i=0;i<r;i++){let s=r-1-i,o=e[s]||1;(t[t.length-1-i]||1)>1&&o===1&&a.unshift(s)}return a}});var nc,Ko,ac,ic,xt,Yo,Zo,$r=Q(()=>{"use strict";Ce();Xe();_e();nc=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},Ko=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,ac=(e,t)=>N.sortBasedOnPerm(e,Ko(e.length,t)),ic=(e,t,r,a)=>{let i=[];i.push(`fn perm(i: ${a.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`);for(let s=0;s<t;++s)i.push(r.indicesSet("a",e[s],`i[${s}]`));return i.push("return a;}"),i.join(`
`)},xt=(e,t)=>{let r=e.dataType,a=e.dims.length,i=Ko(a,t),s=ac(e.dims,i),o=J("output",r,s.length),c=W("a",r,a),p=m=>`
  ${m.registerUniform("output_size","u32").declareVariables(c,o)}

  ${ic(i,a,c,o)}

  ${m.mainStart()}
    ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${o.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${o.setByOffset("global_idx",c.getByIndices("aIndices"))}
  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:m=>{let l=N.size(s);return{outputs:[{dims:s,dataType:m[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:[{type:"uint32",data:l},...L(m[0].dims),...L(s)]}},getShaderSource:p}},Yo=(e,t)=>{nc(e.inputs),e.compute(xt(e.inputs[0],t.perm))},Zo=e=>xe({perm:e.perm})});var oc,sc,uc,lc,dc,cc,pc,fc,mc,hc,Tt,Xo,Qo,Jo,es,ts,rs,ns,as,is,os,ss=Q(()=>{"use strict";Ce();_e();jn();$r();oc={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},sc={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},uc={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},lc={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},dc=(e,t)=>{let r=[];for(let a=t-e;a<t;++a)r.push(a);return r},cc=(e,t)=>{let r=[],a=e.length;for(let s=0;s<a;s++)t.indexOf(s)===-1&&r.push(e[s]);let i=t.map(s=>e[s]);return[r,i]},pc=(e,t)=>{let r=e.length+t.length,a=[],i=0;for(let s=0;s<r;s++)t.indexOf(s)===-1?a.push(e[i++]):a.push(1);return a},fc=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},mc=(e,t)=>{let r=[];if(!fc(e,t)){for(let a=0;a<t;++a)e.indexOf(a)===-1&&r.push(a);e.forEach(a=>r.push(a))}return r},hc=(e,t,r,a,i,s,o)=>{let c=r[0].dims,p=N.size(s),m=N.size(o),l=W("_A",r[0].dataType,c),g=J("output",i,s),b=32,w=`
          var<workgroup> aBestValues : array<${g.type.storage}, ${b}>;
       `;return{name:e,shaderCache:t,getShaderSource:x=>`
        ${x.registerUniform("reduceSize","u32").declareVariables(l,g)}
        ${w}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${x.mainStart(b)}

          let outputIndex = global_idx / ${b};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = ${g.type.storage}(${uc[a]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${b}) {
           let candidate = ${g.type.storage}(${l.getByOffset("offset + k")});
           bestValue = ${oc[a]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${b}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${sc[a]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${g.setByOffset("outputIndex",`${a==="mean"?`bestValue / ${g.type.storage}(uniforms.reduceSize)`:`${lc[a]}`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:s,dataType:i}],dispatchGroup:{x:p},programUniforms:[{type:"uint32",data:m}]})}},Tt=(e,t,r,a)=>{let i=e.inputs.length===1?r:Ka(e.inputs,r),s=i.axes;s.length===0&&!i.noopWithEmptyAxes&&(s=e.inputs[0].dims.map((w,$)=>$));let o=N.normalizeAxes(s,e.inputs[0].dims.length),c=o,p=e.inputs[0],m=mc(c,e.inputs[0].dims.length);m.length>0&&(p=e.compute(xt(e.inputs[0],m),{inputs:[0],outputs:[-1]})[0],c=dc(c.length,p.dims.length));let[l,g]=cc(p.dims,c),b=l;i.keepDims&&(b=pc(l,o)),e.compute(hc(t,{hint:i.cacheKey,inputDependencies:["type"]},[p],a,e.inputs[0].dataType,b,g),{inputs:[p]})},Xo=(e,t)=>{Tt(e,"ReduceMeanShared",t,"mean")},Qo=(e,t)=>{Tt(e,"ReduceL1Shared",t,"l1")},Jo=(e,t)=>{Tt(e,"ReduceL2Shared",t,"l2")},es=(e,t)=>{Tt(e,"ReduceLogSumExpShared",t,"logSumExp")},ts=(e,t)=>{Tt(e,"ReduceMaxShared",t,"max")},rs=(e,t)=>{Tt(e,"ReduceMinShared",t,"min")},ns=(e,t)=>{Tt(e,"ReduceProdShared",t,"prod")},as=(e,t)=>{Tt(e,"ReduceSumShared",t,"sum")},is=(e,t)=>{Tt(e,"ReduceSumSquareShared",t,"sumSquare")},os=(e,t)=>{Tt(e,"ReduceLogSumShared",t,"logSum")}});var Et,gc,Kn,Ka,Ot,yc,bc,vc,wc,$c,_c,Sc,xc,Cc,Ic,kt,us,ls,ds,cs,ps,fs,ms,hs,gs,ys,jn=Q(()=>{"use strict";Ce();Xe();_e();ss();Et=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},gc=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],Kn=(e,t,r,a,i,s,o=!1,c=!1)=>{let p=[],m=r[0].dims,l=m.length,g=N.normalizeAxes(i,l),b=!c&&g.length===0;m.forEach((T,C)=>{b||g.indexOf(C)>=0?o&&p.push(1):p.push(T)});let w=p.length,$=N.size(p);return{name:e,shaderCache:t,getShaderSource:T=>{let C=[],S=W("_A",r[0].dataType,l),E=J("output",s,w),O=a(S,E,g),U=O[2];for(let D=0,V=0;D<l;D++)b||g.indexOf(D)>=0?(o&&V++,U=`for(var j${D}: u32 = 0; j${D} < ${m[D]}; j${D}++) {
                  ${O[2].includes("last_index")?`let last_index = j${D};`:""}
                  ${S.indicesSet("input_indices",D,`j${D}`)}
                  ${U}
                }`):(C.push(`${S.indicesSet("input_indices",D,E.indicesGet("output_indices",V))};`),V++);return`

        ${T.registerUniform("output_size","u32").declareVariables(S,E)}

        ${T.mainStart()}
          ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${S.type.indices};
          let output_indices = ${E.offsetToIndices("global_idx")};

          ${C.join(`
`)}
          ${O[0]}       // init ops for reduce max/min
          ${O[1]}
          ${U}
          ${O[3]}
          ${O.length===4?E.setByOffset("global_idx","value"):O.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:p,dataType:s}],dispatchGroup:{x:Math.ceil($/64)},programUniforms:[{type:"uint32",data:$},...L(m),...L(p)]})}},Ka=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(a=>r.push(Number(a))),xe({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},Ot=(e,t,r,a)=>{let i=e.inputs,s=i.length===1?r:Ka(i,r);e.compute(Kn(t,{hint:s.cacheKey,inputDependencies:["rank"]},[i[0]],s.noopWithEmptyAxes&&s.axes.length===0?gc:a,s.axes,i[0].dataType,s.keepDims,s.noopWithEmptyAxes),{inputs:[0]})},yc=(e,t)=>{Et(e.inputs),Ot(e,"ReduceLogSum",t,(a,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${a.getByIndices("input_indices")};`,"value = log(value);"])},bc=(e,t)=>{Et(e.inputs),Ot(e,"ReduceL1",t,(a,i)=>[`var value = ${i.type.storage}(0);`,"",`value += abs(${a.getByIndices("input_indices")});`,""])},vc=(e,t)=>{Et(e.inputs),Ot(e,"ReduceL2",t,(a,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${a.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},wc=(e,t)=>{Et(e.inputs),Ot(e,"ReduceLogSumExp",t,(a,i)=>[`var value = ${i.type.storage}(0);`,"",`value += exp(${a.getByIndices("input_indices")});`,"value = log(value);"])},$c=(e,t)=>{Et(e.inputs),Ot(e,"ReduceMax",t,(a,i,s)=>{let o=[];for(let c=0;c<a.rank;c++)(s.indexOf(c)>=0||s.length===0)&&o.push(a.indicesSet("input_indices",c,0));return[`${o.join(`
`)}`,`var value = ${a.getByIndices("input_indices")};`,`value = max(value, ${a.getByIndices("input_indices")});`,""]})},_c=(e,t)=>{Et(e.inputs),Ot(e,"ReduceMean",t,(a,i,s)=>{let o=1;for(let c=0;c<a.rank;c++)(s.indexOf(c)>=0||s.length===0)&&(o*=e.inputs[0].dims[c]);return["var sum = f32(0);","",`sum += f32(${a.getByIndices("input_indices")});`,`let value = ${i.type.value}(sum / ${o});`]})},Sc=(e,t)=>{Et(e.inputs),Ot(e,"ReduceMin",t,(a,i,s)=>{let o=[];for(let c=0;c<a.rank;c++)(s.indexOf(c)>=0||s.length===0)&&o.push(`input_indices[${c}] = 0;`);return[`${o.join(`
`)}`,`var value = ${a.getByIndices("input_indices")};`,`value = min(value, ${a.getByIndices("input_indices")});`,""]})},xc=(e,t)=>{Et(e.inputs),Ot(e,"ReduceProd",t,(a,i)=>[`var value = ${i.type.storage}(1);`,"",`value *= ${a.getByIndices("input_indices")};`,""])},Cc=(e,t)=>{Et(e.inputs),Ot(e,"ReduceSum",t,(a,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${a.getByIndices("input_indices")};`,""])},Ic=(e,t)=>{Et(e.inputs),Ot(e,"ReduceSumSquare",t,(a,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${a.getByIndices("input_indices")}; value += t * t;`,""])},kt=(e,t,r)=>{if(t.length===0)return r;let a=1,i=1;for(let s=0;s<t.length;s++)t.indexOf(s)===-1?a*=e[s]:i*=e[s];return i<32&&a>1024},us=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?_c(e,t):Xo(e,t)},ls=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?bc(e,t):Qo(e,t)},ds=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?vc(e,t):Jo(e,t)},cs=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?wc(e,t):es(e,t)},ps=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?$c(e,t):ts(e,t)},fs=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Sc(e,t):rs(e,t)},ms=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?xc(e,t):ns(e,t)},hs=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Cc(e,t):as(e,t)},gs=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ic(e,t):is(e,t)},ys=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?yc(e,t):os(e,t)}});var bs,vs,ws,Ya,$s=Q(()=>{"use strict";ze();Xe();jn();bs=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},vs=(e,t)=>{bs(e.inputs);let r=(a,i,s)=>{let o=[];for(let c=0;c<a.rank;c++)(s.indexOf(c)>=0||s.length===0)&&o.push(`input_indices[${c}] = 0;`);return[`${o.join(`
`)}`,`var value = ${a.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${a.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {
         value = ${a.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(Kn("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},ws=(e,t)=>{bs(e.inputs);let r=(a,i,s)=>{let o=[];for(let c=0;c<a.rank;c++)(s.indexOf(c)>=0||s.length===0)&&o.push(`input_indices[${c}] = 0;`);return[`${o.join(`
`)}`,`var value = ${a.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${a.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {
         value = ${a.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(Kn("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},Ya=e=>xe(e)});var Ac,Tc,Ec,Oc,Yn,kc,_s,Za=Q(()=>{"use strict";ze();Vn();_e();Ac=(e,t)=>{let r=e[0],a=e[1],i=e[2],s=e[3],o=e[4],c=e[5];if(o&&c)throw new Error("Attention cannot have both past and relative_position_bias");if(r.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let p=r.dims[0],m=r.dims[1],l=r.dims[2];if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(a.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(a.dims[0]!==l)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(i.dims[0]!==a.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let g=i.dims[0]/3,b=g,w=b;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let E of t.qkvHiddenSizes)if(E%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");g=t.qkvHiddenSizes[0],b=t.qkvHiddenSizes[1],w=t.qkvHiddenSizes[2]}let $=m;if(g!==b)throw new Error("qkv_hidden_sizes first element should be same as the second");if(i.dims[0]!==g+b+w)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let x=0;if(o){if(b!==w)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(o.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(o.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(o.dims[1]!==p)throw new Error('Input "past" second dimension must be batch_size');if(o.dims[2]!==t.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(o.dims[4]!==b/t.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');t.pastPresentShareBuffer||(x=o.dims[3])}let T=$+x,C=-1,S=0;if(s)throw new Error("Mask not supported");if(o)throw new Error("past is not supported");if(c)throw new Error("relativePositionBias is not supported");return{batchSize:p,sequenceLength:m,pastSequenceLength:x,kvSequenceLength:$,totalSequenceLength:T,maxSequenceLength:C,inputHiddenSize:l,hiddenSize:g,vHiddenSize:w,headSize:Math.floor(g/t.numHeads),vHeadSize:Math.floor(w/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:S,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Tc=(e,t,r,a)=>{let i=Le(a),s=64,o=a/i;o<s?s=1:o/8<64&&(s=Math.ceil(o/8));let c=Math.ceil(a/i/s),m=[{type:dt(t.dataType),data:1/a},{type:"uint32",data:o},{type:"uint32",data:c}],l=He(t.dataType,i),g=b=>{let w=J("x",t.dataType,t.dims,i),$="thread_max_vector";i===2?$="max(thread_max_vector.x, thread_max_vector.y)":i===4&&($="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let x=_t(t.dataType),T=[{name:"d_inv",type:x},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`
  var<workgroup> wgMax: array<f32, ${s}>;
  var<workgroup> wgSum: array<f32, ${s}>;
  ${b.registerUniforms(T).declareVariables(w)}
  ${b.mainStart([s,1,1])}
    let localOffset = local_idx * uniforms.elements_per_wg;
    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;

    var thread_max_vector = ${Qe("f32",i,"-3.402823e+38f")};
    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
      thread_max_vector = max(${St(x,i,"x[offset + i]")}, thread_max_vector);
    }
    wgMax[local_idx] = ${$};
    workgroupBarrier();

    var maxValue = -3.402823e+38f;
    for (var i = 0u; i < ${s}; i++) {
      maxValue = max(wgMax[i], maxValue);
    }

    var sumVector = ${Qe("f32",i,"0")};
    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
      sumVector += exp(${St(x,i,"x[offset + i]")} - maxValue);
    }
    wgSum[local_idx] = ${ct("sumVector",i)};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${s}; i++) {
      sum += wgSum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
        x[offset + i] = ${Qe(x,i,"uniforms.d_inv")};
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
        let f32input = ${St(x,i,"x[offset + i]")};
        x[offset + i] = ${w.type.value}(exp(f32input - maxValue) / sum);
      }
    }
  }`};e.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${s};${l};${i}`},getShaderSource:g,getRunData:()=>({outputs:[],dispatchGroup:{x:r},programUniforms:m})},{inputs:[t],outputs:[]})},Ec=(e,t,r,a,i,s)=>{let o=[i.batchSize,i.numHeads,i.sequenceLength,i.kvSequenceLength+i.pastSequenceLength],c=s.scale===0?1/Math.sqrt(i.headSize):s.scale,p=Le(i.headSize),m=i.headSize/p,l=12,g={x:Math.ceil(i.totalSequenceLength/l),y:Math.ceil(i.sequenceLength/l),z:i.batchSize*i.numHeads},b=dt(t.dataType),w=[{type:"uint32",data:i.sequenceLength},{type:"uint32",data:m},{type:"uint32",data:i.totalSequenceLength},{type:"uint32",data:i.kvSequenceLength},{type:b,data:c}],$=[t,r],x=C=>{let S=W("q",t.dataType,t.dims,p),E=W("key",r.dataType,r.dims,p),O=J("output",t.dataType,o),U=He(t.dataType),D=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:U}];return`
  const beta: ${U} = 1.0;
  const TILE_SIZE = ${l}u;

  var<workgroup> tileQ: array<${S.type.storage}, ${l*l}>;
  var<workgroup> tileK: array<${S.type.storage}, ${l*l}>;
  ${C.registerUniforms(D).declareVariables(S,E,O)}
  ${C.mainStart([l,l,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let lm = m + local_id.y;
    let ln = n + local_id.x;

    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;
    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;

    var value = ${Qe(U,p)};
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m + local_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];
      }

      workgroupBarrier();
    }

    let headOffset = headIdx * uniforms.M * uniforms.N;
    if (lm < uniforms.M && ln < uniforms.N) {
      let outputIdx = headOffset + lm * uniforms.N + ln;
      output[outputIdx] = ${ct("value",p)} * uniforms.alpha;
    }
  }`},T=e.compute({name:"AttentionProbs",shaderCache:{hint:`${p}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:o,dataType:t.dataType,gpuDataType:0}],dispatchGroup:g,programUniforms:w}),getShaderSource:x},{inputs:$,outputs:[-1]})[0];return Tc(e,T,i.batchSize*i.numHeads*i.sequenceLength,i.totalSequenceLength),T},Oc=(e,t,r,a)=>{let i=[a.batchSize,a.sequenceLength,a.vHiddenSize],s=12,o={x:Math.ceil(a.vHeadSize/s),y:Math.ceil(a.sequenceLength/s),z:a.batchSize*a.numHeads},c=[{type:"uint32",data:a.sequenceLength},{type:"uint32",data:a.totalSequenceLength},{type:"uint32",data:a.vHeadSize},{type:"uint32",data:a.numHeads},{type:"uint32",data:a.vHiddenSize}],p=m=>{let l=W("probs",t.dataType,t.dims),g=W("v",r.dataType,r.dims),b=J("output",t.dataType,i),w=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`
  const TILE_SIZE = ${s}u;
  var<workgroup> tileQ: array<${l.type.value}, ${s*s}>;
  var<workgroup> tileK: array<${l.type.value}, ${s*s}>;
  ${m.registerUniforms(w).declareVariables(l,g,b)}
  ${m.mainStart([s,s,1])}
   let headIdx = workgroup_id.z;
   let m = workgroup_id.y * TILE_SIZE + local_id.y;
   let n = workgroup_id.x * TILE_SIZE + local_id.x;

   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;
   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;

   var value = ${l.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
     if (m < uniforms.M && w + local_id.x < uniforms.K) {
       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
     }
     if (n < uniforms.N && w + local_id.y < uniforms.K) {
       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];
     }
     workgroupBarrier();
     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;
   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + currentBatchHeadNumber * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return e.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:i,dataType:t.dataType,gpuDataType:0}],dispatchGroup:o,programUniforms:c}),getShaderSource:p},{inputs:[t,r],outputs:[0]})[0]},Yn=(e,t,r,a,i,s,o,c,p,m,l)=>{let g=Ec(e,t,r,p,m,l);Oc(e,g,a,m)},kc=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],a=t.sequenceLength,i=t.inputHiddenSize,s=t.headSize,o=12,c={x:Math.ceil(t.headSize/o),y:Math.ceil(t.sequenceLength/o),z:t.batchSize*t.numHeads},p=[e.inputs[0],e.inputs[1],e.inputs[2]],m=[{type:"uint32",data:a},{type:"uint32",data:i},{type:"uint32",data:s},{type:"uint32",data:t.numHeads},{type:"uint32",data:t.headSize},{type:"uint32",data:t.hiddenSize},{type:"uint32",data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],l=g=>{let b=J("output_q",p[0].dataType,r),w=J("output_k",p[0].dataType,r),$=J("output_v",p[0].dataType,r),x=W("input",p[0].dataType,p[0].dims),T=W("weight",p[1].dataType,p[1].dims),C=W("bias",p[2].dataType,p[2].dims),S=x.type.storage,E=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${o}u;
  var<workgroup> tileInput: array<${S}, ${o*o}>;
  var<workgroup> tileWeightQ: array<${S}, ${o*o}>;
  var<workgroup> tileWeightK: array<${S}, ${o*o}>;
  var<workgroup> tileWeightV: array<${S}, ${o*o}>;
  ${g.registerUniforms(E).declareVariables(x,T,C,b,w,$)}
  ${g.mainStart([o,o,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE + local_id.y;
    let n = workgroup_id.x * TILE_SIZE + local_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${S}(0);
    var valueK = ${S}(0);
    var valueV = ${S}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:c,programUniforms:m}),getShaderSource:l},{inputs:p,outputs:[-1,-1,-1]})},_s=(e,t)=>{let r=Ac(e.inputs,t),[a,i,s]=kc(e,r);return Yn(e,a,i,s,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t)}});var Pc,Rc,Bc,Ss,xs=Q(()=>{"use strict";bt();Ce();Xe();_e();Pc=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(a,i,s)=>{let o=i.length;if(o!==a.length)throw new Error(`${s}: num dimensions != ${o}`);i.forEach((c,p)=>{if(c!==a[p])throw new Error(`${s}: dim[${p}] do not match`)})};if(e[0].dims.length>1){let a=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,a,"Invalid input scale"),r(e[2].dims,a,"Invalid input B"),r(e[3].dims,a,"Invalid input mean"),r(e[4].dims,a,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},Rc=(e,t)=>{let{epsilon:r,spatial:a,format:i}=t,s=e[0].dims,o=a?Le(s[s.length-1]):1,c=i==="NHWC"&&s.length>1?o:1,p=N.size(s)/o,m=a,l=m?s.length:s,g=W("x",e[0].dataType,e[0].dims,o),b=W("scale",e[1].dataType,e[1].dims,c),w=W("bias",e[2].dataType,e[2].dims,c),$=W("inputMean",e[3].dataType,e[3].dims,c),x=W("inputVar",e[4].dataType,e[4].dims,c),T=J("y",e[0].dataType,l,o),C=()=>{let E="";if(a)E=`let cOffset = ${s.length===1?"0u":i==="NHWC"?`outputIndices[${s.length-1}] / ${o}`:"outputIndices[1]"};`;else if(i==="NCHW")E=`
            ${T.indicesSet("outputIndices","0","0")}
            let cOffset = ${T.indicesToOffset("outputIndices")};`;else{E=`var cIndices = ${b.type.indices}(0);
                       cIndices[0] = outputIndices[${s.length-1}];`;for(let O=1;O<b.rank;O++)E+=`cIndices[${O}] = outputIndices[${O}];`;E+=`let cOffset = ${b.indicesToOffset("cIndices")};`}return E},S=E=>`
  const epsilon = ${r};
  ${E.registerUniform("outputSize","u32").declareVariables(g,b,w,$,x,T)}
  ${E.mainStart()}
  ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${T.offsetToIndices(`global_idx * ${o}`)};
    ${C()}
    let scale = ${b.getByOffset("cOffset")};
    let bias = ${w.getByOffset("cOffset")};
    let inputMean = ${$.getByOffset("cOffset")};
    let inputVar = ${x.getByOffset("cOffset")};
    let x = ${g.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${T.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${a}_${o}`,inputDependencies:m?["rank","type","type","type","type"]:void 0},getShaderSource:S,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:m?[{type:"uint32",data:p},...L(s)]:[{type:"uint32",data:p}]})}},Bc=e=>xe(e),Ss=(e,t)=>{let{inputs:r,outputCount:a}=e,i=Bc({...t,outputCount:a});if(Ae.webgpu.validateInputContent&&Pc(r,i),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Rc(r,i))}});var Mc,Dc,Cs,Is=Q(()=>{"use strict";Ce();_e();Mc=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Dc=e=>{let t=e[0].dims,r=e[0].dims[2],a=N.size(t)/4,i=e[0].dataType,s=W("input",i,t,4),o=W("bias",i,[r],4),c=W("residual",i,t,4),p=J("output",i,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:l=>`
  const channels = ${r}u / 4;
  ${l.declareVariables(s,o,c,p)}

  ${l.mainStart()}
    ${l.guardAgainstOutOfBoundsWorkgroupSizes(a)}
    let value = ${s.getByOffset("global_idx")}
      + ${o.getByOffset("global_idx % channels")} + ${c.getByOffset("global_idx")};
    ${p.setByOffset("global_idx","value")}
  }`}},Cs=e=>{Mc(e.inputs),e.compute(Dc(e.inputs))}});var zc,Ee,As,Ts,Es,Os,ks,Ps,Rs,Bs,Ms,Uc,Ds,zs,Us,Ws,Zn,Ns,Xn,Vs,Hs,Ls,Gs,Fs,qs,js,Ks,Ys,Zs,Xs,Qs,Js,eu,tu,ru,nu,au,iu,Xa=Q(()=>{"use strict";ze();Ce();Xe();_e();zc=(e,t,r,a,i,s)=>{let o=Math.ceil(t/4),c="";typeof i=="string"?c=`${i}(a)`:c=i("a");let p=W("inputData",r,[o],4),m=J("outputData",a,[o],4);return`
      ${e.registerUniform("vec_size","u32").declareVariables(p,m)}

  ${s??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${p.getByOffset("global_idx")};
    ${m.setByOffset("global_idx",c)}
  }`},Ee=(e,t,r,a,i,s=e.dataType)=>({name:t,shaderCache:{hint:i,inputDependencies:["type"]},getShaderSource:o=>zc(o,N.size(e.dims),e.dataType,s,r,a),getRunData:o=>({outputs:[{dims:e.dims,dataType:s}],dispatchGroup:{x:Math.ceil(N.size(o[0].dims)/64/4)},programUniforms:[{type:"uint32",data:Math.ceil(N.size(e.dims)/4)}]})}),As=e=>{e.compute(Ee(e.inputs[0],"Abs","abs"))},Ts=e=>{e.compute(Ee(e.inputs[0],"Acos","acos"))},Es=e=>{e.compute(Ee(e.inputs[0],"Acosh","acosh"))},Os=e=>{e.compute(Ee(e.inputs[0],"Asin","asin"))},ks=e=>{e.compute(Ee(e.inputs[0],"Asinh","asinh"))},Ps=e=>{e.compute(Ee(e.inputs[0],"Atan","atan"))},Rs=e=>{e.compute(Ee(e.inputs[0],"Atanh","atanh"))},Bs=e=>xe(e),Ms=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(Ee(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},Uc=e=>{let t=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:Gn,r=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:Fn;return xe({min:t,max:r})},Ds=(e,t)=>{let r=e.inputs.length===1?t:Uc(e.inputs),a=_t(e.inputs[0].dataType);e.compute(Ee(e.inputs[0],"Clip",i=>`clamp(${i}, clip_min_, clip_max_)`,`
    const clip_min_: vec4<${a}> = vec4(${a}(${r.min}));
    const clip_max_: vec4<${a}> = vec4(${a}(${r.max}));
`,r.cacheKey),{inputs:[0]})},zs=e=>{e.compute(Ee(e.inputs[0],"Ceil","ceil"))},Us=e=>{e.compute(Ee(e.inputs[0],"Cos","cos"))},Ws=e=>{e.compute(Ee(e.inputs[0],"Cosh","cosh"))},Zn=e=>xe(e),Ns=(e,t)=>{let r=_t(e.inputs[0].dataType);e.compute(Ee(e.inputs[0],"Elu",a=>`elu_vf32(${a})`,`
  const elu_alpha_ = ${r}(${t.alpha});

  fn elu_f32(a: ${r}) -> ${r} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,t.cacheKey))},Xn=(e,t="f32")=>`
const r0: ${t} = 0.3275911;
const r1: ${t} = 0.254829592;
const r2: ${t} = -0.284496736;
const r3: ${t} = 1.421413741;
const r4: ${t} = -1.453152027;
const r5: ${t} = 1.061405429;

fn erf_vf32(v: ${e}) -> ${e} {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,Vs=e=>{let t=_t(e.inputs[0].dataType);e.compute(Ee(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,Xn(`vec4<${t}>`,t)))},Hs=e=>{e.compute(Ee(e.inputs[0],"Exp","exp"))},Ls=e=>{e.compute(Ee(e.inputs[0],"Floor","floor"))},Gs=e=>{let t=_t(e.inputs[0].dataType);e.compute(Ee(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,Xn(`vec4<${t}>`,t)))},Fs=(e,t)=>{let r=_t(e.inputs[0].dataType);e.compute(Ee(e.inputs[0],"LeakyRelu",a=>`select(leaky_relu_alpha_ * ${a}, ${a}, ${a} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},qs=e=>{e.compute(Ee(e.inputs[0],"Not",t=>`!${t}`))},js=e=>{e.compute(Ee(e.inputs[0],"Neg",t=>`-${t}`))},Ks=e=>{e.compute(Ee(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},Ys=e=>{let t=_t(e.inputs[0].dataType);e.compute(Ee(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},Zs=e=>{e.compute(Ee(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},Xs=e=>xe(e),Qs=(e,t)=>{let r=_t(e.inputs[0].dataType);e.compute(Ee(e.inputs[0],"HardSigmoid",a=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${a} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},Js=e=>{e.compute(Ee(e.inputs[0],"Sin","sin"))},eu=e=>{e.compute(Ee(e.inputs[0],"Sinh","sinh"))},tu=e=>{e.compute(Ee(e.inputs[0],"Sqrt","sqrt"))},ru=e=>{e.compute(Ee(e.inputs[0],"Tan","tan"))},nu=e=>{e.compute(Ee(e.inputs[0],"Tanh",t=>`sign(${t}) * (1 - exp(-2 * abs(${t}))) / (1 + exp(-2 * abs(${t})))`))},au=(e,t)=>{let r=_t(e.inputs[0].dataType);return e.compute(Ee(e.inputs[0],"ThresholdedRelu",a=>`select(vec4<${r}>(0.0), ${a}, ${a} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},iu=e=>{e.compute(Ee(e.inputs[0],"Log","log"))}});var Nc,Vc,ou,su=Q(()=>{"use strict";Ce();_e();Xa();Nc=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Vc=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=W("input",e[0].dataType,e[0].dims,4),a=W("bias",e[0].dataType,[e[0].dims[2]],4),i=J("output",e[0].dataType,t,4),s=N.size(t)/4,o=He(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:p=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${p.declareVariables(r,a,i)}

  ${Xn(`vec4<${o}>`,o)}

  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes(s)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${i.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},ou=e=>{Nc(e.inputs),e.compute(Vc(e.inputs))}});var Hc,Lc,Pt,uu,lu,du,cu,pu,fu,mu,hu,gu,yu,bu=Q(()=>{"use strict";ze();Ce();_e();Hc=(e,t,r,a,i,s,o,c,p,m,l,g)=>{let b,w;typeof c=="string"?b=w=(S,E)=>`${c}((${S}),(${E}))`:typeof c=="function"?b=w=c:(b=c.scalar,w=c.vector);let $=J("outputData",l,a.length,4),x=W("aData",p,t.length,4),T=W("bData",m,r.length,4),C;if(i)if(s){let S=N.size(t)===1,E=N.size(r)===1,O=t.length>0&&t[t.length-1]%4===0,U=r.length>0&&r[r.length-1]%4===0;S||E?C=$.setByOffset("global_idx",w(S?`${x.type.value}(${x.getByOffset("0")}.x)`:x.getByOffset("global_idx"),E?`${T.type.value}(${T.getByOffset("0")}.x)`:T.getByOffset("global_idx"))):C=`
            let outputIndices = ${$.offsetToIndices("global_idx * 4u")};
            let offsetA = ${x.broadcastedIndicesToOffset("outputIndices",$)};
            let offsetB = ${T.broadcastedIndicesToOffset("outputIndices",$)};
            ${$.setByOffset("global_idx",w(o||O?x.getByOffset("offsetA / 4u"):`${x.type.value}(${x.getByOffset("offsetA / 4u")}[offsetA % 4u])`,o||U?T.getByOffset("offsetB / 4u"):`${T.type.value}(${T.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else C=$.setByOffset("global_idx",w(x.getByOffset("global_idx"),T.getByOffset("global_idx")));else{if(!s)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let S=(E,O,U="")=>{let D=`aData[indexA${O}][componentA${O}]`,V=`bData[indexB${O}][componentB${O}]`;return`
            let outputIndices${O} = ${$.offsetToIndices(`global_idx * 4u + ${O}u`)};
            let offsetA${O} = ${x.broadcastedIndicesToOffset(`outputIndices${O}`,$)};
            let offsetB${O} = ${T.broadcastedIndicesToOffset(`outputIndices${O}`,$)};
            let indexA${O} = offsetA${O} / 4u;
            let indexB${O} = offsetB${O} / 4u;
            let componentA${O} = offsetA${O} % 4u;
            let componentB${O} = offsetB${O} % 4u;
            ${E}[${O}] = ${U}(${b(D,V)});
          `};l===9?C=`
            var data = vec4<u32>(0);
            ${S("data",0,"u32")}
            ${S("data",1,"u32")}
            ${S("data",2,"u32")}
            ${S("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:C=`
            ${S("outputData[global_idx]",0)}
            ${S("outputData[global_idx]",1)}
            ${S("outputData[global_idx]",2)}
            ${S("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(x,T,$)}

        ${g??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${C}
      }`},Lc=(e,t,r,a,i,s,o=r.dataType)=>{let c=!N.areEqual(r.dims,a.dims),p=r.dims,m=N.size(r.dims),l=!1,g=!1,b=[c];if(c){let w=At.calcShape(r.dims,a.dims,!1);if(!w)throw new Error("Can't perform binary op on the given tensors");p=w,m=N.size(p);let $=N.size(r.dims)===1,x=N.size(a.dims)===1,T=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,C=a.dims.length>0&&a.dims[a.dims.length-1]%4===0;b.push($),b.push(x),b.push(T),b.push(C);let S=1;for(let E=1;E<p.length;E++){let O=r.dims[r.dims.length-E]??1,U=a.dims[a.dims.length-E]??1;if(O===U)S*=O;else break}S%4===0?(g=!0,l=!0):($||x||T||C)&&(l=!0)}else l=!0;return b.push(l),{name:e,shaderCache:{hint:t+b.map(w=>w.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:w=>Hc(w,r.dims,a.dims,p,l,c,g,i,r.dataType,a.dataType,o,s),getRunData:()=>({outputs:[{dims:p,dataType:o}],dispatchGroup:{x:Math.ceil(m/64/4)},programUniforms:[{type:"uint32",data:Math.ceil(N.size(p)/4)},...L(r.dims),...L(a.dims),...L(p)]})}},Pt=(e,t,r,a,i,s)=>{e.compute(Lc(t,i??"",e.inputs[0],e.inputs[1],r,a,s))},uu=e=>{Pt(e,"Add",(t,r)=>`${t}+${r}`)},lu=e=>{Pt(e,"Div",(t,r)=>`${t}/${r}`)},du=e=>{Pt(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},cu=e=>{Pt(e,"Mul",(t,r)=>`${t}*${r}`)},pu=e=>{let t=W("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Pt(e,"Pow",{scalar:(a,i)=>`pow_custom(${a},${i})`,vector:(a,i)=>`pow_vector_custom(${a},${i})`},`
    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {
      if (b == ${t}(0.0)) {
        return ${t}(1.0);
      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {
        return ${t}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {
      // TODO: implement vectorized pow
      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},fu=e=>{Pt(e,"Sub",(t,r)=>`${t}-${r}`)},mu=e=>{Pt(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},hu=e=>{Pt(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},gu=e=>{Pt(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},yu=e=>{Pt(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}});var Fc,qc,jc,Kc,vu,wu,$u=Q(()=>{"use strict";Ce();Xe();_e();Fc=e=>{if(!e||e.length<1)throw new Error("too few inputs");let t=e[0].dataType,r=e[0].dims.length;for(let a of e){if(a.dataType!==t)throw new Error("input tensors should be one type");if(a.dims.length!==r)throw new Error("input tensors should have the same shape")}},qc=(e,t)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${t});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,jc=(e,t)=>{let r=e.length,a=[];for(let i=0;i<r;++i){let s=t.setByOffset("global_idx",e[i].getByIndices("indices"));r===1?a.push(s):i===0?a.push(`if (inputIndex == ${i}u) { ${s} }`):i===r-1?a.push(`else { ${s} }`):a.push(`else if (inputIndex == ${i}) { ${s} }`)}return a.join(`
`)},Kc=(e,t)=>{let r=e[0].dims.slice();if(t>=r.length||t<-1*r.length)throw new Error("axis specified for concat doesn't match input dimensionality");let a=t<0?r.length+t:t,i=r.slice(0);for(let C=1;C<e.length;C++){let S=e[C].dims.slice();for(let E=0;E<r.length;E++)if(E===a)i[a]+=S[E];else if(r[E]!==S[E])throw new Error("non concat dimensions must match")}let s=N.size(i),o=new Array(e.length),c=new Array(e.length),p=e[0].dataType,m=0,l=[],g=[],b=[{type:"uint32",data:s}];for(let C=0;C<e.length;++C)m+=e[C].dims[a],o[C]=m,g.push(e[C].dims.length),c[C]=W(`input${C}`,p,g[C]),l.push("rank"),b.push({type:"uint32",data:o[C]});for(let C=0;C<e.length;++C)b.push(...L(e[C].dims));b.push(...L(i));let w=J("output",p,i.length),$=w.indicesGet("indices",a),x=Array.from(Array(o.length).keys()).map(C=>`uniforms.sizeInConcatAxis${C}`).join(","),T=C=>`

  ${(()=>{C.registerUniform("outputSize","u32");for(let S=0;S<e.length;S++)C.registerUniform(`sizeInConcatAxis${S}`,"u32");return C.declareVariables(...c,w)})()}

  ${qc(o.length,x)}

  ${C.mainStart()}
    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${w.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${$});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${o.length}u>(${x});
      ${$} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${jc(c,w)}
  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:b}),getShaderSource:T}},vu=(e,t)=>{Fc(e.inputs),e.compute(Kc(e.inputs,t.axis))},wu=e=>xe({axis:e.axis})});var Rt,Qn,Ft=Q(()=>{"use strict";Ce();Rt=(e,t)=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(uniforms.clip_min), ${t}(uniforms.clip_max));`;default:return""}},Qn=e=>{let t=e?.activation||"";if(t==="Clip"){let[r,a]=e?.activation_params||[Gn,Fn];return{activation:t,clipMax:a,clipMin:r}}return{activation:t}}});var je,Jn,ea=Q(()=>{"use strict";je=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Jn=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `});var ta,Qa=Q(()=>{"use strict";ta=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`});var Yc,Zc,Zr,_u,Xc,Xr,Qc,ra,Qr=Q(()=>{"use strict";Ce();_e();Ft();ea();Yc=(e,t)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${t?", batchIndices":""});
        `,Zc=(e,t)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,Zr=(e,t,r="f32",a,i=!1,s=32,o=!1,c=32)=>{let p=t[1]*e[1],m=t[0]*e[0],l=i?p:s,g=i?s:p,b=l/t[0],w=s/t[1];if(!((i&&b===4&&e[1]===4||!i&&(b===3||b===4))&&l%t[0]===0&&s%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${i} is true, innerElementSize ${b} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${b} must be 3 or 4.
  tileAWidth ${l} must be divisible by workgroupSize[0]${t[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${b}<${r}>, ${l/b}>, ${g}>;
var<workgroup> mm_Bsub: array<array<vec4<${r}>, ${m/e[0]}>, ${s}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${b};
const tileInner = ${s};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${o?"0":"i32(globalId.z)"};
  ${a?`let batchIndices = ${a.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${p};

  let num_tiles = ${o?`${Math.ceil(c/s)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${o?`i32(globalId.z) * ${c}`:"0"};

  var acc: array<vec4<${r}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${w};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${Yc(i,a)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${w}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${a?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${b===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${Zc(i,b)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},_u=(e,t)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${t?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${t?", batchIndices":""});
            `,Xc=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Xr=(e,t,r="f32",a,i=!1,s=32,o=!1,c=32,p=!1)=>{let m=e[1]*t[1],l=e[0]*t[0],g=i?m:s,b=i?s:m;if(!(b%t[1]===0&&g%t[0]===0&&s%t[1]===0))throw new Error(`tileAHight ${b} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${g} must be divisible by workgroupSize[0]${t[0]}, tileInner ${s} must be divisible by workgroupSize[1]${t[1]}`);let w=b/t[1],$=g/t[0],x=s/t[1],T=p?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${m};
    let globalColStart = i32(workgroupId.x) * ${l};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${b}; inputRow = inputRow + ${t[1]}) {
        for (var inputCol = localCol; inputCol < ${g}; inputCol = inputCol + ${t[0]}) {
          ${_u(i,a)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${t[1]}) {
            for (var inputCol = localCol; inputCol < ${l}; inputCol = inputCol + ${t[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${a?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${r}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${t[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${t[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${m};

let tileRowA = i32(localId.y) * ${w};
let tileColA = i32(localId.x) * ${$};
let tileRowB = i32(localId.y) * ${x};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${w}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${$}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${_u(i,a)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${x}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${a?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${r}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${Xc(i)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${r}, ${g}>, ${b}>;
  var<workgroup> mm_Bsub : array<array<${r}, ${l}>, ${s}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${s};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${o?"0":"i32(globalId.z)"};
    ${a?`let batchIndices = ${a.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${o?`${Math.ceil(c/s)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${o?`i32(globalId.z) * ${c}`:"0"};

    var acc : array<array<${r}, colPerThread>, rowPerThread>;

    // Without this initialization strange values show up in acc.
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = 0.0;
      }
    }
    ${T}
  }
`},Qc=(e,t,r,a,i,s=!1)=>{let[o,c,p]=i,[m,l,g,b]=a,w=wr(o,p),$=wr(c,p),x=He(a[0].type.tensor),T=()=>{let E=l.rank,O=m.rank,U=`var aIndices: ${l.type.indices};`;for(let D=E-2-1,V=O-1;D>=0;D--,V--)U+=`
aIndices[${D}] = ${O>1?`batchIndices[${V}]`:"batchIndices"};`;return w.forEach(D=>{U+=`
aIndices[${D}] = 0;`}),U+=`
aIndices[${E-2}] = u32(row);
                   aIndices[${E-1}] = u32(colIn);`,U},C=()=>{let E=g.rank,O=m.rank,U=`var bIndices: ${g.type.indices};`;for(let D=E-2-1,V=O-1;D>=0;D--,V--)U+=`
bIndices[${D}] = ${O>1?`batchIndices[${V}]`:"batchIndices"};`;return $.forEach(D=>{U+=`
bIndices[${D}] = 0;`}),U+=`
bIndices[${E-2}] = u32(row);
                   bIndices[${E-1}] = u32(colIn);`,U};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${m.type.indices}) -> ${je(e,x)} {
      var value = ${je(e,x)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        ${T()}
        value = ${l.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${m.type.indices}) -> ${je(e,x)} {
      var value = ${je(e,x)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        ${C()}
        value = ${g.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${je(e,x)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${t?`value = value + ${s?"bias[colIn]":`${je(e,x)}(bias[row])`};`:""}
        ${r}
        ${b.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},ra=(e,t,r,a,i=!1)=>{let s=e[0].dims,o=e[1].dims,c=s.slice(0,-2),p=o.slice(0,-2),m=a?a.slice(0,-2):r.slice(0,-2),l=N.size(m),g=s[s.length-2],b=s[s.length-1],w=o[o.length-1],$=b%4===0&&w%4===0,x=g<=8?[4,1,1]:[4,4,1],T=[8,8,1],C=[Math.ceil(w/T[0]/x[0]),Math.ceil(g/T[1]/x[1]),Math.ceil(l/T[2]/x[2])],S=$?4:1,E=[...c,g,b/S],O=E.length,U=[...p,b,w/S],D=U.length,V=[l,g,w/S],Y=[{type:"int32",data:g},{type:"int32",data:w},{type:"int32",data:b}];t.activation==="Clip"&&Y.push({type:"float32",data:t.clipMax},{type:"float32",data:t.clipMin}),Y.push(...L(m),...L(E),...L(U));let se=["rank","rank"],B=e.length>2;B&&(Y.push(...L(e[2].dims)),se.push("rank")),Y.push(...L(V));let te=ke=>{let Oe=m.length,ee=qn("batchDims",e[0].dataType,Oe,1),be=He(e[0].dataType),Ue=W("a",e[0].dataType,O,S),pe=W("b",e[1].dataType,D,S),ye=J("result",e[0].dataType,V.length,S),de=[Ue,pe];if(B){let Ge=i?S:1;de.push(W("bias",e[2].dataType,e[2].dims.length,Ge))}let ve=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];t.activation==="Clip"&&ve.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"});let We=Rt(t,ye.type.value),Be=Qc(S,B,We,[ee,Ue,pe,ye],[c,p,m],i);return`
  ${ke.registerUniforms(ve).registerInternalVariables(ee).declareVariables(...de,ye)}
  ${Be}
  ${$?Zr(x,T,be,ee):Xr(x,T,be,ee)}
                   `};return{name:"MatMul",shaderCache:{hint:`${x};${t.activation};${$};${i}`,inputDependencies:se},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:C[0],y:C[1],z:C[2]},programUniforms:Y}),getShaderSource:te}}});var Jc,Su,xu=Q(()=>{"use strict";Gt();_e();Ft();ea();Qa();Qr();Jc=(e,t,r,a,i=!1,s,o=4,c=4,p=4,m="f32")=>{let l=B=>{switch(B){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${m}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${B} is not supported.`)}},g=B=>{switch(B){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${B} is not supported.`)}},b=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,w=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,$=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",x=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",T=e?"row":"col",C=e?"col":"row",S=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${T} / outWidth;
    let outCol = ${T} % outWidth;

    let WRow = ${C} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${C} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${C} % inChannels;
    var resData = ${je(o,m)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${$} && xCol >= 0 && xCol < ${x}) {
      ${b}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${l(o)}
    }
    return resData;`,E=e?t&&a?`
    let col = colIn * ${o};
    ${S}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${S}
    }
    return ${je(o,m)}(0.0);`:a&&r?`
    let col = colIn * ${o};
    ${S}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${S}
    }
    return ${je(o,m)}(0.0);`,O=`${g(c)}`,U=je(p,m),D=e?je(o,m):je(c,m),V=e?je(c,m):je(o,m),Y=Rt(s,U);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${D} {
      ${e?E:O}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${V} {
      ${e?O:E}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${U}) {
      let col = colIn * ${p};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${w}
      ${Jn(i)}
      ${Y}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},Su=(e,t,r,a,i,s,o,c)=>{let p=t.format==="NHWC",m=p?e[0].dims[3]:e[0].dims[1],l=r[0],g=p?r[2]:r[3],b=p?r[1]:r[2],w=p?r[3]:r[1],$=p&&(m%4===0||m%3===0)&&w%4===0,x=p?w:g*b,T=p?g*b:w,C=[8,8,1],S=a<=8?[4,1,1]:[4,4,1],E=[Math.ceil(x/C[0]/S[0]),Math.ceil(T/C[1]/S[1]),Math.ceil(l/C[2]/S[2])];De("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${E}`);let O=$?p&&m%4!==0?3:4:1,U=C[1]*S[1],D=C[0]*S[0],V=Math.max(C[0]*O,C[1]),Y=a%U===0,se=i%D===0,B=s%V===0,te=$?[O,4,4]:[1,1,1],ke=[{type:"int32",data:a},{type:"int32",data:i},{type:"int32",data:s},{type:"int32",data:[t.pads[0],t.pads[1]]},{type:"int32",data:t.strides},{type:"int32",data:t.dilations}];t.activation==="Clip"&&ke.push({type:"float32",data:t.clipMax},{type:"float32",data:t.clipMin}),ke.push(...L(e[0].dims),...L(e[1].dims));let Oe=["rank","rank"];o&&(ke.push(...L(e[2].dims)),Oe.push("rank")),ke.push(...L(r));let ee=be=>{let Ue=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];t.activation==="Clip"&&Ue.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"});let pe=$?4:1,ye=He(e[0].dataType),de=`
      fn setOutputAtIndex(flatIndex : i32, value : ${$?`vec4<${ye}>`:ye}) {
        result[flatIndex] = ${$?`vec4<${ye}>`:ye}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${$?`vec4<${ye}>`:ye}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${$?"/ 4":""}, value);
      }`,ve=W("x",e[0].dataType,e[0].dims.length,O===3?1:O),We=W("w",e[1].dataType,e[1].dims.length,pe),Be=[ve,We],Ge=J("result",e[0].dataType,r.length,pe);if(o){let F=W("bias",e[2].dataType,e[2].dims.length,pe);Be.push(F),de+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${$?`vec4<${ye}>`:ye} {
          return bias[coords.${p?"w":"y"}${$?"/ 4":""}];
        }`}return`
        ${ta("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${be.registerUniforms(Ue).declareVariables(...Be,Ge)}
        ${de}
        ${Jc(p,Y,se,B,o,t,te[0],te[1],te[2],ye)}
        ${$?Zr(S,C,ye,void 0,!p,V):Xr(S,C,ye,void 0,!p,V,!1,void 0,c)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${O};${$};${Y};${se};${B};${U};${D};${V}`,inputDependencies:Oe},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:ke}),getShaderSource:ee}}});var Ja,Cu=Q(()=>{"use strict";Ce();_e();ti();Ft();Ja=(e,t,r)=>{let a=e.length>2,i=a?"value += b[output_channel];":"",s=e[0].dims,o=e[1].dims,c=o[0]/t.group,p=t.format==="NHWC",m=ei(s,o,t.dilations,t.pads,t.strides,p),l=N.size(m),g=[{type:"uint32",data:l},{type:"uint32",data:t.dilations},{type:"uint32",data:[t.strides[0],t.strides[1]]},{type:"uint32",data:[t.pads[0],t.pads[1]]},{type:"uint32",data:c}];t.activation==="Clip"&&g.push({type:"float32",data:t.clipMax},{type:"float32",data:t.clipMin}),g.push(...L(s),...L(o),...L(m));let b=["rank","rank"];a&&(g.push(...L(e[2].dims)),b.push("rank")),g.push(...L(m));let w=$=>{let x=J("output",e[0].dataType,m.length),T=Rt(t,x.type.value),C=W("x",e[0].dataType,s.length),S=W("w",e[1].dataType,o.length),E=[C,S];a&&E.push(W("b",e[2].dataType,e[2].dims));let O=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return t.activation==="Clip"&&O.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}),`
  ${$.registerUniforms(O).declareVariables(...E,x)}

  ${$.mainStart()}
    ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${x.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${p?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${p?1:2}], outputIndices[${p?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel / uniforms.output_channels_per_group;

    var value: ${x.type.value} = ${x.type.value}(0);
    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[${p?1:2}]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[${p?2:3}]) {
            continue;
          }

          let xVal = ${p?C.get("batch","xHeight","xWidth","input_channel"):C.get("batch","input_channel","xHeight","xWidth")};
          let wVal = ${S.get("output_channel","wInChannel","wHeight","wWidth")};
          value += xVal*wVal;
        }
      }
    }
    ${i}
    ${T}
    ${x.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:t.cacheKey,inputDependencies:b},getRunData:()=>({outputs:[{dims:r?r(m):m,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:g}),getShaderSource:w}}});var ri,ep,Iu,ni=Q(()=>{"use strict";Ce();Qr();_e();Ft();ri=(e,t,r,a,i=!1)=>{let s=e[0].dims,o=e[1].dims,c=s[s.length-2],p=o[o.length-1],m=s[s.length-1],l=Le(p),g=Le(m),b=Le(c),w=N.size(r)/l/b,$=e.length>2,x=a?a.slice(0,-2):r.slice(0,-2),C=[N.size(x),c,p],S=[{type:"uint32",data:w},{type:"uint32",data:c},{type:"uint32",data:p},{type:"uint32",data:m}];t.activation==="Clip"&&S.push({type:"float32",data:t.clipMax},{type:"float32",data:t.clipMin}),S.push(...L(x),...L(s),...L(o)),$&&S.push(...L(e[2].dims)),S.push(...L(C));let E=O=>{let U=qn("batch_dims",e[0].dataType,x.length),D=W("a",e[0].dataType,s.length,g),V=W("b",e[1].dataType,o.length,l),Y=J("output",e[0].dataType,C.length,l),se=Rt(t,Y.type.value),B=[D,V],te="";if($){let de=i?l:1;B.push(W("bias",e[2].dataType,e[2].dims.length,de)),te=`${i?`value += bias[col / ${de}];`:`value += ${Y.type.value}(bias[row + i]);`}`}let ke=s.slice(0,-2),Oe=o.slice(0,-2),ee=wr(ke,x),be=wr(Oe,x),Ue=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];t.activation==="Clip"&&Ue.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"});let pe=(de,ve)=>{let We=de.rank,Be=de.name;if(We===2)return`var ${Be}_indices = ${de.type.indices}(0u, 0u);`;let Ge=U.rank,F=`var ${Be}_indices: ${de.type.indices};`;for(let ie=We-2-1,he=Ge-1;ie>=0;ie--,he--)F+=`
${Be}_indices[${ie}] = ${Ge>1?`batch_indices[${he}]`:"batch_indices"};`;return ve.forEach(ie=>{F+=`
${Be}_indices[${ie}] = 0;`}),F+=`${Be}_indices[${We-2}] = 0u;
                     ${Be}_indices[${We-1}] = 0u;`,F},ye=()=>{let de=`var a_data: ${D.type.value};`;for(let ve=0;ve<g;ve++)de+=`
              let b_data${ve} = b[(b_offset + (k + ${ve}) * uniforms.N + col) / ${l}];`;for(let ve=0;ve<b;ve++){de+=`a_data = a[(a_offset + (row + ${ve}) * uniforms.K + k) / ${g}];`;for(let We=0;We<g;We++)de+=`
            values[${ve}] = fma(${V.type.value}(a_data${g===1?"":`[${We}]`}), b_data${We}, values[${ve}]);
`}return de};return`
  ${O.registerUniforms(Ue).registerInternalVariables(U).declareVariables(...B,Y)}
  ${O.mainStart()}
    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${l})) * ${l};
    var index1 = global_idx / (uniforms.N / ${l});
    let stride1 = uniforms.M / ${b};
    let row = (index1 % stride1) * ${b};
    let batch = index1 / stride1;

    ${r.length===2?"":`let batch_indices = ${U.offsetToIndices("batch")};`}
    ${pe(D,ee)}
    let a_offset = ${D.indicesToOffset("a_indices")};
    ${pe(V,be)}
    let b_offset = ${V.indicesToOffset("b_indices")};
    var values: array<${Y.type.value}, ${b}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${g}) {
      ${ye()}
    }
    for (var i = 0u; i < ${b}u; i++) {
      var value = values[i];
      ${te}
      ${se}
      let cur_indices = ${Y.type.indices}(batch, row + i, col);
      let offset = ${Y.indicesToOffset("cur_indices")};
      ${Y.setByOffset(`offset / ${l}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${l};${g};${b};${i}`,inputDependencies:$?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:S}),getShaderSource:E}},ep=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Iu=e=>{ep(e.inputs);let t=At.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can't use matmul on the given tensors");let r=t[t.length-1],a=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&a<8?e.compute(ri(e.inputs,{activation:""},t)):e.compute(ra(e.inputs,{activation:""},t))}});var ei,Au,tp,Tu,ai,rp,np,ii,ti=Q(()=>{"use strict";Ce();xu();Qr();Cu();Ft();ni();$r();ei=(e,t,r,a,i,s)=>{let o=e[0],c=e.slice(s?1:2,s?3:4),p=c.length,m=t[0],g=t.slice(2).map(($,x)=>$+($-1)*(r[x]-1)),w=c.map(($,x)=>$+a[x]+a[x+p]).map(($,x)=>Math.floor(($-g[x]+i[x])/i[x]));return w.splice(0,0,o),w.splice(s?3:1,0,m),w},Au=[2,3,1,0],tp=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],a=e[1].dims[1]*t.group;if(r!==a)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let i=e[0].dims.length-2;if(t.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(t.strides.length!==i)throw new Error(`strides should be ${i}D`);if(t.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},Tu=(e,t)=>{let r=e.kernelShape.slice();for(let s=2;s<t[1].dims.length;++s)r[s-2]===0&&(r[s-2]=t[1].dims[s]);let a=e.pads.slice();ir.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,a,e.format==="NHWC",e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:r,pads:a}),i},ai=e=>{let t=Qn(e),r=e.format,a=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],i=e.dilations,s=e.group,o=e.kernel_shape,c=e.pads,p=e.strides,m=e.w_is_const();return{autoPad:a,format:r,dilations:i,group:s,kernelShape:o,pads:c,strides:p,wIsConst:m,...t,cacheKey:`${e.format};${t.activation};`}},rp=(e,t,r)=>{let a=Tu(r,t),i=r.format==="NHWC";if(r.group!==1){e.compute(Ja(t,a));return}let s=t.length===3,o=t[0].dims[i?1:2],c=t[0].dims[i?2:3],p=t[0].dims[i?3:1],m=t[1].dims[2],l=t[1].dims[3],g=ei(t[0].dims,t[1].dims,r.dilations,a.pads,r.strides,i),b=g[i?1:2],w=g[i?2:3],$=g[i?3:1],x=i&&m===o&&l===c&&r.pads[0]===0&&r.pads[1]===0;if(x||m===1&&l===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let D=g[0],V,Y,se,B=[];if(i){let Oe=e.kernelCustomData.wT??e.compute(xt(t[1],Au),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Oe),x){let ee=o*c*p;V=t[0].reshape([1,D,ee]),Y=Oe.reshape([1,ee,$]),se=[1,D,$]}else V=t[0].reshape([D,o*c,p]),Y=Oe.reshape([1,p,$]),se=[D,b*w,$];B.push(V),B.push(Y)}else V=t[0].reshape([D,p,o*c]),Y=t[1].reshape([1,$,p]),se=[D,$,b*w],B.push(Y),B.push(V);s&&B.push(t[2]);let te=se[2],ke=B[0].dims[B[0].dims.length-1];te<8&&ke<8?e.compute(ri(B,a,g,se,i),{inputs:B}):e.compute(ra(B,a,g,se,i),{inputs:B});return}let T=!0,C=e.kernelCustomData.wT??e.compute(xt(t[1],Au),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=C);let S=[t[0],C];s&&S.push(t[2]);let E=i?b*w:$,O=i?$:b*w,U=m*l*p;e.compute(Su(S,a,g,E,O,U,s,T),{inputs:S})},np=(e,t)=>{let r=t.format==="NHWC",a=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&a.push(e.inputs[2]);let i=[0,t.pads[0],0,t.pads[1]],s=[1].concat(t.strides),o=[1].concat(t.dilations),c=[1].concat(t.kernelShape),p=Tu({...t,pads:i,strides:s,dilations:o,kernelShape:c},a);e.compute(Ja(a,p,m=>r?[m[0],m[2],m[3]]:[]))},ii=(e,t)=>{tp(e.inputs,t),e.inputs[0].dims.length===3?np(e,t):rp(e,e.inputs,t)}});var ap,Eu,Ou=Q(()=>{"use strict";Gt();_e();Ft();ea();Qa();Qr();ap=(e,t=!1,r,a=4)=>{let i=je(a,"f32"),s=C=>{switch(C){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];
            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];
            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];
            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${C} is not supported.`)}},o=e?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,c=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,p=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",m=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",l=e?"row":"col",g=e?"col":"row",b=`
      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      let outRow = ${l} / outWidth;
      let outCol = ${l} % outWidth;

      let WRow = ${g} / (uniforms.filter_dims[1] * inChannels);
      let WCol = ${g} / inChannels % uniforms.filter_dims[1];
      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(${p}) || fract(xR) > 0.0) {
        return ${i}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${m}) || fract(xC) > 0.0) {
        return ${i}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${g} % inChannels;
      ${o}
      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${a}];`,w=e?`
      let col = colIn * ${a};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
        ${b}
      }
      return ${i}(0.0);`:`
      let col = colIn * ${a};
      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
        ${b}
      }
      return ${i}(0.0);`,$=`
      let col = colIn * ${a};
      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);
      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];
      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${s(a)}
      }
      return ${i}(0.0);
      `,x=Rt(r,i);return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${i} {
    ${e?w:$}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${i} {
    ${e?$:w}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${i}) {
    let col = colIn * ${a};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
      var value = valueInput;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${c}
      ${Jn(t)}
      ${x}
      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${a}] = value;
    }
  }`},Eu=(e,t,r,a,i,s,o,c)=>{let p=t.format==="NHWC",m=p?e[0].dims[3]:e[0].dims[1],l=r[0],g=p?r[2]:r[3],b=p?r[1]:r[2],w=p?r[3]:r[1],$=p?m%4===0&&w%4===0:g%4===0&&w%4===0,x=p?w:g*b,T=p?g*b:w,C=$?[8,8,1]:[x<=4||T<=4?4:16,x>4&&T<=4?4:16,1],S=$?[4,4,1]:[x<=4?1:4,x>4&&T<=4?1:4,1],E=[Math.ceil(x/C[0]/S[0]),Math.ceil(T/C[1]/S[1]),Math.ceil(l/C[2]/S[2])];De("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${E}`);let O=$?4:1,U=Math.max(C[0]*O,C[1]),D=$?4:1,V=[t.kernelShape[p?1:2],t.kernelShape[p?2:3]],Y=[V[0]+(t.dilations[0]<=1?0:(V[0]-1)*(t.dilations[0]-1)),V[1]+(t.dilations[1]<=1?0:(V[1]-1)*(t.dilations[1]-1))],se=[Y[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),Y[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],B=[{type:"int32",data:a},{type:"int32",data:i},{type:"int32",data:s},{type:"int32",data:t.strides},{type:"int32",data:t.dilations},{type:"int32",data:V},{type:"int32",data:se}];t.activation==="Clip"&&B.push({type:"float32",data:t.clipMax},{type:"float32",data:t.clipMin}),B.push(...L(e[0].dims),...L(e[1].dims));let te=["rank","rank"];o&&(B.push(...L(e[2].dims)),te.push("rank")),B.push(...L(r));let ke=Oe=>{let ee=W("x",e[0].dataType,e[0].dims.length,D),be=W("w",e[1].dataType,e[1].dims.length,1),Ue=J("result",e[0].dataType,r.length,D),pe=[ee,be],ye="";if(o){let ve=W("bias",e[2].dataType,e[2].dims.length,D);pe.push(ve),ye+=`
          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${$?"vec4<f32>":"f32"} {
            return bias[coords.${p?"w":"y"}${$?"/ 4":""}];
          }`}let de=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:V.length},{name:"pads",type:"i32",length:se.length}];return t.activation==="Clip"&&de.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}),`
        ${ta("uniforms.result_strides")}
        ${Oe.registerUniforms(de).declareVariables(...pe,Ue)};
        ${ye}
        ${ap(p,o,t,O)}
        ${$?Zr(S,C,"f32",void 0,!p,U):Xr(S,C,"f32",void 0,!p,U,!1,void 0,c)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${S};${C};${$}`,inputDependencies:te},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:B}),getShaderSource:ke}}});var ip,oi,ku=Q(()=>{"use strict";Gt();Ce();_e();ip=(e,t,r,a,i,s=!1,o,c,p=!1)=>{let m=p?1:2,l=p?2:3,g=p?3:1,b=s?2:1,w=`
  fn setOutputAtIndex(flatIndex : u32, value : ${s?`vec4<${o}>`:o}) {
    result[flatIndex] = ${s?`vec4<${o}>`:o}(value);
  }`;a&&(w+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${s?`vec4<${o}>`:o} {
      return bias[coords.${p?"w":"y"}${s?"/ 4":""}];
    }`);let $=s?4:1,x=W("W",t[1].dataType,t[1].dims.length,$),T=W("Dy",t[0].dataType,t[0].dims.length,$),C=[T,x];a&&C.push(W("bias",t[2].dataType,[r[g]].length,$));let S=J("result",t[0].dataType,r.length,$),E=`{
        let batch: u32 = ${i?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];
        let r = ${i?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];
        let c = ${i?"global_id.y":"workgroup_id.y"} * ${b};
        let d1: u32 = ${i?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${o}>, ${b}>;
        for (var i = 0; i < ${b}; i++) {
          dotProd[i] = vec4<${o}>(0.0);
        }
        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {
          var dyR = (${o}(dyCorner.x) + ${o}(wR)) / ${o}(uniforms.strides.x);
          let wRPerm = uniforms.filter_dims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${o}(uniforms.Dy_shape[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {
            let dyC = (${o}(dyCorner.y) + ${o}(wC)) / ${o}(uniforms.strides.y);
            let dyC2 = (${o}(dyCorner.y) + 1.0 + ${o}(wC)) / ${o}(uniforms.strides.y);
            let wCPerm = uniforms.filter_dims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${o}(uniforms.Dy_shape[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${o}(uniforms.Dy_shape[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${T.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${o}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${T.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${o}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = uniforms.Dy_shape[${g}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${T.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${o}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${T.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${o}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${b}; i = i + 1) {
          let value = dotProd[i] + ${a?"bias[c+i]":`vec4<${o}>(0.0)`};
          ${S.set("batch","r","c + i","d1","value")};
        }
      }`,O=`
          let outputIndices = ${S.offsetToIndices("global_idx")};
          let batch = ${S.indicesGet("outputIndices",0)};
          let d1 = ${S.indicesGet("outputIndices",g)};
          let r = ${S.indicesGet("outputIndices",m)};
          let c = ${S.indicesGet("outputIndices",l)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / uniforms.output_channels_per_group;
          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = ${o}(0.0);
          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
            if (wR % uniforms.dilations.x != 0) {
              continue;
            }
            let dyR = (${o}(dyRCorner) + ${o}(wR)) / ${o}(uniforms.strides[0]);
            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
            if (dyR < 0.0 || dyR >= ${o}(uniforms.Dy_shape[${m}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
              if (wC % uniforms.dilations.y != 0) {
                continue;
              }
              let dyC = (${o}(dyCCorner) + ${o}(wC)) / ${o}(uniforms.strides.y);
              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
              if (dyC < 0.0 || dyC >= ${o}(uniforms.Dy_shape[${l}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * uniforms.input_channels_per_group;
              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {
                let xValue = ${p?T.get("batch","idyR","idyC","inputChannel"):T.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${x.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${a?"bias[d1]":`${o}(0.0)`};
          ${S.setByOffset("global_idx","value")};
        `;return`
  ${e.registerUniforms(c).declareVariables(...C,S)}
  ${w}

    ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
  ${s?E:O}}`},oi=(e,t,r)=>{let a=e.length>2,i=t.outputShape,s=N.size(i),o=[Math.ceil(s/64),1,1];De("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${o}`);let c=t.format==="NHWC",p=["rank","rank"],m=[t.strides[0],t.strides[1]],l=[t.kernelShape[c?1:2],t.kernelShape[c?2:3]],g=[t.dilations[0],t.dilations[1]],b=[l[0]+(t.dilations[0]<=1?0:(t.kernelShape[c?1:2]-1)*(t.dilations[0]-1)),l[1]+(t.dilations[1]<=1?0:(t.kernelShape[c?2:3]-1)*(t.dilations[1]-1))],w=[b[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),b[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],$=!1,x=t.group,T=e[1].dims,C=T[0]/x,S=T[1],E=[{type:"int32",data:s},{type:"uint32",data:m},{type:"uint32",data:l},{type:"uint32",data:g},{type:"uint32",data:b},{type:"int32",data:w},{type:"uint32",data:C},{type:"uint32",data:S},...L(e[0].dims),...L(e[1].dims)];a&&(E.push(...L(e[2].dims)),p.push("rank")),E.push(...L(i));let O=o[1]===1&&o[2]===1,U=D=>{let V=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:m.length},{name:"filter_dims",type:"u32",length:l.length},{name:"dilations",type:"u32",length:l.length},{name:"effective_filter_dims",type:"u32",length:b.length},{name:"pads",type:"i32",length:w.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],Y=He(e[0].dataType);return`${ip(D,e,i,a,O,$,Y,V,c)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:p},getRunData:()=>({dispatchGroup:{x:o[0],y:o[1],z:o[2]},outputs:[{dims:r?r(i):i,dataType:e[0].dataType}],programUniforms:E}),getShaderSource:U}}});var op,sp,up,Pu,Ru,lp,dp,cp,pp,Bu,Mu=Q(()=>{"use strict";Ou();ku();Ft();$r();op=(e,t,r,a,i,s)=>(e-1)*t+r+(a-1)*i+1-s,sp=(e,t,r,a,i)=>{let s=Math.floor(e/2);t==="SAME_UPPER"?(r[a]=s,r[i]=e-s):t==="SAME_LOWER"&&(r[a]=e-s,r[i]=s)},up=(e,t,r,a,i,s,o,c,p,m)=>{let l=e.length-2,g=m.length===0;if(p.length===0)for(let $=0;$<l;++$)p.push(0);let b=e[0],w=t[c?3:1]*i;for(let $=0,x=e.length-l-(c?1:0);$<l;++$,++x){let T=e[x],C=g?T*o[$]:m[$],S=op(T,o[$],s[$],t[x],r[$],C);sp(S,a,s,$,$+l),g&&m.push(o[$]*(T-1)+p[$]+(t[x]-1)*r[$]+1-s[$]-s[$+l])}m.splice(0,0,b),m.splice(c?3:1,0,w)},Pu=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((g,b)=>g*b,1)===0){r.length=0;for(let g=2;g<t[1].dims.length;++g)r.push(t[1].dims[g])}let a=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(a?3:1,0,t[1].dims[1]);let i=e.pads.slice(),s=e.outputShape.slice(),o=e.outputPadding.slice(),c=t[0].dims,p=e.dilations.slice();if(p.reduce((g,b)=>g+b,0)===0){let g=t[0].dims.length-2;p=new Array(g).fill(1)}let m=e.strides.slice();if(m.reduce((g,b)=>g+b,0)===0){let g=t[0].dims.length-2;m=new Array(g).fill(1)}up(c,r,p,e.autoPad,e.group,i,m,a,o,s);let l=Object.assign({},e);return Object.assign(l,{kernelShape:r,pads:i,outputPadding:o,outputShape:s,dilations:p,strides:m}),l},Ru=e=>{let t=Qn(e),r=e.format,a=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],i=e.dilations,s=e.group,o=e.kernelShape,c=e.pads,p=e.strides,m=e.wIsConst(),l=e.outputPadding,g=e.outputShape;return{autoPad:a,format:r,dilations:i,group:s,kernelShape:o,outputPadding:l,outputShape:g,pads:c,strides:p,wIsConst:m,...t,cacheKey:`${e.format};${t.activation};`}},lp=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],a=e[1].dims[0];if(r!==a)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let i=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==i))throw new Error("invalid bias");let s=e[0].dims.length-2;if(t.dilations.reduce((l,g)=>l+g,0)>0&&t.dilations.length!==s)throw new Error(`dilations should be ${s}D`);if(t.strides.reduce((l,g)=>l+g,0)>0&&t.strides.length!==s)throw new Error(`strides should be ${s}D`);if(t.pads.reduce((l,g)=>l+g,0)>0&&t.pads.length!==s*2)throw new Error(`pads should be ${s*2}D`);if(t.outputPadding.length!==s&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${s}D`);if(t.kernelShape.reduce((l,g)=>l+g,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},dp=[2,3,1,0],cp=(e,t,r)=>{let a=Pu(r,t),i=r.format==="NHWC",s=a.outputShape,o=s[i?3:1],c=t[0].dims[i?3:1];if(a.group!==1||o===1&&c===1){e.compute(oi(t,a));return}let p=s[i?1:2],m=s[i?2:3],l=t[1].dims[2],g=t[1].dims[3],b=i?p*m:o,w=i?o:p*m,$=l*g*c,x=!0,T=e.kernelCustomData.wT??e.compute(xt(t[1],dp),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=T);let C=[t[0],T],S=t.length===3;S&&(!i&&t[2].dims.length===1?C.push(t[2].reshape([t[2].dims[0],1,1])):C.push(t[2])),e.compute(Eu(C,a,s,b,w,$,S,x),{inputs:C})},pp=(e,t)=>{let r=t.format==="NHWC",a=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];a.length===3&&a.push(e.inputs[2]);let i=t.kernelShape;(i.length===0||i[0]===0)&&(i=[e.inputs[1].dims[2]]);let s=t.dilations;(s.length===0||s[0]===0)&&(s=[1]);let o=t.strides;(o.length===0||o[0]===0)&&(o=[1]);let c=t.pads;c.length===0&&(c=[0,0]),c=[0,c[0],0,c[1]],o=[1].concat(o),s=[1].concat(s),i=[1].concat(i);let p=Pu({...t,pads:c,strides:o,dilations:s,kernelShape:i},a);e.compute(oi(a,p,m=>r?[m[0],m[2],m[3]]:[m[0],m[1],m[3]]))},Bu=(e,t)=>{lp(e.inputs,t),e.inputs[0].dims.length===3?pp(e,t):cp(e,e.inputs,t)}});var fp,Du,zu,Uu=Q(()=>{"use strict";ze();Ce();Xe();_e();fp=(e,t,r,a)=>{let i=N.size(t),s=t.length,o=W("input",e,s),c=J("output",e,s),p=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),m=N.normalizeAxis(p,s),l=g=>{let b=` i32(${o.indicesGet("inputIndices","uniforms.axis")}) `,w=ce("uniforms.input_shape","uniforms.axis",s),$=a.reverse?b+(a.exclusive?" + 1":""):"0",x=a.reverse?w:b+(a.exclusive?"":" + 1");return`
                ${g.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(o,c)}
                ${g.mainStart()}
                  ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${c.offsetToIndices("global_idx")};
                  var sum = ${c.type.value}(0);
                  let first : i32 = ${$};
                  let last : i32 = ${x};
                  for (var i : i32 = first; i < last; i++) {
                    ${o.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${o.getByIndices("inputIndices")};
                  }
                  ${c.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:a.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:"uint32",data:i},{type:"int32",data:m},...L(t),...L(t)]}),getShaderSource:l}},Du=(e,t)=>{let r=e.inputs[0].dims,a=e.inputs[0].dataType,i=e.inputs[1];e.compute(fp(a,r,i,t),{inputs:[0]})},zu=e=>{let t=e.exclusive===1,r=e.reverse===1;return xe({exclusive:t,reverse:r})}});var si,na,Wu,mp,hp,ui,li,Nu,gp,Vu,Hu,Lu=Q(()=>{"use strict";Ce();Xe();_e();si="[a-zA-Z]|\\.\\.\\.",na="("+si+")+",Wu="^"+na+"$",mp="("+na+",)*"+na,hp="^"+mp+"$",ui=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let a=this.symbolToIndices.get(t);a===void 0?a=[r]:a.push(r),this.symbolToIndices.set(t,a)}},li=class{constructor(t,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[a,i]=r.includes("->")?r.split("->",2):[r,""];if(!a.match(RegExp(hp)))throw new Error("Invalid LHS term");if(a.split(",").forEach((c,p)=>{let m=t[p].dims.slice();if(!c.match(RegExp(Wu)))throw new Error("Invalid LHS term");let l=this.processTerm(c,!0,m,p);this.lhs.push(l)}),i==="")i+=[...this.symbolToInfo.entries()].filter(([c,p])=>p.count===1||c==="...").map(([c])=>c).join("");else if(!i.match(RegExp(na)))throw new Error("Invalid RHS");i.match(RegExp(si,"g"))?.forEach(c=>{if(c==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let p=this.symbolToInfo.get(c);if(p===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(p.dimValue)}}),this.rhs=this.processTerm(i,!1,this.outputDims)}addSymbol(t,r,a){let i=this.symbolToInfo.get(t);if(i!==void 0){if(i.dimValue!==r&&i.count!==1)throw new Error("Dimension mismatch");i.count++,i.inputIndices.push(a)}else i={count:1,dimValue:r,inputIndices:[a]};this.symbolToInfo.set(t,i)}processTerm(t,r,a,i=-1){let s=a.length,o=!1,c=[],p=0;if(!t.match(RegExp(Wu))&&!r&&t!=="")throw new Error("Invalid LHS term");let m=t.match(RegExp(si,"g")),l=new ui(i);return m?.forEach((g,b)=>{if(g==="..."){if(o)throw new Error("Only one ellipsis is allowed per input term");o=!0;let w=s-m.length+1;if(w<0)throw new Error("Ellipsis out of bounds");if(c=a.slice(p,p+w),this.hasEllipsis){if(this.ellipsisDims.length!==c.length||this.ellipsisDims.toString()!==c.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=c;else throw new Error("Ellipsis must be specified in the LHS");for(let $=0;$<c.length;$++){let x=String.fromCharCode("0".charCodeAt(0)+$);l.addSymbol(x,b+$),this.addSymbol(x,a[p++],i)}}else l.addSymbol(g,b+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(g,a[p++],i)}),l}},Nu=e=>e+"_max",gp=(e,t,r,a)=>{let s=e.map(l=>l.length).map((l,g)=>W(`input${g}`,t,l)),o=N.size(a),c=J("output",t,a.length),p=[...r.symbolToInfo.keys()].filter(l=>!r.rhs.symbolToIndices.has(l)),m=l=>{let g=[],b="var prod = 1.0;",w="var sum = 0.0;",$="sum += prod;",x=[],T=[],C=[],S=[],E=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((U,D)=>{if(r.rhs.symbolToIndices.has(D)){let V=r.rhs.symbolToIndices.get(D)?.[0];V!==void 0&&r.lhs.forEach((Y,se)=>{if(U.inputIndices.includes(se)){let B=Y.symbolToIndices.get(D);if(B===void 0)throw new Error("Invalid symbol error");B.forEach(te=>{g.push(`${s[se].indicesSet(`input${se}Indices`,te,c.indicesGet("outputIndices",V))}`)})}})}else r.lhs.forEach((V,Y)=>{if(U.inputIndices.includes(Y)){let se=V.symbolToIndices.get(D);if(se===void 0)throw new Error("Invalid symbol error");se.forEach(B=>{x.push(`${s[Y].indicesSet(`input${Y}Indices`,B,`${D}`)}`)}),S.push(`prod *= ${s[Y].getByIndices(`input${Y}Indices`)};`)}}),T.push(`for(var ${D}: u32 = 0; ${D} < uniforms.${Nu(D)}; ${D}++) {`),C.push("}")});let O=E?[...g,`let sum = ${s.map((U,D)=>U.getByIndices(`input${D}Indices`)).join(" * ")};`]:[...g,w,...T,...x,b,...S,$,...C];return`
            ${l.registerUniforms(p.map(U=>({name:`${Nu(U)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...s,c)}

            ${l.mainStart()}
            ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${c.offsetToIndices("global_idx")};
            ${s.map((U,D)=>`var input${D}Indices: ${s[D].type.indices};`).join(`
`)}
            ${O.join(`
`)};
            ${c.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let l=p.filter(b=>r.symbolToInfo.has(b)).map(b=>({type:"uint32",data:r.symbolToInfo.get(b)?.dimValue||0}));l.push({type:"uint32",data:o});let g=e.map((b,w)=>[...L(b)]).reduce((b,w)=>b.concat(w),l);return g.push(...L(a)),{outputs:[{dims:a,dataType:t}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:g}},getShaderSource:m}},Vu=(e,t)=>{let r=new li(e.inputs,t.equation),a=r.outputDims,i=e.inputs.map((s,o)=>s.dims);e.compute(gp(i,e.inputs[0].dataType,r,a))},Hu=e=>{let t=e.equation.replace(/\s+/g,"");return xe({equation:t})}});var yp,Gu,bp,vp,Fu,qu=Q(()=>{"use strict";ze();Ce();_e();yp=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),a=r.length<t.length?0:r.length-t.length,i=t.length<r.length?0:t.length-r.length;for(;a<r.length&&i<t.length;++a,++i)if(r[a]!==t[i]&&r[a]!==1&&t[i]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Gu=(e,t)=>{let r=e.length-t.length,a=[];for(let i=0;i<r;++i)a.push(e[i]);for(let i=0;i<t.length;++i)a.push(t[i]===1?e[i+r]:t[i]);return a},bp=(e,t)=>e.length>t.length?Gu(e,t):Gu(t,e),vp=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),a=bp(t,r),i=e[0].dataType,s=i===9?4:1,o=Math.ceil(N.size(a)/s),c=m=>{let l=W("input",i,t.length,s),g=J("output",i,a.length,s),b;if(i===9){let w=($,x,T="")=>`
          let outputIndices${x} = ${g.offsetToIndices(`outputOffset + ${x}u`)};
          let offset${x} = ${l.broadcastedIndicesToOffset(`outputIndices${x}`,g)};
          let index${x} = offset${x} / 4u;
          let component${x} = offset${x} % 4u;
          ${$}[${x}] = ${T}(${l.getByOffset(`index${x}`)}[component${x}]);
        `;b=`
        let outputOffset = global_idx * ${s};
        var data = vec4<u32>(0);
        ${w("data",0,"u32")}
        ${w("data",1,"u32")}
        ${w("data",2,"u32")}
        ${w("data",3,"u32")}
        ${g.setByOffset("global_idx","data")}
      }`}else b=`
        let outputIndices = ${g.offsetToIndices("global_idx")};
        let inputOffset = ${l.broadcastedIndicesToOffset("outputIndices",g)};
        ${g.setByOffset("global_idx",l.getByOffset("inputOffset"))}
      }`;return`
    ${m.registerUniform("vec_size","u32").declareVariables(l,g)}
    ${m.mainStart()}
    ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${b}`},p=[{type:"uint32",data:o},...L(t),...L(a)];return{name:"Expand",shaderCache:{hint:`${a.length}`,inputDependencies:["rank"]},getShaderSource:c,getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:p})}},Fu=e=>{yp(e.inputs),e.compute(vp(e.inputs),{inputs:[0]})}});var wp,$p,ju,Ku,Yu=Q(()=>{"use strict";ze();Ce();Xe();_e();wp=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},$p=(e,t)=>{let r=e[0].dims,a=e[1].dims,i=r.length,s=N.normalizeAxis(t.axis,i),o=r.slice(0);o.splice(s,1,...a);let c=r[s],p=e[0].dataType===9?4:1,m=Math.ceil(N.size(o)/p),l=[{type:"uint32",data:m},{type:"int32",data:c},{type:"uint32",data:s},...L(e[0].dims),...L(e[1].dims),...L(o)],g=b=>{let w=W("data",e[0].dataType,e[0].dims.length,p),$=W("inputIndices",e[1].dataType,e[1].dims.length),x=J("output",e[0].dataType,o.length,p),T=S=>{let E=a.length,O=`var indicesIndices${S}  = ${$.type.indices}(0);`;for(let U=0;U<E;U++)O+=`${E>1?`indicesIndices${S}[${U}]`:`indicesIndices${S}`} = ${o.length>1?`outputIndices${S}[uniforms.axis + ${U}]`:`outputIndices${S}`};`;O+=`
          var idx${S} = ${$.getByIndices(`indicesIndices${S}`)};
          if (idx${S} < 0) {
            idx${S} = idx${S} + uniforms.axisDimLimit;
          }
          var dataIndices${S} = ${w.type.indices}(0);
        `;for(let U=0,D=0;U<i;U++)U===s?(O+=`${i>1?`dataIndices${S}[${U}]`:`dataIndices${S}`} = u32(idx${S});`,D+=E):(O+=`${i>1?`dataIndices${S}[${U}]`:`dataIndices${S}`} = ${o.length>1?`outputIndices${S}[${D}]`:`outputIndices${S}`};`,D++);return O},C;if(e[0].dataType===9){let S=(E,O,U="")=>`
          let outputIndices${O} = ${x.offsetToIndices(`outputOffset + ${O}u`)};
          ${T(O)};
          let offset${O} = ${w.indicesToOffset(`dataIndices${O}`)};
          let index${O} = offset${O} / 4u;
          let component${O} = offset${O} % 4u;
          ${E}[${O}] = ${U}(${w.getByOffset(`index${O}`)}[component${O}]);
        `;C=`
        let outputOffset = global_idx * ${p};
        var value = vec4<u32>(0);
        ${S("value",0,"u32")}
        ${S("value",1,"u32")}
        ${S("value",2,"u32")}
        ${S("value",3,"u32")}
        ${x.setByOffset("global_idx","value")}
      `}else C=`
      let outputIndices = ${x.offsetToIndices("global_idx")};
      ${T("")};
      let value = ${w.getByIndices("dataIndices")};
      ${x.setByOffset("global_idx","value")};
      `;return`
      ${b.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(w,$,x)}
      ${b.mainStart()}
        ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${C}
      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:l}),getShaderSource:g}},ju=e=>xe({axis:e.axis}),Ku=(e,t)=>{let r=e.inputs;wp(r),e.compute($p(e.inputs,t))}});var _p,Sp,Zu,Xu,Qu=Q(()=>{"use strict";Ce();Xe();_e();_p=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},Sp=(e,t)=>{let r=e[0].dims,a=e[0].dataType,i=r.length,s=e[1].dims,o=e[1].dataType,c=N.normalizeAxis(t.axis,i),p=r[c],m=s.slice(0),l=N.size(m),g=W("input",a,i),b=W("indicesInput",o,s.length),w=J("output",a,m.length),$=[{type:"uint32",data:l},{type:"int32",data:p},{type:"uint32",data:c}];return $.push(...L(r)),$.push(...L(s)),$.push(...L(m)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:m,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:$}),getShaderSource:C=>`
      ${C.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(g,b,w)}
      ${C.mainStart()}
      ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${w.offsetToIndices("global_idx")};

      var idx = ${b.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${g.type.indices}(outputIndices);
      ${g.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${g.getByIndices("inputIndices")};

      ${w.setByOffset("global_idx","value")};
  }`}},Zu=e=>xe({axis:e.axis}),Xu=(e,t)=>{let r=e.inputs;_p(r),e.compute(Sp(e.inputs,t))}});var xp,Cp,Ju,el,tl=Q(()=>{"use strict";Ce();_e();xp=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Cp=(e,t)=>{let r=e[0].dims.slice(),a=e[1].dims.slice(),[i,s,o]=Ln.getShapeOfGemmResult(r,t.transA,a,t.transB,e.length===3?e[2].dims:void 0),c=[i,s];if(!c)throw new Error("Can't use gemm on the given tensors");let p=N.size(c),m=[{type:"uint32",data:p},{type:"uint32",data:i},{type:"uint32",data:s},{type:"uint32",data:o},{type:"float32",data:t.alpha},{type:"float32",data:t.beta}],l=["type","type"];e.length===3&&(m.push(...L(e[2].dims)),l.push("rank")),m.push(...L(c));let g=b=>{let w="";t.transA&&t.transB?w="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?w="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?w="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(w="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let $=t.alpha===1?"":"value *= uniforms.alpha;",x=W("a",e[0].dataType,e[0].dims),T=W("b",e[1].dataType,e[1].dims),C=x.type.value,S=null,E=[x,T];e.length===3&&(S=W("c",e[2].dataType,e[2].dims.length),E.push(S));let O=J("output",e[0].dataType,c.length);E.push(O);let U=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${b.registerUniforms(U).declareVariables(...E)}

  ${b.mainStart()}
    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${C}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${w}
    }

    ${$}
    ${(()=>S!=null?`let cOffset = ${S.broadcastedIndicesToOffset("vec2(m, n)",O)}; value += ${C}(uniforms.beta) * ${S.getByOffset("cOffset")};`:"")()}
    output[global_idx] = value;
  }`};return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:m}),getShaderSource:g}},Ju=e=>{let t=e.transA,r=e.transB,a=e.alpha,i=e.beta;return{transA:t,transB:r,alpha:a,beta:i,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},el=(e,t)=>{xp(e.inputs),e.compute(Cp(e.inputs,t))}});var Ip,Ap,Tp,rl,nl=Q(()=>{"use strict";ze();Ce();_e();Ip=(e,t)=>{let r=e[0].dims,a=r,i=2,s=N.sizeToDimension(r,i),o=N.sizeFromDimension(r,i),c=Le(o),p=o/c,m=[r[0],r[1],p],l=["rank","type","type"],g=[{type:"uint32",data:o},{type:"uint32",data:p}];g.push(...L(m),...L(m));let b=w=>{let $=W("x",e[0].dataType,m.length,c),x=W("scale",e[1].dataType,e[1].dims),T=W("bias",e[2].dataType,e[2].dims),C=J("output",e[0].dataType,m.length,c),S=[$,x,T,C],E=$.type.value,O=c===1?"f32":`vec${c}<f32>`,U=64,D=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`
  var<workgroup> meanShared : f32;
  var<workgroup> squaredNormShared : f32;
  var<workgroup> workgroupShared : array<${O}, ${U}>;
  const workgroupSize = ${U}u;
  ${w.registerUniforms(D).declareVariables(...S)}
  ${w.mainStart(U)}
    let norm = global_idx / workgroupSize;
    let batch = norm / uniforms.x_shape[1];
    let channel = norm % uniforms.x_shape[1];
    let localIndex = local_id.x;

    // initialize workgroup memory
    var initial = ${O}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      initial = initial + ${O}(${$.get("batch","channel","h")});
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the mean of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      meanShared = ${ct("workgroupShared[0]",c)} / f32(uniforms.normSize);
    }
    workgroupBarrier();

    // reinitialize workgroup memory.
    initial = ${O}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let deviation =  ${O}(${$.get("batch","channel","h")}) - ${O}(meanShared);
      initial = initial + deviation * deviation;
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the sum of square of deviation of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      squaredNormShared = ${ct("workgroupShared[0]",c)};
    }
    workgroupBarrier();

    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${t.epsilon}));
    let channelScale = invStdDev * f32(${x.getByOffset("channel")});
    let channelShift = f32(${T.getByOffset("channel")}) - meanShared * channelScale;
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let value = ${$.get("batch","channel","h")} * ${E}(${O}(channelScale)) + ${E}(${O}(channelShift));
      ${C.set("batch","channel","h","value")};
    }
  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${t.epsilon};${c}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:s},programUniforms:g}),getShaderSource:b}},Ap=(e,t,r,a,i,s,o,c)=>{let p=Le(o),m=64,l=p===1?"vec2f":`mat2x${p}f`,g=p===1?"f32":`vec${p}f`,b=(D,V)=>`${l}(${D}, ${V})`,w=i*o/p,$=Math.ceil(s/m),x=["type"],T=[{type:"uint32",data:$},{type:"uint32",data:s},{type:"uint32",data:Math.floor(o/p)},{type:"uint32",data:Math.floor(s*o/p)}],C=D=>{let V=W("input",t.dataType,t.dims,p);return`
  ${D.declareVariables(V)}
  @group(0) @binding(1) var<storage, read_write> output : array<${l}>;
  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};
  @group(0) @binding(2) var<uniform> uniforms: Uniforms;

  ${D.mainStart(m)}
    let currentImageNumber = global_idx / ${m} / uniforms.C;
    let currentChannelNumber = (global_idx / ${m}) % uniforms.C;
    let wgId = global_idx % ${m};
    let wgOffset = wgId * uniforms.wg_size;
    if (wgOffset >= uniforms.H) {
        return;
    }
    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);

    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;
    var sum = ${Qe("f32",p)};
    var squaredSum = ${Qe("f32",p)};
    for (var i: u32 = wgOffset; i < wgMax; i++) {
        let value = ${g}(input[offset + i * uniforms.C]);
        sum += value;
        squaredSum += value * value;
    }
    output[global_idx] = ${b("sum","squaredSum")};
  }`},S=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${p}`,inputDependencies:x},getRunData:()=>({outputs:[{dims:[i,o,m,2],dataType:1}],dispatchGroup:{x:i*o/p},programUniforms:T}),getShaderSource:C},{inputs:[t],outputs:[-1]})[0],E=[{type:"uint32",data:w},{type:"uint32",data:s},{type:"uint32",data:Math.floor(o/p)},{type:"uint32",data:Math.floor(m*o/p)}],O=["type","type","type"],U=D=>{let V=W("scale",r.dataType,r.dims,p),Y=W("bias",a.dataType,a.dims,p);return`
  @group(0) @binding(0) var<storage, read> input : array<${l}>;
  @group(0) @binding(1) var<storage, read> scale : array<${V.type.storage}>;
  @group(0) @binding(2) var<storage, read> bias : array<${Y.type.storage}>;
  @group(0) @binding(3) var<storage, read_write> output : array<${l}>;
  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};
  @group(0) @binding(4) var<uniform> uniforms: Uniforms;

  ${D.mainStart()}
    ${D.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}
    let currentImageNumber = global_idx / uniforms.C;
    let currentChannelNumber = global_idx % uniforms.C;

    let offset = currentImageNumber * uniforms.image_size;
    var sum = ${Qe("f32",p)};
    var squaredSum = ${Qe("f32",p)};
    for (var i: u32 = 0; i < ${m}; i++) {
        let value = input[offset + i + currentChannelNumber * ${m}];
        sum += value[0];
        squaredSum += value[1];
    }
    sum = sum / f32(uniforms.H);
    squaredSum = squaredSum / f32(uniforms.H);
    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${c}));
    let channelScale = invStdDev * ${g}(scale[currentChannelNumber]);
    let channelShift = ${g}(bias[currentChannelNumber]) - sum * channelScale;

    output[global_idx] = ${b("channelScale","channelShift")};
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${p};${c}`,inputDependencies:O},getRunData:()=>({outputs:[{dims:[i,o,2],dataType:1}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:E}),getShaderSource:U},{inputs:[S,r,a],outputs:[-1]})[0]},Tp=(e,t,r)=>{let a=t[0].dims,i=a,s=a[0],o=a[a.length-1],c=N.sizeFromDimension(a,1)/o,p=Le(o),m=N.size(i)/p,l=[{type:"uint32",data:c},{type:"uint32",data:Math.floor(o/p)}],g=["type","type"],b=Ap(e,t[0],t[1],t[2],s,c,o,r.epsilon),w=$=>{let x=He(t[0].dataType),T=p===1?"vec2f":`mat2x${p}f`,C=p===1?x:`vec${p}<${x}>`,S=W("input",t[0].dataType,t[0].dims,p),E=J("output",t[0].dataType,i,p);return`
  @group(0) @binding(0) var<storage, read> input : array<${S.type.storage}>;
  @group(0) @binding(1) var<storage, read> scaleInput : array<${T}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${E.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${$.mainStart()}
    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);
    let currentChannelNumber = global_idx % uniforms.C;

    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;
    let scale = scaleInput[scaleOffset];
    output[global_idx] = fma(input[global_idx], ${C}(scale[0]), ${C}(scale[1]));
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${p}`,inputDependencies:g},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:l}),getShaderSource:w},{inputs:[t[0],b]})},rl=(e,t)=>{t.format==="NHWC"?Tp(e,e.inputs,t):e.compute(Ip(e.inputs,t))}});var Ep,Op,al,il=Q(()=>{"use strict";ze();Ce();_e();Ep=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Op=(e,t,r)=>{let a=e[0].dims,i=e[1],s=e[2],o=a,c=N.normalizeAxis(t.axis,a.length),p=N.sizeToDimension(a,c),m=N.sizeFromDimension(a,c),l=N.size(i.dims),g=s?N.size(s.dims):0;if(l!==m||s&&g!==m)throw new Error(`Size of X.shape()[axis:] == ${m}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${l} and bias size of ${g}`);let b=[];for(let O=0;O<a.length;++O)O<c?b.push(a[O]):b.push(1);let w=Le(m),$=["type","type"],x=[{type:"uint32",data:p},{type:"float32",data:m},{type:"uint32",data:Math.floor(m/w)},{type:"float32",data:t.epsilon}];s&&$.push("type");let T=r>1,C=r>2,S=O=>{let U=He(e[0].dataType),D=[W("x",e[0].dataType,e[0].dims,w),W("scale",i.dataType,i.dims,w)];s&&D.push(W("bias",s.dataType,s.dims,w)),D.push(J("output",e[0].dataType,o,w)),T&&D.push(J("mean_data_output",1,b)),C&&D.push(J("inv_std_output",1,b));let V=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${O.registerUniforms(V).declareVariables(...D)}
  ${O.mainStart()}
    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var meanVector = ${Qe("f32",w)};
    var meanSquareVector = ${Qe("f32",w)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${St(U,w,"x[h + offset]")};
      meanVector += value;
      meanSquareVector += value * value;
    }
    let mean = ${ct("meanVector",w)} / uniforms.norm_size;
    let invStdDev =
        inverseSqrt(${ct("meanSquareVector",w)} / uniforms.norm_size - mean * mean + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${St(U,w,"x[j + offset]")};
      let f32scale = ${St(U,w,"scale[j]")};
      output[j + offset] = ${D[0].type.value}((f32input - mean) * invStdDev * f32scale
        ${s?`+ ${St(U,w,"bias[j]")}`:""}
      );
    }

    ${T?"mean_data_output[global_idx] = mean":""};
    ${C?"inv_std_output[global_idx] = invStdDev":""};
  }`},E=[{dims:o,dataType:e[0].dataType}];return T&&E.push({dims:b,dataType:1}),C&&E.push({dims:b,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${w};${r}`,inputDependencies:$},getRunData:()=>({outputs:E,dispatchGroup:{x:Math.ceil(p/64)},programUniforms:x}),getShaderSource:S}},al=(e,t)=>{Ep(e.inputs),e.compute(Op(e.inputs,t,e.outputCount))}});var kp,sl,ol,Pp,di,ul,ll=Q(()=>{"use strict";Ce();Xe();Vn();Za();_e();$r();kp=(e,t)=>{let r=e[0],a=e[1],i=e[2],s=e[3],o=e[4],c=e[5],p=e[6],m=e[7];if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let l=!1,g=r.dims[0],b=r.dims[1],w=r.dims.length===3?l?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],$=b,x=0,T=0,C=Math.floor(w/t.numHeads);if(p&&m){if(p.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(m.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');x=p.dims[2],T=p.dims[2]}else if(p||m)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let S;if(a){if(r.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(a.dims.length<3||a.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==a.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(a.dims.length===3){if(a.dims[2]!==r.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');S=2,$=a.dims[1]}else if(a.dims.length===5){if(a.dims[2]!==t.numHeads||a.dims[3]!==2||a.dims[4]!==C)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect "value" be none when "key" has packed kv format.');S=5,$=a.dims[1]}else{if(a.dims[1]!==t.numHeads||a.dims[3]!==C)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');S=0,$=a.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');S=3}if(s){if(s.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(i&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let E=0;if(o){E=8;let Y=o.dims;throw Y.length===1?Y[0]===g?E=1:Y[0]===3*g+2&&(E=3):Y.length===2&&Y[0]===g&&Y[1]===$&&(E=5),E===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)'):new Error("Mask not supported")}let O=!1,U=w;if(i){if(i.dims.length!==3&&i.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(r.dims[0]!==i.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(i.dims.length===3){if($!==i.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');U=i.dims[2]}else{if($!==i.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');U=i.dims[1]*i.dims[3],O=!0}}let D=x+$,V=!1;if(o)throw new Error("Key padding mask is not supported");if(c)throw new Error("extraAddQk is not supported");if(p)throw new Error("pastKey is not supported");if(m)throw new Error("pastValue is not supported");return{batchSize:g,sequenceLength:b,pastSequenceLength:x,kvSequenceLength:$,totalSequenceLength:D,maxSequenceLength:T,inputHiddenSize:0,hiddenSize:w,vHiddenSize:U,headSize:C,vHeadSize:Math.floor(U/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:E,scale:t.scale,broadcastResPosBias:V,passPastInKv:O,qkvFormat:S}},sl=e=>xe({...e}),ol=xe({perm:[0,2,1,3]}),Pp=(e,t,r,a,i,s,o)=>{let c=[a,i,s],p=N.size(c),m=[{type:"uint32",data:p},{type:"uint32",data:o},{type:"uint32",data:s}],l=g=>{let b=J("qkv_with_bias",t.dataType,c),w=W("qkv",t.dataType,c),$=W("bias",r.dataType,c),x=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${g.registerUniforms(x).declareVariables(w,$,b)}
  ${g.mainStart()}
    ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:c,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:m}),getShaderSource:l},{inputs:[t,r],outputs:[-1]})[0]},di=(e,t,r,a,i,s,o,c)=>{let p=s;if(o){if(a===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return p=Pp(e,s,o,t,a,r*i,c),p=p.reshape([t,a,r,i]),e.compute(xt(p,ol.perm),{inputs:[p],outputs:[-1]})[0]}else return s.dims.length===3&&(p=s.reshape([t,a,r,i])),e.compute(xt(p,ol.perm),{inputs:[p],outputs:[-1]})[0]},ul=(e,t)=>{let r=kp(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let a=e.inputs[1]&&e.inputs[2]&&e.inputs[1].dims.length===4&&e.inputs[2].dims.length===4,i=di(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,e.inputs[0],e.inputs[3],0);if(a)return Yn(e,i,e.inputs[1],e.inputs[2],e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t);let s=di(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,e.inputs[1],e.inputs[3],r.hiddenSize),o=di(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,e.inputs[2],e.inputs[3],2*r.hiddenSize);Yn(e,i,s,o,e.inputs[4],void 0,e.inputs[6],e.inputs[7],e.inputs[5],r,t)}});var Rp,Bp,Mp,Dp,zp,Up,Wp,Np,dl,cl=Q(()=>{"use strict";ze();Ce();_e();Rp=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Bp=(e,t,r)=>{let a="";for(let i=t-1;i>=0;--i)a+=`
            k = i32(${e.indicesGet("indices",i)}) - ${ce("uniforms.pads",i,r)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${ce("uniforms.x_shape",i,t)})) {
              break;
            }
            offset += k * i32(${ce("uniforms.x_strides",i,t)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${a}
            value = x[offset];
          }
      `},Mp=(e,t,r)=>{let a="";for(let i=t-1;i>=0;--i)a+=`
                k = i32(${e.indicesGet("indices",i)}) - ${ce("uniforms.pads",i,r)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${ce("uniforms.x_shape",i,t)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${ce("uniforms.x_shape",i,t)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${ce("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${a}
              value = x[offset];
          `},Dp=(e,t,r)=>{let a="";for(let i=t-1;i>=0;--i)a+=`
                k = i32(${e.indicesGet("indices",i)}) - ${ce("uniforms.pads",i,r)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${ce("uniforms.x_shape",i,t)})) {
                  k = i32(${ce("uniforms.x_shape",i,t)}) - 1;
                }
                offset += k * i32(${ce("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${a}
              value = x[offset];
          `},zp=(e,t,r)=>{let a="";for(let i=t-1;i>=0;--i)a+=`
                k = i32(${e.indicesGet("indices",i)}) - ${ce("uniforms.pads",i,r)};
                if (k < 0)  {
                  k += i32(${ce("uniforms.x_shape",i,t)}]);
                }
                if (k >= i32(${ce("uniforms.x_shape",i,t)})) {
                  k -= i32(${ce("uniforms.x_shape",i,t)});
                }
                offset += k * i32(${ce("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${a}
              value = x[offset];
          `},Up=(e,t,r)=>{switch(r.mode){case 0:return Bp(e,t,r.pads.length);case 1:return Mp(e,t,r.pads.length);case 2:return Dp(e,t,r.pads.length);case 3:return zp(e,t,r.pads.length);default:throw new Error("Invalid mode")}},Wp=(e,t)=>{let r=N.padShape(e[0].dims.slice(),t.pads),a=e[0].dims,s=[{type:"uint32",data:N.size(r)},{type:"uint32",data:t.pads}];if(t.mode===0){let p=dt(e[0].dataType);s.push({type:p,data:t.value})}s.push(...L(e[0].dims),...L(r));let o=["rank"],c=p=>{let m=J("output",e[0].dataType,r.length),l=W("x",e[0].dataType,a.length),g=l.type.value,b=Up(m,a.length,t),w=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&w.push({name:"constant_value",type:g}),`
            ${p.registerUniforms(w).declareVariables(l,m)}
            ${p.mainStart()}
            ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${m.offsetToIndices("global_idx")};

            var value = ${g}(0);
            ${b}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}`,inputDependencies:o},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(N.size(r)/64)},programUniforms:s}),getShaderSource:c}},Np=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),a=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,i=e[0].dims.length,s=new Int32Array(2*i).fill(0);if(e.length>=4){let c=e[3].getBigInt64Array();for(let p=0;p<c.length;p++)s[Number(c[p])]=Number(r[p]),s[Number(c[p])+i]=Number(r[p+c.length])}else r.forEach((c,p)=>s[Number(p)]=Number(c));let o=[];return s.forEach(c=>o.push(c)),{mode:t.mode,value:a,pads:o}}else return t},dl=(e,t)=>{Rp(e.inputs);let r=Np(e.inputs,t);e.compute(Wp(e.inputs,r),{inputs:[0]})}});var aa,pl,fl,ml,hl,Vp,Hp,gl,yl,bl,vl,wl,$l,_l,Sl,xl,Cl,Il,Al,Tl=Q(()=>{"use strict";bt();Ce();_e();aa=e=>{if(Ae.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},pl=(e,t,r)=>{let a=t.format==="NHWC",i=e.dims.slice();a&&i.splice(1,0,i.pop());let s=Object.hasOwnProperty.call(t,"dilations"),o=t.kernelShape.slice(),c=t.strides.slice(),p=s?t.dilations.slice():[],m=t.pads.slice();ir.adjustPoolAttributes(r,i,o,c,p,m);let l=ir.computePoolOutputShape(r,i,c,p,o,m,t.autoPad),g=Object.assign({},t);s?Object.assign(g,{kernelShape:o,strides:c,pads:m,dilations:p,cacheKey:t.cacheKey}):Object.assign(g,{kernelShape:o,strides:c,pads:m,cacheKey:t.cacheKey});let b=l.slice();return b.push(b.splice(1,1)[0]),[g,a?b:l]},fl=(e,t)=>{let r=t.format==="NHWC",a=N.size(e),i=N.size(t.kernelShape),s=[{type:"uint32",data:a},{type:"uint32",data:i}],o=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let c=t.kernelShape[t.kernelShape.length-1],p=t.strides[t.strides.length-1],m=t.pads[t.pads.length/2-1],l=t.pads[t.pads.length-1],g=!!(m+l);s.push({type:"uint32",data:c},{type:"uint32",data:p},{type:"uint32",data:m},{type:"uint32",data:l}),o.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let b=!1;if(t.kernelShape.length===2){let w=t.kernelShape[t.kernelShape.length-2],$=t.strides[t.strides.length-2],x=t.pads[t.pads.length/2-2],T=t.pads[t.pads.length-2];b=!!(x+T),s.push({type:"uint32",data:w},{type:"uint32",data:$},{type:"uint32",data:x},{type:"uint32",data:T}),o.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[s,o,!0,g,b]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let c=N.computeStrides(t.kernelShape);s.push({type:"uint32",data:c},{type:"uint32",data:t.pads},{type:"uint32",data:t.strides}),o.push({name:"kernelStrides",type:"u32",length:c.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let p=t.pads.reduce((m,l)=>m+l);return[s,o,!!p,!1,!1]}},ml=(e,t,r,a,i,s,o,c,p,m,l,g)=>{let b=i.format==="NHWC",w=t.type.value,$=J("output",t.type.tensor,a);if(i.kernelShape.length<=2){let x="",T="",C="",S=r-(b?2:1);if(l?x=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${S}] = indices[${S}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${S}] < 0 || xIndices[${S}]
                      >= uniforms.x_shape[${S}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${s}
                }`:x=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${S}] = indices[${S}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${s}
                }`,i.kernelShape.length===2){let O=r-(b?3:2);g?T=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${O}] = indices[${O}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${O}] < 0 || xIndices[${O}] >= uniforms.x_shape[${O}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:T=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${O}] = indices[${O}] * uniforms.sh - uniforms.phStart + j;
                `,C=`
              }
            `}return`
            ${e.registerUniforms(p).declareVariables(t,$)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${$.offsetToIndices("global_idx")};
              var xIndices = ${$.offsetToIndices("global_idx")};

              var value = ${w}(${c});
              var pad = 0;
              ${T}
              ${x}
              ${C}
              ${o}

              output[global_idx] = value;
            }`}else{if(b)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let x=i.kernelShape.length,T=i.pads.length,C="";return m?C=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${t.indicesToOffset("xIndices")}];
                ${s}
              }`:C=`
              }
              let x_val = x[${t.indicesToOffset("xIndices")}];
              ${s}
            `,`
            ${e.registerUniforms(p).declareVariables(t,$)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${$.offsetToIndices("global_idx")};
              var xIndices = ${$.offsetToIndices("global_idx")};

              var offsets: array<u32, ${x}>;

              var value = ${w}(${c});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${x-1}u; j++) {
                  offsets[j] = offset / ${ce("uniforms.kernelStrides","j",x)};
                  offset -= offsets[j] * ${ce("uniforms.kernelStrides","j",x)};
                }
                offsets[${x-1}] = offset;

                isPad = false;
                for (var j = ${r-x}u; j < ${r}u; j++) {
                  xIndices[j] = indices[j] * ${ce("uniforms.strides",`j - ${r-x}u`,x)}
                    + offsets[j - ${r-x}u] - ${ce("uniforms.pads","j - 2u",T)};
                  ${C}
              }
              ${o}

              output[global_idx] = value;
            }`}},hl=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Vp=e=>`${hl(e)};${e.countIncludePad}`,Hp=e=>`${hl(e)};${e.storageOrder};${e.dilations}`,gl=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),yl=(e,t,r,a)=>{let[i,s]=pl(t,a,r),o=W("x",t.dataType,t.dims.length),c=o.type.value,p="value += x_val;",m="";i.countIncludePad?m+=`value /= ${c}(uniforms.kernelSize);`:m+=`value /= ${c}(i32(uniforms.kernelSize) - pad);`;let[l,g,b,w,$]=fl(s,i);l.push(...L(t.dims),...L(s));let x=["rank"];return{name:e,shaderCache:{hint:`${a.cacheKey};${b};${w};${$}`,inputDependencies:x},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(N.size(s)/64)},programUniforms:l}),getShaderSource:T=>ml(T,o,t.dims.length,s.length,i,p,m,0,g,b,w,$)}},bl=e=>{let t=e.count_include_pad!==0,r=gl(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let a={countIncludePad:t,...r,cacheKey:""};return{...a,cacheKey:Vp(a)}},vl=(e,t)=>{aa(e.inputs),e.compute(yl("AveragePool",e.inputs[0],!1,t))},wl={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},$l=e=>{let t=e.format;return{format:t,...wl,cacheKey:t}},_l=(e,t)=>{aa(e.inputs),e.compute(yl("GlobalAveragePool",e.inputs[0],!0,t))},Sl=(e,t,r,a)=>{let[i,s]=pl(t,a,r),o=`
      value = max(x_val, value);
    `,c="",p=W("x",t.dataType,t.dims.length),m=["rank"],[l,g,b,w,$]=fl(s,i);return l.push(...L(t.dims),...L(s)),{name:e,shaderCache:{hint:`${a.cacheKey};${b};${w};${$}`,inputDependencies:m},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(N.size(s)/64)},programUniforms:l}),getShaderSource:x=>ml(x,p,t.dims.length,s.length,i,o,c,-1e5,g,b,w,$)}},xl=(e,t)=>{aa(e.inputs),e.compute(Sl("MaxPool",e.inputs[0],!1,t))},Cl=e=>{let t=e.storage_order,r=e.dilations,a=gl(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(a.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let i={storageOrder:t,dilations:r,...a,cacheKey:""};return{...i,cacheKey:Hp(i)}},Il=e=>{let t=e.format;return{format:t,...wl,cacheKey:t}},Al=(e,t)=>{aa(e.inputs),e.compute(Sl("GlobalMaxPool",e.inputs[0],!0,t))}});var Gp,Fp,El,Ol=Q(()=>{"use strict";bt();ze();_e();Gp=(e,t,r)=>{let a=e===t,i=e<t&&r<0,s=e>t&&r>0;if(a||i||s)throw new Error("Range these inputs' contents are invalid.")},Fp=(e,t,r,a)=>{let i=Math.abs(Math.ceil((t-e)/r)),s=[i],o=i,c=dt(a),p=[{type:"uint32",data:o},{type:c,data:e},{type:c,data:r},...L(s)],m=l=>{let g=J("output",a,s.length),b=g.type.value,w=[{name:"outputSize",type:"u32"},{name:"start",type:b},{name:"delta",type:b}];return`
        ${l.registerUniforms(w).declareVariables(g)}
        ${l.mainStart()}
        ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${b}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${a}`},getShaderSource:m,getRunData:()=>({outputs:[{dims:s,dataType:a}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:p})}},El=e=>{let t=0,r=0,a=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],a=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],a=e.inputs[2].getFloat32Array()[0]),Ae.webgpu.validateInputContent&&Gp(t,r,a),e.compute(Fp(t,r,a,e.inputs[0].dataType),{inputs:[]})}});var qp,jp,Kp,Yp,Zp,Xp,Qp,Jp,ef,tf,rf,kl,nf,af,of,sf,uf,Pl,Rl,Bl=Q(()=>{"use strict";Ce();Xe();_e();qp=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},jp=(e,t,r)=>{t.every(i=>i>=0&&i<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let a=new Array(r).fill(1);return t.forEach((i,s)=>a[i]=e[s]),a},Kp=(e,t,r,a,i,s)=>{let[o,c,p]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],m=e[0].dims.length;if(o>0&&e.length>o&&e[o].dims.length>0)e[o].getFloat32Array().forEach(l=>s.push(l));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(c>0&&e.length>c&&e[c].dims.length>0){if(e[c].getFloat32Array().forEach(l=>a.push(l)),a.length!==0&&a.length!==m&&r>=18&&a.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");qp(a,t),t.axes.length>0&&jp(a,t.axes,m).forEach((l,g)=>a[g]=l)}if(p>0&&e.length>p&&(e[p].getBigInt64Array().forEach(l=>i.push(Number(l))),i.length!==m||r>=18&&i.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(a.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(i.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof a<"u"&&typeof i<"u"&&a.length>0&&i.length>m)throw new Error("Resize requires only of scales or sizes to be specified")},Yp=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +
                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /
                        ${t}(lengthResized - 1);
                  } else {
                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);
                  const adjustment = ${t}(lengthResized) / outputWidth;
                  const center = ${t}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Zp=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Xp=(e,t,r)=>{let a=new Array(r).fill(0).concat(new Array(r).fill(1)),i=e.length===0?a:e.slice();return t.length>0?(t.forEach((s,o)=>{a[s]=i[o],a[o+r]=i[t.length+o]}),a):i},Qp=(e,t,r,a)=>{let i=[];if(r.length>0)if(a.length>0){if(e.forEach(s=>i.push(s)),Math.max(...a)>e.length)throw new Error("axes is out of bound");a.forEach((s,o)=>i[s]=r[o])}else r.forEach(s=>i.push(s));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");i=e.map((s,o)=>Math.round(s*t[o]))}return i},Jp=(e,t,r)=>{let a=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(s=>t[s]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(s=>t[s]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let i=e.slice();return r.axes.length>0?(r.axes.forEach(s=>t[s]=a),r.axes.forEach(s=>i[s]=Math.round(e[s]*t[s]))):(t.fill(a,0,t.length),i.forEach((s,o)=>i[o]=Math.round(s*t[o]))),i},ef=(e,t,r,a,i)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {
      var original_indices: array<${e.type.value}, ${r.length}>;
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${ce("uniforms.scales","i",a)};
        var roi_low = ${ce("uniforms.roi","i",i)};
        var roi_hi = ${ce("uniforms.roi",`i + ${t.length}`,i)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${ce("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${ce("uniforms.output_shape","i",r.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,tf=(e,t,r,a,i,s,o)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${a.length}; i++) {
        var output_index = ${t.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${ce("uniforms.scales","i",i)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${ce("uniforms.roi","i",s)};
          var roi_hi = ${ce("uniforms.roi",`i + ${r.length}`,s)};
          var input_shape_i = ${ce("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${ce("uniforms.output_shape","i",a.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${o} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,rf=(e,t)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${ce("uniforms.input_shape","i",t.length)}) {
          return false;
        }
      }
      return true;
    }`,kl=(e,t,r,a)=>e.rank>a?`
    ${e.indicesSet("input_indices",t,"channel")};
    ${e.indicesSet("input_indices",r,"batch")};
`:"",nf=(e,t,r,a,i)=>{let[o,c,p,m]=r.length===2?[-1,0,1,-1]:[0,2,3,1],l=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${l} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",c,`max(0, min(row, ${r[c]} - 1))`)};
      ${e.indicesSet("input_indices",p,`max(0, min(col, ${r[p]} - 1))`)};
      ${kl(e,m,o,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${l} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${l} = originalIndices[${c}];
      var col:${l} = originalIndices[${p}];
      ${a?`if (row < 0 || row > (${r[c]} - 1) || col < 0 || col > (${r[p]} - 1)) {
        return ${i};
      }`:""};
      row = max(0, min(row, ${r[c]} - 1));
      col = max(0, min(col, ${r[p]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${r.length>2?`u32(originalIndices[${m}])`:"0"};
      var batch: u32 =  ${r.length>2?`u32(originalIndices[${o}])`:"0"};
      var x11: ${l} = getInputValue(batch, channel, row1, col1);
      var x12: ${l} = getInputValue(batch, channel, row1, col2);
      var x21: ${l} = getInputValue(batch, channel, row2, col1);
      var x22: ${l} = getInputValue(batch, channel, row2, col2);
      var dx1: ${l} = abs(row - ${l}(row1));
      var dx2: ${l} = abs(${l}(row2) - row);
      var dy1: ${l} = abs(col - ${l}(col1));
      var dy2: ${l} = abs(${l}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},af=(e,t,r,a,i,s,o,c,p,m)=>{let l=r.length===2,g=!0,[b,w]=l?[0,1]:g?[2,3]:[1,2],$=e.type.value,x=T=>{let C=T===b?"row":"col";return`
      fn ${C}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${$} {
        var output_index = ${t.indicesGet("output_indices",T)};
        var originalIdx: ${$} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[T]},
        ${a[T]}, ${r[T]}, ${s[T]}, ${s[T]} + ${r.length});
        var fractOriginalIdx: ${$} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${c} && (originalIdx < 0 || originalIdx > (${r[T]} - 1))) {
          return ${p};
        }
        var data: array<${$}, 4> = array<${$}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${C}: ${$} = originalIdx + ${$}(i);
          if (${C} < 0 || ${C} >= ${r[T]}) {
            ${(()=>m?`coefs[i + 1] = 0.0;
                        continue;`:c?`return ${p};`:`${C} = max(0, min(${C}, ${r[T]} - 1));`)()};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",T,`u32(${C})`)};
          data[i + 1] = ${T===b?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${x(b)};
    ${x(w)};
  fn getCubicInterpolationCoefs(s: ${$}) -> array<${$}, 4> {
    var absS = abs(s);
    var coeffs: array<${$}, 4> = array<${$}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${$} = 1.0 - absS;
    var twoMinusAbsS: ${$} = 2.0 - absS;
    var onePlusAbsS: ${$} = 1.0 + absS;
    coeffs[0] = ((${o} * onePlusAbsS - 5 * ${o}) * onePlusAbsS + 8 * ${o}) * onePlusAbsS - 4 * ${o};
    coeffs[1] = ((${o} + 2) * absS - (${o} + 3)) * absS * absS + 1;
    coeffs[2] = ((${o} + 2) * oneMinusAbsS - (${o} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${o} * twoMinusAbsS - 5 * ${o}) * twoMinusAbsS + 8 * ${o}) * twoMinusAbsS - 4 * ${o};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${$}, 4>, coefs: array<${$}, 4>) -> ${$} {
    var coefsSum: ${$} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${$} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},of=(e,t,r,a,i)=>{let[o,c,p,m,l]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],g=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${g} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",c,`max(0, min(depth, ${r[c]} - 1))`)};
      ${e.indicesSet("input_indices",p,`max(0, min(height, ${r[p]} - 1))`)};
      ${e.indicesSet("input_indices",m,`max(0, min(width, ${r[m]} - 1))`)};
      ${kl(e,l,o,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${g} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${g} = originalIndices[${c}];
      var height:${g} = originalIndices[${p}];
      var width:${g} = originalIndices[${m}];
      ${a?`if (depth < 0 || depth > (${r[c]} - 1) || height < 0 || height > (${r[p]} - 1) || width < 0 || (width > ${r[m]} - 1)) {
      return ${i};
        }`:""};

    depth = max(0, min(depth, ${r[c]} - 1));
      height = max(0, min(height, ${r[p]} - 1));
      width = max(0, min(width, ${r[m]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${r.length>3?`u32(originalIndices[${l}])`:"0"};
      var batch: u32 =  ${r.length>3?`u32(originalIndices[${o}])`:"0"};

      var x111: ${g} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${g} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${g} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${g} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${g} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${g} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${g} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${g} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${g} = abs(depth - ${g}(depth1));
      var dx2: ${g} = abs(${g}(depth2) - depth);
      var dy1: ${g} = abs(height - ${g}(height1));
      var dy2: ${g} = abs(${g}(height2) - height);
      var dz1: ${g} = abs(width - ${g}(width1));
      var dz2: ${g} = abs(${g}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},sf=(e,t,r,a,i,s)=>{let o=e.dims,c=Xp(s,t.axes,o.length),p=Qp(o,a,i,t.axes),m=a.slice();a.length===0&&(m=o.map((S,E)=>S===0?1:p[E]/S),t.keepAspectRatioPolicy!=="stretch"&&(p=Jp(o,m,t)));let l=J("output",e.dataType,p.length),g=W("input",e.dataType,o.length),b=N.size(p),w=o.length===p.length&&o.every((S,E)=>S===p[E]),$=t.coordinateTransformMode==="tf_crop_and_resize",x=t.extrapolationValue,T=g.type.value,C=S=>`
      ${w?"":`
      ${Yp(t.coordinateTransformMode,T)};
      ${(()=>{switch(t.mode){case"nearest":return`
              ${rf(g,o)};
              ${Zp(t.nearestMode,r,T)};
              ${tf(g,l,o,p,m.length,c.length,$)};
              `;case"linear":return`
              ${ef(l,o,p,m.length,c.length)};
              ${(()=>{if(o.length===2||o.length===4)return`${nf(g,l,o,$,x)}`;if(o.length===3||o.length===5)return`${of(g,l,o,$,x)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(o.length===2||o.length===4)return`${af(g,l,o,p,m,c,t.cubicCoeffA,$,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${S.registerUniform("output_size","u32").registerUniform("scales","f32",m.length).registerUniform("roi","f32",c.length).declareVariables(g,l)}
      ${S.mainStart()}
        ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${w?"output[global_idx] = input[global_idx];":`
        let output_indices = ${l.offsetToIndices("global_idx")};
        var input_indices: ${g.type.indices};
        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${g.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${t.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${o.length===2||o.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${m.length>0?m:""}|${i.length>0?i:""}|${c.length>0?c:""}|${w}|${o}`,inputDependencies:["rank"]},getShaderSource:C,getRunData:()=>({outputs:[{dims:p,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:[{type:"uint32",data:b},{type:"float32",data:m},{type:"float32",data:c},...L(o),...L(p)]})}},uf=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Pl=(e,t)=>{let r=[],a=[],i=[],s=uf(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");Kp(e.inputs,t,s,r,a,i),e.compute(sf(e.inputs[0],t,s,r,a,i),{inputs:[0]})},Rl=e=>{let t=e.antialias,r=e.axes,a=e.coordinateTransformMode,i=e.cubicCoeffA,s=e.excludeOutside!==0,o=e.extrapolationValue,c=e.keepAspectRatioPolicy,p=e.mode,m=e.nearestMode===""?"simple":e.nearestMode;return xe({antialias:t,axes:r,coordinateTransformMode:a,cubicCoeffA:i,excludeOutside:s,extrapolationValue:o,keepAspectRatioPolicy:c,mode:p,nearestMode:m})}});var lf,df,Ml,Dl=Q(()=>{"use strict";ze();Ce();_e();lf=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],a=e[2];if(t.dataType!==r.dataType||t.dataType!==a.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let i=t.dims[t.dims.length-1],s=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==s)throw new Error("Skip must have the same sequence length as input");if(a.dims.length!==1)throw new Error("Gamma must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let o=e[3];if(o.dims.length!==1)throw new Error("Beta must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let o=e[4];if(o.dims.length!==1)throw new Error("Bias must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}},df=(e,t,r,a)=>{let i=e[0].dims,s=N.size(i),o=i,c=s,p=i.slice(-1)[0],m=a?i.slice(0,-1).concat(1):[],l=e.length>3,g=e.length>4,b=a&&r>1,w=a&&r>2,$=r>3,x=Le(p),T=[{type:"uint32",data:c},{type:"uint32",data:x},{type:"uint32",data:p},{type:"float32",data:t.epsilon}],C=E=>{let O=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],U=[W("x",e[0].dataType,e[0].dims,x),W("skip",e[1].dataType,e[1].dims,x),W("gamma",e[2].dataType,e[2].dims,x)];l&&U.push(W("beta",e[3].dataType,e[3].dims,x)),g&&U.push(W("bias",e[4].dataType,e[4].dims,x)),U.push(J("output",e[0].dataType,o,x)),b&&U.push(J("mean_output",1,m)),w&&U.push(J("inv_std_output",1,m)),$&&U.push(J("input_skip_bias_sum",e[0].dataType,o,x));let D=He(e[0].dataType);return`

      ${E.registerUniforms(O).declareVariables(...U)}

      ${E.mainStart()}
        ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}
        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        let offset = global_idx * hidden_size_vectorized;
        var sum = ${Qe("f32",x)};
        var squareSum = ${Qe("f32",x)};
        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${g?"bias[i]":"0.0"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${$?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${St(D,x,"value")};
          sum += f32_value;
          squareSum += f32_value * f32_value;
        }
        let mean = ${ct("sum",x)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${ct("squareSum",x)} / f32(uniforms.hidden_size) - mean * mean + uniforms.epsilon);
        ${b?"mean_output[global_idx] = mean;":""}
        ${w?"inv_std_output[global_idx] = inv_std_dev;":""}
        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {
          output[offset + i] = (output[offset + i] - ${D}(mean)) * ${D}(inv_std_dev) * gamma[i] + ${l?"beta[i]":"0.0"};
        }
      }`},S=[{dims:o,dataType:e[0].dataType}];return r>1&&S.push({dims:m,dataType:1}),r>2&&S.push({dims:m,dataType:1}),r>3&&S.push({dims:i,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${x};${b};${w};${$}`,inputDependencies:e.map((E,O)=>"type")},getShaderSource:C,getRunData:()=>({outputs:S,dispatchGroup:{x:Math.ceil(c/p/64)},programUniforms:T})}},Ml=(e,t)=>{lf(e.inputs);let a=[0];e.outputCount>1&&a.push(-3),e.outputCount>2&&a.push(-3),e.outputCount>3&&a.push(3),e.compute(df(e.inputs,t,e.outputCount,!1),{outputs:a})}});var cf,ia,pf,zl,ff,mf,Ul,Wl,Nl=Q(()=>{"use strict";ze();Ce();Xe();_e();cf=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,a)=>{if(e[a+1].dataType!==6&&e[a+1].dataType!==7)throw new Error(`Input ${a} must be an array of int32 or int64`)})},ia=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(a=>r.push(Number(a)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(a=>r.push(Number(a)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},pf=(e,t)=>{if(e.length>1){let r=ia(e,1),a=ia(e,2),i=ia(e,3);return i.length===0&&(i=[...Array(e[0].dims.length).keys()]),xe({starts:r,ends:a,axes:i})}else return t},zl=(e,t,r,a,i)=>{let s=e;return e<0&&(s+=r[a[t]]),i[t]<0?Math.max(0,Math.min(s,r[a[t]]-1)):Math.max(0,Math.min(s,r[a[t]]))},ff=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${r.length}; i >= 0; i--) {
            let input_shape_i = ${ce("uniforms.input_shape","i",r.length)};
            let steps_i = ${ce("uniforms.steps","i",r.length)};
            let signs_i = ${ce("uniforms.signs","i",r.length)};
            let starts_i = ${ce("uniforms.starts","i",r.length)};
            var output_index = ${t.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,mf=(e,t)=>{let r=e[0].dims,a=N.size(r),i=t.axes.length>0?N.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],s=ia(e,4);s.forEach(C=>C!==0||(()=>{throw new Error("step cannot be 0")})),s.length===0&&(s=Array(i.length).fill(1));let o=t.starts.map((C,S)=>zl(C,S,r,i,s)),c=t.ends.map((C,S)=>zl(C,S,r,i,s));if(i.length!==o.length||i.length!==c.length)throw new Error("start, ends and axes should have the same number of elements");if(i.length!==r.length)for(let C=0;C<r.length;++C)i.includes(C)||(o.splice(C,0,0),c.splice(C,0,r[C]),s.splice(C,0,1));let p=s.map(C=>Math.sign(C));s.forEach((C,S,E)=>{if(C<0){let O=(c[S]-o[S])/C,U=o[S],D=U+O*s[S];o[S]=D,c[S]=U,E[S]=-C}});let m=r.slice(0);i.forEach((C,S)=>{m[C]=Math.ceil((c[C]-o[C])/s[C])});let l={dims:m,dataType:e[0].dataType},g=J("output",e[0].dataType,m.length),b=W("input",e[0].dataType,e[0].dims.length),w=N.size(m),$=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:o.length},{name:"signs",type:"i32",length:p.length},{name:"steps",type:"u32",length:s.length}],x=[{type:"uint32",data:w},{type:"uint32",data:o},{type:"int32",data:p},{type:"uint32",data:s},...L(e[0].dims),...L(m)],T=C=>`
      ${C.registerUniforms($).declareVariables(b,g)}
        ${ff(b,g,r)}
        ${C.mainStart()}
          ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${g.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${g.setByOffset("global_idx",b.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${p.length}_${o.length}_${s.length}`,inputDependencies:["rank"]},getShaderSource:T,getRunData:()=>({outputs:[l],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:x})}},Ul=(e,t)=>{cf(e.inputs,t);let r=pf(e.inputs,t);e.compute(mf(e.inputs,r),{inputs:[0]})},Wl=e=>{let t=e.starts,r=e.ends,a=e.axes;return xe({starts:t,ends:r,axes:a})}});var hf,gf,Vl,Hl,Ll=Q(()=>{"use strict";Ce();Xe();_e();hf=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},gf=(e,t)=>{let r=e.dims,a=N.size(r),i=64,s=t.axis;if(s<0&&(s=r.length+s),s<r.length-1)throw new Error("softmax only supports last axis for now.");let o=r[s],c=a/o,p=Le(o),m=o/p,l=(T,C)=>C===4?`max(max(${T}.x, ${T}.y), max(${T}.z, ${T}.w))`:C===2?`max(${T}.x, ${T}.y)`:C===3?`max(max(${T}.x, ${T}.y), ${T}.z)`:T,g=W("x",e.dataType,e.dims,p),b=J("result",e.dataType,e.dims,p),w=g.type.value,$=He(e.dataType)==="f32"?`var threadMax = ${w}(-3.402823e+38f);`:`var threadMax = ${w}(-65504.0h);`,x=T=>`
      var<workgroup> rowMaxShared : ${w};
      var<workgroup> rowSumShared : ${w};
      var<workgroup> threadShared : array<${w}, ${i}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${w} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${w}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${T.registerUniform("packedCols","i32").declareVariables(g,b)}
      ${T.mainStart()}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${i};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${$}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${w}(${l("threadShared[0]",p)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${w}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${w}(${ct("threadShared[0]",p)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`;return{name:"Softmax",shaderCache:{hint:`${p}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.dataType}],dispatchGroup:{x:c},programUniforms:[{type:"uint32",data:m}]}),getShaderSource:x}},Vl=(e,t)=>{hf(e.inputs),e.compute(gf(e.inputs[0],t))},Hl=e=>xe({axis:e.axis})});var yf,bf,vf,wf,$f,Gl,Fl,ql=Q(()=>{"use strict";Ce();Xe();_e();yf=e=>{if(!e||e.length<1)throw new Error("too few inputs")},bf=(e,t)=>{let r=[],a=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(i=>r.push(Number(i))),a=r.length),xe({numOutputs:a,axis:t.axis,splitSizes:r})},vf=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${ce("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,wf=e=>{let t=e.length,r=[];for(let a=0;a<t;++a){let i=e[a].setByIndices("indices","input[global_idx]");t===1?r.push(i):a===0?r.push(`if (output_number == ${a}u) { ${i} }`):a===t-1?r.push(`else { ${i} }`):r.push(`else if (output_number == ${a}) { ${i} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${r.join(`
`)}
      }`},$f=(e,t)=>{let r=e[0].dims,a=N.size(r),i=e[0].dataType,s=N.normalizeAxis(t.axis,r.length),o=new Array(t.numOutputs),c=W("input",i,r),p=new Array(t.numOutputs),m=[],l=[],g=0,b=[{type:"uint32",data:a}];for(let $=0;$<t.numOutputs;$++){g+=t.splitSizes[$],p[$]=g;let x=r.slice();x[t.axis]=t.splitSizes[$],l.push(x),o[$]=J(`output${$}`,i,x),m.push({dims:l[$],dataType:e[0].dataType})}b.push({type:"uint32",data:p}),b.push(...L(r)),l.forEach($=>b.push(...L($)));let w=$=>`
  ${$.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",p.length).declareVariables(c,...o)}
  ${vf(p.length)}
  ${wf(o)}

  ${$.mainStart()}
    ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${c.offsetToIndices("global_idx")};
    var index = ${c.indicesGet("indices",s)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${ce("uniforms.size_in_split_axis","output_number - 1u",p.length)};
      ${c.indicesSet("indices",s,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:w,getRunData:()=>({outputs:m,dispatchGroup:{x:Math.ceil(a/64)},programUniforms:b})}},Gl=(e,t)=>{yf(e.inputs);let r=e.inputs.length===1?t:bf(e.inputs,t);e.compute($f(e.inputs,r),{inputs:[0]})},Fl=e=>{let t=e.axis,r=e.splitSizes,a=e.numOutputs<0?r.length:e.numOutputs;if(a!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return xe({axis:t,numOutputs:a,splitSizes:r})}});var jl,_f,Sf,xf,Kl,Yl=Q(()=>{"use strict";ze();Ce();_e();jl=e=>Array.from(e.getBigInt64Array(),Number),_f=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(jl(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Sf=(e,t)=>{let r=[];for(let a=0;a<e.length;++a)r.push(e[a]*t[a]);return r},xf=e=>{let t=e[0].dims,r=jl(e[1]),a=Sf(t,r),i=N.size(a),s=e[0].dataType,o=W("input",s,t.length),c=J("output",s,a.length),p=m=>`
      const inputShape = ${o.indices(...t)};
      ${m.registerUniform("output_size","u32").declareVariables(o,c)}
      ${m.mainStart()}
      ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${c.offsetToIndices("global_idx")};
      var input_indices: ${o.type.indices};
      for (var i = 0; i < ${t.length}; i++) {
        let input_dim_i = ${o.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${c.indicesGet("output_indices","i")}  % input_dim_i;

        ${o.indicesSet("input_indices","i","input_dim_value")}
      }
      ${c.setByOffset("global_idx",o.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:"uint32",data:i},...L(e[0].dims),...L(a)]}),getShaderSource:p}},Kl=e=>{_f(e.inputs),e.compute(xf(e.inputs),{inputs:[0]})}});var Cf,If,Zl,Xl=Q(()=>{"use strict";ze();Ce();_e();Cf=(e,t,r,a,i)=>{let s=J("output_data",i,r.length,4),o=W("a_data",t[1].dataType,t[1].dims.length,4),c=W("b_data",t[2].dataType,t[2].dims.length,4),p=W("c_data",t[0].dataType,t[0].dims.length,4),m,l=(g,b,w)=>`select(${b}, ${g}, ${w})`;if(!a)m=s.setByOffset("global_idx",l(o.getByOffset("global_idx"),c.getByOffset("global_idx"),p.getByOffset("global_idx")));else{let g=(b,w,$="")=>{let x=`a_data[index_a${w}][component_a${w}]`,T=`b_data[index_b${w}][component_b${w}]`,C=`bool(c_data[index_c${w}] & ${4278190080>>>(3-w)*8}u)`;return`
            let output_indices${w} = ${s.offsetToIndices(`global_idx * 4u + ${w}u`)};
            let offset_a${w} = ${o.broadcastedIndicesToOffset(`output_indices${w}`,s)};
            let offset_b${w} = ${c.broadcastedIndicesToOffset(`output_indices${w}`,s)};
            let offset_c${w} = ${p.broadcastedIndicesToOffset(`output_indices${w}`,s)};
            let index_a${w} = offset_a${w} / 4u;
            let index_b${w} = offset_b${w} / 4u;
            let index_c${w} = offset_c${w} / 4u;
            let component_a${w} = offset_a${w} % 4u;
            let component_b${w} = offset_b${w} % 4u;
            ${b}[${w}] = ${$}(${l(x,T,C)});
          `};i===9?m=`
            var data = vec4<u32>(0);
            ${g("data",0,"u32")}
            ${g("data",1,"u32")}
            ${g("data",2,"u32")}
            ${g("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:m=`
            ${g("output_data[global_idx]",0)}
            ${g("output_data[global_idx]",1)}
            ${g("output_data[global_idx]",2)}
            ${g("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(p,o,c,s)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${m}
      }`},If=e=>{let t=e[1].dims,r=e[2].dims,a=e[0].dims,i=e[1].dataType,s=!(N.areEqual(t,r)&&N.areEqual(r,a)),o=t,c=N.size(t);if(s){let m=At.calcShape(At.calcShape(t,r,!1),a,!1);if(!m)throw new Error("Can't perform where op on the given tensors");o=m,c=N.size(o)}let p=Math.ceil(c/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:m=>Cf(m,e,o,s,i),getRunData:()=>({outputs:[{dims:o,dataType:i}],dispatchGroup:{x:Math.ceil(c/64/4)},programUniforms:[{type:"uint32",data:p},...L(a),...L(t),...L(r),...L(o)]})}},Zl=e=>{e.compute(If(e.inputs))}});var Ql,Jl=Q(()=>{"use strict";$s();Za();xs();Is();su();bu();$u();ti();Mu();Uu();Lu();qu();Yu();Qu();tl();nl();il();ni();ll();cl();Tl();Ol();jn();Bl();Dl();Nl();Ll();ql();Yl();$r();Xa();Xl();Ql=new Map([["Abs",[As]],["Acos",[Ts]],["Acosh",[Es]],["Add",[uu]],["ArgMax",[ws,Ya]],["ArgMin",[vs,Ya]],["Asin",[Os]],["Asinh",[ks]],["Atan",[Ps]],["Atanh",[Rs]],["Attention",[_s]],["AveragePool",[vl,bl]],["BatchNormalization",[Ss]],["BiasAdd",[Cs]],["BiasSplitGelu",[ou]],["Cast",[Ms,Bs]],["Ceil",[zs]],["Clip",[Ds]],["Concat",[vu,wu]],["Conv",[ii,ai]],["ConvTranspose",[Bu,Ru]],["Cos",[Us]],["Cosh",[Ws]],["CumSum",[Du,zu]],["Div",[lu]],["Einsum",[Vu,Hu]],["Elu",[Ns,Zn]],["Equal",[du]],["Erf",[Vs]],["Exp",[Hs]],["Expand",[Fu]],["Floor",[Ls]],["FusedConv",[ii,ai]],["Gather",[Ku,ju]],["GatherElements",[Xu,Zu]],["Gelu",[Gs]],["Gemm",[el,Ju]],["GlobalAveragePool",[_l,$l]],["GlobalMaxPool",[Al,Il]],["Greater",[mu]],["GreaterOrEqual",[gu]],["HardSigmoid",[Qs,Xs]],["InstanceNormalization",[rl]],["LayerNormalization",[al]],["LeakyRelu",[Fs,Zn]],["Less",[hu]],["LessOrEqual",[yu]],["Log",[iu]],["MatMul",[Iu]],["MaxPool",[xl,Cl]],["Mul",[cu]],["MultiHeadAttention",[ul,sl]],["Neg",[js]],["Not",[qs]],["Pad",[dl]],["Pow",[pu]],["Range",[El]],["Reciprocal",[Ks]],["ReduceMin",[fs]],["ReduceMean",[us]],["ReduceMax",[ps]],["ReduceSum",[hs]],["ReduceProd",[ms]],["ReduceL1",[ls]],["ReduceL2",[ds]],["ReduceLogSum",[ys]],["ReduceLogSumExp",[cs]],["ReduceSumSquare",[gs]],["Relu",[Ys]],["Resize",[Pl,Rl]],["Sigmoid",[Zs]],["Sin",[Js]],["Sinh",[eu]],["Slice",[Ul,Wl]],["SkipLayerNormalization",[Ml]],["Split",[Gl,Fl]],["Sqrt",[tu]],["Softmax",[Vl,Hl]],["Sub",[fu]],["Tan",[ru]],["Tanh",[nu]],["ThresholdedRelu",[au,Zn]],["Tile",[Kl]],["Transpose",[Yo,Zo]],["Where",[Zl]]])});var oa,ed=Q(()=>{"use strict";bt();Gt();_e();oa=class{constructor(t){this.backend=t;this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,a,i,s){mt(t.programInfo.name);let o=this.backend.device,c=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2),c.setPipeline(t.computePipeline);let p=[];for(let l of r)p.push({binding:p.length,resource:{buffer:l.buffer}});for(let l of a)p.push({binding:p.length,resource:{buffer:l.buffer}});s&&p.push({binding:p.length,resource:s});let m=o.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:p,label:t.programInfo.name});c.setBindGroup(0,m),c.dispatchWorkgroups(...i),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),ht(t.programInfo.name)}dispose(){}build(t,r){mt(t.name);let a=this.backend.device,i=[];a.features.has("shader-f16")&&i.push("enable f16;");let s=jo(r),o=t.getShaderSource(s),c=`${i.join(`
`)}
${s.additionalImplementations}
${o}`,p=a.createShaderModule({code:c,label:t.name});De("verbose",()=>`[WebGPU] ${t.name} shader code: ${c}`);let m=a.createComputePipeline({compute:{module:p,entryPoint:"main"},layout:"auto",label:t.name});return ht(t.name),{programInfo:t,computePipeline:m}}normalizeDispatchGroupSize(t){let r=typeof t=="number"?t:t.x,a=typeof t=="number"?1:t.y||1,i=typeof t=="number"?1:t.z||1,s=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=s&&a<=s&&i<=s)return[r,a,i];let o=r*a*i,c=Math.ceil(Math.sqrt(o));if(c>s){if(c=Math.ceil(Math.cbrt(o)),c>s)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[c,c,c]}else return[c,c,1]}}});var Af,Tf,sa,td=Q(()=>{"use strict";bt();ze();Gt();Ho();qo();Jl();ed();Af=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let a=0;a<e.length;++a){let i=e[a].dataType;switch(t[a]){case"none":{r.push("");break}case"type":{r.push(`${i}`);break}case"rank":{let s=e[a].dims.length;r.push(`${i};${s}`);break}case"dims":{let s=e[a].dims.join(",");r.push(`${i};${s}`);break}default:throw new Error(`unsupported input dependency: ${t[a]}`)}}return r.join("|")},Tf=(e,t,r)=>{let a=e.name;return e.shaderCache?.hint&&(a+="["+e.shaderCache.hint+"]"),a+=":"+r+`:${Af(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,a},sa=class{constructor(){this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,r){this.env=t;let a=[],i={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:a};r.features.has("chromium-experimental-timestamp-query-inside-passes")?a.push("chromium-experimental-timestamp-query-inside-passes"):r.features.has("timestamp-query")&&a.push("timestamp-query"),r.features.has("shader-f16")&&a.push("shader-f16"),this.device=await r.requestDevice(i),this.gpuDataManager=Fo(this),this.programManager=new oa(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,No(t.logLevel,!!t.debug),this.device.onuncapturederror=s=>{s.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${s.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t={};this.queryType==="at-passes"&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=this.getCommandEncoder().beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;mt(),this.endComputePass();let t;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),t=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(t,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&t.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(t.getMappedRange()),a=this.pendingQueries.get(t);for(let i=0;i<r.length/2;i++){let s=a[i],o=s.kernelId,c=this.kernels.get(o),p=c.kernelType,m=c.kernelName,l=s.programName,g=s.inputTensorViews,b=s.outputTensorViews,w=r[i*2],$=r[i*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=w);let x=Number(w-this.queryTimeBase),T=Number($-this.queryTimeBase);if(!Number.isSafeInteger(x)||!Number.isSafeInteger(T))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:g.map(C=>({dims:C.dims,dataType:dt(C.dataType)})),outputsMetadata:b.map(C=>({dims:C.dims,dataType:dt(C.dataType)})),kernelId:o,kernelType:p,kernelName:m,programName:l,startTime:x,endTime:T});else{let C="";g.forEach((E,O)=>{C+=`input[${O}]: [${E.dims}] | ${dt(E.dataType)}, `});let S="";b.forEach((E,O)=>{S+=`output[${O}]: [${E.dims}] | ${dt(E.dataType)}, `}),console.log(`[profiling] kernel "${o}|${p}|${m}|${l}" ${C}${S}execution time: ${T-x} ns`)}Bn("GPU",`${l}::${w}::${$}`)}t.unmap(),this.pendingQueries.delete(t)}),ht()}run(t,r,a,i,s){mt(t.name);let o=[];for(let S=0;S<r.length;++S){let E=this.gpuDataManager.get(r[S].data);if(!E)throw new Error(`no GPU data for input: ${r[S].data}`);o[S]=E}let{outputs:c,dispatchGroup:p,programUniforms:m}=t.getRunData(r),l=a.length===0?c.map((S,E)=>E):a;if(l.length!==c.length)throw new Error(`Output size ${l.length} must be equal to ${c.length}.`);let g=[],b=[];for(let S=0;S<c.length;++S){if(!Number.isInteger(l[S])||l[S]<-3||l[S]>=c.length)throw new Error(`Invalid output index: ${l[S]}`);if(l[S]===-3)continue;let E=l[S]===-1,O=l[S]===-2,U=E||O?s(c[S].dataType,c[S].dims):i(l[S],c[S].dataType,c[S].dims),D=this.gpuDataManager.get(U.data);if(!D)throw new Error(`no GPU data for output: ${U.data}`);if(E&&this.temporaryData.push(D),O){let V=this.kernelPersistentData.get(this.currentKernelId);V||(V=[],this.kernelPersistentData.set(this.currentKernelId,V)),V.push(D)}g.push(U),b.push(D)}let w;if(m){let S=0,E=[];m.forEach(V=>{let Y=typeof V.data=="number"?[V.data]:V.data;if(Y.length===0)return;let se=V.type==="float16"?2:4,B,te;V.type==="float16"?(te=Y.length>4?16:Y.length>2?8:Y.length*se,B=Y.length>4?16:se*Y.length):(te=Y.length<=2?Y.length*se:16,B=16),S=Math.ceil(S/te)*te,E.push(S);let ke=V.type==="float16"?8:4;S+=Y.length>4?Math.ceil(Y.length/ke)*B:Y.length*se});let O=16;S=Math.ceil(S/O)*O;let U=new ArrayBuffer(S);m.forEach((V,Y)=>{let se=E[Y],B=typeof V.data=="number"?[V.data]:V.data;V.type==="int32"?new Int32Array(U,se,B.length).set(B):V.type==="uint32"?new Uint32Array(U,se,B.length).set(B):V.type==="float16"?new Uint16Array(U,se,B.length).set(B):new Float32Array(U,se,B.length).set(B)});let D=this.gpuDataManager.create(S,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(D.buffer,0,U,0,S),this.gpuDataManager.release(D.id),w={offset:0,size:S,buffer:D.buffer}}let $=this.programManager.normalizeDispatchGroupSize(p),x=$[1]===1&&$[2]===1,T=Tf(t,r,x),C=this.programManager.getArtifact(T);if(C||(C=this.programManager.build(t,$),this.programManager.setArtifact(T,C),De("info",()=>`[artifact] key: ${T}, programName: ${t.name}`)),De("info",()=>`[ProgramManager] run "${t.name}" (key=${T}) with ${$[0]}x${$[1]}x${$[2]}`),this.queryType!=="none"){let S={kernelId:this.currentKernelId,programName:C.programInfo.name,inputTensorViews:r,outputTensorViews:g};this.pendingKernels.push(S)}return this.programManager.run(C,o,b,$,w),ht(t.name),g}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,a,i){let s=Ql.get(t);if(!s)throw new Error(`kernel not implemented: ${t}`);let o={kernelType:t,kernelName:i,kernelEntry:s[0],attributes:[s[1],a]};this.kernels.set(r,o)}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let a of r)this.gpuDataManager.release(a.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,a){let i=this.kernels.get(t);if(!i)throw new Error(`kernel not created: ${t}`);let s=i.kernelType,o=i.kernelName,c=i.kernelEntry,p=i.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${s}] ${o}" is not allowed to be called recursively`);this.currentKernelId=t,p[0]&&(p[1]=p[0](p[1]),p[0]=void 0),De("info",()=>`[WebGPU] Start to run kernel "[${s}] ${o}"...`);let m=this.env.debug;this.temporaryData=[];try{return m&&this.device.pushErrorScope("validation"),c(r,p[1]),0}catch(l){return a.push(Promise.resolve(`[WebGPU] Kernel "[${s}] ${o}" failed. ${l}`)),1}finally{m&&a.push(this.device.popErrorScope().then(l=>l?`GPU validation error for kernel "[${s}] ${o}": ${l.message}`:null));for(let l of this.temporaryData)this.gpuDataManager.release(l.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,a,i){let s=this.sessionExternalDataMapping.get(t);s||(s=new Map,this.sessionExternalDataMapping.set(t,s));let o=s.get(r),c=this.gpuDataManager.registerExternalBuffer(a,i,o?.[1]);return s.set(r,[c,a]),c}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(a=>this.gpuDataManager.unregisterExternalBuffer(a[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw new Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,a){return async()=>{let i=await Ha(this,t,r);return Vo(i.buffer,a)}}writeTimestamp(t){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,t)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||this.env.wasm.trace)&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}onRunStart(){this.setQueryType()}}});var rd={};br(rd,{init:()=>Ef});var Jr,ci,Ef,nd=Q(()=>{"use strict";ze();td();Gt();Ce();Jr=class e{constructor(t,r,a,i){this.module=t;this.dataType=r;this.data=a;this.dims=i}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=N.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=N.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=N.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(N.size(t)!==N.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},ci=class{constructor(t,r,a){this.module=t;this.backend=r;this.customDataOffset=0;this.customDataSize=0;let i=t.HEAPU32,s=a>>>2;this.opKernelContext=i[s++];let o=i[s++];this.outputCount=i[s++],this.customDataOffset=i[s++],this.customDataSize=i[s++];let c=[];for(let p=0;p<o;p++){let m=i[s++],l=i[s++],g=i[s++],b=[];for(let w=0;w<g;w++)b.push(i[s++]);c.push(new Jr(t,m,l,b))}this.inputs=c}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(t,r){let a=r?.inputs?.map(c=>typeof c=="number"?this.inputs[c]:c)??this.inputs,i=r?.outputs??[],s=(c,p,m)=>new Jr(this.module,p,this.output(c,m),m),o=(c,p)=>{let m=jr(c);if(!m)throw new Error(`Unsupported data type: ${c}`);let l=m*N.size(p);return new Jr(this.module,c,this.backend.gpuDataManager.create(l).id,p)};return this.backend.run(t,a,i,s,o)}output(t,r){let a=this.module.stackSave();try{let i=this.module.stackAlloc((1+r.length)*4),s=i>>2;this.module.HEAPU32[s++]=r.length;for(let o=0;o<r.length;o++)this.module.HEAPU32[s++]=r[o];return this.module._JsepOutput(this.opKernelContext,t,i)}catch(i){throw new Error(`Failed to generate kernel's output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${i}`)}finally{this.module.stackRestore(a)}}},Ef=async(e,t,r)=>{let a=e.jsepInit;if(!a)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");let i=new sa;await i.initialize(t,r),a(i,s=>i.alloc(s),s=>i.free(s),(s,o,c,p=!1)=>{if(p)De("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${s}, dst=${o}, size=${c}`),i.memcpy(s,o);else{De("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${s}, gpuDataId=${o}, size=${c}`);let m=e.HEAPU8.subarray(s>>>0,(s>>>0)+c);i.upload(o,m)}},async(s,o,c)=>{De("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${s}, dataOffset=${o}, size=${c}`),await i.download(s,()=>e.HEAPU8.subarray(o>>>0,(o>>>0)+c))},(s,o,c)=>i.createKernel(s,o,c,e.UTF8ToString(e._JsepGetNodeName(o))),s=>i.releaseKernel(s),(s,o,c,p)=>{De("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${c}, kernel=${s}, contextDataOffset=${o}`);let m=new ci(e,i,o);return i.computeKernel(s,m,p)})}});var Of,id,od,en,kf,pi,sd,ud,ad,ld,dd,cd,pd=Q(()=>{"use strict";Mo();zo();ze();vr();Un();Na();Of=(e,t)=>{Ne()._OrtInit(e,t)!==0&&Me("Can't initialize onnxruntime.")},id=async e=>{Of(e.wasm.numThreads,Kr(e.logLevel))},od=async(e,t)=>{if(t==="webgpu"||t==="webnn"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let r=await navigator.gpu.requestAdapter();if(!r)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.');if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");let a=(nd(),tr(rd)).init;await a(Ne(),e,r)}},en=new Map,kf=e=>{let t=Ne(),r=t.stackSave();try{let a=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,a,a+4)!==0&&Me("Can't get session input/output count."),[t.HEAP32[a/4],t.HEAP32[a/4+1]]}finally{t.stackRestore(r)}},pi=e=>{let t=Ne(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},sd=async(e,t)=>{let r,a,i=Ne();Array.isArray(e)?[r,a]=e:e.buffer===i.HEAPU8.buffer?[r,a]=[e.byteOffset,e.byteLength]:[r,a]=pi(e);let s=0,o=0,c=0,p=[],m=[],l=[];try{if([o,p]=Do(t),t?.externalData&&i.mountExternalData){let C=[];for(let S of t.externalData){let E=typeof S=="string"?S:S.path;C.push(Yr(typeof S=="string"?S:S.data).then(O=>{i.mountExternalData(E,O)}))}await Promise.all(C)}s=await i._OrtCreateSession(r,a,o),s===0&&Me("Can't create a session.");let[g,b]=kf(s),w=[],$=[],x=[];for(let C=0;C<g;C++){let S=i._OrtGetInputName(s,C);S===0&&Me("Can't get an input name."),m.push(S),w.push(i.UTF8ToString(S))}for(let C=0;C<b;C++){let S=i._OrtGetOutputName(s,C);S===0&&Me("Can't get an output name."),l.push(S);let E=i.UTF8ToString(S);$.push(E);{let O=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[E]??"cpu";if(O!=="cpu"&&O!=="cpu-pinned"&&O!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${O}.`);x.push(O)}}let T=null;return x.some(C=>C==="gpu-buffer")&&(c=i._OrtCreateBinding(s),c===0&&Me("Can't create IO binding."),T={handle:c,outputPreferredLocations:x,outputPreferredLocationsEncoded:x.map(C=>Wa(C))}),en.set(s,[s,m,l,T]),[s,w,$]}catch(g){throw m.forEach(b=>i._OrtFree(b)),l.forEach(b=>i._OrtFree(b)),c!==0&&i._OrtReleaseBinding(c),s!==0&&i._OrtReleaseSession(s),g}finally{i._free(r),o!==0&&i._OrtReleaseSessionOptions(o),p.forEach(g=>i._free(g)),i.unmountExternalData?.()}},ud=e=>{let t=Ne(),r=en.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[a,i,s,o]=r;o&&t._OrtReleaseBinding(o.handle),t.jsepUnregisterBuffers?.(e),i.forEach(c=>t._OrtFree(c)),s.forEach(c=>t._OrtFree(c)),t._OrtReleaseSession(a),en.delete(e)},ad=(e,t,r,a,i)=>{if(!e){t.push(0);return}let s=Ne(),o=e[0],c=e[1],p=e[3],m,l;if(o==="string"&&p==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(p==="gpu-buffer"){let w=e[2].gpuBuffer,$=jr(Ua(o));l=c.reduce((x,T)=>x*T,1)*$,m=s.jsepRegisterBuffer(a,i,w,l)}else{let w=e[2];if(Array.isArray(w)){l=4*w.length,m=s._malloc(l),r.push(m);let $=m/4;for(let x=0;x<w.length;x++){if(typeof w[x]!="string")throw new TypeError(`tensor data at index ${x} is not a string`);s.HEAPU32[$++]=Ve(w[x],r)}}else l=w.byteLength,m=s._malloc(l),r.push(m),s.HEAPU8.set(new Uint8Array(w.buffer,w.byteOffset,l),m)}let g=s.stackSave(),b=s.stackAlloc(4*c.length);try{let w=b/4;c.forEach(x=>s.HEAP32[w++]=x);let $=s._OrtCreateTensor(Ua(o),m,l,b,c.length,Wa(p));$===0&&Me(`Can't create tensor for input/output. session=${a}, index=${i}.`),t.push($)}finally{s.stackRestore(g)}},ld=async(e,t,r,a,i,s)=>{let o=Ne(),c=en.get(e);if(!c)throw new Error(`cannot run inference. invalid session id: ${e}`);let[p,m,l,g]=c,b=t.length,w=a.length,$=0,x=[],T=[],C=[],S=[],E=o.stackSave(),O=o.stackAlloc(b*4),U=o.stackAlloc(b*4),D=o.stackAlloc(w*4),V=o.stackAlloc(w*4);try{[$,x]=Bo(s);for(let ee=0;ee<b;ee++)ad(r[ee],T,S,e,t[ee]);for(let ee=0;ee<w;ee++)ad(i[ee],C,S,e,b+a[ee]);let Y=O/4,se=U/4,B=D/4,te=V/4;for(let ee=0;ee<b;ee++)o.HEAPU32[Y++]=T[ee],o.HEAPU32[se++]=m[t[ee]];for(let ee=0;ee<w;ee++)o.HEAPU32[B++]=C[ee],o.HEAPU32[te++]=l[a[ee]];if(g){let{handle:ee,outputPreferredLocations:be,outputPreferredLocationsEncoded:Ue}=g;if(m.length!==b)throw new Error(`input count from feeds (${b}) is expected to be always equal to model's input count (${m.length}).`);for(let pe=0;pe<b;pe++){let ye=t[pe];await o._OrtBindInput(ee,m[ye],T[pe])!==0&&Me(`Can't bind input[${pe}] for session=${e}.`)}for(let pe=0;pe<w;pe++){let ye=a[pe];i[pe]?.[3]?o._OrtBindOutput(ee,l[ye],C[pe],0)!==0&&Me(`Can't bind pre-allocated output[${pe}] for session=${e}.`):o._OrtBindOutput(ee,l[ye],0,Ue[ye])!==0&&Me(`Can't bind output[${pe}] to ${be[pe]} for session=${e}.`)}}o.jsepOnRunStart?.();let ke;g?ke=await o._OrtRunWithBinding(p,g.handle,w,D,$):ke=await o._OrtRun(p,U,O,b,V,w,D,$),ke!==0&&Me("failed to call OrtRun().");let Oe=[];for(let ee=0;ee<w;ee++){let be=o.HEAPU32[D/4+ee];if(be===C[ee]){Oe.push(i[ee]);continue}let Ue=o.stackSave(),pe=o.stackAlloc(4*4),ye=!1,de,ve=0;try{o._OrtGetTensorData(be,pe,pe+4,pe+8,pe+12)!==0&&Me(`Can't access output tensor data on index ${ee}.`);let Be=pe/4,Ge=o.HEAPU32[Be++];ve=o.HEAPU32[Be++];let F=o.HEAPU32[Be++],ie=o.HEAPU32[Be++],he=[];for(let Re=0;Re<ie;Re++)he.push(o.HEAPU32[F/4+Re]);o._OrtFree(F);let Je=he.reduce((Re,Fe)=>Re*Fe,1);de=dt(Ge);let ot=g?.outputPreferredLocations[a[ee]];if(de==="string"){if(ot==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let Re=[],Fe=ve/4;for(let Bt=0;Bt<Je;Bt++){let Mt=o.HEAPU32[Fe++],qt=Bt===Je-1?void 0:o.HEAPU32[Fe]-Mt;Re.push(o.UTF8ToString(Mt,qt))}Oe.push([de,he,Re,"cpu"])}else if(ot==="gpu-buffer"&&Je>0){let Re=o.jsepGetBuffer(ve),Fe=jr(Ge);if(Fe===void 0||!Nn(de))throw new Error(`Unsupported data type: ${de}`);ye=!0,Oe.push([de,he,{gpuBuffer:Re,download:o.jsepCreateDownloader(Re,Je*Fe,de),dispose:()=>{o._OrtReleaseTensor(be)}},"gpu-buffer"])}else{let Re=Wn(de),Fe=new Re(Je);new Uint8Array(Fe.buffer,Fe.byteOffset,Fe.byteLength).set(o.HEAPU8.subarray(ve,ve+Fe.byteLength)),Oe.push([de,he,Fe,"cpu"])}}finally{o.stackRestore(Ue),de==="string"&&ve&&o._free(ve),ye||o._OrtReleaseTensor(be)}}return g&&o._OrtClearBoundOutputs(g.handle),Oe}finally{o.stackRestore(E),T.forEach(Y=>o._OrtReleaseTensor(Y)),C.forEach(Y=>o._OrtReleaseTensor(Y)),S.forEach(Y=>o._free(Y)),$!==0&&o._OrtReleaseRunOptions($),x.forEach(Y=>o._free(Y))}},dd=e=>{let t=Ne(),r=en.get(e);if(!r)throw new Error("invalid session id");let a=r[0],i=t._OrtEndProfiling(a);i===0&&Me("Can't get an profile file name."),t._OrtFree(i)},cd=e=>{let t=[];for(let r of e){let a=r[2];!Array.isArray(a)&&"buffer"in a&&t.push(a.buffer)}return t}});var fd=yr((fw,Rf)=>{Rf.exports='/*!\n * ONNX Runtime Web v1.18.0\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n"use strict";(()=>{var eo=Object.defineProperty;var kl=Object.getOwnPropertyDescriptor;var Rl=Object.getOwnPropertyNames;var Bl=Object.prototype.hasOwnProperty;var Q=(e,t)=>()=>(e&&(t=e(e=0)),t);var Br=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),hn=(e,t)=>{for(var r in t)eo(e,r,{get:t[r],enumerable:!0})},Dl=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of Rl(t))!Bl.call(e,i)&&i!==r&&eo(e,i,{get:()=>t[i],enumerable:!(o=kl(t,i))||o.enumerable});return e};var ur=e=>Dl(eo({},"__esModule",{value:!0}),e);var to={};hn(to,{createReadStream:()=>yi,readFile:()=>Ml,readFileSync:()=>zl});var Ml,zl,yi,ro=Q(()=>{Ml=void 0,zl=void 0,yi=void 0});var no={};hn(no,{join:()=>Ul});var Ul,oo=Q(()=>{Ul=void 0});var vi=Br((wi,io)=>{"use strict";var bi=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){var r=t,o,i;r.ready=new Promise((s,c)=>{o=s,i=c}),r.mountExternalData=(s,c)=>{(r.gb||(r.gb=new Map)).set(s,c)},r.unmountExternalData=()=>{delete r.gb},r.jsepInit=(s,c,g,$,I,D,H,X)=>{r.Fb=s,r.vb=c,r.xb=g,r.ob=$,r.wb=I,r.Sa=D,r.yb=H,r.zb=X,c=(q,j,ne)=>(...fe)=>{let $e=Je,k=j?.();fe=q(...fe);let ae=j?.();return k!==ae&&(q=ae,ne(k),j=ne=null),Je!=$e?Zr():fe},g=q=>async(...j)=>{try{if(r.fb)throw Error("Session already started");let ne=r.fb={Ab:j[0],errors:[]},fe=await q(...j);if(r.fb!==ne)throw Error("Session mismatch");s.flush();let $e=ne.errors;if(0<$e.length){let k=await Promise.all($e);if(k=k.filter(ae=>ae),0<k.length)throw Error(k.join(`\n`))}return fe}finally{r.fb=null}},r._OrtCreateSession=c(r._OrtCreateSession,()=>r._OrtCreateSession,q=>r._OrtCreateSession=q),r._OrtRun=g(c(r._OrtRun,()=>r._OrtRun,q=>r._OrtRun=q)),r._OrtRunWithBinding=g(c(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,q=>r._OrtRunWithBinding=q)),r._OrtBindInput=c(r._OrtBindInput,()=>r._OrtBindInput,q=>r._OrtBindInput=q),r.jsepRegisterBuffer=(q,j,ne,fe)=>s.registerBuffer(q,j,ne,fe),r.jsepUnregisterBuffers=q=>{s.unregisterBuffers(q)},r.jsepGetBuffer=q=>s.getBuffer(q),r.jsepCreateDownloader=(q,j,ne)=>s.createDownloader(q,j,ne),r.jsepOnRunStart=()=>s.onRunStart()};var u=Object.assign({},r),a="./this.program",p=(s,c)=>{throw c},m=typeof window=="object",h=typeof importScripts=="function",d=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",y="",w,_,v;if(d){var x=(ro(),ur(to)),T=(oo(),ur(no));y=h?T.dirname(y)+"/":__dirname+"/",w=(s,c)=>(s=ie(s)?new URL(s):T.normalize(s),x.readFileSync(s,c?void 0:"utf8")),v=s=>(s=w(s,!0),s.buffer||(s=new Uint8Array(s)),s),_=(s,c,g,$=!0)=>{s=ie(s)?new URL(s):T.normalize(s),x.readFile(s,$?void 0:"utf8",(I,D)=>{I?g(I):c($?D.buffer:D)})},!r.thisProgram&&1<process.argv.length&&(a=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),p=(s,c)=>{throw process.exitCode=s,c},r.inspect=()=>"[Emscripten Module object]"}else(m||h)&&(h?y=self.location.href:typeof document<"u"&&document.currentScript&&(y=document.currentScript.src),e&&(y=e),y.indexOf("blob:")!==0?y=y.substr(0,y.replace(/[?#].*/,"").lastIndexOf("/")+1):y="",w=s=>{var c=new XMLHttpRequest;return c.open("GET",s,!1),c.send(null),c.responseText},h&&(v=s=>{var c=new XMLHttpRequest;return c.open("GET",s,!1),c.responseType="arraybuffer",c.send(null),new Uint8Array(c.response)}),_=(s,c,g)=>{var $=new XMLHttpRequest;$.open("GET",s,!0),$.responseType="arraybuffer",$.onload=()=>{$.status==200||$.status==0&&$.response?c($.response):g()},$.onerror=g,$.send(null)});var C=console.log.bind(console),S=console.error.bind(console);Object.assign(r,u),u=null,typeof WebAssembly!="object"&&Ge("no native wasm support detected");var E,O=!1,U,M,N,Y,se,B,te,Pe,Ee,ee,be;function Me(){var s=E.buffer;r.HEAP8=M=new Int8Array(s),r.HEAP16=Y=new Int16Array(s),r.HEAPU8=N=new Uint8Array(s),r.HEAPU16=se=new Uint16Array(s),r.HEAP32=B=new Int32Array(s),r.HEAPU32=te=new Uint32Array(s),r.HEAPF32=Pe=new Float32Array(s),r.HEAPF64=be=new Float64Array(s),r.HEAP64=Ee=new BigInt64Array(s),r.HEAPU64=ee=new BigUint64Array(s)}var pe=[],ye=[],de=[],we=0,ze=null,Re=null;function Ge(s){throw s="Aborted("+s+")",S(s),O=!0,U=1,s=new WebAssembly.RuntimeError(s+". Build with -sASSERTIONS for more info."),i(s),s}var F=s=>s.startsWith("data:application/octet-stream;base64,"),ie=s=>s.startsWith("file://"),he;if(he="ort-wasm-simd.wasm",!F(he)){var Xe=he;he=r.locateFile?r.locateFile(Xe,y):y+Xe}function nt(s){if(v)return v(s);throw"both async and sync fetching of the wasm failed"}function ke(s){if(m||h){if(typeof fetch=="function"&&!ie(s))return fetch(s,{credentials:"same-origin"}).then(c=>{if(!c.ok)throw"failed to load wasm binary file at \'"+s+"\'";return c.arrayBuffer()}).catch(()=>nt(s));if(_)return new Promise((c,g)=>{_(s,$=>c(new Uint8Array($)),g)})}return Promise.resolve().then(()=>nt(s))}function Le(s,c,g){return ke(s).then($=>WebAssembly.instantiate($,c)).then($=>$).then(g,$=>{S(`failed to asynchronously prepare wasm: ${$}`),Ge($)})}function It(s,c){var g=he;return typeof WebAssembly.instantiateStreaming!="function"||F(g)||ie(g)||d||typeof fetch!="function"?Le(g,s,c):fetch(g,{credentials:"same-origin"}).then($=>WebAssembly.instantiateStreaming($,s).then(c,function(I){return S(`wasm streaming compile failed: ${I}`),S("falling back to ArrayBuffer instantiation"),Le(g,s,c)}))}var Tt={903368:(s,c,g,$)=>{if(typeof r>"u"||!r.gb)return 1;if(s=Fe(s>>>0),s.startsWith("./")&&(s=s.substring(2)),s=r.gb.get(s),!s)return 2;if(c>>>=0,g>>>=0,c+g>s.byteLength)return 3;try{return N.set(s.subarray(c,c+g),$>>>0>>>0),0}catch{return 4}},903869:s=>r.vb(s),903902:s=>r.xb(s),903934:(s,c,g)=>{r.ob(s,c,g,!0)},903973:(s,c,g)=>{r.ob(s,c,g)},904006:s=>{r.Sa("Abs",s,void 0)},904057:s=>{r.Sa("Neg",s,void 0)},904108:s=>{r.Sa("Floor",s,void 0)},904161:s=>{r.Sa("Ceil",s,void 0)},904213:s=>{r.Sa("Reciprocal",s,void 0)},904271:s=>{r.Sa("Sqrt",s,void 0)},904323:s=>{r.Sa("Exp",s,void 0)},904374:s=>{r.Sa("Erf",s,void 0)},904425:s=>{r.Sa("Sigmoid",s,void 0)},904480:(s,c,g)=>{r.Sa("HardSigmoid",s,{alpha:c,beta:g})},904559:s=>{r.Sa("Log",s,void 0)},904610:s=>{r.Sa("Sin",s,void 0)},904661:s=>{r.Sa("Cos",s,void 0)},904712:s=>{r.Sa("Tan",s,void 0)},904763:s=>{r.Sa("Asin",s,void 0)},904815:s=>{r.Sa("Acos",s,void 0)},904867:s=>{r.Sa("Atan",s,void 0)},904919:s=>{r.Sa("Sinh",s,void 0)},904971:s=>{r.Sa("Cosh",s,void 0)},905023:s=>{r.Sa("Asinh",s,void 0)},905076:s=>{r.Sa("Acosh",s,void 0)},905129:s=>{r.Sa("Atanh",s,void 0)},905182:s=>{r.Sa("Tanh",s,void 0)},905234:s=>{r.Sa("Not",s,void 0)},905285:(s,c,g)=>{r.Sa("Clip",s,{min:c,max:g})},905354:s=>{r.Sa("Clip",s,void 0)},905406:(s,c)=>{r.Sa("Elu",s,{alpha:c})},905464:s=>{r.Sa("Relu",s,void 0)},905516:(s,c)=>{r.Sa("LeakyRelu",s,{alpha:c})},905580:(s,c)=>{r.Sa("ThresholdedRelu",s,{alpha:c})},905650:(s,c)=>{r.Sa("Cast",s,{to:c})},905708:s=>{r.Sa("Add",s,void 0)},905759:s=>{r.Sa("Sub",s,void 0)},905810:s=>{r.Sa("Mul",s,void 0)},905861:s=>{r.Sa("Div",s,void 0)},905912:s=>{r.Sa("Pow",s,void 0)},905963:s=>{r.Sa("Equal",s,void 0)},906016:s=>{r.Sa("Greater",s,void 0)},906071:s=>{r.Sa("GreaterOrEqual",s,void 0)},906133:s=>{r.Sa("Less",s,void 0)},906185:s=>{r.Sa("LessOrEqual",s,void 0)},906244:(s,c,g,$,I)=>{r.Sa("ReduceMean",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(B.subarray($>>>0,I>>>0)):[]})},906403:(s,c,g,$,I)=>{r.Sa("ReduceMax",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(B.subarray($>>>0,I>>>0)):[]})},906561:(s,c,g,$,I)=>{r.Sa("ReduceMin",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(B.subarray($>>>0,I>>>0)):[]})},906719:(s,c,g,$,I)=>{r.Sa("ReduceProd",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(B.subarray($>>>0,I>>>0)):[]})},906878:(s,c,g,$,I)=>{r.Sa("ReduceSum",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(B.subarray($>>>0,I>>>0)):[]})},907036:(s,c,g,$,I)=>{r.Sa("ReduceL1",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(B.subarray($>>>0,I>>>0)):[]})},907193:(s,c,g,$,I)=>{r.Sa("ReduceL2",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(B.subarray($>>>0,I>>>0)):[]})},907350:(s,c,g,$,I)=>{r.Sa("ReduceLogSum",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(B.subarray($>>>0,I>>>0)):[]})},907511:(s,c,g,$,I)=>{r.Sa("ReduceSumSquare",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(B.subarray($>>>0,I>>>0)):[]})},907675:(s,c,g,$,I)=>{r.Sa("ReduceLogSumExp",s,{keepDims:!!c,noopWithEmptyAxes:!!g,axes:$?Array.from(B.subarray($>>>0,I>>>0)):[]})},907839:s=>{r.Sa("Where",s,void 0)},907892:(s,c,g)=>{r.Sa("Transpose",s,{perm:c?Array.from(B.subarray(c>>>0,g>>>0)):[]})},908e3:(s,c,g,$,I,D,H,X,q,j,ne,fe,$e,k,ae)=>{r.Sa("ConvTranspose",s,{format:q?"NHWC":"NCHW",autoPad:c,dilations:[g],group:$,kernel_shape:[I],pads:[D,H],strides:[X],wIsConst:()=>!!M[j>>>0],outputPadding:ne?Array.from(B.subarray(ne>>>0,fe>>>0)):[],outputShape:$e?Array.from(B.subarray($e>>>0,k>>>0)):[],activation:Fe(ae)})},908402:(s,c,g,$,I,D,H,X,q,j,ne,fe,$e,k)=>{r.Sa("ConvTranspose",s,{format:X?"NHWC":"NCHW",autoPad:c,dilations:Array.from(B.subarray(g>>>0,(g>>>0)+2>>>0)),group:$,kernelShape:Array.from(B.subarray(I>>>0,(I>>>0)+2>>>0)),pads:Array.from(B.subarray(D>>>0,(D>>>0)+4>>>0)),strides:Array.from(B.subarray(H>>>0,(H>>>0)+2>>>0)),wIsConst:()=>!!M[q>>>0],outputPadding:j?Array.from(B.subarray(j>>>0,ne>>>0)):[],outputShape:fe?Array.from(B.subarray(fe>>>0,$e>>>0)):[],activation:Fe(k)})},908967:(s,c,g,$,I,D,H,X,q,j,ne,fe,$e,k,ae)=>{r.Sa("ConvTranspose",s,{format:q?"NHWC":"NCHW",autoPad:c,dilations:[g],group:$,kernel_shape:[I],pads:[D,H],strides:[X],wIsConst:()=>!!M[j>>>0],outputPadding:ne?Array.from(B.subarray(ne>>>0,fe>>>0)):[],outputShape:$e?Array.from(B.subarray($e>>>0,k>>>0)):[],activation:Fe(ae)})},909369:(s,c,g,$,I,D,H,X,q,j,ne,fe,$e,k)=>{r.Sa("ConvTranspose",s,{format:X?"NHWC":"NCHW",autoPad:c,dilations:Array.from(B.subarray(g>>>0,(g>>>0)+2>>>0)),group:$,kernelShape:Array.from(B.subarray(I>>>0,(I>>>0)+2>>>0)),pads:Array.from(B.subarray(D>>>0,(D>>>0)+4>>>0)),strides:Array.from(B.subarray(H>>>0,(H>>>0)+2>>>0)),wIsConst:()=>!!M[q>>>0],outputPadding:j?Array.from(B.subarray(j>>>0,ne>>>0)):[],outputShape:fe?Array.from(B.subarray(fe>>>0,$e>>>0)):[],activation:Fe(k)})},909934:(s,c)=>{r.Sa("GlobalAveragePool",s,{format:c?"NHWC":"NCHW"})},910025:(s,c,g,$,I,D,H,X,q,j,ne,fe,$e,k,ae,Ae)=>{r.Sa("AveragePool",s,{format:Ae?"NHWC":"NCHW",auto_pad:c,ceil_mode:g,count_include_pad:$,storage_order:I,dilations:[D,H],kernel_shape:[X,q],pads:[j,ne,fe,$e],strides:[k,ae]})},910309:(s,c)=>{r.Sa("GlobalAveragePool",s,{format:c?"NHWC":"NCHW"})},910400:(s,c,g,$,I,D,H,X,q,j,ne,fe,$e,k,ae,Ae)=>{r.Sa("AveragePool",s,{format:Ae?"NHWC":"NCHW",auto_pad:c,ceil_mode:g,count_include_pad:$,storage_order:I,dilations:[D,H],kernel_shape:[X,q],pads:[j,ne,fe,$e],strides:[k,ae]})},910684:(s,c)=>{r.Sa("GlobalMaxPool",s,{format:c?"NHWC":"NCHW"})},910771:(s,c,g,$,I,D,H,X,q,j,ne,fe,$e,k,ae,Ae)=>{r.Sa("MaxPool",s,{format:Ae?"NHWC":"NCHW",auto_pad:c,ceil_mode:g,count_include_pad:$,storage_order:I,dilations:[D,H],kernel_shape:[X,q],pads:[j,ne,fe,$e],strides:[k,ae]})},911051:(s,c)=>{r.Sa("GlobalMaxPool",s,{format:c?"NHWC":"NCHW"})},911138:(s,c,g,$,I,D,H,X,q,j,ne,fe,$e,k,ae,Ae)=>{r.Sa("MaxPool",s,{format:Ae?"NHWC":"NCHW",auto_pad:c,ceil_mode:g,count_include_pad:$,storage_order:I,dilations:[D,H],kernel_shape:[X,q],pads:[j,ne,fe,$e],strides:[k,ae]})},911418:(s,c,g,$,I)=>{r.Sa("Gemm",s,{alpha:c,beta:g,transA:$,transB:I})},911522:s=>{r.Sa("MatMul",s,void 0)},911576:(s,c,g,$)=>{r.Sa("ArgMax",s,{keepDims:!!c,selectLastIndex:!!g,axis:$})},911684:(s,c,g,$)=>{r.Sa("ArgMin",s,{keepDims:!!c,selectLastIndex:!!g,axis:$})},911792:(s,c)=>{r.Sa("Softmax",s,{axis:c})},911855:(s,c)=>{r.Sa("Concat",s,{axis:c})},911915:(s,c,g,$,I)=>{r.Sa("Split",s,{axis:c,numOutputs:g,splitSizes:$?Array.from(B.subarray($>>>0,I>>>0)):[]})},912055:s=>{r.Sa("Expand",s,void 0)},912109:(s,c)=>{r.Sa("Gather",s,{axis:Number(c)})},912180:(s,c)=>{r.Sa("GatherElements",s,{axis:Number(c)})},912259:(s,c,g,$,I,D,H,X,q,j,ne)=>{r.Sa("Resize",s,{antialias:c,axes:g?Array.from(B.subarray(g>>>0,$>>>0)):[],coordinateTransformMode:Fe(I),cubicCoeffA:D,excludeOutside:H,extrapolationValue:X,keepAspectRatioPolicy:Fe(q),mode:Fe(j),nearestMode:Fe(ne)})},912605:(s,c,g,$,I,D,H)=>{r.Sa("Slice",s,{starts:c?Array.from(B.subarray(c>>>0,g>>>0)):[],ends:$?Array.from(B.subarray($>>>0,I>>>0)):[],axes:D?Array.from(B.subarray(D>>>0,H>>>0)):[]})},912821:s=>{r.Sa("Tile",s,void 0)},912873:(s,c,g)=>{r.Sa("LayerNormalization",s,{axis:Number(c),epsilon:Number(g)})},912980:(s,c,g)=>{r.Sa("InstanceNormalization",s,{epsilon:c,format:g?"NHWC":"NCHW"})},913094:(s,c,g)=>{r.Sa("InstanceNormalization",s,{epsilon:c,format:g?"NHWC":"NCHW"})},913208:s=>{r.Sa("Range",s,void 0)},913261:(s,c)=>{r.Sa("Einsum",s,{equation:Fe(c)})},913342:(s,c,g,$,I)=>{r.Sa("Pad",s,{mode:c,value:g,pads:$?Array.from(B.subarray($>>>0,I>>>0)):[]})},913469:(s,c,g,$,I,D)=>{r.Sa("BatchNormalization",s,{epsilon:c,momentum:g,spatial:!!I,trainingMode:!!$,format:D?"NHWC":"NCHW"})},913638:(s,c,g,$,I,D)=>{r.Sa("BatchNormalization",s,{epsilon:c,momentum:g,spatial:!!I,trainingMode:!!$,format:D?"NHWC":"NCHW"})},913807:(s,c,g)=>{r.Sa("CumSum",s,{exclusive:Number(c),reverse:Number(g)})},913904:(s,c,g,$,I,D,H,X,q)=>{r.Sa("Attention",s,{numHeads:c,isUnidirectional:g,maskFilterValue:$,scale:I,doRotary:D,qkvHiddenSizes:H?Array.from(B.subarray(Number(X)>>>0,Number(X)+H>>>0)):[],pastPresentShareBuffer:!!q})},914176:s=>{r.Sa("Gelu",s,void 0)},914228:(s,c,g,$,I,D)=>{r.Sa("MultiHeadAttention",s,{numHeads:c,isUnidirectional:g,maskFilterValue:$,scale:I,doRotary:D})},914387:s=>{r.Sa("BiasAdd",s,void 0)},914442:s=>{r.Sa("BiasSplitGelu",s,void 0)},914503:(s,c)=>{r.Sa("SkipLayerNormalization",s,{epsilon:c})},914584:(s,c,g,$,I,D,H,X,q,j,ne,fe,$e)=>{r.Sa("Conv",s,{format:q?"NHWC":"NCHW",auto_pad:c,dilations:[g],group:$,kernel_shape:[I],pads:D?Array.from(B.subarray(D>>>0,H>>>0)):[],strides:[X],w_is_const:()=>!!M[j>>>0],activation:Fe(ne),activation_params:fe?Array.from(Pe.subarray(fe>>>0,$e>>>0)):[]})},914954:(s,c,g,$,I,D,H,X,q,j,ne,fe,$e,k,ae,Ae)=>{r.Sa("Conv",s,{format:fe?"NHWC":"NCHW",auto_pad:c,dilations:[g,$],group:I,kernel_shape:[D,H],pads:X?Array.from(B.subarray(X>>>0,q>>>0)):[],strides:[j,ne],w_is_const:()=>!!M[$e>>>0],activation:Fe(k),activation_params:ae?Array.from(Pe.subarray(ae>>>0,Ae>>>0)):[]})},915345:s=>{r.yb(s)},915379:(s,c)=>r.zb(s,c,r.fb.Ab,r.fb.errors)};function Vt(s){this.name="ExitStatus",this.message=`Program terminated with exit(${s})`,this.status=s}function Rt(s){this.cb=s-24,this.rb=function(c){te[this.cb+4>>>2>>>0]=c},this.qb=function(c){te[this.cb+8>>>2>>>0]=c},this.kb=function(c,g){this.jb(),this.rb(c),this.qb(g)},this.jb=function(){te[this.cb+16>>>2>>>0]=0}}var Jt=0,Wt=0,mr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Bt=(s,c,g)=>{c>>>=0;var $=c+g;for(g=c;s[g]&&!(g>=$);)++g;if(16<g-c&&s.buffer&&mr)return mr.decode(s.subarray(c,g));for($="";c<g;){var I=s[c++];if(I&128){var D=s[c++]&63;if((I&224)==192)$+=String.fromCharCode((I&31)<<6|D);else{var H=s[c++]&63;I=(I&240)==224?(I&15)<<12|D<<6|H:(I&7)<<18|D<<12|H<<6|s[c++]&63,65536>I?$+=String.fromCharCode(I):(I-=65536,$+=String.fromCharCode(55296|I>>10,56320|I&1023))}}else $+=String.fromCharCode(I)}return $},Fe=(s,c)=>(s>>>=0)?Bt(N,s,c):"",Et=s=>{for(var c=0,g=0;g<s.length;++g){var $=s.charCodeAt(g);127>=$?c++:2047>=$?c+=2:55296<=$&&57343>=$?(c+=4,++g):c+=3}return c},bt=(s,c,g,$)=>{if(g>>>=0,!(0<$))return 0;var I=g;$=g+$-1;for(var D=0;D<s.length;++D){var H=s.charCodeAt(D);if(55296<=H&&57343>=H){var X=s.charCodeAt(++D);H=65536+((H&1023)<<10)|X&1023}if(127>=H){if(g>=$)break;c[g++>>>0]=H}else{if(2047>=H){if(g+1>=$)break;c[g++>>>0]=192|H>>6}else{if(65535>=H){if(g+2>=$)break;c[g++>>>0]=224|H>>12}else{if(g+3>=$)break;c[g++>>>0]=240|H>>18,c[g++>>>0]=128|H>>12&63}c[g++>>>0]=128|H>>6&63}c[g++>>>0]=128|H&63}}return c[g>>>0]=0,g-I},fr=s=>{if(s===null)return"null";var c=typeof s;return c==="object"||c==="array"||c==="function"?s.toString():""+s},Gr,ot=s=>{for(var c="";N[s>>>0];)c+=Gr[N[s++>>>0]];return c},hr={},Nt={},gr={},ct;function Lr(s,c,g={}){var $=c.name;if(!s)throw new ct(`type "${$}" must have a positive integer typeid pointer`);if(Nt.hasOwnProperty(s)){if(g.tb)return;throw new ct(`Cannot register type \'${$}\' twice`)}Nt[s]=c,delete gr[s],hr.hasOwnProperty(s)&&(c=hr[s],delete hr[s],c.forEach(I=>I()))}function qe(s,c,g={}){if(!("argPackAdvance"in c))throw new TypeError("registerType registeredInstance requires argPackAdvance");Lr(s,c,g)}var yr=(s,c,g)=>{switch(c){case 1:return g?$=>M[$>>>0>>>0]:$=>N[$>>>0>>>0];case 2:return g?$=>Y[$>>>1>>>0]:$=>se[$>>>1>>>0];case 4:return g?$=>B[$>>>2>>>0]:$=>te[$>>>2>>>0];case 8:return g?$=>Ee[$>>>3]:$=>ee[$>>>3];default:throw new TypeError(`invalid integer width (${c}): ${s}`)}};function br(){this.$a=[void 0],this.nb=[]}var Oe=new br;function wr(s){s>>>=0,s>=Oe.cb&&--Oe.get(s).pb===0&&Oe.jb(s)}var ve=s=>{if(!s)throw new ct("Cannot use deleted val. handle = "+s);return Oe.get(s).value},it=s=>{switch(s){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return Oe.kb({pb:1,value:s})}};function Qt(s){return this.fromWireType(B[s>>>2>>>0])}var vr=(s,c)=>{switch(c){case 4:return function(g){return this.fromWireType(Pe[g>>>2>>>0])};case 8:return function(g){return this.fromWireType(be[g>>>3>>>0])};default:throw new TypeError(`invalid float width (${c}): ${s}`)}};function Hn(s){return this.fromWireType(te[s>>>2>>>0])}var $r=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Gn=(s,c)=>{for(var g=s>>1,$=g+c/2;!(g>=$)&&se[g>>>0];)++g;if(g<<=1,32<g-s&&$r)return $r.decode(N.subarray(s>>>0,g>>>0));for(g="",$=0;!($>=c/2);++$){var I=Y[s+2*$>>>1>>>0];if(I==0)break;g+=String.fromCharCode(I)}return g},me=(s,c,g)=>{if(g??=2147483647,2>g)return 0;g-=2;var $=c;g=g<2*s.length?g/2:s.length;for(var I=0;I<g;++I)Y[c>>>1>>>0]=s.charCodeAt(I),c+=2;return Y[c>>>1>>>0]=0,c-$},er=s=>2*s.length,Fr=(s,c)=>{for(var g=0,$="";!(g>=c/4);){var I=B[s+4*g>>>2>>>0];if(I==0)break;++g,65536<=I?(I-=65536,$+=String.fromCharCode(55296|I>>10,56320|I&1023)):$+=String.fromCharCode(I)}return $},Ln=(s,c,g)=>{if(c>>>=0,g??=2147483647,4>g)return 0;var $=c;g=$+g-4;for(var I=0;I<s.length;++I){var D=s.charCodeAt(I);if(55296<=D&&57343>=D){var H=s.charCodeAt(++I);D=65536+((D&1023)<<10)|H&1023}if(B[c>>>2>>>0]=D,c+=4,c+4>g)break}return B[c>>>2>>>0]=0,c-$},jr=s=>{for(var c=0,g=0;g<s.length;++g){var $=s.charCodeAt(g);55296<=$&&57343>=$&&++g,c+=4}return c},_r=(s,c)=>{var g=Nt[s];if(g===void 0)throw s=Ft(s),g=ot(s),at(s),new ct(c+" has unknown type "+g);return g},Sr=(s,c,g)=>{var $=[];return s=s.toWireType($,g),$.length&&(te[c>>>2>>>0]=it($)),s},Ht=s=>{try{s()}catch(c){Ge(c)}};function qr(){var s=ue,c={};for(let[g,$]of Object.entries(s))c[g]=typeof $=="function"?function(){Dt.push(g);try{return $.apply(null,arguments)}finally{O||(Dt.pop(),Je&&mt===1&&Dt.length===0&&(mt=0,Ht(ln),typeof Fibers<"u"&&Fibers.Hb()))}}:$;return c}var mt=0,Je=null,xr=0,Dt=[],Cr={},Ar={},Kr=0,tr=null,Yr=[];function Zr(){return new Promise((s,c)=>{tr={resolve:s,reject:c}})}function Xr(){var s=Mt(65548),c=s+12;te[s>>>2>>>0]=c,te[s+4>>>2>>>0]=c+65536,c=Dt[0];var g=Cr[c];return g===void 0&&(g=Kr++,Cr[c]=g,Ar[g]=c),B[s+8>>>2>>>0]=g,s}function Jr(s){if(!O){if(mt===0){var c=!1,g=!1;s(($=0)=>{if(!O&&(xr=$,c=!0,g)){mt=2,Ht(()=>ft(Je)),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.resume(),$=!1;try{var I=(0,ue[Ar[B[Je+8>>>2>>>0]]])()}catch(X){I=X,$=!0}var D=!1;if(!Je){var H=tr;H&&(tr=null,($?H.reject:H.resolve)(I),D=!0)}if($&&!D)throw I}}),g=!0,c||(mt=1,Je=Xr(),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.pause(),Ht(()=>jt(Je)))}else mt===2?(mt=0,Ht(dt),at(Je),Je=null,Yr.forEach($=>{if(!O)try{$();try{U=U=$=U,r.onExit?.($),O=!0,p($,new Vt($))}catch(I){I instanceof Vt||I=="unwind"||p(1,I)}}catch(I){I instanceof Vt||I=="unwind"||p(1,I)}})):Ge(`invalid state: ${mt}`);return xr}}function Ir(s){return Jr(c=>{s().then(c)})}var Gt=[],Qr={},rr=s=>{var c=Qr[s];return c===void 0?ot(s):c},Tr=()=>typeof globalThis=="object"?globalThis:Function("return this")(),lt=s=>{var c=Gt.length;return Gt.push(s),c},Er=(s,c)=>{for(var g=Array(s),$=0;$<s;++$)g[$]=_r(te[c+4*$>>>2>>>0],"parameter "+$);return g},nr=(s,c)=>Object.defineProperty(c,"name",{value:s});function Fn(s){var c=Function;if(!(c instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof c} which is not a function`);var g=nr(c.name||"unknownFunctionName",function(){});return g.prototype=c.prototype,g=new g,s=c.apply(g,s),s instanceof Object?s:g}var Qe=s=>s%4===0&&(s%100!==0||s%400===0),en=[0,31,60,91,121,152,182,213,244,274,305,335],pt=[0,31,59,90,120,151,181,212,243,273,304,334],Pr=s=>{var c=Et(s)+1,g=Mt(c);return g&&bt(s,N,g,c),g},or=[],et=(s,c)=>{or.length=0;for(var g;g=N[s++>>>0];){var $=g!=105;$&=g!=112,c+=$&&c%8?4:0,or.push(g==112?te[c>>>2>>>0]:g==106?Ee[c>>>3]:g==105?B[c>>>2>>>0]:be[c>>>3>>>0]),c+=$?8:4}return or},Lt={},Ke=()=>{if(!tt){var s={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:a||"./this.program"},c;for(c in Lt)Lt[c]===void 0?delete s[c]:s[c]=Lt[c];var g=[];for(c in s)g.push(`${c}=${s[c]}`);tt=g}return tt},tt,tn=[null,[],[]],rn=[31,29,31,30,31,30,31,31,30,31,30,31],nn=[31,28,31,30,31,30,31,31,30,31,30,31];function on(s){var c=Array(Et(s)+1);return bt(s,c,0,c.length),c}function an(s,c,g,$){function I(k,ae,Ae){for(k=typeof k=="number"?k.toString():k||"";k.length<ae;)k=Ae[0]+k;return k}function D(k,ae){return I(k,ae,"0")}function H(k,ae){function Ae(kt){return 0>kt?-1:0<kt?1:0}var Ot;return(Ot=Ae(k.getFullYear()-ae.getFullYear()))===0&&(Ot=Ae(k.getMonth()-ae.getMonth()))===0&&(Ot=Ae(k.getDate()-ae.getDate())),Ot}function X(k){switch(k.getDay()){case 0:return new Date(k.getFullYear()-1,11,29);case 1:return k;case 2:return new Date(k.getFullYear(),0,3);case 3:return new Date(k.getFullYear(),0,2);case 4:return new Date(k.getFullYear(),0,1);case 5:return new Date(k.getFullYear()-1,11,31);case 6:return new Date(k.getFullYear()-1,11,30)}}function q(k){var ae=k.ab;for(k=new Date(new Date(k.bb+1900,0,1).getTime());0<ae;){var Ae=k.getMonth(),Ot=(Qe(k.getFullYear())?rn:nn)[Ae];if(ae>Ot-k.getDate())ae-=Ot-k.getDate()+1,k.setDate(1),11>Ae?k.setMonth(Ae+1):(k.setMonth(0),k.setFullYear(k.getFullYear()+1));else{k.setDate(k.getDate()+ae);break}}return Ae=new Date(k.getFullYear()+1,0,4),ae=X(new Date(k.getFullYear(),0,4)),Ae=X(Ae),0>=H(ae,k)?0>=H(Ae,k)?k.getFullYear()+1:k.getFullYear():k.getFullYear()-1}s>>>=0,c>>>=0,g>>>=0,$>>>=0;var j=te[$+40>>>2>>>0];$={Db:B[$>>>2>>>0],Cb:B[$+4>>>2>>>0],hb:B[$+8>>>2>>>0],mb:B[$+12>>>2>>>0],ib:B[$+16>>>2>>>0],bb:B[$+20>>>2>>>0],Wa:B[$+24>>>2>>>0],ab:B[$+28>>>2>>>0],Gb:B[$+32>>>2>>>0],Bb:B[$+36>>>2>>>0],Eb:j?Fe(j):""},g=Fe(g),j={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ne in j)g=g.replace(new RegExp(ne,"g"),j[ne]);var fe="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),$e="January February March April May June July August September October November December".split(" ");j={"%a":k=>fe[k.Wa].substring(0,3),"%A":k=>fe[k.Wa],"%b":k=>$e[k.ib].substring(0,3),"%B":k=>$e[k.ib],"%C":k=>D((k.bb+1900)/100|0,2),"%d":k=>D(k.mb,2),"%e":k=>I(k.mb,2," "),"%g":k=>q(k).toString().substring(2),"%G":k=>q(k),"%H":k=>D(k.hb,2),"%I":k=>(k=k.hb,k==0?k=12:12<k&&(k-=12),D(k,2)),"%j":k=>{for(var ae=0,Ae=0;Ae<=k.ib-1;ae+=(Qe(k.bb+1900)?rn:nn)[Ae++]);return D(k.mb+ae,3)},"%m":k=>D(k.ib+1,2),"%M":k=>D(k.Cb,2),"%n":()=>`\n`,"%p":k=>0<=k.hb&&12>k.hb?"AM":"PM","%S":k=>D(k.Db,2),"%t":()=>"	","%u":k=>k.Wa||7,"%U":k=>D(Math.floor((k.ab+7-k.Wa)/7),2),"%V":k=>{var ae=Math.floor((k.ab+7-(k.Wa+6)%7)/7);if(2>=(k.Wa+371-k.ab-2)%7&&ae++,ae)ae==53&&(Ae=(k.Wa+371-k.ab)%7,Ae==4||Ae==3&&Qe(k.bb)||(ae=1));else{ae=52;var Ae=(k.Wa+7-k.ab-1)%7;(Ae==4||Ae==5&&Qe(k.bb%400-1))&&ae++}return D(ae,2)},"%w":k=>k.Wa,"%W":k=>D(Math.floor((k.ab+7-(k.Wa+6)%7)/7),2),"%y":k=>(k.bb+1900).toString().substring(2),"%Y":k=>k.bb+1900,"%z":k=>{k=k.Bb;var ae=0<=k;return k=Math.abs(k)/60,(ae?"+":"-")+("0000"+(k/60*100+k%60)).slice(-4)},"%Z":k=>k.Eb,"%%":()=>"%"},g=g.replace(/%%/g,"\\0\\0");for(ne in j)g.includes(ne)&&(g=g.replace(new RegExp(ne,"g"),j[ne]($)));return g=g.replace(/\\0\\0/g,"%"),ne=on(g),ne.length>c?0:(M.set(ne,s>>>0),ne.length-1)}for(var sn=Array(256),ir=0;256>ir;++ir)sn[ir]=String.fromCharCode(ir);Gr=sn,ct=r.BindingError=class extends Error{constructor(s){super(s),this.name="BindingError"}},r.InternalError=class extends Error{constructor(s){super(s),this.name="InternalError"}},Object.assign(br.prototype,{get(s){return this.$a[s]},has(s){return this.$a[s]!==void 0},kb(s){var c=this.nb.pop()||this.$a.length;return this.$a[c]=s,c},jb(s){this.$a[s]=void 0,this.nb.push(s)}}),Oe.$a.push({value:void 0},{value:null},{value:!0},{value:!1}),Oe.cb=Oe.$a.length,r.count_emval_handles=()=>{for(var s=0,c=Oe.cb;c<Oe.$a.length;++c)Oe.$a[c]!==void 0&&++s;return s};var jn={ia:function(s,c,g){return Ir(async()=>{await r.wb(s,c,g)})},a:function(s,c,g){throw s>>>=0,new Rt(s).kb(c>>>0,g>>>0),Jt=s,Wt++,Jt},w:function(){return 0},ca:function(){},P:function(){},R:function(){},J:function(){return 0},aa:function(){},X:function(){},$:function(){},D:function(){},Q:function(){},N:function(){},ba:function(){},O:function(){},G:function(s,c,g,$,I){c>>>=0,c=ot(c);var D=c.indexOf("u")!=-1;D&&(I=(1n<<64n)-1n),qe(s>>>0,{name:c,fromWireType:H=>H,toWireType:function(H,X){if(typeof X!="bigint"&&typeof X!="number")throw new TypeError(`Cannot convert "${fr(X)}" to ${this.name}`);if(X<$||X>I)throw new TypeError(`Passing a number "${fr(X)}" from JS side to C/C++ side to an argument of type "${c}", which is outside the valid range [${$}, ${I}]!`);return X},argPackAdvance:8,readValueFromPointer:yr(c,g>>>0,!D),eb:null})},ga:function(s,c,g,$){c=ot(c>>>0),qe(s>>>0,{name:c,fromWireType:function(I){return!!I},toWireType:function(I,D){return D?g:$},argPackAdvance:8,readValueFromPointer:function(I){return this.fromWireType(N[I>>>0])},eb:null})},fa:function(s,c){c=ot(c>>>0),qe(s>>>0,{name:c,fromWireType:g=>{var $=ve(g);return wr(g),$},toWireType:(g,$)=>it($),argPackAdvance:8,readValueFromPointer:Qt,eb:null})},F:function(s,c,g){c=ot(c>>>0),qe(s>>>0,{name:c,fromWireType:$=>$,toWireType:($,I)=>I,argPackAdvance:8,readValueFromPointer:vr(c,g>>>0),eb:null})},t:function(s,c,g,$,I){if(s>>>=0,g>>>=0,c=ot(c>>>0),I===-1&&(I=4294967295),I=X=>X,$===0){var D=32-8*g;I=X=>X<<D>>>D}var H=c.includes("unsigned")?function(X,q){return q>>>0}:function(X,q){return q};qe(s,{name:c,fromWireType:I,toWireType:H,argPackAdvance:8,readValueFromPointer:yr(c,g,$!==0),eb:null})},n:function(s,c,g){function $(D){return new I(M.buffer,te[D+4>>>2>>>0],te[D>>>2>>>0])}var I=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][c];g=ot(g>>>0),qe(s>>>0,{name:g,fromWireType:$,argPackAdvance:8,readValueFromPointer:$},{tb:!0})},H:function(s,c){c=ot(c>>>0);var g=c==="std::string";qe(s>>>0,{name:c,fromWireType:function($){var I=te[$>>>2>>>0],D=$+4;if(g)for(var H=D,X=0;X<=I;++X){var q=D+X;if(X==I||N[q>>>0]==0){if(H=Fe(H,q-H),j===void 0)var j=H;else j+=String.fromCharCode(0),j+=H;H=q+1}}else{for(j=Array(I),X=0;X<I;++X)j[X]=String.fromCharCode(N[D+X>>>0]);j=j.join("")}return at($),j},toWireType:function($,I){I instanceof ArrayBuffer&&(I=new Uint8Array(I));var D=typeof I=="string";if(!(D||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array))throw new ct("Cannot pass non-string to std::string");var H=g&&D?Et(I):I.length,X=Mt(4+H+1),q=X+4;if(te[X>>>2>>>0]=H,g&&D)bt(I,N,q,H+1);else if(D)for(D=0;D<H;++D){var j=I.charCodeAt(D);if(255<j)throw at(q),new ct("String has UTF-16 code units that do not fit in 8 bits");N[q+D>>>0]=j}else for(D=0;D<H;++D)N[q+D>>>0]=I[D];return $!==null&&$.push(at,X),X},argPackAdvance:8,readValueFromPointer:Hn,eb($){at($)}})},y:function(s,c,g){if(c>>>=0,g>>>=0,g=ot(g),c===2)var $=Gn,I=me,D=er,H=()=>se,X=1;else c===4&&($=Fr,I=Ln,D=jr,H=()=>te,X=2);qe(s>>>0,{name:g,fromWireType:q=>{for(var j=te[q>>>2>>>0],ne=H(),fe,$e=q+4,k=0;k<=j;++k){var ae=q+4+k*c;(k==j||ne[ae>>>X]==0)&&($e=$($e,ae-$e),fe===void 0?fe=$e:(fe+=String.fromCharCode(0),fe+=$e),$e=ae+c)}return at(q),fe},toWireType:(q,j)=>{if(typeof j!="string")throw new ct(`Cannot pass non-string to C++ string type ${g}`);var ne=D(j),fe=Mt(4+ne+c);return te[fe>>>2]=ne>>X,I(j,fe+4,ne+c),q!==null&&q.push(at,fe),fe},argPackAdvance:8,readValueFromPointer:Qt,eb(q){at(q)}})},ha:function(s,c){c=ot(c>>>0),qe(s>>>0,{ub:!0,name:c,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},da:()=>1,s:function(s,c,g){return c>>>=0,g>>>=0,s=ve(s>>>0),c=_r(c,"emval::as"),Sr(c,g,s)},v:function(s){return s>>>=0,Ir(()=>(s=ve(s),s.then(it)))},o:function(s,c,g,$){return g>>>=0,$>>>=0,s=Gt[s>>>0],c=ve(c>>>0),s(null,c,g,$)},k:function(s,c,g,$,I){return g>>>=0,$>>>=0,I>>>=0,s=Gt[s>>>0],c=ve(c>>>0),g=rr(g),s(c,c[g],$,I)},b:wr,z:function(s,c){return c>>>=0,s=ve(s>>>0),c=ve(c),s==c},m:function(s){return s>>>=0,s===0?it(Tr()):(s=rr(s),it(Tr()[s]))},i:function(s,c,g){c=Er(s,c>>>0);var $=c.shift();s--;var I=`return function (obj, func, destructorsRef, args) {\n`,D=0,H=[];g===0&&H.push("obj");for(var X=["retType"],q=[$],j=0;j<s;++j)H.push("arg"+j),X.push("argType"+j),q.push(c[j]),I+=`  var arg${j} = argType${j}.readValueFromPointer(args${D?"+"+D:""});\n`,D+=c[j].argPackAdvance;for(I+=`  var rv = ${g===1?"new func":"func.call"}(${H.join(", ")});\n`,j=0;j<s;++j)c[j].deleteObject&&(I+=`  argType${j}.deleteObject(arg${j});\n`);return $.ub||(X.push("emval_returnValue"),q.push(Sr),I+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),X.push(I+`};\n`),s=Fn(X).apply(null,q),g=`methodCaller<(${c.map(ne=>ne.name).join(", ")}) => ${$.name}>`,lt(nr(g,s))},r:function(s,c){return c>>>=0,s=ve(s>>>0),c=ve(c),it(s[c])},e:function(s){s>>>=0,4<s&&(Oe.get(s).pb+=1)},u:function(){return it([])},l:function(s){s=ve(s>>>0);for(var c=Array(s.length),g=0;g<s.length;g++)c[g]=s[g];return it(c)},d:function(s){return it(rr(s>>>0))},j:function(){return it({})},h:function(s){s>>>=0;for(var c=ve(s);c.length;){var g=c.pop();c.pop()(g)}wr(s)},g:function(s,c,g){c>>>=0,g>>>=0,s=ve(s>>>0),c=ve(c),g=ve(g),s[c]=g},c:function(s,c){return c>>>=0,s=_r(s>>>0,"_emval_take_value"),s=s.readValueFromPointer(c),it(s)},U:function(s,c){s=-9007199254740992>s||9007199254740992<s?NaN:Number(s),c>>>=0,s=new Date(1e3*s),B[c>>>2>>>0]=s.getUTCSeconds(),B[c+4>>>2>>>0]=s.getUTCMinutes(),B[c+8>>>2>>>0]=s.getUTCHours(),B[c+12>>>2>>>0]=s.getUTCDate(),B[c+16>>>2>>>0]=s.getUTCMonth(),B[c+20>>>2>>>0]=s.getUTCFullYear()-1900,B[c+24>>>2>>>0]=s.getUTCDay(),B[c+28>>>2>>>0]=(s.getTime()-Date.UTC(s.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},V:function(s,c){s=-9007199254740992>s||9007199254740992<s?NaN:Number(s),c>>>=0,s=new Date(1e3*s),B[c>>>2>>>0]=s.getSeconds(),B[c+4>>>2>>>0]=s.getMinutes(),B[c+8>>>2>>>0]=s.getHours(),B[c+12>>>2>>>0]=s.getDate(),B[c+16>>>2>>>0]=s.getMonth(),B[c+20>>>2>>>0]=s.getFullYear()-1900,B[c+24>>>2>>>0]=s.getDay(),B[c+28>>>2>>>0]=(Qe(s.getFullYear())?en:pt)[s.getMonth()]+s.getDate()-1|0,B[c+36>>>2>>>0]=-(60*s.getTimezoneOffset());var g=new Date(s.getFullYear(),6,1).getTimezoneOffset(),$=new Date(s.getFullYear(),0,1).getTimezoneOffset();B[c+32>>>2>>>0]=(g!=$&&s.getTimezoneOffset()==Math.min($,g))|0},W:function(s){s>>>=0;var c=new Date(B[s+20>>>2>>>0]+1900,B[s+16>>>2>>>0],B[s+12>>>2>>>0],B[s+8>>>2>>>0],B[s+4>>>2>>>0],B[s>>>2>>>0],0),g=B[s+32>>>2>>>0],$=c.getTimezoneOffset(),I=new Date(c.getFullYear(),6,1).getTimezoneOffset(),D=new Date(c.getFullYear(),0,1).getTimezoneOffset(),H=Math.min(D,I);return 0>g?B[s+32>>>2>>>0]=+(I!=D&&H==$):0<g!=(H==$)&&(I=Math.max(D,I),c.setTime(c.getTime()+6e4*((0<g?H:I)-$))),B[s+24>>>2>>>0]=c.getDay(),B[s+28>>>2>>>0]=(Qe(c.getFullYear())?en:pt)[c.getMonth()]+c.getDate()-1|0,B[s>>>2>>>0]=c.getSeconds(),B[s+4>>>2>>>0]=c.getMinutes(),B[s+8>>>2>>>0]=c.getHours(),B[s+12>>>2>>>0]=c.getDate(),B[s+16>>>2>>>0]=c.getMonth(),B[s+20>>>2>>>0]=c.getYear(),s=c.getTime(),isNaN(s)?(B[un()>>>2>>>0]=61,s=-1):s/=1e3,BigInt(s)},S:function(){return-52},T:function(){},L:function(s,c,g){function $(q){return(q=q.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?q[1]:"GMT"}g>>>=0;var I=new Date().getFullYear(),D=new Date(I,0,1),H=new Date(I,6,1);I=D.getTimezoneOffset();var X=H.getTimezoneOffset();te[s>>>0>>>2>>>0]=60*Math.max(I,X),B[c>>>0>>>2>>>0]=+(I!=X),s=$(D),c=$(H),s=Pr(s),c=Pr(c),X<I?(te[g>>>2>>>0]=s,te[g+4>>>2>>>0]=c):(te[g>>>2>>>0]=c,te[g+4>>>2>>>0]=s)},A:()=>{Ge("")},f:function(s,c,g){return s>>>=0,c=et(c>>>0,g>>>0),Tt[s].apply(null,c)},I:function(s,c,g){return s>>>=0,c=et(c>>>0,g>>>0),Tt[s].apply(null,c)},E:()=>Date.now(),M:function(){return 4294901760},q:()=>performance.now(),K:function(s){s>>>=0;var c=N.length;if(4294901760<s)return!1;for(var g=1;4>=g;g*=2){var $=c*(1+.2/g);$=Math.min($,s+100663296);var I=Math;$=Math.max(s,$);e:{I=(I.min.call(I,4294901760,$+(65536-$%65536)%65536)-E.buffer.byteLength+65535)/65536;try{E.grow(I),Me();var D=1;break e}catch{}D=void 0}if(D)return!0}return!1},Z:function(s,c){s>>>=0,c>>>=0;var g=0;return Ke().forEach(($,I)=>{var D=c+g;for(I=te[s+4*I>>>2>>>0]=D,D=0;D<$.length;++D)M[I++>>>0>>>0]=$.charCodeAt(D);M[I>>>0>>>0]=0,g+=$.length+1}),0},_:function(s,c){s>>>=0,c>>>=0;var g=Ke();te[s>>>2>>>0]=g.length;var $=0;return g.forEach(I=>$+=I.length+1),te[c>>>2>>>0]=$,0},x:()=>52,C:function(){return 52},Y:function(){return 70},B:function(s,c,g,$){c>>>=0,g>>>=0,$>>>=0;for(var I=0,D=0;D<g;D++){var H=te[c>>>2>>>0],X=te[c+4>>>2>>>0];c+=8;for(var q=0;q<X;q++){var j=N[H+q>>>0],ne=tn[s];j===0||j===10?((s===1?C:S)(Bt(ne,0)),ne.length=0):ne.push(j)}I+=X}return te[$>>>2>>>0]=I,0},ea:an,p:function(s,c,g,$){return an(s>>>0,c>>>0,g>>>0,$>>>0)}},ue=function(){function s(g){return ue=g.exports,ue=qr(),ue=dn(),E=ue.ja,Me(),ye.unshift(ue.ka),we--,we==0&&(ze!==null&&(clearInterval(ze),ze=null),Re&&(g=Re,Re=null,g())),ue}var c={a:jn};if(we++,r.instantiateWasm)try{return r.instantiateWasm(c,s)}catch(g){S(`Module.instantiateWasm callback failed with error: ${g}`),i(g)}return It(c,function(g){s(g.instance)}).catch(i),{}}();r._OrtInit=(s,c)=>(r._OrtInit=ue.la)(s,c),r._OrtGetLastError=(s,c)=>(r._OrtGetLastError=ue.ma)(s,c),r._OrtCreateSessionOptions=(s,c,g,$,I,D,H,X,q,j)=>(r._OrtCreateSessionOptions=ue.na)(s,c,g,$,I,D,H,X,q,j),r._OrtAppendExecutionProvider=(s,c)=>(r._OrtAppendExecutionProvider=ue.oa)(s,c),r._OrtAddFreeDimensionOverride=(s,c,g)=>(r._OrtAddFreeDimensionOverride=ue.pa)(s,c,g),r._OrtAddSessionConfigEntry=(s,c,g)=>(r._OrtAddSessionConfigEntry=ue.qa)(s,c,g),r._OrtReleaseSessionOptions=s=>(r._OrtReleaseSessionOptions=ue.ra)(s),r._OrtCreateSession=(s,c,g)=>(r._OrtCreateSession=ue.sa)(s,c,g),r._OrtReleaseSession=s=>(r._OrtReleaseSession=ue.ta)(s),r._OrtGetInputOutputCount=(s,c,g)=>(r._OrtGetInputOutputCount=ue.ua)(s,c,g),r._OrtGetInputName=(s,c)=>(r._OrtGetInputName=ue.va)(s,c),r._OrtGetOutputName=(s,c)=>(r._OrtGetOutputName=ue.wa)(s,c),r._OrtFree=s=>(r._OrtFree=ue.xa)(s),r._OrtCreateTensor=(s,c,g,$,I,D)=>(r._OrtCreateTensor=ue.ya)(s,c,g,$,I,D),r._OrtGetTensorData=(s,c,g,$,I)=>(r._OrtGetTensorData=ue.za)(s,c,g,$,I),r._OrtReleaseTensor=s=>(r._OrtReleaseTensor=ue.Aa)(s),r._OrtCreateRunOptions=(s,c,g,$)=>(r._OrtCreateRunOptions=ue.Ba)(s,c,g,$),r._OrtAddRunConfigEntry=(s,c,g)=>(r._OrtAddRunConfigEntry=ue.Ca)(s,c,g),r._OrtReleaseRunOptions=s=>(r._OrtReleaseRunOptions=ue.Da)(s),r._OrtCreateBinding=s=>(r._OrtCreateBinding=ue.Ea)(s),r._OrtBindInput=(s,c,g)=>(r._OrtBindInput=ue.Fa)(s,c,g),r._OrtBindOutput=(s,c,g,$)=>(r._OrtBindOutput=ue.Ga)(s,c,g,$),r._OrtClearBoundOutputs=s=>(r._OrtClearBoundOutputs=ue.Ha)(s),r._OrtReleaseBinding=s=>(r._OrtReleaseBinding=ue.Ia)(s),r._OrtRunWithBinding=(s,c,g,$,I)=>(r._OrtRunWithBinding=ue.Ja)(s,c,g,$,I),r._OrtRun=(s,c,g,$,I,D,H,X)=>(r._OrtRun=ue.Ka)(s,c,g,$,I,D,H,X),r._OrtEndProfiling=s=>(r._OrtEndProfiling=ue.La)(s),r._JsepOutput=(s,c,g)=>(r._JsepOutput=ue.Ma)(s,c,g),r._JsepGetNodeName=s=>(r._JsepGetNodeName=ue.Na)(s);var un=()=>(un=ue.Oa)(),Mt=r._malloc=s=>(Mt=r._malloc=ue.Pa)(s),at=r._free=s=>(at=r._free=ue.Qa)(s),Ft=s=>(Ft=ue.Ra)(s),ar=()=>(ar=ue.Ta)(),sr=s=>(sr=ue.Ua)(s),Or=s=>(Or=ue.Va)(s),jt=s=>(jt=ue.Xa)(s),ln=()=>(ln=ue.Ya)(),ft=s=>(ft=ue.Za)(s),dt=()=>(dt=ue._a)();r.___start_em_js=915491,r.___stop_em_js=915652;function dn(){var s=ue;s=Object.assign({},s);var c=$=>()=>$()>>>0,g=$=>I=>$(I)>>>0;return s.Oa=c(s.Oa),s.Pa=g(s.Pa),s.Ra=g(s.Ra),s.Ta=c(s.Ta),s.Va=g(s.Va),s}r.stackAlloc=Or,r.stackSave=ar,r.stackRestore=sr,r.UTF8ToString=Fe,r.stringToUTF8=(s,c,g)=>bt(s,N,c,g),r.lengthBytesUTF8=Et;var Pt;Re=function s(){Pt||kr(),Pt||(Re=s)};function kr(){if(!(0<we)){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;){var s=r.preRun.shift();pe.unshift(s)}for(;0<pe.length;)pe.shift()(r);if(!(0<we||Pt||(Pt=!0,r.calledRun=!0,O))){for(;0<ye.length;)ye.shift()(r);for(o(r);0<de.length;)de.shift()(r)}}}return kr(),t.ready}})();typeof wi=="object"&&typeof io=="object"?io.exports=bi:typeof define=="function"&&define.amd&&define([],()=>bi)});var $i=Br(()=>{});var _i=Br(()=>{});var Si={};hn(Si,{cpus:()=>Vl});var Vl,xi=Q(()=>{Vl=void 0});var Ii=Br((Ai,ao)=>{"use strict";var Ci=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){function r(){return be.buffer!=de.buffer&&ke(),de}function o(){return be.buffer!=de.buffer&&ke(),we}function i(){return be.buffer!=de.buffer&&ke(),ze}function u(){return be.buffer!=de.buffer&&ke(),Re}function a(){return be.buffer!=de.buffer&&ke(),Ge}function p(){return be.buffer!=de.buffer&&ke(),F}function m(){return be.buffer!=de.buffer&&ke(),ie}function h(){return be.buffer!=de.buffer&&ke(),nt}var d=t,y,w;d.ready=new Promise((n,l)=>{y=n,w=l}),d.mountExternalData=(n,l)=>{(d.Fb||(d.Fb=new Map)).set(n,l)},d.unmountExternalData=()=>{delete d.Fb},d.jsepInit=(n,l,f,b,A,P,z,L)=>{d.rc=n,d.$b=l,d.bc=f,d.Ob=b,d.ac=A,d.eb=P,d.cc=z,d.dc=L,l=(Z,K,oe)=>(...ge)=>{let Se=dt,R=K?.();ge=Z(...ge);let le=K?.();return R!==le&&(Z=le,oe(R),K=oe=null),dt!=Se?I():ge},f=Z=>async(...K)=>{try{if(d.Eb)throw Error("Session already started");let oe=d.Eb={fc:K[0],errors:[]},ge=await Z(...K);if(d.Eb!==oe)throw Error("Session mismatch");n.flush();let Se=oe.errors;if(0<Se.length){let R=await Promise.all(Se);if(R=R.filter(le=>le),0<R.length)throw Error(R.join(`\n`))}return ge}finally{d.Eb=null}},d._OrtCreateSession=l(d._OrtCreateSession,()=>d._OrtCreateSession,Z=>d._OrtCreateSession=Z),d._OrtRun=f(l(d._OrtRun,()=>d._OrtRun,Z=>d._OrtRun=Z)),d._OrtRunWithBinding=f(l(d._OrtRunWithBinding,()=>d._OrtRunWithBinding,Z=>d._OrtRunWithBinding=Z)),d._OrtBindInput=l(d._OrtBindInput,()=>d._OrtBindInput,Z=>d._OrtBindInput=Z),d.jsepRegisterBuffer=(Z,K,oe,ge)=>n.registerBuffer(Z,K,oe,ge),d.jsepUnregisterBuffers=Z=>{n.unregisterBuffers(Z)},d.jsepGetBuffer=Z=>n.getBuffer(Z),d.jsepCreateDownloader=(Z,K,oe)=>n.createDownloader(Z,K,oe),d.jsepOnRunStart=()=>n.onRunStart()};var _=Object.assign({},d),v="./this.program",x=(n,l)=>{throw l},T=typeof window=="object",C=typeof importScripts=="function",S=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",E=d.ENVIRONMENT_IS_PTHREAD||!1,O="";function U(n){return d.locateFile?d.locateFile(n,O):O+n}var M,N,Y;if(S){var se=(ro(),ur(to)),B=(oo(),ur(no));O=C?B.dirname(O)+"/":__dirname+"/",M=(l,f)=>(l=Et(l)?new URL(l):B.normalize(l),se.readFileSync(l,f?void 0:"utf8")),Y=l=>(l=M(l,!0),l.buffer||(l=new Uint8Array(l)),l),N=(l,f,b,A=!0)=>{l=Et(l)?new URL(l):B.normalize(l),se.readFile(l,A?void 0:"utf8",(P,z)=>{P?b(P):f(A?z.buffer:z)})},!d.thisProgram&&1<process.argv.length&&(v=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),x=(l,f)=>{throw process.exitCode=l,f},d.inspect=()=>"[Emscripten Module object]";let n;try{n=$i()}catch(l){throw console.error(\'The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?\'),l}global.Worker=n.Worker}else(T||C)&&(C?O=self.location.href:typeof document<"u"&&document.currentScript&&(O=document.currentScript.src),typeof e<"u"&&e&&(O=e),O.indexOf("blob:")!==0?O=O.substr(0,O.replace(/[?#].*/,"").lastIndexOf("/")+1):O="",S||(M=n=>{var l=new XMLHttpRequest;return l.open("GET",n,!1),l.send(null),l.responseText},C&&(Y=n=>{var l=new XMLHttpRequest;return l.open("GET",n,!1),l.responseType="arraybuffer",l.send(null),new Uint8Array(l.response)}),N=(n,l,f)=>{var b=new XMLHttpRequest;b.open("GET",n,!0),b.responseType="arraybuffer",b.onload=()=>{b.status==200||b.status==0&&b.response?l(b.response):f()},b.onerror=f,b.send(null)}));S&&typeof performance>"u"&&(global.performance=_i().performance);var te=console.log.bind(console),Pe=console.error.bind(console);S&&(te=(...n)=>se.writeSync(1,n.join(" ")+`\n`),Pe=(...n)=>se.writeSync(2,n.join(" ")+`\n`));var Ee=te,ee=Pe;Object.assign(d,_),_=null,typeof WebAssembly!="object"&&Bt("no native wasm support detected");var be,Me,pe=!1,ye,de,we,ze,Re,Ge,F,ie,he,Xe,nt;function ke(){var n=be.buffer;d.HEAP8=de=new Int8Array(n),d.HEAP16=ze=new Int16Array(n),d.HEAPU8=we=new Uint8Array(n),d.HEAPU16=Re=new Uint16Array(n),d.HEAP32=Ge=new Int32Array(n),d.HEAPU32=F=new Uint32Array(n),d.HEAPF32=ie=new Float32Array(n),d.HEAPF64=nt=new Float64Array(n),d.HEAP64=he=new BigInt64Array(n),d.HEAPU64=Xe=new BigUint64Array(n)}var Le=16777216;if(E)be=d.wasmMemory;else if(d.wasmMemory)be=d.wasmMemory;else if(be=new WebAssembly.Memory({initial:Le/65536,maximum:65536,shared:!0}),!(be.buffer instanceof SharedArrayBuffer))throw ee("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),S&&ee("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");ke(),Le=be.buffer.byteLength;var It=[],Tt=[],Vt=[],Rt=0,Jt=null,Wt=null;function mr(){if(Rt--,Rt==0&&(Jt!==null&&(clearInterval(Jt),Jt=null),Wt)){var n=Wt;Wt=null,n()}}function Bt(n){throw n="Aborted("+n+")",ee(n),pe=!0,ye=1,n=new WebAssembly.RuntimeError(n+". Build with -sASSERTIONS for more info."),w(n),n}var Fe=n=>n.startsWith("data:application/octet-stream;base64,"),Et=n=>n.startsWith("file://"),bt;bt="ort-wasm-simd-threaded.wasm",Fe(bt)||(bt=U(bt));function fr(n){if(Y)return Y(n);throw"both async and sync fetching of the wasm failed"}function Gr(n){if(T||C){if(typeof fetch=="function"&&!Et(n))return fetch(n,{credentials:"same-origin"}).then(l=>{if(!l.ok)throw"failed to load wasm binary file at \'"+n+"\'";return l.arrayBuffer()}).catch(()=>fr(n));if(N)return new Promise((l,f)=>{N(n,b=>l(new Uint8Array(b)),f)})}return Promise.resolve().then(()=>fr(n))}function ot(n,l,f){return Gr(n).then(b=>WebAssembly.instantiate(b,l)).then(b=>b).then(f,b=>{ee(`failed to asynchronously prepare wasm: ${b}`),Bt(b)})}function hr(n,l){var f=bt;return typeof WebAssembly.instantiateStreaming!="function"||Fe(f)||Et(f)||S||typeof fetch!="function"?ot(f,n,l):fetch(f,{credentials:"same-origin"}).then(b=>WebAssembly.instantiateStreaming(b,n).then(l,function(A){return ee(`wasm streaming compile failed: ${A}`),ee("falling back to ArrayBuffer instantiation"),ot(f,n,l)}))}var Nt={904236:(n,l,f,b)=>{if(typeof d>"u"||!d.Fb)return 1;if(n=Oe(n>>>0),n.startsWith("./")&&(n=n.substring(2)),n=d.Fb.get(n),!n)return 2;if(l>>>=0,f>>>=0,b>>>=0,l+f>n.byteLength)return 3;try{return o().set(n.subarray(l,l+f),b>>>0),0}catch{return 4}},904737:n=>d.$b(n),904770:n=>d.bc(n),904802:(n,l,f)=>{d.Ob(n,l,f,!0)},904841:(n,l,f)=>{d.Ob(n,l,f)},904874:n=>{d.eb("Abs",n,void 0)},904925:n=>{d.eb("Neg",n,void 0)},904976:n=>{d.eb("Floor",n,void 0)},905029:n=>{d.eb("Ceil",n,void 0)},905081:n=>{d.eb("Reciprocal",n,void 0)},905139:n=>{d.eb("Sqrt",n,void 0)},905191:n=>{d.eb("Exp",n,void 0)},905242:n=>{d.eb("Erf",n,void 0)},905293:n=>{d.eb("Sigmoid",n,void 0)},905348:(n,l,f)=>{d.eb("HardSigmoid",n,{alpha:l,beta:f})},905427:n=>{d.eb("Log",n,void 0)},905478:n=>{d.eb("Sin",n,void 0)},905529:n=>{d.eb("Cos",n,void 0)},905580:n=>{d.eb("Tan",n,void 0)},905631:n=>{d.eb("Asin",n,void 0)},905683:n=>{d.eb("Acos",n,void 0)},905735:n=>{d.eb("Atan",n,void 0)},905787:n=>{d.eb("Sinh",n,void 0)},905839:n=>{d.eb("Cosh",n,void 0)},905891:n=>{d.eb("Asinh",n,void 0)},905944:n=>{d.eb("Acosh",n,void 0)},905997:n=>{d.eb("Atanh",n,void 0)},906050:n=>{d.eb("Tanh",n,void 0)},906102:n=>{d.eb("Not",n,void 0)},906153:(n,l,f)=>{d.eb("Clip",n,{min:l,max:f})},906222:n=>{d.eb("Clip",n,void 0)},906274:(n,l)=>{d.eb("Elu",n,{alpha:l})},906332:n=>{d.eb("Relu",n,void 0)},906384:(n,l)=>{d.eb("LeakyRelu",n,{alpha:l})},906448:(n,l)=>{d.eb("ThresholdedRelu",n,{alpha:l})},906518:(n,l)=>{d.eb("Cast",n,{to:l})},906576:n=>{d.eb("Add",n,void 0)},906627:n=>{d.eb("Sub",n,void 0)},906678:n=>{d.eb("Mul",n,void 0)},906729:n=>{d.eb("Div",n,void 0)},906780:n=>{d.eb("Pow",n,void 0)},906831:n=>{d.eb("Equal",n,void 0)},906884:n=>{d.eb("Greater",n,void 0)},906939:n=>{d.eb("GreaterOrEqual",n,void 0)},907001:n=>{d.eb("Less",n,void 0)},907053:n=>{d.eb("LessOrEqual",n,void 0)},907112:(n,l,f,b,A)=>{d.eb("ReduceMean",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},907271:(n,l,f,b,A)=>{d.eb("ReduceMax",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},907429:(n,l,f,b,A)=>{d.eb("ReduceMin",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},907587:(n,l,f,b,A)=>{d.eb("ReduceProd",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},907746:(n,l,f,b,A)=>{d.eb("ReduceSum",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},907904:(n,l,f,b,A)=>{d.eb("ReduceL1",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},908061:(n,l,f,b,A)=>{d.eb("ReduceL2",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},908218:(n,l,f,b,A)=>{d.eb("ReduceLogSum",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},908379:(n,l,f,b,A)=>{d.eb("ReduceSumSquare",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},908543:(n,l,f,b,A)=>{d.eb("ReduceLogSumExp",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},908707:n=>{d.eb("Where",n,void 0)},908760:(n,l,f)=>{d.eb("Transpose",n,{perm:l?Array.from(a().subarray(l>>>0,f>>>0)):[]})},908868:(n,l,f,b,A,P,z,L,Z,K,oe,ge,Se,R,le)=>{d.eb("ConvTranspose",n,{format:Z?"NHWC":"NCHW",autoPad:l,dilations:[f],group:b,kernel_shape:[A],pads:[P,z],strides:[L],wIsConst:()=>!!r()[K>>>0],outputPadding:oe?Array.from(a().subarray(oe>>>0,ge>>>0)):[],outputShape:Se?Array.from(a().subarray(Se>>>0,R>>>0)):[],activation:Oe(le)})},909270:(n,l,f,b,A,P,z,L,Z,K,oe,ge,Se,R)=>{d.eb("ConvTranspose",n,{format:L?"NHWC":"NCHW",autoPad:l,dilations:Array.from(a().subarray(f>>>0,(f>>>0)+2>>>0)),group:b,kernelShape:Array.from(a().subarray(A>>>0,(A>>>0)+2>>>0)),pads:Array.from(a().subarray(P>>>0,(P>>>0)+4>>>0)),strides:Array.from(a().subarray(z>>>0,(z>>>0)+2>>>0)),wIsConst:()=>!!r()[Z>>>0],outputPadding:K?Array.from(a().subarray(K>>>0,oe>>>0)):[],outputShape:ge?Array.from(a().subarray(ge>>>0,Se>>>0)):[],activation:Oe(R)})},909835:(n,l,f,b,A,P,z,L,Z,K,oe,ge,Se,R,le)=>{d.eb("ConvTranspose",n,{format:Z?"NHWC":"NCHW",autoPad:l,dilations:[f],group:b,kernel_shape:[A],pads:[P,z],strides:[L],wIsConst:()=>!!r()[K>>>0],outputPadding:oe?Array.from(a().subarray(oe>>>0,ge>>>0)):[],outputShape:Se?Array.from(a().subarray(Se>>>0,R>>>0)):[],activation:Oe(le)})},910237:(n,l,f,b,A,P,z,L,Z,K,oe,ge,Se,R)=>{d.eb("ConvTranspose",n,{format:L?"NHWC":"NCHW",autoPad:l,dilations:Array.from(a().subarray(f>>>0,(f>>>0)+2>>>0)),group:b,kernelShape:Array.from(a().subarray(A>>>0,(A>>>0)+2>>>0)),pads:Array.from(a().subarray(P>>>0,(P>>>0)+4>>>0)),strides:Array.from(a().subarray(z>>>0,(z>>>0)+2>>>0)),wIsConst:()=>!!r()[Z>>>0],outputPadding:K?Array.from(a().subarray(K>>>0,oe>>>0)):[],outputShape:ge?Array.from(a().subarray(ge>>>0,Se>>>0)):[],activation:Oe(R)})},910802:(n,l)=>{d.eb("GlobalAveragePool",n,{format:l?"NHWC":"NCHW"})},910893:(n,l,f,b,A,P,z,L,Z,K,oe,ge,Se,R,le,Ie)=>{d.eb("AveragePool",n,{format:Ie?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:A,dilations:[P,z],kernel_shape:[L,Z],pads:[K,oe,ge,Se],strides:[R,le]})},911177:(n,l)=>{d.eb("GlobalAveragePool",n,{format:l?"NHWC":"NCHW"})},911268:(n,l,f,b,A,P,z,L,Z,K,oe,ge,Se,R,le,Ie)=>{d.eb("AveragePool",n,{format:Ie?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:A,dilations:[P,z],kernel_shape:[L,Z],pads:[K,oe,ge,Se],strides:[R,le]})},911552:(n,l)=>{d.eb("GlobalMaxPool",n,{format:l?"NHWC":"NCHW"})},911639:(n,l,f,b,A,P,z,L,Z,K,oe,ge,Se,R,le,Ie)=>{d.eb("MaxPool",n,{format:Ie?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:A,dilations:[P,z],kernel_shape:[L,Z],pads:[K,oe,ge,Se],strides:[R,le]})},911919:(n,l)=>{d.eb("GlobalMaxPool",n,{format:l?"NHWC":"NCHW"})},912006:(n,l,f,b,A,P,z,L,Z,K,oe,ge,Se,R,le,Ie)=>{d.eb("MaxPool",n,{format:Ie?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:A,dilations:[P,z],kernel_shape:[L,Z],pads:[K,oe,ge,Se],strides:[R,le]})},912286:(n,l,f,b,A)=>{d.eb("Gemm",n,{alpha:l,beta:f,transA:b,transB:A})},912390:n=>{d.eb("MatMul",n,void 0)},912444:(n,l,f,b)=>{d.eb("ArgMax",n,{keepDims:!!l,selectLastIndex:!!f,axis:b})},912552:(n,l,f,b)=>{d.eb("ArgMin",n,{keepDims:!!l,selectLastIndex:!!f,axis:b})},912660:(n,l)=>{d.eb("Softmax",n,{axis:l})},912723:(n,l)=>{d.eb("Concat",n,{axis:l})},912783:(n,l,f,b,A)=>{d.eb("Split",n,{axis:l,numOutputs:f,splitSizes:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},912923:n=>{d.eb("Expand",n,void 0)},912977:(n,l)=>{d.eb("Gather",n,{axis:Number(l)})},913048:(n,l)=>{d.eb("GatherElements",n,{axis:Number(l)})},913127:(n,l,f,b,A,P,z,L,Z,K,oe)=>{d.eb("Resize",n,{antialias:l,axes:f?Array.from(a().subarray(f>>>0,b>>>0)):[],coordinateTransformMode:Oe(A),cubicCoeffA:P,excludeOutside:z,extrapolationValue:L,keepAspectRatioPolicy:Oe(Z),mode:Oe(K),nearestMode:Oe(oe)})},913473:(n,l,f,b,A,P,z)=>{d.eb("Slice",n,{starts:l?Array.from(a().subarray(l>>>0,f>>>0)):[],ends:b?Array.from(a().subarray(b>>>0,A>>>0)):[],axes:P?Array.from(a().subarray(P>>>0,z>>>0)):[]})},913689:n=>{d.eb("Tile",n,void 0)},913741:(n,l,f)=>{d.eb("LayerNormalization",n,{axis:Number(l),epsilon:Number(f)})},913848:(n,l,f)=>{d.eb("InstanceNormalization",n,{epsilon:l,format:f?"NHWC":"NCHW"})},913962:(n,l,f)=>{d.eb("InstanceNormalization",n,{epsilon:l,format:f?"NHWC":"NCHW"})},914076:n=>{d.eb("Range",n,void 0)},914129:(n,l)=>{d.eb("Einsum",n,{equation:Oe(l)})},914210:(n,l,f,b,A)=>{d.eb("Pad",n,{mode:l,value:f,pads:b?Array.from(a().subarray(b>>>0,A>>>0)):[]})},914337:(n,l,f,b,A,P)=>{d.eb("BatchNormalization",n,{epsilon:l,momentum:f,spatial:!!A,trainingMode:!!b,format:P?"NHWC":"NCHW"})},914506:(n,l,f,b,A,P)=>{d.eb("BatchNormalization",n,{epsilon:l,momentum:f,spatial:!!A,trainingMode:!!b,format:P?"NHWC":"NCHW"})},914675:(n,l,f)=>{d.eb("CumSum",n,{exclusive:Number(l),reverse:Number(f)})},914772:(n,l,f,b,A,P,z,L,Z)=>{d.eb("Attention",n,{numHeads:l,isUnidirectional:f,maskFilterValue:b,scale:A,doRotary:P,qkvHiddenSizes:z?Array.from(a().subarray(Number(L)>>>0,Number(L)+z>>>0)):[],pastPresentShareBuffer:!!Z})},915044:n=>{d.eb("Gelu",n,void 0)},915096:(n,l,f,b,A,P)=>{d.eb("MultiHeadAttention",n,{numHeads:l,isUnidirectional:f,maskFilterValue:b,scale:A,doRotary:P})},915255:n=>{d.eb("BiasAdd",n,void 0)},915310:n=>{d.eb("BiasSplitGelu",n,void 0)},915371:(n,l)=>{d.eb("SkipLayerNormalization",n,{epsilon:l})},915452:(n,l,f,b,A,P,z,L,Z,K,oe,ge,Se)=>{d.eb("Conv",n,{format:Z?"NHWC":"NCHW",auto_pad:l,dilations:[f],group:b,kernel_shape:[A],pads:P?Array.from(a().subarray(P>>>0,z>>>0)):[],strides:[L],w_is_const:()=>!!r()[K>>>0],activation:Oe(oe),activation_params:ge?Array.from(m().subarray(ge>>>0,Se>>>0)):[]})},915822:(n,l,f,b,A,P,z,L,Z,K,oe,ge,Se,R,le,Ie)=>{d.eb("Conv",n,{format:ge?"NHWC":"NCHW",auto_pad:l,dilations:[f,b],group:A,kernel_shape:[P,z],pads:L?Array.from(a().subarray(L>>>0,Z>>>0)):[],strides:[K,oe],w_is_const:()=>!!r()[Se>>>0],activation:Oe(R),activation_params:le?Array.from(m().subarray(le>>>0,Ie>>>0)):[]})},916213:n=>{d.cc(n)},916247:(n,l)=>d.dc(n,l,d.Eb.fc,d.Eb.errors)};function gr(n){this.name="ExitStatus",this.message=`Program terminated with exit(${n})`,this.status=n}var ct=n=>{n.terminate(),n.onmessage=()=>{}},Lr=n=>{me.yb.length==0&&($r(),me.Pb(me.yb[0]));var l=me.yb.pop();if(!l)return 6;me.zb.push(l),me.pb[n.xb]=l,l.xb=n.xb;var f={cmd:"run",start_routine:n.hc,arg:n.Vb,pthread_ptr:n.xb};return S&&l.unref(),l.postMessage(f,n.nc),0},qe=0,yr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,br=(n,l,f)=>{l>>>=0;var b=l+f;for(f=l;n[f]&&!(f>=b);)++f;if(16<f-l&&n.buffer&&yr)return yr.decode(n.buffer instanceof SharedArrayBuffer?n.slice(l,f):n.subarray(l,f));for(b="";l<f;){var A=n[l++];if(A&128){var P=n[l++]&63;if((A&224)==192)b+=String.fromCharCode((A&31)<<6|P);else{var z=n[l++]&63;A=(A&240)==224?(A&15)<<12|P<<6|z:(A&7)<<18|P<<12|z<<6|n[l++]&63,65536>A?b+=String.fromCharCode(A):(A-=65536,b+=String.fromCharCode(55296|A>>10,56320|A&1023))}}else b+=String.fromCharCode(A)}return b},Oe=(n,l)=>(n>>>=0)?br(o(),n,l):"",wr=n=>{var l=Jn();return n=n(),mn(l),n};function ve(n,l){var f=arguments.length-2,b=arguments;return wr(()=>{for(var A=2*f,P=Qn(8*A),z=P>>>3,L=0;L<f;L++){var Z=b[2+L];typeof Z=="bigint"?(he[z+2*L]=1n,he[z+2*L+1]=Z):(he[z+2*L]=0n,h()[z+2*L+1>>>0]=Z)}return si(n,A,P,l)})}function it(n){if(E)return ve(0,1,n);ye=n,0<qe||(me.ic(),d.onExit?.(n),pe=!0),x(n,new gr(n))}var Qt=n=>{if(ye=n,E)throw Fr(n),"unwind";it(n)},vr=n=>{n instanceof gr||n=="unwind"||x(1,n)};function Hn(){for(var n=d.numThreads;n--;)$r();It.unshift(()=>{Rt++,Gn(()=>mr())})}function $r(){var n=U("ort-wasm-simd-threaded.worker.js");n=new Worker(n),me.yb.push(n)}function Gn(n){E?n():Promise.all(me.yb.map(me.Pb)).then(n)}var me={yb:[],zb:[],Ub:[],pb:{},Ib(){E?(me.receiveObjectTransfer=me.ec,me.threadInitTLS=me.Tb,me.setExitStatus=me.Sb):Hn()},Sb:n=>ye=n,sc:["$terminateWorker"],ic:()=>{for(var n of me.zb)ct(n);for(n of me.yb)ct(n);me.yb=[],me.zb=[],me.pb=[]},Rb:n=>{var l=n.xb;delete me.pb[l],me.yb.push(n),me.zb.splice(me.zb.indexOf(n),1),n.xb=0,Zn(l)},ec(){},Tb(){me.Ub.forEach(n=>n())},Pb:n=>new Promise(l=>{n.onmessage=P=>{P=P.data;var z=P.cmd;if(P.targetThread&&P.targetThread!=pn()){var L=me.pb[P.targetThread];L?L.postMessage(P,P.transferList):ee(`Internal error! Worker sent a message "${z}" to target pthread ${P.targetThread}, but that thread no longer exists!`)}else z==="checkMailbox"?Ft():z==="spawnThread"?Lr(P):z==="cleanupThread"?me.Rb(me.pb[P.thread]):z==="killThread"?(P=P.thread,z=me.pb[P],delete me.pb[P],ct(z),Zn(P),me.zb.splice(me.zb.indexOf(z),1),z.xb=0):z==="cancelThread"?me.pb[P.thread].postMessage({cmd:"cancel"}):z==="loaded"?(n.loaded=!0,S&&!n.xb&&n.unref(),l(n)):z==="alert"?alert(`Thread ${P.threadId}: ${P.text}`):P.target==="setimmediate"?n.postMessage(P):z==="callHandler"?d[P.handler](...P.args):z&&ee(`worker sent an unknown command ${z}`)},n.onerror=P=>{throw ee(`worker sent an error! ${P.filename}:${P.lineno}: ${P.message}`),P},S&&(n.on("message",P=>n.onmessage({data:P})),n.on("error",P=>n.onerror(P)));var f=[],b=["onExit"],A;for(A of b)d.hasOwnProperty(A)&&f.push(A);n.postMessage({cmd:"load",handlers:f,urlOrBlob:d.mainScriptUrlOrBlob||e,wasmMemory:be,wasmModule:Me})})};d.PThread=me;var er=n=>{for(;0<n.length;)n.shift()(d)};d.establishStackSpace=()=>{var n=pn(),l=p()[n+52>>>2>>>0];n=p()[n+56>>>2>>>0],li(l,l-n),mn(l)};function Fr(n){if(E)return ve(1,0,n);Qt(n)}d.invokeEntryPoint=(n,l)=>{n=di.apply(null,[n,l]),0<qe?me.Sb(n):Xn(n)};function Ln(n){this.Db=n-24,this.pc=function(l){p()[this.Db+4>>>2>>>0]=l},this.Mb=function(l){p()[this.Db+8>>>2>>>0]=l},this.Ib=function(l,f){this.Kb(),this.pc(l),this.Mb(f)},this.Kb=function(){p()[this.Db+16>>>2>>>0]=0}}var jr=0,_r=0;function Sr(n,l,f,b){return E?ve(2,1,n,l,f,b):Ht(n,l,f,b)}function Ht(n,l,f,b){if(n>>>=0,l>>>=0,f>>>=0,b>>>=0,typeof SharedArrayBuffer>"u")return ee("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var A=[];return E&&A.length===0?Sr(n,l,f,b):(n={hc:f,xb:n,Vb:b,nc:A},E?(n.qc="spawnThread",postMessage(n,A),0):Lr(n))}function qr(n,l,f){return E?ve(3,1,n,l,f):0}function mt(n,l){if(E)return ve(4,1,n,l)}var Je=n=>{for(var l=0,f=0;f<n.length;++f){var b=n.charCodeAt(f);127>=b?l++:2047>=b?l+=2:55296<=b&&57343>=b?(l+=4,++f):l+=3}return l},xr=(n,l,f,b)=>{if(f>>>=0,!(0<b))return 0;var A=f;b=f+b-1;for(var P=0;P<n.length;++P){var z=n.charCodeAt(P);if(55296<=z&&57343>=z){var L=n.charCodeAt(++P);z=65536+((z&1023)<<10)|L&1023}if(127>=z){if(f>=b)break;l[f++>>>0]=z}else{if(2047>=z){if(f+1>=b)break;l[f++>>>0]=192|z>>6}else{if(65535>=z){if(f+2>=b)break;l[f++>>>0]=224|z>>12}else{if(f+3>=b)break;l[f++>>>0]=240|z>>18,l[f++>>>0]=128|z>>12&63}l[f++>>>0]=128|z>>6&63}l[f++>>>0]=128|z&63}}return l[f>>>0]=0,f-A},Dt=(n,l,f)=>xr(n,o(),l,f);function Cr(n,l){if(E)return ve(5,1,n,l)}function Ar(n,l,f){if(E)return ve(6,1,n,l,f)}function Kr(n,l,f){return E?ve(7,1,n,l,f):0}function tr(n,l){if(E)return ve(8,1,n,l)}function Yr(n,l,f){if(E)return ve(9,1,n,l,f)}function Zr(n,l,f,b){if(E)return ve(10,1,n,l,f,b)}function Xr(n,l,f,b){if(E)return ve(11,1,n,l,f,b)}function Jr(n,l,f,b){if(E)return ve(12,1,n,l,f,b)}function Ir(n){if(E)return ve(13,1,n)}function Gt(n,l){if(E)return ve(14,1,n,l)}function Qr(n,l,f){if(E)return ve(15,1,n,l,f)}var rr=n=>{if(n===null)return"null";var l=typeof n;return l==="object"||l==="array"||l==="function"?n.toString():""+n},Tr,lt=n=>{for(var l="";o()[n>>>0];)l+=Tr[o()[n++>>>0]];return l},Er={},nr={},Fn={},Qe;function en(n,l,f={}){var b=l.name;if(!n)throw new Qe(`type "${b}" must have a positive integer typeid pointer`);if(nr.hasOwnProperty(n)){if(f.Yb)return;throw new Qe(`Cannot register type \'${b}\' twice`)}nr[n]=l,delete Fn[n],Er.hasOwnProperty(n)&&(l=Er[n],delete Er[n],l.forEach(A=>A()))}function pt(n,l,f={}){if(!("argPackAdvance"in l))throw new TypeError("registerType registeredInstance requires argPackAdvance");en(n,l,f)}var Pr=(n,l,f)=>{switch(l){case 1:return f?b=>r()[b>>>0>>>0]:b=>o()[b>>>0>>>0];case 2:return f?b=>i()[b>>>1>>>0]:b=>u()[b>>>1>>>0];case 4:return f?b=>a()[b>>>2>>>0]:b=>p()[b>>>2>>>0];case 8:return f?b=>he[b>>>3]:b=>Xe[b>>>3];default:throw new TypeError(`invalid integer width (${l}): ${n}`)}};function or(){this.wb=[void 0],this.Nb=[]}var et=new or;function Lt(n){n>>>=0,n>=et.Db&&--et.get(n).Qb===0&&et.Mb(n)}var Ke=n=>{if(!n)throw new Qe("Cannot use deleted val. handle = "+n);return et.get(n).value},tt=n=>{switch(n){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return et.Kb({Qb:1,value:n})}};function tn(n){return this.fromWireType(a()[n>>>2>>>0])}var rn=(n,l)=>{switch(l){case 4:return function(f){return this.fromWireType(m()[f>>>2>>>0])};case 8:return function(f){return this.fromWireType(h()[f>>>3>>>0])};default:throw new TypeError(`invalid float width (${l}): ${n}`)}};function nn(n){return this.fromWireType(p()[n>>>2>>>0])}var on=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,an=(n,l)=>{for(var f=n>>1,b=f+l/2;!(f>=b)&&u()[f>>>0];)++f;if(f<<=1,32<f-n&&on)return on.decode(o().slice(n,f));for(f="",b=0;!(b>=l/2);++b){var A=i()[n+2*b>>>1>>>0];if(A==0)break;f+=String.fromCharCode(A)}return f},sn=(n,l,f)=>{if(f??=2147483647,2>f)return 0;f-=2;var b=l;f=f<2*n.length?f/2:n.length;for(var A=0;A<f;++A){var P=n.charCodeAt(A);i()[l>>>1>>>0]=P,l+=2}return i()[l>>>1>>>0]=0,l-b},ir=n=>2*n.length,jn=(n,l)=>{for(var f=0,b="";!(f>=l/4);){var A=a()[n+4*f>>>2>>>0];if(A==0)break;++f,65536<=A?(A-=65536,b+=String.fromCharCode(55296|A>>10,56320|A&1023)):b+=String.fromCharCode(A)}return b},ue=(n,l,f)=>{if(l>>>=0,f??=2147483647,4>f)return 0;var b=l;f=b+f-4;for(var A=0;A<n.length;++A){var P=n.charCodeAt(A);if(55296<=P&&57343>=P){var z=n.charCodeAt(++A);P=65536+((P&1023)<<10)|z&1023}if(a()[l>>>2>>>0]=P,l+=4,l+4>f)break}return a()[l>>>2>>>0]=0,l-b},un=n=>{for(var l=0,f=0;f<n.length;++f){var b=n.charCodeAt(f);55296<=b&&57343>=b&&++f,l+=4}return l},Mt=()=>{if(!(0<qe))try{E?Xn(ye):Qt(ye)}catch(n){vr(n)}};function at(n){n>>>=0,typeof Atomics.oc=="function"&&(Atomics.oc(a(),n>>>2,n).value.then(Ft),n+=128,Atomics.store(a(),n>>>2,1))}d.__emscripten_thread_mailbox_await=at;var Ft=()=>{var n=pn();if(n&&(at(n),!pe))try{ui(),Mt()}catch(l){vr(l)}};d.checkMailbox=Ft;var ar=[],sr=(n,l)=>{var f=nr[n];if(f===void 0)throw n=ii(n),f=lt(n),wt(n),new Qe(l+" has unknown type "+f);return f},Or=(n,l,f)=>{var b=[];return n=n.toWireType(b,f),b.length&&(p()[l>>>2>>>0]=tt(b)),n},jt=n=>{try{n()}catch(l){Bt(l)}};function ln(){var n=re,l={};for(let[f,b]of Object.entries(n))l[f]=typeof b=="function"?function(){Pt.push(f);try{return b.apply(null,arguments)}finally{pe||(Pt.pop(),dt&&ft===1&&Pt.length===0&&(ft=0,qe+=1,jt(pi),typeof Fibers<"u"&&Fibers.uc()))}}:b;return l}var ft=0,dt=null,dn=0,Pt=[],kr={},s={},c=0,g=null,$=[];function I(){return new Promise((n,l)=>{g={resolve:n,reject:l}})}function D(){var n=Rr(65548),l=n+12;p()[n>>>2>>>0]=l,p()[n+4>>>2>>>0]=l+65536,l=Pt[0];var f=kr[l];return f===void 0&&(f=c++,kr[l]=f,s[f]=l),l=f,a()[n+8>>>2>>>0]=l,n}function H(){var n=a()[dt+8>>>2>>>0];return n=re[s[n]],--qe,n()}function X(n){if(!pe){if(ft===0){var l=!1,f=!1;n((b=0)=>{if(!pe&&(dn=b,l=!0,f)){ft=2,jt(()=>mi(dt)),typeof Browser<"u"&&Browser.Jb.Xb&&Browser.Jb.resume(),b=!1;try{var A=H()}catch(L){A=L,b=!0}var P=!1;if(!dt){var z=g;z&&(g=null,(b?z.reject:z.resolve)(A),P=!0)}if(b&&!P)throw A}}),f=!0,l||(ft=1,dt=D(),typeof Browser<"u"&&Browser.Jb.Xb&&Browser.Jb.pause(),jt(()=>ci(dt)))}else ft===2?(ft=0,jt(fi),wt(dt),dt=null,$.forEach(b=>{if(!pe)try{b(),Mt()}catch(A){vr(A)}})):Bt(`invalid state: ${ft}`);return dn}}function q(n){return X(l=>{n().then(l)})}var j=[],ne={},fe=n=>{var l=ne[n];return l===void 0?lt(n):l},$e=()=>typeof globalThis=="object"?globalThis:Function("return this")(),k=n=>{var l=j.length;return j.push(n),l},ae=(n,l)=>{for(var f=Array(n),b=0;b<n;++b)f[b]=sr(p()[l+4*b>>>2>>>0],"parameter "+b);return f},Ae=(n,l)=>Object.defineProperty(l,"name",{value:n});function Ot(n){var l=Function;if(!(l instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof l} which is not a function`);var f=Ae(l.name||"unknownFunctionName",function(){});return f.prototype=l.prototype,f=new f,n=l.apply(f,n),n instanceof Object?n:f}var kt=n=>n%4===0&&(n%100!==0||n%400===0),No=[0,31,60,91,121,152,182,213,244,274,305,335],Ho=[0,31,59,90,120,151,181,212,243,273,304,334];function Go(n,l,f,b,A,P,z){return E?ve(16,1,n,l,f,b,A,P,z):-52}function Lo(n,l,f,b,A,P){if(E)return ve(17,1,n,l,f,b,A,P)}var Fo=n=>{var l=Je(n)+1,f=Rr(l);return f&&Dt(n,f,l),f},qn=[],jo=(n,l)=>{qn.length=0;for(var f;f=o()[n++>>>0];){var b=f!=105;b&=f!=112,l+=b&&l%8?4:0,qn.push(f==112?p()[l>>>2>>>0]:f==106?he[l>>>3]:f==105?a()[l>>>2>>>0]:h()[l>>>3>>>0]),l+=b?8:4}return qn},Kn={},qo=()=>{if(!Yn){var n={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:v||"./this.program"},l;for(l in Kn)Kn[l]===void 0?delete n[l]:n[l]=Kn[l];var f=[];for(l in n)f.push(`${l}=${n[l]}`);Yn=f}return Yn},Yn;function Ko(n,l){if(E)return ve(18,1,n,l);n>>>=0,l>>>=0;var f=0;return qo().forEach((b,A)=>{var P=l+f;for(A=p()[n+4*A>>>2>>>0]=P,P=0;P<b.length;++P)r()[A++>>>0>>>0]=b.charCodeAt(P);r()[A>>>0>>>0]=0,f+=b.length+1}),0}function Yo(n,l){if(E)return ve(19,1,n,l);n>>>=0,l>>>=0;var f=qo();p()[n>>>2>>>0]=f.length;var b=0;return f.forEach(A=>b+=A.length+1),p()[l>>>2>>>0]=b,0}function Zo(n){return E?ve(20,1,n):52}function Xo(n,l,f,b){return E?ve(21,1,n,l,f,b):52}function Jo(n,l,f,b){return E?ve(22,1,n,l,f,b):70}var Al=[null,[],[]];function Qo(n,l,f,b){if(E)return ve(23,1,n,l,f,b);l>>>=0,f>>>=0,b>>>=0;for(var A=0,P=0;P<f;P++){var z=p()[l>>>2>>>0],L=p()[l+4>>>2>>>0];l+=8;for(var Z=0;Z<L;Z++){var K=o()[z+Z>>>0],oe=Al[n];K===0||K===10?((n===1?Ee:ee)(br(oe,0)),oe.length=0):oe.push(K)}A+=L}return p()[b>>>2>>>0]=A,0}var ei=[31,29,31,30,31,30,31,31,30,31,30,31],ti=[31,28,31,30,31,30,31,31,30,31,30,31];function Il(n){var l=Array(Je(n)+1);return xr(n,l,0,l.length),l}var Tl=(n,l)=>{r().set(n,l>>>0)};function ri(n,l,f,b){function A(R,le,Ie){for(R=typeof R=="number"?R.toString():R||"";R.length<le;)R=Ie[0]+R;return R}function P(R,le){return A(R,le,"0")}function z(R,le){function Ie(gi){return 0>gi?-1:0<gi?1:0}var qt;return(qt=Ie(R.getFullYear()-le.getFullYear()))===0&&(qt=Ie(R.getMonth()-le.getMonth()))===0&&(qt=Ie(R.getDate()-le.getDate())),qt}function L(R){switch(R.getDay()){case 0:return new Date(R.getFullYear()-1,11,29);case 1:return R;case 2:return new Date(R.getFullYear(),0,3);case 3:return new Date(R.getFullYear(),0,2);case 4:return new Date(R.getFullYear(),0,1);case 5:return new Date(R.getFullYear()-1,11,31);case 6:return new Date(R.getFullYear()-1,11,30)}}function Z(R){var le=R.Ab;for(R=new Date(new Date(R.Bb+1900,0,1).getTime());0<le;){var Ie=R.getMonth(),qt=(kt(R.getFullYear())?ei:ti)[Ie];if(le>qt-R.getDate())le-=qt-R.getDate()+1,R.setDate(1),11>Ie?R.setMonth(Ie+1):(R.setMonth(0),R.setFullYear(R.getFullYear()+1));else{R.setDate(R.getDate()+le);break}}return Ie=new Date(R.getFullYear()+1,0,4),le=L(new Date(R.getFullYear(),0,4)),Ie=L(Ie),0>=z(le,R)?0>=z(Ie,R)?R.getFullYear()+1:R.getFullYear():R.getFullYear()-1}n>>>=0,l>>>=0,f>>>=0,b>>>=0;var K=p()[b+40>>>2>>>0];b={lc:a()[b>>>2>>>0],kc:a()[b+4>>>2>>>0],Gb:a()[b+8>>>2>>>0],Lb:a()[b+12>>>2>>>0],Hb:a()[b+16>>>2>>>0],Bb:a()[b+20>>>2>>>0],vb:a()[b+24>>>2>>>0],Ab:a()[b+28>>>2>>>0],tc:a()[b+32>>>2>>>0],jc:a()[b+36>>>2>>>0],mc:K?Oe(K):""},f=Oe(f),K={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var oe in K)f=f.replace(new RegExp(oe,"g"),K[oe]);var ge="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Se="January February March April May June July August September October November December".split(" ");K={"%a":R=>ge[R.vb].substring(0,3),"%A":R=>ge[R.vb],"%b":R=>Se[R.Hb].substring(0,3),"%B":R=>Se[R.Hb],"%C":R=>P((R.Bb+1900)/100|0,2),"%d":R=>P(R.Lb,2),"%e":R=>A(R.Lb,2," "),"%g":R=>Z(R).toString().substring(2),"%G":R=>Z(R),"%H":R=>P(R.Gb,2),"%I":R=>(R=R.Gb,R==0?R=12:12<R&&(R-=12),P(R,2)),"%j":R=>{for(var le=0,Ie=0;Ie<=R.Hb-1;le+=(kt(R.Bb+1900)?ei:ti)[Ie++]);return P(R.Lb+le,3)},"%m":R=>P(R.Hb+1,2),"%M":R=>P(R.kc,2),"%n":()=>`\n`,"%p":R=>0<=R.Gb&&12>R.Gb?"AM":"PM","%S":R=>P(R.lc,2),"%t":()=>"	","%u":R=>R.vb||7,"%U":R=>P(Math.floor((R.Ab+7-R.vb)/7),2),"%V":R=>{var le=Math.floor((R.Ab+7-(R.vb+6)%7)/7);if(2>=(R.vb+371-R.Ab-2)%7&&le++,le)le==53&&(Ie=(R.vb+371-R.Ab)%7,Ie==4||Ie==3&&kt(R.Bb)||(le=1));else{le=52;var Ie=(R.vb+7-R.Ab-1)%7;(Ie==4||Ie==5&&kt(R.Bb%400-1))&&le++}return P(le,2)},"%w":R=>R.vb,"%W":R=>P(Math.floor((R.Ab+7-(R.vb+6)%7)/7),2),"%y":R=>(R.Bb+1900).toString().substring(2),"%Y":R=>R.Bb+1900,"%z":R=>{R=R.jc;var le=0<=R;return R=Math.abs(R)/60,(le?"+":"-")+("0000"+(R/60*100+R%60)).slice(-4)},"%Z":R=>R.mc,"%%":()=>"%"},f=f.replace(/%%/g,"\\0\\0");for(oe in K)f.includes(oe)&&(f=f.replace(new RegExp(oe,"g"),K[oe](b)));return f=f.replace(/\\0\\0/g,"%"),oe=Il(f),oe.length>l?0:(Tl(oe,n),oe.length-1)}me.Ib();for(var ni=Array(256),cn=0;256>cn;++cn)ni[cn]=String.fromCharCode(cn);Tr=ni,Qe=d.BindingError=class extends Error{constructor(n){super(n),this.name="BindingError"}},d.InternalError=class extends Error{constructor(n){super(n),this.name="InternalError"}},Object.assign(or.prototype,{get(n){return this.wb[n]},has(n){return this.wb[n]!==void 0},Kb(n){var l=this.Nb.pop()||this.wb.length;return this.wb[l]=n,l},Mb(n){this.wb[n]=void 0,this.Nb.push(n)}}),et.wb.push({value:void 0},{value:null},{value:!0},{value:!1}),et.Db=et.wb.length,d.count_emval_handles=()=>{for(var n=0,l=et.Db;l<et.wb.length;++l)et.wb[l]!==void 0&&++n;return n};var El=[it,Fr,Sr,qr,mt,Cr,Ar,Kr,tr,Yr,Zr,Xr,Jr,Ir,Gt,Qr,Go,Lo,Ko,Yo,Zo,Xo,Jo,Qo],Pl={ua:function(n,l,f){return q(async()=>{await d.ac(n,l,f)})},b:function(n,l,f){throw n>>>=0,new Ln(n).Ib(l>>>0,f>>>0),jr=n,_r++,jr},ga:function(n){ai(n>>>0,!C,1,!T,131072,!1),me.Tb()},F:function(n){n>>>=0,E?postMessage({cmd:"cleanupThread",thread:n}):me.Rb(me.pb[n])},Y:Ht,z:qr,ma:mt,U:Cr,W:Ar,N:Kr,ka:tr,da:Yr,ja:Zr,H:Xr,V:Jr,S:Ir,la:Gt,T:Qr,K:function(n,l,f,b,A){n>>>=0,l>>>=0,f>>>=0,l=lt(l);var P=l.indexOf("u")!=-1;P&&(A=(1n<<64n)-1n),pt(n,{name:l,fromWireType:z=>z,toWireType:function(z,L){if(typeof L!="bigint"&&typeof L!="number")throw new TypeError(`Cannot convert "${rr(L)}" to ${this.name}`);if(L<b||L>A)throw new TypeError(`Passing a number "${rr(L)}" from JS side to C/C++ side to an argument of type "${l}", which is outside the valid range [${b}, ${A}]!`);return L},argPackAdvance:8,readValueFromPointer:Pr(l,f,!P),Cb:null})},sa:function(n,l,f,b){n>>>=0,l=lt(l>>>0),pt(n,{name:l,fromWireType:function(A){return!!A},toWireType:function(A,P){return P?f:b},argPackAdvance:8,readValueFromPointer:function(A){return this.fromWireType(o()[A>>>0])},Cb:null})},ra:function(n,l){n>>>=0,l=lt(l>>>0),pt(n,{name:l,fromWireType:f=>{var b=Ke(f);return Lt(f),b},toWireType:(f,b)=>tt(b),argPackAdvance:8,readValueFromPointer:tn,Cb:null})},J:function(n,l,f){n>>>=0,f>>>=0,l=lt(l>>>0),pt(n,{name:l,fromWireType:b=>b,toWireType:(b,A)=>A,argPackAdvance:8,readValueFromPointer:rn(l,f),Cb:null})},v:function(n,l,f,b,A){if(n>>>=0,f>>>=0,l=lt(l>>>0),A===-1&&(A=4294967295),A=L=>L,b===0){var P=32-8*f;A=L=>L<<P>>>P}var z=l.includes("unsigned")?function(L,Z){return Z>>>0}:function(L,Z){return Z};pt(n,{name:l,fromWireType:A,toWireType:z,argPackAdvance:8,readValueFromPointer:Pr(l,f,b!==0),Cb:null})},o:function(n,l,f){function b(P){var z=p()[P>>>2>>>0];return P=p()[P+4>>>2>>>0],new A(r().buffer,P,z)}n>>>=0;var A=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][l];f=lt(f>>>0),pt(n,{name:f,fromWireType:b,argPackAdvance:8,readValueFromPointer:b},{Yb:!0})},L:function(n,l){n>>>=0,l=lt(l>>>0);var f=l==="std::string";pt(n,{name:l,fromWireType:function(b){var A=p()[b>>>2>>>0],P=b+4;if(f)for(var z=P,L=0;L<=A;++L){var Z=P+L;if(L==A||o()[Z>>>0]==0){if(z=Oe(z,Z-z),K===void 0)var K=z;else K+=String.fromCharCode(0),K+=z;z=Z+1}}else{for(K=Array(A),L=0;L<A;++L)K[L]=String.fromCharCode(o()[P+L>>>0]);K=K.join("")}return wt(b),K},toWireType:function(b,A){A instanceof ArrayBuffer&&(A=new Uint8Array(A));var P=typeof A=="string";if(!(P||A instanceof Uint8Array||A instanceof Uint8ClampedArray||A instanceof Int8Array))throw new Qe("Cannot pass non-string to std::string");var z=f&&P?Je(A):A.length,L=Rr(4+z+1),Z=L+4;if(p()[L>>>2>>>0]=z,f&&P)Dt(A,Z,z+1);else if(P)for(P=0;P<z;++P){var K=A.charCodeAt(P);if(255<K)throw wt(Z),new Qe("String has UTF-16 code units that do not fit in 8 bits");o()[Z+P>>>0]=K}else for(P=0;P<z;++P)o()[Z+P>>>0]=A[P];return b!==null&&b.push(wt,L),L},argPackAdvance:8,readValueFromPointer:nn,Cb(b){wt(b)}})},B:function(n,l,f){if(n>>>=0,l>>>=0,f>>>=0,f=lt(f),l===2)var b=an,A=sn,P=ir,z=()=>u(),L=1;else l===4&&(b=jn,A=ue,P=un,z=()=>p(),L=2);pt(n,{name:f,fromWireType:Z=>{for(var K=p()[Z>>>2>>>0],oe=z(),ge,Se=Z+4,R=0;R<=K;++R){var le=Z+4+R*l;(R==K||oe[le>>>L]==0)&&(Se=b(Se,le-Se),ge===void 0?ge=Se:(ge+=String.fromCharCode(0),ge+=Se),Se=le+l)}return wt(Z),ge},toWireType:(Z,K)=>{if(typeof K!="string")throw new Qe(`Cannot pass non-string to C++ string type ${f}`);var oe=P(K),ge=Rr(4+oe+l);return p()[ge>>>2]=oe>>L,A(K,ge+4,oe+l),Z!==null&&Z.push(wt,ge),ge},argPackAdvance:8,readValueFromPointer:tn,Cb(Z){wt(Z)}})},ta:function(n,l){n>>>=0,l=lt(l>>>0),pt(n,{Zb:!0,name:l,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},qa:()=>1,Q:function(n,l){n>>>=0,n==l>>>0?setTimeout(()=>Ft()):E?postMessage({targetThread:n,cmd:"checkMailbox"}):(n=me.pb[n])&&n.postMessage({cmd:"checkMailbox"})},Z:function(n,l,f,b){l>>>=0,f/=2,ar.length=f,b=b>>>0>>>3;for(var A=0;A<f;A++)ar[A]=he[b+2*A]?he[b+2*A+1]:h()[b+2*A+1>>>0];return n=0>n?Nt[-n-1]:El[n],me.Wb=l,l=n.apply(null,ar),me.Wb=0,l},fa:at,pa:function(n){S&&me.pb[n>>>0].ref()},t:function(n,l,f){return l>>>=0,f>>>=0,n=Ke(n>>>0),l=sr(l,"emval::as"),Or(l,f,n)},y:function(n){return n>>>=0,q(()=>(n=Ke(n),n.then(tt)))},p:function(n,l,f,b){return f>>>=0,b>>>=0,n=j[n>>>0],l=Ke(l>>>0),n(null,l,f,b)},k:function(n,l,f,b,A){return f>>>=0,b>>>=0,A>>>=0,n=j[n>>>0],l=Ke(l>>>0),f=fe(f),n(l,l[f],b,A)},c:Lt,C:function(n,l){return l>>>=0,n=Ke(n>>>0),l=Ke(l),n==l},n:function(n){return n>>>=0,n===0?tt($e()):(n=fe(n),tt($e()[n]))},j:function(n,l,f){l=ae(n,l>>>0);var b=l.shift();n--;var A=`return function (obj, func, destructorsRef, args) {\n`,P=0,z=[];f===0&&z.push("obj");for(var L=["retType"],Z=[b],K=0;K<n;++K)z.push("arg"+K),L.push("argType"+K),Z.push(l[K]),A+=`  var arg${K} = argType${K}.readValueFromPointer(args${P?"+"+P:""});\n`,P+=l[K].argPackAdvance;for(A+=`  var rv = ${f===1?"new func":"func.call"}(${z.join(", ")});\n`,K=0;K<n;++K)l[K].deleteObject&&(A+=`  argType${K}.deleteObject(arg${K});\n`);return b.Zb||(L.push("emval_returnValue"),Z.push(Or),A+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),L.push(A+`};\n`),n=Ot(L).apply(null,Z),f=`methodCaller<(${l.map(oe=>oe.name).join(", ")}) => ${b.name}>`,k(Ae(f,n))},s:function(n,l){return l>>>=0,n=Ke(n>>>0),l=Ke(l),tt(n[l])},e:function(n){n>>>=0,4<n&&(et.get(n).Qb+=1)},w:function(){return tt([])},m:function(n){n=Ke(n>>>0);for(var l=Array(n.length),f=0;f<n.length;f++)l[f]=n[f];return tt(l)},f:function(n){return tt(fe(n>>>0))},l:function(){return tt({})},i:function(n){n>>>=0;for(var l=Ke(n);l.length;){var f=l.pop();l.pop()(f)}Lt(n)},h:function(n,l,f){l>>>=0,f>>>=0,n=Ke(n>>>0),l=Ke(l),f=Ke(f),n[l]=f},d:function(n,l){return l>>>=0,n=sr(n>>>0,"_emval_take_value"),n=n.readValueFromPointer(l),tt(n)},aa:function(n,l){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),l>>>=0,n=new Date(1e3*n),a()[l>>>2>>>0]=n.getUTCSeconds(),a()[l+4>>>2>>>0]=n.getUTCMinutes(),a()[l+8>>>2>>>0]=n.getUTCHours(),a()[l+12>>>2>>>0]=n.getUTCDate(),a()[l+16>>>2>>>0]=n.getUTCMonth(),a()[l+20>>>2>>>0]=n.getUTCFullYear()-1900,a()[l+24>>>2>>>0]=n.getUTCDay(),n=(n.getTime()-Date.UTC(n.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,a()[l+28>>>2>>>0]=n},ba:function(n,l){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),l>>>=0,n=new Date(1e3*n),a()[l>>>2>>>0]=n.getSeconds(),a()[l+4>>>2>>>0]=n.getMinutes(),a()[l+8>>>2>>>0]=n.getHours(),a()[l+12>>>2>>>0]=n.getDate(),a()[l+16>>>2>>>0]=n.getMonth(),a()[l+20>>>2>>>0]=n.getFullYear()-1900,a()[l+24>>>2>>>0]=n.getDay();var f=(kt(n.getFullYear())?No:Ho)[n.getMonth()]+n.getDate()-1|0;a()[l+28>>>2>>>0]=f,a()[l+36>>>2>>>0]=-(60*n.getTimezoneOffset()),f=new Date(n.getFullYear(),6,1).getTimezoneOffset();var b=new Date(n.getFullYear(),0,1).getTimezoneOffset();n=(f!=b&&n.getTimezoneOffset()==Math.min(b,f))|0,a()[l+32>>>2>>>0]=n},ca:function(n){n>>>=0;var l=new Date(a()[n+20>>>2>>>0]+1900,a()[n+16>>>2>>>0],a()[n+12>>>2>>>0],a()[n+8>>>2>>>0],a()[n+4>>>2>>>0],a()[n>>>2>>>0],0),f=a()[n+32>>>2>>>0],b=l.getTimezoneOffset(),A=new Date(l.getFullYear(),6,1).getTimezoneOffset(),P=new Date(l.getFullYear(),0,1).getTimezoneOffset(),z=Math.min(P,A);return 0>f?a()[n+32>>>2>>>0]=+(A!=P&&z==b):0<f!=(z==b)&&(A=Math.max(P,A),l.setTime(l.getTime()+6e4*((0<f?z:A)-b))),a()[n+24>>>2>>>0]=l.getDay(),f=(kt(l.getFullYear())?No:Ho)[l.getMonth()]+l.getDate()-1|0,a()[n+28>>>2>>>0]=f,a()[n>>>2>>>0]=l.getSeconds(),a()[n+4>>>2>>>0]=l.getMinutes(),a()[n+8>>>2>>>0]=l.getHours(),a()[n+12>>>2>>>0]=l.getDate(),a()[n+16>>>2>>>0]=l.getMonth(),a()[n+20>>>2>>>0]=l.getYear(),n=l.getTime(),isNaN(n)?(a()[oi()>>>2>>>0]=61,n=-1):n/=1e3,BigInt(n)},_:Go,$:Lo,P:function(n,l,f){function b(K){return(K=K.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?K[1]:"GMT"}n>>>=0,l>>>=0,f>>>=0;var A=new Date().getFullYear(),P=new Date(A,0,1),z=new Date(A,6,1);A=P.getTimezoneOffset();var L=z.getTimezoneOffset(),Z=Math.max(A,L);p()[n>>>2>>>0]=60*Z,a()[l>>>2>>>0]=+(A!=L),n=b(P),l=b(z),n=Fo(n),l=Fo(l),L<A?(p()[f>>>2>>>0]=n,p()[f+4>>>2>>>0]=l):(p()[f>>>2>>>0]=l,p()[f+4>>>2>>>0]=n)},q:()=>{Bt("")},g:function(n,l,f){return n>>>=0,l=jo(l>>>0,f>>>0),Nt[n].apply(null,l)},M:function(n,l,f){return n>>>=0,l=jo(l>>>0,f>>>0),Nt[n].apply(null,l)},G:()=>{},I:()=>Date.now(),oa:()=>{throw qe+=1,"unwind"},R:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>S?(xi(),ur(Si)).cpus().length:navigator.hardwareConcurrency,O:function(n){n>>>=0;var l=o().length;if(n<=l||4294901760<n)return!1;for(var f=1;4>=f;f*=2){var b=l*(1+.2/f);b=Math.min(b,n+100663296);var A=Math;b=Math.max(n,b);e:{A=(A.min.call(A,4294901760,b+(65536-b%65536)%65536)-be.buffer.byteLength+65535)/65536;try{be.grow(A),ke();var P=1;break e}catch{}P=void 0}if(P)return!0}return!1},ha:Ko,ia:Yo,X:Qt,A:Zo,E:Xo,ea:Jo,D:Qo,a:be||d.wasmMemory,na:ri,r:function(n,l,f,b){return ri(n>>>0,l>>>0,f>>>0,b>>>0)}},re=function(){function n(f,b){return re=f.exports,re=ln(),re=Ol(),me.Ub.push(re.bb),Tt.unshift(re.va),Me=b,mr(),re}var l={a:Pl};if(Rt++,d.instantiateWasm)try{return d.instantiateWasm(l,n)}catch(f){ee(`Module.instantiateWasm callback failed with error: ${f}`),w(f)}return hr(l,function(f){n(f.instance,f.module)}).catch(w),{}}();d._OrtInit=(n,l)=>(d._OrtInit=re.wa)(n,l),d._OrtGetLastError=(n,l)=>(d._OrtGetLastError=re.xa)(n,l),d._OrtCreateSessionOptions=(n,l,f,b,A,P,z,L,Z,K)=>(d._OrtCreateSessionOptions=re.ya)(n,l,f,b,A,P,z,L,Z,K),d._OrtAppendExecutionProvider=(n,l)=>(d._OrtAppendExecutionProvider=re.za)(n,l),d._OrtAddFreeDimensionOverride=(n,l,f)=>(d._OrtAddFreeDimensionOverride=re.Aa)(n,l,f),d._OrtAddSessionConfigEntry=(n,l,f)=>(d._OrtAddSessionConfigEntry=re.Ba)(n,l,f),d._OrtReleaseSessionOptions=n=>(d._OrtReleaseSessionOptions=re.Ca)(n),d._OrtCreateSession=(n,l,f)=>(d._OrtCreateSession=re.Da)(n,l,f),d._OrtReleaseSession=n=>(d._OrtReleaseSession=re.Ea)(n),d._OrtGetInputOutputCount=(n,l,f)=>(d._OrtGetInputOutputCount=re.Fa)(n,l,f),d._OrtGetInputName=(n,l)=>(d._OrtGetInputName=re.Ga)(n,l),d._OrtGetOutputName=(n,l)=>(d._OrtGetOutputName=re.Ha)(n,l),d._OrtFree=n=>(d._OrtFree=re.Ia)(n),d._OrtCreateTensor=(n,l,f,b,A,P)=>(d._OrtCreateTensor=re.Ja)(n,l,f,b,A,P),d._OrtGetTensorData=(n,l,f,b,A)=>(d._OrtGetTensorData=re.Ka)(n,l,f,b,A),d._OrtReleaseTensor=n=>(d._OrtReleaseTensor=re.La)(n),d._OrtCreateRunOptions=(n,l,f,b)=>(d._OrtCreateRunOptions=re.Ma)(n,l,f,b),d._OrtAddRunConfigEntry=(n,l,f)=>(d._OrtAddRunConfigEntry=re.Na)(n,l,f),d._OrtReleaseRunOptions=n=>(d._OrtReleaseRunOptions=re.Oa)(n),d._OrtCreateBinding=n=>(d._OrtCreateBinding=re.Pa)(n),d._OrtBindInput=(n,l,f)=>(d._OrtBindInput=re.Qa)(n,l,f),d._OrtBindOutput=(n,l,f,b)=>(d._OrtBindOutput=re.Ra)(n,l,f,b),d._OrtClearBoundOutputs=n=>(d._OrtClearBoundOutputs=re.Sa)(n),d._OrtReleaseBinding=n=>(d._OrtReleaseBinding=re.Ta)(n),d._OrtRunWithBinding=(n,l,f,b,A)=>(d._OrtRunWithBinding=re.Ua)(n,l,f,b,A),d._OrtRun=(n,l,f,b,A,P,z,L)=>(d._OrtRun=re.Va)(n,l,f,b,A,P,z,L),d._OrtEndProfiling=n=>(d._OrtEndProfiling=re.Wa)(n),d._JsepOutput=(n,l,f)=>(d._JsepOutput=re.Xa)(n,l,f),d._JsepGetNodeName=n=>(d._JsepGetNodeName=re.Ya)(n);var oi=()=>(oi=re.Za)(),pn=d._pthread_self=()=>(pn=d._pthread_self=re._a)(),Rr=d._malloc=n=>(Rr=d._malloc=re.$a)(n),wt=d._free=n=>(wt=d._free=re.ab)(n);d.__emscripten_tls_init=()=>(d.__emscripten_tls_init=re.bb)();var ii=n=>(ii=re.cb)(n);d.__embind_initialize_bindings=()=>(d.__embind_initialize_bindings=re.db)();var ai=d.__emscripten_thread_init=(n,l,f,b,A,P)=>(ai=d.__emscripten_thread_init=re.fb)(n,l,f,b,A,P);d.__emscripten_thread_crashed=()=>(d.__emscripten_thread_crashed=re.gb)();var si=(n,l,f,b)=>(si=re.hb)(n,l,f,b),Zn=n=>(Zn=re.ib)(n),Xn=d.__emscripten_thread_exit=n=>(Xn=d.__emscripten_thread_exit=re.jb)(n),ui=()=>(ui=re.kb)(),li=(n,l)=>(li=re.lb)(n,l),Jn=()=>(Jn=re.mb)(),mn=n=>(mn=re.nb)(n),Qn=n=>(Qn=re.ob)(n),di=d.dynCall_ii=(n,l)=>(di=d.dynCall_ii=re.qb)(n,l),ci=n=>(ci=re.rb)(n),pi=()=>(pi=re.sb)(),mi=n=>(mi=re.tb)(n),fi=()=>(fi=re.ub)();d.___start_em_js=916359,d.___stop_em_js=916520;function Ol(){var n=re;n=Object.assign({},n);var l=b=>()=>b()>>>0,f=b=>A=>b(A)>>>0;return n.Za=l(n.Za),n._a=l(n._a),n.$a=f(n.$a),n.cb=f(n.cb),n.emscripten_main_runtime_thread_id=l(n.emscripten_main_runtime_thread_id),n.mb=l(n.mb),n.ob=f(n.ob),n}d.wasmMemory=be,d.stackAlloc=Qn,d.stackSave=Jn,d.stackRestore=mn,d.keepRuntimeAlive=()=>0<qe,d.UTF8ToString=Oe,d.stringToUTF8=Dt,d.lengthBytesUTF8=Je,d.ExitStatus=gr,d.PThread=me;var fn;Wt=function n(){fn||hi(),fn||(Wt=n)};function hi(){if(!(0<Rt))if(E)y(d),E||er(Tt),startWorker(d);else{if(d.preRun)for(typeof d.preRun=="function"&&(d.preRun=[d.preRun]);d.preRun.length;)It.unshift(d.preRun.shift());er(It),0<Rt||fn||(fn=!0,d.calledRun=!0,pe||(E||er(Tt),y(d),E||er(Vt)))}}return hi(),t.ready}})();typeof Ai=="object"&&typeof ao=="object"?ao.exports=Ci:typeof define=="function"&&define.amd&&define([],()=>Ci)});var Ti=Br((Vp,Wl)=>{Wl.exports=\'"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed?.(),a}}self.onmessage=handleMessage;\\n\'});var lo,st,Mr,yn,zr,Bi,co,Ve=Q(()=>{"use strict";lo=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},st=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},Mr=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],yn=e=>{switch(e){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},zr=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Bi=e=>e==="float32"||e==="int32"||e==="int64"||e==="bool"||e==="float16"||e==="uint32",co=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var bn=Q(()=>{"use strict"});var Mi=Q(()=>{"use strict";bn()});var zi,Ui=Q(()=>{"use strict";zi="1.18.0"});var Vi,Kt,po=Q(()=>{"use strict";Ui();Vi="warning",Kt={wasm:{},webgl:{},webgpu:{},versions:{common:zi},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Vi=e}},get logLevel(){return Vi}};Object.defineProperty(Kt,"logLevel",{enumerable:!0})});var lr,Wi=Q(()=>{"use strict";po();lr=Kt});var Ni=Q(()=>{"use strict"});var Hi=Q(()=>{"use strict";wn()});var Li=Q(()=>{"use strict"});var Fi=Q(()=>{"use strict";wn()});var wn=Q(()=>{"use strict";Ni();Hi();Li();Fi()});var vn=Q(()=>{"use strict";wn()});var mo,ji,Yt,Zt,fo=Q(()=>{"use strict";po();mo=(e,t)=>{Kt.wasm.trace&&console.timeStamp(`${e}::ORT::${t}`)},ji=(e,t)=>{let r=new Error().stack?.split(/\\r\\n|\\r|\\n/g)||[],o=!1;for(let i=0;i<r.length;i++){if(o&&!r[i].includes("TRACE_FUNC")){let u=`FUNC_${e}::${r[i].trim().split(" ")[1]}`;t&&(u+=`::${t}`),mo("CPU",u);return}r[i].includes("TRACE_FUNC")&&(o=!0)}},Yt=e=>{Kt.wasm.trace&&ji("BEGIN",e)},Zt=e=>{Kt.wasm.trace&&ji("END",e)}});var qi=Q(()=>{"use strict";bn();vn();fo()});var Ki=Q(()=>{"use strict";qi()});var Yi=Q(()=>{"use strict"});var Zi=Q(()=>{"use strict";bn();vn()});var Xi=Q(()=>{"use strict";Zi()});var dr=Q(()=>{"use strict";Mi();Wi();Ki();vn();fo();Yi();Xi()});var Xl,Jl,Ji,Qi,ea,Ql,De,zt=Q(()=>{"use strict";Ve();Xl=["V","I","W","E","F"],Jl=(e,t)=>{console.log(`[${Xl[e]},${new Date().toISOString()}]${t}`)},ea=(e,t)=>{Ji=e,Qi=t},Ql=(e,t)=>{let r=zr(e),o=zr(Ji);r>=o&&Jl(r,typeof t=="function"?t():t)},De=(...e)=>{Qi&&Ql(...e)}});var ta,ra=Q(()=>{"use strict";Ve();ta=(e,t)=>new(yn(t))(e)});var $n=Q(()=>{"use strict"});var _n,ed,na,go,ho,ia,aa=Q(()=>{"use strict";zt();$n();_n=e=>Math.ceil(e/16)*16,ed=1,na=()=>ed++,go=async(e,t,r,o)=>{let i=_n(r),u=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let a=e.getCommandEncoder();e.endComputePass(),a.copyBufferToBuffer(t,0,u,0,i),e.flush(),await u.mapAsync(GPUMapMode.READ);let p=u.getMappedRange();if(o){let m=o();return m.set(new Uint8Array(p,0,r)),m}else return new Uint8Array(p.slice(0,r))}finally{u.destroy()}},ho=class{constructor(t){this.backend=t;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map}upload(t,r){let o=r.buffer,i=r.byteOffset,u=r.byteLength,a=_n(u),p=this.storageCache.get(t);if(!p)throw new Error("gpu data for uploading does not exist");if(p.originalSize!==u)throw new Error(`inconsistent data size. gpu data size=${p.originalSize}, data size=${u}`);let m=this.backend.device.createBuffer({mappedAtCreation:!0,size:a,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),h=m.getMappedRange();new Uint8Array(h).set(new Uint8Array(o,i,u)),m.unmap();let d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(m,0,p.gpuData.buffer,0,a),De("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(m)}memcpy(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("source gpu data for memcpy does not exist");let i=this.storageCache.get(r);if(!i)throw new Error("destination gpu data for memcpy does not exist");if(o.originalSize!==i.originalSize)throw new Error("inconsistent source and destination gpu data size");let u=_n(o.originalSize),a=this.backend.getCommandEncoder();this.backend.endComputePass(),a.copyBufferToBuffer(o.gpuData.buffer,0,i.gpuData.buffer,0,u)}registerExternalBuffer(t,r,o){let i;if(o){if(i=this.externalBuffers.get(o),i===void 0)throw new Error("previous buffer is not registered");if(t===o)return De("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, buffer is the same, skip.`),i;this.externalBuffers.delete(o)}else i=na();return this.storageCache.set(i,{gpuData:{id:i,type:0,buffer:t},originalSize:r}),this.externalBuffers.set(t,i),De("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, registered.`),i}unregisterExternalBuffer(t){let r=this.externalBuffers.get(t);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(t),De("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let o=_n(t),i,u=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,a=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(u||a){let m=u?this.freeBuffers:this.freeUniformBuffers,h=m.get(o);h||(h=[],m.set(o,h)),h.length>0?i=h.pop():i=this.backend.device.createBuffer({size:o,usage:r})}else i=this.backend.device.createBuffer({size:o,usage:r});let p={id:na(),type:0,buffer:i};return this.storageCache.set(p.id,{gpuData:p,originalSize:t}),De("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${p.id}`),p}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r=this.storageCache.get(t);if(!r)throw new Error("releasing data does not exist");return De("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("data does not exist");await go(this.backend,o.gpuData.buffer,o.originalSize,r)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();this.buffersForUploadingPending=[];for(let t of this.buffersPending)(t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(t.size).push(t):(t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(t.size).push(t):t.destroy();this.buffersPending=[]}dispose(){this.freeBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map}},ia=(...e)=>new ho(...e)});var yo,xe,Ye=Q(()=>{"use strict";yo=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},xe=e=>new yo(e)});var bo,vt,W,Xt,Sn,xn,Cn,Ce=Q(()=>{"use strict";bo=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},vt=class{static calcShape(t,r,o=!1){let i=t.length,u=r.length;if(i===0)return r;if(u===0)return t;let a=Math.max(t.length,r.length),p=new Array(a);if(o){if(i<2||u<2)return;let m=bo.calcMatMulShape([t[i-2],t[i-1]],[r[u-2],r[u-1]]);if(m===void 0)return;[p[a-2],p[a-1]]=m}for(let m=o?3:1;m<=a;m++){let h=i-m<0?1:t[i-m],d=u-m<0?1:r[u-m];if(h!==d&&h>1&&d>1)return;p[a-m]=Math.max(h,d)}return p}static isValidBroadcast(t,r){let o=t.length,i=r.length;if(o>i)return!1;for(let u=1;u<=o;u++)if(t[o-u]!==1&&t[o-u]!==r[i-u])return!1;return!0}},W=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,o){let i=1;for(let u=r;u<o;u++){if(t[u]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=t[u]}return i}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let o=new Array(r);o[r-1]=1,o[r-2]=t[r-1];for(let i=r-3;i>=0;--i)o[i]=o[i+1]*t[i+1];return o}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(o=>this.normalizeAxis(o,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(o=>t[o]):t.slice().reverse()}static padShape(t,r){let o=t.length;return t.map((i,u)=>i+r[u]+r[u+o])}static areEqual(t,r){return t.length!==r.length?!1:t.every((o,i)=>o===r[i])}},Xt=class e{static adjustPoolAttributes(t,r,o,i,u,a){if(!t&&o.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let p=0;p<r.length-2;p++)p>=o.length?o.push(r[p+2]):o[p]=r[p+2];for(let p=0;p<o.length;p++)if(p<i.length){if(i[p]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let p=0;p<o.length;p++)if(p<u.length){if(u[p]<0)throw new Error("dilations should be greater than or equal to 1")}else u.push(1);for(let p=0;p<o.length*2;p++)if(p<a.length){if(a[p]<0)throw new Error("pad should be greater than or equal to 1")}else a.push(0);for(let p=0;p<o.length;p++){if(o[p]<=0)throw new Error("kernel shapes need to be greater than 0");if(a[p]>=o[p]||a[p+o.length]>=o[p])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,o,i,u,a,p){if(p){if(u.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let m=0;m<t.length-2;m++)e.adjustPadAndReturnShape(t[m+(a?1:2)],r[m],o[m],i[m],u,m,m+t.length-2,p)}}static computePoolOutputShape(t,r,o,i,u,a,p){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let m=[r[0],r[1]];return e.computeShapeHelper(t,r,m,o,i,u,a,p),m}static computeConvOutputShape(t,r,o,i,u,a,p){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let m=[t[0],r[0]];return e.computeShapeHelper(!1,t,m,o,i,u,a,p),m}static computeShapeHelper(t,r,o,i,u,a,p,m){if(t)for(let h=0;h<r.length-2;h++)o.push(1);else for(let h=0;h<r.length-2;h++)o.push(e.adjustPadAndReturnShape(r[h+2],i[h],u[h],a[h],p,h,h+r.length-2,m))}static adjustPadAndReturnShape(t,r,o,i,u,a,p,m){let h=o*(i-1)+1;if(m&&m!=="NOTSET")switch(m){case"VALID":return u[a]=0,u[p]=0,Math.floor((t-h)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(o!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let y=((t+r-1)/r-1)*r+i-t;return u[a]=Math.floor(m==="SAME_LOWER"?(y+1)/2:y/2),u[p]=y-u[a],Math.floor((t+y-i)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+u[a]+u[p]-h)/r+1)}},Sn=class{static getShapeOfGemmResult(t,r,o,i,u){if(t.length!==2||o.length!==2)throw new Error("shape need to be of size 2");let a,p,m;r?(a=t[1],p=t[0]):(a=t[0],p=t[1]);let h=-1;if(i?(m=o[0],h=1):(m=o[1],h=0),o[h]!==p)throw new Error("dimension mismatch");if(a<=0||m<=0||p<=0)throw new Error("invalid shape specified");if(u&&!vt.isValidBroadcast(u,[a,m]))throw new Error("gemm: invalid bias shape for broadcast");return[a,m,p]}},xn=-34028234663852886e22,Cn=34028234663852886e22});var td,vo,Ne,ht,G,He,Ze,gt,ut,ce,$o,V,J,An,wo,sa,cr,_e=Q(()=>{"use strict";Ve();Ce();td=64,vo=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},Ne=(e,t=1)=>{let r=vo(e,t);return typeof r=="string"?r:r[0]},ht=(e,t=1)=>{let r=vo(e,t);return typeof r=="string"?r:r[1]},G=e=>e.length===0?[]:[{type:"uint32",data:e},{type:"uint32",data:W.computeStrides(e)}],He=e=>e%4===0?4:e%2===0?2:1,Ze=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,gt=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}f(${r})`,ut=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,ce=(e,t,r,o)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?o==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:o==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,$o=(e,t,r,o,i)=>{let u=typeof r=="number",a=u?r:r.length,p=[...new Array(a).keys()],m=a<2?"u32":a<=4?`vec${a}<u32>`:`array<u32, ${a}>`,h=vo(t,i),d=typeof h=="string"?h:h[1],y=typeof h=="string"?h:h[0],w={indices:m,value:d,storage:y,tensor:t},_=F=>typeof F=="string"?F:`${F}u`,v={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},x=u?"uniforms.":"",T=`${x}${e}_shape`,C=`${x}${e}_strides`,S="";for(let F=0;F<a-1;F++)S+=`\n    let dim${F} = current / ${ce(C,F,a)};\n    let rest${F} = current % ${ce(C,F,a)};\n    indices[${F}] = dim${F};\n    current = rest${F};\n    `;S+=`indices[${a-1}] = current;`;let E=a<2?"":`\n  fn o2i_${e}(offset: u32) -> ${w.indices} {\n    var indices: ${w.indices};\n    var current = offset;\n    ${S}\n    return indices;\n  }`,O=F=>(v.offsetToIndices=!0,a<2?F:`o2i_${e}(${F})`),U=[];if(a>=2)for(let F=a-1;F>=0;F--)U.push(`${ce(C,F,a)} * (indices[${F}])`);let M=a<2?"":`\n  fn i2o_${e}(indices: ${w.indices}) -> u32 {\n    return ${U.join("+")};\n  }`,N=F=>(v.indicesToOffset=!0,a<2?F:`i2o_${e}(${F})`),Y=(...F)=>a===0?"0u":`${w.indices}(${F.map(_).join(",")})`,se=(F,ie)=>a<2?`${F}`:`${ce(F,ie,a)}`,B=(F,ie,he)=>a<2?`${F}=${he};`:`${ce(F,ie,a)}=${he};`,te={},Pe=(F,ie)=>{v.broadcastedIndicesToOffset=!0;let he=`${ie.name}broadcastedIndicesTo${e}Offset`;if(he in te)return`${he}(${F})`;let Xe=[];for(let nt=a-1;nt>=0;nt--){let ke=ie.indicesGet("outputIndices",nt+ie.rank-a);Xe.push(`${se(C,nt)} * (${ke} % ${se(T,nt)})`)}return te[he]=`fn ${he}(outputIndices: ${ie.type.indices}) -> u32 {\n             return ${Xe.length>0?Xe.join("+"):"0u"};\n           }`,`${he}(${F})`},Ee=(F,ie)=>(()=>{if(w.storage===w.value)return`${e}[${F}]=${ie};`;if(w.storage==="vec2<u32>"&&w.value==="i32")return`${e}[${F}]=vec2<u32>(u32(${ie}), select(0u, 0xFFFFFFFFu, ${ie} < 0));`;if(w.storage==="vec2<u32>"&&w.value==="u32")return`${e}[${F}]=vec2<u32>(u32(${ie}), 0u);`;if(w.storage==="u32"&&w.value==="vec4<bool>")return`${e}[${F}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ie}));`;throw new Error(`not supported combination of storage type ${w.storage} and value type ${w.value} yet`)})(),ee=F=>(()=>{if(w.storage===w.value)return`${e}[${F}]`;if(w.storage==="vec2<u32>"&&w.value==="i32")return`i32(${e}[${F}].x)`;if(w.storage==="vec2<u32>"&&w.value==="u32")return`u32(${e}[${F}].x)`;if(w.storage==="u32"&&w.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${F}] & 0xFFu), bool(${e}[${F}] & 0xFF00u), bool(${e}[${F}] & 0xFF0000u), bool(${e}[${F}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${w.storage} and value type ${w.value} yet`)})(),be=a<2?"":`\n  fn get_${e}ByIndices(indices: ${w.indices}) -> ${d} {\n    return ${ee(`i2o_${e}(indices)`)};\n  }`,Me=a<2?"":(()=>{let F=p.map(he=>`d${he}: u32`).join(", "),ie=p.map(he=>`d${he}`).join(", ");return`\n  fn get_${e}(${F}) -> ${d} {\n    return get_${e}ByIndices(${Y(ie)});\n  }`})(),pe=(...F)=>{if(F.length!==a)throw new Error(`indices length must be ${a}`);let ie=F.map(_).join(",");return a===0?ee("0u"):a===1?ee(ie[0]):(v.get=!0,v.getByIndices=!0,v.indicesToOffset=!0,`get_${e}(${ie})`)},ye=F=>a<2?ee(F):(v.getByIndices=!0,v.indicesToOffset=!0,`get_${e}ByIndices(${F})`),de=a<2?"":`\n  fn set_${e}ByIndices(indices: ${w.indices}, value: ${d}) {\n    ${Ee(`i2o_${e}(indices)`,"value")}\n  }`,we=a<2?"":(()=>{let F=p.map(he=>`d${he}: u32`).join(", "),ie=p.map(he=>`d${he}`).join(", ");return`\n  fn set_${e}(${F}, value: ${d}) {\n    set_${e}ByIndices(${Y(ie)}, value);\n  }`})();return{impl:()=>{let F=[],ie=!1;return v.offsetToIndices&&(F.push(E),ie=!0),v.indicesToOffset&&(F.push(M),ie=!0),v.broadcastedIndicesToOffset&&(Object.values(te).forEach(he=>F.push(he)),ie=!0),v.set&&(F.push(we),ie=!0),v.setByIndices&&(F.push(de),ie=!0),v.get&&(F.push(Me),ie=!0),v.getByIndices&&(F.push(be),ie=!0),!u&&ie&&F.unshift(`const ${T} = ${w.indices}(${r.join(",")});`,`const ${C} = ${w.indices}(${W.computeStrides(r).join(",")});`),F.join(`\n`)},type:w,offsetToIndices:O,indicesToOffset:N,broadcastedIndicesToOffset:Pe,indices:Y,indicesGet:se,indicesSet:B,set:(...F)=>{if(F.length!==a+1)throw new Error(`indices length must be ${a}`);let ie=F[a];if(typeof ie!="string")throw new Error("value must be string");let he=F.slice(0,a).map(_).join(",");return a===0?Ee("0u",ie):a===1?Ee(he[0],ie):(v.set=!0,v.setByIndices=!0,v.indicesToOffset=!0,`set_${e}(${he}, ${ie})`)},setByOffset:Ee,setByIndices:(F,ie)=>a<2?Ee(F,ie):(v.setByIndices=!0,v.indicesToOffset=!0,`set_${e}ByIndices(${F}, ${ie});`),get:pe,getByOffset:ee,getByIndices:ye,usage:o,name:e,strides:C,shape:T,rank:a}},V=(e,t,r,o=1)=>$o(e,t,r,"input",o),J=(e,t,r,o=1)=>$o(e,t,r,"output",o),An=(e,t,r,o=1)=>$o(e,t,r,"internal",o),wo=class{constructor(t){this.normalizedDispatchGroup=t;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=td){let r=typeof t=="number"?t:t[0],o=typeof t=="number"?1:t[1],i=typeof t=="number"?1:t[2],u=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,a=u?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>`,p=u?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${r*o*i}u + local_idx;`;return`@compute @workgroup_size(${r}, ${o}, ${i})\n  fn main(${a}) {\n    ${p}\n  `}appendVariableUniforms(t){t.rank!==0&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,r){if(t.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let o=t.usage==="input"?"read":"read_write",i=t.type.storage;return`@group(0) @binding(${r}) var<storage, ${o}> ${t.name}: array<${i}>;`}declareVariables(...t){return t.map(r=>this.declareVariable(r,this.variableIndex++)).join(`\n`)}registerInternalVariable(t){if(t.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(t,r,o=1){return this.uniforms.push({name:t,type:r,length:o}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:r,type:o,length:i}of this.uniforms)if(i&&i>4)o==="f16"?t.push(`@align(16) ${r}:array<mat2x4<${o}>, ${Math.ceil(i/8)}>`):t.push(`${r}:array<vec4<${o}>, ${Math.ceil(i/4)}>`);else{let u=i==null||i===1?o:`vec${i}<${o}>`;t.push(`${r}:${u}`)}return`\n      struct Uniforms { ${t.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`\n`)+this.internalVariables.map(t=>t.impl()).join(`\n`)}},sa=e=>new wo(e),cr=(e,t)=>{let r=e.length,o=[];for(let i=0;i<r;i++){let u=r-1-i,a=e[u]||1;(t[t.length-1-i]||1)>1&&a===1&&o.unshift(u)}return o}});var rd,ua,nd,od,yt,la,da,pr=Q(()=>{"use strict";Ce();Ye();_e();rd=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},ua=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,nd=(e,t)=>W.sortBasedOnPerm(e,ua(e.length,t)),od=(e,t,r,o)=>{let i=[];i.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let u=0;u<t;++u)i.push(r.indicesSet("a",e[u],`i[${u}]`));return i.push("return a;}"),i.join(`\n`)},yt=(e,t)=>{let r=e.dataType,o=e.dims.length,i=ua(o,t),u=nd(e.dims,i),a=J("output",r,u.length),p=V("a",r,o),m=h=>`\n  ${h.registerUniform("output_size","u32").declareVariables(p,a)}\n\n  ${od(i,o,p,a)}\n\n  ${h.mainStart()}\n    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${a.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${a.setByOffset("global_idx",p.getByIndices("aIndices"))}\n  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:h=>{let d=W.size(u);return{outputs:[{dims:u,dataType:h[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:[{type:"uint32",data:d},...G(h[0].dims),...G(u)]}},getShaderSource:m}},la=(e,t)=>{rd(e.inputs),e.compute(yt(e.inputs[0],t.perm))},da=e=>xe({perm:e.perm})});var id,ad,sd,ud,ld,dd,cd,pd,md,fd,$t,ca,pa,ma,fa,ha,ga,ya,ba,wa,va,$a=Q(()=>{"use strict";Ce();_e();In();pr();id={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},ad={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},sd={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},ud={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},ld=(e,t)=>{let r=[];for(let o=t-e;o<t;++o)r.push(o);return r},dd=(e,t)=>{let r=[],o=e.length;for(let u=0;u<o;u++)t.indexOf(u)===-1&&r.push(e[u]);let i=t.map(u=>e[u]);return[r,i]},cd=(e,t)=>{let r=e.length+t.length,o=[],i=0;for(let u=0;u<r;u++)t.indexOf(u)===-1?o.push(e[i++]):o.push(1);return o},pd=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},md=(e,t)=>{let r=[];if(!pd(e,t)){for(let o=0;o<t;++o)e.indexOf(o)===-1&&r.push(o);e.forEach(o=>r.push(o))}return r},fd=(e,t,r,o,i,u,a)=>{let p=r[0].dims,m=W.size(u),h=W.size(a),d=V("_A",r[0].dataType,p),y=J("output",i,u),w=32,_=`\n          var<workgroup> aBestValues : array<${y.type.storage}, ${w}>;\n       `;return{name:e,shaderCache:t,getShaderSource:x=>`\n        ${x.registerUniform("reduceSize","u32").declareVariables(d,y)}\n        ${_}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${x.mainStart(w)}\n\n          let outputIndex = global_idx / ${w};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = ${y.type.storage}(${sd[o]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${w}) {\n           let candidate = ${y.type.storage}(${d.getByOffset("offset + k")});\n           bestValue = ${id[o]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${w}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${ad[o]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${y.setByOffset("outputIndex",`${o==="mean"?`bestValue / ${y.type.storage}(uniforms.reduceSize)`:`${ud[o]}`}`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:u,dataType:i}],dispatchGroup:{x:m},programUniforms:[{type:"uint32",data:h}]})}},$t=(e,t,r,o)=>{let i=e.inputs.length===1?r:_o(e.inputs,r),u=i.axes;u.length===0&&!i.noopWithEmptyAxes&&(u=e.inputs[0].dims.map((_,v)=>v));let a=W.normalizeAxes(u,e.inputs[0].dims.length),p=a,m=e.inputs[0],h=md(p,e.inputs[0].dims.length);h.length>0&&(m=e.compute(yt(e.inputs[0],h),{inputs:[0],outputs:[-1]})[0],p=ld(p.length,m.dims.length));let[d,y]=dd(m.dims,p),w=d;i.keepDims&&(w=cd(d,a)),e.compute(fd(t,{hint:i.cacheKey,inputDependencies:["type"]},[m],o,e.inputs[0].dataType,w,y),{inputs:[m]})},ca=(e,t)=>{$t(e,"ReduceMeanShared",t,"mean")},pa=(e,t)=>{$t(e,"ReduceL1Shared",t,"l1")},ma=(e,t)=>{$t(e,"ReduceL2Shared",t,"l2")},fa=(e,t)=>{$t(e,"ReduceLogSumExpShared",t,"logSumExp")},ha=(e,t)=>{$t(e,"ReduceMaxShared",t,"max")},ga=(e,t)=>{$t(e,"ReduceMinShared",t,"min")},ya=(e,t)=>{$t(e,"ReduceProdShared",t,"prod")},ba=(e,t)=>{$t(e,"ReduceSumShared",t,"sum")},wa=(e,t)=>{$t(e,"ReduceSumSquareShared",t,"sumSquare")},va=(e,t)=>{$t(e,"ReduceLogSumShared",t,"logSum")}});var _t,hd,Tn,_o,St,gd,yd,bd,wd,vd,$d,_d,Sd,xd,Cd,xt,_a,Sa,xa,Ca,Aa,Ia,Ta,Ea,Pa,Oa,In=Q(()=>{"use strict";Ce();Ye();_e();$a();_t=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},hd=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],Tn=(e,t,r,o,i,u,a=!1,p=!1)=>{let m=[],h=r[0].dims,d=h.length,y=W.normalizeAxes(i,d),w=!p&&y.length===0;h.forEach((T,C)=>{w||y.indexOf(C)>=0?a&&m.push(1):m.push(T)});let _=m.length,v=W.size(m);return{name:e,shaderCache:t,getShaderSource:T=>{let C=[],S=V("_A",r[0].dataType,d),E=J("output",u,_),O=o(S,E,y),U=O[2];for(let M=0,N=0;M<d;M++)w||y.indexOf(M)>=0?(a&&N++,U=`for(var j${M}: u32 = 0; j${M} < ${h[M]}; j${M}++) {\n                  ${O[2].includes("last_index")?`let last_index = j${M};`:""}\n                  ${S.indicesSet("input_indices",M,`j${M}`)}\n                  ${U}\n                }`):(C.push(`${S.indicesSet("input_indices",M,E.indicesGet("output_indices",N))};`),N++);return`\n\n        ${T.registerUniform("output_size","u32").declareVariables(S,E)}\n\n        ${T.mainStart()}\n          ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${S.type.indices};\n          let output_indices = ${E.offsetToIndices("global_idx")};\n\n          ${C.join(`\n`)}\n          ${O[0]}       // init ops for reduce max/min\n          ${O[1]}\n          ${U}\n          ${O[3]}\n          ${O.length===4?E.setByOffset("global_idx","value"):O.slice(4).join(`\n`)}\n        }`},getRunData:()=>({outputs:[{dims:m,dataType:u}],dispatchGroup:{x:Math.ceil(v/64)},programUniforms:[{type:"uint32",data:v},...G(h),...G(m)]})}},_o=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(o=>r.push(Number(o))),xe({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},St=(e,t,r,o)=>{let i=e.inputs,u=i.length===1?r:_o(i,r);e.compute(Tn(t,{hint:u.cacheKey,inputDependencies:["rank"]},[i[0]],u.noopWithEmptyAxes&&u.axes.length===0?hd:o,u.axes,i[0].dataType,u.keepDims,u.noopWithEmptyAxes),{inputs:[0]})},gd=(e,t)=>{_t(e.inputs),St(e,"ReduceLogSum",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,"value = log(value);"])},yd=(e,t)=>{_t(e.inputs),St(e,"ReduceL1",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += abs(${o.getByIndices("input_indices")});`,""])},bd=(e,t)=>{_t(e.inputs),St(e,"ReduceL2",t,(o,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},wd=(e,t)=>{_t(e.inputs),St(e,"ReduceLogSumExp",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += exp(${o.getByIndices("input_indices")});`,"value = log(value);"])},vd=(e,t)=>{_t(e.inputs),St(e,"ReduceMax",t,(o,i,u)=>{let a=[];for(let p=0;p<o.rank;p++)(u.indexOf(p)>=0||u.length===0)&&a.push(o.indicesSet("input_indices",p,0));return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = max(value, ${o.getByIndices("input_indices")});`,""]})},$d=(e,t)=>{_t(e.inputs),St(e,"ReduceMean",t,(o,i,u)=>{let a=1;for(let p=0;p<o.rank;p++)(u.indexOf(p)>=0||u.length===0)&&(a*=e.inputs[0].dims[p]);return["var sum = f32(0);","",`sum += f32(${o.getByIndices("input_indices")});`,`let value = ${i.type.value}(sum / ${a});`]})},_d=(e,t)=>{_t(e.inputs),St(e,"ReduceMin",t,(o,i,u)=>{let a=[];for(let p=0;p<o.rank;p++)(u.indexOf(p)>=0||u.length===0)&&a.push(`input_indices[${p}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = min(value, ${o.getByIndices("input_indices")});`,""]})},Sd=(e,t)=>{_t(e.inputs),St(e,"ReduceProd",t,(o,i)=>[`var value = ${i.type.storage}(1);`,"",`value *= ${o.getByIndices("input_indices")};`,""])},xd=(e,t)=>{_t(e.inputs),St(e,"ReduceSum",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,""])},Cd=(e,t)=>{_t(e.inputs),St(e,"ReduceSumSquare",t,(o,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += t * t;`,""])},xt=(e,t,r)=>{if(t.length===0)return r;let o=1,i=1;for(let u=0;u<t.length;u++)t.indexOf(u)===-1?o*=e[u]:i*=e[u];return i<32&&o>1024},_a=(e,t)=>{xt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?$d(e,t):ca(e,t)},Sa=(e,t)=>{xt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?yd(e,t):pa(e,t)},xa=(e,t)=>{xt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?bd(e,t):ma(e,t)},Ca=(e,t)=>{xt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?wd(e,t):fa(e,t)},Aa=(e,t)=>{xt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?vd(e,t):ha(e,t)},Ia=(e,t)=>{xt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?_d(e,t):ga(e,t)},Ta=(e,t)=>{xt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Sd(e,t):ya(e,t)},Ea=(e,t)=>{xt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?xd(e,t):ba(e,t)},Pa=(e,t)=>{xt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Cd(e,t):wa(e,t)},Oa=(e,t)=>{xt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?gd(e,t):va(e,t)}});var ka,Ra,Ba,So,Da=Q(()=>{"use strict";Ve();Ye();In();ka=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},Ra=(e,t)=>{ka(e.inputs);let r=(o,i,u)=>{let a=[];for(let p=0;p<o.rank;p++)(u.indexOf(p)>=0||u.length===0)&&a.push(`input_indices[${p}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(Tn("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},Ba=(e,t)=>{ka(e.inputs);let r=(o,i,u)=>{let a=[];for(let p=0;p<o.rank;p++)(u.indexOf(p)>=0||u.length===0)&&a.push(`input_indices[${p}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(Tn("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},So=e=>xe(e)});var Ad,Id,Td,Ed,En,Pd,Ma,xo=Q(()=>{"use strict";Ve();$n();_e();Ad=(e,t)=>{let r=e[0],o=e[1],i=e[2],u=e[3],a=e[4],p=e[5];if(a&&p)throw new Error("Attention cannot have both past and relative_position_bias");if(r.dims.length!==3)throw new Error(\'Input "input" must have 3 dimensions\');let m=r.dims[0],h=r.dims[1],d=r.dims[2];if(i.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimensions\');if(o.dims.length!==2)throw new Error(\'Input "weights" is expected to have 2 dimensions\');if(o.dims[0]!==d)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(i.dims[0]!==o.dims[1])throw new Error(\'Input "bias" dimension 0 should have same length as dimension 1 of input "weights"\');let y=i.dims[0]/3,w=y,_=w;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let E of t.qkvHiddenSizes)if(E%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");y=t.qkvHiddenSizes[0],w=t.qkvHiddenSizes[1],_=t.qkvHiddenSizes[2]}let v=h;if(y!==w)throw new Error("qkv_hidden_sizes first element should be same as the second");if(i.dims[0]!==y+w+_)throw new Error(\'Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes\');let x=0;if(a){if(w!==_)throw new Error(\'Input "past" expect k_hidden_size == v_hidden_size\');if(a.dims.length!==5)throw new Error(\'Input "past" must have 5 dimensions\');if(a.dims[0]!==2)throw new Error(\'Input "past" first dimension must be 2\');if(a.dims[1]!==m)throw new Error(\'Input "past" second dimension must be batch_size\');if(a.dims[2]!==t.numHeads)throw new Error(\'Input "past" third dimension must be num_heads\');if(a.dims[4]!==w/t.numHeads)throw new Error(\'Input "past" fifth dimension must be k_hidden_size / num_heads\');t.pastPresentShareBuffer||(x=a.dims[3])}let T=v+x,C=-1,S=0;if(u)throw new Error("Mask not supported");if(a)throw new Error("past is not supported");if(p)throw new Error("relativePositionBias is not supported");return{batchSize:m,sequenceLength:h,pastSequenceLength:x,kvSequenceLength:v,totalSequenceLength:T,maxSequenceLength:C,inputHiddenSize:d,hiddenSize:y,vHiddenSize:_,headSize:Math.floor(y/t.numHeads),vHeadSize:Math.floor(_/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:S,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Id=(e,t,r,o)=>{let i=He(o),u=64,a=o/i;a<u?u=1:a/8<64&&(u=Math.ceil(a/8));let p=Math.ceil(o/i/u),h=[{type:st(t.dataType),data:1/o},{type:"uint32",data:a},{type:"uint32",data:p}],d=Ne(t.dataType,i),y=w=>{let _=J("x",t.dataType,t.dims,i),v="thread_max_vector";i===2?v="max(thread_max_vector.x, thread_max_vector.y)":i===4&&(v="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let x=ht(t.dataType),T=[{name:"d_inv",type:x},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`\n  var<workgroup> wgMax: array<f32, ${u}>;\n  var<workgroup> wgSum: array<f32, ${u}>;\n  ${w.registerUniforms(T).declareVariables(_)}\n  ${w.mainStart([u,1,1])}\n    let localOffset = local_idx * uniforms.elements_per_wg;\n    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;\n\n    var thread_max_vector = ${Ze("f32",i,"-3.402823e+38f")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      thread_max_vector = max(${gt(x,i,"x[offset + i]")}, thread_max_vector);\n    }\n    wgMax[local_idx] = ${v};\n    workgroupBarrier();\n\n    var maxValue = -3.402823e+38f;\n    for (var i = 0u; i < ${u}; i++) {\n      maxValue = max(wgMax[i], maxValue);\n    }\n\n    var sumVector = ${Ze("f32",i,"0")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      sumVector += exp(${gt(x,i,"x[offset + i]")} - maxValue);\n    }\n    wgSum[local_idx] = ${ut("sumVector",i)};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${u}; i++) {\n      sum += wgSum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        x[offset + i] = ${Ze(x,i,"uniforms.d_inv")};\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        let f32input = ${gt(x,i,"x[offset + i]")};\n        x[offset + i] = ${_.type.value}(exp(f32input - maxValue) / sum);\n      }\n    }\n  }`};e.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${u};${d};${i}`},getShaderSource:y,getRunData:()=>({outputs:[],dispatchGroup:{x:r},programUniforms:h})},{inputs:[t],outputs:[]})},Td=(e,t,r,o,i,u)=>{let a=[i.batchSize,i.numHeads,i.sequenceLength,i.kvSequenceLength+i.pastSequenceLength],p=u.scale===0?1/Math.sqrt(i.headSize):u.scale,m=He(i.headSize),h=i.headSize/m,d=12,y={x:Math.ceil(i.totalSequenceLength/d),y:Math.ceil(i.sequenceLength/d),z:i.batchSize*i.numHeads},w=st(t.dataType),_=[{type:"uint32",data:i.sequenceLength},{type:"uint32",data:h},{type:"uint32",data:i.totalSequenceLength},{type:"uint32",data:i.kvSequenceLength},{type:w,data:p}],v=[t,r],x=C=>{let S=V("q",t.dataType,t.dims,m),E=V("key",r.dataType,r.dims,m),O=J("output",t.dataType,a),U=Ne(t.dataType),M=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:U}];return`\n  const beta: ${U} = 1.0;\n  const TILE_SIZE = ${d}u;\n\n  var<workgroup> tileQ: array<${S.type.storage}, ${d*d}>;\n  var<workgroup> tileK: array<${S.type.storage}, ${d*d}>;\n  ${C.registerUniforms(M).declareVariables(S,E,O)}\n  ${C.mainStart([d,d,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let lm = m + local_id.y;\n    let ln = n + local_id.x;\n\n    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;\n    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;\n\n    var value = ${Ze(U,m)};\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m + local_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * uniforms.M * uniforms.N;\n    if (lm < uniforms.M && ln < uniforms.N) {\n      let outputIdx = headOffset + lm * uniforms.N + ln;\n      output[outputIdx] = ${ut("value",m)} * uniforms.alpha;\n    }\n  }`},T=e.compute({name:"AttentionProbs",shaderCache:{hint:`${m}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:t.dataType,gpuDataType:0}],dispatchGroup:y,programUniforms:_}),getShaderSource:x},{inputs:v,outputs:[-1]})[0];return Id(e,T,i.batchSize*i.numHeads*i.sequenceLength,i.totalSequenceLength),T},Ed=(e,t,r,o)=>{let i=[o.batchSize,o.sequenceLength,o.vHiddenSize],u=12,a={x:Math.ceil(o.vHeadSize/u),y:Math.ceil(o.sequenceLength/u),z:o.batchSize*o.numHeads},p=[{type:"uint32",data:o.sequenceLength},{type:"uint32",data:o.totalSequenceLength},{type:"uint32",data:o.vHeadSize},{type:"uint32",data:o.numHeads},{type:"uint32",data:o.vHiddenSize}],m=h=>{let d=V("probs",t.dataType,t.dims),y=V("v",r.dataType,r.dims),w=J("output",t.dataType,i),_=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`\n  const TILE_SIZE = ${u}u;\n  var<workgroup> tileQ: array<${d.type.value}, ${u*u}>;\n  var<workgroup> tileK: array<${d.type.value}, ${u*u}>;\n  ${h.registerUniforms(_).declareVariables(d,y,w)}\n  ${h.mainStart([u,u,1])}\n   let headIdx = workgroup_id.z;\n   let m = workgroup_id.y * TILE_SIZE + local_id.y;\n   let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;\n   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;\n\n   var value = ${d.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n     if (m < uniforms.M && w + local_id.x < uniforms.K) {\n       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n     }\n     if (n < uniforms.N && w + local_id.y < uniforms.K) {\n       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];\n     }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;\n   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + currentBatchHeadNumber * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`};return e.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:i,dataType:t.dataType,gpuDataType:0}],dispatchGroup:a,programUniforms:p}),getShaderSource:m},{inputs:[t,r],outputs:[0]})[0]},En=(e,t,r,o,i,u,a,p,m,h,d)=>{let y=Td(e,t,r,m,h,d);Ed(e,y,o,h)},Pd=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],o=t.sequenceLength,i=t.inputHiddenSize,u=t.headSize,a=12,p={x:Math.ceil(t.headSize/a),y:Math.ceil(t.sequenceLength/a),z:t.batchSize*t.numHeads},m=[e.inputs[0],e.inputs[1],e.inputs[2]],h=[{type:"uint32",data:o},{type:"uint32",data:i},{type:"uint32",data:u},{type:"uint32",data:t.numHeads},{type:"uint32",data:t.headSize},{type:"uint32",data:t.hiddenSize},{type:"uint32",data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],d=y=>{let w=J("output_q",m[0].dataType,r),_=J("output_k",m[0].dataType,r),v=J("output_v",m[0].dataType,r),x=V("input",m[0].dataType,m[0].dims),T=V("weight",m[1].dataType,m[1].dims),C=V("bias",m[2].dataType,m[2].dims),S=x.type.storage,E=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`\n  const TILE_SIZE = ${a}u;\n  var<workgroup> tileInput: array<${S}, ${a*a}>;\n  var<workgroup> tileWeightQ: array<${S}, ${a*a}>;\n  var<workgroup> tileWeightK: array<${S}, ${a*a}>;\n  var<workgroup> tileWeightV: array<${S}, ${a*a}>;\n  ${y.registerUniforms(E).declareVariables(x,T,C,w,_,v)}\n  ${y.mainStart([a,a,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = workgroup_id.y * TILE_SIZE + local_id.y;\n    let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${S}(0);\n    var valueK = ${S}(0);\n    var valueV = ${S}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:p,programUniforms:h}),getShaderSource:d},{inputs:m,outputs:[-1,-1,-1]})},Ma=(e,t)=>{let r=Ad(e.inputs,t),[o,i,u]=Pd(e,r);return En(e,o,i,u,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t)}});var Od,kd,Rd,za,Ua=Q(()=>{"use strict";dr();Ce();Ye();_e();Od=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(o,i,u)=>{let a=i.length;if(a!==o.length)throw new Error(`${u}: num dimensions != ${a}`);i.forEach((p,m)=>{if(p!==o[m])throw new Error(`${u}: dim[${m}] do not match`)})};if(e[0].dims.length>1){let o=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,o,"Invalid input scale"),r(e[2].dims,o,"Invalid input B"),r(e[3].dims,o,"Invalid input mean"),r(e[4].dims,o,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},kd=(e,t)=>{let{epsilon:r,spatial:o,format:i}=t,u=e[0].dims,a=o?He(u[u.length-1]):1,p=i==="NHWC"&&u.length>1?a:1,m=W.size(u)/a,h=o,d=h?u.length:u,y=V("x",e[0].dataType,e[0].dims,a),w=V("scale",e[1].dataType,e[1].dims,p),_=V("bias",e[2].dataType,e[2].dims,p),v=V("inputMean",e[3].dataType,e[3].dims,p),x=V("inputVar",e[4].dataType,e[4].dims,p),T=J("y",e[0].dataType,d,a),C=()=>{let E="";if(o)E=`let cOffset = ${u.length===1?"0u":i==="NHWC"?`outputIndices[${u.length-1}] / ${a}`:"outputIndices[1]"};`;else if(i==="NCHW")E=`\n            ${T.indicesSet("outputIndices","0","0")}\n            let cOffset = ${T.indicesToOffset("outputIndices")};`;else{E=`var cIndices = ${w.type.indices}(0);\n                       cIndices[0] = outputIndices[${u.length-1}];`;for(let O=1;O<w.rank;O++)E+=`cIndices[${O}] = outputIndices[${O}];`;E+=`let cOffset = ${w.indicesToOffset("cIndices")};`}return E},S=E=>`\n  const epsilon = ${r};\n  ${E.registerUniform("outputSize","u32").declareVariables(y,w,_,v,x,T)}\n  ${E.mainStart()}\n  ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${T.offsetToIndices(`global_idx * ${a}`)};\n    ${C()}\n    let scale = ${w.getByOffset("cOffset")};\n    let bias = ${_.getByOffset("cOffset")};\n    let inputMean = ${v.getByOffset("cOffset")};\n    let inputVar = ${x.getByOffset("cOffset")};\n    let x = ${y.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${T.setByOffset("global_idx","value")}\n  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${o}_${a}`,inputDependencies:h?["rank","type","type","type","type"]:void 0},getShaderSource:S,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:h?[{type:"uint32",data:m},...G(u)]:[{type:"uint32",data:m}]})}},Rd=e=>xe(e),za=(e,t)=>{let{inputs:r,outputCount:o}=e,i=Rd({...t,outputCount:o});if(lr.webgpu.validateInputContent&&Od(r,i),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(kd(r,i))}});var Bd,Dd,Va,Wa=Q(()=>{"use strict";Ce();_e();Bd=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Dd=e=>{let t=e[0].dims,r=e[0].dims[2],o=W.size(t)/4,i=e[0].dataType,u=V("input",i,t,4),a=V("bias",i,[r],4),p=V("residual",i,t,4),m=J("output",i,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:d=>`\n  const channels = ${r}u / 4;\n  ${d.declareVariables(u,a,p,m)}\n\n  ${d.mainStart()}\n    ${d.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n    let value = ${u.getByOffset("global_idx")}\n      + ${a.getByOffset("global_idx % channels")} + ${p.getByOffset("global_idx")};\n    ${m.setByOffset("global_idx","value")}\n  }`}},Va=e=>{Bd(e.inputs),e.compute(Dd(e.inputs))}});var Md,Te,Na,Ha,Ga,La,Fa,ja,qa,Ka,Ya,zd,Za,Xa,Ja,Qa,Pn,es,On,ts,rs,ns,os,is,as,ss,us,ls,ds,cs,ps,ms,fs,hs,gs,ys,bs,ws,Co=Q(()=>{"use strict";Ve();Ce();Ye();_e();Md=(e,t,r,o,i,u)=>{let a=Math.ceil(t/4),p="";typeof i=="string"?p=`${i}(a)`:p=i("a");let m=V("inputData",r,[a],4),h=J("outputData",o,[a],4);return`\n      ${e.registerUniform("vec_size","u32").declareVariables(m,h)}\n\n  ${u??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${m.getByOffset("global_idx")};\n    ${h.setByOffset("global_idx",p)}\n  }`},Te=(e,t,r,o,i,u=e.dataType)=>({name:t,shaderCache:{hint:i,inputDependencies:["type"]},getShaderSource:a=>Md(a,W.size(e.dims),e.dataType,u,r,o),getRunData:a=>({outputs:[{dims:e.dims,dataType:u}],dispatchGroup:{x:Math.ceil(W.size(a[0].dims)/64/4)},programUniforms:[{type:"uint32",data:Math.ceil(W.size(e.dims)/4)}]})}),Na=e=>{e.compute(Te(e.inputs[0],"Abs","abs"))},Ha=e=>{e.compute(Te(e.inputs[0],"Acos","acos"))},Ga=e=>{e.compute(Te(e.inputs[0],"Acosh","acosh"))},La=e=>{e.compute(Te(e.inputs[0],"Asin","asin"))},Fa=e=>{e.compute(Te(e.inputs[0],"Asinh","asinh"))},ja=e=>{e.compute(Te(e.inputs[0],"Atan","atan"))},qa=e=>{e.compute(Te(e.inputs[0],"Atanh","atanh"))},Ka=e=>xe(e),Ya=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${t.to}`)}e.compute(Te(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},zd=e=>{let t=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:xn,r=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:Cn;return xe({min:t,max:r})},Za=(e,t)=>{let r=e.inputs.length===1?t:zd(e.inputs),o=ht(e.inputs[0].dataType);e.compute(Te(e.inputs[0],"Clip",i=>`clamp(${i}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${o}> = vec4(${o}(${r.min}));\n    const clip_max_: vec4<${o}> = vec4(${o}(${r.max}));\n`,r.cacheKey),{inputs:[0]})},Xa=e=>{e.compute(Te(e.inputs[0],"Ceil","ceil"))},Ja=e=>{e.compute(Te(e.inputs[0],"Cos","cos"))},Qa=e=>{e.compute(Te(e.inputs[0],"Cosh","cosh"))},Pn=e=>xe(e),es=(e,t)=>{let r=ht(e.inputs[0].dataType);e.compute(Te(e.inputs[0],"Elu",o=>`elu_vf32(${o})`,`\n  const elu_alpha_ = ${r}(${t.alpha});\n\n  fn elu_f32(a: ${r}) -> ${r} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},On=(e,t="f32")=>`\nconst r0: ${t} = 0.3275911;\nconst r1: ${t} = 0.254829592;\nconst r2: ${t} = -0.284496736;\nconst r3: ${t} = 1.421413741;\nconst r4: ${t} = -1.453152027;\nconst r5: ${t} = 1.061405429;\n\nfn erf_vf32(v: ${e}) -> ${e} {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,ts=e=>{let t=ht(e.inputs[0].dataType);e.compute(Te(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,On(`vec4<${t}>`,t)))},rs=e=>{e.compute(Te(e.inputs[0],"Exp","exp"))},ns=e=>{e.compute(Te(e.inputs[0],"Floor","floor"))},os=e=>{let t=ht(e.inputs[0].dataType);e.compute(Te(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,On(`vec4<${t}>`,t)))},is=(e,t)=>{let r=ht(e.inputs[0].dataType);e.compute(Te(e.inputs[0],"LeakyRelu",o=>`select(leaky_relu_alpha_ * ${o}, ${o}, ${o} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},as=e=>{e.compute(Te(e.inputs[0],"Not",t=>`!${t}`))},ss=e=>{e.compute(Te(e.inputs[0],"Neg",t=>`-${t}`))},us=e=>{e.compute(Te(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},ls=e=>{let t=ht(e.inputs[0].dataType);e.compute(Te(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},ds=e=>{e.compute(Te(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},cs=e=>xe(e),ps=(e,t)=>{let r=ht(e.inputs[0].dataType);e.compute(Te(e.inputs[0],"HardSigmoid",o=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${o} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},ms=e=>{e.compute(Te(e.inputs[0],"Sin","sin"))},fs=e=>{e.compute(Te(e.inputs[0],"Sinh","sinh"))},hs=e=>{e.compute(Te(e.inputs[0],"Sqrt","sqrt"))},gs=e=>{e.compute(Te(e.inputs[0],"Tan","tan"))},ys=e=>{e.compute(Te(e.inputs[0],"Tanh",t=>`sign(${t}) * (1 - exp(-2 * abs(${t}))) / (1 + exp(-2 * abs(${t})))`))},bs=(e,t)=>{let r=ht(e.inputs[0].dataType);return e.compute(Te(e.inputs[0],"ThresholdedRelu",o=>`select(vec4<${r}>(0.0), ${o}, ${o} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},ws=e=>{e.compute(Te(e.inputs[0],"Log","log"))}});var Vd,Wd,vs,$s=Q(()=>{"use strict";Ce();_e();Co();Vd=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Wd=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=V("input",e[0].dataType,e[0].dims,4),o=V("bias",e[0].dataType,[e[0].dims[2]],4),i=J("output",e[0].dataType,t,4),u=W.size(t)/4,a=Ne(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)}}),getShaderSource:m=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${m.declareVariables(r,o,i)}\n\n  ${On(`vec4<${a}>`,a)}\n\n  ${m.mainStart()}\n    ${m.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${i.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},vs=e=>{Vd(e.inputs),e.compute(Wd(e.inputs))}});var Nd,Hd,Ct,_s,Ss,xs,Cs,As,Is,Ts,Es,Ps,Os,ks=Q(()=>{"use strict";Ve();Ce();_e();Nd=(e,t,r,o,i,u,a,p,m,h,d,y)=>{let w,_;typeof p=="string"?w=_=(S,E)=>`${p}((${S}),(${E}))`:typeof p=="function"?w=_=p:(w=p.scalar,_=p.vector);let v=J("outputData",d,o.length,4),x=V("aData",m,t.length,4),T=V("bData",h,r.length,4),C;if(i)if(u){let S=W.size(t)===1,E=W.size(r)===1,O=t.length>0&&t[t.length-1]%4===0,U=r.length>0&&r[r.length-1]%4===0;S||E?C=v.setByOffset("global_idx",_(S?`${x.type.value}(${x.getByOffset("0")}.x)`:x.getByOffset("global_idx"),E?`${T.type.value}(${T.getByOffset("0")}.x)`:T.getByOffset("global_idx"))):C=`\n            let outputIndices = ${v.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${x.broadcastedIndicesToOffset("outputIndices",v)};\n            let offsetB = ${T.broadcastedIndicesToOffset("outputIndices",v)};\n            ${v.setByOffset("global_idx",_(a||O?x.getByOffset("offsetA / 4u"):`${x.type.value}(${x.getByOffset("offsetA / 4u")}[offsetA % 4u])`,a||U?T.getByOffset("offsetB / 4u"):`${T.type.value}(${T.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else C=v.setByOffset("global_idx",_(x.getByOffset("global_idx"),T.getByOffset("global_idx")));else{if(!u)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let S=(E,O,U="")=>{let M=`aData[indexA${O}][componentA${O}]`,N=`bData[indexB${O}][componentB${O}]`;return`\n            let outputIndices${O} = ${v.offsetToIndices(`global_idx * 4u + ${O}u`)};\n            let offsetA${O} = ${x.broadcastedIndicesToOffset(`outputIndices${O}`,v)};\n            let offsetB${O} = ${T.broadcastedIndicesToOffset(`outputIndices${O}`,v)};\n            let indexA${O} = offsetA${O} / 4u;\n            let indexB${O} = offsetB${O} / 4u;\n            let componentA${O} = offsetA${O} % 4u;\n            let componentB${O} = offsetB${O} % 4u;\n            ${E}[${O}] = ${U}(${w(M,N)});\n          `};d===9?C=`\n            var data = vec4<u32>(0);\n            ${S("data",0,"u32")}\n            ${S("data",1,"u32")}\n            ${S("data",2,"u32")}\n            ${S("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:C=`\n            ${S("outputData[global_idx]",0)}\n            ${S("outputData[global_idx]",1)}\n            ${S("outputData[global_idx]",2)}\n            ${S("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(x,T,v)}\n\n        ${y??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${C}\n      }`},Hd=(e,t,r,o,i,u,a=r.dataType)=>{let p=!W.areEqual(r.dims,o.dims),m=r.dims,h=W.size(r.dims),d=!1,y=!1,w=[p];if(p){let _=vt.calcShape(r.dims,o.dims,!1);if(!_)throw new Error("Can\'t perform binary op on the given tensors");m=_,h=W.size(m);let v=W.size(r.dims)===1,x=W.size(o.dims)===1,T=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,C=o.dims.length>0&&o.dims[o.dims.length-1]%4===0;w.push(v),w.push(x),w.push(T),w.push(C);let S=1;for(let E=1;E<m.length;E++){let O=r.dims[r.dims.length-E]??1,U=o.dims[o.dims.length-E]??1;if(O===U)S*=O;else break}S%4===0?(y=!0,d=!0):(v||x||T||C)&&(d=!0)}else d=!0;return w.push(d),{name:e,shaderCache:{hint:t+w.map(_=>_.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:_=>Nd(_,r.dims,o.dims,m,d,p,y,i,r.dataType,o.dataType,a,u),getRunData:()=>({outputs:[{dims:m,dataType:a}],dispatchGroup:{x:Math.ceil(h/64/4)},programUniforms:[{type:"uint32",data:Math.ceil(W.size(m)/4)},...G(r.dims),...G(o.dims),...G(m)]})}},Ct=(e,t,r,o,i,u)=>{e.compute(Hd(t,i??"",e.inputs[0],e.inputs[1],r,o,u))},_s=e=>{Ct(e,"Add",(t,r)=>`${t}+${r}`)},Ss=e=>{Ct(e,"Div",(t,r)=>`${t}/${r}`)},xs=e=>{Ct(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},Cs=e=>{Ct(e,"Mul",(t,r)=>`${t}*${r}`)},As=e=>{let t=V("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Ct(e,"Pow",{scalar:(o,i)=>`pow_custom(${o},${i})`,vector:(o,i)=>`pow_vector_custom(${o},${i})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},Is=e=>{Ct(e,"Sub",(t,r)=>`${t}-${r}`)},Ts=e=>{Ct(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},Es=e=>{Ct(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},Ps=e=>{Ct(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},Os=e=>{Ct(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}});var Ld,Fd,jd,qd,Rs,Bs,Ds=Q(()=>{"use strict";Ce();Ye();_e();Ld=e=>{if(!e||e.length<1)throw new Error("too few inputs");let t=e[0].dataType,r=e[0].dims.length;for(let o of e){if(o.dataType!==t)throw new Error("input tensors should be one type");if(o.dims.length!==r)throw new Error("input tensors should have the same shape")}},Fd=(e,t)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${t});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,jd=(e,t)=>{let r=e.length,o=[];for(let i=0;i<r;++i){let u=t.setByOffset("global_idx",e[i].getByIndices("indices"));r===1?o.push(u):i===0?o.push(`if (inputIndex == ${i}u) { ${u} }`):i===r-1?o.push(`else { ${u} }`):o.push(`else if (inputIndex == ${i}) { ${u} }`)}return o.join(`\n`)},qd=(e,t)=>{let r=e[0].dims.slice();if(t>=r.length||t<-1*r.length)throw new Error("axis specified for concat doesn\'t match input dimensionality");let o=t<0?r.length+t:t,i=r.slice(0);for(let C=1;C<e.length;C++){let S=e[C].dims.slice();for(let E=0;E<r.length;E++)if(E===o)i[o]+=S[E];else if(r[E]!==S[E])throw new Error("non concat dimensions must match")}let u=W.size(i),a=new Array(e.length),p=new Array(e.length),m=e[0].dataType,h=0,d=[],y=[],w=[{type:"uint32",data:u}];for(let C=0;C<e.length;++C)h+=e[C].dims[o],a[C]=h,y.push(e[C].dims.length),p[C]=V(`input${C}`,m,y[C]),d.push("rank"),w.push({type:"uint32",data:a[C]});for(let C=0;C<e.length;++C)w.push(...G(e[C].dims));w.push(...G(i));let _=J("output",m,i.length),v=_.indicesGet("indices",o),x=Array.from(Array(a.length).keys()).map(C=>`uniforms.sizeInConcatAxis${C}`).join(","),T=C=>`\n\n  ${(()=>{C.registerUniform("outputSize","u32");for(let S=0;S<e.length;S++)C.registerUniform(`sizeInConcatAxis${S}`,"u32");return C.declareVariables(...p,_)})()}\n\n  ${Fd(a.length,x)}\n\n  ${C.mainStart()}\n    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${_.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${v});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${a.length}u>(${x});\n      ${v} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${jd(p,_)}\n  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:w}),getShaderSource:T}},Rs=(e,t)=>{Ld(e.inputs),e.compute(qd(e.inputs,t.axis))},Bs=e=>xe({axis:e.axis})});var At,kn,Ut=Q(()=>{"use strict";Ce();At=(e,t)=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(uniforms.clip_min), ${t}(uniforms.clip_max));`;default:return""}},kn=e=>{let t=e?.activation||"";if(t==="Clip"){let[r,o]=e?.activation_params||[xn,Cn];return{activation:t,clipMax:o,clipMin:r}}return{activation:t}}});var je,Rn,Bn=Q(()=>{"use strict";je=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Rn=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `});var Dn,Ao=Q(()=>{"use strict";Dn=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`});var Kd,Yd,Ur,Ms,Zd,Vr,Xd,Mn,Wr=Q(()=>{"use strict";Ce();_e();Ut();Bn();Kd=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,Yd=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,Ur=(e,t,r="f32",o,i=!1,u=32,a=!1,p=32)=>{let m=t[1]*e[1],h=t[0]*e[0],d=i?m:u,y=i?u:m,w=d/t[0],_=u/t[1];if(!((i&&w===4&&e[1]===4||!i&&(w===3||w===4))&&d%t[0]===0&&u%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${i} is true, innerElementSize ${w} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${w} must be 3 or 4.\n  tileAWidth ${d} must be divisible by workgroupSize[0]${t[0]}. tileInner ${u} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${w}<${r}>, ${d/w}>, ${y}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${r}>, ${h/e[0]}>, ${u}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${w};\nconst tileInner = ${u};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${a?"0":"i32(globalId.z)"};\n  ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${m};\n\n  let num_tiles = ${a?`${Math.ceil(p/u)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n  var kStart = ${a?`i32(globalId.z) * ${p}`:"0"};\n\n  var acc: array<vec4<${r}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${_};\n  for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${Kd(i,o)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${o?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${w===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${Yd(i,w)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},Ms=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,Zd=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Vr=(e,t,r="f32",o,i=!1,u=32,a=!1,p=32,m=!1)=>{let h=e[1]*t[1],d=e[0]*t[0],y=i?h:u,w=i?u:h;if(!(w%t[1]===0&&y%t[0]===0&&u%t[1]===0))throw new Error(`tileAHight ${w} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${y} must be divisible by workgroupSize[0]${t[0]}, tileInner ${u} must be divisible by workgroupSize[1]${t[1]}`);let _=w/t[1],v=y/t[0],x=u/t[1],T=m?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${h};\n    let globalColStart = i32(workgroupId.x) * ${d};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${w}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${y}; inputCol = inputCol + ${t[0]}) {\n          ${Ms(i,o)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${u}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${o?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${r}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${h};\n\nlet tileRowA = i32(localId.y) * ${_};\nlet tileColA = i32(localId.x) * ${v};\nlet tileRowB = i32(localId.y) * ${x};\n// Loop over shared dimension.\nfor (var t = 0; t < num_tiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${v}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${Ms(i,o)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${x}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${o?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${r}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${Zd(i)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${r}, ${y}>, ${w}>;\n  var<workgroup> mm_Bsub : array<array<${r}, ${d}>, ${u}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${u};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${a?"0":"i32(globalId.z)"};\n    ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n    let num_tiles = ${a?`${Math.ceil(p/u)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n    var kStart = ${a?`i32(globalId.z) * ${p}`:"0"};\n\n    var acc : array<array<${r}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${T}\n  }\n`},Xd=(e,t,r,o,i,u=!1)=>{let[a,p,m]=i,[h,d,y,w]=o,_=cr(a,m),v=cr(p,m),x=Ne(o[0].type.tensor),T=()=>{let E=d.rank,O=h.rank,U=`var aIndices: ${d.type.indices};`;for(let M=E-2-1,N=O-1;M>=0;M--,N--)U+=`\naIndices[${M}] = ${O>1?`batchIndices[${N}]`:"batchIndices"};`;return _.forEach(M=>{U+=`\naIndices[${M}] = 0;`}),U+=`\naIndices[${E-2}] = u32(row);\n                   aIndices[${E-1}] = u32(colIn);`,U},C=()=>{let E=y.rank,O=h.rank,U=`var bIndices: ${y.type.indices};`;for(let M=E-2-1,N=O-1;M>=0;M--,N--)U+=`\nbIndices[${M}] = ${O>1?`batchIndices[${N}]`:"batchIndices"};`;return v.forEach(M=>{U+=`\nbIndices[${M}] = 0;`}),U+=`\nbIndices[${E-2}] = u32(row);\n                   bIndices[${E-1}] = u32(colIn);`,U};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${je(e,x)} {\n      var value = ${je(e,x)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\n      {\n        ${T()}\n        value = ${d.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${je(e,x)} {\n      var value = ${je(e,x)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\n      {\n        ${C()}\n        value = ${y.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${je(e,x)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${u?"bias[colIn]":`${je(e,x)}(bias[row])`};`:""}\n        ${r}\n        ${w.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},Mn=(e,t,r,o,i=!1)=>{let u=e[0].dims,a=e[1].dims,p=u.slice(0,-2),m=a.slice(0,-2),h=o?o.slice(0,-2):r.slice(0,-2),d=W.size(h),y=u[u.length-2],w=u[u.length-1],_=a[a.length-1],v=w%4===0&&_%4===0,x=y<=8?[4,1,1]:[4,4,1],T=[8,8,1],C=[Math.ceil(_/T[0]/x[0]),Math.ceil(y/T[1]/x[1]),Math.ceil(d/T[2]/x[2])],S=v?4:1,E=[...p,y,w/S],O=E.length,U=[...m,w,_/S],M=U.length,N=[d,y,_/S],Y=[{type:"int32",data:y},{type:"int32",data:_},{type:"int32",data:w}];t.activation==="Clip"&&Y.push({type:"float32",data:t.clipMax},{type:"float32",data:t.clipMin}),Y.push(...G(h),...G(E),...G(U));let se=["rank","rank"],B=e.length>2;B&&(Y.push(...G(e[2].dims)),se.push("rank")),Y.push(...G(N));let te=Pe=>{let Ee=h.length,ee=An("batchDims",e[0].dataType,Ee,1),be=Ne(e[0].dataType),Me=V("a",e[0].dataType,O,S),pe=V("b",e[1].dataType,M,S),ye=J("result",e[0].dataType,N.length,S),de=[Me,pe];if(B){let Ge=i?S:1;de.push(V("bias",e[2].dataType,e[2].dims.length,Ge))}let we=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];t.activation==="Clip"&&we.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"});let ze=At(t,ye.type.value),Re=Xd(S,B,ze,[ee,Me,pe,ye],[p,m,h],i);return`\n  ${Pe.registerUniforms(we).registerInternalVariables(ee).declareVariables(...de,ye)}\n  ${Re}\n  ${v?Ur(x,T,be,ee):Vr(x,T,be,ee)}\n                   `};return{name:"MatMul",shaderCache:{hint:`${x};${t.activation};${v};${i}`,inputDependencies:se},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:C[0],y:C[1],z:C[2]},programUniforms:Y}),getShaderSource:te}}});var Jd,zs,Us=Q(()=>{"use strict";zt();_e();Ut();Bn();Ao();Wr();Jd=(e,t,r,o,i=!1,u,a=4,p=4,m=4,h="f32")=>{let d=B=>{switch(B){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${h}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${B} is not supported.`)}},y=B=>{switch(B){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${B} is not supported.`)}},w=e?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,_=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,v=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",x=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",T=e?"row":"col",C=e?"col":"row",S=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${T} / outWidth;\n    let outCol = ${T} % outWidth;\n\n    let WRow = ${C} / (i32(uniforms.w_shape[1]) * inChannels);\n    let WCol = ${C} / inChannels % i32(uniforms.w_shape[1]);\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n    let xCh = ${C} % inChannels;\n    var resData = ${je(a,h)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the \'same\' padding type.\n    if (xRow >= 0 && xRow < ${v} && xCol >= 0 && xCol < ${x}) {\n      ${w}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${d(a)}\n    }\n    return resData;`,E=e?t&&o?`\n    let col = colIn * ${a};\n    ${S}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n      ${S}\n    }\n    return ${je(a,h)}(0.0);`:o&&r?`\n    let col = colIn * ${a};\n    ${S}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${S}\n    }\n    return ${je(a,h)}(0.0);`,O=`${y(p)}`,U=je(m,h),M=e?je(a,h):je(p,h),N=e?je(p,h):je(a,h),Y=At(u,U);return`\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${M} {\n      ${e?E:O}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${N} {\n      ${e?O:E}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${U}) {\n      let col = colIn * ${m};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${_}\n      ${Rn(i)}\n      ${Y}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},zs=(e,t,r,o,i,u,a,p)=>{let m=t.format==="NHWC",h=m?e[0].dims[3]:e[0].dims[1],d=r[0],y=m?r[2]:r[3],w=m?r[1]:r[2],_=m?r[3]:r[1],v=m&&(h%4===0||h%3===0)&&_%4===0,x=m?_:y*w,T=m?y*w:_,C=[8,8,1],S=o<=8?[4,1,1]:[4,4,1],E=[Math.ceil(x/C[0]/S[0]),Math.ceil(T/C[1]/S[1]),Math.ceil(d/C[2]/S[2])];De("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${E}`);let O=v?m&&h%4!==0?3:4:1,U=C[1]*S[1],M=C[0]*S[0],N=Math.max(C[0]*O,C[1]),Y=o%U===0,se=i%M===0,B=u%N===0,te=v?[O,4,4]:[1,1,1],Pe=[{type:"int32",data:o},{type:"int32",data:i},{type:"int32",data:u},{type:"int32",data:[t.pads[0],t.pads[1]]},{type:"int32",data:t.strides},{type:"int32",data:t.dilations}];t.activation==="Clip"&&Pe.push({type:"float32",data:t.clipMax},{type:"float32",data:t.clipMin}),Pe.push(...G(e[0].dims),...G(e[1].dims));let Ee=["rank","rank"];a&&(Pe.push(...G(e[2].dims)),Ee.push("rank")),Pe.push(...G(r));let ee=be=>{let Me=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];t.activation==="Clip"&&Me.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"});let pe=v?4:1,ye=Ne(e[0].dataType),de=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${v?`vec4<${ye}>`:ye}) {\n        result[flatIndex] = ${v?`vec4<${ye}>`:ye}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${v?`vec4<${ye}>`:ye}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${v?"/ 4":""}, value);\n      }`,we=V("x",e[0].dataType,e[0].dims.length,O===3?1:O),ze=V("w",e[1].dataType,e[1].dims.length,pe),Re=[we,ze],Ge=J("result",e[0].dataType,r.length,pe);if(a){let F=V("bias",e[2].dataType,e[2].dims.length,pe);Re.push(F),de+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${v?`vec4<${ye}>`:ye} {\n          return bias[coords.${m?"w":"y"}${v?"/ 4":""}];\n        }`}return`\n        ${Dn("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${be.registerUniforms(Me).declareVariables(...Re,Ge)}\n        ${de}\n        ${Jd(m,Y,se,B,a,t,te[0],te[1],te[2],ye)}\n        ${v?Ur(S,C,ye,void 0,!m,N):Vr(S,C,ye,void 0,!m,N,!1,void 0,p)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${O};${v};${Y};${se};${B};${U};${M};${N}`,inputDependencies:Ee},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:Pe}),getShaderSource:ee}}});var Io,Vs=Q(()=>{"use strict";Ce();_e();Eo();Ut();Io=(e,t,r)=>{let o=e.length>2,i=o?"value += b[output_channel];":"",u=e[0].dims,a=e[1].dims,p=a[0]/t.group,m=t.format==="NHWC",h=To(u,a,t.dilations,t.pads,t.strides,m),d=W.size(h),y=[{type:"uint32",data:d},{type:"uint32",data:t.dilations},{type:"uint32",data:[t.strides[0],t.strides[1]]},{type:"uint32",data:[t.pads[0],t.pads[1]]},{type:"uint32",data:p}];t.activation==="Clip"&&y.push({type:"float32",data:t.clipMax},{type:"float32",data:t.clipMin}),y.push(...G(u),...G(a),...G(h));let w=["rank","rank"];o&&(y.push(...G(e[2].dims)),w.push("rank")),y.push(...G(h));let _=v=>{let x=J("output",e[0].dataType,h.length),T=At(t,x.type.value),C=V("x",e[0].dataType,u.length),S=V("w",e[1].dataType,a.length),E=[C,S];o&&E.push(V("b",e[2].dataType,e[2].dims));let O=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return t.activation==="Clip"&&O.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}),`\n  ${v.registerUniforms(O).declareVariables(...E,x)}\n\n  ${v.mainStart()}\n    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let outputIndices = ${x.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${m?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${m?1:2}], outputIndices[${m?2:3}]) * uniforms.strides - uniforms.pads;\n    let group_id: u32 = output_channel / uniforms.output_channels_per_group;\n\n    var value: ${x.type.value} = ${x.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\n      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[${m?1:2}]) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[${m?2:3}]) {\n            continue;\n          }\n\n          let xVal = ${m?C.get("batch","xHeight","xWidth","input_channel"):C.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${S.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${i}\n    ${T}\n    ${x.setByOffset("global_idx","value")}\n  }`};return{name:"GroupedConv",shaderCache:{hint:t.cacheKey,inputDependencies:w},getRunData:()=>({outputs:[{dims:r?r(h):h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:y}),getShaderSource:_}}});var Po,Qd,Ws,Oo=Q(()=>{"use strict";Ce();Wr();_e();Ut();Po=(e,t,r,o,i=!1)=>{let u=e[0].dims,a=e[1].dims,p=u[u.length-2],m=a[a.length-1],h=u[u.length-1],d=He(m),y=He(h),w=He(p),_=W.size(r)/d/w,v=e.length>2,x=o?o.slice(0,-2):r.slice(0,-2),C=[W.size(x),p,m],S=[{type:"uint32",data:_},{type:"uint32",data:p},{type:"uint32",data:m},{type:"uint32",data:h}];t.activation==="Clip"&&S.push({type:"float32",data:t.clipMax},{type:"float32",data:t.clipMin}),S.push(...G(x),...G(u),...G(a)),v&&S.push(...G(e[2].dims)),S.push(...G(C));let E=O=>{let U=An("batch_dims",e[0].dataType,x.length),M=V("a",e[0].dataType,u.length,y),N=V("b",e[1].dataType,a.length,d),Y=J("output",e[0].dataType,C.length,d),se=At(t,Y.type.value),B=[M,N],te="";if(v){let de=i?d:1;B.push(V("bias",e[2].dataType,e[2].dims.length,de)),te=`${i?`value += bias[col / ${de}];`:`value += ${Y.type.value}(bias[row + i]);`}`}let Pe=u.slice(0,-2),Ee=a.slice(0,-2),ee=cr(Pe,x),be=cr(Ee,x),Me=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];t.activation==="Clip"&&Me.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"});let pe=(de,we)=>{let ze=de.rank,Re=de.name;if(ze===2)return`var ${Re}_indices = ${de.type.indices}(0u, 0u);`;let Ge=U.rank,F=`var ${Re}_indices: ${de.type.indices};`;for(let ie=ze-2-1,he=Ge-1;ie>=0;ie--,he--)F+=`\n${Re}_indices[${ie}] = ${Ge>1?`batch_indices[${he}]`:"batch_indices"};`;return we.forEach(ie=>{F+=`\n${Re}_indices[${ie}] = 0;`}),F+=`${Re}_indices[${ze-2}] = 0u;\n                     ${Re}_indices[${ze-1}] = 0u;`,F},ye=()=>{let de=`var a_data: ${M.type.value};`;for(let we=0;we<y;we++)de+=`\n              let b_data${we} = b[(b_offset + (k + ${we}) * uniforms.N + col) / ${d}];`;for(let we=0;we<w;we++){de+=`a_data = a[(a_offset + (row + ${we}) * uniforms.K + k) / ${y}];`;for(let ze=0;ze<y;ze++)de+=`\n            values[${we}] = fma(${N.type.value}(a_data${y===1?"":`[${ze}]`}), b_data${ze}, values[${we}]);\n`}return de};return`\n  ${O.registerUniforms(Me).registerInternalVariables(U).declareVariables(...B,Y)}\n  ${O.mainStart()}\n    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let col = (global_idx % (uniforms.N / ${d})) * ${d};\n    var index1 = global_idx / (uniforms.N / ${d});\n    let stride1 = uniforms.M / ${w};\n    let row = (index1 % stride1) * ${w};\n    let batch = index1 / stride1;\n\n    ${r.length===2?"":`let batch_indices = ${U.offsetToIndices("batch")};`}\n    ${pe(M,ee)}\n    let a_offset = ${M.indicesToOffset("a_indices")};\n    ${pe(N,be)}\n    let b_offset = ${N.indicesToOffset("b_indices")};\n    var values: array<${Y.type.value}, ${w}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${y}) {\n      ${ye()}\n    }\n    for (var i = 0u; i < ${w}u; i++) {\n      var value = values[i];\n      ${te}\n      ${se}\n      let cur_indices = ${Y.type.indices}(batch, row + i, col);\n      let offset = ${Y.indicesToOffset("cur_indices")};\n      ${Y.setByOffset(`offset / ${d}`,"value")};\n    }\n  }\n  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${d};${y};${w};${i}`,inputDependencies:v?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:S}),getShaderSource:E}},Qd=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Ws=e=>{Qd(e.inputs);let t=vt.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can\'t use matmul on the given tensors");let r=t[t.length-1],o=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&o<8?e.compute(Po(e.inputs,{activation:""},t)):e.compute(Mn(e.inputs,{activation:""},t))}});var To,Ns,ec,Hs,ko,tc,rc,Ro,Eo=Q(()=>{"use strict";Ce();Us();Wr();Vs();Ut();Oo();pr();To=(e,t,r,o,i,u)=>{let a=e[0],p=e.slice(u?1:2,u?3:4),m=p.length,h=t[0],y=t.slice(2).map((v,x)=>v+(v-1)*(r[x]-1)),_=p.map((v,x)=>v+o[x]+o[x+m]).map((v,x)=>Math.floor((v-y[x]+i[x])/i[x]));return _.splice(0,0,a),_.splice(u?3:1,0,h),_},Ns=[2,3,1,0],ec=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[1]*t.group;if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let i=e[0].dims.length-2;if(t.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(t.strides.length!==i)throw new Error(`strides should be ${i}D`);if(t.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},Hs=(e,t)=>{let r=e.kernelShape.slice();for(let u=2;u<t[1].dims.length;++u)r[u-2]===0&&(r[u-2]=t[1].dims[u]);let o=e.pads.slice();Xt.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,o,e.format==="NHWC",e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:r,pads:o}),i},ko=e=>{let t=kn(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],i=e.dilations,u=e.group,a=e.kernel_shape,p=e.pads,m=e.strides,h=e.w_is_const();return{autoPad:o,format:r,dilations:i,group:u,kernelShape:a,pads:p,strides:m,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},tc=(e,t,r)=>{let o=Hs(r,t),i=r.format==="NHWC";if(r.group!==1){e.compute(Io(t,o));return}let u=t.length===3,a=t[0].dims[i?1:2],p=t[0].dims[i?2:3],m=t[0].dims[i?3:1],h=t[1].dims[2],d=t[1].dims[3],y=To(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,i),w=y[i?1:2],_=y[i?2:3],v=y[i?3:1],x=i&&h===a&&d===p&&r.pads[0]===0&&r.pads[1]===0;if(x||h===1&&d===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let M=y[0],N,Y,se,B=[];if(i){let Ee=e.kernelCustomData.wT??e.compute(yt(t[1],Ns),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Ee),x){let ee=a*p*m;N=t[0].reshape([1,M,ee]),Y=Ee.reshape([1,ee,v]),se=[1,M,v]}else N=t[0].reshape([M,a*p,m]),Y=Ee.reshape([1,m,v]),se=[M,w*_,v];B.push(N),B.push(Y)}else N=t[0].reshape([M,m,a*p]),Y=t[1].reshape([1,v,m]),se=[M,v,w*_],B.push(Y),B.push(N);u&&B.push(t[2]);let te=se[2],Pe=B[0].dims[B[0].dims.length-1];te<8&&Pe<8?e.compute(Po(B,o,y,se,i),{inputs:B}):e.compute(Mn(B,o,y,se,i),{inputs:B});return}let T=!0,C=e.kernelCustomData.wT??e.compute(yt(t[1],Ns),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=C);let S=[t[0],C];u&&S.push(t[2]);let E=i?w*_:v,O=i?v:w*_,U=h*d*m;e.compute(zs(S,o,y,E,O,U,u,T),{inputs:S})},rc=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let i=[0,t.pads[0],0,t.pads[1]],u=[1].concat(t.strides),a=[1].concat(t.dilations),p=[1].concat(t.kernelShape),m=Hs({...t,pads:i,strides:u,dilations:a,kernelShape:p},o);e.compute(Io(o,m,h=>r?[h[0],h[2],h[3]]:[]))},Ro=(e,t)=>{ec(e.inputs,t),e.inputs[0].dims.length===3?rc(e,t):tc(e,e.inputs,t)}});var nc,Gs,Ls=Q(()=>{"use strict";zt();_e();Ut();Bn();Ao();Wr();nc=(e,t=!1,r,o=4)=>{let i=je(o,"f32"),u=C=>{switch(C){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return vec4<f32>(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${C} is not supported.`)}},a=e?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,p=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,m=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",h=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",d=e?"row":"col",y=e?"col":"row",w=`\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      let outRow = ${d} / outWidth;\n      let outCol = ${d} % outWidth;\n\n      let WRow = ${y} / (uniforms.filter_dims[1] * inChannels);\n      let WCol = ${y} / inChannels % uniforms.filter_dims[1];\n      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(${m}) || fract(xR) > 0.0) {\n        return ${i}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${h}) || fract(xC) > 0.0) {\n        return ${i}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${y} % inChannels;\n      ${a}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${o}];`,_=e?`\n      let col = colIn * ${o};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n        ${w}\n      }\n      return ${i}(0.0);`:`\n      let col = colIn * ${o};\n      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n        ${w}\n      }\n      return ${i}(0.0);`,v=`\n      let col = colIn * ${o};\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);\n      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];\n      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${u(o)}\n      }\n      return ${i}(0.0);\n      `,x=At(r,i);return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${i} {\n    ${e?_:v}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${i} {\n    ${e?v:_}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${i}) {\n    let col = colIn * ${o};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n      var value = valueInput;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${p}\n      ${Rn(t)}\n      ${x}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${o}] = value;\n    }\n  }`},Gs=(e,t,r,o,i,u,a,p)=>{let m=t.format==="NHWC",h=m?e[0].dims[3]:e[0].dims[1],d=r[0],y=m?r[2]:r[3],w=m?r[1]:r[2],_=m?r[3]:r[1],v=m?h%4===0&&_%4===0:y%4===0&&_%4===0,x=m?_:y*w,T=m?y*w:_,C=v?[8,8,1]:[x<=4||T<=4?4:16,x>4&&T<=4?4:16,1],S=v?[4,4,1]:[x<=4?1:4,x>4&&T<=4?1:4,1],E=[Math.ceil(x/C[0]/S[0]),Math.ceil(T/C[1]/S[1]),Math.ceil(d/C[2]/S[2])];De("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${E}`);let O=v?4:1,U=Math.max(C[0]*O,C[1]),M=v?4:1,N=[t.kernelShape[m?1:2],t.kernelShape[m?2:3]],Y=[N[0]+(t.dilations[0]<=1?0:(N[0]-1)*(t.dilations[0]-1)),N[1]+(t.dilations[1]<=1?0:(N[1]-1)*(t.dilations[1]-1))],se=[Y[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),Y[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],B=[{type:"int32",data:o},{type:"int32",data:i},{type:"int32",data:u},{type:"int32",data:t.strides},{type:"int32",data:t.dilations},{type:"int32",data:N},{type:"int32",data:se}];t.activation==="Clip"&&B.push({type:"float32",data:t.clipMax},{type:"float32",data:t.clipMin}),B.push(...G(e[0].dims),...G(e[1].dims));let te=["rank","rank"];a&&(B.push(...G(e[2].dims)),te.push("rank")),B.push(...G(r));let Pe=Ee=>{let ee=V("x",e[0].dataType,e[0].dims.length,M),be=V("w",e[1].dataType,e[1].dims.length,1),Me=J("result",e[0].dataType,r.length,M),pe=[ee,be],ye="";if(a){let we=V("bias",e[2].dataType,e[2].dims.length,M);pe.push(we),ye+=`\n          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${v?"vec4<f32>":"f32"} {\n            return bias[coords.${m?"w":"y"}${v?"/ 4":""}];\n          }`}let de=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:N.length},{name:"pads",type:"i32",length:se.length}];return t.activation==="Clip"&&de.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}),`\n        ${Dn("uniforms.result_strides")}\n        ${Ee.registerUniforms(de).declareVariables(...pe,Me)};\n        ${ye}\n        ${nc(m,a,t,O)}\n        ${v?Ur(S,C,"f32",void 0,!m,U):Vr(S,C,"f32",void 0,!m,U,!1,void 0,p)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${S};${C};${v}`,inputDependencies:te},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:B}),getShaderSource:Pe}}});var oc,Bo,Fs=Q(()=>{"use strict";zt();Ce();_e();oc=(e,t,r,o,i,u=!1,a,p,m=!1)=>{let h=m?1:2,d=m?2:3,y=m?3:1,w=u?2:1,_=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${u?`vec4<${a}>`:a}) {\n    result[flatIndex] = ${u?`vec4<${a}>`:a}(value);\n  }`;o&&(_+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${u?`vec4<${a}>`:a} {\n      return bias[coords.${m?"w":"y"}${u?"/ 4":""}];\n    }`);let v=u?4:1,x=V("W",t[1].dataType,t[1].dims.length,v),T=V("Dy",t[0].dataType,t[0].dims.length,v),C=[T,x];o&&C.push(V("bias",t[2].dataType,[r[y]].length,v));let S=J("result",t[0].dataType,r.length,v),E=`{\n        let batch: u32 = ${i?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];\n        let r = ${i?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];\n        let c = ${i?"global_id.y":"workgroup_id.y"} * ${w};\n        let d1: u32 = ${i?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${a}>, ${w}>;\n        for (var i = 0; i < ${w}; i++) {\n          dotProd[i] = vec4<${a}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {\n          var dyR = (${a}(dyCorner.x) + ${a}(wR)) / ${a}(uniforms.strides.x);\n          let wRPerm = uniforms.filter_dims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {\n            let dyC = (${a}(dyCorner.y) + ${a}(wC)) / ${a}(uniforms.strides.y);\n            let dyC2 = (${a}(dyCorner.y) + 1.0 + ${a}(wC)) / ${a}(uniforms.strides.y);\n            let wCPerm = uniforms.filter_dims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${a}(uniforms.Dy_shape[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${T.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${T.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${a}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = uniforms.Dy_shape[${y}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${T.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${T.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${w}; i = i + 1) {\n          let value = dotProd[i] + ${o?"bias[c+i]":`vec4<${a}>(0.0)`};\n          ${S.set("batch","r","c + i","d1","value")};\n        }\n      }`,O=`\n          let outputIndices = ${S.offsetToIndices("global_idx")};\n          let batch = ${S.indicesGet("outputIndices",0)};\n          let d1 = ${S.indicesGet("outputIndices",y)};\n          let r = ${S.indicesGet("outputIndices",h)};\n          let c = ${S.indicesGet("outputIndices",d)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / uniforms.output_channels_per_group;\n          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = ${a}(0.0);\n          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\n            if (wR % uniforms.dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${a}(dyRCorner) + ${a}(wR)) / ${a}(uniforms.strides[0]);\n            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\n            if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[${h}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\n              if (wC % uniforms.dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${a}(dyCCorner) + ${a}(wC)) / ${a}(uniforms.strides.y);\n              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\n              if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[${d}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * uniforms.input_channels_per_group;\n              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {\n                let xValue = ${m?T.get("batch","idyR","idyC","inputChannel"):T.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${x.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${o?"bias[d1]":`${a}(0.0)`};\n          ${S.setByOffset("global_idx","value")};\n        `;return`\n  ${e.registerUniforms(p).declareVariables(...C,S)}\n  ${_}\n\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};\n  ${u?E:O}}`},Bo=(e,t,r)=>{let o=e.length>2,i=t.outputShape,u=W.size(i),a=[Math.ceil(u/64),1,1];De("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${a}`);let p=t.format==="NHWC",m=["rank","rank"],h=[t.strides[0],t.strides[1]],d=[t.kernelShape[p?1:2],t.kernelShape[p?2:3]],y=[t.dilations[0],t.dilations[1]],w=[d[0]+(t.dilations[0]<=1?0:(t.kernelShape[p?1:2]-1)*(t.dilations[0]-1)),d[1]+(t.dilations[1]<=1?0:(t.kernelShape[p?2:3]-1)*(t.dilations[1]-1))],_=[w[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),w[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],v=!1,x=t.group,T=e[1].dims,C=T[0]/x,S=T[1],E=[{type:"int32",data:u},{type:"uint32",data:h},{type:"uint32",data:d},{type:"uint32",data:y},{type:"uint32",data:w},{type:"int32",data:_},{type:"uint32",data:C},{type:"uint32",data:S},...G(e[0].dims),...G(e[1].dims)];o&&(E.push(...G(e[2].dims)),m.push("rank")),E.push(...G(i));let O=a[1]===1&&a[2]===1,U=M=>{let N=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:h.length},{name:"filter_dims",type:"u32",length:d.length},{name:"dilations",type:"u32",length:d.length},{name:"effective_filter_dims",type:"u32",length:w.length},{name:"pads",type:"i32",length:_.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],Y=Ne(e[0].dataType);return`${oc(M,e,i,o,O,v,Y,N,p)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:m},getRunData:()=>({dispatchGroup:{x:a[0],y:a[1],z:a[2]},outputs:[{dims:r?r(i):i,dataType:e[0].dataType}],programUniforms:E}),getShaderSource:U}}});var ic,ac,sc,js,qs,uc,lc,dc,cc,Ks,Ys=Q(()=>{"use strict";Ls();Fs();Ut();pr();ic=(e,t,r,o,i,u)=>(e-1)*t+r+(o-1)*i+1-u,ac=(e,t,r,o,i)=>{let u=Math.floor(e/2);t==="SAME_UPPER"?(r[o]=u,r[i]=e-u):t==="SAME_LOWER"&&(r[o]=e-u,r[i]=u)},sc=(e,t,r,o,i,u,a,p,m,h)=>{let d=e.length-2,y=h.length===0;if(m.length===0)for(let v=0;v<d;++v)m.push(0);let w=e[0],_=t[p?3:1]*i;for(let v=0,x=e.length-d-(p?1:0);v<d;++v,++x){let T=e[x],C=y?T*a[v]:h[v],S=ic(T,a[v],u[v],t[x],r[v],C);ac(S,o,u,v,v+d),y&&h.push(a[v]*(T-1)+m[v]+(t[x]-1)*r[v]+1-u[v]-u[v+d])}h.splice(0,0,w),h.splice(p?3:1,0,_)},js=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((y,w)=>y*w,1)===0){r.length=0;for(let y=2;y<t[1].dims.length;++y)r.push(t[1].dims[y])}let o=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(o?3:1,0,t[1].dims[1]);let i=e.pads.slice(),u=e.outputShape.slice(),a=e.outputPadding.slice(),p=t[0].dims,m=e.dilations.slice();if(m.reduce((y,w)=>y+w,0)===0){let y=t[0].dims.length-2;m=new Array(y).fill(1)}let h=e.strides.slice();if(h.reduce((y,w)=>y+w,0)===0){let y=t[0].dims.length-2;h=new Array(y).fill(1)}sc(p,r,m,e.autoPad,e.group,i,h,o,a,u);let d=Object.assign({},e);return Object.assign(d,{kernelShape:r,pads:i,outputPadding:a,outputShape:u,dilations:m,strides:h}),d},qs=e=>{let t=kn(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],i=e.dilations,u=e.group,a=e.kernelShape,p=e.pads,m=e.strides,h=e.wIsConst(),d=e.outputPadding,y=e.outputShape;return{autoPad:o,format:r,dilations:i,group:u,kernelShape:a,outputPadding:d,outputShape:y,pads:p,strides:m,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},uc=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[0];if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let i=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==i))throw new Error("invalid bias");let u=e[0].dims.length-2;if(t.dilations.reduce((d,y)=>d+y,0)>0&&t.dilations.length!==u)throw new Error(`dilations should be ${u}D`);if(t.strides.reduce((d,y)=>d+y,0)>0&&t.strides.length!==u)throw new Error(`strides should be ${u}D`);if(t.pads.reduce((d,y)=>d+y,0)>0&&t.pads.length!==u*2)throw new Error(`pads should be ${u*2}D`);if(t.outputPadding.length!==u&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${u}D`);if(t.kernelShape.reduce((d,y)=>d+y,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},lc=[2,3,1,0],dc=(e,t,r)=>{let o=js(r,t),i=r.format==="NHWC",u=o.outputShape,a=u[i?3:1],p=t[0].dims[i?3:1];if(o.group!==1||a===1&&p===1){e.compute(Bo(t,o));return}let m=u[i?1:2],h=u[i?2:3],d=t[1].dims[2],y=t[1].dims[3],w=i?m*h:a,_=i?a:m*h,v=d*y*p,x=!0,T=e.kernelCustomData.wT??e.compute(yt(t[1],lc),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=T);let C=[t[0],T],S=t.length===3;S&&(!i&&t[2].dims.length===1?C.push(t[2].reshape([t[2].dims[0],1,1])):C.push(t[2])),e.compute(Gs(C,o,u,w,_,v,S,x),{inputs:C})},cc=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];o.length===3&&o.push(e.inputs[2]);let i=t.kernelShape;(i.length===0||i[0]===0)&&(i=[e.inputs[1].dims[2]]);let u=t.dilations;(u.length===0||u[0]===0)&&(u=[1]);let a=t.strides;(a.length===0||a[0]===0)&&(a=[1]);let p=t.pads;p.length===0&&(p=[0,0]),p=[0,p[0],0,p[1]],a=[1].concat(a),u=[1].concat(u),i=[1].concat(i);let m=js({...t,pads:p,strides:a,dilations:u,kernelShape:i},o);e.compute(Bo(o,m,h=>r?[h[0],h[2],h[3]]:[h[0],h[1],h[3]]))},Ks=(e,t)=>{uc(e.inputs,t),e.inputs[0].dims.length===3?cc(e,t):dc(e,e.inputs,t)}});var pc,Zs,Xs,Js=Q(()=>{"use strict";Ve();Ce();Ye();_e();pc=(e,t,r,o)=>{let i=W.size(t),u=t.length,a=V("input",e,u),p=J("output",e,u),m=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),h=W.normalizeAxis(m,u),d=y=>{let w=` i32(${a.indicesGet("inputIndices","uniforms.axis")}) `,_=ce("uniforms.input_shape","uniforms.axis",u),v=o.reverse?w+(o.exclusive?" + 1":""):"0",x=o.reverse?_:w+(o.exclusive?"":" + 1");return`\n                ${y.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(a,p)}\n                ${y.mainStart()}\n                  ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${p.offsetToIndices("global_idx")};\n                  var sum = ${p.type.value}(0);\n                  let first : i32 = ${v};\n                  let last : i32 = ${x};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${a.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${a.getByIndices("inputIndices")};\n                  }\n                  ${p.setByOffset("global_idx","sum")};\n                }`};return{name:"CumSum",shaderCache:{hint:o.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:"uint32",data:i},{type:"int32",data:h},...G(t),...G(t)]}),getShaderSource:d}},Zs=(e,t)=>{let r=e.inputs[0].dims,o=e.inputs[0].dataType,i=e.inputs[1];e.compute(pc(o,r,i,t),{inputs:[0]})},Xs=e=>{let t=e.exclusive===1,r=e.reverse===1;return xe({exclusive:t,reverse:r})}});var Do,zn,Qs,mc,fc,Mo,zo,eu,hc,tu,ru,nu=Q(()=>{"use strict";Ce();Ye();_e();Do="[a-zA-Z]|\\\\.\\\\.\\\\.",zn="("+Do+")+",Qs="^"+zn+"$",mc="("+zn+",)*"+zn,fc="^"+mc+"$",Mo=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let o=this.symbolToIndices.get(t);o===void 0?o=[r]:o.push(r),this.symbolToIndices.set(t,o)}},zo=class{constructor(t,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[o,i]=r.includes("->")?r.split("->",2):[r,""];if(!o.match(RegExp(fc)))throw new Error("Invalid LHS term");if(o.split(",").forEach((p,m)=>{let h=t[m].dims.slice();if(!p.match(RegExp(Qs)))throw new Error("Invalid LHS term");let d=this.processTerm(p,!0,h,m);this.lhs.push(d)}),i==="")i+=[...this.symbolToInfo.entries()].filter(([p,m])=>m.count===1||p==="...").map(([p])=>p).join("");else if(!i.match(RegExp(zn)))throw new Error("Invalid RHS");i.match(RegExp(Do,"g"))?.forEach(p=>{if(p==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let m=this.symbolToInfo.get(p);if(m===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(m.dimValue)}}),this.rhs=this.processTerm(i,!1,this.outputDims)}addSymbol(t,r,o){let i=this.symbolToInfo.get(t);if(i!==void 0){if(i.dimValue!==r&&i.count!==1)throw new Error("Dimension mismatch");i.count++,i.inputIndices.push(o)}else i={count:1,dimValue:r,inputIndices:[o]};this.symbolToInfo.set(t,i)}processTerm(t,r,o,i=-1){let u=o.length,a=!1,p=[],m=0;if(!t.match(RegExp(Qs))&&!r&&t!=="")throw new Error("Invalid LHS term");let h=t.match(RegExp(Do,"g")),d=new Mo(i);return h?.forEach((y,w)=>{if(y==="..."){if(a)throw new Error("Only one ellipsis is allowed per input term");a=!0;let _=u-h.length+1;if(_<0)throw new Error("Ellipsis out of bounds");if(p=o.slice(m,m+_),this.hasEllipsis){if(this.ellipsisDims.length!==p.length||this.ellipsisDims.toString()!==p.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=p;else throw new Error("Ellipsis must be specified in the LHS");for(let v=0;v<p.length;v++){let x=String.fromCharCode("0".charCodeAt(0)+v);d.addSymbol(x,w+v),this.addSymbol(x,o[m++],i)}}else d.addSymbol(y,w+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(y,o[m++],i)}),d}},eu=e=>e+"_max",hc=(e,t,r,o)=>{let u=e.map(d=>d.length).map((d,y)=>V(`input${y}`,t,d)),a=W.size(o),p=J("output",t,o.length),m=[...r.symbolToInfo.keys()].filter(d=>!r.rhs.symbolToIndices.has(d)),h=d=>{let y=[],w="var prod = 1.0;",_="var sum = 0.0;",v="sum += prod;",x=[],T=[],C=[],S=[],E=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((U,M)=>{if(r.rhs.symbolToIndices.has(M)){let N=r.rhs.symbolToIndices.get(M)?.[0];N!==void 0&&r.lhs.forEach((Y,se)=>{if(U.inputIndices.includes(se)){let B=Y.symbolToIndices.get(M);if(B===void 0)throw new Error("Invalid symbol error");B.forEach(te=>{y.push(`${u[se].indicesSet(`input${se}Indices`,te,p.indicesGet("outputIndices",N))}`)})}})}else r.lhs.forEach((N,Y)=>{if(U.inputIndices.includes(Y)){let se=N.symbolToIndices.get(M);if(se===void 0)throw new Error("Invalid symbol error");se.forEach(B=>{x.push(`${u[Y].indicesSet(`input${Y}Indices`,B,`${M}`)}`)}),S.push(`prod *= ${u[Y].getByIndices(`input${Y}Indices`)};`)}}),T.push(`for(var ${M}: u32 = 0; ${M} < uniforms.${eu(M)}; ${M}++) {`),C.push("}")});let O=E?[...y,`let sum = ${u.map((U,M)=>U.getByIndices(`input${M}Indices`)).join(" * ")};`]:[...y,_,...T,...x,w,...S,v,...C];return`\n            ${d.registerUniforms(m.map(U=>({name:`${eu(U)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...u,p)}\n\n            ${d.mainStart()}\n            ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${p.offsetToIndices("global_idx")};\n            ${u.map((U,M)=>`var input${M}Indices: ${u[M].type.indices};`).join(`\n`)}\n            ${O.join(`\n`)};\n            ${p.setByOffset("global_idx","sum")};\n          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let d=m.filter(w=>r.symbolToInfo.has(w)).map(w=>({type:"uint32",data:r.symbolToInfo.get(w)?.dimValue||0}));d.push({type:"uint32",data:a});let y=e.map((w,_)=>[...G(w)]).reduce((w,_)=>w.concat(_),d);return y.push(...G(o)),{outputs:[{dims:o,dataType:t}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:y}},getShaderSource:h}},tu=(e,t)=>{let r=new zo(e.inputs,t.equation),o=r.outputDims,i=e.inputs.map((u,a)=>u.dims);e.compute(hc(i,e.inputs[0].dataType,r,o))},ru=e=>{let t=e.equation.replace(/\\s+/g,"");return xe({equation:t})}});var gc,ou,yc,bc,iu,au=Q(()=>{"use strict";Ve();Ce();_e();gc=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=r.length<t.length?0:r.length-t.length,i=t.length<r.length?0:t.length-r.length;for(;o<r.length&&i<t.length;++o,++i)if(r[o]!==t[i]&&r[o]!==1&&t[i]!==1)throw new Error("Expand requires shape to be broadcastable to input")},ou=(e,t)=>{let r=e.length-t.length,o=[];for(let i=0;i<r;++i)o.push(e[i]);for(let i=0;i<t.length;++i)o.push(t[i]===1?e[i+r]:t[i]);return o},yc=(e,t)=>e.length>t.length?ou(e,t):ou(t,e),bc=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=yc(t,r),i=e[0].dataType,u=i===9?4:1,a=Math.ceil(W.size(o)/u),p=h=>{let d=V("input",i,t.length,u),y=J("output",i,o.length,u),w;if(i===9){let _=(v,x,T="")=>`\n          let outputIndices${x} = ${y.offsetToIndices(`outputOffset + ${x}u`)};\n          let offset${x} = ${d.broadcastedIndicesToOffset(`outputIndices${x}`,y)};\n          let index${x} = offset${x} / 4u;\n          let component${x} = offset${x} % 4u;\n          ${v}[${x}] = ${T}(${d.getByOffset(`index${x}`)}[component${x}]);\n        `;w=`\n        let outputOffset = global_idx * ${u};\n        var data = vec4<u32>(0);\n        ${_("data",0,"u32")}\n        ${_("data",1,"u32")}\n        ${_("data",2,"u32")}\n        ${_("data",3,"u32")}\n        ${y.setByOffset("global_idx","data")}\n      }`}else w=`\n        let outputIndices = ${y.offsetToIndices("global_idx")};\n        let inputOffset = ${d.broadcastedIndicesToOffset("outputIndices",y)};\n        ${y.setByOffset("global_idx",d.getByOffset("inputOffset"))}\n      }`;return`\n    ${h.registerUniform("vec_size","u32").declareVariables(d,y)}\n    ${h.mainStart()}\n    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${w}`},m=[{type:"uint32",data:a},...G(t),...G(o)];return{name:"Expand",shaderCache:{hint:`${o.length}`,inputDependencies:["rank"]},getShaderSource:p,getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:m})}},iu=e=>{gc(e.inputs),e.compute(bc(e.inputs),{inputs:[0]})}});var wc,vc,su,uu,lu=Q(()=>{"use strict";Ve();Ce();Ye();_e();wc=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},vc=(e,t)=>{let r=e[0].dims,o=e[1].dims,i=r.length,u=W.normalizeAxis(t.axis,i),a=r.slice(0);a.splice(u,1,...o);let p=r[u],m=e[0].dataType===9?4:1,h=Math.ceil(W.size(a)/m),d=[{type:"uint32",data:h},{type:"int32",data:p},{type:"uint32",data:u},...G(e[0].dims),...G(e[1].dims),...G(a)],y=w=>{let _=V("data",e[0].dataType,e[0].dims.length,m),v=V("inputIndices",e[1].dataType,e[1].dims.length),x=J("output",e[0].dataType,a.length,m),T=S=>{let E=o.length,O=`var indicesIndices${S}  = ${v.type.indices}(0);`;for(let U=0;U<E;U++)O+=`${E>1?`indicesIndices${S}[${U}]`:`indicesIndices${S}`} = ${a.length>1?`outputIndices${S}[uniforms.axis + ${U}]`:`outputIndices${S}`};`;O+=`\n          var idx${S} = ${v.getByIndices(`indicesIndices${S}`)};\n          if (idx${S} < 0) {\n            idx${S} = idx${S} + uniforms.axisDimLimit;\n          }\n          var dataIndices${S} = ${_.type.indices}(0);\n        `;for(let U=0,M=0;U<i;U++)U===u?(O+=`${i>1?`dataIndices${S}[${U}]`:`dataIndices${S}`} = u32(idx${S});`,M+=E):(O+=`${i>1?`dataIndices${S}[${U}]`:`dataIndices${S}`} = ${a.length>1?`outputIndices${S}[${M}]`:`outputIndices${S}`};`,M++);return O},C;if(e[0].dataType===9){let S=(E,O,U="")=>`\n          let outputIndices${O} = ${x.offsetToIndices(`outputOffset + ${O}u`)};\n          ${T(O)};\n          let offset${O} = ${_.indicesToOffset(`dataIndices${O}`)};\n          let index${O} = offset${O} / 4u;\n          let component${O} = offset${O} % 4u;\n          ${E}[${O}] = ${U}(${_.getByOffset(`index${O}`)}[component${O}]);\n        `;C=`\n        let outputOffset = global_idx * ${m};\n        var value = vec4<u32>(0);\n        ${S("value",0,"u32")}\n        ${S("value",1,"u32")}\n        ${S("value",2,"u32")}\n        ${S("value",3,"u32")}\n        ${x.setByOffset("global_idx","value")}\n      `}else C=`\n      let outputIndices = ${x.offsetToIndices("global_idx")};\n      ${T("")};\n      let value = ${_.getByIndices("dataIndices")};\n      ${x.setByOffset("global_idx","value")};\n      `;return`\n      ${w.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(_,v,x)}\n      ${w.mainStart()}\n        ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${C}\n      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:d}),getShaderSource:y}},su=e=>xe({axis:e.axis}),uu=(e,t)=>{let r=e.inputs;wc(r),e.compute(vc(e.inputs,t))}});var $c,_c,du,cu,pu=Q(()=>{"use strict";Ce();Ye();_e();$c=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},_c=(e,t)=>{let r=e[0].dims,o=e[0].dataType,i=r.length,u=e[1].dims,a=e[1].dataType,p=W.normalizeAxis(t.axis,i),m=r[p],h=u.slice(0),d=W.size(h),y=V("input",o,i),w=V("indicesInput",a,u.length),_=J("output",o,h.length),v=[{type:"uint32",data:d},{type:"int32",data:m},{type:"uint32",data:p}];return v.push(...G(r)),v.push(...G(u)),v.push(...G(h)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:v}),getShaderSource:C=>`\n      ${C.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(y,w,_)}\n      ${C.mainStart()}\n      ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${_.offsetToIndices("global_idx")};\n\n      var idx = ${w.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${y.type.indices}(outputIndices);\n      ${y.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${y.getByIndices("inputIndices")};\n\n      ${_.setByOffset("global_idx","value")};\n  }`}},du=e=>xe({axis:e.axis}),cu=(e,t)=>{let r=e.inputs;$c(r),e.compute(_c(e.inputs,t))}});var Sc,xc,mu,fu,hu=Q(()=>{"use strict";Ce();_e();Sc=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},xc=(e,t)=>{let r=e[0].dims.slice(),o=e[1].dims.slice(),[i,u,a]=Sn.getShapeOfGemmResult(r,t.transA,o,t.transB,e.length===3?e[2].dims:void 0),p=[i,u];if(!p)throw new Error("Can\'t use gemm on the given tensors");let m=W.size(p),h=[{type:"uint32",data:m},{type:"uint32",data:i},{type:"uint32",data:u},{type:"uint32",data:a},{type:"float32",data:t.alpha},{type:"float32",data:t.beta}],d=["type","type"];e.length===3&&(h.push(...G(e[2].dims)),d.push("rank")),h.push(...G(p));let y=w=>{let _="";t.transA&&t.transB?_="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?_="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?_="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(_="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let v=t.alpha===1?"":"value *= uniforms.alpha;",x=V("a",e[0].dataType,e[0].dims),T=V("b",e[1].dataType,e[1].dims),C=x.type.value,S=null,E=[x,T];e.length===3&&(S=V("c",e[2].dataType,e[2].dims.length),E.push(S));let O=J("output",e[0].dataType,p.length);E.push(O);let U=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`\n  ${w.registerUniforms(U).declareVariables(...E)}\n\n  ${w.mainStart()}\n    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let m = global_idx / uniforms.N;\n    let n = global_idx % uniforms.N;\n\n    var value = ${C}(0);\n    for (var k: u32 = 0u; k < uniforms.K; k++) {\n      ${_}\n    }\n\n    ${v}\n    ${(()=>S!=null?`let cOffset = ${S.broadcastedIndicesToOffset("vec2(m, n)",O)}; value += ${C}(uniforms.beta) * ${S.getByOffset("cOffset")};`:"")()}\n    output[global_idx] = value;\n  }`};return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:p,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:h}),getShaderSource:y}},mu=e=>{let t=e.transA,r=e.transB,o=e.alpha,i=e.beta;return{transA:t,transB:r,alpha:o,beta:i,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},fu=(e,t)=>{Sc(e.inputs),e.compute(xc(e.inputs,t))}});var Cc,Ac,Ic,gu,yu=Q(()=>{"use strict";Ve();Ce();_e();Cc=(e,t)=>{let r=e[0].dims,o=r,i=2,u=W.sizeToDimension(r,i),a=W.sizeFromDimension(r,i),p=He(a),m=a/p,h=[r[0],r[1],m],d=["rank","type","type"],y=[{type:"uint32",data:a},{type:"uint32",data:m}];y.push(...G(h),...G(h));let w=_=>{let v=V("x",e[0].dataType,h.length,p),x=V("scale",e[1].dataType,e[1].dims),T=V("bias",e[2].dataType,e[2].dims),C=J("output",e[0].dataType,h.length,p),S=[v,x,T,C],E=v.type.value,O=p===1?"f32":`vec${p}<f32>`,U=64,M=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`\n  var<workgroup> meanShared : f32;\n  var<workgroup> squaredNormShared : f32;\n  var<workgroup> workgroupShared : array<${O}, ${U}>;\n  const workgroupSize = ${U}u;\n  ${_.registerUniforms(M).declareVariables(...S)}\n  ${_.mainStart(U)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / uniforms.x_shape[1];\n    let channel = norm % uniforms.x_shape[1];\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial = ${O}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      initial = initial + ${O}(${v.get("batch","channel","h")});\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = ${ut("workgroupShared[0]",p)} / f32(uniforms.normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = ${O}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let deviation =  ${O}(${v.get("batch","channel","h")}) - ${O}(meanShared);\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = ${ut("workgroupShared[0]",p)};\n    }\n    workgroupBarrier();\n\n    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${t.epsilon}));\n    let channelScale = invStdDev * f32(${x.getByOffset("channel")});\n    let channelShift = f32(${T.getByOffset("channel")}) - meanShared * channelScale;\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let value = ${v.get("batch","channel","h")} * ${E}(${O}(channelScale)) + ${E}(${O}(channelShift));\n      ${C.set("batch","channel","h","value")};\n    }\n  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${t.epsilon};${p}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:u},programUniforms:y}),getShaderSource:w}},Ac=(e,t,r,o,i,u,a,p)=>{let m=He(a),h=64,d=m===1?"vec2f":`mat2x${m}f`,y=m===1?"f32":`vec${m}f`,w=(M,N)=>`${d}(${M}, ${N})`,_=i*a/m,v=Math.ceil(u/h),x=["type"],T=[{type:"uint32",data:v},{type:"uint32",data:u},{type:"uint32",data:Math.floor(a/m)},{type:"uint32",data:Math.floor(u*a/m)}],C=M=>{let N=V("input",t.dataType,t.dims,m);return`\n  ${M.declareVariables(N)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${d}>;\n  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};\n  @group(0) @binding(2) var<uniform> uniforms: Uniforms;\n\n  ${M.mainStart(h)}\n    let currentImageNumber = global_idx / ${h} / uniforms.C;\n    let currentChannelNumber = (global_idx / ${h}) % uniforms.C;\n    let wgId = global_idx % ${h};\n    let wgOffset = wgId * uniforms.wg_size;\n    if (wgOffset >= uniforms.H) {\n        return;\n    }\n    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);\n\n    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;\n    var sum = ${Ze("f32",m)};\n    var squaredSum = ${Ze("f32",m)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${y}(input[offset + i * uniforms.C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${w("sum","squaredSum")};\n  }`},S=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${m}`,inputDependencies:x},getRunData:()=>({outputs:[{dims:[i,a,h,2],dataType:1}],dispatchGroup:{x:i*a/m},programUniforms:T}),getShaderSource:C},{inputs:[t],outputs:[-1]})[0],E=[{type:"uint32",data:_},{type:"uint32",data:u},{type:"uint32",data:Math.floor(a/m)},{type:"uint32",data:Math.floor(h*a/m)}],O=["type","type","type"],U=M=>{let N=V("scale",r.dataType,r.dims,m),Y=V("bias",o.dataType,o.dims,m);return`\n  @group(0) @binding(0) var<storage, read> input : array<${d}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${N.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${Y.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${d}>;\n  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};\n  @group(0) @binding(4) var<uniform> uniforms: Uniforms;\n\n  ${M.mainStart()}\n    ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}\n    let currentImageNumber = global_idx / uniforms.C;\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let offset = currentImageNumber * uniforms.image_size;\n    var sum = ${Ze("f32",m)};\n    var squaredSum = ${Ze("f32",m)};\n    for (var i: u32 = 0; i < ${h}; i++) {\n        let value = input[offset + i + currentChannelNumber * ${h}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(uniforms.H);\n    squaredSum = squaredSum / f32(uniforms.H);\n    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${p}));\n    let channelScale = invStdDev * ${y}(scale[currentChannelNumber]);\n    let channelShift = ${y}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${w("channelScale","channelShift")};\n  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${m};${p}`,inputDependencies:O},getRunData:()=>({outputs:[{dims:[i,a,2],dataType:1}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:E}),getShaderSource:U},{inputs:[S,r,o],outputs:[-1]})[0]},Ic=(e,t,r)=>{let o=t[0].dims,i=o,u=o[0],a=o[o.length-1],p=W.sizeFromDimension(o,1)/a,m=He(a),h=W.size(i)/m,d=[{type:"uint32",data:p},{type:"uint32",data:Math.floor(a/m)}],y=["type","type"],w=Ac(e,t[0],t[1],t[2],u,p,a,r.epsilon),_=v=>{let x=Ne(t[0].dataType),T=m===1?"vec2f":`mat2x${m}f`,C=m===1?x:`vec${m}<${x}>`,S=V("input",t[0].dataType,t[0].dims,m),E=J("output",t[0].dataType,i,m);return`\n  @group(0) @binding(0) var<storage, read> input : array<${S.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${T}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${E.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${v.mainStart()}\n    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${C}(scale[0]), ${C}(scale[1]));\n  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${m}`,inputDependencies:y},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:d}),getShaderSource:_},{inputs:[t[0],w]})},gu=(e,t)=>{t.format==="NHWC"?Ic(e,e.inputs,t):e.compute(Cc(e.inputs,t))}});var Tc,Ec,bu,wu=Q(()=>{"use strict";Ve();Ce();_e();Tc=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Ec=(e,t,r)=>{let o=e[0].dims,i=e[1],u=e[2],a=o,p=W.normalizeAxis(t.axis,o.length),m=W.sizeToDimension(o,p),h=W.sizeFromDimension(o,p),d=W.size(i.dims),y=u?W.size(u.dims):0;if(d!==h||u&&y!==h)throw new Error(`Size of X.shape()[axis:] == ${h}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${d} and bias size of ${y}`);let w=[];for(let O=0;O<o.length;++O)O<p?w.push(o[O]):w.push(1);let _=He(h),v=["type","type"],x=[{type:"uint32",data:m},{type:"float32",data:h},{type:"uint32",data:Math.floor(h/_)},{type:"float32",data:t.epsilon}];u&&v.push("type");let T=r>1,C=r>2,S=O=>{let U=Ne(e[0].dataType),M=[V("x",e[0].dataType,e[0].dims,_),V("scale",i.dataType,i.dims,_)];u&&M.push(V("bias",u.dataType,u.dims,_)),M.push(J("output",e[0].dataType,a,_)),T&&M.push(J("mean_data_output",1,w)),C&&M.push(J("inv_std_output",1,w));let N=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`\n  ${O.registerUniforms(N).declareVariables(...M)}\n  ${O.mainStart()}\n    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var meanVector = ${Ze("f32",_)};\n    var meanSquareVector = ${Ze("f32",_)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${gt(U,_,"x[h + offset]")};\n      meanVector += value;\n      meanSquareVector += value * value;\n    }\n    let mean = ${ut("meanVector",_)} / uniforms.norm_size;\n    let invStdDev =\n        inverseSqrt(${ut("meanSquareVector",_)} / uniforms.norm_size - mean * mean + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${gt(U,_,"x[j + offset]")};\n      let f32scale = ${gt(U,_,"scale[j]")};\n      output[j + offset] = ${M[0].type.value}((f32input - mean) * invStdDev * f32scale\n        ${u?`+ ${gt(U,_,"bias[j]")}`:""}\n      );\n    }\n\n    ${T?"mean_data_output[global_idx] = mean":""};\n    ${C?"inv_std_output[global_idx] = invStdDev":""};\n  }`},E=[{dims:a,dataType:e[0].dataType}];return T&&E.push({dims:w,dataType:1}),C&&E.push({dims:w,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${_};${r}`,inputDependencies:v},getRunData:()=>({outputs:E,dispatchGroup:{x:Math.ceil(m/64)},programUniforms:x}),getShaderSource:S}},bu=(e,t)=>{Tc(e.inputs),e.compute(Ec(e.inputs,t,e.outputCount))}});var Pc,$u,vu,Oc,Uo,_u,Su=Q(()=>{"use strict";Ce();Ye();$n();xo();_e();pr();Pc=(e,t)=>{let r=e[0],o=e[1],i=e[2],u=e[3],a=e[4],p=e[5],m=e[6],h=e[7];if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let d=!1,y=r.dims[0],w=r.dims[1],_=r.dims.length===3?d?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],v=w,x=0,T=0,C=Math.floor(_/t.numHeads);if(m&&h){if(m.dims.length!==4)throw new Error(\'Input "past_key" is expected to have 4 dimensions\');if(h.dims.length!==4)throw new Error(\'Input "past_value" is expected to have 4 dimensions\');x=m.dims[2],T=m.dims[2]}else if(m||h)throw new Error(\'Input "past_key" and "past_value" shall be both present or both absent\');let S;if(o){if(r.dims.length!==3)throw new Error(\'Input "query" is expected to have 3 dimensions when key is given\');if(o.dims.length<3||o.dims.length>5)throw new Error(\'Input "key" is expected to have 3, 4, or 5 dimensions\');if(r.dims[0]!==o.dims[0])throw new Error(\'Input "query" and "key" shall have same dim 0 (batch size)\');if(o.dims.length===3){if(o.dims[2]!==r.dims[2])throw new Error(\'Input "query" and "key" shall have same dim 2 (hidden_size)\');S=2,v=o.dims[1]}else if(o.dims.length===5){if(o.dims[2]!==t.numHeads||o.dims[3]!==2||o.dims[4]!==C)throw new Error(\'Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv\');if(i)throw new Error(\'Expect "value" be none when "key" has packed kv format.\');S=5,v=o.dims[1]}else{if(o.dims[1]!==t.numHeads||o.dims[3]!==C)throw new Error(\'Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key\');S=0,v=o.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error(\'Input "query" is expected to have 3 or 5 dimensions when key is empty\');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error(\'Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv\');S=3}if(u){if(u.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimension\');if(i&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let E=0;if(a){E=8;let Y=a.dims;throw Y.length===1?Y[0]===y?E=1:Y[0]===3*y+2&&(E=3):Y.length===2&&Y[0]===y&&Y[1]===v&&(E=5),E===8?new Error(\'Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)\'):new Error("Mask not supported")}let O=!1,U=_;if(i){if(i.dims.length!==3&&i.dims.length!==4)throw new Error(\'Input "value" is expected to have 3 or 4 dimensions\');if(r.dims[0]!==i.dims[0])throw new Error(\'Input "query" and "value" shall have same dim 0 (batch_size)\');if(i.dims.length===3){if(v!==i.dims[1])throw new Error(\'Input "key" and "value" shall have the same dim 1 (kv_sequence_length)\');U=i.dims[2]}else{if(v!==i.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)\');U=i.dims[1]*i.dims[3],O=!0}}let M=x+v,N=!1;if(a)throw new Error("Key padding mask is not supported");if(p)throw new Error("extraAddQk is not supported");if(m)throw new Error("pastKey is not supported");if(h)throw new Error("pastValue is not supported");return{batchSize:y,sequenceLength:w,pastSequenceLength:x,kvSequenceLength:v,totalSequenceLength:M,maxSequenceLength:T,inputHiddenSize:0,hiddenSize:_,vHiddenSize:U,headSize:C,vHeadSize:Math.floor(U/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:E,scale:t.scale,broadcastResPosBias:N,passPastInKv:O,qkvFormat:S}},$u=e=>xe({...e}),vu=xe({perm:[0,2,1,3]}),Oc=(e,t,r,o,i,u,a)=>{let p=[o,i,u],m=W.size(p),h=[{type:"uint32",data:m},{type:"uint32",data:a},{type:"uint32",data:u}],d=y=>{let w=J("qkv_with_bias",t.dataType,p),_=V("qkv",t.dataType,p),v=V("bias",r.dataType,p),x=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`\n  ${y.registerUniforms(x).declareVariables(_,v,w)}\n  ${y.mainStart()}\n    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:p,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:h}),getShaderSource:d},{inputs:[t,r],outputs:[-1]})[0]},Uo=(e,t,r,o,i,u,a,p)=>{let m=u;if(a){if(o===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return m=Oc(e,u,a,t,o,r*i,p),m=m.reshape([t,o,r,i]),e.compute(yt(m,vu.perm),{inputs:[m],outputs:[-1]})[0]}else return u.dims.length===3&&(m=u.reshape([t,o,r,i])),e.compute(yt(m,vu.perm),{inputs:[m],outputs:[-1]})[0]},_u=(e,t)=>{let r=Pc(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let o=e.inputs[1]&&e.inputs[2]&&e.inputs[1].dims.length===4&&e.inputs[2].dims.length===4,i=Uo(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,e.inputs[0],e.inputs[3],0);if(o)return En(e,i,e.inputs[1],e.inputs[2],e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t);let u=Uo(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,e.inputs[1],e.inputs[3],r.hiddenSize),a=Uo(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,e.inputs[2],e.inputs[3],2*r.hiddenSize);En(e,i,u,a,e.inputs[4],void 0,e.inputs[6],e.inputs[7],e.inputs[5],r,t)}});var kc,Rc,Bc,Dc,Mc,zc,Uc,Vc,xu,Cu=Q(()=>{"use strict";Ve();Ce();_e();kc=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Rc=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n            k = i32(${e.indicesGet("indices",i)}) - ${ce("uniforms.pads",i,r)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${ce("uniforms.x_shape",i,t)})) {\n              break;\n            }\n            offset += k * i32(${ce("uniforms.x_strides",i,t)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${o}\n            value = x[offset];\n          }\n      `},Bc=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${ce("uniforms.pads",i,r)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${ce("uniforms.x_shape",i,t)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${ce("uniforms.x_shape",i,t)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${ce("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},Dc=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${ce("uniforms.pads",i,r)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${ce("uniforms.x_shape",i,t)})) {\n                  k = i32(${ce("uniforms.x_shape",i,t)}) - 1;\n                }\n                offset += k * i32(${ce("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},Mc=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${ce("uniforms.pads",i,r)};\n                if (k < 0)  {\n                  k += i32(${ce("uniforms.x_shape",i,t)}]);\n                }\n                if (k >= i32(${ce("uniforms.x_shape",i,t)})) {\n                  k -= i32(${ce("uniforms.x_shape",i,t)});\n                }\n                offset += k * i32(${ce("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},zc=(e,t,r)=>{switch(r.mode){case 0:return Rc(e,t,r.pads.length);case 1:return Bc(e,t,r.pads.length);case 2:return Dc(e,t,r.pads.length);case 3:return Mc(e,t,r.pads.length);default:throw new Error("Invalid mode")}},Uc=(e,t)=>{let r=W.padShape(e[0].dims.slice(),t.pads),o=e[0].dims,u=[{type:"uint32",data:W.size(r)},{type:"uint32",data:t.pads}];if(t.mode===0){let m=st(e[0].dataType);u.push({type:m,data:t.value})}u.push(...G(e[0].dims),...G(r));let a=["rank"],p=m=>{let h=J("output",e[0].dataType,r.length),d=V("x",e[0].dataType,o.length),y=d.type.value,w=zc(h,o.length,t),_=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&_.push({name:"constant_value",type:y}),`\n            ${m.registerUniforms(_).declareVariables(d,h)}\n            ${m.mainStart()}\n            ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${h.offsetToIndices("global_idx")};\n\n            var value = ${y}(0);\n            ${w}\n            output[global_idx] = value;\n        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}`,inputDependencies:a},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(W.size(r)/64)},programUniforms:u}),getShaderSource:p}},Vc=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),o=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,i=e[0].dims.length,u=new Int32Array(2*i).fill(0);if(e.length>=4){let p=e[3].getBigInt64Array();for(let m=0;m<p.length;m++)u[Number(p[m])]=Number(r[m]),u[Number(p[m])+i]=Number(r[m+p.length])}else r.forEach((p,m)=>u[Number(m)]=Number(p));let a=[];return u.forEach(p=>a.push(p)),{mode:t.mode,value:o,pads:a}}else return t},xu=(e,t)=>{kc(e.inputs);let r=Vc(e.inputs,t);e.compute(Uc(e.inputs,r),{inputs:[0]})}});var Un,Au,Iu,Tu,Eu,Wc,Nc,Pu,Ou,ku,Ru,Bu,Du,Mu,zu,Uu,Vu,Wu,Nu,Hu=Q(()=>{"use strict";dr();Ce();_e();Un=e=>{if(lr.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},Au=(e,t,r)=>{let o=t.format==="NHWC",i=e.dims.slice();o&&i.splice(1,0,i.pop());let u=Object.hasOwnProperty.call(t,"dilations"),a=t.kernelShape.slice(),p=t.strides.slice(),m=u?t.dilations.slice():[],h=t.pads.slice();Xt.adjustPoolAttributes(r,i,a,p,m,h);let d=Xt.computePoolOutputShape(r,i,p,m,a,h,t.autoPad),y=Object.assign({},t);u?Object.assign(y,{kernelShape:a,strides:p,pads:h,dilations:m,cacheKey:t.cacheKey}):Object.assign(y,{kernelShape:a,strides:p,pads:h,cacheKey:t.cacheKey});let w=d.slice();return w.push(w.splice(1,1)[0]),[y,o?w:d]},Iu=(e,t)=>{let r=t.format==="NHWC",o=W.size(e),i=W.size(t.kernelShape),u=[{type:"uint32",data:o},{type:"uint32",data:i}],a=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let p=t.kernelShape[t.kernelShape.length-1],m=t.strides[t.strides.length-1],h=t.pads[t.pads.length/2-1],d=t.pads[t.pads.length-1],y=!!(h+d);u.push({type:"uint32",data:p},{type:"uint32",data:m},{type:"uint32",data:h},{type:"uint32",data:d}),a.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let w=!1;if(t.kernelShape.length===2){let _=t.kernelShape[t.kernelShape.length-2],v=t.strides[t.strides.length-2],x=t.pads[t.pads.length/2-2],T=t.pads[t.pads.length-2];w=!!(x+T),u.push({type:"uint32",data:_},{type:"uint32",data:v},{type:"uint32",data:x},{type:"uint32",data:T}),a.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[u,a,!0,y,w]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let p=W.computeStrides(t.kernelShape);u.push({type:"uint32",data:p},{type:"uint32",data:t.pads},{type:"uint32",data:t.strides}),a.push({name:"kernelStrides",type:"u32",length:p.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let m=t.pads.reduce((h,d)=>h+d);return[u,a,!!m,!1,!1]}},Tu=(e,t,r,o,i,u,a,p,m,h,d,y)=>{let w=i.format==="NHWC",_=t.type.value,v=J("output",t.type.tensor,o);if(i.kernelShape.length<=2){let x="",T="",C="",S=r-(w?2:1);if(d?x=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${S}] = indices[${S}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${S}] < 0 || xIndices[${S}]\n                      >= uniforms.x_shape[${S}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${u}\n                }`:x=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${S}] = indices[${S}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${u}\n                }`,i.kernelShape.length===2){let O=r-(w?3:2);y?T=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${O}] = indices[${O}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${O}] < 0 || xIndices[${O}] >= uniforms.x_shape[${O}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:T=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${O}] = indices[${O}] * uniforms.sh - uniforms.phStart + j;\n                `,C=`\n              }\n            `}return`\n            ${e.registerUniforms(m).declareVariables(t,v)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${v.offsetToIndices("global_idx")};\n              var xIndices = ${v.offsetToIndices("global_idx")};\n\n              var value = ${_}(${p});\n              var pad = 0;\n              ${T}\n              ${x}\n              ${C}\n              ${a}\n\n              output[global_idx] = value;\n            }`}else{if(w)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let x=i.kernelShape.length,T=i.pads.length,C="";return h?C=`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${u}\n              }`:C=`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${u}\n            `,`\n            ${e.registerUniforms(m).declareVariables(t,v)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${v.offsetToIndices("global_idx")};\n              var xIndices = ${v.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${x}>;\n\n              var value = ${_}(${p});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${x-1}u; j++) {\n                  offsets[j] = offset / ${ce("uniforms.kernelStrides","j",x)};\n                  offset -= offsets[j] * ${ce("uniforms.kernelStrides","j",x)};\n                }\n                offsets[${x-1}] = offset;\n\n                isPad = false;\n                for (var j = ${r-x}u; j < ${r}u; j++) {\n                  xIndices[j] = indices[j] * ${ce("uniforms.strides",`j - ${r-x}u`,x)}\n                    + offsets[j - ${r-x}u] - ${ce("uniforms.pads","j - 2u",T)};\n                  ${C}\n              }\n              ${a}\n\n              output[global_idx] = value;\n            }`}},Eu=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Wc=e=>`${Eu(e)};${e.countIncludePad}`,Nc=e=>`${Eu(e)};${e.storageOrder};${e.dilations}`,Pu=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Ou=(e,t,r,o)=>{let[i,u]=Au(t,o,r),a=V("x",t.dataType,t.dims.length),p=a.type.value,m="value += x_val;",h="";i.countIncludePad?h+=`value /= ${p}(uniforms.kernelSize);`:h+=`value /= ${p}(i32(uniforms.kernelSize) - pad);`;let[d,y,w,_,v]=Iu(u,i);d.push(...G(t.dims),...G(u));let x=["rank"];return{name:e,shaderCache:{hint:`${o.cacheKey};${w};${_};${v}`,inputDependencies:x},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(W.size(u)/64)},programUniforms:d}),getShaderSource:T=>Tu(T,a,t.dims.length,u.length,i,m,h,0,y,w,_,v)}},ku=e=>{let t=e.count_include_pad!==0,r=Pu(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let o={countIncludePad:t,...r,cacheKey:""};return{...o,cacheKey:Wc(o)}},Ru=(e,t)=>{Un(e.inputs),e.compute(Ou("AveragePool",e.inputs[0],!1,t))},Bu={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Du=e=>{let t=e.format;return{format:t,...Bu,cacheKey:t}},Mu=(e,t)=>{Un(e.inputs),e.compute(Ou("GlobalAveragePool",e.inputs[0],!0,t))},zu=(e,t,r,o)=>{let[i,u]=Au(t,o,r),a=`\n      value = max(x_val, value);\n    `,p="",m=V("x",t.dataType,t.dims.length),h=["rank"],[d,y,w,_,v]=Iu(u,i);return d.push(...G(t.dims),...G(u)),{name:e,shaderCache:{hint:`${o.cacheKey};${w};${_};${v}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(W.size(u)/64)},programUniforms:d}),getShaderSource:x=>Tu(x,m,t.dims.length,u.length,i,a,p,-1e5,y,w,_,v)}},Uu=(e,t)=>{Un(e.inputs),e.compute(zu("MaxPool",e.inputs[0],!1,t))},Vu=e=>{let t=e.storage_order,r=e.dilations,o=Pu(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(o.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let i={storageOrder:t,dilations:r,...o,cacheKey:""};return{...i,cacheKey:Nc(i)}},Wu=e=>{let t=e.format;return{format:t,...Bu,cacheKey:t}},Nu=(e,t)=>{Un(e.inputs),e.compute(zu("GlobalMaxPool",e.inputs[0],!0,t))}});var Gc,Lc,Gu,Lu=Q(()=>{"use strict";dr();Ve();_e();Gc=(e,t,r)=>{let o=e===t,i=e<t&&r<0,u=e>t&&r>0;if(o||i||u)throw new Error("Range these inputs\' contents are invalid.")},Lc=(e,t,r,o)=>{let i=Math.abs(Math.ceil((t-e)/r)),u=[i],a=i,p=st(o),m=[{type:"uint32",data:a},{type:p,data:e},{type:p,data:r},...G(u)],h=d=>{let y=J("output",o,u.length),w=y.type.value,_=[{name:"outputSize",type:"u32"},{name:"start",type:w},{name:"delta",type:w}];return`\n        ${d.registerUniforms(_).declareVariables(y)}\n        ${d.mainStart()}\n        ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${w}(global_idx) * uniforms.delta;\n      }`};return{name:"Range",shaderCache:{hint:`${o}`},getShaderSource:h,getRunData:()=>({outputs:[{dims:u,dataType:o}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:m})}},Gu=e=>{let t=0,r=0,o=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],o=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],o=e.inputs[2].getFloat32Array()[0]),lr.webgpu.validateInputContent&&Gc(t,r,o),e.compute(Lc(t,r,o,e.inputs[0].dataType),{inputs:[]})}});var Fc,jc,qc,Kc,Yc,Zc,Xc,Jc,Qc,ep,tp,Fu,rp,np,op,ip,ap,ju,qu,Ku=Q(()=>{"use strict";Ce();Ye();_e();Fc=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},jc=(e,t,r)=>{t.every(i=>i>=0&&i<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let o=new Array(r).fill(1);return t.forEach((i,u)=>o[i]=e[u]),o},qc=(e,t,r,o,i,u)=>{let[a,p,m]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],h=e[0].dims.length;if(a>0&&e.length>a&&e[a].dims.length>0)e[a].getFloat32Array().forEach(d=>u.push(d));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(p>0&&e.length>p&&e[p].dims.length>0){if(e[p].getFloat32Array().forEach(d=>o.push(d)),o.length!==0&&o.length!==h&&r>=18&&o.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Fc(o,t),t.axes.length>0&&jc(o,t.axes,h).forEach((d,y)=>o[y]=d)}if(m>0&&e.length>m&&(e[m].getBigInt64Array().forEach(d=>i.push(Number(d))),i.length!==h||r>=18&&i.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(o.length!==t.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(i.length!==t.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(typeof o<"u"&&typeof i<"u"&&o.length>0&&i.length>h)throw new Error("Resize requires only of scales or sizes to be specified")},Kc=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n                    // offset-by-one error later in floor().\n                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\n                    let fract =\n                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);\n                    return whole + fract;\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +\n                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /\n                        ${t}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);\n                  const adjustment = ${t}(lengthResized) / outputWidth;\n                  const center = ${t}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Yc=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Zc=(e,t,r)=>{let o=new Array(r).fill(0).concat(new Array(r).fill(1)),i=e.length===0?o:e.slice();return t.length>0?(t.forEach((u,a)=>{o[u]=i[a],o[a+r]=i[t.length+a]}),o):i},Xc=(e,t,r,o)=>{let i=[];if(r.length>0)if(o.length>0){if(e.forEach(u=>i.push(u)),Math.max(...o)>e.length)throw new Error("axes is out of bound");o.forEach((u,a)=>i[u]=r[a])}else r.forEach(u=>i.push(u));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");i=e.map((u,a)=>Math.round(u*t[a]))}return i},Jc=(e,t,r)=>{let o=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(u=>t[u]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(u=>t[u]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let i=e.slice();return r.axes.length>0?(r.axes.forEach(u=>t[u]=o),r.axes.forEach(u=>i[u]=Math.round(e[u]*t[u]))):(t.fill(o,0,t.length),i.forEach((u,a)=>i[a]=Math.round(u*t[a]))),i},Qc=(e,t,r,o,i)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {\n      var original_indices: array<${e.type.value}, ${r.length}>;\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${ce("uniforms.scales","i",o)};\n        var roi_low = ${ce("uniforms.roi","i",i)};\n        var roi_hi = ${ce("uniforms.roi",`i + ${t.length}`,i)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${ce("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${ce("uniforms.output_shape","i",r.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,ep=(e,t,r,o,i,u,a)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${o.length}; i++) {\n        var output_index = ${t.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${ce("uniforms.scales","i",i)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${ce("uniforms.roi","i",u)};\n          var roi_hi = ${ce("uniforms.roi",`i + ${r.length}`,u)};\n          var input_shape_i = ${ce("uniforms.input_shape","i",r.length)};\n          var output_shape_i = ${ce("uniforms.output_shape","i",o.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${a} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i"," input_index")}\n      }\n      return input_indices;\n    }`,tp=(e,t)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${ce("uniforms.input_shape","i",t.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,Fu=(e,t,r,o)=>e.rank>o?`\n    ${e.indicesSet("input_indices",t,"channel")};\n    ${e.indicesSet("input_indices",r,"batch")};\n`:"",rp=(e,t,r,o,i)=>{let[a,p,m,h]=r.length===2?[-1,0,1,-1]:[0,2,3,1],d=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",p,`max(0, min(row, ${r[p]} - 1))`)};\n      ${e.indicesSet("input_indices",m,`max(0, min(col, ${r[m]} - 1))`)};\n      ${Fu(e,h,a,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${d} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${d} = originalIndices[${p}];\n      var col:${d} = originalIndices[${m}];\n      ${o?`if (row < 0 || row > (${r[p]} - 1) || col < 0 || col > (${r[m]} - 1)) {\n        return ${i};\n      }`:""};\n      row = max(0, min(row, ${r[p]} - 1));\n      col = max(0, min(col, ${r[m]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${r.length>2?`u32(originalIndices[${h}])`:"0"};\n      var batch: u32 =  ${r.length>2?`u32(originalIndices[${a}])`:"0"};\n      var x11: ${d} = getInputValue(batch, channel, row1, col1);\n      var x12: ${d} = getInputValue(batch, channel, row1, col2);\n      var x21: ${d} = getInputValue(batch, channel, row2, col1);\n      var x22: ${d} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${d} = abs(row - ${d}(row1));\n      var dx2: ${d} = abs(${d}(row2) - row);\n      var dy1: ${d} = abs(col - ${d}(col1));\n      var dy2: ${d} = abs(${d}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},np=(e,t,r,o,i,u,a,p,m,h)=>{let d=r.length===2,y=!0,[w,_]=d?[0,1]:y?[2,3]:[1,2],v=e.type.value,x=T=>{let C=T===w?"row":"col";return`\n      fn ${C}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${v} {\n        var output_index = ${t.indicesGet("output_indices",T)};\n        var originalIdx: ${v} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[T]},\n        ${o[T]}, ${r[T]}, ${u[T]}, ${u[T]} + ${r.length});\n        var fractOriginalIdx: ${v} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${p} && (originalIdx < 0 || originalIdx > (${r[T]} - 1))) {\n          return ${m};\n        }\n        var data: array<${v}, 4> = array<${v}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${C}: ${v} = originalIdx + ${v}(i);\n          if (${C} < 0 || ${C} >= ${r[T]}) {\n            ${(()=>h?`coefs[i + 1] = 0.0;\n                        continue;`:p?`return ${m};`:`${C} = max(0, min(${C}, ${r[T]} - 1));`)()};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",T,`u32(${C})`)};\n          data[i + 1] = ${T===w?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${x(w)};\n    ${x(_)};\n  fn getCubicInterpolationCoefs(s: ${v}) -> array<${v}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${v}, 4> = array<${v}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${v} = 1.0 - absS;\n    var twoMinusAbsS: ${v} = 2.0 - absS;\n    var onePlusAbsS: ${v} = 1.0 + absS;\n    coeffs[0] = ((${a} * onePlusAbsS - 5 * ${a}) * onePlusAbsS + 8 * ${a}) * onePlusAbsS - 4 * ${a};\n    coeffs[1] = ((${a} + 2) * absS - (${a} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${a} + 2) * oneMinusAbsS - (${a} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${a} * twoMinusAbsS - 5 * ${a}) * twoMinusAbsS + 8 * ${a}) * twoMinusAbsS - 4 * ${a};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${v}, 4>, coefs: array<${v}, 4>) -> ${v} {\n    var coefsSum: ${v} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${v} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},op=(e,t,r,o,i)=>{let[a,p,m,h,d]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],y=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${y} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",p,`max(0, min(depth, ${r[p]} - 1))`)};\n      ${e.indicesSet("input_indices",m,`max(0, min(height, ${r[m]} - 1))`)};\n      ${e.indicesSet("input_indices",h,`max(0, min(width, ${r[h]} - 1))`)};\n      ${Fu(e,d,a,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${y} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${y} = originalIndices[${p}];\n      var height:${y} = originalIndices[${m}];\n      var width:${y} = originalIndices[${h}];\n      ${o?`if (depth < 0 || depth > (${r[p]} - 1) || height < 0 || height > (${r[m]} - 1) || width < 0 || (width > ${r[h]} - 1)) {\n      return ${i};\n        }`:""};\n\n    depth = max(0, min(depth, ${r[p]} - 1));\n      height = max(0, min(height, ${r[m]} - 1));\n      width = max(0, min(width, ${r[h]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${r.length>3?`u32(originalIndices[${d}])`:"0"};\n      var batch: u32 =  ${r.length>3?`u32(originalIndices[${a}])`:"0"};\n\n      var x111: ${y} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${y} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${y} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${y} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${y} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${y} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${y} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${y} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${y} = abs(depth - ${y}(depth1));\n      var dx2: ${y} = abs(${y}(depth2) - depth);\n      var dy1: ${y} = abs(height - ${y}(height1));\n      var dy2: ${y} = abs(${y}(height2) - height);\n      var dz1: ${y} = abs(width - ${y}(width1));\n      var dz2: ${y} = abs(${y}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},ip=(e,t,r,o,i,u)=>{let a=e.dims,p=Zc(u,t.axes,a.length),m=Xc(a,o,i,t.axes),h=o.slice();o.length===0&&(h=a.map((S,E)=>S===0?1:m[E]/S),t.keepAspectRatioPolicy!=="stretch"&&(m=Jc(a,h,t)));let d=J("output",e.dataType,m.length),y=V("input",e.dataType,a.length),w=W.size(m),_=a.length===m.length&&a.every((S,E)=>S===m[E]),v=t.coordinateTransformMode==="tf_crop_and_resize",x=t.extrapolationValue,T=y.type.value,C=S=>`\n      ${_?"":`\n      ${Kc(t.coordinateTransformMode,T)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${tp(y,a)};\n              ${Yc(t.nearestMode,r,T)};\n              ${ep(y,d,a,m,h.length,p.length,v)};\n              `;case"linear":return`\n              ${Qc(d,a,m,h.length,p.length)};\n              ${(()=>{if(a.length===2||a.length===4)return`${rp(y,d,a,v,x)}`;if(a.length===3||a.length===5)return`${op(y,d,a,v,x)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(a.length===2||a.length===4)return`${np(y,d,a,m,h,p,t.cubicCoeffA,v,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${S.registerUniform("output_size","u32").registerUniform("scales","f32",h.length).registerUniform("roi","f32",p.length).declareVariables(y,d)}\n      ${S.mainStart()}\n        ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${_?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${d.offsetToIndices("global_idx")};\n        var input_indices: ${y.type.indices};\n        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${y.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${t.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${a.length===2||a.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n`}\n      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${h.length>0?h:""}|${i.length>0?i:""}|${p.length>0?p:""}|${_}|${a}`,inputDependencies:["rank"]},getShaderSource:C,getRunData:()=>({outputs:[{dims:m,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:[{type:"uint32",data:w},{type:"float32",data:h},{type:"float32",data:p},...G(a),...G(m)]})}},ap=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},ju=(e,t)=>{let r=[],o=[],i=[],u=ap(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");qc(e.inputs,t,u,r,o,i),e.compute(ip(e.inputs[0],t,u,r,o,i),{inputs:[0]})},qu=e=>{let t=e.antialias,r=e.axes,o=e.coordinateTransformMode,i=e.cubicCoeffA,u=e.excludeOutside!==0,a=e.extrapolationValue,p=e.keepAspectRatioPolicy,m=e.mode,h=e.nearestMode===""?"simple":e.nearestMode;return xe({antialias:t,axes:r,coordinateTransformMode:o,cubicCoeffA:i,excludeOutside:u,extrapolationValue:a,keepAspectRatioPolicy:p,mode:m,nearestMode:h})}});var sp,up,Yu,Zu=Q(()=>{"use strict";Ve();Ce();_e();sp=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],o=e[2];if(t.dataType!==r.dataType||t.dataType!==o.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let i=t.dims[t.dims.length-1],u=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==u)throw new Error("Skip must have the same sequence length as input");if(o.dims.length!==1)throw new Error("Gamma must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let a=e[3];if(a.dims.length!==1)throw new Error("Beta must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let a=e[4];if(a.dims.length!==1)throw new Error("Bias must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}},up=(e,t,r,o)=>{let i=e[0].dims,u=W.size(i),a=i,p=u,m=i.slice(-1)[0],h=o?i.slice(0,-1).concat(1):[],d=e.length>3,y=e.length>4,w=o&&r>1,_=o&&r>2,v=r>3,x=He(m),T=[{type:"uint32",data:p},{type:"uint32",data:x},{type:"uint32",data:m},{type:"float32",data:t.epsilon}],C=E=>{let O=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],U=[V("x",e[0].dataType,e[0].dims,x),V("skip",e[1].dataType,e[1].dims,x),V("gamma",e[2].dataType,e[2].dims,x)];d&&U.push(V("beta",e[3].dataType,e[3].dims,x)),y&&U.push(V("bias",e[4].dataType,e[4].dims,x)),U.push(J("output",e[0].dataType,a,x)),w&&U.push(J("mean_output",1,h)),_&&U.push(J("inv_std_output",1,h)),v&&U.push(J("input_skip_bias_sum",e[0].dataType,a,x));let M=Ne(e[0].dataType);return`\n\n      ${E.registerUniforms(O).declareVariables(...U)}\n\n      ${E.mainStart()}\n        ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\n        let offset = global_idx * hidden_size_vectorized;\n        var sum = ${Ze("f32",x)};\n        var squareSum = ${Ze("f32",x)};\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          let skip_value = skip[offset + i];\n          let bias_value = ${y?"bias[i]":"0.0"};\n          let input_value = x[offset + i];\n          let value = input_value + skip_value + bias_value;\n          ${v?"input_skip_bias_sum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32_value = ${gt(M,x,"value")};\n          sum += f32_value;\n          squareSum += f32_value * f32_value;\n        }\n        let mean = ${ut("sum",x)} / f32(uniforms.hidden_size);\n        let inv_std_dev = inverseSqrt(${ut("squareSum",x)} / f32(uniforms.hidden_size) - mean * mean + uniforms.epsilon);\n        ${w?"mean_output[global_idx] = mean;":""}\n        ${_?"inv_std_output[global_idx] = inv_std_dev;":""}\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          output[offset + i] = (output[offset + i] - ${M}(mean)) * ${M}(inv_std_dev) * gamma[i] + ${d?"beta[i]":"0.0"};\n        }\n      }`},S=[{dims:a,dataType:e[0].dataType}];return r>1&&S.push({dims:h,dataType:1}),r>2&&S.push({dims:h,dataType:1}),r>3&&S.push({dims:i,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${x};${w};${_};${v}`,inputDependencies:e.map((E,O)=>"type")},getShaderSource:C,getRunData:()=>({outputs:S,dispatchGroup:{x:Math.ceil(p/m/64)},programUniforms:T})}},Yu=(e,t)=>{sp(e.inputs);let o=[0];e.outputCount>1&&o.push(-3),e.outputCount>2&&o.push(-3),e.outputCount>3&&o.push(3),e.compute(up(e.inputs,t,e.outputCount,!1),{outputs:o})}});var lp,Vn,dp,Xu,cp,pp,Ju,Qu,el=Q(()=>{"use strict";Ve();Ce();Ye();_e();lp=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,o)=>{if(e[o+1].dataType!==6&&e[o+1].dataType!==7)throw new Error(`Input ${o} must be an array of int32 or int64`)})},Vn=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(o=>r.push(Number(o)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(o=>r.push(Number(o)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},dp=(e,t)=>{if(e.length>1){let r=Vn(e,1),o=Vn(e,2),i=Vn(e,3);return i.length===0&&(i=[...Array(e[0].dims.length).keys()]),xe({starts:r,ends:o,axes:i})}else return t},Xu=(e,t,r,o,i)=>{let u=e;return e<0&&(u+=r[o[t]]),i[t]<0?Math.max(0,Math.min(u,r[o[t]]-1)):Math.max(0,Math.min(u,r[o[t]]))},cp=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${r.length}; i >= 0; i--) {\n            let input_shape_i = ${ce("uniforms.input_shape","i",r.length)};\n            let steps_i = ${ce("uniforms.steps","i",r.length)};\n            let signs_i = ${ce("uniforms.signs","i",r.length)};\n            let starts_i = ${ce("uniforms.starts","i",r.length)};\n            var output_index = ${t.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,pp=(e,t)=>{let r=e[0].dims,o=W.size(r),i=t.axes.length>0?W.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],u=Vn(e,4);u.forEach(C=>C!==0||(()=>{throw new Error("step cannot be 0")})),u.length===0&&(u=Array(i.length).fill(1));let a=t.starts.map((C,S)=>Xu(C,S,r,i,u)),p=t.ends.map((C,S)=>Xu(C,S,r,i,u));if(i.length!==a.length||i.length!==p.length)throw new Error("start, ends and axes should have the same number of elements");if(i.length!==r.length)for(let C=0;C<r.length;++C)i.includes(C)||(a.splice(C,0,0),p.splice(C,0,r[C]),u.splice(C,0,1));let m=u.map(C=>Math.sign(C));u.forEach((C,S,E)=>{if(C<0){let O=(p[S]-a[S])/C,U=a[S],M=U+O*u[S];a[S]=M,p[S]=U,E[S]=-C}});let h=r.slice(0);i.forEach((C,S)=>{h[C]=Math.ceil((p[C]-a[C])/u[C])});let d={dims:h,dataType:e[0].dataType},y=J("output",e[0].dataType,h.length),w=V("input",e[0].dataType,e[0].dims.length),_=W.size(h),v=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:a.length},{name:"signs",type:"i32",length:m.length},{name:"steps",type:"u32",length:u.length}],x=[{type:"uint32",data:_},{type:"uint32",data:a},{type:"int32",data:m},{type:"uint32",data:u},...G(e[0].dims),...G(h)],T=C=>`\n      ${C.registerUniforms(v).declareVariables(w,y)}\n        ${cp(w,y,r)}\n        ${C.mainStart()}\n          ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${y.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${y.setByOffset("global_idx",w.getByIndices("input_indices"))}\n      }`;return{name:"Slice",shaderCache:{hint:`${m.length}_${a.length}_${u.length}`,inputDependencies:["rank"]},getShaderSource:T,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:x})}},Ju=(e,t)=>{lp(e.inputs,t);let r=dp(e.inputs,t);e.compute(pp(e.inputs,r),{inputs:[0]})},Qu=e=>{let t=e.starts,r=e.ends,o=e.axes;return xe({starts:t,ends:r,axes:o})}});var mp,fp,tl,rl,nl=Q(()=>{"use strict";Ce();Ye();_e();mp=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},fp=(e,t)=>{let r=e.dims,o=W.size(r),i=64,u=t.axis;if(u<0&&(u=r.length+u),u<r.length-1)throw new Error("softmax only supports last axis for now.");let a=r[u],p=o/a,m=He(a),h=a/m,d=(T,C)=>C===4?`max(max(${T}.x, ${T}.y), max(${T}.z, ${T}.w))`:C===2?`max(${T}.x, ${T}.y)`:C===3?`max(max(${T}.x, ${T}.y), ${T}.z)`:T,y=V("x",e.dataType,e.dims,m),w=J("result",e.dataType,e.dims,m),_=y.type.value,v=Ne(e.dataType)==="f32"?`var threadMax = ${_}(-3.402823e+38f);`:`var threadMax = ${_}(-65504.0h);`,x=T=>`\n      var<workgroup> rowMaxShared : ${_};\n      var<workgroup> rowSumShared : ${_};\n      var<workgroup> threadShared : array<${_}, ${i}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${_} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${_}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${T.registerUniform("packedCols","i32").declareVariables(y,w)}\n      ${T.mainStart()}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = ${i};\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${v}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${_}(${d("threadShared[0]",m)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${_}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${_}(${ut("threadShared[0]",m)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`;return{name:"Softmax",shaderCache:{hint:`${m}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.dataType}],dispatchGroup:{x:p},programUniforms:[{type:"uint32",data:h}]}),getShaderSource:x}},tl=(e,t)=>{mp(e.inputs),e.compute(fp(e.inputs[0],t))},rl=e=>xe({axis:e.axis})});var hp,gp,yp,bp,wp,ol,il,al=Q(()=>{"use strict";Ce();Ye();_e();hp=e=>{if(!e||e.length<1)throw new Error("too few inputs")},gp=(e,t)=>{let r=[],o=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(i=>r.push(Number(i))),o=r.length),xe({numOutputs:o,axis:t.axis,splitSizes:r})},yp=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${ce("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,bp=e=>{let t=e.length,r=[];for(let o=0;o<t;++o){let i=e[o].setByIndices("indices","input[global_idx]");t===1?r.push(i):o===0?r.push(`if (output_number == ${o}u) { ${i} }`):o===t-1?r.push(`else { ${i} }`):r.push(`else if (output_number == ${o}) { ${i} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${r.join(`\n`)}\n      }`},wp=(e,t)=>{let r=e[0].dims,o=W.size(r),i=e[0].dataType,u=W.normalizeAxis(t.axis,r.length),a=new Array(t.numOutputs),p=V("input",i,r),m=new Array(t.numOutputs),h=[],d=[],y=0,w=[{type:"uint32",data:o}];for(let v=0;v<t.numOutputs;v++){y+=t.splitSizes[v],m[v]=y;let x=r.slice();x[t.axis]=t.splitSizes[v],d.push(x),a[v]=J(`output${v}`,i,x),h.push({dims:d[v],dataType:e[0].dataType})}w.push({type:"uint32",data:m}),w.push(...G(r)),d.forEach(v=>w.push(...G(v)));let _=v=>`\n  ${v.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",m.length).declareVariables(p,...a)}\n  ${yp(m.length)}\n  ${bp(a)}\n\n  ${v.mainStart()}\n    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${p.offsetToIndices("global_idx")};\n    var index = ${p.indicesGet("indices",u)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${ce("uniforms.size_in_split_axis","output_number - 1u",m.length)};\n      ${p.indicesSet("indices",u,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:_,getRunData:()=>({outputs:h,dispatchGroup:{x:Math.ceil(o/64)},programUniforms:w})}},ol=(e,t)=>{hp(e.inputs);let r=e.inputs.length===1?t:gp(e.inputs,t);e.compute(wp(e.inputs,r),{inputs:[0]})},il=e=>{let t=e.axis,r=e.splitSizes,o=e.numOutputs<0?r.length:e.numOutputs;if(o!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return xe({axis:t,numOutputs:o,splitSizes:r})}});var sl,vp,$p,_p,ul,ll=Q(()=>{"use strict";Ve();Ce();_e();sl=e=>Array.from(e.getBigInt64Array(),Number),vp=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(sl(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},$p=(e,t)=>{let r=[];for(let o=0;o<e.length;++o)r.push(e[o]*t[o]);return r},_p=e=>{let t=e[0].dims,r=sl(e[1]),o=$p(t,r),i=W.size(o),u=e[0].dataType,a=V("input",u,t.length),p=J("output",u,o.length),m=h=>`\n      const inputShape = ${a.indices(...t)};\n      ${h.registerUniform("output_size","u32").declareVariables(a,p)}\n      ${h.mainStart()}\n      ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${p.offsetToIndices("global_idx")};\n      var input_indices: ${a.type.indices};\n      for (var i = 0; i < ${t.length}; i++) {\n        let input_dim_i = ${a.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${p.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${a.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${p.setByOffset("global_idx",a.getByIndices("input_indices"))}\n    }`;return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:"uint32",data:i},...G(e[0].dims),...G(o)]}),getShaderSource:m}},ul=e=>{vp(e.inputs),e.compute(_p(e.inputs),{inputs:[0]})}});var Sp,xp,dl,cl=Q(()=>{"use strict";Ve();Ce();_e();Sp=(e,t,r,o,i)=>{let u=J("output_data",i,r.length,4),a=V("a_data",t[1].dataType,t[1].dims.length,4),p=V("b_data",t[2].dataType,t[2].dims.length,4),m=V("c_data",t[0].dataType,t[0].dims.length,4),h,d=(y,w,_)=>`select(${w}, ${y}, ${_})`;if(!o)h=u.setByOffset("global_idx",d(a.getByOffset("global_idx"),p.getByOffset("global_idx"),m.getByOffset("global_idx")));else{let y=(w,_,v="")=>{let x=`a_data[index_a${_}][component_a${_}]`,T=`b_data[index_b${_}][component_b${_}]`,C=`bool(c_data[index_c${_}] & ${4278190080>>>(3-_)*8}u)`;return`\n            let output_indices${_} = ${u.offsetToIndices(`global_idx * 4u + ${_}u`)};\n            let offset_a${_} = ${a.broadcastedIndicesToOffset(`output_indices${_}`,u)};\n            let offset_b${_} = ${p.broadcastedIndicesToOffset(`output_indices${_}`,u)};\n            let offset_c${_} = ${m.broadcastedIndicesToOffset(`output_indices${_}`,u)};\n            let index_a${_} = offset_a${_} / 4u;\n            let index_b${_} = offset_b${_} / 4u;\n            let index_c${_} = offset_c${_} / 4u;\n            let component_a${_} = offset_a${_} % 4u;\n            let component_b${_} = offset_b${_} % 4u;\n            ${w}[${_}] = ${v}(${d(x,T,C)});\n          `};i===9?h=`\n            var data = vec4<u32>(0);\n            ${y("data",0,"u32")}\n            ${y("data",1,"u32")}\n            ${y("data",2,"u32")}\n            ${y("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:h=`\n            ${y("output_data[global_idx]",0)}\n            ${y("output_data[global_idx]",1)}\n            ${y("output_data[global_idx]",2)}\n            ${y("output_data[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(m,a,p,u)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${h}\n      }`},xp=e=>{let t=e[1].dims,r=e[2].dims,o=e[0].dims,i=e[1].dataType,u=!(W.areEqual(t,r)&&W.areEqual(r,o)),a=t,p=W.size(t);if(u){let h=vt.calcShape(vt.calcShape(t,r,!1),o,!1);if(!h)throw new Error("Can\'t perform where op on the given tensors");a=h,p=W.size(a)}let m=Math.ceil(p/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:h=>Sp(h,e,a,u,i),getRunData:()=>({outputs:[{dims:a,dataType:i}],dispatchGroup:{x:Math.ceil(p/64/4)},programUniforms:[{type:"uint32",data:m},...G(o),...G(t),...G(r),...G(a)]})}},dl=e=>{e.compute(xp(e.inputs))}});var pl,ml=Q(()=>{"use strict";Da();xo();Ua();Wa();$s();ks();Ds();Eo();Ys();Js();nu();au();lu();pu();hu();yu();wu();Oo();Su();Cu();Hu();Lu();In();Ku();Zu();el();nl();al();ll();pr();Co();cl();pl=new Map([["Abs",[Na]],["Acos",[Ha]],["Acosh",[Ga]],["Add",[_s]],["ArgMax",[Ba,So]],["ArgMin",[Ra,So]],["Asin",[La]],["Asinh",[Fa]],["Atan",[ja]],["Atanh",[qa]],["Attention",[Ma]],["AveragePool",[Ru,ku]],["BatchNormalization",[za]],["BiasAdd",[Va]],["BiasSplitGelu",[vs]],["Cast",[Ya,Ka]],["Ceil",[Xa]],["Clip",[Za]],["Concat",[Rs,Bs]],["Conv",[Ro,ko]],["ConvTranspose",[Ks,qs]],["Cos",[Ja]],["Cosh",[Qa]],["CumSum",[Zs,Xs]],["Div",[Ss]],["Einsum",[tu,ru]],["Elu",[es,Pn]],["Equal",[xs]],["Erf",[ts]],["Exp",[rs]],["Expand",[iu]],["Floor",[ns]],["FusedConv",[Ro,ko]],["Gather",[uu,su]],["GatherElements",[cu,du]],["Gelu",[os]],["Gemm",[fu,mu]],["GlobalAveragePool",[Mu,Du]],["GlobalMaxPool",[Nu,Wu]],["Greater",[Ts]],["GreaterOrEqual",[Ps]],["HardSigmoid",[ps,cs]],["InstanceNormalization",[gu]],["LayerNormalization",[bu]],["LeakyRelu",[is,Pn]],["Less",[Es]],["LessOrEqual",[Os]],["Log",[ws]],["MatMul",[Ws]],["MaxPool",[Uu,Vu]],["Mul",[Cs]],["MultiHeadAttention",[_u,$u]],["Neg",[ss]],["Not",[as]],["Pad",[xu]],["Pow",[As]],["Range",[Gu]],["Reciprocal",[us]],["ReduceMin",[Ia]],["ReduceMean",[_a]],["ReduceMax",[Aa]],["ReduceSum",[Ea]],["ReduceProd",[Ta]],["ReduceL1",[Sa]],["ReduceL2",[xa]],["ReduceLogSum",[Oa]],["ReduceLogSumExp",[Ca]],["ReduceSumSquare",[Pa]],["Relu",[ls]],["Resize",[ju,qu]],["Sigmoid",[ds]],["Sin",[ms]],["Sinh",[fs]],["Slice",[Ju,Qu]],["SkipLayerNormalization",[Yu]],["Split",[ol,il]],["Sqrt",[hs]],["Softmax",[tl,rl]],["Sub",[Is]],["Tan",[gs]],["Tanh",[ys]],["ThresholdedRelu",[bs,Pn]],["Tile",[ul]],["Transpose",[la,da]],["Where",[dl]]])});var Wn,fl=Q(()=>{"use strict";dr();zt();_e();Wn=class{constructor(t){this.backend=t;this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,o,i,u){Yt(t.programInfo.name);let a=this.backend.device,p=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2),p.setPipeline(t.computePipeline);let m=[];for(let d of r)m.push({binding:m.length,resource:{buffer:d.buffer}});for(let d of o)m.push({binding:m.length,resource:{buffer:d.buffer}});u&&m.push({binding:m.length,resource:u});let h=a.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:m,label:t.programInfo.name});p.setBindGroup(0,h),p.dispatchWorkgroups(...i),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Zt(t.programInfo.name)}dispose(){}build(t,r){Yt(t.name);let o=this.backend.device,i=[];o.features.has("shader-f16")&&i.push("enable f16;");let u=sa(r),a=t.getShaderSource(u),p=`${i.join(`\n`)}\n${u.additionalImplementations}\n${a}`,m=o.createShaderModule({code:p,label:t.name});De("verbose",()=>`[WebGPU] ${t.name} shader code: ${p}`);let h=o.createComputePipeline({compute:{module:m,entryPoint:"main"},layout:"auto",label:t.name});return Zt(t.name),{programInfo:t,computePipeline:h}}normalizeDispatchGroupSize(t){let r=typeof t=="number"?t:t.x,o=typeof t=="number"?1:t.y||1,i=typeof t=="number"?1:t.z||1,u=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=u&&o<=u&&i<=u)return[r,o,i];let a=r*o*i,p=Math.ceil(Math.sqrt(a));if(p>u){if(p=Math.ceil(Math.cbrt(a)),p>u)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[p,p,p]}else return[p,p,1]}}});var Cp,Ap,Nn,hl=Q(()=>{"use strict";dr();Ve();zt();ra();aa();ml();fl();Cp=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let o=0;o<e.length;++o){let i=e[o].dataType;switch(t[o]){case"none":{r.push("");break}case"type":{r.push(`${i}`);break}case"rank":{let u=e[o].dims.length;r.push(`${i};${u}`);break}case"dims":{let u=e[o].dims.join(",");r.push(`${i};${u}`);break}default:throw new Error(`unsupported input dependency: ${t[o]}`)}}return r.join("|")},Ap=(e,t,r)=>{let o=e.name;return e.shaderCache?.hint&&(o+="["+e.shaderCache.hint+"]"),o+=":"+r+`:${Cp(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,o},Nn=class{constructor(){this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,r){this.env=t;let o=[],i={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:o};r.features.has("chromium-experimental-timestamp-query-inside-passes")?o.push("chromium-experimental-timestamp-query-inside-passes"):r.features.has("timestamp-query")&&o.push("timestamp-query"),r.features.has("shader-f16")&&o.push("shader-f16"),this.device=await r.requestDevice(i),this.gpuDataManager=ia(this),this.programManager=new Wn(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,ea(t.logLevel,!!t.debug),this.device.onuncapturederror=u=>{u.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${u.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t={};this.queryType==="at-passes"&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=this.getCommandEncoder().beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Yt(),this.endComputePass();let t;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),t=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(t,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&t.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(t.getMappedRange()),o=this.pendingQueries.get(t);for(let i=0;i<r.length/2;i++){let u=o[i],a=u.kernelId,p=this.kernels.get(a),m=p.kernelType,h=p.kernelName,d=u.programName,y=u.inputTensorViews,w=u.outputTensorViews,_=r[i*2],v=r[i*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=_);let x=Number(_-this.queryTimeBase),T=Number(v-this.queryTimeBase);if(!Number.isSafeInteger(x)||!Number.isSafeInteger(T))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:y.map(C=>({dims:C.dims,dataType:st(C.dataType)})),outputsMetadata:w.map(C=>({dims:C.dims,dataType:st(C.dataType)})),kernelId:a,kernelType:m,kernelName:h,programName:d,startTime:x,endTime:T});else{let C="";y.forEach((E,O)=>{C+=`input[${O}]: [${E.dims}] | ${st(E.dataType)}, `});let S="";w.forEach((E,O)=>{S+=`output[${O}]: [${E.dims}] | ${st(E.dataType)}, `}),console.log(`[profiling] kernel "${a}|${m}|${h}|${d}" ${C}${S}execution time: ${T-x} ns`)}mo("GPU",`${d}::${_}::${v}`)}t.unmap(),this.pendingQueries.delete(t)}),Zt()}run(t,r,o,i,u){Yt(t.name);let a=[];for(let S=0;S<r.length;++S){let E=this.gpuDataManager.get(r[S].data);if(!E)throw new Error(`no GPU data for input: ${r[S].data}`);a[S]=E}let{outputs:p,dispatchGroup:m,programUniforms:h}=t.getRunData(r),d=o.length===0?p.map((S,E)=>E):o;if(d.length!==p.length)throw new Error(`Output size ${d.length} must be equal to ${p.length}.`);let y=[],w=[];for(let S=0;S<p.length;++S){if(!Number.isInteger(d[S])||d[S]<-3||d[S]>=p.length)throw new Error(`Invalid output index: ${d[S]}`);if(d[S]===-3)continue;let E=d[S]===-1,O=d[S]===-2,U=E||O?u(p[S].dataType,p[S].dims):i(d[S],p[S].dataType,p[S].dims),M=this.gpuDataManager.get(U.data);if(!M)throw new Error(`no GPU data for output: ${U.data}`);if(E&&this.temporaryData.push(M),O){let N=this.kernelPersistentData.get(this.currentKernelId);N||(N=[],this.kernelPersistentData.set(this.currentKernelId,N)),N.push(M)}y.push(U),w.push(M)}let _;if(h){let S=0,E=[];h.forEach(N=>{let Y=typeof N.data=="number"?[N.data]:N.data;if(Y.length===0)return;let se=N.type==="float16"?2:4,B,te;N.type==="float16"?(te=Y.length>4?16:Y.length>2?8:Y.length*se,B=Y.length>4?16:se*Y.length):(te=Y.length<=2?Y.length*se:16,B=16),S=Math.ceil(S/te)*te,E.push(S);let Pe=N.type==="float16"?8:4;S+=Y.length>4?Math.ceil(Y.length/Pe)*B:Y.length*se});let O=16;S=Math.ceil(S/O)*O;let U=new ArrayBuffer(S);h.forEach((N,Y)=>{let se=E[Y],B=typeof N.data=="number"?[N.data]:N.data;N.type==="int32"?new Int32Array(U,se,B.length).set(B):N.type==="uint32"?new Uint32Array(U,se,B.length).set(B):N.type==="float16"?new Uint16Array(U,se,B.length).set(B):new Float32Array(U,se,B.length).set(B)});let M=this.gpuDataManager.create(S,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(M.buffer,0,U,0,S),this.gpuDataManager.release(M.id),_={offset:0,size:S,buffer:M.buffer}}let v=this.programManager.normalizeDispatchGroupSize(m),x=v[1]===1&&v[2]===1,T=Ap(t,r,x),C=this.programManager.getArtifact(T);if(C||(C=this.programManager.build(t,v),this.programManager.setArtifact(T,C),De("info",()=>`[artifact] key: ${T}, programName: ${t.name}`)),De("info",()=>`[ProgramManager] run "${t.name}" (key=${T}) with ${v[0]}x${v[1]}x${v[2]}`),this.queryType!=="none"){let S={kernelId:this.currentKernelId,programName:C.programInfo.name,inputTensorViews:r,outputTensorViews:y};this.pendingKernels.push(S)}return this.programManager.run(C,a,w,v,_),Zt(t.name),y}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,o,i){let u=pl.get(t);if(!u)throw new Error(`kernel not implemented: ${t}`);let a={kernelType:t,kernelName:i,kernelEntry:u[0],attributes:[u[1],o]};this.kernels.set(r,a)}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let o of r)this.gpuDataManager.release(o.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,o){let i=this.kernels.get(t);if(!i)throw new Error(`kernel not created: ${t}`);let u=i.kernelType,a=i.kernelName,p=i.kernelEntry,m=i.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${u}] ${a}" is not allowed to be called recursively`);this.currentKernelId=t,m[0]&&(m[1]=m[0](m[1]),m[0]=void 0),De("info",()=>`[WebGPU] Start to run kernel "[${u}] ${a}"...`);let h=this.env.debug;this.temporaryData=[];try{return h&&this.device.pushErrorScope("validation"),p(r,m[1]),0}catch(d){return o.push(Promise.resolve(`[WebGPU] Kernel "[${u}] ${a}" failed. ${d}`)),1}finally{h&&o.push(this.device.popErrorScope().then(d=>d?`GPU validation error for kernel "[${u}] ${a}": ${d.message}`:null));for(let d of this.temporaryData)this.gpuDataManager.release(d.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,o,i){let u=this.sessionExternalDataMapping.get(t);u||(u=new Map,this.sessionExternalDataMapping.set(t,u));let a=u.get(r),p=this.gpuDataManager.registerExternalBuffer(o,i,a?.[1]);return u.set(r,[p,o]),p}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(o=>this.gpuDataManager.unregisterExternalBuffer(o[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw new Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,o){return async()=>{let i=await go(this,t,r);return ta(i.buffer,o)}}writeTimestamp(t){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,t)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||this.env.wasm.trace)&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}onRunStart(){this.setQueryType()}}});var gl={};hn(gl,{init:()=>Ip});var Nr,Vo,Ip,yl=Q(()=>{"use strict";Ve();hl();zt();Ce();Nr=class e{constructor(t,r,o,i){this.module=t;this.dataType=r;this.data=o;this.dims=i}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=W.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=W.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=W.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(W.size(t)!==W.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},Vo=class{constructor(t,r,o){this.module=t;this.backend=r;this.customDataOffset=0;this.customDataSize=0;let i=t.HEAPU32,u=o>>>2;this.opKernelContext=i[u++];let a=i[u++];this.outputCount=i[u++],this.customDataOffset=i[u++],this.customDataSize=i[u++];let p=[];for(let m=0;m<a;m++){let h=i[u++],d=i[u++],y=i[u++],w=[];for(let _=0;_<y;_++)w.push(i[u++]);p.push(new Nr(t,h,d,w))}this.inputs=p}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(t,r){let o=r?.inputs?.map(p=>typeof p=="number"?this.inputs[p]:p)??this.inputs,i=r?.outputs??[],u=(p,m,h)=>new Nr(this.module,m,this.output(p,h),h),a=(p,m)=>{let h=Mr(p);if(!h)throw new Error(`Unsupported data type: ${p}`);let d=h*W.size(m);return new Nr(this.module,p,this.backend.gpuDataManager.create(d).id,m)};return this.backend.run(t,o,i,u,a)}output(t,r){let o=this.module.stackSave();try{let i=this.module.stackAlloc((1+r.length)*4),u=i>>2;this.module.HEAPU32[u++]=r.length;for(let a=0;a<r.length;a++)this.module.HEAPU32[u++]=r[a];return this.module._JsepOutput(this.opKernelContext,t,i)}catch(i){throw new Error(`Failed to generate kernel\'s output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${i}`)}finally{this.module.stackRestore(o)}}},Ip=async(e,t,r)=>{let o=e.jsepInit;if(!o)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");let i=new Nn;await i.initialize(t,r),o(i,u=>i.alloc(u),u=>i.free(u),(u,a,p,m=!1)=>{if(m)De("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${u}, dst=${a}, size=${p}`),i.memcpy(u,a);else{De("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${u}, gpuDataId=${a}, size=${p}`);let h=e.HEAPU8.subarray(u>>>0,(u>>>0)+p);i.upload(a,h)}},async(u,a,p)=>{De("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${u}, dataOffset=${a}, size=${p}`),await i.download(u,()=>e.HEAPU8.subarray(a>>>0,(a>>>0)+p))},(u,a,p)=>i.createKernel(u,a,p,e.UTF8ToString(e._JsepGetNodeName(a))),u=>i.releaseKernel(u),(u,a,p,m)=>{De("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${p}, kernel=${u}, contextDataOffset=${a}`);let h=new Vo(e,i,a);return i.computeKernel(u,h,m)})}});var Pi;Pi=vi();var Nl=Ii(),so,uo=!1,gn=!1,Ei=!1,Hl=e=>{if(e===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Gl=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Ll=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Oi=async e=>{if(uo)return Promise.resolve();if(gn)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(Ei)throw new Error("previous call to \'initializeWebAssembly()\' failed.");gn=!0;let t=e.initTimeout,r=e.numThreads,o=e.simd,i=Hl(r),u=o&&Gl(),a=e.wasmPaths,p=typeof a=="string"?a:void 0,m=Ll(u,i),h=typeof a=="object"?a[m]:void 0,d=!1,y=[];if(t>0&&y.push(new Promise(w=>{setTimeout(()=>{d=!0,w()},t)})),y.push(new Promise((w,_)=>{let v=i?Nl:Pi,x={locateFile:(T,C)=>{if(i&&T.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Ti()],{type:"text/javascript"}));if(T.endsWith(".wasm")){if(h)return h;let S=p??C;return m==="ort-wasm-simd.wasm"?S+"ort-wasm-simd.jsep.wasm":m==="ort-wasm-simd-threaded.wasm"?S+"ort-wasm-simd-threaded.jsep.wasm":S+m}return C+T}};if(i)if(x.numThreads=r,typeof Blob>"u")x.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let T=`var ortWasmThreaded=${v.toString()};`;x.mainScriptUrlOrBlob=new Blob([T],{type:"text/javascript"})}v(x).then(T=>{gn=!1,uo=!0,so=T,w()},T=>{gn=!1,Ei=!0,_(T)})})),await Promise.race(y),d)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Ue=()=>{if(uo&&so)return so;throw new Error("WebAssembly is not initialized yet.")};var We=(e,t)=>{let r=Ue(),o=r.lengthBytesUTF8(e)+1,i=r._malloc(o);return r.stringToUTF8(e,i,o),t.push(i),i},Dr=(e,t,r,o)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([i,u])=>{let a=t?t+i:i;if(typeof u=="object")Dr(u,a+".",r,o);else if(typeof u=="string"||typeof u=="number")o(a,u.toString());else if(typeof u=="boolean")o(a,u?"1":"0");else throw new Error(`Can\'t handle extra config type: ${typeof u}`)})},Be=e=>{let t=Ue(),r=t.stackSave();try{let o=t.stackAlloc(8);t._OrtGetLastError(o,o+4);let i=t.HEAP32[o/4],u=t.HEAPU32[o/4+1],a=u?t.UTF8ToString(u):"";throw new Error(`${e} ERROR_CODE: ${i}, ERROR_MESSAGE: ${a}`)}finally{t.stackRestore(r)}};var ki=e=>{let t=Ue(),r=0,o=[],i=e||{};try{if(e?.logSeverityLevel===void 0)i.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)i.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(i.terminate=!1);let u=0;return e?.tag!==void 0&&(u=We(e.tag,o)),r=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,u),r===0&&Be("Can\'t create run options."),e?.extra!==void 0&&Dr(e.extra,"",new WeakSet,(a,p)=>{let m=We(a,o),h=We(p,o);t._OrtAddRunConfigEntry(r,m,h)!==0&&Be(`Can\'t set a run config entry: ${a} - ${p}.`)}),[r,o]}catch(u){throw r!==0&&t._OrtReleaseRunOptions(r),o.forEach(a=>t._free(a)),u}};var Fl=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},jl=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},ql=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},Kl=(e,t,r)=>{for(let o of t){let i=typeof o=="string"?o:o.name;switch(i){case"webnn":if(i="WEBNN",typeof o!="string"){let a=o;if(a?.deviceType){let p=We("deviceType",r),m=We(a.deviceType,r);Ue()._OrtAddSessionConfigEntry(e,p,m)!==0&&Be(`Can\'t set a session config entry: \'deviceType\' - ${a.deviceType}.`)}if(a?.numThreads){let p=a.numThreads;(typeof p!="number"||!Number.isInteger(p)||p<0)&&(p=0);let m=We("numThreads",r),h=We(p.toString(),r);Ue()._OrtAddSessionConfigEntry(e,m,h)!==0&&Be(`Can\'t set a session config entry: \'numThreads\' - ${a.numThreads}.`)}if(a?.powerPreference){let p=We("powerPreference",r),m=We(a.powerPreference,r);Ue()._OrtAddSessionConfigEntry(e,p,m)!==0&&Be(`Can\'t set a session config entry: \'powerPreference\' - ${a.powerPreference}.`)}}break;case"webgpu":if(i="JS",typeof o!="string"){let a=o;if(a?.preferredLayout){if(a.preferredLayout!=="NCHW"&&a.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either \'NCHW\' or \'NHWC\': ${a.preferredLayout}`);let p=We("preferredLayout",r),m=We(a.preferredLayout,r);Ue()._OrtAddSessionConfigEntry(e,p,m)!==0&&Be(`Can\'t set a session config entry: \'preferredLayout\' - ${a.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${i}`)}let u=We(i,r);Ue()._OrtAppendExecutionProvider(e,u)!==0&&Be(`Can\'t append execution provider: ${i}.`)}},Ri=e=>{let t=Ue(),r=0,o=[],i=e||{};ql(i);try{let u=Fl(i.graphOptimizationLevel??"all"),a=jl(i.executionMode??"sequential"),p=typeof i.logId=="string"?We(i.logId,o):0,m=i.logSeverityLevel??2;if(!Number.isInteger(m)||m<0||m>4)throw new Error(`log serverity level is not valid: ${m}`);let h=i.logVerbosityLevel??0;if(!Number.isInteger(h)||h<0||h>4)throw new Error(`log verbosity level is not valid: ${h}`);let d=typeof i.optimizedModelFilePath=="string"?We(i.optimizedModelFilePath,o):0;if(r=t._OrtCreateSessionOptions(u,!!i.enableCpuMemArena,!!i.enableMemPattern,a,!!i.enableProfiling,0,p,m,h,d),r===0&&Be("Can\'t create session options."),i.executionProviders&&Kl(r,i.executionProviders,o),i.freeDimensionOverrides)for(let[y,w]of Object.entries(i.freeDimensionOverrides)){if(typeof y!="string")throw new Error(`free dimension override name must be a string: ${y}`);if(typeof w!="number"||!Number.isInteger(w)||w<0)throw new Error(`free dimension override value must be a non-negative integer: ${w}`);let _=We(y,o);t._OrtAddFreeDimensionOverride(r,_,w)!==0&&Be(`Can\'t set a free dimension override: ${y} - ${w}.`)}return i.extra!==void 0&&Dr(i.extra,"",new WeakSet,(y,w)=>{let _=We(y,o),v=We(w,o);t._OrtAddSessionConfigEntry(r,_,v)!==0&&Be(`Can\'t set a session config entry: ${y} - ${w}.`)}),[r,o]}catch(u){throw r!==0&&t._OrtReleaseSessionOptions(r),o.forEach(a=>t._free(a)),u}};Ve();var Di=async e=>{if(typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(e))}catch(t){if(t.code==="ERR_FS_FILE_TOO_LARGE"){let r=(void 0)(e),o=[];for await(let i of r)o.push(i);return new Uint8Array(Buffer.concat(o))}throw t}else{let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),o=r?parseInt(r,10):0;if(o<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let i=t.body.getReader(),u;try{u=new ArrayBuffer(o)}catch(p){if(p instanceof RangeError){let m=Math.ceil(o/65536);u=new WebAssembly.Memory({initial:m,maximum:m}).buffer}else throw p}let a=0;for(;;){let{done:p,value:m}=await i.read();if(p)break;let h=m.byteLength;new Uint8Array(u,a,h).set(m),a+=h}return new Uint8Array(u,0,o)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)};var Tp=(e,t)=>{Ue()._OrtInit(e,t)!==0&&Be("Can\'t initialize onnxruntime.")},wl=async e=>{Tp(e.wasm.numThreads,zr(e.logLevel))},vl=async(e,t)=>{if(t==="webgpu"||t==="webnn"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let r=await navigator.gpu.requestAdapter();if(!r)throw new Error(\'Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.\');if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");let o=(yl(),ur(gl)).init;await o(Ue(),e,r)}},Hr=new Map,Ep=e=>{let t=Ue(),r=t.stackSave();try{let o=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,o,o+4)!==0&&Be("Can\'t get session input/output count."),[t.HEAP32[o/4],t.HEAP32[o/4+1]]}finally{t.stackRestore(r)}},Wo=e=>{let t=Ue(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},$l=async(e,t)=>{let r,o,i=Ue();Array.isArray(e)?[r,o]=e:e.buffer===i.HEAPU8.buffer?[r,o]=[e.byteOffset,e.byteLength]:[r,o]=Wo(e);let u=0,a=0,p=0,m=[],h=[],d=[];try{if([a,m]=Ri(t),t?.externalData&&i.mountExternalData){let C=[];for(let S of t.externalData){let E=typeof S=="string"?S:S.path;C.push(Di(typeof S=="string"?S:S.data).then(O=>{i.mountExternalData(E,O)}))}await Promise.all(C)}u=await i._OrtCreateSession(r,o,a),u===0&&Be("Can\'t create a session.");let[y,w]=Ep(u),_=[],v=[],x=[];for(let C=0;C<y;C++){let S=i._OrtGetInputName(u,C);S===0&&Be("Can\'t get an input name."),h.push(S),_.push(i.UTF8ToString(S))}for(let C=0;C<w;C++){let S=i._OrtGetOutputName(u,C);S===0&&Be("Can\'t get an output name."),d.push(S);let E=i.UTF8ToString(S);v.push(E);{let O=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[E]??"cpu";if(O!=="cpu"&&O!=="cpu-pinned"&&O!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${O}.`);x.push(O)}}let T=null;return x.some(C=>C==="gpu-buffer")&&(p=i._OrtCreateBinding(u),p===0&&Be("Can\'t create IO binding."),T={handle:p,outputPreferredLocations:x,outputPreferredLocationsEncoded:x.map(C=>co(C))}),Hr.set(u,[u,h,d,T]),[u,_,v]}catch(y){throw h.forEach(w=>i._OrtFree(w)),d.forEach(w=>i._OrtFree(w)),p!==0&&i._OrtReleaseBinding(p),u!==0&&i._OrtReleaseSession(u),y}finally{i._free(r),a!==0&&i._OrtReleaseSessionOptions(a),m.forEach(y=>i._free(y)),i.unmountExternalData?.()}},_l=e=>{let t=Ue(),r=Hr.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[o,i,u,a]=r;a&&t._OrtReleaseBinding(a.handle),t.jsepUnregisterBuffers?.(e),i.forEach(p=>t._OrtFree(p)),u.forEach(p=>t._OrtFree(p)),t._OrtReleaseSession(o),Hr.delete(e)},bl=(e,t,r,o,i)=>{if(!e){t.push(0);return}let u=Ue(),a=e[0],p=e[1],m=e[3],h,d;if(a==="string"&&m==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(m==="gpu-buffer"){let _=e[2].gpuBuffer,v=Mr(lo(a));d=p.reduce((x,T)=>x*T,1)*v,h=u.jsepRegisterBuffer(o,i,_,d)}else{let _=e[2];if(Array.isArray(_)){d=4*_.length,h=u._malloc(d),r.push(h);let v=h/4;for(let x=0;x<_.length;x++){if(typeof _[x]!="string")throw new TypeError(`tensor data at index ${x} is not a string`);u.HEAPU32[v++]=We(_[x],r)}}else d=_.byteLength,h=u._malloc(d),r.push(h),u.HEAPU8.set(new Uint8Array(_.buffer,_.byteOffset,d),h)}let y=u.stackSave(),w=u.stackAlloc(4*p.length);try{let _=w/4;p.forEach(x=>u.HEAP32[_++]=x);let v=u._OrtCreateTensor(lo(a),h,d,w,p.length,co(m));v===0&&Be(`Can\'t create tensor for input/output. session=${o}, index=${i}.`),t.push(v)}finally{u.stackRestore(y)}},Sl=async(e,t,r,o,i,u)=>{let a=Ue(),p=Hr.get(e);if(!p)throw new Error(`cannot run inference. invalid session id: ${e}`);let[m,h,d,y]=p,w=t.length,_=o.length,v=0,x=[],T=[],C=[],S=[],E=a.stackSave(),O=a.stackAlloc(w*4),U=a.stackAlloc(w*4),M=a.stackAlloc(_*4),N=a.stackAlloc(_*4);try{[v,x]=ki(u);for(let ee=0;ee<w;ee++)bl(r[ee],T,S,e,t[ee]);for(let ee=0;ee<_;ee++)bl(i[ee],C,S,e,w+o[ee]);let Y=O/4,se=U/4,B=M/4,te=N/4;for(let ee=0;ee<w;ee++)a.HEAPU32[Y++]=T[ee],a.HEAPU32[se++]=h[t[ee]];for(let ee=0;ee<_;ee++)a.HEAPU32[B++]=C[ee],a.HEAPU32[te++]=d[o[ee]];if(y){let{handle:ee,outputPreferredLocations:be,outputPreferredLocationsEncoded:Me}=y;if(h.length!==w)throw new Error(`input count from feeds (${w}) is expected to be always equal to model\'s input count (${h.length}).`);for(let pe=0;pe<w;pe++){let ye=t[pe];await a._OrtBindInput(ee,h[ye],T[pe])!==0&&Be(`Can\'t bind input[${pe}] for session=${e}.`)}for(let pe=0;pe<_;pe++){let ye=o[pe];i[pe]?.[3]?a._OrtBindOutput(ee,d[ye],C[pe],0)!==0&&Be(`Can\'t bind pre-allocated output[${pe}] for session=${e}.`):a._OrtBindOutput(ee,d[ye],0,Me[ye])!==0&&Be(`Can\'t bind output[${pe}] to ${be[pe]} for session=${e}.`)}}a.jsepOnRunStart?.();let Pe;y?Pe=await a._OrtRunWithBinding(m,y.handle,_,M,v):Pe=await a._OrtRun(m,U,O,w,N,_,M,v),Pe!==0&&Be("failed to call OrtRun().");let Ee=[];for(let ee=0;ee<_;ee++){let be=a.HEAPU32[M/4+ee];if(be===C[ee]){Ee.push(i[ee]);continue}let Me=a.stackSave(),pe=a.stackAlloc(4*4),ye=!1,de,we=0;try{a._OrtGetTensorData(be,pe,pe+4,pe+8,pe+12)!==0&&Be(`Can\'t access output tensor data on index ${ee}.`);let Re=pe/4,Ge=a.HEAPU32[Re++];we=a.HEAPU32[Re++];let F=a.HEAPU32[Re++],ie=a.HEAPU32[Re++],he=[];for(let ke=0;ke<ie;ke++)he.push(a.HEAPU32[F/4+ke]);a._OrtFree(F);let Xe=he.reduce((ke,Le)=>ke*Le,1);de=st(Ge);let nt=y?.outputPreferredLocations[o[ee]];if(de==="string"){if(nt==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let ke=[],Le=we/4;for(let It=0;It<Xe;It++){let Tt=a.HEAPU32[Le++],Vt=It===Xe-1?void 0:a.HEAPU32[Le]-Tt;ke.push(a.UTF8ToString(Tt,Vt))}Ee.push([de,he,ke,"cpu"])}else if(nt==="gpu-buffer"&&Xe>0){let ke=a.jsepGetBuffer(we),Le=Mr(Ge);if(Le===void 0||!Bi(de))throw new Error(`Unsupported data type: ${de}`);ye=!0,Ee.push([de,he,{gpuBuffer:ke,download:a.jsepCreateDownloader(ke,Xe*Le,de),dispose:()=>{a._OrtReleaseTensor(be)}},"gpu-buffer"])}else{let ke=yn(de),Le=new ke(Xe);new Uint8Array(Le.buffer,Le.byteOffset,Le.byteLength).set(a.HEAPU8.subarray(we,we+Le.byteLength)),Ee.push([de,he,Le,"cpu"])}}finally{a.stackRestore(Me),de==="string"&&we&&a._free(we),ye||a._OrtReleaseTensor(be)}}return y&&a._OrtClearBoundOutputs(y.handle),Ee}finally{a.stackRestore(E),T.forEach(Y=>a._OrtReleaseTensor(Y)),C.forEach(Y=>a._OrtReleaseTensor(Y)),S.forEach(Y=>a._free(Y)),v!==0&&a._OrtReleaseRunOptions(v),x.forEach(Y=>a._free(Y))}},xl=e=>{let t=Ue(),r=Hr.get(e);if(!r)throw new Error("invalid session id");let o=r[0],i=t._OrtEndProfiling(o);i===0&&Be("Can\'t get an profile file name."),t._OrtFree(i)},Cl=e=>{let t=[];for(let r of e){let o=r[2];!Array.isArray(o)&&"buffer"in o&&t.push(o.buffer)}return t};self.onmessage=e=>{let{type:t,in:r}=e.data;try{switch(t){case"init-wasm":Oi(r.wasm).then(()=>{wl(r).then(()=>{postMessage({type:t})},o=>{postMessage({type:t,err:o})})},o=>{postMessage({type:t,err:o})});break;case"init-ep":{let{epName:o,env:i}=r;vl(i,o).then(()=>{postMessage({type:t})},u=>{postMessage({type:t,err:u})});break}case"copy-from":{let{buffer:o}=r,i=Wo(o);postMessage({type:t,out:i});break}case"create":{let{model:o,options:i}=r;$l(o,i).then(u=>{postMessage({type:t,out:u})},u=>{postMessage({type:t,err:u})});break}case"release":_l(r),postMessage({type:t});break;case"run":{let{sessionId:o,inputIndices:i,inputs:u,outputIndices:a,options:p}=r;Sl(o,i,u,a,new Array(a.length).fill(null),p).then(m=>{m.some(h=>h[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:m},Cl(m))},m=>{postMessage({type:t,err:m})});break}case"end-profiling":xl(r),postMessage({type:t});break;default:}}catch(o){postMessage({type:t,err:o})}};})();\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n'});var or,vt,tn,la,da,fi,mi,_r,Sr,Bf,ua,md,hd,gd,yd,bd,vd,wd,hi=Q(()=>{"use strict";bt();pd();vr();or=()=>!!Ae.wasm.proxy&&typeof document<"u",tn=!1,la=!1,da=!1,mi=new Map,_r=(e,t)=>{let r=mi.get(e);r?r.push(t):mi.set(e,[t])},Sr=()=>{if(tn||!la||da||!vt)throw new Error("worker not ready")},Bf=e=>{switch(e.data.type){case"init-wasm":tn=!1,e.data.err?(da=!0,fi[1](e.data.err)):(la=!0,fi[0]());break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let t=mi.get(e.data.type);e.data.err?t.shift()[1](e.data.err):t.shift()[0](e.data.out);break}default:}},ua=typeof document<"u"?document?.currentScript?.src:void 0,md=async()=>{if(!la){if(tn)throw new Error("multiple calls to 'initWasm()' detected.");if(da)throw new Error("previous call to 'initWasm()' failed.");if(tn=!0,or())return Ae.wasm.wasmPaths===void 0&&ua&&ua.indexOf("blob:")!==0&&(Ae.wasm.wasmPaths=ua.substr(0,+ua.lastIndexOf("/")+1)),new Promise((e,t)=>{vt?.terminate();let r=URL.createObjectURL(new Blob([fd()],{type:"text/javascript"}));vt=new Worker(r,{name:"ort-wasm-proxy-worker"}),vt.onerror=i=>t(i),vt.onmessage=Bf,URL.revokeObjectURL(r),fi=[e,t];let a={type:"init-wasm",in:Ae};vt.postMessage(a)});try{await Ro(Ae.wasm),await id(Ae),la=!0}catch(e){throw da=!0,e}finally{tn=!1}}},hd=async e=>{if(or())return Sr(),new Promise((t,r)=>{_r("init-ep",[t,r]);let a={type:"init-ep",in:{epName:e,env:Ae}};vt.postMessage(a)});await od(Ae,e)},gd=async e=>or()?(Sr(),new Promise((t,r)=>{_r("copy-from",[t,r]);let a={type:"copy-from",in:{buffer:e}};vt.postMessage(a,[e.buffer])})):pi(e),yd=async(e,t)=>{if(or()){if(t?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return Sr(),new Promise((r,a)=>{_r("create",[r,a]);let i={type:"create",in:{model:e,options:t}},s=[];e instanceof Uint8Array&&s.push(e.buffer),vt.postMessage(i,s)})}else return sd(e,t)},bd=async e=>{if(or())return Sr(),new Promise((t,r)=>{_r("release",[t,r]);let a={type:"release",in:e};vt.postMessage(a)});ud(e)},vd=async(e,t,r,a,i,s)=>{if(or()){if(r.some(o=>o[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(i.some(o=>o))throw new Error("pre-allocated output tensor is not supported for proxy.");return Sr(),new Promise((o,c)=>{_r("run",[o,c]);let p=r,m={type:"run",in:{sessionId:e,inputIndices:t,inputs:p,outputIndices:a,options:s}};vt.postMessage(m,cd(p))})}else return ld(e,t,r,a,i,s)},wd=async e=>{if(or())return Sr(),new Promise((t,r)=>{_r("end-profiling",[t,r]);let a={type:"end-profiling",in:e};vt.postMessage(a)});dd(e)}});var $d,Mf,ca,_d=Q(()=>{"use strict";bt();hi();ze();Na();$d=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},Mf=e=>{switch(e[3]){case"cpu":return new Ze(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!Nn(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:r,download:a,dispose:i}=e[2];return Ze.fromGpuBuffer(r,{dataType:t,dims:e[1],download:a,dispose:i})}default:throw new Error(`invalid data location: ${e[3]}`)}},ca=class{async fetchModelAndCopyToWasmMemory(t){return gd(await Yr(t))}async loadModel(t,r){mt();let a;typeof t=="string"?typeof process<"u"&&process.versions&&process.versions.node?a=await Yr(t):a=await this.fetchModelAndCopyToWasmMemory(t):a=t,[this.sessionId,this.inputNames,this.outputNames]=await yd(a,r),ht()}async dispose(){return bd(this.sessionId)}async run(t,r,a){mt();let i=[],s=[];Object.entries(t).forEach(b=>{let w=b[0],$=b[1],x=this.inputNames.indexOf(w);if(x===-1)throw new Error(`invalid input '${w}'`);i.push($),s.push(x)});let o=[],c=[];Object.entries(r).forEach(b=>{let w=b[0],$=b[1],x=this.outputNames.indexOf(w);if(x===-1)throw new Error(`invalid output '${w}'`);o.push($),c.push(x)});let p=i.map((b,w)=>$d(b,()=>`input "${this.inputNames[s[w]]}"`)),m=o.map((b,w)=>b?$d(b,()=>`output "${this.outputNames[c[w]]}"`):null),l=await vd(this.sessionId,s,p,c,m,a),g={};for(let b=0;b<l.length;b++)g[this.outputNames[c[b]]]=o[b]??Mf(l[b]);return ht(),g}startProfiling(){}endProfiling(){wd(this.sessionId)}}});var Df,pa,Sd=Q(()=>{"use strict";bt();hi();_d();Df=()=>{if((typeof Ae.wasm.initTimeout!="number"||Ae.wasm.initTimeout<0)&&(Ae.wasm.initTimeout=0),typeof Ae.wasm.simd!="boolean"&&(Ae.wasm.simd=!0),typeof Ae.wasm.proxy!="boolean"&&(Ae.wasm.proxy=!1),typeof Ae.wasm.trace!="boolean"&&(Ae.wasm.trace=!1),typeof Ae.wasm.numThreads!="number"||!Number.isInteger(Ae.wasm.numThreads)||Ae.wasm.numThreads<=0){(typeof self<"u"&&!self.crossOriginIsolated||typeof process<"u"&&process.versions&&process.versions.node)&&(Ae.wasm.numThreads=1);let e=typeof navigator>"u"?(void 0)().length:navigator.hardwareConcurrency;Ae.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},pa=class{async init(t){Df(),await md(),await hd(t)}async createInferenceSessionHandler(t,r){let a=new ca;return await a.loadModel(t,r),Promise.resolve(a)}}});var xd={};br(xd,{wasmBackend:()=>zf});var zf,Cd=Q(()=>{"use strict";Sd();zf=new pa});bt();bt();bt();var bo="1.18.0";var Mw=Ea;{let e=(Cd(),tr(xd)).wasmBackend;nr("webgpu",e,5),nr("webnn",e,5),nr("cpu",e,10),nr("wasm",e,10)}Object.defineProperty(Ae.versions,"web",{value:bo,enumerable:!0});export{Dd as InferenceSession,Bn as TRACE,mt as TRACE_FUNC_BEGIN,ht as TRACE_FUNC_END,Ze as Tensor,Ud as TrainingSession,Mw as default,Ae as env,nr as registerBackend};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
//# sourceMappingURL=ort.webgpu.min.js.map
