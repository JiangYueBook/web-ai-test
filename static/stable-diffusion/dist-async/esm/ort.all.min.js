/*!
 * ONNX Runtime Web v1.17.0
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
var O0=Object.create;var Ii=Object.defineProperty;var E0=Object.getOwnPropertyDescriptor;var C0=Object.getOwnPropertyNames;var P0=Object.getPrototypeOf,k0=Object.prototype.hasOwnProperty;var R=(r,e)=>()=>(r&&(e=r(r=0)),e);var Qe=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),gn=(r,e)=>{for(var n in e)Ii(r,n,{get:e[n],enumerable:!0})},Ml=(r,e,n,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of C0(e))!k0.call(r,o)&&o!==n&&Ii(r,o,{get:()=>e[o],enumerable:!(t=E0(e,o))||t.enumerable});return r};var Gn=(r,e,n)=>(n=r!=null?O0(P0(r)):{},Ml(e||!r||!r.__esModule?Ii(n,"default",{value:r,enumerable:!0}):n,r)),Xr=r=>Ml(Ii({},"__esModule",{value:!0}),r);var Ai,bn,Zr,Oi,Ei=R(()=>{"use strict";Ai=new Map,bn=[],Zr=(r,e,n)=>{if(e&&typeof e.init=="function"&&typeof e.createInferenceSessionHandler=="function"){let t=Ai.get(r);if(t===void 0)Ai.set(r,{backend:e,priority:n});else{if(t.priority>n)return;if(t.priority===n&&t.backend!==e)throw new Error(`cannot register backend "${r}" using priority ${n}`)}if(n>=0){let o=bn.indexOf(r);o!==-1&&bn.splice(o,1);for(let i=0;i<bn.length;i++)if(Ai.get(bn[i]).priority<=n){bn.splice(i,0,r);return}bn.push(r)}return}throw new TypeError("not a valid backend")},Oi=async r=>{let e=r.length===0?bn:r,n=[];for(let t of e){let o=Ai.get(t);if(o){if(o.initialized)return o.backend;if(o.aborted)continue;let i=!!o.initPromise;try{return i||(o.initPromise=o.backend.init(t)),await o.initPromise,o.initialized=!0,o.backend}catch(s){i||n.push({name:t,err:s}),o.aborted=!0}finally{delete o.initPromise}}}throw new Error(`no available backend found. ERR: ${n.map(t=>`[${t.name}] ${t.err}`).join(", ")}`)}});var Nl=R(()=>{"use strict";Ei()});var Fl,Vl=R(()=>{"use strict";Fl="1.17.0"});var Ul,yn,ps=R(()=>{"use strict";Vl();Ul="warning",yn={wasm:{},webgl:{},webgpu:{},versions:{common:Fl},set logLevel(r){if(r!==void 0){if(typeof r!="string"||["verbose","info","warning","error","fatal"].indexOf(r)===-1)throw new Error(`Unsupported logging level: ${r}`);Ul=r}},get logLevel(){return Ul}};Object.defineProperty(yn,"logLevel",{enumerable:!0})});var xe,Gl=R(()=>{"use strict";ps();xe=yn});var Wl,Hl,ql=R(()=>{"use strict";Wl=(r,e)=>{let n=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);n.width=r.dims[3],n.height=r.dims[2];let t=n.getContext("2d");if(t!=null){let o,i;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(o=r.dims[2],i=r.dims[3]):(o=r.dims[3],i=r.dims[2]);let s=e?.format!==void 0?e.format:"RGB",a=e?.norm,u,l;a===void 0||a.mean===void 0?u=[255,255,255,255]:typeof a.mean=="number"?u=[a.mean,a.mean,a.mean,a.mean]:(u=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(u[3]=a.mean[3])),a===void 0||a.bias===void 0?l=[0,0,0,0]:typeof a.bias=="number"?l=[a.bias,a.bias,a.bias,a.bias]:(l=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(l[3]=a.bias[3]));let d=i*o,h=0,m=d,b=d*2,y=-1;s==="RGBA"?(h=0,m=d,b=d*2,y=d*3):s==="RGB"?(h=0,m=d,b=d*2):s==="RBG"&&(h=0,b=d,m=d*2);for(let x=0;x<i;x++)for(let A=0;A<o;A++){let I=(r.data[h++]-l[0])*u[0],$=(r.data[m++]-l[1])*u[1],O=(r.data[b++]-l[2])*u[2],E=y===-1?255:(r.data[y++]-l[3])*u[3];t.fillStyle="rgba("+I+","+$+","+O+","+E+")",t.fillRect(A,x,1,1)}if("toDataURL"in n)return n.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},Hl=(r,e)=>{let n=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),t;if(n!=null){let o,i,s;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(o=r.dims[2],i=r.dims[1],s=r.dims[3]):(o=r.dims[3],i=r.dims[2],s=r.dims[1]);let a=e!==void 0&&e.format!==void 0?e.format:"RGB",u=e?.norm,l,d;u===void 0||u.mean===void 0?l=[255,255,255,255]:typeof u.mean=="number"?l=[u.mean,u.mean,u.mean,u.mean]:(l=[u.mean[0],u.mean[1],u.mean[2],255],u.mean[3]!==void 0&&(l[3]=u.mean[3])),u===void 0||u.bias===void 0?d=[0,0,0,0]:typeof u.bias=="number"?d=[u.bias,u.bias,u.bias,u.bias]:(d=[u.bias[0],u.bias[1],u.bias[2],0],u.bias[3]!==void 0&&(d[3]=u.bias[3]));let h=i*o;if(e!==void 0&&(e.format!==void 0&&s===4&&e.format!=="RGBA"||s===3&&e.format!=="RGB"&&e.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let m=4,b=0,y=1,x=2,A=3,I=0,$=h,O=h*2,E=-1;a==="RGBA"?(I=0,$=h,O=h*2,E=h*3):a==="RGB"?(I=0,$=h,O=h*2):a==="RBG"&&(I=0,O=h,$=h*2),t=n.createImageData(o,i);for(let F=0;F<i*o;b+=m,y+=m,x+=m,A+=m,F++)t.data[b]=(r.data[I++]-d[0])*l[0],t.data[y]=(r.data[$++]-d[1])*l[1],t.data[x]=(r.data[O++]-d[2])*l[2],t.data[A]=E===-1?255:(r.data[E++]-d[3])*l[3]}else throw new Error("Can not access image data");return t}});var hs,jl,Kl,Yl,Xl,Zl=R(()=>{"use strict";Ci();hs=(r,e)=>{if(r===void 0)throw new Error("Image buffer must be defined");if(e.height===void 0||e.width===void 0)throw new Error("Image height and width must be defined");if(e.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:n,width:t}=e,o=e.norm??{mean:255,bias:0},i,s;typeof o.mean=="number"?i=[o.mean,o.mean,o.mean,o.mean]:i=[o.mean[0],o.mean[1],o.mean[2],o.mean[3]??255],typeof o.bias=="number"?s=[o.bias,o.bias,o.bias,o.bias]:s=[o.bias[0],o.bias[1],o.bias[2],o.bias[3]??0];let a=e.format!==void 0?e.format:"RGBA",u=e.tensorFormat!==void 0&&e.tensorFormat!==void 0?e.tensorFormat:"RGB",l=n*t,d=u==="RGBA"?new Float32Array(l*4):new Float32Array(l*3),h=4,m=0,b=1,y=2,x=3,A=0,I=l,$=l*2,O=-1;a==="RGB"&&(h=3,m=0,b=1,y=2,x=-1),u==="RGBA"?O=l*3:u==="RBG"?(A=0,$=l,I=l*2):u==="BGR"&&($=0,I=l,A=l*2);for(let F=0;F<l;F++,m+=h,y+=h,b+=h,x+=h)d[A++]=(r[m]+s[0])/i[0],d[I++]=(r[b]+s[1])/i[1],d[$++]=(r[y]+s[2])/i[2],O!==-1&&x!==-1&&(d[O++]=(r[x]+s[3])/i[3]);return u==="RGBA"?new Mt("float32",d,[1,4,n,t]):new Mt("float32",d,[1,3,n,t])},jl=async(r,e)=>{let n=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,t=typeof ImageData<"u"&&r instanceof ImageData,o=typeof ImageBitmap<"u"&&r instanceof ImageBitmap,i=typeof r=="string",s,a=e??{},u=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},l=d=>d instanceof HTMLCanvasElement||d instanceof OffscreenCanvas?d.getContext("2d"):null;if(n){let d=u();d.width=r.width,d.height=r.height;let h=l(d);if(h!=null){let m=r.height,b=r.width;if(e!==void 0&&e.resizedHeight!==void 0&&e.resizedWidth!==void 0&&(m=e.resizedHeight,b=e.resizedWidth),e!==void 0){if(a=e,e.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=m,a.width=b}else a.tensorFormat="RGBA",a.height=m,a.width=b;h.drawImage(r,0,0),s=h.getImageData(0,0,b,m).data}else throw new Error("Can not access image data")}else if(t){let d,h;if(e!==void 0&&e.resizedWidth!==void 0&&e.resizedHeight!==void 0?(d=e.resizedHeight,h=e.resizedWidth):(d=r.height,h=r.width),e!==void 0&&(a=e),a.format="RGBA",a.height=d,a.width=h,e!==void 0){let m=u();m.width=h,m.height=d;let b=l(m);if(b!=null)b.putImageData(r,0,0),s=b.getImageData(0,0,h,d).data;else throw new Error("Can not access image data")}else s=r.data}else if(o){if(e===void 0)throw new Error("Please provide image config with format for Imagebitmap");let d=u();d.width=r.width,d.height=r.height;let h=l(d);if(h!=null){let m=r.height,b=r.width;return h.drawImage(r,0,0,b,m),s=h.getImageData(0,0,b,m).data,a.height=m,a.width=b,hs(s,a)}else throw new Error("Can not access image data")}else{if(i)return new Promise((d,h)=>{let m=u(),b=l(m);if(!r||!b)return h();let y=new Image;y.crossOrigin="Anonymous",y.src=r,y.onload=()=>{m.width=y.width,m.height=y.height,b.drawImage(y,0,0,m.width,m.height);let x=b.getImageData(0,0,m.width,m.height);a.height=m.height,a.width=m.width,d(hs(x.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(s!==void 0)return hs(s,a);throw new Error("Input data provided is not supported - aborted tensor creation")},Kl=(r,e)=>{let{width:n,height:t,download:o,dispose:i}=e,s=[1,t,n,4];return new Mt({location:"texture",type:"float32",texture:r,dims:s,download:o,dispose:i})},Yl=(r,e)=>{let{dataType:n,dims:t,download:o,dispose:i}=e;return new Mt({location:"gpu-buffer",type:n??"float32",gpuBuffer:r,dims:t,download:o,dispose:i})},Xl=(r,e,n)=>new Mt({location:"cpu-pinned",type:r,data:e,dims:n??[e.length]})});var Eo,Pi,Jl,Ql,ed=R(()=>{"use strict";Eo=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["float16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),Pi=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),Jl=!1,Ql=()=>{if(!Jl){Jl=!0;let r=typeof BigInt64Array<"u"&&typeof BigInt64Array.from=="function",e=typeof BigUint64Array<"u"&&typeof BigUint64Array.from=="function";r&&(Eo.set("int64",BigInt64Array),Pi.set(BigInt64Array,"int64")),e&&(Eo.set("uint64",BigUint64Array),Pi.set(BigUint64Array,"uint64"))}}});var td,rd,nd=R(()=>{"use strict";Ci();td=r=>{let e=1;for(let n=0;n<r.length;n++){let t=r[n];if(typeof t!="number"||!Number.isSafeInteger(t))throw new TypeError(`dims[${n}] must be an integer, got: ${t}`);if(t<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${t}`);e*=t}return e},rd=(r,e)=>{switch(r.location){case"cpu":return new Mt(r.type,r.data,e);case"cpu-pinned":return new Mt({location:"cpu-pinned",data:r.data,type:r.type,dims:e});case"texture":return new Mt({location:"texture",texture:r.texture,type:r.type,dims:e});case"gpu-buffer":return new Mt({location:"gpu-buffer",gpuBuffer:r.gpuBuffer,type:r.type,dims:e});default:throw new Error(`tensorReshape: tensor location ${r.location} is not supported`)}}});var Mt,Ci=R(()=>{"use strict";ql();Zl();ed();nd();Mt=class{constructor(e,n,t){Ql();let o,i;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,o=e.type,i=e.dims,e.location){case"cpu-pinned":{let a=Eo.get(o);if(!a)throw new TypeError(`unsupported type "${o}" to create tensor from pinned buffer`);if(!(e.data instanceof a))throw new TypeError(`buffer should be of type ${a.name}`);this.cpuData=e.data;break}case"texture":{if(o!=="float32")throw new TypeError(`unsupported type "${o}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(o!=="float32"&&o!=="float16"&&o!=="int32"&&o!=="int64"&&o!=="uint32"&&o!=="bool")throw new TypeError(`unsupported type "${o}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,u;if(typeof e=="string")if(o=e,u=t,e==="string"){if(!Array.isArray(n))throw new TypeError("A string tensor's data must be a string array.");a=n}else{let l=Eo.get(e);if(l===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(n)){if(e==="float16")throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");e==="uint64"||e==="int64"?a=l.from(n,BigInt):a=l.from(n)}else if(n instanceof l)a=n;else throw new TypeError(`A ${o} tensor's data must be type of ${l}`)}else if(u=n,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let l=typeof e[0];if(l==="string")o="string",a=e;else if(l==="boolean")o="bool",a=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${l}.`)}else{let l=Pi.get(e.constructor);if(l===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);o=l,a=e}if(u===void 0)u=[a.length];else if(!Array.isArray(u))throw new TypeError("A tensor's dims must be a number array");i=u,this.cpuData=a,this.dataLocation="cpu"}let s=td(i);if(this.cpuData&&s!==this.cpuData.length)throw new Error(`Tensor's size(${s}) does not match data length(${this.cpuData.length}).`);this.type=o,this.dims=i,this.size=s}static async fromImage(e,n){return jl(e,n)}static fromTexture(e,n){return Kl(e,n)}static fromGpuBuffer(e,n){return Yl(e,n)}static fromPinnedBuffer(e,n,t){return Xl(e,n,t)}toDataURL(e){return Wl(this,e)}toImageData(e){return Hl(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let n=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=n,e&&this.disposer&&(this.disposer(),this.disposer=void 0),n}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return rd(this,e)}}});var Tt,ki=R(()=>{"use strict";Ci();Tt=Mt});var Di,od,Qt,er,ms=R(()=>{"use strict";ps();Di=(r,e)=>{yn.wasm.trace&&console.timeStamp(`${r}::ORT::${e}`)},od=(r,e)=>{let n=new Error().stack?.split(/\r\n|\r|\n/g)||[],t=!1;for(let o=0;o<n.length;o++){if(t&&!n[o].includes("TRACE_FUNC")){let i=`FUNC_${r}::${n[o].trim().split(" ")[1]}`;e&&(i+=`::${e}`),Di("CPU",i);return}n[o].includes("TRACE_FUNC")&&(t=!0)}},Qt=r=>{yn.wasm.trace&&od("BEGIN",r)},er=r=>{yn.wasm.trace&&od("END",r)}});var Bi,id=R(()=>{"use strict";Ei();ki();ms();Bi=class r{constructor(e){this.handler=e}async run(e,n,t){Qt();let o={},i={};if(typeof e!="object"||e===null||e instanceof Tt||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let s=!0;if(typeof n=="object"){if(n===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(n instanceof Tt)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(n)){if(n.length===0)throw new TypeError("'fetches' cannot be an empty array.");s=!1;for(let l of n){if(typeof l!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(l)===-1)throw new RangeError(`'fetches' contains invalid output name: ${l}.`);o[l]=null}if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else{let l=!1,d=Object.getOwnPropertyNames(n);for(let h of this.outputNames)if(d.indexOf(h)!==-1){let m=n[h];(m===null||m instanceof Tt)&&(l=!0,s=!1,o[h]=m)}if(l){if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else i=n}}else if(typeof n<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let l of this.inputNames)if(typeof e[l]>"u")throw new Error(`input '${l}' is missing in 'feeds'.`);if(s)for(let l of this.outputNames)o[l]=null;let a=await this.handler.run(e,o,i),u={};for(let l in a)if(Object.hasOwnProperty.call(a,l)){let d=a[l];d instanceof Tt?u[l]=d:u[l]=new Tt(d.type,d.data,d.dims)}return er(),u}async release(){return this.handler.dispose()}static async create(e,n,t,o){Qt();let i,s={};if(typeof e=="string"){if(i=e,typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof Uint8Array){if(i=e,typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&e instanceof SharedArrayBuffer){let h=e,m=0,b=e.byteLength;if(typeof n=="object"&&n!==null)s=n;else if(typeof n=="number"){if(m=n,!Number.isSafeInteger(m))throw new RangeError("'byteOffset' must be an integer.");if(m<0||m>=h.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${h.byteLength}).`);if(b=e.byteLength-m,typeof t=="number"){if(b=t,!Number.isSafeInteger(b))throw new RangeError("'byteLength' must be an integer.");if(b<=0||m+b>h.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${h.byteLength-m}].`);if(typeof o=="object"&&o!==null)s=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else if(typeof t<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof n<"u")throw new TypeError("'options' must be an object.");i=new Uint8Array(h,m,b)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let u=(s.executionProviders||[]).map(h=>typeof h=="string"?h:h.name),d=await(await Oi(u)).createInferenceSessionHandler(i,s);return er(),new r(d)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}});var D0,ad=R(()=>{"use strict";id();D0=Bi});var sd=R(()=>{"use strict"});var B0,Ri,ud=R(()=>{"use strict";Ei();ki();B0="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",Ri=class r{constructor(e,n,t){this.handler=e,this.hasOptimizerModel=n,this.hasEvalModel=t}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(e,n){let t=e.evalModel||"",o=e.optimizerModel||"",i=n||{},a=(i.executionProviders||[]).map(l=>typeof l=="string"?l:l.name),u=await Oi(a);if(u.createTrainingSessionHandler){let l=await u.createTrainingSessionHandler(e.checkpointState,e.trainModel,t,o,i);return new r(l,!!e.optimizerModel,!!e.evalModel)}else throw new Error(B0)}typeNarrowingForRunStep(e,n,t,o,i){let s={},a={};if(typeof t!="object"||t===null||t instanceof Tt||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let u=!0;if(typeof o=="object"){if(o===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(o instanceof Tt)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(o)){if(o.length===0)throw new TypeError("'fetches' cannot be an empty array.");u=!1;for(let l of o){if(typeof l!="string")throw new TypeError("'fetches' must be a string array or an object.");if(n.indexOf(l)===-1)throw new RangeError(`'fetches' contains invalid output name: ${l}.`);s[l]=null}if(typeof i=="object"&&i!==null)a=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else{let l=!1,d=Object.getOwnPropertyNames(o);for(let h of n)if(d.indexOf(h)!==-1){let m=o[h];(m===null||m instanceof Tt)&&(l=!0,u=!1,s[h]=m)}if(l){if(typeof i=="object"&&i!==null)a=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else a=o}}else if(typeof o<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let l of e)if(typeof t[l]>"u")throw new Error(`input '${l}' is missing in 'feeds'.`);if(u)for(let l of n)s[l]=null;return[s,a]}convertHandlerReturnTypeToMapOfTensors(e){let n={};for(let t in e)if(Object.hasOwnProperty.call(e,t)){let o=e[t];o instanceof Tt?n[t]=o:n[t]=new Tt(o.type,o.data,o.dims)}return n}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(e,n,t){let[o,i]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,e,n,t),s=await this.handler.runTrainStep(e,o,i);return this.convertHandlerReturnTypeToMapOfTensors(s)}async runOptimizerStep(e){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(e||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(e,n,t){if(this.hasEvalModel){let[o,i]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,e,n,t),s=await this.handler.runEvalStep(e,o,i);return this.convertHandlerReturnTypeToMapOfTensors(s)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(e=!0){return this.handler.getParametersSize(e)}async loadParametersBuffer(e,n=!0){let t=await this.getParametersSize(n);if(e.length!==4*t)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(e,n)}async getContiguousParameters(e=!0){return this.handler.getContiguousParameters(e)}async release(){return this.handler.dispose()}}});var R0,ld=R(()=>{"use strict";ud();R0=Ri});var gs={};gn(gs,{InferenceSession:()=>D0,TRACE:()=>Di,TRACE_FUNC_BEGIN:()=>Qt,TRACE_FUNC_END:()=>er,Tensor:()=>Tt,TrainingSession:()=>R0,env:()=>xe,registerBackend:()=>Zr});var Ct=R(()=>{"use strict";Nl();Gl();ad();ki();ms();sd();ld()});function Jr(r,e,n,t){if(e===void 0)return L0(r);if(n===void 0)zi(r,e,1);else if(typeof n=="number"&&t===void 0)zi(r,e,n);else if(typeof n=="string"&&t===void 0)zi(r,n,1,e);else if(typeof n=="string"&&typeof t=="number")zi(r,n,t,e);else throw new TypeError("input is valid")}function L0(r){return{verbose:Jr.verbose.bind(null,r),info:Jr.info.bind(null,r),warning:Jr.warning.bind(null,r),error:Jr.error.bind(null,r),fatal:Jr.fatal.bind(null,r)}}function zi(r,e,n,t){let o=Co[t||""]||Co[""];cd[r]<cd[o.minimalSeverity]||(o.logDateTime&&(e=`${new Date().toISOString()}|${e}`),o.logSourceLocation,z0[o.provider].log(r,e,t))}var bs,ys,cd,z0,fd,Co,Ye,Mi,Ni,Fi,Li,nr=R(()=>{"use strict";bs=class{log(e,n,t){}},ys=class{log(e,n,t){console.log(`${this.color(e)} ${t?"\x1B[35m"+t+"\x1B[0m ":""}${n}`)}color(e){switch(e){case"verbose":return"\x1B[34;40mv\x1B[0m";case"info":return"\x1B[32mi\x1B[0m";case"warning":return"\x1B[30;43mw\x1B[0m";case"error":return"\x1B[31;40me\x1B[0m";case"fatal":return"\x1B[101mf\x1B[0m";default:throw new Error(`unsupported severity: ${e}`)}}},cd={verbose:1e3,info:2e3,warning:4e3,error:5e3,fatal:6e3},z0={none:new bs,console:new ys},fd={provider:"console",minimalSeverity:"warning",logDateTime:!0,logSourceLocation:!1},Co={"":fd};(u=>{function r(l,d){u("verbose",l,d)}u.verbose=r;function e(l,d){u("info",l,d)}u.info=e;function n(l,d){u("warning",l,d)}u.warning=n;function t(l,d){u("error",l,d)}u.error=t;function o(l,d){u("fatal",l,d)}u.fatal=o;function i(l){Co={},s("",l||{})}u.reset=i;function s(l,d){if(l==="*")i(d);else{let h=Co[l]||fd;Co[l]={provider:d.provider||h.provider,minimalSeverity:d.minimalSeverity||h.minimalSeverity,logDateTime:d.logDateTime===void 0?h.logDateTime:d.logDateTime,logSourceLocation:d.logSourceLocation===void 0?h.logSourceLocation:d.logSourceLocation}}}u.set=s;function a(l){let d={};l.logLevel&&(d.minimalSeverity=l.logLevel),s("",d)}u.setWithEnv=a})(Jr||={});Ye=Jr,Mi=class{constructor(e,n,t,o,i,s){this.category=e;this.name=n;this.startTime=t;this.endCallback=o;this.timer=i;this.ctx=s}async end(){return this.endCallback(this)}async checkTimer(){if(this.ctx===void 0||this.timer===void 0)throw new Error("No webgl timer found");return this.ctx.endTimer(),this.ctx.waitForQueryAndGetTime(this.timer)}},Ni=class{constructor(e,n,t,o){this.category=e;this.name=n;this.startTime=t;this.endTime=o}},Fi=class{constructor(e,n,t){this._started=!1;this._flushPointer=0;this._started=!1,this._maxNumberEvents=e===void 0?1e4:e,this._flushBatchSize=n===void 0?10:n,this._flushIntervalInMilliseconds=t===void 0?5e3:t}static create(e){return e===void 0?new this:new this(e.maxNumberEvents,e.flushBatchSize,e.flushIntervalInMilliseconds)}start(){this._started=!0,this._timingEvents=[],this._flushTime=Li(),this._flushPointer=0}stop(){for(this._started=!1;this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer])}event(e,n,t,o){let i=this._started?this.begin(e,n,o):void 0,s=!1,a=t();if(a&&typeof a.then=="function")return s=!0,new Promise((u,l)=>{a.then(async d=>{i&&await i.end(),u(d)},async d=>{i&&await i.end(),l(d)})});if(!s&&i){let u=i.end();if(u&&typeof u.then=="function")return new Promise((l,d)=>{u.then(()=>{l(a)},h=>{d(h)})})}return a}begin(e,n,t){if(!this._started)throw new Error("profiler is not started yet");if(t===void 0){let o=Li();return this.flush(o),new Mi(e,n,o,i=>this.endSync(i))}else{let o=t.beginTimer();return new Mi(e,n,0,async i=>this.end(i),o,t)}}async end(e){let n=await e.checkTimer();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new Ni(e.category,e.name,e.startTime,n)),this.flush(n))}endSync(e){let n=Li();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new Ni(e.category,e.name,e.startTime,n)),this.flush(n))}logOneEvent(e){Ye.verbose(`Profiler.${e.category}`,`${(e.endTime-e.startTime).toFixed(2)}ms on event '${e.name}' at ${e.endTime.toFixed(2)}`)}flush(e){if(this._timingEvents.length-this._flushPointer>=this._flushBatchSize||e-this._flushTime>=this._flushIntervalInMilliseconds){for(let n=this._flushPointer;this._flushPointer<n+this._flushBatchSize&&this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer]);this._flushTime=Li()}}get started(){return this._started}},Li=typeof performance<"u"&&performance.now?()=>performance.now():Date.now});function pd(r,e,n){for(let t of n){let o=t[0],i=t[1],s=t[2],a=t[3],u=t[4];if(r.opType===o){for(let l of e)if((l.domain===i||l.domain==="ai.onnx"&&i==="")&&M0(l.version,s))return{opImpl:a,opInit:u}}}throw new TypeError(`cannot resolve operator '${r.opType}' with opsets: ${e.map(t=>`${t.domain||"ai.onnx"} v${t.version}`).join(", ")}`)}function M0(r,e){if(e.endsWith("+")){let n=Number.parseInt(e.substring(0,e.length-1),10);return!isNaN(n)&&n<=r}else if(e.split("-").length===2){let n=e.split("-"),t=Number.parseInt(n[0],10),o=Number.parseInt(n[1],10);return!isNaN(t)&&!isNaN(o)&&t<=r&&r<=o}else return Number.parseInt(e,10)===r}var hd=R(()=>{"use strict"});var md=Qe(vs=>{"use strict";vs.__esModule=!0;var N0=function(){function r(e){if(!e)throw new TypeError("Invalid argument; `value` has no value.");this.value=r.EMPTY,e&&r.isGuid(e)&&(this.value=e)}return r.isGuid=function(e){var n=e.toString();return e&&(e instanceof r||r.validator.test(n))},r.create=function(){return new r([r.gen(2),r.gen(1),r.gen(1),r.gen(1),r.gen(3)].join("-"))},r.createEmpty=function(){return new r("emptyguid")},r.parse=function(e){return new r(e)},r.raw=function(){return[r.gen(2),r.gen(1),r.gen(1),r.gen(1),r.gen(3)].join("-")},r.gen=function(e){for(var n="",t=0;t<e;t++)n+=((1+Math.random())*65536|0).toString(16).substring(1);return n},r.prototype.equals=function(e){return r.isGuid(e)&&this.value===e.toString()},r.prototype.isEmpty=function(){return this.value===r.EMPTY},r.prototype.toString=function(){return this.value},r.prototype.toJSON=function(){return{value:this.value}},r.validator=new RegExp("^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$","i"),r.EMPTY="00000000-0000-0000-0000-000000000000",r}();vs.Guid=N0});function et(r,e,n){this.low=r|0,this.high=e|0,this.unsigned=!!n}function Pt(r){return(r&&r.__isLong__)===!0}function gd(r){var e=Math.clz32(r&-r);return r?31-e:e}function vn(r,e){var n,t,o;return e?(r>>>=0,(o=0<=r&&r<256)&&(t=yd[r],t)?t:(n=je(r,0,!0),o&&(yd[r]=n),n)):(r|=0,(o=-128<=r&&r<128)&&(t=bd[r],t)?t:(n=je(r,r<0?-1:0,!1),o&&(bd[r]=n),n))}function ir(r,e){if(isNaN(r))return e?Gr:hr;if(e){if(r<0)return Gr;if(r>=Td)return Sd}else{if(r<=-wd)return qt;if(r+1>=wd)return _d}return r<0?ir(-r,e).neg():je(r%Hn|0,r/Hn|0,e)}function je(r,e,n){return new et(r,e,n)}function xs(r,e,n){if(r.length===0)throw Error("empty string");if(typeof e=="number"?(n=e,e=!1):e=!!e,r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return e?Gr:hr;if(n=n||10,n<2||36<n)throw RangeError("radix");var t;if((t=r.indexOf("-"))>0)throw Error("interior hyphen");if(t===0)return xs(r.substring(1),e,n).neg();for(var o=ir(Vi(n,8)),i=hr,s=0;s<r.length;s+=8){var a=Math.min(8,r.length-s),u=parseInt(r.substring(s,s+a),n);if(a<8){var l=ir(Vi(n,a));i=i.mul(l).add(ir(u))}else i=i.mul(o),i=i.add(ir(u))}return i.unsigned=e,i}function mr(r,e){return typeof r=="number"?ir(r,e):typeof r=="string"?xs(r,e):je(r.low,r.high,typeof e=="boolean"?e:r.unsigned)}var or,bd,yd,Vi,vd,F0,Hn,Td,wd,xd,hr,Gr,Wn,$d,ws,_d,Sd,qt,Z,Wr,Ts=R(()=>{or=null;try{or=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}et.prototype.__isLong__;Object.defineProperty(et.prototype,"__isLong__",{value:!0});et.isLong=Pt;bd={},yd={};et.fromInt=vn;et.fromNumber=ir;et.fromBits=je;Vi=Math.pow;et.fromString=xs;et.fromValue=mr;vd=65536,F0=1<<24,Hn=vd*vd,Td=Hn*Hn,wd=Td/2,xd=vn(F0),hr=vn(0);et.ZERO=hr;Gr=vn(0,!0);et.UZERO=Gr;Wn=vn(1);et.ONE=Wn;$d=vn(1,!0);et.UONE=$d;ws=vn(-1);et.NEG_ONE=ws;_d=je(-1,2147483647,!1);et.MAX_VALUE=_d;Sd=je(-1,-1,!0);et.MAX_UNSIGNED_VALUE=Sd;qt=je(0,-2147483648,!1);et.MIN_VALUE=qt;Z=et.prototype;Z.toInt=function(){return this.unsigned?this.low>>>0:this.low};Z.toNumber=function(){return this.unsigned?(this.high>>>0)*Hn+(this.low>>>0):this.high*Hn+(this.low>>>0)};Z.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(qt)){var n=ir(e),t=this.div(n),o=t.mul(n).sub(this);return t.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var i=ir(Vi(e,6),this.unsigned),s=this,a="";;){var u=s.div(i),l=s.sub(u.mul(i)).toInt()>>>0,d=l.toString(e);if(s=u,s.isZero())return d+a;for(;d.length<6;)d="0"+d;a=""+d+a}};Z.getHighBits=function(){return this.high};Z.getHighBitsUnsigned=function(){return this.high>>>0};Z.getLowBits=function(){return this.low};Z.getLowBitsUnsigned=function(){return this.low>>>0};Z.getNumBitsAbs=function(){if(this.isNegative())return this.eq(qt)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,n=31;n>0&&!(e&1<<n);n--);return this.high!=0?n+33:n+1};Z.isZero=function(){return this.high===0&&this.low===0};Z.eqz=Z.isZero;Z.isNegative=function(){return!this.unsigned&&this.high<0};Z.isPositive=function(){return this.unsigned||this.high>=0};Z.isOdd=function(){return(this.low&1)===1};Z.isEven=function(){return(this.low&1)===0};Z.equals=function(e){return Pt(e)||(e=mr(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};Z.eq=Z.equals;Z.notEquals=function(e){return!this.eq(e)};Z.neq=Z.notEquals;Z.ne=Z.notEquals;Z.lessThan=function(e){return this.comp(e)<0};Z.lt=Z.lessThan;Z.lessThanOrEqual=function(e){return this.comp(e)<=0};Z.lte=Z.lessThanOrEqual;Z.le=Z.lessThanOrEqual;Z.greaterThan=function(e){return this.comp(e)>0};Z.gt=Z.greaterThan;Z.greaterThanOrEqual=function(e){return this.comp(e)>=0};Z.gte=Z.greaterThanOrEqual;Z.ge=Z.greaterThanOrEqual;Z.compare=function(e){if(Pt(e)||(e=mr(e)),this.eq(e))return 0;var n=this.isNegative(),t=e.isNegative();return n&&!t?-1:!n&&t?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};Z.comp=Z.compare;Z.negate=function(){return!this.unsigned&&this.eq(qt)?qt:this.not().add(Wn)};Z.neg=Z.negate;Z.add=function(e){Pt(e)||(e=mr(e));var n=this.high>>>16,t=this.high&65535,o=this.low>>>16,i=this.low&65535,s=e.high>>>16,a=e.high&65535,u=e.low>>>16,l=e.low&65535,d=0,h=0,m=0,b=0;return b+=i+l,m+=b>>>16,b&=65535,m+=o+u,h+=m>>>16,m&=65535,h+=t+a,d+=h>>>16,h&=65535,d+=n+s,d&=65535,je(m<<16|b,d<<16|h,this.unsigned)};Z.subtract=function(e){return Pt(e)||(e=mr(e)),this.add(e.neg())};Z.sub=Z.subtract;Z.multiply=function(e){if(this.isZero())return this;if(Pt(e)||(e=mr(e)),or){var n=or.mul(this.low,this.high,e.low,e.high);return je(n,or.get_high(),this.unsigned)}if(e.isZero())return this.unsigned?Gr:hr;if(this.eq(qt))return e.isOdd()?qt:hr;if(e.eq(qt))return this.isOdd()?qt:hr;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(xd)&&e.lt(xd))return ir(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,o=this.high&65535,i=this.low>>>16,s=this.low&65535,a=e.high>>>16,u=e.high&65535,l=e.low>>>16,d=e.low&65535,h=0,m=0,b=0,y=0;return y+=s*d,b+=y>>>16,y&=65535,b+=i*d,m+=b>>>16,b&=65535,b+=s*l,m+=b>>>16,b&=65535,m+=o*d,h+=m>>>16,m&=65535,m+=i*l,h+=m>>>16,m&=65535,m+=s*u,h+=m>>>16,m&=65535,h+=t*d+o*l+i*u+s*a,h&=65535,je(b<<16|y,h<<16|m,this.unsigned)};Z.mul=Z.multiply;Z.divide=function(e){if(Pt(e)||(e=mr(e)),e.isZero())throw Error("division by zero");if(or){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var n=(this.unsigned?or.div_u:or.div_s)(this.low,this.high,e.low,e.high);return je(n,or.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Gr:hr;var t,o,i;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Gr;if(e.gt(this.shru(1)))return $d;i=Gr}else{if(this.eq(qt)){if(e.eq(Wn)||e.eq(ws))return qt;if(e.eq(qt))return Wn;var s=this.shr(1);return t=s.div(e).shl(1),t.eq(hr)?e.isNegative()?Wn:ws:(o=this.sub(e.mul(t)),i=t.add(o.div(e)),i)}else if(e.eq(qt))return this.unsigned?Gr:hr;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=hr}for(o=this;o.gte(e);){t=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(t)/Math.LN2),u=a<=48?1:Vi(2,a-48),l=ir(t),d=l.mul(e);d.isNegative()||d.gt(o);)t-=u,l=ir(t,this.unsigned),d=l.mul(e);l.isZero()&&(l=Wn),i=i.add(l),o=o.sub(d)}return i};Z.div=Z.divide;Z.modulo=function(e){if(Pt(e)||(e=mr(e)),or){var n=(this.unsigned?or.rem_u:or.rem_s)(this.low,this.high,e.low,e.high);return je(n,or.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};Z.mod=Z.modulo;Z.rem=Z.modulo;Z.not=function(){return je(~this.low,~this.high,this.unsigned)};Z.countLeadingZeros=function(){return this.high?Math.clz32(this.high):Math.clz32(this.low)+32};Z.clz=Z.countLeadingZeros;Z.countTrailingZeros=function(){return this.low?gd(this.low):gd(this.high)+32};Z.ctz=Z.countTrailingZeros;Z.and=function(e){return Pt(e)||(e=mr(e)),je(this.low&e.low,this.high&e.high,this.unsigned)};Z.or=function(e){return Pt(e)||(e=mr(e)),je(this.low|e.low,this.high|e.high,this.unsigned)};Z.xor=function(e){return Pt(e)||(e=mr(e)),je(this.low^e.low,this.high^e.high,this.unsigned)};Z.shiftLeft=function(e){return Pt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?je(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):je(0,this.low<<e-32,this.unsigned)};Z.shl=Z.shiftLeft;Z.shiftRight=function(e){return Pt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?je(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):je(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};Z.shr=Z.shiftRight;Z.shiftRightUnsigned=function(e){return Pt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?je(this.low>>>e|this.high<<32-e,this.high>>>e,this.unsigned):e===32?je(this.high,0,this.unsigned):je(this.high>>>e-32,0,this.unsigned)};Z.shru=Z.shiftRightUnsigned;Z.shr_u=Z.shiftRightUnsigned;Z.rotateLeft=function(e){var n;return Pt(e)&&(e=e.toInt()),(e&=63)===0?this:e===32?je(this.high,this.low,this.unsigned):e<32?(n=32-e,je(this.low<<e|this.high>>>n,this.high<<e|this.low>>>n,this.unsigned)):(e-=32,n=32-e,je(this.high<<e|this.low>>>n,this.low<<e|this.high>>>n,this.unsigned))};Z.rotl=Z.rotateLeft;Z.rotateRight=function(e){var n;return Pt(e)&&(e=e.toInt()),(e&=63)===0?this:e===32?je(this.high,this.low,this.unsigned):e<32?(n=32-e,je(this.high<<n|this.low>>>e,this.low<<n|this.high>>>e,this.unsigned)):(e-=32,n=32-e,je(this.low<<n|this.high>>>e,this.high<<n|this.low>>>e,this.unsigned))};Z.rotr=Z.rotateRight;Z.toSigned=function(){return this.unsigned?je(this.low,this.high,!1):this};Z.toUnsigned=function(){return this.unsigned?this:je(this.low,this.high,!0)};Z.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};Z.toBytesLE=function(){var e=this.high,n=this.low;return[n&255,n>>>8&255,n>>>16&255,n>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};Z.toBytesBE=function(){var e=this.high,n=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,n>>>24,n>>>16&255,n>>>8&255,n&255]};et.fromBytes=function(e,n,t){return t?et.fromBytesLE(e,n):et.fromBytesBE(e,n)};et.fromBytesLE=function(e,n){return new et(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,n)};et.fromBytesBE=function(e,n){return new et(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],n)};Wr=et});var B,Ui=R(()=>{B={};B.Offset;B.Table;B.SIZEOF_SHORT=2;B.SIZEOF_INT=4;B.FILE_IDENTIFIER_LENGTH=4;B.SIZE_PREFIX_LENGTH=4;B.Encoding={UTF8_BYTES:1,UTF16_STRING:2};B.int32=new Int32Array(2);B.float32=new Float32Array(B.int32.buffer);B.float64=new Float64Array(B.int32.buffer);B.isLittleEndian=new Uint16Array(new Uint8Array([1,0]).buffer)[0]===1;B.Long=function(r,e){this.low=r|0,this.high=e|0};B.Long.create=function(r,e){return r==0&&e==0?B.Long.ZERO:new B.Long(r,e)};B.Long.prototype.toFloat64=function(){return(this.low>>>0)+this.high*4294967296};B.Long.prototype.equals=function(r){return this.low==r.low&&this.high==r.high};B.Long.ZERO=new B.Long(0,0);B.Builder=function(r){if(r)var e=r;else var e=1024;this.bb=B.ByteBuffer.allocate(e),this.space=e,this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1};B.Builder.prototype.clear=function(){this.bb.clear(),this.space=this.bb.capacity(),this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1};B.Builder.prototype.forceDefaults=function(r){this.force_defaults=r};B.Builder.prototype.dataBuffer=function(){return this.bb};B.Builder.prototype.asUint8Array=function(){return this.bb.bytes().subarray(this.bb.position(),this.bb.position()+this.offset())};B.Builder.prototype.prep=function(r,e){r>this.minalign&&(this.minalign=r);for(var n=~(this.bb.capacity()-this.space+e)+1&r-1;this.space<n+r+e;){var t=this.bb.capacity();this.bb=B.Builder.growByteBuffer(this.bb),this.space+=this.bb.capacity()-t}this.pad(n)};B.Builder.prototype.pad=function(r){for(var e=0;e<r;e++)this.bb.writeInt8(--this.space,0)};B.Builder.prototype.writeInt8=function(r){this.bb.writeInt8(this.space-=1,r)};B.Builder.prototype.writeInt16=function(r){this.bb.writeInt16(this.space-=2,r)};B.Builder.prototype.writeInt32=function(r){this.bb.writeInt32(this.space-=4,r)};B.Builder.prototype.writeInt64=function(r){this.bb.writeInt64(this.space-=8,r)};B.Builder.prototype.writeFloat32=function(r){this.bb.writeFloat32(this.space-=4,r)};B.Builder.prototype.writeFloat64=function(r){this.bb.writeFloat64(this.space-=8,r)};B.Builder.prototype.addInt8=function(r){this.prep(1,0),this.writeInt8(r)};B.Builder.prototype.addInt16=function(r){this.prep(2,0),this.writeInt16(r)};B.Builder.prototype.addInt32=function(r){this.prep(4,0),this.writeInt32(r)};B.Builder.prototype.addInt64=function(r){this.prep(8,0),this.writeInt64(r)};B.Builder.prototype.addFloat32=function(r){this.prep(4,0),this.writeFloat32(r)};B.Builder.prototype.addFloat64=function(r){this.prep(8,0),this.writeFloat64(r)};B.Builder.prototype.addFieldInt8=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt8(e),this.slot(r))};B.Builder.prototype.addFieldInt16=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt16(e),this.slot(r))};B.Builder.prototype.addFieldInt32=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt32(e),this.slot(r))};B.Builder.prototype.addFieldInt64=function(r,e,n){(this.force_defaults||!e.equals(n))&&(this.addInt64(e),this.slot(r))};B.Builder.prototype.addFieldFloat32=function(r,e,n){(this.force_defaults||e!=n)&&(this.addFloat32(e),this.slot(r))};B.Builder.prototype.addFieldFloat64=function(r,e,n){(this.force_defaults||e!=n)&&(this.addFloat64(e),this.slot(r))};B.Builder.prototype.addFieldOffset=function(r,e,n){(this.force_defaults||e!=n)&&(this.addOffset(e),this.slot(r))};B.Builder.prototype.addFieldStruct=function(r,e,n){e!=n&&(this.nested(e),this.slot(r))};B.Builder.prototype.nested=function(r){if(r!=this.offset())throw new Error("FlatBuffers: struct must be serialized inline.")};B.Builder.prototype.notNested=function(){if(this.isNested)throw new Error("FlatBuffers: object serialization must not be nested.")};B.Builder.prototype.slot=function(r){this.vtable[r]=this.offset()};B.Builder.prototype.offset=function(){return this.bb.capacity()-this.space};B.Builder.growByteBuffer=function(r){var e=r.capacity();if(e&3221225472)throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");var n=e<<1,t=B.ByteBuffer.allocate(n);return t.setPosition(n-e),t.bytes().set(r.bytes(),n-e),t};B.Builder.prototype.addOffset=function(r){this.prep(B.SIZEOF_INT,0),this.writeInt32(this.offset()-r+B.SIZEOF_INT)};B.Builder.prototype.startObject=function(r){this.notNested(),this.vtable==null&&(this.vtable=[]),this.vtable_in_use=r;for(var e=0;e<r;e++)this.vtable[e]=0;this.isNested=!0,this.object_start=this.offset()};B.Builder.prototype.endObject=function(){if(this.vtable==null||!this.isNested)throw new Error("FlatBuffers: endObject called without startObject");this.addInt32(0);for(var r=this.offset(),e=this.vtable_in_use-1;e>=0&&this.vtable[e]==0;e--);for(var n=e+1;e>=0;e--)this.addInt16(this.vtable[e]!=0?r-this.vtable[e]:0);var t=2;this.addInt16(r-this.object_start);var o=(n+t)*B.SIZEOF_SHORT;this.addInt16(o);var i=0,s=this.space;e:for(e=0;e<this.vtables.length;e++){var a=this.bb.capacity()-this.vtables[e];if(o==this.bb.readInt16(a)){for(var u=B.SIZEOF_SHORT;u<o;u+=B.SIZEOF_SHORT)if(this.bb.readInt16(s+u)!=this.bb.readInt16(a+u))continue e;i=this.vtables[e];break}}return i?(this.space=this.bb.capacity()-r,this.bb.writeInt32(this.space,i-r)):(this.vtables.push(this.offset()),this.bb.writeInt32(this.bb.capacity()-r,this.offset()-r)),this.isNested=!1,r};B.Builder.prototype.finish=function(r,e,n){var t=n?B.SIZE_PREFIX_LENGTH:0;if(e){var o=e;if(this.prep(this.minalign,B.SIZEOF_INT+B.FILE_IDENTIFIER_LENGTH+t),o.length!=B.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+B.FILE_IDENTIFIER_LENGTH);for(var i=B.FILE_IDENTIFIER_LENGTH-1;i>=0;i--)this.writeInt8(o.charCodeAt(i))}this.prep(this.minalign,B.SIZEOF_INT+t),this.addOffset(r),t&&this.addInt32(this.bb.capacity()-this.space),this.bb.setPosition(this.space)};B.Builder.prototype.finishSizePrefixed=function(r,e){this.finish(r,e,!0)};B.Builder.prototype.requiredField=function(r,e){var n=this.bb.capacity()-r,t=n-this.bb.readInt32(n),o=this.bb.readInt16(t+e)!=0;if(!o)throw new Error("FlatBuffers: field "+e+" must be set")};B.Builder.prototype.startVector=function(r,e,n){this.notNested(),this.vector_num_elems=e,this.prep(B.SIZEOF_INT,r*e),this.prep(n,r*e)};B.Builder.prototype.endVector=function(){return this.writeInt32(this.vector_num_elems),this.offset()};B.Builder.prototype.createString=function(r){if(r instanceof Uint8Array)var e=r;else for(var e=[],n=0;n<r.length;){var t,o=r.charCodeAt(n++);if(o<55296||o>=56320)t=o;else{var i=r.charCodeAt(n++);t=(o<<10)+i+(65536-56623104-56320)}t<128?e.push(t):(t<2048?e.push(t>>6&31|192):(t<65536?e.push(t>>12&15|224):e.push(t>>18&7|240,t>>12&63|128),e.push(t>>6&63|128)),e.push(t&63|128))}this.addInt8(0),this.startVector(1,e.length,1),this.bb.setPosition(this.space-=e.length);for(var n=0,s=this.space,a=this.bb.bytes();n<e.length;n++)a[s++]=e[n];return this.endVector()};B.Builder.prototype.createLong=function(r,e){return B.Long.create(r,e)};B.ByteBuffer=function(r){this.bytes_=r,this.position_=0};B.ByteBuffer.allocate=function(r){return new B.ByteBuffer(new Uint8Array(r))};B.ByteBuffer.prototype.clear=function(){this.position_=0};B.ByteBuffer.prototype.bytes=function(){return this.bytes_};B.ByteBuffer.prototype.position=function(){return this.position_};B.ByteBuffer.prototype.setPosition=function(r){this.position_=r};B.ByteBuffer.prototype.capacity=function(){return this.bytes_.length};B.ByteBuffer.prototype.readInt8=function(r){return this.readUint8(r)<<24>>24};B.ByteBuffer.prototype.readUint8=function(r){return this.bytes_[r]};B.ByteBuffer.prototype.readInt16=function(r){return this.readUint16(r)<<16>>16};B.ByteBuffer.prototype.readUint16=function(r){return this.bytes_[r]|this.bytes_[r+1]<<8};B.ByteBuffer.prototype.readInt32=function(r){return this.bytes_[r]|this.bytes_[r+1]<<8|this.bytes_[r+2]<<16|this.bytes_[r+3]<<24};B.ByteBuffer.prototype.readUint32=function(r){return this.readInt32(r)>>>0};B.ByteBuffer.prototype.readInt64=function(r){return new B.Long(this.readInt32(r),this.readInt32(r+4))};B.ByteBuffer.prototype.readUint64=function(r){return new B.Long(this.readUint32(r),this.readUint32(r+4))};B.ByteBuffer.prototype.readFloat32=function(r){return B.int32[0]=this.readInt32(r),B.float32[0]};B.ByteBuffer.prototype.readFloat64=function(r){return B.int32[B.isLittleEndian?0:1]=this.readInt32(r),B.int32[B.isLittleEndian?1:0]=this.readInt32(r+4),B.float64[0]};B.ByteBuffer.prototype.writeInt8=function(r,e){this.bytes_[r]=e};B.ByteBuffer.prototype.writeUint8=function(r,e){this.bytes_[r]=e};B.ByteBuffer.prototype.writeInt16=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8};B.ByteBuffer.prototype.writeUint16=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8};B.ByteBuffer.prototype.writeInt32=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8,this.bytes_[r+2]=e>>16,this.bytes_[r+3]=e>>24};B.ByteBuffer.prototype.writeUint32=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8,this.bytes_[r+2]=e>>16,this.bytes_[r+3]=e>>24};B.ByteBuffer.prototype.writeInt64=function(r,e){this.writeInt32(r,e.low),this.writeInt32(r+4,e.high)};B.ByteBuffer.prototype.writeUint64=function(r,e){this.writeUint32(r,e.low),this.writeUint32(r+4,e.high)};B.ByteBuffer.prototype.writeFloat32=function(r,e){B.float32[0]=e,this.writeInt32(r,B.int32[0])};B.ByteBuffer.prototype.writeFloat64=function(r,e){B.float64[0]=e,this.writeInt32(r,B.int32[B.isLittleEndian?0:1]),this.writeInt32(r+4,B.int32[B.isLittleEndian?1:0])};B.ByteBuffer.prototype.getBufferIdentifier=function(){if(this.bytes_.length<this.position_+B.SIZEOF_INT+B.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");for(var r="",e=0;e<B.FILE_IDENTIFIER_LENGTH;e++)r+=String.fromCharCode(this.readInt8(this.position_+B.SIZEOF_INT+e));return r};B.ByteBuffer.prototype.__offset=function(r,e){var n=r-this.readInt32(r);return e<this.readInt16(n)?this.readInt16(n+e):0};B.ByteBuffer.prototype.__union=function(r,e){return r.bb_pos=e+this.readInt32(e),r.bb=this,r};B.ByteBuffer.prototype.__string=function(r,e){r+=this.readInt32(r);var n=this.readInt32(r),t="",o=0;if(r+=B.SIZEOF_INT,e===B.Encoding.UTF8_BYTES)return this.bytes_.subarray(r,r+n);for(;o<n;){var i,s=this.readUint8(r+o++);if(s<192)i=s;else{var a=this.readUint8(r+o++);if(s<224)i=(s&31)<<6|a&63;else{var u=this.readUint8(r+o++);if(s<240)i=(s&15)<<12|(a&63)<<6|u&63;else{var l=this.readUint8(r+o++);i=(s&7)<<18|(a&63)<<12|(u&63)<<6|l&63}}}i<65536?t+=String.fromCharCode(i):(i-=65536,t+=String.fromCharCode((i>>10)+55296,(i&1024-1)+56320))}return t};B.ByteBuffer.prototype.__indirect=function(r){return r+this.readInt32(r)};B.ByteBuffer.prototype.__vector=function(r){return r+this.readInt32(r)+B.SIZEOF_INT};B.ByteBuffer.prototype.__vector_len=function(r){return this.readInt32(r+this.readInt32(r))};B.ByteBuffer.prototype.__has_identifier=function(r){if(r.length!=B.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+B.FILE_IDENTIFIER_LENGTH);for(var e=0;e<B.FILE_IDENTIFIER_LENGTH;e++)if(r.charCodeAt(e)!=this.readInt8(this.position_+B.SIZEOF_INT+e))return!1;return!0};B.ByteBuffer.prototype.createLong=function(r,e){return B.Long.create(r,e)}});var ce,Po=R(()=>{"use strict";Ui();(e=>{let r;(t=>{let n;(i=>{let o;(O=>(O[O.UNDEFINED=0]="UNDEFINED",O[O.FLOAT=1]="FLOAT",O[O.INT=2]="INT",O[O.STRING=3]="STRING",O[O.TENSOR=4]="TENSOR",O[O.GRAPH=5]="GRAPH",O[O.FLOATS=6]="FLOATS",O[O.INTS=7]="INTS",O[O.STRINGS=8]="STRINGS",O[O.TENSORS=9]="TENSORS",O[O.GRAPHS=10]="GRAPHS",O[O.SPARSE_TENSOR=11]="SPARSE_TENSOR",O[O.SPARSE_TENSORS=12]="SPARSE_TENSORS"))(o=i.AttributeType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{let o;(l=>(l[l.UNKNOWN=0]="UNKNOWN",l[l.VALUE=1]="VALUE",l[l.PARAM=2]="PARAM"))(o=i.DimensionValueType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{let o;(U=>(U[U.UNDEFINED=0]="UNDEFINED",U[U.FLOAT=1]="FLOAT",U[U.UINT8=2]="UINT8",U[U.INT8=3]="INT8",U[U.UINT16=4]="UINT16",U[U.INT16=5]="INT16",U[U.INT32=6]="INT32",U[U.INT64=7]="INT64",U[U.STRING=8]="STRING",U[U.BOOL=9]="BOOL",U[U.FLOAT16=10]="FLOAT16",U[U.DOUBLE=11]="DOUBLE",U[U.UINT32=12]="UINT32",U[U.UINT64=13]="UINT64",U[U.COMPLEX64=14]="COMPLEX64",U[U.COMPLEX128=15]="COMPLEX128",U[U.BFLOAT16=16]="BFLOAT16",U[U.FLOAT8E4M3FN=17]="FLOAT8E4M3FN",U[U.FLOAT8E4M3FNUZ=18]="FLOAT8E4M3FNUZ",U[U.FLOAT8E5M2=19]="FLOAT8E5M2",U[U.FLOAT8E5M2FNUZ=20]="FLOAT8E5M2FNUZ"))(o=i.TensorDataType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{let o;(u=>(u[u.Primitive=0]="Primitive",u[u.Fused=1]="Fused"))(o=i.NodeType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{let o;(d=>(d[d.NONE=0]="NONE",d[d.tensor_type=1]="tensor_type",d[d.sequence_type=2]="sequence_type",d[d.map_type=3]="map_type"))(o=i.TypeInfoValue||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsShape(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsShape(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}dim(a,u){let l=this.bb.__offset(this.bb_pos,4);return l?(u||new e.experimental.fbs.Dimension).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}dimLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}static startShape(a){a.startObject(1)}static addDim(a,u){a.addFieldOffset(0,u,0)}static createDimVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startDimVector(a,u){a.startVector(4,u,4)}static endShape(a){return a.endObject()}static createShape(a,u){return o.startShape(a),o.addDim(a,u),o.endShape(a)}}i.Shape=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsDimension(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsDimension(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}value(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.DimensionValue).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}denotation(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}static startDimension(a){a.startObject(2)}static addValue(a,u){a.addFieldOffset(0,u,0)}static addDenotation(a,u){a.addFieldOffset(1,u,0)}static endDimension(a){return a.endObject()}static createDimension(a,u,l){return o.startDimension(a),o.addValue(a,u),o.addDenotation(a,l),o.endDimension(a)}}i.Dimension=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsDimensionValue(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsDimensionValue(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}dimType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt8(this.bb_pos+a):0}dimValue(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}dimParam(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__string(this.bb_pos+u,a):null}static startDimensionValue(a){a.startObject(3)}static addDimType(a,u){a.addFieldInt8(0,u,0)}static addDimValue(a,u){a.addFieldInt64(1,u,a.createLong(0,0))}static addDimParam(a,u){a.addFieldOffset(2,u,0)}static endDimensionValue(a){return a.endObject()}static createDimensionValue(a,u,l,d){return o.startDimensionValue(a),o.addDimType(a,u),o.addDimValue(a,l),o.addDimParam(a,d),o.endDimensionValue(a)}}i.DimensionValue=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsTensorTypeAndShape(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTensorTypeAndShape(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}elemType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt32(this.bb_pos+a):0}shape(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.Shape).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startTensorTypeAndShape(a){a.startObject(2)}static addElemType(a,u){a.addFieldInt32(0,u,0)}static addShape(a,u){a.addFieldOffset(1,u,0)}static endTensorTypeAndShape(a){return a.endObject()}static createTensorTypeAndShape(a,u,l){return o.startTensorTypeAndShape(a),o.addElemType(a,u),o.addShape(a,l),o.endTensorTypeAndShape(a)}}i.TensorTypeAndShape=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsMapType(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsMapType(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}keyType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt32(this.bb_pos+a):0}valueType(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startMapType(a){a.startObject(2)}static addKeyType(a,u){a.addFieldInt32(0,u,0)}static addValueType(a,u){a.addFieldOffset(1,u,0)}static endMapType(a){return a.endObject()}static createMapType(a,u,l){return o.startMapType(a),o.addKeyType(a,u),o.addValueType(a,l),o.endMapType(a)}}i.MapType=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSequenceType(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSequenceType(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}elemType(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startSequenceType(a){a.startObject(1)}static addElemType(a,u){a.addFieldOffset(0,u,0)}static endSequenceType(a){return a.endObject()}static createSequenceType(a,u){return o.startSequenceType(a),o.addElemType(a,u),o.endSequenceType(a)}}i.SequenceType=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}nodeIndex(){return this.bb.readUint32(this.bb_pos)}srcArgIndex(){return this.bb.readInt32(this.bb_pos+4)}dstArgIndex(){return this.bb.readInt32(this.bb_pos+8)}static createEdgeEnd(a,u,l,d){return a.prep(4,12),a.writeInt32(d),a.writeInt32(l),a.writeInt32(u),a.offset()}}i.EdgeEnd=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsNodeEdge(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsNodeEdge(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}nodeIndex(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readUint32(this.bb_pos+a):0}inputEdges(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+l)+a*12,this.bb):null}inputEdgesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}outputEdges(a,u){let l=this.bb.__offset(this.bb_pos,8);return l?(u||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+l)+a*12,this.bb):null}outputEdgesLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}static startNodeEdge(a){a.startObject(3)}static addNodeIndex(a,u){a.addFieldInt32(0,u,0)}static addInputEdges(a,u){a.addFieldOffset(1,u,0)}static startInputEdgesVector(a,u){a.startVector(12,u,4)}static addOutputEdges(a,u){a.addFieldOffset(2,u,0)}static startOutputEdgesVector(a,u){a.startVector(12,u,4)}static endNodeEdge(a){return a.endObject()}static createNodeEdge(a,u,l,d){return o.startNodeEdge(a),o.addNodeIndex(a,u),o.addInputEdges(a,l),o.addOutputEdges(a,d),o.endNodeEdge(a)}}i.NodeEdge=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsNode(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsNode(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}domain(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__string(this.bb_pos+u,a):null}sinceVersion(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readInt32(this.bb_pos+a):0}index(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.readUint32(this.bb_pos+a):0}opType(a){let u=this.bb.__offset(this.bb_pos,14);return u?this.bb.__string(this.bb_pos+u,a):null}type(){let a=this.bb.__offset(this.bb_pos,16);return a?this.bb.readInt32(this.bb_pos+a):0}executionProviderType(a){let u=this.bb.__offset(this.bb_pos,18);return u?this.bb.__string(this.bb_pos+u,a):null}inputs(a,u){let l=this.bb.__offset(this.bb_pos,20);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}inputsLength(){let a=this.bb.__offset(this.bb_pos,20);return a?this.bb.__vector_len(this.bb_pos+a):0}outputs(a,u){let l=this.bb.__offset(this.bb_pos,22);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}outputsLength(){let a=this.bb.__offset(this.bb_pos,22);return a?this.bb.__vector_len(this.bb_pos+a):0}attributes(a,u){let l=this.bb.__offset(this.bb_pos,24);return l?(u||new e.experimental.fbs.Attribute).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}attributesLength(){let a=this.bb.__offset(this.bb_pos,24);return a?this.bb.__vector_len(this.bb_pos+a):0}inputArgCounts(a){let u=this.bb.__offset(this.bb_pos,26);return u?this.bb.readInt32(this.bb.__vector(this.bb_pos+u)+a*4):0}inputArgCountsLength(){let a=this.bb.__offset(this.bb_pos,26);return a?this.bb.__vector_len(this.bb_pos+a):0}inputArgCountsArray(){let a=this.bb.__offset(this.bb_pos,26);return a?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}implicitInputs(a,u){let l=this.bb.__offset(this.bb_pos,28);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}implicitInputsLength(){let a=this.bb.__offset(this.bb_pos,28);return a?this.bb.__vector_len(this.bb_pos+a):0}static startNode(a){a.startObject(13)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addDomain(a,u){a.addFieldOffset(2,u,0)}static addSinceVersion(a,u){a.addFieldInt32(3,u,0)}static addIndex(a,u){a.addFieldInt32(4,u,0)}static addOpType(a,u){a.addFieldOffset(5,u,0)}static addType(a,u){a.addFieldInt32(6,u,0)}static addExecutionProviderType(a,u){a.addFieldOffset(7,u,0)}static addInputs(a,u){a.addFieldOffset(8,u,0)}static createInputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startInputsVector(a,u){a.startVector(4,u,4)}static addOutputs(a,u){a.addFieldOffset(9,u,0)}static createOutputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startOutputsVector(a,u){a.startVector(4,u,4)}static addAttributes(a,u){a.addFieldOffset(10,u,0)}static createAttributesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startAttributesVector(a,u){a.startVector(4,u,4)}static addInputArgCounts(a,u){a.addFieldOffset(11,u,0)}static createInputArgCountsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addInt32(u[l]);return a.endVector()}static startInputArgCountsVector(a,u){a.startVector(4,u,4)}static addImplicitInputs(a,u){a.addFieldOffset(12,u,0)}static createImplicitInputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startImplicitInputsVector(a,u){a.startVector(4,u,4)}static endNode(a){return a.endObject()}static createNode(a,u,l,d,h,m,b,y,x,A,I,$,O,E){return o.startNode(a),o.addName(a,u),o.addDocString(a,l),o.addDomain(a,d),o.addSinceVersion(a,h),o.addIndex(a,m),o.addOpType(a,b),o.addType(a,y),o.addExecutionProviderType(a,x),o.addInputs(a,A),o.addOutputs(a,I),o.addAttributes(a,$),o.addInputArgCounts(a,O),o.addImplicitInputs(a,E),o.endNode(a)}}i.Node=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsValueInfo(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsValueInfo(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}type(a){let u=this.bb.__offset(this.bb_pos,8);return u?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startValueInfo(a){a.startObject(3)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addType(a,u){a.addFieldOffset(2,u,0)}static endValueInfo(a){return a.endObject()}static createValueInfo(a,u,l,d){return o.startValueInfo(a),o.addName(a,u),o.addDocString(a,l),o.addType(a,d),o.endValueInfo(a)}}i.ValueInfo=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsTypeInfo(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTypeInfo(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}denotation(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}valueType(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readUint8(this.bb_pos+a):0}value(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__union(a,this.bb_pos+u):null}static startTypeInfo(a){a.startObject(3)}static addDenotation(a,u){a.addFieldOffset(0,u,0)}static addValueType(a,u){a.addFieldInt8(1,u,0)}static addValue(a,u){a.addFieldOffset(2,u,0)}static endTypeInfo(a){return a.endObject()}static createTypeInfo(a,u,l,d){return o.startTypeInfo(a),o.addDenotation(a,u),o.addValueType(a,l),o.addValue(a,d),o.endTypeInfo(a)}}i.TypeInfo=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsOperatorSetId(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsOperatorSetId(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}domain(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}version(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}static startOperatorSetId(a){a.startObject(2)}static addDomain(a,u){a.addFieldOffset(0,u,0)}static addVersion(a,u){a.addFieldInt64(1,u,a.createLong(0,0))}static endOperatorSetId(a){return a.endObject()}static createOperatorSetId(a,u,l){return o.startOperatorSetId(a),o.addDomain(a,u),o.addVersion(a,l),o.endOperatorSetId(a)}}i.OperatorSetId=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsTensor(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTensor(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}dims(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.readInt64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}dimsLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}dataType(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readInt32(this.bb_pos+a):0}rawData(a){let u=this.bb.__offset(this.bb_pos,12);return u?this.bb.readUint8(this.bb.__vector(this.bb_pos+u)+a):0}rawDataLength(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.__vector_len(this.bb_pos+a):0}rawDataArray(){let a=this.bb.__offset(this.bb_pos,12);return a?new Uint8Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}stringData(a,u){let l=this.bb.__offset(this.bb_pos,14);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}stringDataLength(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.__vector_len(this.bb_pos+a):0}static startTensor(a){a.startObject(6)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addDims(a,u){a.addFieldOffset(2,u,0)}static createDimsVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startDimsVector(a,u){a.startVector(8,u,8)}static addDataType(a,u){a.addFieldInt32(3,u,0)}static addRawData(a,u){a.addFieldOffset(4,u,0)}static createRawDataVector(a,u){a.startVector(1,u.length,1);for(let l=u.length-1;l>=0;l--)a.addInt8(u[l]);return a.endVector()}static startRawDataVector(a,u){a.startVector(1,u,1)}static addStringData(a,u){a.addFieldOffset(5,u,0)}static createStringDataVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startStringDataVector(a,u){a.startVector(4,u,4)}static endTensor(a){return a.endObject()}static createTensor(a,u,l,d,h,m,b){return o.startTensor(a),o.addName(a,u),o.addDocString(a,l),o.addDims(a,d),o.addDataType(a,h),o.addRawData(a,m),o.addStringData(a,b),o.endTensor(a)}}i.Tensor=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSparseTensor(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSparseTensor(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}values(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}indices(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}dims(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.readInt64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}dimsLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}static startSparseTensor(a){a.startObject(3)}static addValues(a,u){a.addFieldOffset(0,u,0)}static addIndices(a,u){a.addFieldOffset(1,u,0)}static addDims(a,u){a.addFieldOffset(2,u,0)}static createDimsVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startDimsVector(a,u){a.startVector(8,u,8)}static endSparseTensor(a){return a.endObject()}static createSparseTensor(a,u,l,d){return o.startSparseTensor(a),o.addValues(a,u),o.addIndices(a,l),o.addDims(a,d),o.endSparseTensor(a)}}i.SparseTensor=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsAttribute(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsAttribute(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}type(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.readInt32(this.bb_pos+a):0}f(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readFloat32(this.bb_pos+a):0}i(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}s(a){let u=this.bb.__offset(this.bb_pos,14);return u?this.bb.__string(this.bb_pos+u,a):null}t(a){let u=this.bb.__offset(this.bb_pos,16);return u?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}g(a){let u=this.bb.__offset(this.bb_pos,18);return u?(a||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}floats(a){let u=this.bb.__offset(this.bb_pos,20);return u?this.bb.readFloat32(this.bb.__vector(this.bb_pos+u)+a*4):0}floatsLength(){let a=this.bb.__offset(this.bb_pos,20);return a?this.bb.__vector_len(this.bb_pos+a):0}floatsArray(){let a=this.bb.__offset(this.bb_pos,20);return a?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}ints(a){let u=this.bb.__offset(this.bb_pos,22);return u?this.bb.readInt64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}intsLength(){let a=this.bb.__offset(this.bb_pos,22);return a?this.bb.__vector_len(this.bb_pos+a):0}strings(a,u){let l=this.bb.__offset(this.bb_pos,24);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}stringsLength(){let a=this.bb.__offset(this.bb_pos,24);return a?this.bb.__vector_len(this.bb_pos+a):0}tensors(a,u){let l=this.bb.__offset(this.bb_pos,26);return l?(u||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}tensorsLength(){let a=this.bb.__offset(this.bb_pos,26);return a?this.bb.__vector_len(this.bb_pos+a):0}graphs(a,u){let l=this.bb.__offset(this.bb_pos,28);return l?(u||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}graphsLength(){let a=this.bb.__offset(this.bb_pos,28);return a?this.bb.__vector_len(this.bb_pos+a):0}static startAttribute(a){a.startObject(13)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addType(a,u){a.addFieldInt32(2,u,0)}static addF(a,u){a.addFieldFloat32(3,u,0)}static addI(a,u){a.addFieldInt64(4,u,a.createLong(0,0))}static addS(a,u){a.addFieldOffset(5,u,0)}static addT(a,u){a.addFieldOffset(6,u,0)}static addG(a,u){a.addFieldOffset(7,u,0)}static addFloats(a,u){a.addFieldOffset(8,u,0)}static createFloatsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addFloat32(u[l]);return a.endVector()}static startFloatsVector(a,u){a.startVector(4,u,4)}static addInts(a,u){a.addFieldOffset(9,u,0)}static createIntsVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startIntsVector(a,u){a.startVector(8,u,8)}static addStrings(a,u){a.addFieldOffset(10,u,0)}static createStringsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startStringsVector(a,u){a.startVector(4,u,4)}static addTensors(a,u){a.addFieldOffset(11,u,0)}static createTensorsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startTensorsVector(a,u){a.startVector(4,u,4)}static addGraphs(a,u){a.addFieldOffset(12,u,0)}static createGraphsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startGraphsVector(a,u){a.startVector(4,u,4)}static endAttribute(a){return a.endObject()}static createAttribute(a,u,l,d,h,m,b,y,x,A,I,$,O,E){return o.startAttribute(a),o.addName(a,u),o.addDocString(a,l),o.addType(a,d),o.addF(a,h),o.addI(a,m),o.addS(a,b),o.addT(a,y),o.addG(a,x),o.addFloats(a,A),o.addInts(a,I),o.addStrings(a,$),o.addTensors(a,O),o.addGraphs(a,E),o.endAttribute(a)}}i.Attribute=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsGraph(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsGraph(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}initializers(a,u){let l=this.bb.__offset(this.bb_pos,4);return l?(u||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}initializersLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}nodeArgs(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.ValueInfo).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodeArgsLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}nodes(a,u){let l=this.bb.__offset(this.bb_pos,8);return l?(u||new e.experimental.fbs.Node).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodesLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}maxNodeIndex(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readUint32(this.bb_pos+a):0}nodeEdges(a,u){let l=this.bb.__offset(this.bb_pos,12);return l?(u||new e.experimental.fbs.NodeEdge).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodeEdgesLength(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.__vector_len(this.bb_pos+a):0}inputs(a,u){let l=this.bb.__offset(this.bb_pos,14);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}inputsLength(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.__vector_len(this.bb_pos+a):0}outputs(a,u){let l=this.bb.__offset(this.bb_pos,16);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}outputsLength(){let a=this.bb.__offset(this.bb_pos,16);return a?this.bb.__vector_len(this.bb_pos+a):0}sparseInitializers(a,u){let l=this.bb.__offset(this.bb_pos,18);return l?(u||new e.experimental.fbs.SparseTensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}sparseInitializersLength(){let a=this.bb.__offset(this.bb_pos,18);return a?this.bb.__vector_len(this.bb_pos+a):0}static startGraph(a){a.startObject(8)}static addInitializers(a,u){a.addFieldOffset(0,u,0)}static createInitializersVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startInitializersVector(a,u){a.startVector(4,u,4)}static addNodeArgs(a,u){a.addFieldOffset(1,u,0)}static createNodeArgsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startNodeArgsVector(a,u){a.startVector(4,u,4)}static addNodes(a,u){a.addFieldOffset(2,u,0)}static createNodesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startNodesVector(a,u){a.startVector(4,u,4)}static addMaxNodeIndex(a,u){a.addFieldInt32(3,u,0)}static addNodeEdges(a,u){a.addFieldOffset(4,u,0)}static createNodeEdgesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startNodeEdgesVector(a,u){a.startVector(4,u,4)}static addInputs(a,u){a.addFieldOffset(5,u,0)}static createInputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startInputsVector(a,u){a.startVector(4,u,4)}static addOutputs(a,u){a.addFieldOffset(6,u,0)}static createOutputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startOutputsVector(a,u){a.startVector(4,u,4)}static addSparseInitializers(a,u){a.addFieldOffset(7,u,0)}static createSparseInitializersVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startSparseInitializersVector(a,u){a.startVector(4,u,4)}static endGraph(a){return a.endObject()}static createGraph(a,u,l,d,h,m,b,y,x){return o.startGraph(a),o.addInitializers(a,u),o.addNodeArgs(a,l),o.addNodes(a,d),o.addMaxNodeIndex(a,h),o.addNodeEdges(a,m),o.addInputs(a,b),o.addOutputs(a,y),o.addSparseInitializers(a,x),o.endGraph(a)}}i.Graph=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsModel(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsModel(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}irVersion(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}opsetImport(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.OperatorSetId).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}opsetImportLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}producerName(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__string(this.bb_pos+u,a):null}producerVersion(a){let u=this.bb.__offset(this.bb_pos,10);return u?this.bb.__string(this.bb_pos+u,a):null}domain(a){let u=this.bb.__offset(this.bb_pos,12);return u?this.bb.__string(this.bb_pos+u,a):null}modelVersion(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}docString(a){let u=this.bb.__offset(this.bb_pos,16);return u?this.bb.__string(this.bb_pos+u,a):null}graph(a){let u=this.bb.__offset(this.bb_pos,18);return u?(a||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}graphDocString(a){let u=this.bb.__offset(this.bb_pos,20);return u?this.bb.__string(this.bb_pos+u,a):null}static startModel(a){a.startObject(9)}static addIrVersion(a,u){a.addFieldInt64(0,u,a.createLong(0,0))}static addOpsetImport(a,u){a.addFieldOffset(1,u,0)}static createOpsetImportVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startOpsetImportVector(a,u){a.startVector(4,u,4)}static addProducerName(a,u){a.addFieldOffset(2,u,0)}static addProducerVersion(a,u){a.addFieldOffset(3,u,0)}static addDomain(a,u){a.addFieldOffset(4,u,0)}static addModelVersion(a,u){a.addFieldInt64(5,u,a.createLong(0,0))}static addDocString(a,u){a.addFieldOffset(6,u,0)}static addGraph(a,u){a.addFieldOffset(7,u,0)}static addGraphDocString(a,u){a.addFieldOffset(8,u,0)}static endModel(a){return a.endObject()}static createModel(a,u,l,d,h,m,b,y,x,A){return o.startModel(a),o.addIrVersion(a,u),o.addOpsetImport(a,l),o.addProducerName(a,d),o.addProducerVersion(a,h),o.addDomain(a,m),o.addModelVersion(a,b),o.addDocString(a,y),o.addGraph(a,x),o.addGraphDocString(a,A),o.endModel(a)}}i.Model=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsKernelCreateInfos(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsKernelCreateInfos(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}nodeIndices(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.readUint32(this.bb.__vector(this.bb_pos+u)+a*4):0}nodeIndicesLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}nodeIndicesArray(){let a=this.bb.__offset(this.bb_pos,4);return a?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}kernelDefHashes(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.readUint64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}kernelDefHashesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}static startKernelCreateInfos(a){a.startObject(2)}static addNodeIndices(a,u){a.addFieldOffset(0,u,0)}static createNodeIndicesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addInt32(u[l]);return a.endVector()}static startNodeIndicesVector(a,u){a.startVector(4,u,4)}static addKernelDefHashes(a,u){a.addFieldOffset(1,u,0)}static createKernelDefHashesVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startKernelDefHashesVector(a,u){a.startVector(8,u,8)}static endKernelCreateInfos(a){return a.endObject()}static createKernelCreateInfos(a,u,l){return o.startKernelCreateInfos(a),o.addNodeIndices(a,u),o.addKernelDefHashes(a,l),o.endKernelCreateInfos(a)}}i.KernelCreateInfos=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSubGraphSessionState(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSubGraphSessionState(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}graphId(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}sessionState(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startSubGraphSessionState(a){a.startObject(2)}static addGraphId(a,u){a.addFieldOffset(0,u,0)}static addSessionState(a,u){a.addFieldOffset(1,u,0)}static endSubGraphSessionState(a){let u=a.endObject();return a.requiredField(u,4),u}static createSubGraphSessionState(a,u,l){return o.startSubGraphSessionState(a),o.addGraphId(a,u),o.addSessionState(a,l),o.endSubGraphSessionState(a)}}i.SubGraphSessionState=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSessionState(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSessionState(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}kernels(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.KernelCreateInfos).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}subGraphSessionStates(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.SubGraphSessionState).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}subGraphSessionStatesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}static startSessionState(a){a.startObject(2)}static addKernels(a,u){a.addFieldOffset(0,u,0)}static addSubGraphSessionStates(a,u){a.addFieldOffset(1,u,0)}static createSubGraphSessionStatesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startSubGraphSessionStatesVector(a,u){a.startVector(4,u,4)}static endSessionState(a){return a.endObject()}static createSessionState(a,u,l){return o.startSessionState(a),o.addKernels(a,u),o.addSubGraphSessionStates(a,l),o.endSessionState(a)}}i.SessionState=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsInferenceSession(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsInferenceSession(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static bufferHasIdentifier(a){return a.__has_identifier("ORTM")}ortVersion(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}model(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.Model).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}sessionState(a){let u=this.bb.__offset(this.bb_pos,8);return u?(a||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startInferenceSession(a){a.startObject(3)}static addOrtVersion(a,u){a.addFieldOffset(0,u,0)}static addModel(a,u){a.addFieldOffset(1,u,0)}static addSessionState(a,u){a.addFieldOffset(2,u,0)}static endInferenceSession(a){return a.endObject()}static finishInferenceSessionBuffer(a,u){a.finish(u,"ORTM")}static finishSizePrefixedInferenceSessionBuffer(a,u){a.finish(u,"ORTM",!0)}static createInferenceSession(a,u,l,d){return o.startInferenceSession(a),o.addOrtVersion(a,u),o.addModel(a,l),o.addSessionState(a,d),o.endInferenceSession(a)}}i.InferenceSession=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={})});var Ad=Qe((t_,Id)=>{"use strict";Id.exports=V0;function V0(r,e){for(var n=new Array(arguments.length-1),t=0,o=2,i=!0;o<arguments.length;)n[t++]=arguments[o++];return new Promise(function(a,u){n[t]=function(d){if(i)if(i=!1,d)u(d);else{for(var h=new Array(arguments.length-1),m=0;m<h.length;)h[m++]=arguments[m];a.apply(null,h)}};try{r.apply(e||null,n)}catch(l){i&&(i=!1,u(l))}})}});var Pd=Qe(Cd=>{"use strict";var Gi=Cd;Gi.length=function(e){var n=e.length;if(!n)return 0;for(var t=0;--n%4>1&&e.charAt(n)==="=";)++t;return Math.ceil(e.length*3)/4-t};var qn=new Array(64),Ed=new Array(123);for(gr=0;gr<64;)Ed[qn[gr]=gr<26?gr+65:gr<52?gr+71:gr<62?gr-4:gr-59|43]=gr++;var gr;Gi.encode=function(e,n,t){for(var o=null,i=[],s=0,a=0,u;n<t;){var l=e[n++];switch(a){case 0:i[s++]=qn[l>>2],u=(l&3)<<4,a=1;break;case 1:i[s++]=qn[u|l>>4],u=(l&15)<<2,a=2;break;case 2:i[s++]=qn[u|l>>6],i[s++]=qn[l&63],a=0;break}s>8191&&((o||(o=[])).push(String.fromCharCode.apply(String,i)),s=0)}return a&&(i[s++]=qn[u],i[s++]=61,a===1&&(i[s++]=61)),o?(s&&o.push(String.fromCharCode.apply(String,i.slice(0,s))),o.join("")):String.fromCharCode.apply(String,i.slice(0,s))};var Od="invalid encoding";Gi.decode=function(e,n,t){for(var o=t,i=0,s,a=0;a<e.length;){var u=e.charCodeAt(a++);if(u===61&&i>1)break;if((u=Ed[u])===void 0)throw Error(Od);switch(i){case 0:s=u,i=1;break;case 1:n[t++]=s<<2|(u&48)>>4,s=u,i=2;break;case 2:n[t++]=(s&15)<<4|(u&60)>>2,s=u,i=3;break;case 3:n[t++]=(s&3)<<6|u,i=0;break}}if(i===1)throw Error(Od);return t-o};Gi.test=function(e){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e)}});var Dd=Qe((n_,kd)=>{"use strict";kd.exports=Wi;function Wi(){this._listeners={}}Wi.prototype.on=function(e,n,t){return(this._listeners[e]||(this._listeners[e]=[])).push({fn:n,ctx:t||this}),this};Wi.prototype.off=function(e,n){if(e===void 0)this._listeners={};else if(n===void 0)this._listeners[e]=[];else for(var t=this._listeners[e],o=0;o<t.length;)t[o].fn===n?t.splice(o,1):++o;return this};Wi.prototype.emit=function(e){var n=this._listeners[e];if(n){for(var t=[],o=1;o<arguments.length;)t.push(arguments[o++]);for(o=0;o<n.length;)n[o].fn.apply(n[o++].ctx,t)}return this}});var Fd=Qe((o_,Nd)=>{"use strict";Nd.exports=Bd(Bd);function Bd(r){return typeof Float32Array<"u"?function(){var e=new Float32Array([-0]),n=new Uint8Array(e.buffer),t=n[3]===128;function o(u,l,d){e[0]=u,l[d]=n[0],l[d+1]=n[1],l[d+2]=n[2],l[d+3]=n[3]}function i(u,l,d){e[0]=u,l[d]=n[3],l[d+1]=n[2],l[d+2]=n[1],l[d+3]=n[0]}r.writeFloatLE=t?o:i,r.writeFloatBE=t?i:o;function s(u,l){return n[0]=u[l],n[1]=u[l+1],n[2]=u[l+2],n[3]=u[l+3],e[0]}function a(u,l){return n[3]=u[l],n[2]=u[l+1],n[1]=u[l+2],n[0]=u[l+3],e[0]}r.readFloatLE=t?s:a,r.readFloatBE=t?a:s}():function(){function e(t,o,i,s){var a=o<0?1:0;if(a&&(o=-o),o===0)t(1/o>0?0:2147483648,i,s);else if(isNaN(o))t(2143289344,i,s);else if(o>34028234663852886e22)t((a<<31|2139095040)>>>0,i,s);else if(o<11754943508222875e-54)t((a<<31|Math.round(o/1401298464324817e-60))>>>0,i,s);else{var u=Math.floor(Math.log(o)/Math.LN2),l=Math.round(o*Math.pow(2,-u)*8388608)&8388607;t((a<<31|u+127<<23|l)>>>0,i,s)}}r.writeFloatLE=e.bind(null,Rd),r.writeFloatBE=e.bind(null,zd);function n(t,o,i){var s=t(o,i),a=(s>>31)*2+1,u=s>>>23&255,l=s&8388607;return u===255?l?NaN:a*(1/0):u===0?a*1401298464324817e-60*l:a*Math.pow(2,u-150)*(l+8388608)}r.readFloatLE=n.bind(null,Ld),r.readFloatBE=n.bind(null,Md)}(),typeof Float64Array<"u"?function(){var e=new Float64Array([-0]),n=new Uint8Array(e.buffer),t=n[7]===128;function o(u,l,d){e[0]=u,l[d]=n[0],l[d+1]=n[1],l[d+2]=n[2],l[d+3]=n[3],l[d+4]=n[4],l[d+5]=n[5],l[d+6]=n[6],l[d+7]=n[7]}function i(u,l,d){e[0]=u,l[d]=n[7],l[d+1]=n[6],l[d+2]=n[5],l[d+3]=n[4],l[d+4]=n[3],l[d+5]=n[2],l[d+6]=n[1],l[d+7]=n[0]}r.writeDoubleLE=t?o:i,r.writeDoubleBE=t?i:o;function s(u,l){return n[0]=u[l],n[1]=u[l+1],n[2]=u[l+2],n[3]=u[l+3],n[4]=u[l+4],n[5]=u[l+5],n[6]=u[l+6],n[7]=u[l+7],e[0]}function a(u,l){return n[7]=u[l],n[6]=u[l+1],n[5]=u[l+2],n[4]=u[l+3],n[3]=u[l+4],n[2]=u[l+5],n[1]=u[l+6],n[0]=u[l+7],e[0]}r.readDoubleLE=t?s:a,r.readDoubleBE=t?a:s}():function(){function e(t,o,i,s,a,u){var l=s<0?1:0;if(l&&(s=-s),s===0)t(0,a,u+o),t(1/s>0?0:2147483648,a,u+i);else if(isNaN(s))t(0,a,u+o),t(2146959360,a,u+i);else if(s>17976931348623157e292)t(0,a,u+o),t((l<<31|2146435072)>>>0,a,u+i);else{var d;if(s<22250738585072014e-324)d=s/5e-324,t(d>>>0,a,u+o),t((l<<31|d/4294967296)>>>0,a,u+i);else{var h=Math.floor(Math.log(s)/Math.LN2);h===1024&&(h=1023),d=s*Math.pow(2,-h),t(d*4503599627370496>>>0,a,u+o),t((l<<31|h+1023<<20|d*1048576&1048575)>>>0,a,u+i)}}}r.writeDoubleLE=e.bind(null,Rd,0,4),r.writeDoubleBE=e.bind(null,zd,4,0);function n(t,o,i,s,a){var u=t(s,a+o),l=t(s,a+i),d=(l>>31)*2+1,h=l>>>20&2047,m=4294967296*(l&1048575)+u;return h===2047?m?NaN:d*(1/0):h===0?d*5e-324*m:d*Math.pow(2,h-1075)*(m+4503599627370496)}r.readDoubleLE=n.bind(null,Ld,0,4),r.readDoubleBE=n.bind(null,Md,4,0)}(),r}function Rd(r,e,n){e[n]=r&255,e[n+1]=r>>>8&255,e[n+2]=r>>>16&255,e[n+3]=r>>>24}function zd(r,e,n){e[n]=r>>>24,e[n+1]=r>>>16&255,e[n+2]=r>>>8&255,e[n+3]=r&255}function Ld(r,e){return(r[e]|r[e+1]<<8|r[e+2]<<16|r[e+3]<<24)>>>0}function Md(r,e){return(r[e]<<24|r[e+1]<<16|r[e+2]<<8|r[e+3])>>>0}});var Vd=Qe((exports,module)=>{"use strict";module.exports=inquire;function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(r){}return null}});var Gd=Qe(Ud=>{"use strict";var $s=Ud;$s.length=function(e){for(var n=0,t=0,o=0;o<e.length;++o)t=e.charCodeAt(o),t<128?n+=1:t<2048?n+=2:(t&64512)===55296&&(e.charCodeAt(o+1)&64512)===56320?(++o,n+=4):n+=3;return n};$s.read=function(e,n,t){var o=t-n;if(o<1)return"";for(var i=null,s=[],a=0,u;n<t;)u=e[n++],u<128?s[a++]=u:u>191&&u<224?s[a++]=(u&31)<<6|e[n++]&63:u>239&&u<365?(u=((u&7)<<18|(e[n++]&63)<<12|(e[n++]&63)<<6|e[n++]&63)-65536,s[a++]=55296+(u>>10),s[a++]=56320+(u&1023)):s[a++]=(u&15)<<12|(e[n++]&63)<<6|e[n++]&63,a>8191&&((i||(i=[])).push(String.fromCharCode.apply(String,s)),a=0);return i?(a&&i.push(String.fromCharCode.apply(String,s.slice(0,a))),i.join("")):String.fromCharCode.apply(String,s.slice(0,a))};$s.write=function(e,n,t){for(var o=t,i,s,a=0;a<e.length;++a)i=e.charCodeAt(a),i<128?n[t++]=i:i<2048?(n[t++]=i>>6|192,n[t++]=i&63|128):(i&64512)===55296&&((s=e.charCodeAt(a+1))&64512)===56320?(i=65536+((i&1023)<<10)+(s&1023),++a,n[t++]=i>>18|240,n[t++]=i>>12&63|128,n[t++]=i>>6&63|128,n[t++]=i&63|128):(n[t++]=i>>12|224,n[t++]=i>>6&63|128,n[t++]=i&63|128);return t-o}});var Hd=Qe((a_,Wd)=>{"use strict";Wd.exports=U0;function U0(r,e,n){var t=n||8192,o=t>>>1,i=null,s=t;return function(u){if(u<1||u>o)return r(u);s+u>t&&(i=r(t),s=0);var l=e.call(i,s,s+=u);return s&7&&(s=(s|7)+1),l}}});var jd=Qe((s_,qd)=>{"use strict";qd.exports=$t;var ko=en();function $t(r,e){this.lo=r>>>0,this.hi=e>>>0}var wn=$t.zero=new $t(0,0);wn.toNumber=function(){return 0};wn.zzEncode=wn.zzDecode=function(){return this};wn.length=function(){return 1};var G0=$t.zeroHash="\0\0\0\0\0\0\0\0";$t.fromNumber=function(e){if(e===0)return wn;var n=e<0;n&&(e=-e);var t=e>>>0,o=(e-t)/4294967296>>>0;return n&&(o=~o>>>0,t=~t>>>0,++t>4294967295&&(t=0,++o>4294967295&&(o=0))),new $t(t,o)};$t.from=function(e){if(typeof e=="number")return $t.fromNumber(e);if(ko.isString(e))if(ko.Long)e=ko.Long.fromString(e);else return $t.fromNumber(parseInt(e,10));return e.low||e.high?new $t(e.low>>>0,e.high>>>0):wn};$t.prototype.toNumber=function(e){if(!e&&this.hi>>>31){var n=~this.lo+1>>>0,t=~this.hi>>>0;return n||(t=t+1>>>0),-(n+t*4294967296)}return this.lo+this.hi*4294967296};$t.prototype.toLong=function(e){return ko.Long?new ko.Long(this.lo|0,this.hi|0,!!e):{low:this.lo|0,high:this.hi|0,unsigned:!!e}};var Qr=String.prototype.charCodeAt;$t.fromHash=function(e){return e===G0?wn:new $t((Qr.call(e,0)|Qr.call(e,1)<<8|Qr.call(e,2)<<16|Qr.call(e,3)<<24)>>>0,(Qr.call(e,4)|Qr.call(e,5)<<8|Qr.call(e,6)<<16|Qr.call(e,7)<<24)>>>0)};$t.prototype.toHash=function(){return String.fromCharCode(this.lo&255,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,this.hi&255,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)};$t.prototype.zzEncode=function(){var e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this};$t.prototype.zzDecode=function(){var e=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this};$t.prototype.length=function(){var e=this.lo,n=(this.lo>>>28|this.hi<<4)>>>0,t=this.hi>>>24;return t===0?n===0?e<16384?e<128?1:2:e<2097152?3:4:n<16384?n<128?5:6:n<2097152?7:8:t<128?9:10}});var en=Qe(_s=>{"use strict";var he=_s;he.asPromise=Ad();he.base64=Pd();he.EventEmitter=Dd();he.float=Fd();he.inquire=Vd();he.utf8=Gd();he.pool=Hd();he.LongBits=jd();he.isNode=!!(typeof global<"u"&&global&&global.process&&global.process.versions&&global.process.versions.node);he.global=he.isNode&&global||typeof window<"u"&&window||typeof self<"u"&&self||_s;he.emptyArray=Object.freeze?Object.freeze([]):[];he.emptyObject=Object.freeze?Object.freeze({}):{};he.isInteger=Number.isInteger||function(e){return typeof e=="number"&&isFinite(e)&&Math.floor(e)===e};he.isString=function(e){return typeof e=="string"||e instanceof String};he.isObject=function(e){return e&&typeof e=="object"};he.isset=he.isSet=function(e,n){var t=e[n];return t!=null&&e.hasOwnProperty(n)?typeof t!="object"||(Array.isArray(t)?t.length:Object.keys(t).length)>0:!1};he.Buffer=function(){try{var r=he.inquire("buffer").Buffer;return r.prototype.utf8Write?r:null}catch{return null}}();he._Buffer_from=null;he._Buffer_allocUnsafe=null;he.newBuffer=function(e){return typeof e=="number"?he.Buffer?he._Buffer_allocUnsafe(e):new he.Array(e):he.Buffer?he._Buffer_from(e):typeof Uint8Array>"u"?e:new Uint8Array(e)};he.Array=typeof Uint8Array<"u"?Uint8Array:Array;he.Long=he.global.dcodeIO&&he.global.dcodeIO.Long||he.global.Long||he.inquire("long");he.key2Re=/^true|false|0|1$/;he.key32Re=/^-?(?:0|[1-9][0-9]*)$/;he.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;he.longToHash=function(e){return e?he.LongBits.from(e).toHash():he.LongBits.zeroHash};he.longFromHash=function(e,n){var t=he.LongBits.fromHash(e);return he.Long?he.Long.fromBits(t.lo,t.hi,n):t.toNumber(!!n)};function Kd(r,e,n){for(var t=Object.keys(e),o=0;o<t.length;++o)(r[t[o]]===void 0||!n)&&(r[t[o]]=e[t[o]]);return r}he.merge=Kd;he.lcFirst=function(e){return e.charAt(0).toLowerCase()+e.substring(1)};function Yd(r){function e(n,t){if(!(this instanceof e))return new e(n,t);Object.defineProperty(this,"message",{get:function(){return n}}),Error.captureStackTrace?Error.captureStackTrace(this,e):Object.defineProperty(this,"stack",{value:new Error().stack||""}),t&&Kd(this,t)}return e.prototype=Object.create(Error.prototype,{constructor:{value:e,writable:!0,enumerable:!1,configurable:!0},name:{get:function(){return r},set:void 0,enumerable:!1,configurable:!0},toString:{value:function(){return this.name+": "+this.message},writable:!0,enumerable:!1,configurable:!0}}),e}he.newError=Yd;he.ProtocolError=Yd("ProtocolError");he.oneOfGetter=function(e){for(var n={},t=0;t<e.length;++t)n[e[t]]=1;return function(){for(var o=Object.keys(this),i=o.length-1;i>-1;--i)if(n[o[i]]===1&&this[o[i]]!==void 0&&this[o[i]]!==null)return o[i]}};he.oneOfSetter=function(e){return function(n){for(var t=0;t<e.length;++t)e[t]!==n&&delete this[e[t]]}};he.toJSONOptions={longs:String,enums:String,bytes:String,json:!0};he._configure=function(){var r=he.Buffer;if(!r){he._Buffer_from=he._Buffer_allocUnsafe=null;return}he._Buffer_from=r.from!==Uint8Array.from&&r.from||function(n,t){return new r(n,t)},he._Buffer_allocUnsafe=r.allocUnsafe||function(n){return new r(n)}}});var Ps=Qe((l_,Qd)=>{"use strict";Qd.exports=We;var ar=en(),Ss,Hi=ar.LongBits,Xd=ar.base64,Zd=ar.utf8;function Do(r,e,n){this.fn=r,this.len=e,this.next=void 0,this.val=n}function As(){}function W0(r){this.head=r.head,this.tail=r.tail,this.len=r.len,this.next=r.states}function We(){this.len=0,this.head=new Do(As,0,0),this.tail=this.head,this.states=null}var Jd=function(){return ar.Buffer?function(){return(We.create=function(){return new Ss})()}:function(){return new We}};We.create=Jd();We.alloc=function(e){return new ar.Array(e)};ar.Array!==Array&&(We.alloc=ar.pool(We.alloc,ar.Array.prototype.subarray));We.prototype._push=function(e,n,t){return this.tail=this.tail.next=new Do(e,n,t),this.len+=n,this};function Os(r,e,n){e[n]=r&255}function H0(r,e,n){for(;r>127;)e[n++]=r&127|128,r>>>=7;e[n]=r}function Es(r,e){this.len=r,this.next=void 0,this.val=e}Es.prototype=Object.create(Do.prototype);Es.prototype.fn=H0;We.prototype.uint32=function(e){return this.len+=(this.tail=this.tail.next=new Es((e=e>>>0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this};We.prototype.int32=function(e){return e<0?this._push(Cs,10,Hi.fromNumber(e)):this.uint32(e)};We.prototype.sint32=function(e){return this.uint32((e<<1^e>>31)>>>0)};function Cs(r,e,n){for(;r.hi;)e[n++]=r.lo&127|128,r.lo=(r.lo>>>7|r.hi<<25)>>>0,r.hi>>>=7;for(;r.lo>127;)e[n++]=r.lo&127|128,r.lo=r.lo>>>7;e[n++]=r.lo}We.prototype.uint64=function(e){var n=Hi.from(e);return this._push(Cs,n.length(),n)};We.prototype.int64=We.prototype.uint64;We.prototype.sint64=function(e){var n=Hi.from(e).zzEncode();return this._push(Cs,n.length(),n)};We.prototype.bool=function(e){return this._push(Os,1,e?1:0)};function Is(r,e,n){e[n]=r&255,e[n+1]=r>>>8&255,e[n+2]=r>>>16&255,e[n+3]=r>>>24}We.prototype.fixed32=function(e){return this._push(Is,4,e>>>0)};We.prototype.sfixed32=We.prototype.fixed32;We.prototype.fixed64=function(e){var n=Hi.from(e);return this._push(Is,4,n.lo)._push(Is,4,n.hi)};We.prototype.sfixed64=We.prototype.fixed64;We.prototype.float=function(e){return this._push(ar.float.writeFloatLE,4,e)};We.prototype.double=function(e){return this._push(ar.float.writeDoubleLE,8,e)};var q0=ar.Array.prototype.set?function(e,n,t){n.set(e,t)}:function(e,n,t){for(var o=0;o<e.length;++o)n[t+o]=e[o]};We.prototype.bytes=function(e){var n=e.length>>>0;if(!n)return this._push(Os,1,0);if(ar.isString(e)){var t=We.alloc(n=Xd.length(e));Xd.decode(e,t,0),e=t}return this.uint32(n)._push(q0,n,e)};We.prototype.string=function(e){var n=Zd.length(e);return n?this.uint32(n)._push(Zd.write,n,e):this._push(Os,1,0)};We.prototype.fork=function(){return this.states=new W0(this),this.head=this.tail=new Do(As,0,0),this.len=0,this};We.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new Do(As,0,0),this.len=0),this};We.prototype.ldelim=function(){var e=this.head,n=this.tail,t=this.len;return this.reset().uint32(t),t&&(this.tail.next=e.next,this.tail=n,this.len+=t),this};We.prototype.finish=function(){for(var e=this.head.next,n=this.constructor.alloc(this.len),t=0;e;)e.fn(e.val,n,t),t+=e.len,e=e.next;return n};We._configure=function(r){Ss=r,We.create=Jd(),Ss._configure()}});var rc=Qe((d_,tc)=>{"use strict";tc.exports=$r;var ec=Ps();($r.prototype=Object.create(ec.prototype)).constructor=$r;var tn=en();function $r(){ec.call(this)}$r._configure=function(){$r.alloc=tn._Buffer_allocUnsafe,$r.writeBytesBuffer=tn.Buffer&&tn.Buffer.prototype instanceof Uint8Array&&tn.Buffer.prototype.set.name==="set"?function(e,n,t){n.set(e,t)}:function(e,n,t){if(e.copy)e.copy(n,t,0,e.length);else for(var o=0;o<e.length;)n[t++]=e[o++]}};$r.prototype.bytes=function(e){tn.isString(e)&&(e=tn._Buffer_from(e,"base64"));var n=e.length>>>0;return this.uint32(n),n&&this._push($r.writeBytesBuffer,n,e),this};function j0(r,e,n){r.length<40?tn.utf8.write(r,e,n):e.utf8Write?e.utf8Write(r,n):e.write(r,n)}$r.prototype.string=function(e){var n=tn.Buffer.byteLength(e);return this.uint32(n),n&&this._push(j0,n,e),this};$r._configure()});var Bs=Qe((c_,sc)=>{"use strict";sc.exports=dt;var _r=en(),Ds,ic=_r.LongBits,K0=_r.utf8;function br(r,e){return RangeError("index out of range: "+r.pos+" + "+(e||1)+" > "+r.len)}function dt(r){this.buf=r,this.pos=0,this.len=r.length}var nc=typeof Uint8Array<"u"?function(e){if(e instanceof Uint8Array||Array.isArray(e))return new dt(e);throw Error("illegal buffer")}:function(e){if(Array.isArray(e))return new dt(e);throw Error("illegal buffer")},ac=function(){return _r.Buffer?function(n){return(dt.create=function(o){return _r.Buffer.isBuffer(o)?new Ds(o):nc(o)})(n)}:nc};dt.create=ac();dt.prototype._slice=_r.Array.prototype.subarray||_r.Array.prototype.slice;dt.prototype.uint32=function(){var e=4294967295;return function(){if(e=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(e=(e|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return e;if((this.pos+=5)>this.len)throw this.pos=this.len,br(this,10);return e}}();dt.prototype.int32=function(){return this.uint32()|0};dt.prototype.sint32=function(){var e=this.uint32();return e>>>1^-(e&1)|0};function ks(){var r=new ic(0,0),e=0;if(this.len-this.pos>4){for(;e<4;++e)if(r.lo=(r.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return r;if(r.lo=(r.lo|(this.buf[this.pos]&127)<<28)>>>0,r.hi=(r.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return r;e=0}else{for(;e<3;++e){if(this.pos>=this.len)throw br(this);if(r.lo=(r.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return r}return r.lo=(r.lo|(this.buf[this.pos++]&127)<<e*7)>>>0,r}if(this.len-this.pos>4){for(;e<5;++e)if(r.hi=(r.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return r}else for(;e<5;++e){if(this.pos>=this.len)throw br(this);if(r.hi=(r.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return r}throw Error("invalid varint encoding")}dt.prototype.bool=function(){return this.uint32()!==0};function qi(r,e){return(r[e-4]|r[e-3]<<8|r[e-2]<<16|r[e-1]<<24)>>>0}dt.prototype.fixed32=function(){if(this.pos+4>this.len)throw br(this,4);return qi(this.buf,this.pos+=4)};dt.prototype.sfixed32=function(){if(this.pos+4>this.len)throw br(this,4);return qi(this.buf,this.pos+=4)|0};function oc(){if(this.pos+8>this.len)throw br(this,8);return new ic(qi(this.buf,this.pos+=4),qi(this.buf,this.pos+=4))}dt.prototype.float=function(){if(this.pos+4>this.len)throw br(this,4);var e=_r.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e};dt.prototype.double=function(){if(this.pos+8>this.len)throw br(this,4);var e=_r.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e};dt.prototype.bytes=function(){var e=this.uint32(),n=this.pos,t=this.pos+e;if(t>this.len)throw br(this,e);return this.pos+=e,Array.isArray(this.buf)?this.buf.slice(n,t):n===t?new this.buf.constructor(0):this._slice.call(this.buf,n,t)};dt.prototype.string=function(){var e=this.bytes();return K0.read(e,0,e.length)};dt.prototype.skip=function(e){if(typeof e=="number"){if(this.pos+e>this.len)throw br(this,e);this.pos+=e}else do if(this.pos>=this.len)throw br(this);while(this.buf[this.pos++]&128);return this};dt.prototype.skipType=function(r){switch(r){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(r=this.uint32()&7)!==4;)this.skipType(r);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+r+" at offset "+this.pos)}return this};dt._configure=function(r){Ds=r,dt.create=ac(),Ds._configure();var e=_r.Long?"toLong":"toNumber";_r.merge(dt.prototype,{int64:function(){return ks.call(this)[e](!1)},uint64:function(){return ks.call(this)[e](!0)},sint64:function(){return ks.call(this).zzDecode()[e](!1)},fixed64:function(){return oc.call(this)[e](!0)},sfixed64:function(){return oc.call(this)[e](!1)}})}});var cc=Qe((f_,dc)=>{"use strict";dc.exports=xn;var lc=Bs();(xn.prototype=Object.create(lc.prototype)).constructor=xn;var uc=en();function xn(r){lc.call(this,r)}xn._configure=function(){uc.Buffer&&(xn.prototype._slice=uc.Buffer.prototype.slice)};xn.prototype.string=function(){var e=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+e,this.len))};xn._configure()});var pc=Qe((p_,fc)=>{"use strict";fc.exports=Bo;var Rs=en();(Bo.prototype=Object.create(Rs.EventEmitter.prototype)).constructor=Bo;function Bo(r,e,n){if(typeof r!="function")throw TypeError("rpcImpl must be a function");Rs.EventEmitter.call(this),this.rpcImpl=r,this.requestDelimited=!!e,this.responseDelimited=!!n}Bo.prototype.rpcCall=function r(e,n,t,o,i){if(!o)throw TypeError("request must be specified");var s=this;if(!i)return Rs.asPromise(r,s,e,n,t,o);if(!s.rpcImpl){setTimeout(function(){i(Error("already ended"))},0);return}try{return s.rpcImpl(e,n[s.requestDelimited?"encodeDelimited":"encode"](o).finish(),function(u,l){if(u)return s.emit("error",u,e),i(u);if(l===null){s.end(!0);return}if(!(l instanceof t))try{l=t[s.responseDelimited?"decodeDelimited":"decode"](l)}catch(d){return s.emit("error",d,e),i(d)}return s.emit("data",l,e),i(null,l)})}catch(a){s.emit("error",a,e),setTimeout(function(){i(a)},0);return}};Bo.prototype.end=function(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this}});var mc=Qe(hc=>{"use strict";var Y0=hc;Y0.Service=pc()});var bc=Qe((m_,gc)=>{"use strict";gc.exports={}});var wc=Qe(vc=>{"use strict";var jt=vc;jt.build="minimal";jt.Writer=Ps();jt.BufferWriter=rc();jt.Reader=Bs();jt.BufferReader=cc();jt.util=en();jt.rpc=mc();jt.roots=bc();jt.configure=yc;function yc(){jt.util._configure(),jt.Writer._configure(jt.BufferWriter),jt.Reader._configure(jt.BufferReader)}yc()});var Tc=Qe((b_,xc)=>{"use strict";xc.exports=wc()});var jn=Qe((y_,$c)=>{"use strict";var tt=Tc(),ie=tt.Reader,ct=tt.Writer,P=tt.util,S=tt.roots.default||(tt.roots.default={});S.onnx=function(){var r={};return r.Version=function(){var e={},n=Object.create(e);return n[e[0]="_START_VERSION"]=0,n[e[1]="IR_VERSION_2017_10_10"]=1,n[e[2]="IR_VERSION_2017_10_30"]=2,n[e[3]="IR_VERSION_2017_11_3"]=3,n[e[4]="IR_VERSION_2019_1_22"]=4,n[e[5]="IR_VERSION_2019_3_18"]=5,n[e[6]="IR_VERSION_2019_9_19"]=6,n[e[7]="IR_VERSION_2020_5_8"]=7,n[e[8]="IR_VERSION_2021_7_30"]=8,n[e[9]="IR_VERSION"]=9,n}(),r.AttributeProto=function(){function e(n){if(this.floats=[],this.ints=[],this.strings=[],this.tensors=[],this.graphs=[],this.sparseTensors=[],this.typeProtos=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.refAttrName="",e.prototype.docString="",e.prototype.type=0,e.prototype.f=0,e.prototype.i=P.Long?P.Long.fromBits(0,0,!1):0,e.prototype.s=P.newBuffer([]),e.prototype.t=null,e.prototype.g=null,e.prototype.sparseTensor=null,e.prototype.tp=null,e.prototype.floats=P.emptyArray,e.prototype.ints=P.emptyArray,e.prototype.strings=P.emptyArray,e.prototype.tensors=P.emptyArray,e.prototype.graphs=P.emptyArray,e.prototype.sparseTensors=P.emptyArray,e.prototype.typeProtos=P.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ct.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.f!=null&&Object.hasOwnProperty.call(t,"f")&&o.uint32(21).float(t.f),t.i!=null&&Object.hasOwnProperty.call(t,"i")&&o.uint32(24).int64(t.i),t.s!=null&&Object.hasOwnProperty.call(t,"s")&&o.uint32(34).bytes(t.s),t.t!=null&&Object.hasOwnProperty.call(t,"t")&&S.onnx.TensorProto.encode(t.t,o.uint32(42).fork()).ldelim(),t.g!=null&&Object.hasOwnProperty.call(t,"g")&&S.onnx.GraphProto.encode(t.g,o.uint32(50).fork()).ldelim(),t.floats!=null&&t.floats.length){o.uint32(58).fork();for(var i=0;i<t.floats.length;++i)o.float(t.floats[i]);o.ldelim()}if(t.ints!=null&&t.ints.length){o.uint32(66).fork();for(var i=0;i<t.ints.length;++i)o.int64(t.ints[i]);o.ldelim()}if(t.strings!=null&&t.strings.length)for(var i=0;i<t.strings.length;++i)o.uint32(74).bytes(t.strings[i]);if(t.tensors!=null&&t.tensors.length)for(var i=0;i<t.tensors.length;++i)S.onnx.TensorProto.encode(t.tensors[i],o.uint32(82).fork()).ldelim();if(t.graphs!=null&&t.graphs.length)for(var i=0;i<t.graphs.length;++i)S.onnx.GraphProto.encode(t.graphs[i],o.uint32(90).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(106).string(t.docString),t.tp!=null&&Object.hasOwnProperty.call(t,"tp")&&S.onnx.TypeProto.encode(t.tp,o.uint32(114).fork()).ldelim(),t.typeProtos!=null&&t.typeProtos.length)for(var i=0;i<t.typeProtos.length;++i)S.onnx.TypeProto.encode(t.typeProtos[i],o.uint32(122).fork()).ldelim();if(t.type!=null&&Object.hasOwnProperty.call(t,"type")&&o.uint32(160).int32(t.type),t.refAttrName!=null&&Object.hasOwnProperty.call(t,"refAttrName")&&o.uint32(170).string(t.refAttrName),t.sparseTensor!=null&&Object.hasOwnProperty.call(t,"sparseTensor")&&S.onnx.SparseTensorProto.encode(t.sparseTensor,o.uint32(178).fork()).ldelim(),t.sparseTensors!=null&&t.sparseTensors.length)for(var i=0;i<t.sparseTensors.length;++i)S.onnx.SparseTensorProto.encode(t.sparseTensors[i],o.uint32(186).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ie||(t=ie.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new S.onnx.AttributeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.name=t.string();break}case 21:{s.refAttrName=t.string();break}case 13:{s.docString=t.string();break}case 20:{s.type=t.int32();break}case 2:{s.f=t.float();break}case 3:{s.i=t.int64();break}case 4:{s.s=t.bytes();break}case 5:{s.t=S.onnx.TensorProto.decode(t,t.uint32());break}case 6:{s.g=S.onnx.GraphProto.decode(t,t.uint32());break}case 22:{s.sparseTensor=S.onnx.SparseTensorProto.decode(t,t.uint32());break}case 14:{s.tp=S.onnx.TypeProto.decode(t,t.uint32());break}case 7:{if(s.floats&&s.floats.length||(s.floats=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.floats.push(t.float());else s.floats.push(t.float());break}case 8:{if(s.ints&&s.ints.length||(s.ints=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.ints.push(t.int64());else s.ints.push(t.int64());break}case 9:{s.strings&&s.strings.length||(s.strings=[]),s.strings.push(t.bytes());break}case 10:{s.tensors&&s.tensors.length||(s.tensors=[]),s.tensors.push(S.onnx.TensorProto.decode(t,t.uint32()));break}case 11:{s.graphs&&s.graphs.length||(s.graphs=[]),s.graphs.push(S.onnx.GraphProto.decode(t,t.uint32()));break}case 23:{s.sparseTensors&&s.sparseTensors.length||(s.sparseTensors=[]),s.sparseTensors.push(S.onnx.SparseTensorProto.decode(t,t.uint32()));break}case 15:{s.typeProtos&&s.typeProtos.length||(s.typeProtos=[]),s.typeProtos.push(S.onnx.TypeProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ie||(t=new ie(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!P.isString(t.name))return"name: string expected";if(t.refAttrName!=null&&t.hasOwnProperty("refAttrName")&&!P.isString(t.refAttrName))return"refAttrName: string expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!P.isString(t.docString))return"docString: string expected";if(t.type!=null&&t.hasOwnProperty("type"))switch(t.type){default:return"type: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 11:case 13:case 6:case 7:case 8:case 9:case 10:case 12:case 14:break}if(t.f!=null&&t.hasOwnProperty("f")&&typeof t.f!="number")return"f: number expected";if(t.i!=null&&t.hasOwnProperty("i")&&!P.isInteger(t.i)&&!(t.i&&P.isInteger(t.i.low)&&P.isInteger(t.i.high)))return"i: integer|Long expected";if(t.s!=null&&t.hasOwnProperty("s")&&!(t.s&&typeof t.s.length=="number"||P.isString(t.s)))return"s: buffer expected";if(t.t!=null&&t.hasOwnProperty("t")){var o=S.onnx.TensorProto.verify(t.t);if(o)return"t."+o}if(t.g!=null&&t.hasOwnProperty("g")){var o=S.onnx.GraphProto.verify(t.g);if(o)return"g."+o}if(t.sparseTensor!=null&&t.hasOwnProperty("sparseTensor")){var o=S.onnx.SparseTensorProto.verify(t.sparseTensor);if(o)return"sparseTensor."+o}if(t.tp!=null&&t.hasOwnProperty("tp")){var o=S.onnx.TypeProto.verify(t.tp);if(o)return"tp."+o}if(t.floats!=null&&t.hasOwnProperty("floats")){if(!Array.isArray(t.floats))return"floats: array expected";for(var i=0;i<t.floats.length;++i)if(typeof t.floats[i]!="number")return"floats: number[] expected"}if(t.ints!=null&&t.hasOwnProperty("ints")){if(!Array.isArray(t.ints))return"ints: array expected";for(var i=0;i<t.ints.length;++i)if(!P.isInteger(t.ints[i])&&!(t.ints[i]&&P.isInteger(t.ints[i].low)&&P.isInteger(t.ints[i].high)))return"ints: integer|Long[] expected"}if(t.strings!=null&&t.hasOwnProperty("strings")){if(!Array.isArray(t.strings))return"strings: array expected";for(var i=0;i<t.strings.length;++i)if(!(t.strings[i]&&typeof t.strings[i].length=="number"||P.isString(t.strings[i])))return"strings: buffer[] expected"}if(t.tensors!=null&&t.hasOwnProperty("tensors")){if(!Array.isArray(t.tensors))return"tensors: array expected";for(var i=0;i<t.tensors.length;++i){var o=S.onnx.TensorProto.verify(t.tensors[i]);if(o)return"tensors."+o}}if(t.graphs!=null&&t.hasOwnProperty("graphs")){if(!Array.isArray(t.graphs))return"graphs: array expected";for(var i=0;i<t.graphs.length;++i){var o=S.onnx.GraphProto.verify(t.graphs[i]);if(o)return"graphs."+o}}if(t.sparseTensors!=null&&t.hasOwnProperty("sparseTensors")){if(!Array.isArray(t.sparseTensors))return"sparseTensors: array expected";for(var i=0;i<t.sparseTensors.length;++i){var o=S.onnx.SparseTensorProto.verify(t.sparseTensors[i]);if(o)return"sparseTensors."+o}}if(t.typeProtos!=null&&t.hasOwnProperty("typeProtos")){if(!Array.isArray(t.typeProtos))return"typeProtos: array expected";for(var i=0;i<t.typeProtos.length;++i){var o=S.onnx.TypeProto.verify(t.typeProtos[i]);if(o)return"typeProtos."+o}}return null},e.fromObject=function(t){if(t instanceof S.onnx.AttributeProto)return t;var o=new S.onnx.AttributeProto;switch(t.name!=null&&(o.name=String(t.name)),t.refAttrName!=null&&(o.refAttrName=String(t.refAttrName)),t.docString!=null&&(o.docString=String(t.docString)),t.type){default:if(typeof t.type=="number"){o.type=t.type;break}break;case"UNDEFINED":case 0:o.type=0;break;case"FLOAT":case 1:o.type=1;break;case"INT":case 2:o.type=2;break;case"STRING":case 3:o.type=3;break;case"TENSOR":case 4:o.type=4;break;case"GRAPH":case 5:o.type=5;break;case"SPARSE_TENSOR":case 11:o.type=11;break;case"TYPE_PROTO":case 13:o.type=13;break;case"FLOATS":case 6:o.type=6;break;case"INTS":case 7:o.type=7;break;case"STRINGS":case 8:o.type=8;break;case"TENSORS":case 9:o.type=9;break;case"GRAPHS":case 10:o.type=10;break;case"SPARSE_TENSORS":case 12:o.type=12;break;case"TYPE_PROTOS":case 14:o.type=14;break}if(t.f!=null&&(o.f=Number(t.f)),t.i!=null&&(P.Long?(o.i=P.Long.fromValue(t.i)).unsigned=!1:typeof t.i=="string"?o.i=parseInt(t.i,10):typeof t.i=="number"?o.i=t.i:typeof t.i=="object"&&(o.i=new P.LongBits(t.i.low>>>0,t.i.high>>>0).toNumber())),t.s!=null&&(typeof t.s=="string"?P.base64.decode(t.s,o.s=P.newBuffer(P.base64.length(t.s)),0):t.s.length>=0&&(o.s=t.s)),t.t!=null){if(typeof t.t!="object")throw TypeError(".onnx.AttributeProto.t: object expected");o.t=S.onnx.TensorProto.fromObject(t.t)}if(t.g!=null){if(typeof t.g!="object")throw TypeError(".onnx.AttributeProto.g: object expected");o.g=S.onnx.GraphProto.fromObject(t.g)}if(t.sparseTensor!=null){if(typeof t.sparseTensor!="object")throw TypeError(".onnx.AttributeProto.sparseTensor: object expected");o.sparseTensor=S.onnx.SparseTensorProto.fromObject(t.sparseTensor)}if(t.tp!=null){if(typeof t.tp!="object")throw TypeError(".onnx.AttributeProto.tp: object expected");o.tp=S.onnx.TypeProto.fromObject(t.tp)}if(t.floats){if(!Array.isArray(t.floats))throw TypeError(".onnx.AttributeProto.floats: array expected");o.floats=[];for(var i=0;i<t.floats.length;++i)o.floats[i]=Number(t.floats[i])}if(t.ints){if(!Array.isArray(t.ints))throw TypeError(".onnx.AttributeProto.ints: array expected");o.ints=[];for(var i=0;i<t.ints.length;++i)P.Long?(o.ints[i]=P.Long.fromValue(t.ints[i])).unsigned=!1:typeof t.ints[i]=="string"?o.ints[i]=parseInt(t.ints[i],10):typeof t.ints[i]=="number"?o.ints[i]=t.ints[i]:typeof t.ints[i]=="object"&&(o.ints[i]=new P.LongBits(t.ints[i].low>>>0,t.ints[i].high>>>0).toNumber())}if(t.strings){if(!Array.isArray(t.strings))throw TypeError(".onnx.AttributeProto.strings: array expected");o.strings=[];for(var i=0;i<t.strings.length;++i)typeof t.strings[i]=="string"?P.base64.decode(t.strings[i],o.strings[i]=P.newBuffer(P.base64.length(t.strings[i])),0):t.strings[i].length>=0&&(o.strings[i]=t.strings[i])}if(t.tensors){if(!Array.isArray(t.tensors))throw TypeError(".onnx.AttributeProto.tensors: array expected");o.tensors=[];for(var i=0;i<t.tensors.length;++i){if(typeof t.tensors[i]!="object")throw TypeError(".onnx.AttributeProto.tensors: object expected");o.tensors[i]=S.onnx.TensorProto.fromObject(t.tensors[i])}}if(t.graphs){if(!Array.isArray(t.graphs))throw TypeError(".onnx.AttributeProto.graphs: array expected");o.graphs=[];for(var i=0;i<t.graphs.length;++i){if(typeof t.graphs[i]!="object")throw TypeError(".onnx.AttributeProto.graphs: object expected");o.graphs[i]=S.onnx.GraphProto.fromObject(t.graphs[i])}}if(t.sparseTensors){if(!Array.isArray(t.sparseTensors))throw TypeError(".onnx.AttributeProto.sparseTensors: array expected");o.sparseTensors=[];for(var i=0;i<t.sparseTensors.length;++i){if(typeof t.sparseTensors[i]!="object")throw TypeError(".onnx.AttributeProto.sparseTensors: object expected");o.sparseTensors[i]=S.onnx.SparseTensorProto.fromObject(t.sparseTensors[i])}}if(t.typeProtos){if(!Array.isArray(t.typeProtos))throw TypeError(".onnx.AttributeProto.typeProtos: array expected");o.typeProtos=[];for(var i=0;i<t.typeProtos.length;++i){if(typeof t.typeProtos[i]!="object")throw TypeError(".onnx.AttributeProto.typeProtos: object expected");o.typeProtos[i]=S.onnx.TypeProto.fromObject(t.typeProtos[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.floats=[],i.ints=[],i.strings=[],i.tensors=[],i.graphs=[],i.typeProtos=[],i.sparseTensors=[]),o.defaults){if(i.name="",i.f=0,P.Long){var s=new P.Long(0,0,!1);i.i=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.i=o.longs===String?"0":0;o.bytes===String?i.s="":(i.s=[],o.bytes!==Array&&(i.s=P.newBuffer(i.s))),i.t=null,i.g=null,i.docString="",i.tp=null,i.type=o.enums===String?"UNDEFINED":0,i.refAttrName="",i.sparseTensor=null}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.f!=null&&t.hasOwnProperty("f")&&(i.f=o.json&&!isFinite(t.f)?String(t.f):t.f),t.i!=null&&t.hasOwnProperty("i")&&(typeof t.i=="number"?i.i=o.longs===String?String(t.i):t.i:i.i=o.longs===String?P.Long.prototype.toString.call(t.i):o.longs===Number?new P.LongBits(t.i.low>>>0,t.i.high>>>0).toNumber():t.i),t.s!=null&&t.hasOwnProperty("s")&&(i.s=o.bytes===String?P.base64.encode(t.s,0,t.s.length):o.bytes===Array?Array.prototype.slice.call(t.s):t.s),t.t!=null&&t.hasOwnProperty("t")&&(i.t=S.onnx.TensorProto.toObject(t.t,o)),t.g!=null&&t.hasOwnProperty("g")&&(i.g=S.onnx.GraphProto.toObject(t.g,o)),t.floats&&t.floats.length){i.floats=[];for(var a=0;a<t.floats.length;++a)i.floats[a]=o.json&&!isFinite(t.floats[a])?String(t.floats[a]):t.floats[a]}if(t.ints&&t.ints.length){i.ints=[];for(var a=0;a<t.ints.length;++a)typeof t.ints[a]=="number"?i.ints[a]=o.longs===String?String(t.ints[a]):t.ints[a]:i.ints[a]=o.longs===String?P.Long.prototype.toString.call(t.ints[a]):o.longs===Number?new P.LongBits(t.ints[a].low>>>0,t.ints[a].high>>>0).toNumber():t.ints[a]}if(t.strings&&t.strings.length){i.strings=[];for(var a=0;a<t.strings.length;++a)i.strings[a]=o.bytes===String?P.base64.encode(t.strings[a],0,t.strings[a].length):o.bytes===Array?Array.prototype.slice.call(t.strings[a]):t.strings[a]}if(t.tensors&&t.tensors.length){i.tensors=[];for(var a=0;a<t.tensors.length;++a)i.tensors[a]=S.onnx.TensorProto.toObject(t.tensors[a],o)}if(t.graphs&&t.graphs.length){i.graphs=[];for(var a=0;a<t.graphs.length;++a)i.graphs[a]=S.onnx.GraphProto.toObject(t.graphs[a],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.tp!=null&&t.hasOwnProperty("tp")&&(i.tp=S.onnx.TypeProto.toObject(t.tp,o)),t.typeProtos&&t.typeProtos.length){i.typeProtos=[];for(var a=0;a<t.typeProtos.length;++a)i.typeProtos[a]=S.onnx.TypeProto.toObject(t.typeProtos[a],o)}if(t.type!=null&&t.hasOwnProperty("type")&&(i.type=o.enums===String?S.onnx.AttributeProto.AttributeType[t.type]===void 0?t.type:S.onnx.AttributeProto.AttributeType[t.type]:t.type),t.refAttrName!=null&&t.hasOwnProperty("refAttrName")&&(i.refAttrName=t.refAttrName),t.sparseTensor!=null&&t.hasOwnProperty("sparseTensor")&&(i.sparseTensor=S.onnx.SparseTensorProto.toObject(t.sparseTensor,o)),t.sparseTensors&&t.sparseTensors.length){i.sparseTensors=[];for(var a=0;a<t.sparseTensors.length;++a)i.sparseTensors[a]=S.onnx.SparseTensorProto.toObject(t.sparseTensors[a],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,tt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.AttributeProto"},e.AttributeType=function(){var n={},t=Object.create(n);return t[n[0]="UNDEFINED"]=0,t[n[1]="FLOAT"]=1,t[n[2]="INT"]=2,t[n[3]="STRING"]=3,t[n[4]="TENSOR"]=4,t[n[5]="GRAPH"]=5,t[n[11]="SPARSE_TENSOR"]=11,t[n[13]="TYPE_PROTO"]=13,t[n[6]="FLOATS"]=6,t[n[7]="INTS"]=7,t[n[8]="STRINGS"]=8,t[n[9]="TENSORS"]=9,t[n[10]="GRAPHS"]=10,t[n[12]="SPARSE_TENSORS"]=12,t[n[14]="TYPE_PROTOS"]=14,t}(),e}(),r.ValueInfoProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.type=null,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=ct.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.type!=null&&Object.hasOwnProperty.call(t,"type")&&S.onnx.TypeProto.encode(t.type,o.uint32(18).fork()).ldelim(),t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(26).string(t.docString),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ie||(t=ie.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new S.onnx.ValueInfoProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.name=t.string();break}case 2:{s.type=S.onnx.TypeProto.decode(t,t.uint32());break}case 3:{s.docString=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ie||(t=new ie(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!P.isString(t.name))return"name: string expected";if(t.type!=null&&t.hasOwnProperty("type")){var o=S.onnx.TypeProto.verify(t.type);if(o)return"type."+o}return t.docString!=null&&t.hasOwnProperty("docString")&&!P.isString(t.docString)?"docString: string expected":null},e.fromObject=function(t){if(t instanceof S.onnx.ValueInfoProto)return t;var o=new S.onnx.ValueInfoProto;if(t.name!=null&&(o.name=String(t.name)),t.type!=null){if(typeof t.type!="object")throw TypeError(".onnx.ValueInfoProto.type: object expected");o.type=S.onnx.TypeProto.fromObject(t.type)}return t.docString!=null&&(o.docString=String(t.docString)),o},e.toObject=function(t,o){o||(o={});var i={};return o.defaults&&(i.name="",i.type=null,i.docString=""),t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.type!=null&&t.hasOwnProperty("type")&&(i.type=S.onnx.TypeProto.toObject(t.type,o)),t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,tt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.ValueInfoProto"},e}(),r.NodeProto=function(){function e(n){if(this.input=[],this.output=[],this.attribute=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.input=P.emptyArray,e.prototype.output=P.emptyArray,e.prototype.name="",e.prototype.opType="",e.prototype.domain="",e.prototype.attribute=P.emptyArray,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ct.create()),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)o.uint32(10).string(t.input[i]);if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)o.uint32(18).string(t.output[i]);if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(26).string(t.name),t.opType!=null&&Object.hasOwnProperty.call(t,"opType")&&o.uint32(34).string(t.opType),t.attribute!=null&&t.attribute.length)for(var i=0;i<t.attribute.length;++i)S.onnx.AttributeProto.encode(t.attribute[i],o.uint32(42).fork()).ldelim();return t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(50).string(t.docString),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(58).string(t.domain),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ie||(t=ie.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new S.onnx.NodeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.input&&s.input.length||(s.input=[]),s.input.push(t.string());break}case 2:{s.output&&s.output.length||(s.output=[]),s.output.push(t.string());break}case 3:{s.name=t.string();break}case 4:{s.opType=t.string();break}case 7:{s.domain=t.string();break}case 5:{s.attribute&&s.attribute.length||(s.attribute=[]),s.attribute.push(S.onnx.AttributeProto.decode(t,t.uint32()));break}case 6:{s.docString=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ie||(t=new ie(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o)if(!P.isString(t.input[o]))return"input: string[] expected"}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o)if(!P.isString(t.output[o]))return"output: string[] expected"}if(t.name!=null&&t.hasOwnProperty("name")&&!P.isString(t.name))return"name: string expected";if(t.opType!=null&&t.hasOwnProperty("opType")&&!P.isString(t.opType))return"opType: string expected";if(t.domain!=null&&t.hasOwnProperty("domain")&&!P.isString(t.domain))return"domain: string expected";if(t.attribute!=null&&t.hasOwnProperty("attribute")){if(!Array.isArray(t.attribute))return"attribute: array expected";for(var o=0;o<t.attribute.length;++o){var i=S.onnx.AttributeProto.verify(t.attribute[o]);if(i)return"attribute."+i}}return t.docString!=null&&t.hasOwnProperty("docString")&&!P.isString(t.docString)?"docString: string expected":null},e.fromObject=function(t){if(t instanceof S.onnx.NodeProto)return t;var o=new S.onnx.NodeProto;if(t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.NodeProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i)o.input[i]=String(t.input[i])}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.NodeProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i)o.output[i]=String(t.output[i])}if(t.name!=null&&(o.name=String(t.name)),t.opType!=null&&(o.opType=String(t.opType)),t.domain!=null&&(o.domain=String(t.domain)),t.attribute){if(!Array.isArray(t.attribute))throw TypeError(".onnx.NodeProto.attribute: array expected");o.attribute=[];for(var i=0;i<t.attribute.length;++i){if(typeof t.attribute[i]!="object")throw TypeError(".onnx.NodeProto.attribute: object expected");o.attribute[i]=S.onnx.AttributeProto.fromObject(t.attribute[i])}}return t.docString!=null&&(o.docString=String(t.docString)),o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.input=[],i.output=[],i.attribute=[]),o.defaults&&(i.name="",i.opType="",i.docString="",i.domain=""),t.input&&t.input.length){i.input=[];for(var s=0;s<t.input.length;++s)i.input[s]=t.input[s]}if(t.output&&t.output.length){i.output=[];for(var s=0;s<t.output.length;++s)i.output[s]=t.output[s]}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.opType!=null&&t.hasOwnProperty("opType")&&(i.opType=t.opType),t.attribute&&t.attribute.length){i.attribute=[];for(var s=0;s<t.attribute.length;++s)i.attribute[s]=S.onnx.AttributeProto.toObject(t.attribute[s],o)}return t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,tt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.NodeProto"},e}(),r.TrainingInfoProto=function(){function e(n){if(this.initializationBinding=[],this.updateBinding=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.initialization=null,e.prototype.algorithm=null,e.prototype.initializationBinding=P.emptyArray,e.prototype.updateBinding=P.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ct.create()),t.initialization!=null&&Object.hasOwnProperty.call(t,"initialization")&&S.onnx.GraphProto.encode(t.initialization,o.uint32(10).fork()).ldelim(),t.algorithm!=null&&Object.hasOwnProperty.call(t,"algorithm")&&S.onnx.GraphProto.encode(t.algorithm,o.uint32(18).fork()).ldelim(),t.initializationBinding!=null&&t.initializationBinding.length)for(var i=0;i<t.initializationBinding.length;++i)S.onnx.StringStringEntryProto.encode(t.initializationBinding[i],o.uint32(26).fork()).ldelim();if(t.updateBinding!=null&&t.updateBinding.length)for(var i=0;i<t.updateBinding.length;++i)S.onnx.StringStringEntryProto.encode(t.updateBinding[i],o.uint32(34).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ie||(t=ie.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new S.onnx.TrainingInfoProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.initialization=S.onnx.GraphProto.decode(t,t.uint32());break}case 2:{s.algorithm=S.onnx.GraphProto.decode(t,t.uint32());break}case 3:{s.initializationBinding&&s.initializationBinding.length||(s.initializationBinding=[]),s.initializationBinding.push(S.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 4:{s.updateBinding&&s.updateBinding.length||(s.updateBinding=[]),s.updateBinding.push(S.onnx.StringStringEntryProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ie||(t=new ie(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.initialization!=null&&t.hasOwnProperty("initialization")){var o=S.onnx.GraphProto.verify(t.initialization);if(o)return"initialization."+o}if(t.algorithm!=null&&t.hasOwnProperty("algorithm")){var o=S.onnx.GraphProto.verify(t.algorithm);if(o)return"algorithm."+o}if(t.initializationBinding!=null&&t.hasOwnProperty("initializationBinding")){if(!Array.isArray(t.initializationBinding))return"initializationBinding: array expected";for(var i=0;i<t.initializationBinding.length;++i){var o=S.onnx.StringStringEntryProto.verify(t.initializationBinding[i]);if(o)return"initializationBinding."+o}}if(t.updateBinding!=null&&t.hasOwnProperty("updateBinding")){if(!Array.isArray(t.updateBinding))return"updateBinding: array expected";for(var i=0;i<t.updateBinding.length;++i){var o=S.onnx.StringStringEntryProto.verify(t.updateBinding[i]);if(o)return"updateBinding."+o}}return null},e.fromObject=function(t){if(t instanceof S.onnx.TrainingInfoProto)return t;var o=new S.onnx.TrainingInfoProto;if(t.initialization!=null){if(typeof t.initialization!="object")throw TypeError(".onnx.TrainingInfoProto.initialization: object expected");o.initialization=S.onnx.GraphProto.fromObject(t.initialization)}if(t.algorithm!=null){if(typeof t.algorithm!="object")throw TypeError(".onnx.TrainingInfoProto.algorithm: object expected");o.algorithm=S.onnx.GraphProto.fromObject(t.algorithm)}if(t.initializationBinding){if(!Array.isArray(t.initializationBinding))throw TypeError(".onnx.TrainingInfoProto.initializationBinding: array expected");o.initializationBinding=[];for(var i=0;i<t.initializationBinding.length;++i){if(typeof t.initializationBinding[i]!="object")throw TypeError(".onnx.TrainingInfoProto.initializationBinding: object expected");o.initializationBinding[i]=S.onnx.StringStringEntryProto.fromObject(t.initializationBinding[i])}}if(t.updateBinding){if(!Array.isArray(t.updateBinding))throw TypeError(".onnx.TrainingInfoProto.updateBinding: array expected");o.updateBinding=[];for(var i=0;i<t.updateBinding.length;++i){if(typeof t.updateBinding[i]!="object")throw TypeError(".onnx.TrainingInfoProto.updateBinding: object expected");o.updateBinding[i]=S.onnx.StringStringEntryProto.fromObject(t.updateBinding[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.initializationBinding=[],i.updateBinding=[]),o.defaults&&(i.initialization=null,i.algorithm=null),t.initialization!=null&&t.hasOwnProperty("initialization")&&(i.initialization=S.onnx.GraphProto.toObject(t.initialization,o)),t.algorithm!=null&&t.hasOwnProperty("algorithm")&&(i.algorithm=S.onnx.GraphProto.toObject(t.algorithm,o)),t.initializationBinding&&t.initializationBinding.length){i.initializationBinding=[];for(var s=0;s<t.initializationBinding.length;++s)i.initializationBinding[s]=S.onnx.StringStringEntryProto.toObject(t.initializationBinding[s],o)}if(t.updateBinding&&t.updateBinding.length){i.updateBinding=[];for(var s=0;s<t.updateBinding.length;++s)i.updateBinding[s]=S.onnx.StringStringEntryProto.toObject(t.updateBinding[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,tt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TrainingInfoProto"},e}(),r.ModelProto=function(){function e(n){if(this.opsetImport=[],this.metadataProps=[],this.trainingInfo=[],this.functions=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.irVersion=P.Long?P.Long.fromBits(0,0,!1):0,e.prototype.opsetImport=P.emptyArray,e.prototype.producerName="",e.prototype.producerVersion="",e.prototype.domain="",e.prototype.modelVersion=P.Long?P.Long.fromBits(0,0,!1):0,e.prototype.docString="",e.prototype.graph=null,e.prototype.metadataProps=P.emptyArray,e.prototype.trainingInfo=P.emptyArray,e.prototype.functions=P.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ct.create()),t.irVersion!=null&&Object.hasOwnProperty.call(t,"irVersion")&&o.uint32(8).int64(t.irVersion),t.producerName!=null&&Object.hasOwnProperty.call(t,"producerName")&&o.uint32(18).string(t.producerName),t.producerVersion!=null&&Object.hasOwnProperty.call(t,"producerVersion")&&o.uint32(26).string(t.producerVersion),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(34).string(t.domain),t.modelVersion!=null&&Object.hasOwnProperty.call(t,"modelVersion")&&o.uint32(40).int64(t.modelVersion),t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(50).string(t.docString),t.graph!=null&&Object.hasOwnProperty.call(t,"graph")&&S.onnx.GraphProto.encode(t.graph,o.uint32(58).fork()).ldelim(),t.opsetImport!=null&&t.opsetImport.length)for(var i=0;i<t.opsetImport.length;++i)S.onnx.OperatorSetIdProto.encode(t.opsetImport[i],o.uint32(66).fork()).ldelim();if(t.metadataProps!=null&&t.metadataProps.length)for(var i=0;i<t.metadataProps.length;++i)S.onnx.StringStringEntryProto.encode(t.metadataProps[i],o.uint32(114).fork()).ldelim();if(t.trainingInfo!=null&&t.trainingInfo.length)for(var i=0;i<t.trainingInfo.length;++i)S.onnx.TrainingInfoProto.encode(t.trainingInfo[i],o.uint32(162).fork()).ldelim();if(t.functions!=null&&t.functions.length)for(var i=0;i<t.functions.length;++i)S.onnx.FunctionProto.encode(t.functions[i],o.uint32(202).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ie||(t=ie.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new S.onnx.ModelProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.irVersion=t.int64();break}case 8:{s.opsetImport&&s.opsetImport.length||(s.opsetImport=[]),s.opsetImport.push(S.onnx.OperatorSetIdProto.decode(t,t.uint32()));break}case 2:{s.producerName=t.string();break}case 3:{s.producerVersion=t.string();break}case 4:{s.domain=t.string();break}case 5:{s.modelVersion=t.int64();break}case 6:{s.docString=t.string();break}case 7:{s.graph=S.onnx.GraphProto.decode(t,t.uint32());break}case 14:{s.metadataProps&&s.metadataProps.length||(s.metadataProps=[]),s.metadataProps.push(S.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 20:{s.trainingInfo&&s.trainingInfo.length||(s.trainingInfo=[]),s.trainingInfo.push(S.onnx.TrainingInfoProto.decode(t,t.uint32()));break}case 25:{s.functions&&s.functions.length||(s.functions=[]),s.functions.push(S.onnx.FunctionProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ie||(t=new ie(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.irVersion!=null&&t.hasOwnProperty("irVersion")&&!P.isInteger(t.irVersion)&&!(t.irVersion&&P.isInteger(t.irVersion.low)&&P.isInteger(t.irVersion.high)))return"irVersion: integer|Long expected";if(t.opsetImport!=null&&t.hasOwnProperty("opsetImport")){if(!Array.isArray(t.opsetImport))return"opsetImport: array expected";for(var o=0;o<t.opsetImport.length;++o){var i=S.onnx.OperatorSetIdProto.verify(t.opsetImport[o]);if(i)return"opsetImport."+i}}if(t.producerName!=null&&t.hasOwnProperty("producerName")&&!P.isString(t.producerName))return"producerName: string expected";if(t.producerVersion!=null&&t.hasOwnProperty("producerVersion")&&!P.isString(t.producerVersion))return"producerVersion: string expected";if(t.domain!=null&&t.hasOwnProperty("domain")&&!P.isString(t.domain))return"domain: string expected";if(t.modelVersion!=null&&t.hasOwnProperty("modelVersion")&&!P.isInteger(t.modelVersion)&&!(t.modelVersion&&P.isInteger(t.modelVersion.low)&&P.isInteger(t.modelVersion.high)))return"modelVersion: integer|Long expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!P.isString(t.docString))return"docString: string expected";if(t.graph!=null&&t.hasOwnProperty("graph")){var i=S.onnx.GraphProto.verify(t.graph);if(i)return"graph."+i}if(t.metadataProps!=null&&t.hasOwnProperty("metadataProps")){if(!Array.isArray(t.metadataProps))return"metadataProps: array expected";for(var o=0;o<t.metadataProps.length;++o){var i=S.onnx.StringStringEntryProto.verify(t.metadataProps[o]);if(i)return"metadataProps."+i}}if(t.trainingInfo!=null&&t.hasOwnProperty("trainingInfo")){if(!Array.isArray(t.trainingInfo))return"trainingInfo: array expected";for(var o=0;o<t.trainingInfo.length;++o){var i=S.onnx.TrainingInfoProto.verify(t.trainingInfo[o]);if(i)return"trainingInfo."+i}}if(t.functions!=null&&t.hasOwnProperty("functions")){if(!Array.isArray(t.functions))return"functions: array expected";for(var o=0;o<t.functions.length;++o){var i=S.onnx.FunctionProto.verify(t.functions[o]);if(i)return"functions."+i}}return null},e.fromObject=function(t){if(t instanceof S.onnx.ModelProto)return t;var o=new S.onnx.ModelProto;if(t.irVersion!=null&&(P.Long?(o.irVersion=P.Long.fromValue(t.irVersion)).unsigned=!1:typeof t.irVersion=="string"?o.irVersion=parseInt(t.irVersion,10):typeof t.irVersion=="number"?o.irVersion=t.irVersion:typeof t.irVersion=="object"&&(o.irVersion=new P.LongBits(t.irVersion.low>>>0,t.irVersion.high>>>0).toNumber())),t.opsetImport){if(!Array.isArray(t.opsetImport))throw TypeError(".onnx.ModelProto.opsetImport: array expected");o.opsetImport=[];for(var i=0;i<t.opsetImport.length;++i){if(typeof t.opsetImport[i]!="object")throw TypeError(".onnx.ModelProto.opsetImport: object expected");o.opsetImport[i]=S.onnx.OperatorSetIdProto.fromObject(t.opsetImport[i])}}if(t.producerName!=null&&(o.producerName=String(t.producerName)),t.producerVersion!=null&&(o.producerVersion=String(t.producerVersion)),t.domain!=null&&(o.domain=String(t.domain)),t.modelVersion!=null&&(P.Long?(o.modelVersion=P.Long.fromValue(t.modelVersion)).unsigned=!1:typeof t.modelVersion=="string"?o.modelVersion=parseInt(t.modelVersion,10):typeof t.modelVersion=="number"?o.modelVersion=t.modelVersion:typeof t.modelVersion=="object"&&(o.modelVersion=new P.LongBits(t.modelVersion.low>>>0,t.modelVersion.high>>>0).toNumber())),t.docString!=null&&(o.docString=String(t.docString)),t.graph!=null){if(typeof t.graph!="object")throw TypeError(".onnx.ModelProto.graph: object expected");o.graph=S.onnx.GraphProto.fromObject(t.graph)}if(t.metadataProps){if(!Array.isArray(t.metadataProps))throw TypeError(".onnx.ModelProto.metadataProps: array expected");o.metadataProps=[];for(var i=0;i<t.metadataProps.length;++i){if(typeof t.metadataProps[i]!="object")throw TypeError(".onnx.ModelProto.metadataProps: object expected");o.metadataProps[i]=S.onnx.StringStringEntryProto.fromObject(t.metadataProps[i])}}if(t.trainingInfo){if(!Array.isArray(t.trainingInfo))throw TypeError(".onnx.ModelProto.trainingInfo: array expected");o.trainingInfo=[];for(var i=0;i<t.trainingInfo.length;++i){if(typeof t.trainingInfo[i]!="object")throw TypeError(".onnx.ModelProto.trainingInfo: object expected");o.trainingInfo[i]=S.onnx.TrainingInfoProto.fromObject(t.trainingInfo[i])}}if(t.functions){if(!Array.isArray(t.functions))throw TypeError(".onnx.ModelProto.functions: array expected");o.functions=[];for(var i=0;i<t.functions.length;++i){if(typeof t.functions[i]!="object")throw TypeError(".onnx.ModelProto.functions: object expected");o.functions[i]=S.onnx.FunctionProto.fromObject(t.functions[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.opsetImport=[],i.metadataProps=[],i.trainingInfo=[],i.functions=[]),o.defaults){if(P.Long){var s=new P.Long(0,0,!1);i.irVersion=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.irVersion=o.longs===String?"0":0;if(i.producerName="",i.producerVersion="",i.domain="",P.Long){var s=new P.Long(0,0,!1);i.modelVersion=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.modelVersion=o.longs===String?"0":0;i.docString="",i.graph=null}if(t.irVersion!=null&&t.hasOwnProperty("irVersion")&&(typeof t.irVersion=="number"?i.irVersion=o.longs===String?String(t.irVersion):t.irVersion:i.irVersion=o.longs===String?P.Long.prototype.toString.call(t.irVersion):o.longs===Number?new P.LongBits(t.irVersion.low>>>0,t.irVersion.high>>>0).toNumber():t.irVersion),t.producerName!=null&&t.hasOwnProperty("producerName")&&(i.producerName=t.producerName),t.producerVersion!=null&&t.hasOwnProperty("producerVersion")&&(i.producerVersion=t.producerVersion),t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.modelVersion!=null&&t.hasOwnProperty("modelVersion")&&(typeof t.modelVersion=="number"?i.modelVersion=o.longs===String?String(t.modelVersion):t.modelVersion:i.modelVersion=o.longs===String?P.Long.prototype.toString.call(t.modelVersion):o.longs===Number?new P.LongBits(t.modelVersion.low>>>0,t.modelVersion.high>>>0).toNumber():t.modelVersion),t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.graph!=null&&t.hasOwnProperty("graph")&&(i.graph=S.onnx.GraphProto.toObject(t.graph,o)),t.opsetImport&&t.opsetImport.length){i.opsetImport=[];for(var a=0;a<t.opsetImport.length;++a)i.opsetImport[a]=S.onnx.OperatorSetIdProto.toObject(t.opsetImport[a],o)}if(t.metadataProps&&t.metadataProps.length){i.metadataProps=[];for(var a=0;a<t.metadataProps.length;++a)i.metadataProps[a]=S.onnx.StringStringEntryProto.toObject(t.metadataProps[a],o)}if(t.trainingInfo&&t.trainingInfo.length){i.trainingInfo=[];for(var a=0;a<t.trainingInfo.length;++a)i.trainingInfo[a]=S.onnx.TrainingInfoProto.toObject(t.trainingInfo[a],o)}if(t.functions&&t.functions.length){i.functions=[];for(var a=0;a<t.functions.length;++a)i.functions[a]=S.onnx.FunctionProto.toObject(t.functions[a],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,tt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.ModelProto"},e}(),r.StringStringEntryProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.key="",e.prototype.value="",e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=ct.create()),t.key!=null&&Object.hasOwnProperty.call(t,"key")&&o.uint32(10).string(t.key),t.value!=null&&Object.hasOwnProperty.call(t,"value")&&o.uint32(18).string(t.value),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ie||(t=ie.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new S.onnx.StringStringEntryProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.key=t.string();break}case 2:{s.value=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ie||(t=new ie(t)),this.decode(t,t.uint32())},e.verify=function(t){return typeof t!="object"||t===null?"object expected":t.key!=null&&t.hasOwnProperty("key")&&!P.isString(t.key)?"key: string expected":t.value!=null&&t.hasOwnProperty("value")&&!P.isString(t.value)?"value: string expected":null},e.fromObject=function(t){if(t instanceof S.onnx.StringStringEntryProto)return t;var o=new S.onnx.StringStringEntryProto;return t.key!=null&&(o.key=String(t.key)),t.value!=null&&(o.value=String(t.value)),o},e.toObject=function(t,o){o||(o={});var i={};return o.defaults&&(i.key="",i.value=""),t.key!=null&&t.hasOwnProperty("key")&&(i.key=t.key),t.value!=null&&t.hasOwnProperty("value")&&(i.value=t.value),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,tt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.StringStringEntryProto"},e}(),r.TensorAnnotation=function(){function e(n){if(this.quantParameterTensorNames=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.tensorName="",e.prototype.quantParameterTensorNames=P.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ct.create()),t.tensorName!=null&&Object.hasOwnProperty.call(t,"tensorName")&&o.uint32(10).string(t.tensorName),t.quantParameterTensorNames!=null&&t.quantParameterTensorNames.length)for(var i=0;i<t.quantParameterTensorNames.length;++i)S.onnx.StringStringEntryProto.encode(t.quantParameterTensorNames[i],o.uint32(18).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ie||(t=ie.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new S.onnx.TensorAnnotation;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.tensorName=t.string();break}case 2:{s.quantParameterTensorNames&&s.quantParameterTensorNames.length||(s.quantParameterTensorNames=[]),s.quantParameterTensorNames.push(S.onnx.StringStringEntryProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ie||(t=new ie(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.tensorName!=null&&t.hasOwnProperty("tensorName")&&!P.isString(t.tensorName))return"tensorName: string expected";if(t.quantParameterTensorNames!=null&&t.hasOwnProperty("quantParameterTensorNames")){if(!Array.isArray(t.quantParameterTensorNames))return"quantParameterTensorNames: array expected";for(var o=0;o<t.quantParameterTensorNames.length;++o){var i=S.onnx.StringStringEntryProto.verify(t.quantParameterTensorNames[o]);if(i)return"quantParameterTensorNames."+i}}return null},e.fromObject=function(t){if(t instanceof S.onnx.TensorAnnotation)return t;var o=new S.onnx.TensorAnnotation;if(t.tensorName!=null&&(o.tensorName=String(t.tensorName)),t.quantParameterTensorNames){if(!Array.isArray(t.quantParameterTensorNames))throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: array expected");o.quantParameterTensorNames=[];for(var i=0;i<t.quantParameterTensorNames.length;++i){if(typeof t.quantParameterTensorNames[i]!="object")throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: object expected");o.quantParameterTensorNames[i]=S.onnx.StringStringEntryProto.fromObject(t.quantParameterTensorNames[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.quantParameterTensorNames=[]),o.defaults&&(i.tensorName=""),t.tensorName!=null&&t.hasOwnProperty("tensorName")&&(i.tensorName=t.tensorName),t.quantParameterTensorNames&&t.quantParameterTensorNames.length){i.quantParameterTensorNames=[];for(var s=0;s<t.quantParameterTensorNames.length;++s)i.quantParameterTensorNames[s]=S.onnx.StringStringEntryProto.toObject(t.quantParameterTensorNames[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,tt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorAnnotation"},e}(),r.GraphProto=function(){function e(n){if(this.node=[],this.initializer=[],this.sparseInitializer=[],this.input=[],this.output=[],this.valueInfo=[],this.quantizationAnnotation=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.node=P.emptyArray,e.prototype.name="",e.prototype.initializer=P.emptyArray,e.prototype.sparseInitializer=P.emptyArray,e.prototype.docString="",e.prototype.input=P.emptyArray,e.prototype.output=P.emptyArray,e.prototype.valueInfo=P.emptyArray,e.prototype.quantizationAnnotation=P.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ct.create()),t.node!=null&&t.node.length)for(var i=0;i<t.node.length;++i)S.onnx.NodeProto.encode(t.node[i],o.uint32(10).fork()).ldelim();if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(18).string(t.name),t.initializer!=null&&t.initializer.length)for(var i=0;i<t.initializer.length;++i)S.onnx.TensorProto.encode(t.initializer[i],o.uint32(42).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(82).string(t.docString),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)S.onnx.ValueInfoProto.encode(t.input[i],o.uint32(90).fork()).ldelim();if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)S.onnx.ValueInfoProto.encode(t.output[i],o.uint32(98).fork()).ldelim();if(t.valueInfo!=null&&t.valueInfo.length)for(var i=0;i<t.valueInfo.length;++i)S.onnx.ValueInfoProto.encode(t.valueInfo[i],o.uint32(106).fork()).ldelim();if(t.quantizationAnnotation!=null&&t.quantizationAnnotation.length)for(var i=0;i<t.quantizationAnnotation.length;++i)S.onnx.TensorAnnotation.encode(t.quantizationAnnotation[i],o.uint32(114).fork()).ldelim();if(t.sparseInitializer!=null&&t.sparseInitializer.length)for(var i=0;i<t.sparseInitializer.length;++i)S.onnx.SparseTensorProto.encode(t.sparseInitializer[i],o.uint32(122).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ie||(t=ie.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new S.onnx.GraphProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.node&&s.node.length||(s.node=[]),s.node.push(S.onnx.NodeProto.decode(t,t.uint32()));break}case 2:{s.name=t.string();break}case 5:{s.initializer&&s.initializer.length||(s.initializer=[]),s.initializer.push(S.onnx.TensorProto.decode(t,t.uint32()));break}case 15:{s.sparseInitializer&&s.sparseInitializer.length||(s.sparseInitializer=[]),s.sparseInitializer.push(S.onnx.SparseTensorProto.decode(t,t.uint32()));break}case 10:{s.docString=t.string();break}case 11:{s.input&&s.input.length||(s.input=[]),s.input.push(S.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 12:{s.output&&s.output.length||(s.output=[]),s.output.push(S.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 13:{s.valueInfo&&s.valueInfo.length||(s.valueInfo=[]),s.valueInfo.push(S.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 14:{s.quantizationAnnotation&&s.quantizationAnnotation.length||(s.quantizationAnnotation=[]),s.quantizationAnnotation.push(S.onnx.TensorAnnotation.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ie||(t=new ie(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.node!=null&&t.hasOwnProperty("node")){if(!Array.isArray(t.node))return"node: array expected";for(var o=0;o<t.node.length;++o){var i=S.onnx.NodeProto.verify(t.node[o]);if(i)return"node."+i}}if(t.name!=null&&t.hasOwnProperty("name")&&!P.isString(t.name))return"name: string expected";if(t.initializer!=null&&t.hasOwnProperty("initializer")){if(!Array.isArray(t.initializer))return"initializer: array expected";for(var o=0;o<t.initializer.length;++o){var i=S.onnx.TensorProto.verify(t.initializer[o]);if(i)return"initializer."+i}}if(t.sparseInitializer!=null&&t.hasOwnProperty("sparseInitializer")){if(!Array.isArray(t.sparseInitializer))return"sparseInitializer: array expected";for(var o=0;o<t.sparseInitializer.length;++o){var i=S.onnx.SparseTensorProto.verify(t.sparseInitializer[o]);if(i)return"sparseInitializer."+i}}if(t.docString!=null&&t.hasOwnProperty("docString")&&!P.isString(t.docString))return"docString: string expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o){var i=S.onnx.ValueInfoProto.verify(t.input[o]);if(i)return"input."+i}}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o){var i=S.onnx.ValueInfoProto.verify(t.output[o]);if(i)return"output."+i}}if(t.valueInfo!=null&&t.hasOwnProperty("valueInfo")){if(!Array.isArray(t.valueInfo))return"valueInfo: array expected";for(var o=0;o<t.valueInfo.length;++o){var i=S.onnx.ValueInfoProto.verify(t.valueInfo[o]);if(i)return"valueInfo."+i}}if(t.quantizationAnnotation!=null&&t.hasOwnProperty("quantizationAnnotation")){if(!Array.isArray(t.quantizationAnnotation))return"quantizationAnnotation: array expected";for(var o=0;o<t.quantizationAnnotation.length;++o){var i=S.onnx.TensorAnnotation.verify(t.quantizationAnnotation[o]);if(i)return"quantizationAnnotation."+i}}return null},e.fromObject=function(t){if(t instanceof S.onnx.GraphProto)return t;var o=new S.onnx.GraphProto;if(t.node){if(!Array.isArray(t.node))throw TypeError(".onnx.GraphProto.node: array expected");o.node=[];for(var i=0;i<t.node.length;++i){if(typeof t.node[i]!="object")throw TypeError(".onnx.GraphProto.node: object expected");o.node[i]=S.onnx.NodeProto.fromObject(t.node[i])}}if(t.name!=null&&(o.name=String(t.name)),t.initializer){if(!Array.isArray(t.initializer))throw TypeError(".onnx.GraphProto.initializer: array expected");o.initializer=[];for(var i=0;i<t.initializer.length;++i){if(typeof t.initializer[i]!="object")throw TypeError(".onnx.GraphProto.initializer: object expected");o.initializer[i]=S.onnx.TensorProto.fromObject(t.initializer[i])}}if(t.sparseInitializer){if(!Array.isArray(t.sparseInitializer))throw TypeError(".onnx.GraphProto.sparseInitializer: array expected");o.sparseInitializer=[];for(var i=0;i<t.sparseInitializer.length;++i){if(typeof t.sparseInitializer[i]!="object")throw TypeError(".onnx.GraphProto.sparseInitializer: object expected");o.sparseInitializer[i]=S.onnx.SparseTensorProto.fromObject(t.sparseInitializer[i])}}if(t.docString!=null&&(o.docString=String(t.docString)),t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.GraphProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i){if(typeof t.input[i]!="object")throw TypeError(".onnx.GraphProto.input: object expected");o.input[i]=S.onnx.ValueInfoProto.fromObject(t.input[i])}}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.GraphProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i){if(typeof t.output[i]!="object")throw TypeError(".onnx.GraphProto.output: object expected");o.output[i]=S.onnx.ValueInfoProto.fromObject(t.output[i])}}if(t.valueInfo){if(!Array.isArray(t.valueInfo))throw TypeError(".onnx.GraphProto.valueInfo: array expected");o.valueInfo=[];for(var i=0;i<t.valueInfo.length;++i){if(typeof t.valueInfo[i]!="object")throw TypeError(".onnx.GraphProto.valueInfo: object expected");o.valueInfo[i]=S.onnx.ValueInfoProto.fromObject(t.valueInfo[i])}}if(t.quantizationAnnotation){if(!Array.isArray(t.quantizationAnnotation))throw TypeError(".onnx.GraphProto.quantizationAnnotation: array expected");o.quantizationAnnotation=[];for(var i=0;i<t.quantizationAnnotation.length;++i){if(typeof t.quantizationAnnotation[i]!="object")throw TypeError(".onnx.GraphProto.quantizationAnnotation: object expected");o.quantizationAnnotation[i]=S.onnx.TensorAnnotation.fromObject(t.quantizationAnnotation[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.node=[],i.initializer=[],i.input=[],i.output=[],i.valueInfo=[],i.quantizationAnnotation=[],i.sparseInitializer=[]),o.defaults&&(i.name="",i.docString=""),t.node&&t.node.length){i.node=[];for(var s=0;s<t.node.length;++s)i.node[s]=S.onnx.NodeProto.toObject(t.node[s],o)}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.initializer&&t.initializer.length){i.initializer=[];for(var s=0;s<t.initializer.length;++s)i.initializer[s]=S.onnx.TensorProto.toObject(t.initializer[s],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.input&&t.input.length){i.input=[];for(var s=0;s<t.input.length;++s)i.input[s]=S.onnx.ValueInfoProto.toObject(t.input[s],o)}if(t.output&&t.output.length){i.output=[];for(var s=0;s<t.output.length;++s)i.output[s]=S.onnx.ValueInfoProto.toObject(t.output[s],o)}if(t.valueInfo&&t.valueInfo.length){i.valueInfo=[];for(var s=0;s<t.valueInfo.length;++s)i.valueInfo[s]=S.onnx.ValueInfoProto.toObject(t.valueInfo[s],o)}if(t.quantizationAnnotation&&t.quantizationAnnotation.length){i.quantizationAnnotation=[];for(var s=0;s<t.quantizationAnnotation.length;++s)i.quantizationAnnotation[s]=S.onnx.TensorAnnotation.toObject(t.quantizationAnnotation[s],o)}if(t.sparseInitializer&&t.sparseInitializer.length){i.sparseInitializer=[];for(var s=0;s<t.sparseInitializer.length;++s)i.sparseInitializer[s]=S.onnx.SparseTensorProto.toObject(t.sparseInitializer[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,tt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.GraphProto"},e}(),r.TensorProto=function(){function e(n){if(this.dims=[],this.floatData=[],this.int32Data=[],this.stringData=[],this.int64Data=[],this.externalData=[],this.doubleData=[],this.uint64Data=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.dims=P.emptyArray,e.prototype.dataType=0,e.prototype.segment=null,e.prototype.floatData=P.emptyArray,e.prototype.int32Data=P.emptyArray,e.prototype.stringData=P.emptyArray,e.prototype.int64Data=P.emptyArray,e.prototype.name="",e.prototype.docString="",e.prototype.rawData=P.newBuffer([]),e.prototype.externalData=P.emptyArray,e.prototype.dataLocation=0,e.prototype.doubleData=P.emptyArray,e.prototype.uint64Data=P.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ct.create()),t.dims!=null&&t.dims.length){o.uint32(10).fork();for(var i=0;i<t.dims.length;++i)o.int64(t.dims[i]);o.ldelim()}if(t.dataType!=null&&Object.hasOwnProperty.call(t,"dataType")&&o.uint32(16).int32(t.dataType),t.segment!=null&&Object.hasOwnProperty.call(t,"segment")&&S.onnx.TensorProto.Segment.encode(t.segment,o.uint32(26).fork()).ldelim(),t.floatData!=null&&t.floatData.length){o.uint32(34).fork();for(var i=0;i<t.floatData.length;++i)o.float(t.floatData[i]);o.ldelim()}if(t.int32Data!=null&&t.int32Data.length){o.uint32(42).fork();for(var i=0;i<t.int32Data.length;++i)o.int32(t.int32Data[i]);o.ldelim()}if(t.stringData!=null&&t.stringData.length)for(var i=0;i<t.stringData.length;++i)o.uint32(50).bytes(t.stringData[i]);if(t.int64Data!=null&&t.int64Data.length){o.uint32(58).fork();for(var i=0;i<t.int64Data.length;++i)o.int64(t.int64Data[i]);o.ldelim()}if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(66).string(t.name),t.rawData!=null&&Object.hasOwnProperty.call(t,"rawData")&&o.uint32(74).bytes(t.rawData),t.doubleData!=null&&t.doubleData.length){o.uint32(82).fork();for(var i=0;i<t.doubleData.length;++i)o.double(t.doubleData[i]);o.ldelim()}if(t.uint64Data!=null&&t.uint64Data.length){o.uint32(90).fork();for(var i=0;i<t.uint64Data.length;++i)o.uint64(t.uint64Data[i]);o.ldelim()}if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(98).string(t.docString),t.externalData!=null&&t.externalData.length)for(var i=0;i<t.externalData.length;++i)S.onnx.StringStringEntryProto.encode(t.externalData[i],o.uint32(106).fork()).ldelim();return t.dataLocation!=null&&Object.hasOwnProperty.call(t,"dataLocation")&&o.uint32(112).int32(t.dataLocation),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ie||(t=ie.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new S.onnx.TensorProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{if(s.dims&&s.dims.length||(s.dims=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.dims.push(t.int64());else s.dims.push(t.int64());break}case 2:{s.dataType=t.int32();break}case 3:{s.segment=S.onnx.TensorProto.Segment.decode(t,t.uint32());break}case 4:{if(s.floatData&&s.floatData.length||(s.floatData=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.floatData.push(t.float());else s.floatData.push(t.float());break}case 5:{if(s.int32Data&&s.int32Data.length||(s.int32Data=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.int32Data.push(t.int32());else s.int32Data.push(t.int32());break}case 6:{s.stringData&&s.stringData.length||(s.stringData=[]),s.stringData.push(t.bytes());break}case 7:{if(s.int64Data&&s.int64Data.length||(s.int64Data=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.int64Data.push(t.int64());else s.int64Data.push(t.int64());break}case 8:{s.name=t.string();break}case 12:{s.docString=t.string();break}case 9:{s.rawData=t.bytes();break}case 13:{s.externalData&&s.externalData.length||(s.externalData=[]),s.externalData.push(S.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 14:{s.dataLocation=t.int32();break}case 10:{if(s.doubleData&&s.doubleData.length||(s.doubleData=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.doubleData.push(t.double());else s.doubleData.push(t.double());break}case 11:{if(s.uint64Data&&s.uint64Data.length||(s.uint64Data=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.uint64Data.push(t.uint64());else s.uint64Data.push(t.uint64());break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ie||(t=new ie(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.dims!=null&&t.hasOwnProperty("dims")){if(!Array.isArray(t.dims))return"dims: array expected";for(var o=0;o<t.dims.length;++o)if(!P.isInteger(t.dims[o])&&!(t.dims[o]&&P.isInteger(t.dims[o].low)&&P.isInteger(t.dims[o].high)))return"dims: integer|Long[] expected"}if(t.dataType!=null&&t.hasOwnProperty("dataType")&&!P.isInteger(t.dataType))return"dataType: integer expected";if(t.segment!=null&&t.hasOwnProperty("segment")){var i=S.onnx.TensorProto.Segment.verify(t.segment);if(i)return"segment."+i}if(t.floatData!=null&&t.hasOwnProperty("floatData")){if(!Array.isArray(t.floatData))return"floatData: array expected";for(var o=0;o<t.floatData.length;++o)if(typeof t.floatData[o]!="number")return"floatData: number[] expected"}if(t.int32Data!=null&&t.hasOwnProperty("int32Data")){if(!Array.isArray(t.int32Data))return"int32Data: array expected";for(var o=0;o<t.int32Data.length;++o)if(!P.isInteger(t.int32Data[o]))return"int32Data: integer[] expected"}if(t.stringData!=null&&t.hasOwnProperty("stringData")){if(!Array.isArray(t.stringData))return"stringData: array expected";for(var o=0;o<t.stringData.length;++o)if(!(t.stringData[o]&&typeof t.stringData[o].length=="number"||P.isString(t.stringData[o])))return"stringData: buffer[] expected"}if(t.int64Data!=null&&t.hasOwnProperty("int64Data")){if(!Array.isArray(t.int64Data))return"int64Data: array expected";for(var o=0;o<t.int64Data.length;++o)if(!P.isInteger(t.int64Data[o])&&!(t.int64Data[o]&&P.isInteger(t.int64Data[o].low)&&P.isInteger(t.int64Data[o].high)))return"int64Data: integer|Long[] expected"}if(t.name!=null&&t.hasOwnProperty("name")&&!P.isString(t.name))return"name: string expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!P.isString(t.docString))return"docString: string expected";if(t.rawData!=null&&t.hasOwnProperty("rawData")&&!(t.rawData&&typeof t.rawData.length=="number"||P.isString(t.rawData)))return"rawData: buffer expected";if(t.externalData!=null&&t.hasOwnProperty("externalData")){if(!Array.isArray(t.externalData))return"externalData: array expected";for(var o=0;o<t.externalData.length;++o){var i=S.onnx.StringStringEntryProto.verify(t.externalData[o]);if(i)return"externalData."+i}}if(t.dataLocation!=null&&t.hasOwnProperty("dataLocation"))switch(t.dataLocation){default:return"dataLocation: enum value expected";case 0:case 1:break}if(t.doubleData!=null&&t.hasOwnProperty("doubleData")){if(!Array.isArray(t.doubleData))return"doubleData: array expected";for(var o=0;o<t.doubleData.length;++o)if(typeof t.doubleData[o]!="number")return"doubleData: number[] expected"}if(t.uint64Data!=null&&t.hasOwnProperty("uint64Data")){if(!Array.isArray(t.uint64Data))return"uint64Data: array expected";for(var o=0;o<t.uint64Data.length;++o)if(!P.isInteger(t.uint64Data[o])&&!(t.uint64Data[o]&&P.isInteger(t.uint64Data[o].low)&&P.isInteger(t.uint64Data[o].high)))return"uint64Data: integer|Long[] expected"}return null},e.fromObject=function(t){if(t instanceof S.onnx.TensorProto)return t;var o=new S.onnx.TensorProto;if(t.dims){if(!Array.isArray(t.dims))throw TypeError(".onnx.TensorProto.dims: array expected");o.dims=[];for(var i=0;i<t.dims.length;++i)P.Long?(o.dims[i]=P.Long.fromValue(t.dims[i])).unsigned=!1:typeof t.dims[i]=="string"?o.dims[i]=parseInt(t.dims[i],10):typeof t.dims[i]=="number"?o.dims[i]=t.dims[i]:typeof t.dims[i]=="object"&&(o.dims[i]=new P.LongBits(t.dims[i].low>>>0,t.dims[i].high>>>0).toNumber())}if(t.dataType!=null&&(o.dataType=t.dataType|0),t.segment!=null){if(typeof t.segment!="object")throw TypeError(".onnx.TensorProto.segment: object expected");o.segment=S.onnx.TensorProto.Segment.fromObject(t.segment)}if(t.floatData){if(!Array.isArray(t.floatData))throw TypeError(".onnx.TensorProto.floatData: array expected");o.floatData=[];for(var i=0;i<t.floatData.length;++i)o.floatData[i]=Number(t.floatData[i])}if(t.int32Data){if(!Array.isArray(t.int32Data))throw TypeError(".onnx.TensorProto.int32Data: array expected");o.int32Data=[];for(var i=0;i<t.int32Data.length;++i)o.int32Data[i]=t.int32Data[i]|0}if(t.stringData){if(!Array.isArray(t.stringData))throw TypeError(".onnx.TensorProto.stringData: array expected");o.stringData=[];for(var i=0;i<t.stringData.length;++i)typeof t.stringData[i]=="string"?P.base64.decode(t.stringData[i],o.stringData[i]=P.newBuffer(P.base64.length(t.stringData[i])),0):t.stringData[i].length>=0&&(o.stringData[i]=t.stringData[i])}if(t.int64Data){if(!Array.isArray(t.int64Data))throw TypeError(".onnx.TensorProto.int64Data: array expected");o.int64Data=[];for(var i=0;i<t.int64Data.length;++i)P.Long?(o.int64Data[i]=P.Long.fromValue(t.int64Data[i])).unsigned=!1:typeof t.int64Data[i]=="string"?o.int64Data[i]=parseInt(t.int64Data[i],10):typeof t.int64Data[i]=="number"?o.int64Data[i]=t.int64Data[i]:typeof t.int64Data[i]=="object"&&(o.int64Data[i]=new P.LongBits(t.int64Data[i].low>>>0,t.int64Data[i].high>>>0).toNumber())}if(t.name!=null&&(o.name=String(t.name)),t.docString!=null&&(o.docString=String(t.docString)),t.rawData!=null&&(typeof t.rawData=="string"?P.base64.decode(t.rawData,o.rawData=P.newBuffer(P.base64.length(t.rawData)),0):t.rawData.length>=0&&(o.rawData=t.rawData)),t.externalData){if(!Array.isArray(t.externalData))throw TypeError(".onnx.TensorProto.externalData: array expected");o.externalData=[];for(var i=0;i<t.externalData.length;++i){if(typeof t.externalData[i]!="object")throw TypeError(".onnx.TensorProto.externalData: object expected");o.externalData[i]=S.onnx.StringStringEntryProto.fromObject(t.externalData[i])}}switch(t.dataLocation){default:if(typeof t.dataLocation=="number"){o.dataLocation=t.dataLocation;break}break;case"DEFAULT":case 0:o.dataLocation=0;break;case"EXTERNAL":case 1:o.dataLocation=1;break}if(t.doubleData){if(!Array.isArray(t.doubleData))throw TypeError(".onnx.TensorProto.doubleData: array expected");o.doubleData=[];for(var i=0;i<t.doubleData.length;++i)o.doubleData[i]=Number(t.doubleData[i])}if(t.uint64Data){if(!Array.isArray(t.uint64Data))throw TypeError(".onnx.TensorProto.uint64Data: array expected");o.uint64Data=[];for(var i=0;i<t.uint64Data.length;++i)P.Long?(o.uint64Data[i]=P.Long.fromValue(t.uint64Data[i])).unsigned=!0:typeof t.uint64Data[i]=="string"?o.uint64Data[i]=parseInt(t.uint64Data[i],10):typeof t.uint64Data[i]=="number"?o.uint64Data[i]=t.uint64Data[i]:typeof t.uint64Data[i]=="object"&&(o.uint64Data[i]=new P.LongBits(t.uint64Data[i].low>>>0,t.uint64Data[i].high>>>0).toNumber(!0))}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dims=[],i.floatData=[],i.int32Data=[],i.stringData=[],i.int64Data=[],i.doubleData=[],i.uint64Data=[],i.externalData=[]),o.defaults&&(i.dataType=0,i.segment=null,i.name="",o.bytes===String?i.rawData="":(i.rawData=[],o.bytes!==Array&&(i.rawData=P.newBuffer(i.rawData))),i.docString="",i.dataLocation=o.enums===String?"DEFAULT":0),t.dims&&t.dims.length){i.dims=[];for(var s=0;s<t.dims.length;++s)typeof t.dims[s]=="number"?i.dims[s]=o.longs===String?String(t.dims[s]):t.dims[s]:i.dims[s]=o.longs===String?P.Long.prototype.toString.call(t.dims[s]):o.longs===Number?new P.LongBits(t.dims[s].low>>>0,t.dims[s].high>>>0).toNumber():t.dims[s]}if(t.dataType!=null&&t.hasOwnProperty("dataType")&&(i.dataType=t.dataType),t.segment!=null&&t.hasOwnProperty("segment")&&(i.segment=S.onnx.TensorProto.Segment.toObject(t.segment,o)),t.floatData&&t.floatData.length){i.floatData=[];for(var s=0;s<t.floatData.length;++s)i.floatData[s]=o.json&&!isFinite(t.floatData[s])?String(t.floatData[s]):t.floatData[s]}if(t.int32Data&&t.int32Data.length){i.int32Data=[];for(var s=0;s<t.int32Data.length;++s)i.int32Data[s]=t.int32Data[s]}if(t.stringData&&t.stringData.length){i.stringData=[];for(var s=0;s<t.stringData.length;++s)i.stringData[s]=o.bytes===String?P.base64.encode(t.stringData[s],0,t.stringData[s].length):o.bytes===Array?Array.prototype.slice.call(t.stringData[s]):t.stringData[s]}if(t.int64Data&&t.int64Data.length){i.int64Data=[];for(var s=0;s<t.int64Data.length;++s)typeof t.int64Data[s]=="number"?i.int64Data[s]=o.longs===String?String(t.int64Data[s]):t.int64Data[s]:i.int64Data[s]=o.longs===String?P.Long.prototype.toString.call(t.int64Data[s]):o.longs===Number?new P.LongBits(t.int64Data[s].low>>>0,t.int64Data[s].high>>>0).toNumber():t.int64Data[s]}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.rawData!=null&&t.hasOwnProperty("rawData")&&(i.rawData=o.bytes===String?P.base64.encode(t.rawData,0,t.rawData.length):o.bytes===Array?Array.prototype.slice.call(t.rawData):t.rawData),t.doubleData&&t.doubleData.length){i.doubleData=[];for(var s=0;s<t.doubleData.length;++s)i.doubleData[s]=o.json&&!isFinite(t.doubleData[s])?String(t.doubleData[s]):t.doubleData[s]}if(t.uint64Data&&t.uint64Data.length){i.uint64Data=[];for(var s=0;s<t.uint64Data.length;++s)typeof t.uint64Data[s]=="number"?i.uint64Data[s]=o.longs===String?String(t.uint64Data[s]):t.uint64Data[s]:i.uint64Data[s]=o.longs===String?P.Long.prototype.toString.call(t.uint64Data[s]):o.longs===Number?new P.LongBits(t.uint64Data[s].low>>>0,t.uint64Data[s].high>>>0).toNumber(!0):t.uint64Data[s]}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.externalData&&t.externalData.length){i.externalData=[];for(var s=0;s<t.externalData.length;++s)i.externalData[s]=S.onnx.StringStringEntryProto.toObject(t.externalData[s],o)}return t.dataLocation!=null&&t.hasOwnProperty("dataLocation")&&(i.dataLocation=o.enums===String?S.onnx.TensorProto.DataLocation[t.dataLocation]===void 0?t.dataLocation:S.onnx.TensorProto.DataLocation[t.dataLocation]:t.dataLocation),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,tt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorProto"},e.DataType=function(){var n={},t=Object.create(n);return t[n[0]="UNDEFINED"]=0,t[n[1]="FLOAT"]=1,t[n[2]="UINT8"]=2,t[n[3]="INT8"]=3,t[n[4]="UINT16"]=4,t[n[5]="INT16"]=5,t[n[6]="INT32"]=6,t[n[7]="INT64"]=7,t[n[8]="STRING"]=8,t[n[9]="BOOL"]=9,t[n[10]="FLOAT16"]=10,t[n[11]="DOUBLE"]=11,t[n[12]="UINT32"]=12,t[n[13]="UINT64"]=13,t[n[14]="COMPLEX64"]=14,t[n[15]="COMPLEX128"]=15,t[n[16]="BFLOAT16"]=16,t[n[17]="FLOAT8E4M3FN"]=17,t[n[18]="FLOAT8E4M3FNUZ"]=18,t[n[19]="FLOAT8E5M2"]=19,t[n[20]="FLOAT8E5M2FNUZ"]=20,t}(),e.Segment=function(){function n(t){if(t)for(var o=Object.keys(t),i=0;i<o.length;++i)t[o[i]]!=null&&(this[o[i]]=t[o[i]])}return n.prototype.begin=P.Long?P.Long.fromBits(0,0,!1):0,n.prototype.end=P.Long?P.Long.fromBits(0,0,!1):0,n.create=function(o){return new n(o)},n.encode=function(o,i){return i||(i=ct.create()),o.begin!=null&&Object.hasOwnProperty.call(o,"begin")&&i.uint32(8).int64(o.begin),o.end!=null&&Object.hasOwnProperty.call(o,"end")&&i.uint32(16).int64(o.end),i},n.encodeDelimited=function(o,i){return this.encode(o,i).ldelim()},n.decode=function(o,i){o instanceof ie||(o=ie.create(o));for(var s=i===void 0?o.len:o.pos+i,a=new S.onnx.TensorProto.Segment;o.pos<s;){var u=o.uint32();switch(u>>>3){case 1:{a.begin=o.int64();break}case 2:{a.end=o.int64();break}default:o.skipType(u&7);break}}return a},n.decodeDelimited=function(o){return o instanceof ie||(o=new ie(o)),this.decode(o,o.uint32())},n.verify=function(o){return typeof o!="object"||o===null?"object expected":o.begin!=null&&o.hasOwnProperty("begin")&&!P.isInteger(o.begin)&&!(o.begin&&P.isInteger(o.begin.low)&&P.isInteger(o.begin.high))?"begin: integer|Long expected":o.end!=null&&o.hasOwnProperty("end")&&!P.isInteger(o.end)&&!(o.end&&P.isInteger(o.end.low)&&P.isInteger(o.end.high))?"end: integer|Long expected":null},n.fromObject=function(o){if(o instanceof S.onnx.TensorProto.Segment)return o;var i=new S.onnx.TensorProto.Segment;return o.begin!=null&&(P.Long?(i.begin=P.Long.fromValue(o.begin)).unsigned=!1:typeof o.begin=="string"?i.begin=parseInt(o.begin,10):typeof o.begin=="number"?i.begin=o.begin:typeof o.begin=="object"&&(i.begin=new P.LongBits(o.begin.low>>>0,o.begin.high>>>0).toNumber())),o.end!=null&&(P.Long?(i.end=P.Long.fromValue(o.end)).unsigned=!1:typeof o.end=="string"?i.end=parseInt(o.end,10):typeof o.end=="number"?i.end=o.end:typeof o.end=="object"&&(i.end=new P.LongBits(o.end.low>>>0,o.end.high>>>0).toNumber())),i},n.toObject=function(o,i){i||(i={});var s={};if(i.defaults){if(P.Long){var a=new P.Long(0,0,!1);s.begin=i.longs===String?a.toString():i.longs===Number?a.toNumber():a}else s.begin=i.longs===String?"0":0;if(P.Long){var a=new P.Long(0,0,!1);s.end=i.longs===String?a.toString():i.longs===Number?a.toNumber():a}else s.end=i.longs===String?"0":0}return o.begin!=null&&o.hasOwnProperty("begin")&&(typeof o.begin=="number"?s.begin=i.longs===String?String(o.begin):o.begin:s.begin=i.longs===String?P.Long.prototype.toString.call(o.begin):i.longs===Number?new P.LongBits(o.begin.low>>>0,o.begin.high>>>0).toNumber():o.begin),o.end!=null&&o.hasOwnProperty("end")&&(typeof o.end=="number"?s.end=i.longs===String?String(o.end):o.end:s.end=i.longs===String?P.Long.prototype.toString.call(o.end):i.longs===Number?new P.LongBits(o.end.low>>>0,o.end.high>>>0).toNumber():o.end),s},n.prototype.toJSON=function(){return this.constructor.toObject(this,tt.util.toJSONOptions)},n.getTypeUrl=function(o){return o===void 0&&(o="type.googleapis.com"),o+"/onnx.TensorProto.Segment"},n}(),e.DataLocation=function(){var n={},t=Object.create(n);return t[n[0]="DEFAULT"]=0,t[n[1]="EXTERNAL"]=1,t}(),e}(),r.SparseTensorProto=function(){function e(n){if(this.dims=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.values=null,e.prototype.indices=null,e.prototype.dims=P.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ct.create()),t.values!=null&&Object.hasOwnProperty.call(t,"values")&&S.onnx.TensorProto.encode(t.values,o.uint32(10).fork()).ldelim(),t.indices!=null&&Object.hasOwnProperty.call(t,"indices")&&S.onnx.TensorProto.encode(t.indices,o.uint32(18).fork()).ldelim(),t.dims!=null&&t.dims.length){o.uint32(26).fork();for(var i=0;i<t.dims.length;++i)o.int64(t.dims[i]);o.ldelim()}return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ie||(t=ie.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new S.onnx.SparseTensorProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.values=S.onnx.TensorProto.decode(t,t.uint32());break}case 2:{s.indices=S.onnx.TensorProto.decode(t,t.uint32());break}case 3:{if(s.dims&&s.dims.length||(s.dims=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.dims.push(t.int64());else s.dims.push(t.int64());break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ie||(t=new ie(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.values!=null&&t.hasOwnProperty("values")){var o=S.onnx.TensorProto.verify(t.values);if(o)return"values."+o}if(t.indices!=null&&t.hasOwnProperty("indices")){var o=S.onnx.TensorProto.verify(t.indices);if(o)return"indices."+o}if(t.dims!=null&&t.hasOwnProperty("dims")){if(!Array.isArray(t.dims))return"dims: array expected";for(var i=0;i<t.dims.length;++i)if(!P.isInteger(t.dims[i])&&!(t.dims[i]&&P.isInteger(t.dims[i].low)&&P.isInteger(t.dims[i].high)))return"dims: integer|Long[] expected"}return null},e.fromObject=function(t){if(t instanceof S.onnx.SparseTensorProto)return t;var o=new S.onnx.SparseTensorProto;if(t.values!=null){if(typeof t.values!="object")throw TypeError(".onnx.SparseTensorProto.values: object expected");o.values=S.onnx.TensorProto.fromObject(t.values)}if(t.indices!=null){if(typeof t.indices!="object")throw TypeError(".onnx.SparseTensorProto.indices: object expected");o.indices=S.onnx.TensorProto.fromObject(t.indices)}if(t.dims){if(!Array.isArray(t.dims))throw TypeError(".onnx.SparseTensorProto.dims: array expected");o.dims=[];for(var i=0;i<t.dims.length;++i)P.Long?(o.dims[i]=P.Long.fromValue(t.dims[i])).unsigned=!1:typeof t.dims[i]=="string"?o.dims[i]=parseInt(t.dims[i],10):typeof t.dims[i]=="number"?o.dims[i]=t.dims[i]:typeof t.dims[i]=="object"&&(o.dims[i]=new P.LongBits(t.dims[i].low>>>0,t.dims[i].high>>>0).toNumber())}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dims=[]),o.defaults&&(i.values=null,i.indices=null),t.values!=null&&t.hasOwnProperty("values")&&(i.values=S.onnx.TensorProto.toObject(t.values,o)),t.indices!=null&&t.hasOwnProperty("indices")&&(i.indices=S.onnx.TensorProto.toObject(t.indices,o)),t.dims&&t.dims.length){i.dims=[];for(var s=0;s<t.dims.length;++s)typeof t.dims[s]=="number"?i.dims[s]=o.longs===String?String(t.dims[s]):t.dims[s]:i.dims[s]=o.longs===String?P.Long.prototype.toString.call(t.dims[s]):o.longs===Number?new P.LongBits(t.dims[s].low>>>0,t.dims[s].high>>>0).toNumber():t.dims[s]}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,tt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.SparseTensorProto"},e}(),r.TensorShapeProto=function(){function e(n){if(this.dim=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.dim=P.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ct.create()),t.dim!=null&&t.dim.length)for(var i=0;i<t.dim.length;++i)S.onnx.TensorShapeProto.Dimension.encode(t.dim[i],o.uint32(10).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ie||(t=ie.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new S.onnx.TensorShapeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.dim&&s.dim.length||(s.dim=[]),s.dim.push(S.onnx.TensorShapeProto.Dimension.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ie||(t=new ie(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.dim!=null&&t.hasOwnProperty("dim")){if(!Array.isArray(t.dim))return"dim: array expected";for(var o=0;o<t.dim.length;++o){var i=S.onnx.TensorShapeProto.Dimension.verify(t.dim[o]);if(i)return"dim."+i}}return null},e.fromObject=function(t){if(t instanceof S.onnx.TensorShapeProto)return t;var o=new S.onnx.TensorShapeProto;if(t.dim){if(!Array.isArray(t.dim))throw TypeError(".onnx.TensorShapeProto.dim: array expected");o.dim=[];for(var i=0;i<t.dim.length;++i){if(typeof t.dim[i]!="object")throw TypeError(".onnx.TensorShapeProto.dim: object expected");o.dim[i]=S.onnx.TensorShapeProto.Dimension.fromObject(t.dim[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dim=[]),t.dim&&t.dim.length){i.dim=[];for(var s=0;s<t.dim.length;++s)i.dim[s]=S.onnx.TensorShapeProto.Dimension.toObject(t.dim[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,tt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorShapeProto"},e.Dimension=function(){function n(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}n.prototype.dimValue=null,n.prototype.dimParam=null,n.prototype.denotation="";var t;return Object.defineProperty(n.prototype,"value",{get:P.oneOfGetter(t=["dimValue","dimParam"]),set:P.oneOfSetter(t)}),n.create=function(i){return new n(i)},n.encode=function(i,s){return s||(s=ct.create()),i.dimValue!=null&&Object.hasOwnProperty.call(i,"dimValue")&&s.uint32(8).int64(i.dimValue),i.dimParam!=null&&Object.hasOwnProperty.call(i,"dimParam")&&s.uint32(18).string(i.dimParam),i.denotation!=null&&Object.hasOwnProperty.call(i,"denotation")&&s.uint32(26).string(i.denotation),s},n.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},n.decode=function(i,s){i instanceof ie||(i=ie.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new S.onnx.TensorShapeProto.Dimension;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.dimValue=i.int64();break}case 2:{u.dimParam=i.string();break}case 3:{u.denotation=i.string();break}default:i.skipType(l&7);break}}return u},n.decodeDelimited=function(i){return i instanceof ie||(i=new ie(i)),this.decode(i,i.uint32())},n.verify=function(i){if(typeof i!="object"||i===null)return"object expected";var s={};if(i.dimValue!=null&&i.hasOwnProperty("dimValue")&&(s.value=1,!P.isInteger(i.dimValue)&&!(i.dimValue&&P.isInteger(i.dimValue.low)&&P.isInteger(i.dimValue.high))))return"dimValue: integer|Long expected";if(i.dimParam!=null&&i.hasOwnProperty("dimParam")){if(s.value===1)return"value: multiple values";if(s.value=1,!P.isString(i.dimParam))return"dimParam: string expected"}return i.denotation!=null&&i.hasOwnProperty("denotation")&&!P.isString(i.denotation)?"denotation: string expected":null},n.fromObject=function(i){if(i instanceof S.onnx.TensorShapeProto.Dimension)return i;var s=new S.onnx.TensorShapeProto.Dimension;return i.dimValue!=null&&(P.Long?(s.dimValue=P.Long.fromValue(i.dimValue)).unsigned=!1:typeof i.dimValue=="string"?s.dimValue=parseInt(i.dimValue,10):typeof i.dimValue=="number"?s.dimValue=i.dimValue:typeof i.dimValue=="object"&&(s.dimValue=new P.LongBits(i.dimValue.low>>>0,i.dimValue.high>>>0).toNumber())),i.dimParam!=null&&(s.dimParam=String(i.dimParam)),i.denotation!=null&&(s.denotation=String(i.denotation)),s},n.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.denotation=""),i.dimValue!=null&&i.hasOwnProperty("dimValue")&&(typeof i.dimValue=="number"?a.dimValue=s.longs===String?String(i.dimValue):i.dimValue:a.dimValue=s.longs===String?P.Long.prototype.toString.call(i.dimValue):s.longs===Number?new P.LongBits(i.dimValue.low>>>0,i.dimValue.high>>>0).toNumber():i.dimValue,s.oneofs&&(a.value="dimValue")),i.dimParam!=null&&i.hasOwnProperty("dimParam")&&(a.dimParam=i.dimParam,s.oneofs&&(a.value="dimParam")),i.denotation!=null&&i.hasOwnProperty("denotation")&&(a.denotation=i.denotation),a},n.prototype.toJSON=function(){return this.constructor.toObject(this,tt.util.toJSONOptions)},n.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TensorShapeProto.Dimension"},n}(),e}(),r.TypeProto=function(){function e(t){if(t)for(var o=Object.keys(t),i=0;i<o.length;++i)t[o[i]]!=null&&(this[o[i]]=t[o[i]])}e.prototype.tensorType=null,e.prototype.sequenceType=null,e.prototype.mapType=null,e.prototype.optionalType=null,e.prototype.sparseTensorType=null,e.prototype.denotation="";var n;return Object.defineProperty(e.prototype,"value",{get:P.oneOfGetter(n=["tensorType","sequenceType","mapType","optionalType","sparseTensorType"]),set:P.oneOfSetter(n)}),e.create=function(o){return new e(o)},e.encode=function(o,i){return i||(i=ct.create()),o.tensorType!=null&&Object.hasOwnProperty.call(o,"tensorType")&&S.onnx.TypeProto.Tensor.encode(o.tensorType,i.uint32(10).fork()).ldelim(),o.sequenceType!=null&&Object.hasOwnProperty.call(o,"sequenceType")&&S.onnx.TypeProto.Sequence.encode(o.sequenceType,i.uint32(34).fork()).ldelim(),o.mapType!=null&&Object.hasOwnProperty.call(o,"mapType")&&S.onnx.TypeProto.Map.encode(o.mapType,i.uint32(42).fork()).ldelim(),o.denotation!=null&&Object.hasOwnProperty.call(o,"denotation")&&i.uint32(50).string(o.denotation),o.sparseTensorType!=null&&Object.hasOwnProperty.call(o,"sparseTensorType")&&S.onnx.TypeProto.SparseTensor.encode(o.sparseTensorType,i.uint32(66).fork()).ldelim(),o.optionalType!=null&&Object.hasOwnProperty.call(o,"optionalType")&&S.onnx.TypeProto.Optional.encode(o.optionalType,i.uint32(74).fork()).ldelim(),i},e.encodeDelimited=function(o,i){return this.encode(o,i).ldelim()},e.decode=function(o,i){o instanceof ie||(o=ie.create(o));for(var s=i===void 0?o.len:o.pos+i,a=new S.onnx.TypeProto;o.pos<s;){var u=o.uint32();switch(u>>>3){case 1:{a.tensorType=S.onnx.TypeProto.Tensor.decode(o,o.uint32());break}case 4:{a.sequenceType=S.onnx.TypeProto.Sequence.decode(o,o.uint32());break}case 5:{a.mapType=S.onnx.TypeProto.Map.decode(o,o.uint32());break}case 9:{a.optionalType=S.onnx.TypeProto.Optional.decode(o,o.uint32());break}case 8:{a.sparseTensorType=S.onnx.TypeProto.SparseTensor.decode(o,o.uint32());break}case 6:{a.denotation=o.string();break}default:o.skipType(u&7);break}}return a},e.decodeDelimited=function(o){return o instanceof ie||(o=new ie(o)),this.decode(o,o.uint32())},e.verify=function(o){if(typeof o!="object"||o===null)return"object expected";var i={};if(o.tensorType!=null&&o.hasOwnProperty("tensorType")){i.value=1;{var s=S.onnx.TypeProto.Tensor.verify(o.tensorType);if(s)return"tensorType."+s}}if(o.sequenceType!=null&&o.hasOwnProperty("sequenceType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=S.onnx.TypeProto.Sequence.verify(o.sequenceType);if(s)return"sequenceType."+s}}if(o.mapType!=null&&o.hasOwnProperty("mapType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=S.onnx.TypeProto.Map.verify(o.mapType);if(s)return"mapType."+s}}if(o.optionalType!=null&&o.hasOwnProperty("optionalType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=S.onnx.TypeProto.Optional.verify(o.optionalType);if(s)return"optionalType."+s}}if(o.sparseTensorType!=null&&o.hasOwnProperty("sparseTensorType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=S.onnx.TypeProto.SparseTensor.verify(o.sparseTensorType);if(s)return"sparseTensorType."+s}}return o.denotation!=null&&o.hasOwnProperty("denotation")&&!P.isString(o.denotation)?"denotation: string expected":null},e.fromObject=function(o){if(o instanceof S.onnx.TypeProto)return o;var i=new S.onnx.TypeProto;if(o.tensorType!=null){if(typeof o.tensorType!="object")throw TypeError(".onnx.TypeProto.tensorType: object expected");i.tensorType=S.onnx.TypeProto.Tensor.fromObject(o.tensorType)}if(o.sequenceType!=null){if(typeof o.sequenceType!="object")throw TypeError(".onnx.TypeProto.sequenceType: object expected");i.sequenceType=S.onnx.TypeProto.Sequence.fromObject(o.sequenceType)}if(o.mapType!=null){if(typeof o.mapType!="object")throw TypeError(".onnx.TypeProto.mapType: object expected");i.mapType=S.onnx.TypeProto.Map.fromObject(o.mapType)}if(o.optionalType!=null){if(typeof o.optionalType!="object")throw TypeError(".onnx.TypeProto.optionalType: object expected");i.optionalType=S.onnx.TypeProto.Optional.fromObject(o.optionalType)}if(o.sparseTensorType!=null){if(typeof o.sparseTensorType!="object")throw TypeError(".onnx.TypeProto.sparseTensorType: object expected");i.sparseTensorType=S.onnx.TypeProto.SparseTensor.fromObject(o.sparseTensorType)}return o.denotation!=null&&(i.denotation=String(o.denotation)),i},e.toObject=function(o,i){i||(i={});var s={};return i.defaults&&(s.denotation=""),o.tensorType!=null&&o.hasOwnProperty("tensorType")&&(s.tensorType=S.onnx.TypeProto.Tensor.toObject(o.tensorType,i),i.oneofs&&(s.value="tensorType")),o.sequenceType!=null&&o.hasOwnProperty("sequenceType")&&(s.sequenceType=S.onnx.TypeProto.Sequence.toObject(o.sequenceType,i),i.oneofs&&(s.value="sequenceType")),o.mapType!=null&&o.hasOwnProperty("mapType")&&(s.mapType=S.onnx.TypeProto.Map.toObject(o.mapType,i),i.oneofs&&(s.value="mapType")),o.denotation!=null&&o.hasOwnProperty("denotation")&&(s.denotation=o.denotation),o.sparseTensorType!=null&&o.hasOwnProperty("sparseTensorType")&&(s.sparseTensorType=S.onnx.TypeProto.SparseTensor.toObject(o.sparseTensorType,i),i.oneofs&&(s.value="sparseTensorType")),o.optionalType!=null&&o.hasOwnProperty("optionalType")&&(s.optionalType=S.onnx.TypeProto.Optional.toObject(o.optionalType,i),i.oneofs&&(s.value="optionalType")),s},e.prototype.toJSON=function(){return this.constructor.toObject(this,tt.util.toJSONOptions)},e.getTypeUrl=function(o){return o===void 0&&(o="type.googleapis.com"),o+"/onnx.TypeProto"},e.Tensor=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=0,t.prototype.shape=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=ct.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&s.uint32(8).int32(i.elemType),i.shape!=null&&Object.hasOwnProperty.call(i,"shape")&&S.onnx.TensorShapeProto.encode(i.shape,s.uint32(18).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof ie||(i=ie.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new S.onnx.TypeProto.Tensor;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=i.int32();break}case 2:{u.shape=S.onnx.TensorShapeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof ie||(i=new ie(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")&&!P.isInteger(i.elemType))return"elemType: integer expected";if(i.shape!=null&&i.hasOwnProperty("shape")){var s=S.onnx.TensorShapeProto.verify(i.shape);if(s)return"shape."+s}return null},t.fromObject=function(i){if(i instanceof S.onnx.TypeProto.Tensor)return i;var s=new S.onnx.TypeProto.Tensor;if(i.elemType!=null&&(s.elemType=i.elemType|0),i.shape!=null){if(typeof i.shape!="object")throw TypeError(".onnx.TypeProto.Tensor.shape: object expected");s.shape=S.onnx.TensorShapeProto.fromObject(i.shape)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=0,a.shape=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=i.elemType),i.shape!=null&&i.hasOwnProperty("shape")&&(a.shape=S.onnx.TensorShapeProto.toObject(i.shape,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,tt.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Tensor"},t}(),e.Sequence=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=ct.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&S.onnx.TypeProto.encode(i.elemType,s.uint32(10).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof ie||(i=ie.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new S.onnx.TypeProto.Sequence;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=S.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof ie||(i=new ie(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")){var s=S.onnx.TypeProto.verify(i.elemType);if(s)return"elemType."+s}return null},t.fromObject=function(i){if(i instanceof S.onnx.TypeProto.Sequence)return i;var s=new S.onnx.TypeProto.Sequence;if(i.elemType!=null){if(typeof i.elemType!="object")throw TypeError(".onnx.TypeProto.Sequence.elemType: object expected");s.elemType=S.onnx.TypeProto.fromObject(i.elemType)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=S.onnx.TypeProto.toObject(i.elemType,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,tt.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Sequence"},t}(),e.Map=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.keyType=0,t.prototype.valueType=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=ct.create()),i.keyType!=null&&Object.hasOwnProperty.call(i,"keyType")&&s.uint32(8).int32(i.keyType),i.valueType!=null&&Object.hasOwnProperty.call(i,"valueType")&&S.onnx.TypeProto.encode(i.valueType,s.uint32(18).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof ie||(i=ie.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new S.onnx.TypeProto.Map;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.keyType=i.int32();break}case 2:{u.valueType=S.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof ie||(i=new ie(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.keyType!=null&&i.hasOwnProperty("keyType")&&!P.isInteger(i.keyType))return"keyType: integer expected";if(i.valueType!=null&&i.hasOwnProperty("valueType")){var s=S.onnx.TypeProto.verify(i.valueType);if(s)return"valueType."+s}return null},t.fromObject=function(i){if(i instanceof S.onnx.TypeProto.Map)return i;var s=new S.onnx.TypeProto.Map;if(i.keyType!=null&&(s.keyType=i.keyType|0),i.valueType!=null){if(typeof i.valueType!="object")throw TypeError(".onnx.TypeProto.Map.valueType: object expected");s.valueType=S.onnx.TypeProto.fromObject(i.valueType)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.keyType=0,a.valueType=null),i.keyType!=null&&i.hasOwnProperty("keyType")&&(a.keyType=i.keyType),i.valueType!=null&&i.hasOwnProperty("valueType")&&(a.valueType=S.onnx.TypeProto.toObject(i.valueType,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,tt.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Map"},t}(),e.Optional=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=ct.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&S.onnx.TypeProto.encode(i.elemType,s.uint32(10).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof ie||(i=ie.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new S.onnx.TypeProto.Optional;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=S.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof ie||(i=new ie(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")){var s=S.onnx.TypeProto.verify(i.elemType);if(s)return"elemType."+s}return null},t.fromObject=function(i){if(i instanceof S.onnx.TypeProto.Optional)return i;var s=new S.onnx.TypeProto.Optional;if(i.elemType!=null){if(typeof i.elemType!="object")throw TypeError(".onnx.TypeProto.Optional.elemType: object expected");s.elemType=S.onnx.TypeProto.fromObject(i.elemType)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=S.onnx.TypeProto.toObject(i.elemType,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,tt.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Optional"},t}(),e.SparseTensor=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=0,t.prototype.shape=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=ct.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&s.uint32(8).int32(i.elemType),i.shape!=null&&Object.hasOwnProperty.call(i,"shape")&&S.onnx.TensorShapeProto.encode(i.shape,s.uint32(18).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof ie||(i=ie.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new S.onnx.TypeProto.SparseTensor;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=i.int32();break}case 2:{u.shape=S.onnx.TensorShapeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof ie||(i=new ie(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")&&!P.isInteger(i.elemType))return"elemType: integer expected";if(i.shape!=null&&i.hasOwnProperty("shape")){var s=S.onnx.TensorShapeProto.verify(i.shape);if(s)return"shape."+s}return null},t.fromObject=function(i){if(i instanceof S.onnx.TypeProto.SparseTensor)return i;var s=new S.onnx.TypeProto.SparseTensor;if(i.elemType!=null&&(s.elemType=i.elemType|0),i.shape!=null){if(typeof i.shape!="object")throw TypeError(".onnx.TypeProto.SparseTensor.shape: object expected");s.shape=S.onnx.TensorShapeProto.fromObject(i.shape)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=0,a.shape=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=i.elemType),i.shape!=null&&i.hasOwnProperty("shape")&&(a.shape=S.onnx.TensorShapeProto.toObject(i.shape,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,tt.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.SparseTensor"},t}(),e}(),r.OperatorSetIdProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.domain="",e.prototype.version=P.Long?P.Long.fromBits(0,0,!1):0,e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=ct.create()),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(10).string(t.domain),t.version!=null&&Object.hasOwnProperty.call(t,"version")&&o.uint32(16).int64(t.version),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ie||(t=ie.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new S.onnx.OperatorSetIdProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.domain=t.string();break}case 2:{s.version=t.int64();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ie||(t=new ie(t)),this.decode(t,t.uint32())},e.verify=function(t){return typeof t!="object"||t===null?"object expected":t.domain!=null&&t.hasOwnProperty("domain")&&!P.isString(t.domain)?"domain: string expected":t.version!=null&&t.hasOwnProperty("version")&&!P.isInteger(t.version)&&!(t.version&&P.isInteger(t.version.low)&&P.isInteger(t.version.high))?"version: integer|Long expected":null},e.fromObject=function(t){if(t instanceof S.onnx.OperatorSetIdProto)return t;var o=new S.onnx.OperatorSetIdProto;return t.domain!=null&&(o.domain=String(t.domain)),t.version!=null&&(P.Long?(o.version=P.Long.fromValue(t.version)).unsigned=!1:typeof t.version=="string"?o.version=parseInt(t.version,10):typeof t.version=="number"?o.version=t.version:typeof t.version=="object"&&(o.version=new P.LongBits(t.version.low>>>0,t.version.high>>>0).toNumber())),o},e.toObject=function(t,o){o||(o={});var i={};if(o.defaults)if(i.domain="",P.Long){var s=new P.Long(0,0,!1);i.version=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.version=o.longs===String?"0":0;return t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.version!=null&&t.hasOwnProperty("version")&&(typeof t.version=="number"?i.version=o.longs===String?String(t.version):t.version:i.version=o.longs===String?P.Long.prototype.toString.call(t.version):o.longs===Number?new P.LongBits(t.version.low>>>0,t.version.high>>>0).toNumber():t.version),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,tt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.OperatorSetIdProto"},e}(),r.OperatorStatus=function(){var e={},n=Object.create(e);return n[e[0]="EXPERIMENTAL"]=0,n[e[1]="STABLE"]=1,n}(),r.FunctionProto=function(){function e(n){if(this.input=[],this.output=[],this.attribute=[],this.attributeProto=[],this.node=[],this.opsetImport=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.input=P.emptyArray,e.prototype.output=P.emptyArray,e.prototype.attribute=P.emptyArray,e.prototype.attributeProto=P.emptyArray,e.prototype.node=P.emptyArray,e.prototype.docString="",e.prototype.opsetImport=P.emptyArray,e.prototype.domain="",e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=ct.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)o.uint32(34).string(t.input[i]);if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)o.uint32(42).string(t.output[i]);if(t.attribute!=null&&t.attribute.length)for(var i=0;i<t.attribute.length;++i)o.uint32(50).string(t.attribute[i]);if(t.node!=null&&t.node.length)for(var i=0;i<t.node.length;++i)S.onnx.NodeProto.encode(t.node[i],o.uint32(58).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(66).string(t.docString),t.opsetImport!=null&&t.opsetImport.length)for(var i=0;i<t.opsetImport.length;++i)S.onnx.OperatorSetIdProto.encode(t.opsetImport[i],o.uint32(74).fork()).ldelim();if(t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(82).string(t.domain),t.attributeProto!=null&&t.attributeProto.length)for(var i=0;i<t.attributeProto.length;++i)S.onnx.AttributeProto.encode(t.attributeProto[i],o.uint32(90).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ie||(t=ie.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new S.onnx.FunctionProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.name=t.string();break}case 4:{s.input&&s.input.length||(s.input=[]),s.input.push(t.string());break}case 5:{s.output&&s.output.length||(s.output=[]),s.output.push(t.string());break}case 6:{s.attribute&&s.attribute.length||(s.attribute=[]),s.attribute.push(t.string());break}case 11:{s.attributeProto&&s.attributeProto.length||(s.attributeProto=[]),s.attributeProto.push(S.onnx.AttributeProto.decode(t,t.uint32()));break}case 7:{s.node&&s.node.length||(s.node=[]),s.node.push(S.onnx.NodeProto.decode(t,t.uint32()));break}case 8:{s.docString=t.string();break}case 9:{s.opsetImport&&s.opsetImport.length||(s.opsetImport=[]),s.opsetImport.push(S.onnx.OperatorSetIdProto.decode(t,t.uint32()));break}case 10:{s.domain=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ie||(t=new ie(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!P.isString(t.name))return"name: string expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o)if(!P.isString(t.input[o]))return"input: string[] expected"}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o)if(!P.isString(t.output[o]))return"output: string[] expected"}if(t.attribute!=null&&t.hasOwnProperty("attribute")){if(!Array.isArray(t.attribute))return"attribute: array expected";for(var o=0;o<t.attribute.length;++o)if(!P.isString(t.attribute[o]))return"attribute: string[] expected"}if(t.attributeProto!=null&&t.hasOwnProperty("attributeProto")){if(!Array.isArray(t.attributeProto))return"attributeProto: array expected";for(var o=0;o<t.attributeProto.length;++o){var i=S.onnx.AttributeProto.verify(t.attributeProto[o]);if(i)return"attributeProto."+i}}if(t.node!=null&&t.hasOwnProperty("node")){if(!Array.isArray(t.node))return"node: array expected";for(var o=0;o<t.node.length;++o){var i=S.onnx.NodeProto.verify(t.node[o]);if(i)return"node."+i}}if(t.docString!=null&&t.hasOwnProperty("docString")&&!P.isString(t.docString))return"docString: string expected";if(t.opsetImport!=null&&t.hasOwnProperty("opsetImport")){if(!Array.isArray(t.opsetImport))return"opsetImport: array expected";for(var o=0;o<t.opsetImport.length;++o){var i=S.onnx.OperatorSetIdProto.verify(t.opsetImport[o]);if(i)return"opsetImport."+i}}return t.domain!=null&&t.hasOwnProperty("domain")&&!P.isString(t.domain)?"domain: string expected":null},e.fromObject=function(t){if(t instanceof S.onnx.FunctionProto)return t;var o=new S.onnx.FunctionProto;if(t.name!=null&&(o.name=String(t.name)),t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.FunctionProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i)o.input[i]=String(t.input[i])}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.FunctionProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i)o.output[i]=String(t.output[i])}if(t.attribute){if(!Array.isArray(t.attribute))throw TypeError(".onnx.FunctionProto.attribute: array expected");o.attribute=[];for(var i=0;i<t.attribute.length;++i)o.attribute[i]=String(t.attribute[i])}if(t.attributeProto){if(!Array.isArray(t.attributeProto))throw TypeError(".onnx.FunctionProto.attributeProto: array expected");o.attributeProto=[];for(var i=0;i<t.attributeProto.length;++i){if(typeof t.attributeProto[i]!="object")throw TypeError(".onnx.FunctionProto.attributeProto: object expected");o.attributeProto[i]=S.onnx.AttributeProto.fromObject(t.attributeProto[i])}}if(t.node){if(!Array.isArray(t.node))throw TypeError(".onnx.FunctionProto.node: array expected");o.node=[];for(var i=0;i<t.node.length;++i){if(typeof t.node[i]!="object")throw TypeError(".onnx.FunctionProto.node: object expected");o.node[i]=S.onnx.NodeProto.fromObject(t.node[i])}}if(t.docString!=null&&(o.docString=String(t.docString)),t.opsetImport){if(!Array.isArray(t.opsetImport))throw TypeError(".onnx.FunctionProto.opsetImport: array expected");o.opsetImport=[];for(var i=0;i<t.opsetImport.length;++i){if(typeof t.opsetImport[i]!="object")throw TypeError(".onnx.FunctionProto.opsetImport: object expected");o.opsetImport[i]=S.onnx.OperatorSetIdProto.fromObject(t.opsetImport[i])}}return t.domain!=null&&(o.domain=String(t.domain)),o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.input=[],i.output=[],i.attribute=[],i.node=[],i.opsetImport=[],i.attributeProto=[]),o.defaults&&(i.name="",i.docString="",i.domain=""),t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.input&&t.input.length){i.input=[];for(var s=0;s<t.input.length;++s)i.input[s]=t.input[s]}if(t.output&&t.output.length){i.output=[];for(var s=0;s<t.output.length;++s)i.output[s]=t.output[s]}if(t.attribute&&t.attribute.length){i.attribute=[];for(var s=0;s<t.attribute.length;++s)i.attribute[s]=t.attribute[s]}if(t.node&&t.node.length){i.node=[];for(var s=0;s<t.node.length;++s)i.node[s]=S.onnx.NodeProto.toObject(t.node[s],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.opsetImport&&t.opsetImport.length){i.opsetImport=[];for(var s=0;s<t.opsetImport.length;++s)i.opsetImport[s]=S.onnx.OperatorSetIdProto.toObject(t.opsetImport[s],o)}if(t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.attributeProto&&t.attributeProto.length){i.attributeProto=[];for(var s=0;s<t.attributeProto.length;++s)i.attributeProto[s]=S.onnx.AttributeProto.toObject(t.attributeProto[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,tt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.FunctionProto"},e}(),r}();$c.exports=S});function Kn(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function zo(r){return new TextDecoder().decode(r)}var rt,Tn,zs,Nt,ji,Et,Kt,le,Ro,$n,_n,Sn,Ke=R(()=>{"use strict";Ui();Ts();rt=Gn(jn());In();Tn=class{static arraysEqual(e,n){if(e.length!==n.length)return!1;for(let t=0;t<e.length;t++)if(e[t]!==n[t])return!1;return!0}},zs=class{static preprocessInputShapes(e,n){let t=e.length===1?[1,e[0]]:e,o=n.length===1?[n[0],1]:n;return[t,o]}static postprocessOutputShape(e,n,t){n===1&&e.splice(e.length-2,1),t===1&&e.pop()}static calcMatMulShape(e,n){return e[1]!==n[0]?void 0:[e[0],n[1]]}},Nt=class r{static calcShape(e,n,t=!1){let o=e.length,i=n.length;if(o===0)return n;if(i===0)return e;let s=Math.max(e.length,n.length),a=new Array(s);if(t){if(o<2||i<2)return;let u=zs.calcMatMulShape([e[o-2],e[o-1]],[n[i-2],n[i-1]]);if(u===void 0)return;[a[s-2],a[s-1]]=u}for(let u=t?3:1;u<=s;u++){let l=o-u<0?1:e[o-u],d=i-u<0?1:n[i-u];if(l!==d&&l>1&&d>1)return;a[s-u]=Math.max(l,d)}return a}static index(e,n){let t=new Array(n.length);return r.fillIndex(e,n,t),t}static fillIndex(e,n,t){let o=e.length-n.length;for(let i=0;i<n.length;i++)t[i]=e[o+i]%n[i]}static calc(e,n,t,o,i){let s=r.calcShape(e.dims,n.dims);if(s){if(o&&!le.areEqual(s,e.dims))return;let a=le.size(s),u=o?e:new mt(s,i||e.type);if(s.length===0)u.set([],t(e.get([]),n.get([])));else{let l=new Array(s.length),d=new Array(e.dims.length),h=new Array(n.dims.length),m=0,b=0,y=!1,x=!1;e.dims.length===0&&(m=e.get([]),y=!0),n.dims.length===0&&(b=n.get([]),x=!0);let A;for(let I=0;I<a;I++){A=I;for(let $=s.length-1;$>=0;$--)l[$]=A%s[$],A=Math.floor(A/s[$]);y||(r.fillIndex(l,e.dims,d),m=e.get(d)),x||(r.fillIndex(l,n.dims,h),b=n.get(h)),u.set(l,t(m,b))}}return u}}static isValidBroadcast(e,n){let t=e.length,o=n.length;if(t>o)return!1;for(let i=1;i<=t;i++)if(e[t-i]!==1&&e[t-i]!==n[o-i])return!1;return!0}static getBroadcastDims(e,n){let t=e.length,o=[];for(let i=0;i<t;i++){let s=t-1-i,a=e[s]||1;(n[n.length-1-i]||1)>1&&a===1&&o.unshift(s)}return o}},ji=class{static getShapeOfGemmResult(e,n,t,o,i){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let s,a,u;n?(s=e[1],a=e[0]):(s=e[0],a=e[1]);let l=-1;if(o?(u=t[0],l=1):(u=t[1],l=0),t[l]!==a)throw new Error("dimension mismatch");if(s<=0||u<=0||a<=0)throw new Error("invalid shape specified");if(i&&!Nt.isValidBroadcast(i,[s,u]))throw new Error("gemm: invalid bias shape for broadcast");return[s,u,a]}},Et=class r{static tensorDataTypeFromProto(e){switch(e){case rt.onnx.TensorProto.DataType.INT8:return"int8";case rt.onnx.TensorProto.DataType.UINT8:return"uint8";case rt.onnx.TensorProto.DataType.BOOL:return"bool";case rt.onnx.TensorProto.DataType.INT16:return"int16";case rt.onnx.TensorProto.DataType.UINT16:return"uint16";case rt.onnx.TensorProto.DataType.INT32:return"int32";case rt.onnx.TensorProto.DataType.UINT32:return"uint32";case rt.onnx.TensorProto.DataType.FLOAT:return"float32";case rt.onnx.TensorProto.DataType.DOUBLE:return"float64";case rt.onnx.TensorProto.DataType.STRING:return"string";case rt.onnx.TensorProto.DataType.INT64:return"int32";case rt.onnx.TensorProto.DataType.UINT64:return"uint32";default:throw new Error(`unsupported data type: ${rt.onnx.TensorProto.DataType[e]}`)}}static tensorDataTypeStringToEnum(e){switch(e){case"int8":return rt.onnx.TensorProto.DataType.INT8;case"uint8":return rt.onnx.TensorProto.DataType.UINT8;case"bool":return rt.onnx.TensorProto.DataType.BOOL;case"int16":return rt.onnx.TensorProto.DataType.INT16;case"uint16":return rt.onnx.TensorProto.DataType.UINT16;case"int32":return rt.onnx.TensorProto.DataType.INT32;case"uint32":return rt.onnx.TensorProto.DataType.UINT32;case"float32":return rt.onnx.TensorProto.DataType.FLOAT;case"float64":return rt.onnx.TensorProto.DataType.DOUBLE;case"string":return rt.onnx.TensorProto.DataType.STRING;case"int64":return rt.onnx.TensorProto.DataType.INT64;case"uint64":return rt.onnx.TensorProto.DataType.UINT64;default:throw new Error(`unsupported data type: ${e}`)}}static tensorDimsFromProto(e){return e.map(n=>Wr.isLong(n)?n.toNumber():n)}static tensorValueTypeFromProto(e){return{tensorType:r.tensorDataTypeFromProto(e.elemType),shape:{dims:r.tensorDimsFromProto(e.shape.dim.map(n=>n.dimValue))}}}static tensorDimsFromORTFormat(e){let n=[];for(let t=0;t<e.dimsLength();t++)n.push(Kt.longToNumber(e.dims(t)));return n}static tensorAttributesFromORTFormat(e){let n=[];for(let t=0;t<e.attributesLength();t++)n.push(e.attributes(t));return n}},Kt=class{static longToNumber(e,n){return Wr.isLong(e)?e.toNumber():e instanceof B.Long?Wr.fromValue({low:e.low,high:e.high,unsigned:n??!1}).toNumber():e}static isLong(e){return Wr.isLong(e)||e instanceof B.Long}},le=class r{static size(e){return r.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,n,e.length)}static sizeToDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,0,n)}static getSizeFromDimensionRange(e,n,t){let o=1;for(let i=n;i<t;i++){if(e[i]<=0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.");o*=e[i]}return o}static computeStrides(e){let n=e.length;if(n===0)return[];if(n===1)return[1];let t=new Array(n);t[n-1]=1,t[n-2]=e[n-1];for(let o=n-3;o>=0;--o)t[o]=t[o+1]*e[o+1];return t}static transpose(e){return e.slice().reverse()}static indicesToOffset(e,n,t){t===void 0&&(t=e.length);let o=0;for(let i=0;i<t;++i)o+=n[i]*e[i];return o}static offsetToIndices(e,n){let t=n.length;if(t===0)return[];if(t===1)return[e*n[0]];let o=new Array(n.length);for(let i=0;i<o.length-1;++i)o[i]=Math.floor(e/n[i]),e-=o[i]*n[i];return o[o.length-1]=e,o}static normalizeAxis(e,n){if(e<-n&&e>=n)throw new Error("unsupported axis for this operation.");return e<0?e+n:e}static normalizeAxes(e,n){return e.map(t=>this.normalizeAxis(t,n))}static incrementIndex(e,n,t){if(n.length===0||e.length===0)throw new Error("Index incrementing unsupported for scalar Tensor");if(t===void 0)t=n.length;else if(t<=0||t>n.length)throw new Error("Incorrect axis to increment on");for(let o=t-1;o>=0&&(e[o]++,!(e[o]<n[o]));--o)e[o]=0}static calculateReshapedDims(e,n){if(n.length===0){if(e.length===0||r.size(e)===1)return[];throw new Error("cannot reshape to a scalar Tensor")}let t=n.length,o=new Array(t),i=-1,s=1;for(let u=0;u<t;u++){if(n[u]<-1)throw new Error("a dimension in shape hints cannot be less than -1");if(n[u]===-1){if(i!==-1)throw new Error("at most one dimension in shape hints can be -1");i=u}else{if(n[u]===0){if(u>=e.length)throw new Error("the dimension with value zero exceeds the dimension size of the input tensor");o[u]=e[u]}else o[u]=n[u];s*=o[u]}}let a=r.size(e);if(i!==-1){if(a%s!==0)throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${e}] Output shape: [${n}]`);o[i]=a/s}else if(s!==a)throw new Error("reshapedDims and originalDims don't have matching sizes");return o}static sortBasedOnPerm(e,n){return n?n.map(t=>e[t]):e.slice().reverse()}static padShape(e,n){let t=e.length;return e.map((o,i)=>o+n[i]+n[i+t])}static areEqual(e,n){return e.length!==n.length?!1:e.every((t,o)=>t===n[o])}static validateDimsAndCalcSize(e){if(e.length>6)throw new TypeError("Only rank 0 to 6 is supported for tensor shape.");let n=1;for(let t of e){if(!Number.isInteger(t))throw new TypeError(`Invalid shape: ${t} is not an integer`);if(t<0||t>2147483647)throw new TypeError(`Invalid shape: length ${t} is not allowed`);n*=t}return n}static flattenShape(e,n){n<0&&(n+=e.length);let t=e.reduce((s,a)=>s*a,1),o=e.slice(n).reduce((s,a)=>s*a,1);return[t/o,o]}static squeezeShape(e,n){let t=new Array;n=r.normalizeAxes(n,e.length);for(let o=0;o<e.length;o++){let i=n.indexOf(o)>=0;if(i&&e[o]!==1)throw new Error("squeeze an axis of size different than 1");(n.length===0&&e[o]>1||n.length>0&&!i)&&t.push(e[o])}return t}static unsqueezeShape(e,n){let t=new Array(e.length+n.length);t.fill(0);for(let i=0;i<n.length;i++){let s=r.normalizeAxis(n[i],t.length);if(s>=t.length)throw new Error("'axes' has an out of range axis");if(t[s]!==0)throw new Error("'axes' has a duplicate axis");t[s]=1}let o=0;for(let i=0;i<t.length;i++)t[i]===0&&(t[i]=e[o++]);if(o!==e.length)throw new Error("the unsqueezed dimension could not be established");return t}},Ro=class r{static splitShape(e,n,t,o){if(t.length===0){if(!o)throw new Error("need to know number of outputs when the 'split' attribute is not specified");r.determineSplit(e[n],o,t)}let i=[],s=[0];for(let a=0;a<t.length;++a){a!==0&&s.push(s[a-1]+t[a-1]);let u=e.slice();u[n]=t[a],i.push(u)}return[i,s]}static determineSplit(e,n,t){if(e%n!==0)throw new Error("cannot split tensor to equal sized parts");for(let o=0;o<n;++o)t.push(e/n)}},$n=class r{static adjustPoolAttributes(e,n,t,o,i,s){if(!e&&t.length!==n.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let a=0;a<n.length-2;a++)a>=t.length?t.push(n[a+2]):t[a]=n[a+2];for(let a=0;a<t.length;a++)if(a<o.length){if(o[a]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let a=0;a<t.length;a++)if(a<i.length){if(i[a]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let a=0;a<t.length*2;a++)if(a<s.length){if(s[a]<0)throw new Error("pad should be greater than or equal to 1")}else s.push(0);for(let a=0;a<t.length;a++){if(t[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(s[a]>=t[a]||s[a+t.length]>=t[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,n,t,o,i,s){if(s){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let a=0;a<e.length-2;a++)r.adjustPadAndReturnShape(e[a+2],n[a],t[a],o[a],i,a,a+e.length-2,s)}}static computePoolOutputShape(e,n,t,o,i,s,a){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let u=[n[0],n[1]];return r.computeShapeHelper(e,n,u,t,o,i,s,a),u}static computeConvOutputShape(e,n,t,o,i,s,a){if(e.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let u=[e[0],n[0]];return r.computeShapeHelper(!1,e,u,t,o,i,s,a),u}static computeShapeHelper(e,n,t,o,i,s,a,u){if(e)for(let l=0;l<n.length-2;l++)t.push(1);else for(let l=0;l<n.length-2;l++)t.push(r.adjustPadAndReturnShape(n[l+2],o[l],i[l],s[l],a,l,l+n.length-2,u))}static adjustPadAndReturnShape(e,n,t,o,i,s,a,u){let l=t*(o-1)+1;if(u&&u!=="NOTSET")switch(u){case"VALID":return i[s]=0,i[a]=0,Math.floor((e-l)/n+1);case"SAME_LOWER":case"SAME_UPPER":if(t!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let h=((e+n-1)/n-1)*n+o-e;return i[s]=Math.floor(u==="SAME_LOWER"?(h+1)/2:h/2),i[a]=h-i[s],Math.floor((e+h-o)/n+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+i[s]+i[a]-l)/n+1)}},_n=-34028234663852886e22,Sn=34028234663852886e22});function X0(r){switch(r){case"bool":case"int8":case"uint8":return 1;case"int16":case"uint16":return 2;case"int32":case"uint32":case"float32":return 4;case"float64":return 8;default:throw new Error(`cannot calculate sizeof() on type ${r}`)}}function _c(r){switch(r){case De.onnx.TensorProto.DataType.UINT8:case De.onnx.TensorProto.DataType.INT8:case De.onnx.TensorProto.DataType.BOOL:return 1;case De.onnx.TensorProto.DataType.UINT16:case De.onnx.TensorProto.DataType.INT16:return 2;case De.onnx.TensorProto.DataType.FLOAT:case De.onnx.TensorProto.DataType.INT32:case De.onnx.TensorProto.DataType.UINT32:return 4;case De.onnx.TensorProto.DataType.INT64:case De.onnx.TensorProto.DataType.DOUBLE:case De.onnx.TensorProto.DataType.UINT64:return 8;default:throw new Error(`cannot calculate sizeof() on type ${De.onnx.TensorProto.DataType[r]}`)}}function Z0(r,e){return new(Ac(e))(r)}function Ac(r){switch(r){case"bool":case"uint8":return Uint8Array;case"int8":return Int8Array;case"int16":return Int16Array;case"uint16":return Uint16Array;case"int32":return Int32Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"float32":return Float32Array;case"float64":return Float64Array;default:throw new Error("unspecified error")}}function Ms(r,e){if(e===De.onnx.TensorProto.DataType.INT64||e===Ls.TensorDataType.INT64){if(r.greaterThanOrEqual(2147483648)||r.lessThan(-2147483648))throw new TypeError("int64 is not supported")}else if(e===De.onnx.TensorProto.DataType.UINT32||e===Ls.TensorDataType.UINT32||e===De.onnx.TensorProto.DataType.UINT64||e===Ls.TensorDataType.UINT64){if(r.greaterThanOrEqual(4294967296)||r.lessThan(0))throw new TypeError("uint64 is not supported")}else throw new TypeError(`not a LONG type: ${De.onnx.TensorProto.DataType[e]}`);return r.toNumber()}function Sc(r,e,n){switch(e){case De.onnx.TensorProto.DataType.BOOL:case De.onnx.TensorProto.DataType.UINT8:return r.getUint8(n);case De.onnx.TensorProto.DataType.INT8:return r.getInt8(n);case De.onnx.TensorProto.DataType.UINT16:return r.getUint16(n,!0);case De.onnx.TensorProto.DataType.INT16:return r.getInt16(n,!0);case De.onnx.TensorProto.DataType.FLOAT:return r.getFloat32(n,!0);case De.onnx.TensorProto.DataType.INT32:return r.getInt32(n,!0);case De.onnx.TensorProto.DataType.UINT32:return r.getUint32(n,!0);case De.onnx.TensorProto.DataType.INT64:return Ms(Wr.fromBits(r.getUint32(n,!0),r.getUint32(n+4,!0),!1),e);case De.onnx.TensorProto.DataType.DOUBLE:return r.getFloat64(n,!0);case De.onnx.TensorProto.DataType.UINT64:return Ms(Wr.fromBits(r.getUint32(n,!0),r.getUint32(n+4,!0),!0),e);default:throw new Error(`cannot read from DataView for type ${De.onnx.TensorProto.DataType[e]}`)}}var Ic,De,Ls,mt,In=R(()=>{"use strict";Ic=Gn(md());Ts();Po();De=Gn(jn());Ke();Ls=ce.experimental.fbs,mt=class r{constructor(e,n,t,o,i,s=Ic.Guid.create()){this.dims=e;this.type=n;this.dataProvider=t;this.asyncDataProvider=o;this.cache=i;this.dataId=s;this.size=le.validateDimsAndCalcSize(e);let a=this.size,u=t===void 0&&o===void 0&&i===void 0;if(i!==void 0&&i.length!==a)throw new RangeError("Input dims doesn't match data length.");if(n==="string"){if(i!==void 0&&(!Array.isArray(i)||!i.every(l=>typeof l=="string")))throw new TypeError("cache should be a string array");u&&(this.cache=new Array(a))}else{if(i!==void 0){let l=Ac(n);if(!(i instanceof l))throw new TypeError(`cache should be type ${l.name}`)}if(u){let l=new ArrayBuffer(a*X0(n));this.cache=Z0(l,n)}}}get data(){if(this.cache===void 0){let e=this.dataProvider(this.dataId);if(e.length!==this.size)throw new Error("Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.");this.cache=e}return this.cache}get stringData(){if(this.type!=="string")throw new TypeError("data type is not string");return this.data}get integerData(){switch(this.type){case"uint8":case"int8":case"uint16":case"int16":case"int32":case"uint32":case"bool":return this.data;default:throw new TypeError("data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)")}}get floatData(){switch(this.type){case"float32":case"float64":return this.data;default:throw new TypeError("data type is not float (float32, float64)")}}get numberData(){if(this.type!=="string")return this.data;throw new TypeError("type cannot be non-number (string)")}get(e){return this.data[le.indicesToOffset(e,this.strides)]}set(e,n){this.data[le.indicesToOffset(e,this.strides)]=n}async getData(){return this.cache===void 0&&(this.cache=await this.asyncDataProvider(this.dataId)),this.cache}get strides(){return this._strides||(this._strides=le.computeStrides(this.dims)),this._strides}static fromProto(e){if(!e)throw new Error("cannot construct Value from an empty tensor");let n=Et.tensorDataTypeFromProto(e.dataType),t=Et.tensorDimsFromProto(e.dims),o=new r(t,n);if(n==="string")e.stringData.forEach((i,s)=>{o.data[s]=zo(i)});else if(e.rawData&&typeof e.rawData.byteLength=="number"&&e.rawData.byteLength>0){let i=o.data,s=new DataView(e.rawData.buffer,e.rawData.byteOffset,e.rawData.byteLength),a=_c(e.dataType),u=e.rawData.byteLength/a;if(e.rawData.byteLength%a!==0)throw new Error("invalid buffer length");if(i.length!==u)throw new Error("buffer length mismatch");for(let l=0;l<u;l++){let d=Sc(s,e.dataType,l*a);i[l]=d}}else{let i;switch(e.dataType){case De.onnx.TensorProto.DataType.FLOAT:i=e.floatData;break;case De.onnx.TensorProto.DataType.INT32:case De.onnx.TensorProto.DataType.INT16:case De.onnx.TensorProto.DataType.UINT16:case De.onnx.TensorProto.DataType.INT8:case De.onnx.TensorProto.DataType.UINT8:case De.onnx.TensorProto.DataType.BOOL:i=e.int32Data;break;case De.onnx.TensorProto.DataType.INT64:i=e.int64Data;break;case De.onnx.TensorProto.DataType.DOUBLE:i=e.doubleData;break;case De.onnx.TensorProto.DataType.UINT32:case De.onnx.TensorProto.DataType.UINT64:i=e.uint64Data;break;default:throw new Error("unspecific error")}if(i==null)throw new Error("failed to populate data from a tensorproto value");let s=o.data;if(s.length!==i.length)throw new Error("array length mismatch");for(let a=0;a<i.length;a++){let u=i[a];Wr.isLong(u)?s[a]=Ms(u,e.dataType):s[a]=u}}return o}static fromData(e,n,t){return new r(n,t,void 0,void 0,e)}static fromOrtTensor(e){if(!e)throw new Error("cannot construct Value from an empty tensor");let n=Et.tensorDimsFromORTFormat(e),t=Et.tensorDataTypeFromProto(e.dataType()),o=new r(n,t);if(t==="string")for(let i=0;i<e.stringDataLength();i++)o.data[i]=e.stringData(i);else if(e.rawDataArray()&&typeof e.rawDataLength()=="number"&&e.rawDataLength()>0){let i=o.data,s=new DataView(e.rawDataArray().buffer,e.rawDataArray().byteOffset,e.rawDataLength()),a=_c(e.dataType()),u=e.rawDataLength()/a;if(e.rawDataLength()%a!==0)throw new Error("invalid buffer length");if(i.length!==u)throw new Error("buffer length mismatch");for(let l=0;l<u;l++){let d=Sc(s,e.dataType(),l*a);i[l]=d}}return o}}});function ge(r){return r===1?J0:Q0}function Oc(r){let e=ge(r);return`${e.version}
      precision highp float;
      ${e.attribute} vec3 position;
      ${e.attribute} vec2 textureCoord;

      ${e.varyingVertex} vec2 TexCoords;

      void main()
      {
          gl_Position = vec4(position, 1.0);
          TexCoords = textureCoord;
      }`}function Ec(r){let e=ge(r);return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFrag} vec2 TexCoords;
    ${e.outputDeclaration}
    const vec2 halfCR = vec2(0.5, 0.5);

    // Custom vector types to handle higher dimenalities.
    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    `}function Cc(r,e){let n=ge(r);return`
  void main() {
    int indices[${e}];
    toVec(TexCoords, indices);
    vec4 result = vec4(process(indices));
    ${n.output} = result;
  }
  `}var J0,Q0,it=R(()=>{"use strict";J0={version:"",attribute:"attribute",varyingVertex:"varying",varyingFrag:"varying",texture2D:"texture2D",output:"gl_FragColor",outputDeclaration:""},Q0={version:"#version 300 es",attribute:"in",varyingVertex:"out",varyingFrag:"in",texture2D:"texture",output:"outputColor",outputDeclaration:"out vec4 outputColor;"}});var Ue=R(()=>{"use strict"});async function Ns(r,e=t=>0,n){return new Promise((t,o)=>{let i=0,s=()=>{if(r()){t();return}i++;let a=e(i);if(n!=null&&i>=n){o();return}setTimeout(s,a)};s()})}function Ki(r){return Kn(typeof r<"u"&&r.length!==0,()=>"empty string found for sampler name"),"get"+r.charAt(0).toUpperCase()+r.slice(1)}function Pc(r){return Kn(typeof r<"u"&&r.length!==0,()=>"empty string found for sampler name"),"get"+r.charAt(0).toUpperCase()+r.slice(1)+"AtOutCoords"}function Yn(r,e){let n=JSON.parse(JSON.stringify(r));return n=e,n}function Xn(r,e){return e.map(n=>r[n]).join(", ")}function Ft(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function yr(r=6){return["x","y","z","w","u","v"].slice(0,r)}var Sr=R(()=>{"use strict";Ke()});function ev(r,e){return yr(e).map(n=>`${r}.${n}`)}function Zn(r,e){return e===1?[r]:ev(r,e)}function Ir(){return`
    float getChannel(vec4 frag, int dim) {
      int modCoord = imod(dim, 2);
      return modCoord == 0 ? frag.r : frag.g;
    }

    float getChannel(vec4 frag, vec2 innerDims) {
      vec2 modCoord = mod(innerDims, 2.);
      return modCoord.x == 0. ?
        (modCoord.y == 0. ? frag.r : frag.g) :
        (modCoord.y == 0. ? frag.b : frag.a);
    }
  `}var An=R(()=>{"use strict";Sr()});function rv(r,e,n){if(r===0)return"false";if(r===1)return`rc > ${e[0]}`;let t="";for(let o=r-2;o<r;o++)t+=`${n[o]} >= ${e[o-r+2]}`,o<r-1&&(t+="||");return t}function nv(r,e){let n=r.length;if(n===0)return"getA(), 0, 0, 0";if(n===1)return`getA(rc),
            rc + 1 >= ${r[0]} ? 0. : getA(rc + 1),
            0, 0`;let t="r, c",o="r, cp1",i="rp1, c",s="rp1, cp1",a="";if(n>2)for(let u=0;u<n-2;++u)a=a+`${e[u]},`;return`getA(${a}${t}),
          rEdge ? 0. : getA(${a}${i}),
          cEdge ? 0. : getA(${a}${o}),
          rEdge || cEdge ? 0. : getA(${a}${s})`}function ov(r,e,n,t){return r===0||r===1?"":`
    int r = ${e[r-2]};
    int c = ${e[r-1]};
    int rp1 = ${e[r-2]} + 1;
    int cp1 = ${e[r-1]} + 1;
    bool rEdge = rp1 >= ${t};
    bool cEdge = cp1 >= ${n};
    `}var kc,tv,Dc,Bc=R(()=>{"use strict";it();Ue();Sr();An();kc={name:"pack",inputNames:["A"],inputTypes:[1]},tv=(r,e)=>{let n=ge(r.session.backend.glContext.version),t=e.dims,o=t.length,i=e.dims.length,s=Ft(i),a=Zn("rc",i),u=ov(i,a,t[t.length-2],t[t.length-1]),l;o===0?l=[1,1]:o===1?l=[t[0],1]:l=[t[i-1],t[i-2]];let d=rv(i,l,a),h=nv(t,a),m=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${d}) {
            ${n.output} = vec4(0);
          } else {
            ${u}

            ${n.output} = vec4(${h});
          }
        }
      `;return{...kc,hasMain:!0,output:{dims:e.dims,type:e.type,textureType:2},shaderSource:m}},Dc=(r,e)=>({...kc,get:()=>tv(r,e)})});function Fs(r){if(r.length===0)return[1,1,1];let e=1;for(let n=0;n<r.length-2;++n)e*=r[n];return[e,r.length>1?r[r.length-2]:1,r[r.length-1]]}function zc(r,e){let n=!1;return r.length===0||e.length===0?n=!0:r.length<2||e.length<2?n=r[r.length-1]===e[e.length-1]:n=r[r.length-1]===e[e.length-1]&&r[r.length-2]===e[e.length-2],n}function sv(r){let e=le.computeStrides(r),n=["b","r","c"],t="index";return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e.map((i,s)=>{let a=`int ${n[s]} = ${t} / ${i}`,u=s===e.length-1?`int ${n[s+1]} = ${t} - ${n[s]} * ${i}`:`index -= ${n[s]} * ${i}`;return`${a}; ${u};`}).join("")}
      return ivec3(b, r, c);
    }
  `}function uv(r){let e=le.computeStrides(r);return`
  int getFlattenedIndex(ivec3 coords) {
    // reverse y, z order
    return coords.x * ${e[0]} + coords.z * ${e[1]} + coords.y;
  }
`}var iv,av,Rc,Lc=R(()=>{"use strict";Ke();it();Ue();An();iv=r=>({name:"Reshape (packed)",inputTypes:[2],inputNames:["A"],cacheHint:`${r}`}),av=(r,e,n,t)=>{let o=e.dims,i=t,s="";for(let l=0;l<4;l++){let d="";switch(l){case 0:d="outputCoords = rc;";break;case 1:d="outputCoords = ivec3(rc.x, rc.y+1, rc.z);";break;case 2:d="outputCoords = ivec3(rc.x, rc.y, rc.z+1);";break;case 3:d="outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);";break;default:throw new Error}s+=`
        ${d}
        ${l>0?"if(outputCoords.y < rows && outputCoords.z < cols){":""}
          int flattenedIndex = getFlattenedIndex(outputCoords);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);
          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${l}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);

        ${l>0?"}":""}
      `}let a=ge(r.session.backend.glContext.version),u=`
      ${sv(o)}
      ${uv(i)}
      ${Ir()}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.0);

        ivec3 outputCoords;
        int rows = ${i[2]};
        int cols = ${i[1]};

        ${s}
        ${a.output} = result;
      }
    `;return{...n,output:{dims:i,type:e.type,textureType:2},shaderSource:u,hasMain:!0}},Rc=(r,e,n)=>{let t=iv(n);return{...t,get:()=>av(r,e,t,n)}}});var Vs,Mc=R(()=>{"use strict";it();Ue();Vs=(r,e)=>{let n=e.shape,t=ge(r.session.backend.glContext.version),o=`
    const float FLOAT_MAX = 1.70141184e38;
    const float FLOAT_MIN = 1.17549435e-38;

    bool isNaN(float val) {
      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;
    }

    highp vec4 encodeAsUint8(highp float v) {
      if (isNaN(v)) {
        return vec4(255, 255, 255, 255);
      }

      highp float av = abs(v);

      if(av < FLOAT_MIN) {
        return vec4(0.0, 0.0, 0.0, 0.0);
      } else if(v > FLOAT_MAX) {
        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
      } else if(v < -FLOAT_MAX) {
        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
      }

      highp vec4 c = vec4(0,0,0,0);

      highp float e = floor(log2(av));
      highp float m = exp2(fract(log2(av))) - 1.0;

      c[2] = floor(128.0 * m);
      m -= c[2] / 128.0;
      c[1] = floor(32768.0 * m);
      m -= c[1] / 32768.0;
      c[0] = floor(8388608.0 * m);

      highp float ebias = e + 127.0;
      c[3] = floor(ebias / 2.0);
      ebias -= c[3] * 2.0;
      c[2] += floor(ebias) * 128.0;

      c[3] += 128.0 * step(0.0, -v);

      return c / 255.0;
    }

    void main() {
      float value = ${t.texture2D}(X,TexCoords).r;
      ${t.output} = encodeAsUint8(value);
    }`,i={name:"Uint8Encode",inputTypes:[0],inputNames:["X"],output:{dims:n,type:e.tensor.type,textureType:3},shaderSource:o,hasMain:!0};return r.executeProgram(i,[e.tensor])}});function dv(r,e){if(r===1)return"rc";let n="";for(let t=0;t<r;t++)n+=e[t],t<r-1&&(n+=",");return n}var Nc,lv,Fc,Vc=R(()=>{"use strict";it();Ue();Sr();An();Nc={name:"unpack",inputNames:["A"],inputTypes:[2]},lv=(r,e)=>{let n=e.dims.length,t=Zn("rc",n),o=t.slice(-2),i=Ft(n),s=Ir(),u=e.dims.length===0?"":dv(n,t),l=n<=1?"rc":`vec2(${o.join(",")})`,d=ge(r.session.backend.glContext.version),h=`
    ${s}
    void main() {
      ${i} rc = getOutputCoords();

       // Sample the texture with the coords to get the rgba channel value.
       vec4 packedInput = getA(${u});

       ${d.output} = vec4(getChannel(packedInput, ${l}), 0, 0, 0);
     }
   `;return{...Nc,hasMain:!0,output:{dims:e.dims,type:e.type,textureType:0},shaderSource:h}},Fc=(r,e)=>({...Nc,get:()=>lv(r,e)})});var Yi,Lo,Xi,Mo=R(()=>{"use strict";nr();Yi=class{constructor(e,n=1){if(n===1)this.internalFormat=e.R32F,this.format=e.RED,this.textureType=e.FLOAT,this.channelSize=n;else if(n===4)this.internalFormat=e.RGBA32F,this.format=e.RGBA,this.textureType=e.FLOAT,this.channelSize=n;else throw new Error(`Invalid number of channels: ${n}`)}encode(e,n){let t,o;return e.constructor!==Float32Array&&(Ye.warning("Encoder","data was not of type Float32; creating new Float32Array"),o=new Float32Array(e)),n*this.channelSize>e.length?(Ye.warning("Encoder","Source data too small. Allocating larger array"),o=e,t=this.allocate(n*this.channelSize),o.forEach((i,s)=>t[s]=i)):(o=e,t=o),t}allocate(e){return new Float32Array(e*4)}decode(e,n){return this.channelSize===1?e.filter((o,i)=>i%4===0).subarray(0,n):e.subarray(0,n)}},Lo=class{constructor(e,n=1,t){if(n!==1&&n!==4)throw new Error(`Invalid number of channels: ${n}`);this.internalFormat=e.RGBA,this.format=e.RGBA,this.channelSize=n,this.textureType=t||e.FLOAT}encode(e,n){let t=e;return this.channelSize===1&&(Ye.verbose("Encoder","Exploding into a larger array"),t=this.allocate(n),e.forEach((o,i)=>t[i*4]=o)),t}allocate(e){return new Float32Array(e*4)}decode(e,n){return this.channelSize===1?e.filter((o,i)=>i%4===0).subarray(0,n):e.subarray(0,n)}},Xi=class{constructor(e,n=1){this.channelSize=4;if(n===1)this.internalFormat=e.ALPHA,this.format=e.ALPHA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=n;else if(n===4)this.internalFormat=e.RGBA,this.format=e.RGBA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=n;else throw new Error(`Invalid number of channels: ${n}`)}encode(e,n){return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}allocate(e){return new Uint8Array(e*this.channelSize)}decode(e,n){if(e instanceof Uint8Array)return e.subarray(0,n);throw new Error(`Invalid array type: ${e.constructor}`)}}});var No,Uc,Us,Gc=R(()=>{"use strict";Ke();Ue();No=(r,e,n)=>{let t=n===0||n===1?1:4,o=n===2,i=n===1||n===2,s=n===4?e.length-1:void 0,a=n===4?e.map((u,l)=>l===e.length-1?u*4:u):void 0;return Us(r,e,t,a,{isPacked:o,reverseWH:i,breakAxis:s})},Uc=(r,e,n)=>{let t=No(r,e,n);return[t.width,t.height]},Us=(r,e,n=1,t,o)=>{let i=!!(o&&o.isPacked),[s,a]=r.computeTextureWH(i&&t||e,o),u=e.length,l=e.slice(0);if(u===0&&(l=[1]),n===1)t=e;else if(i){if(n!==4)throw new Error("a packed texture must be 4-channel");t=e,u>0&&(l[u-1]=Math.ceil(l[u-1]/2)),u>1&&(l[u-2]=Math.ceil(l[u-2]/2))}else if(!t)throw new Error("Unpacked shape is needed when using channels > 1");return{width:s,height:a,channels:n,isPacked:i,shape:l,strides:le.computeStrides(l),unpackedShape:t,reversedWH:o&&o.reverseWH}}});var fv,Zi,Hc=R(()=>{"use strict";nr();In();Ke();Bc();Lc();Mc();Vc();Mo();Gc();Ue();fv=(r,e)=>{let n=e.map(o=>`${o.unpackedShape.join(",")};${o.width}x${o.height}`).join("_"),t=r.name;return r.cacheHint&&(t+="["+r.cacheHint+"]"),t+=":"+n,t},Zi=class{constructor(e){this.session=e;this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map}calculateTextureWidthAndHeight(e,n){return Uc(this.session.layoutStrategy,e,n)}executeProgram(e,n){if(n.length<e.inputNames.length)throw new Error(`Input size mustn't be less than ${e.inputNames.length}.`);if(e.inputNames.length!==e.inputTypes.length)throw new Error("input names size does not match input types");let t=[];for(let l=0;l<e.inputNames.length;++l)t[l]=this.getOrCreateTextureData(n[l],e.inputTypes[l]);let o=fv(e,t),i=this.session.programManager.getArtifact(o),s=i?i.programInfo:typeof e.get=="function"?e.get():e,a=No(this.session.layoutStrategy,s.output.dims,s.output.textureType),u=this.createTextureData(a,s.output.type);return i||(i=this.session.programManager.build(s,t,u),this.session.programManager.setArtifact(o,i)),this.runProgram(i,t,u),u}run(e,n){return this.executeProgram(e,n).tensor}runProgram(e,n,t){for(let o=0;o<n.length;++o)if(!!n[o].isPacked!=(e.programInfo.inputTypes[o]===2))throw new Error(`input[${o}] property packed inconsistent`);if(!!t.isPacked!=(e.programInfo.output.textureType===2))throw new Error("output property packed inconsistent");this.session.programManager.run(e,n,t)}getOrCreateTextureData(e,n){let t=this.getTextureData(e.dataId,n===2);if(!t&&(t=this.getTextureData(e.dataId,n!==2),t))return n===2?this.pack(t):this.unpack(t);if(!t){let o=No(this.session.layoutStrategy,e.dims,n);if(n===4){let a=e.dims;if(a.length===4){let u=[a[0],Math.ceil(a[1]*a[2]*a[3]/4)],l=No(this.session.layoutStrategy,u,n),d=e.numberData;if(a[1]*a[2]*a[3]%4!==0){let h=a[0],m=a[1]*a[2]*a[3],b=Math.ceil(m*1/4)*4,y=h*b;d=new Float32Array(y);for(let x=0;x<h;++x){let A=x*m,I=x*b+x%1*m;d.set(e.numberData.subarray(A,A+m),I)}}return this.createTextureData(l,e.type,d,e,1)}}if(n===2){let i=Us(this.session.layoutStrategy,e.dims,1,[],{reverseWH:!0}),s=this.createTextureData(i,e.type,e.numberData,e,1);t=this.pack(s)}else t=this.createTextureData(o,e.type,e.numberData,e,1)}return t}createTextureDataFromLayoutBindTensor(e,n,t,o){return this.createTextureData(e,n,t,o,1)}createTextureData(e,n,t,o,i){Ye.verbose("InferenceHandler",`Creating TextureData: layout:[${JSON.stringify(e)}]`);let s=this.session.textureManager.createTextureFromLayout(n,e,t,i);return this.createTextureDataFromTexture(e,n,s,o)}reshapeUnpacked(e,n){let t=this.getOrCreateTextureData(e,0),o={channels:t.channels,height:t.height,width:t.width,shape:n.length!==0?n:[1],strides:le.computeStrides(n),unpackedShape:n};return this.createTextureDataFromTexture(o,e.type,t.texture).tensor}reshapePacked(e,n){let t=this.getOrCreateTextureData(e,2);if(zc(e.dims,n)){let l={channels:t.channels,height:t.height,width:t.width,shape:n.length!==0?n:[1],strides:le.computeStrides(n),unpackedShape:n,isPacked:!0};return this.createTextureDataFromTexture(l,e.type,t.texture).tensor}let o=Fs(e.dims),i=Fs(n),s=this.reshapePacked(e,o),a=this.run(Rc(this,s,i),[s]);return this.reshapePacked(a,n)}cast(e,n){let t=this.getOrCreateTextureData(e,0);return this.createTextureDataFromTexture(t,n,t.texture).tensor}createTextureDataFromTexture(e,n,t,o,i){let s={...e,tensor:o||new mt(e.unpackedShape,n,a=>this.readTexture(s),async a=>this.readTextureAsync(s),void 0,i),texture:t};return this.setTextureData(s.tensor.dataId,s,e.isPacked),s}getTextureData(e,n=!1){return this.session.isInitializer(e)?this.session.getTextureData(e,n):n?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,n,t=!1){this.session.isInitializer(e)?this.session.setTextureData(e,n,t):(t?this.packedTextureDataCache:this.unpackedTextureDataCache).set(e,n)}isTextureLayoutCached(e,n=!1){return!!this.getTextureData(e.dataId,n)}dispose(){this.session.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(e=>this.session.textureManager.releaseTexture(e)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(e=>this.session.textureManager.releaseTexture(e)),this.unpackedTextureDataCache=new Map}readTexture(e){return e.isPacked?this.readTexture(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTexture(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat(Vs(this,e))}async readTextureAsync(e){return e.isPacked?this.readTextureAsync(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTextureAsync(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat(Vs(this,e))}pack(e){return this.executeProgram(Dc(this,e.tensor),[e.tensor])}unpack(e){return this.executeProgram(Fc(this,e.tensor),[e.tensor])}}});var Gs,Ce,_t=R(()=>{"use strict";Gs=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},Ce=r=>new Gs(r)});var qc,jc,Kc,pv,hv,Yc=R(()=>{"use strict";_t();it();Ue();qc={name:"BatchNormalization",inputNames:["A","Scale","B","Mean","Variance"],inputTypes:[0,0,0,0,0]},jc=(r,e,n)=>(hv(e),[r.run({...qc,cacheHint:n.cacheKey,get:()=>pv(r,e,n)},e)]),Kc=r=>{let e=r.attributes.getFloat("epsilon",1e-5),n=r.attributes.getFloat("momentum",.9),t=r.attributes.getInt("spatial",1);return Ce({epsilon:e,momentum:n,spatial:t})},pv=(r,e,n)=>{let t=ge(r.session.backend.glContext.version),o=e[0].dims.length,[i,s]=r.calculateTextureWidthAndHeight(e[1].dims,0),a=`
  float process(int[${o}] indices) {
    vec2 position = offsetToCoords(indices[1], ${i}, ${s});
    float scale = getColorAsFloat(${t.texture2D}(Scale, position));
    float mean = getColorAsFloat(${t.texture2D}(Mean, position));
    float variance = getColorAsFloat(${t.texture2D}(Variance, position));
    float b = getColorAsFloat(${t.texture2D}(B, position));

    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${n.epsilon})) ) + b;
  }`;return{...qc,output:{dims:e[0].dims,type:e[0].type,textureType:0},shaderSource:a}},hv=r=>{if(!r||r.length!==5)throw new Error("BatchNormalization requires 5 inputs.");let e=r[0],n=r[1],t=r[2],o=r[3],i=r[4];if(e.dims.length<3||n.dims.length!==1||t.dims.length!==1||o.dims.length!==1||i.dims.length!==1)throw new Error("invalid input shape.");if(n.dims[0]!==e.dims[1]||t.dims[0]!==e.dims[1]||o.dims[0]!==e.dims[1]||i.dims[0]!==e.dims[1])throw new Error("invalid input shape.");if(e.type!=="float32"&&e.type!=="float64"||n.type!=="float32"&&n.type!=="float64"||t.type!=="float32"&&t.type!=="float64"||o.type!=="float32"&&o.type!=="float64"||i.type!=="float32"&&i.type!=="float64")throw new Error("invalid input tensor types.")}});var Ji,sr,se,Fo,Qi,Hr=R(()=>{"use strict";Ji=class{constructor(e,n,t,o){this.glContext=e;this.programInfo=n;this.inputTextureLayouts=t;this.outputTextureLayout=o}},sr=class{constructor(e){this.context=e}},se=class{constructor(e,n){this.routineBody=e;this.dependencies=n}},Fo=class{constructor(e,n,t){this.name=e;t?this.dependencies=t:this.dependencies=[],n&&(this.routineBody=n)}addDependency(e){e&&this.dependencies.push(e)}},Qi=class{static returnOrderedNodes(e){if(!e||e.length===0)return[];if(e.length===1)return e;let n=new Set,t=new Set,o=new Array;return this.createOrderedNodes(e,n,t,o),o}static createOrderedNodes(e,n,t,o){for(let i=0;i<e.length;++i)this.dfsTraverse(e[i],n,t,o)}static dfsTraverse(e,n,t,o){if(!e||t.has(e.name))return;if(n.has(e.name))throw new Error("Cyclic dependency detected. Can't topologically sort routines needed for shader.");n.add(e.name);let i=e.dependencies;if(i&&i.length>0)for(let s=0;s<i.length;++s)this.dfsTraverse(i[s],n,t,o);o.push(e),t.add(e.name),n.delete(e.name)}}});function gv(){let r="add_";return{body:`
  float ${r}(float a, float b) {
    return a + b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 + v2;
  }
  `,name:r,type:0}}function bv(){let r="div_";return{body:`
  float ${r}(float a, float b) {
    return a / b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 / v2;
  }
  `,name:r,type:0}}function yv(){let r="mul_";return{body:`
  float ${r}(float a, float b) {
    return a * b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 * v2;
  }
  `,name:r,type:0}}function vv(){let r="sub_";return{body:`
  float ${r}(float a, float b) {
    return a - b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 - v2;
  }
  `,name:r,type:0}}function wv(){let r="equal_";return{body:`
  float ${r}(float a, float b) {
    return float(a == b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4(equal(v1, v2));
  }
  `,name:r,type:0}}function xv(){let r="greater_";return{body:`
  float ${r}(float a, float b) {
    return float(a > b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4( v1.r > v2.r ,
      v1.g > v2.g,
      v1.b > v2.b,
      v1.a > v2.a );
  }
  `,name:r,type:0}}function Tv(){let r="less_";return{body:`
  float ${r}(float a, float b) {
    return float(a < b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4( v1.r < v2.r ,
                v1.g < v2.g,
                v1.b < v2.b,
                v1.a < v2.a );
  }
  `,name:r,type:0}}function $v(){let r="and_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) && bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r && b2.r ,
                b1.g && b2.g,
                b1.b && b2.b,
                b1.a && b2.a );
  }
  `,name:r,type:0}}function _v(){let r="or_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) || bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r || b2.r ,
                b1.g || b2.g,
                b1.b || b2.b,
                b1.a || b2.a );
  }
  `,name:r,type:0}}function Sv(){let r="xor_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) ^^ bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r ^^ b2.r ,
                b1.g ^^ b2.g,
                b1.b ^^ b2.b,
                b1.a ^^ b2.a );
  }
  `,name:r,type:0}}function Iv(){return Ov("pow")}function Av(){let r="prelu_";return{body:`
  float ${r}(float a, float b) {
    return a < 0.0 ? a * b: a;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4(
      v1.r < 0.0 ? v1.r * v2.r: v1.r,
      v1.g < 0.0 ? v1.g * v2.g: v1.g,
      v1.b < 0.0 ? v1.b * v2.b: v1.b,
      v1.a < 0.0 ? v1.a * v2.a: v1.a
      );
  }
  `,name:r,type:0}}function Ov(r){let e=`${r}_`;return{body:`
  float ${e}(float a, float b) {
    return ${r}(a, b);
  }
  vec4 ${e}(vec4 v1, vec4 v2) {
    return ${r}(v1, v2);
  }
  `,name:e,type:0}}var ur,Ev,Xc,Zc,Jc,Qc,ef,tf,rf,nf,of,af,sf,uf,lf=R(()=>{"use strict";Ke();Hr();it();Ue();ur=(r,e,n,t=e[0].type,o)=>{let i=r.session.pack?2:0;return{name:n.name,inputNames:["A","B"],inputTypes:[i,i],cacheHint:o,get:()=>Ev(r,e,n,t)}},Ev=(r,e,n,t=e[0].type)=>{let o=r.session.pack?2:0,i=!le.areEqual(e[0].dims,e[1].dims),s=e[0].dims,a=r.session.pack;if(i){let d=Nt.calcShape(e[0].dims,e[1].dims,!1);if(!d)throw new Error("Can't perform binary op on the given tensors");s=d;let h=s.length,m=e[0].dims.length!==0?e[0].dims.length:1,b=e[1].dims.length!==0?e[1].dims.length:1,y=e[0].dims.length!==0?"bcastIndices_A(indices, aindices);":"aindices[0] = 0;",x=e[1].dims.length!==0?"bcastIndices_B(indices, bindices);":"bindices[0] = 0;",A=ge(r.session.backend.glContext.version),I=a?`
      ${n.body}
      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();
        vec4 result = ${n.name}(a, b);
        ${A.output} = result;
      }`:`
      ${n.body}
      float process(int indices[${h}]) {
        int aindices[${m}];
        int bindices[${b}];
        ${y}
        ${x}
        return ${n.name}(_A(aindices), _B(bindices));
      }`;return{name:n.name,inputNames:["A","B"],inputTypes:[o,o],output:{dims:s,type:t,textureType:o},shaderSource:I,hasMain:a}}let u=ge(r.session.backend.glContext.version),l=`
    ${n.body}
    void main() {
      vec4 v1 = ${u.texture2D}(A, TexCoords);
      vec4 v2 = ${u.texture2D}(B, TexCoords);
      vec4 result = ${n.name}(v1, v2);
      ${u.output} = result;
    }
    `;return{name:n.name,inputNames:["A","B"],inputTypes:[o,o],output:{dims:e[0].dims,type:t,textureType:o},shaderSource:l,hasMain:!0}},Xc=(r,e)=>[r.run(ur(r,e,gv()),e)],Zc=(r,e)=>[r.run(ur(r,e,$v(),"bool"),e)],Jc=(r,e)=>[r.run(ur(r,e,bv()),e)],Qc=(r,e)=>[r.run(ur(r,e,wv(),"bool"),e)],ef=(r,e)=>[r.run(ur(r,e,xv(),"bool"),e)],tf=(r,e)=>[r.run(ur(r,e,Tv(),"bool"),e)],rf=(r,e)=>[r.run(ur(r,e,yv()),e)],nf=(r,e)=>[r.run(ur(r,e,_v(),"bool"),e)],of=(r,e)=>[r.run(ur(r,e,Iv()),e)],af=(r,e)=>[r.run(ur(r,e,Av()),e)],sf=(r,e)=>[r.run(ur(r,e,vv()),e)],uf=(r,e)=>[r.run(ur(r,e,Sv(),"bool"),e)]});var df,cf,Pv,ff=R(()=>{"use strict";Ke();df=(r,e,n)=>(Pv(e),[r.cast(e[0],n)]),cf=r=>Et.tensorDataTypeFromProto(r.attributes.getInt("to")),Pv=r=>{if(!r||r.length!==1)throw new Error("Cast requires 1 input.");if(r[0].type==="string")throw new Error("Invalid input type.")}});var kv,Dv,pf,ea,hf=R(()=>{"use strict";it();Ue();Sr();An();kv=(r,e)=>({name:"Concat (packed)",inputNames:Array.from({length:r},(n,t)=>`X${t}`),inputTypes:Array(r).fill(2),cacheHint:e}),Dv=(r,e,n,t)=>{let o=n[0].dims.slice();if(t>=o.length||t<-1*o.length)throw new Error("axis specified for concat doesn't match input dimensionality");t<0&&(t=o.length+t);let i=o.slice(0);for(let F=1;F<n.length;F++){let z=n[F].dims.slice();for(let G=0;G<o.length;G++)if(G===t)i[t]+=z[G];else if(o[G]!==z[G])throw new Error("non concat dimensions must match")}let s=i.length,a=Zn("coords",s),u=Ft(s),l=Ir(),d=n.map(F=>F.dims),h=yr(s),m=new Array(d.length-1);m[0]=d[0][t];for(let F=1;F<m.length;F++)m[F]=m[F-1]+d[F][t];let b=h[t],y=h.slice(-2),x=h.join(),A=`if (${b} < ${m[0]}) {
        return getChannel(
            getX0(${x}), vec2(${y.join()}));
        }`;for(let F=1;F<m.length;F++){let z=m[F-1];A+=`
            if (${b} < ${m[F]}  && ${b} >= ${m[F-1]}) {
              return getChannel(
                getX${F}(${ea(h,b,z)}),
                vec2(${ea(y,b,z)}));
            }`}let I=m.length,$=m[m.length-1];A+=`
            return getChannel(
              getX${I}(${ea(h,b,$)}),
              vec2(${ea(y,b,$)}));`;let O=ge(r.session.backend.glContext.version),E=`
          ${l}
          float getValue(${h.map(F=>"int "+F)}) {
            ${A}
          }

          void main() {
            ${u} coords = getOutputCoords();
            int lastDim = coords.${h[s-1]};
            coords.${h[s-1]} = coords.${h[s-2]};
            coords.${h[s-2]} = lastDim;

            vec4 result = vec4(getValue(${a}), 0., 0., 0.);

            ${a[s-1]} = ${a[s-1]} + 1;
            if (${a[s-1]} < ${i[s-1]}) {
              result.g = getValue(${a});
            }

            ${a[s-2]} = ${a[s-2]} + 1;
            if (${a[s-2]} < ${i[s-2]}) {
              result.a = getValue(${a});
            }

            ${a[s-1]} = ${a[s-1]} - 1;
            if (${a[s-2]} < ${i[s-2]} &&
                ${a[s-1]} < ${i[s-1]}) {
              result.b = getValue(${a});
            }
            ${O.output} = result;
          }
        `;return{...e,output:{dims:i,type:n[0].type,textureType:2},shaderSource:E,hasMain:!0}},pf=(r,e,n)=>{let t=kv(e.length,n.cacheKey);return{...t,get:()=>Dv(r,t,e,n.axis)}},ea=(r,e,n)=>{let t=r.indexOf(e);return r.map((i,s)=>s===t?`${i} - ${n}`:i).join()}});var mf,Bv,Rv,zv,gf,Lv,Mv,Nv,bf,Fv,yf=R(()=>{"use strict";_t();Ue();hf();mf=(r,e,n)=>(Fv(e),r.session.pack&&e[0].dims.length>1?[r.run(pf(r,e,n),e)]:[r.run(zv(r,e,n),e)]),Bv=(r,e)=>({name:"Concat",inputNames:Array.from({length:r},(n,t)=>`X${t}`),inputTypes:Array(r).fill(0),cacheHint:e}),Rv=(r,e,n,t)=>{let o=n[0].dims.slice();if(t>=o.length||t<-1*o.length)throw new Error("axis specified for concat doesn't match input dimensionality");t<0&&(t=o.length+t);let i=o.slice(0);for(let b=1;b<n.length;b++){let y=n[b].dims.slice();for(let x=0;x<o.length;x++)if(x===t)i[t]+=y[x];else if(o[x]!==y[x])throw new Error("non concat dimensions must match")}let s=i.length,a=new Array(n.length),u=0;for(let b=0;b<a.length;++b)u+=n[b].dims[t],a[b]=u;let l="";n.length<5?l=gf(a):l=Lv(a);let d=Mv(n.length,s),h=Nv(a),m=`
        ${d}
        ${h}
        ${l}
        float process(int indices[${s}]) {
          int textureIndex = getTextureWhereDataResides (indices[${t}]);

          if(textureIndex != 0) {
            indices[${t}] = indices[${t}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));
          }

          return fetchDataFromCorrectTexture(textureIndex, indices);
        }`;return{...e,output:{dims:i,type:n[0].type,textureType:0},shaderSource:m}},zv=(r,e,n)=>{let t=Bv(e.length,n.cacheKey);return{...t,get:()=>Rv(r,t,e,n.axis)}},gf=r=>`int getTextureWhereDataResides(int index) {
      ${r.map((n,t)=>`if(index<${n}) {return ${t};}
`).join("")}
    }`,Lv=r=>gf(r),Mv=(r,e)=>{let n=[`float fetchDataFromCorrectTexture(int textureIndex, int indices[${e}]) {`];for(let t=0;t<r;++t)t===0?n.push(`	if (textureIndex == ${t}) { return _X${t}(indices); }`):t===r-1?n.push(`	else { return _X${t}(indices); }`):n.push(`	else if (textureIndex == ${t}) { return _X${t}(indices); }`);return n.push("	}"),n.join(`
`)},Nv=r=>{let e=["int getSizeInConcatAxisValueFromIndex(int index) {"];for(let n=0;n<r.length;++n)n===0?e.push(`	if (index == ${n}) { return ${r[n]}; }`):n===r.length-1?e.push(`	else { return ${r[n]}; }`):e.push(`	else if (index == ${n}) { return ${r[n]}; }`);return e.push("	}"),e.join(`
`)},bf=r=>Ce({axis:r.attributes.getInt("axis")}),Fv=r=>{if(!r||r.length<1)throw new Error("too few inputs");let e=r[0].type,n=r[0].dims.length;if(e==="string")throw new Error("string tensor is not supported yet");for(let t of r){if(t.type!==e)throw new Error("input tensors should be one type");if(t.dims.length!==n)throw new Error("input tensors should have the same shape")}}});function Vv(){return lr("abs")}function Uv(){return lr("acos")}function Gv(){return lr("asin")}function Wv(){return lr("atan")}function Hv(){return lr("ceil")}function qv(){return lr("cos")}function jv(r){let e="elu";return{body:`
  const float alpha = float(${r});

  float ${e}_(float a) {
    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;
  }
  vec4 ${e}_(vec4 v) {
    return vec4(${e}_(v.x), ${e}_(v.y), ${e}_(v.z), ${e}_(v.w));
  }
  `,name:e,type:0}}function Kv(){return lr("exp")}function Yv(){return lr("floor")}function Ws(r,e){let n="clip";return{body:`
  const float min = float(${r});
  const float max = float(${e});

  float ${n}_(float a) {
    return clamp(a, min, max);
  }
  vec4 ${n}_(vec4 v) {
    return clamp(v, min, max);
  }
  `,name:n,type:0}}function Xv(){let r="indentity";return{body:`
  float ${r}_(float a) {
    return a;
  }
  vec4 ${r}_(vec4 v) {
    return v;
  }
  `,name:r,type:0}}function Zv(r){let e="leakyRelu";return{body:`
  const float alpha = float(${r});

  float ${e}_(float a) {
    return a < 0.0 ? a * alpha : a;
  }
  vec4 ${e}_(vec4 v) {
    return vec4(${e}_(v.x), ${e}_(v.y), ${e}_(v.z), ${e}_(v.w));
  }
  `,name:e,type:0}}function Jv(){return lr("log")}function Qv(){let r="neg";return{body:`
  float ${r}_(float a) {
    return -a;
  }
  vec4 ${r}_(vec4 v) {
    return -v;
  }
  `,name:r,type:0}}function ew(){let r="not";return{body:`
  float ${r}_(float a) {
    return float( ! bool(a) );
  }
  bool ${r}_(bool a) {
    return !a;
  }
  vec4 ${r}_(vec4 v) {
    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));
  }
  bvec4 ${r}_(bvec4 v) {
    return bvec4(!v.x, !v.y, !v.z, !v.w);
  }
  `,name:r,type:0}}function tw(){return lr("sin")}function Hs(){let r="relu";return{body:`
  float ${r}_(float a) {
    return max( a, 0.0 );
  }
  vec4 ${r}_(vec4 v) {
    return max( v, 0.0 );
  }
  `,name:r,type:0}}function qs(){let r="sigmoid";return{body:`
  float ${r}_(float a) {
    return 1.0 / (1.0 + exp(-a));
  }
  vec4 ${r}_(vec4 v) {
    return 1.0 / (1.0 + exp(-v));
  }
  `,name:r,type:0}}function rw(){return lr("sqrt")}function nw(){return lr("tan")}function ow(){let r="tanh";return{body:`
  float ${r}_(float a) {
    a = clamp(a, -10., 10.);
    a = exp(2.*a);
    return (a - 1.) / (a + 1.);
  }
  vec4 ${r}_(vec4 v) {
    v = clamp(v, -10., 10.);
    v = exp(2.*v);
    return (v - 1.) / (v + 1.);
  }
  `,name:r,type:0}}function lr(r){return{body:`
  float ${r}_(float a) {
    return ${r}(a);
  }
  vec4 ${r}_(vec4 v) {
    return ${r}(v);
  }
  `,name:r,type:0}}var iw,ft,vf,wf,xf,Tf,js,$f,_f,aw,Sf,If,Af,Of,Ef,Cf,Ks,Pf,kf,Df,Bf,Rf,zf,Lf,Mf,Nf,Ff,Vf,Ys=R(()=>{"use strict";_t();Ke();Hr();it();Ue();iw=(r,e,n,t)=>{let o=r.session.pack?2:0,i=ge(r.session.backend.glContext.version);return{...e,output:{dims:n.dims,type:n.type,textureType:o},shaderSource:`
     ${t.body}
     void main() {
       vec4 v = ${i.texture2D}(A, TexCoords);
       v = ${t.name}_(v);
       ${i.output} = v;
     }
     `,hasMain:!0}},ft=(r,e,n,t)=>{let o=r.session.pack?2:0,i={name:n.name,inputTypes:[o],inputNames:["A"],cacheHint:t};return{...i,get:()=>iw(r,i,e,n)}},vf=(r,e)=>[r.run(ft(r,e[0],Vv()),e)],wf=(r,e)=>[r.run(ft(r,e[0],Uv()),e)],xf=(r,e)=>[r.run(ft(r,e[0],Gv()),e)],Tf=(r,e)=>[r.run(ft(r,e[0],Wv()),e)],js=(r,e,n)=>[r.run(ft(r,e[0],Ws(n.min,n.max),n.cacheKey),e)],$f=r=>Ce({min:r.attributes.getFloat("min",_n),max:r.attributes.getFloat("max",Sn)}),_f=(r,e)=>{let n=aw(r,e);return js(r,[e[0]],n)},aw=(r,e)=>{if(e.length>=3&&(!r.session.isInitializer(e[1].dataId)||!r.session.isInitializer(e[2].dataId)))throw new Error("dynamic clip attributes are not allowed");let n=e.length>=3?e[1].numberData[0]:_n,t=e.length>=3?e[2].numberData[0]:Sn;return Ce({min:n,max:t})},Sf=(r,e)=>[r.run(ft(r,e[0],Hv()),e)],If=(r,e)=>[r.run(ft(r,e[0],qv()),e)],Af=(r,e,n)=>[r.run(ft(r,e[0],jv(n.alpha),n.cacheKey),e)],Of=r=>Ce({alpha:r.attributes.getFloat("alpha",1)}),Ef=(r,e)=>[r.run(ft(r,e[0],Kv()),e)],Cf=(r,e)=>[r.run(ft(r,e[0],Yv()),e)],Ks=(r,e)=>[r.run(ft(r,e[0],Xv()),e)],Pf=(r,e,n)=>[r.run(ft(r,e[0],Zv(n.alpha),n.cacheKey),e)],kf=r=>Ce({alpha:r.attributes.getFloat("alpha",.01)}),Df=(r,e)=>[r.run(ft(r,e[0],Jv()),e)],Bf=(r,e)=>[r.run(ft(r,e[0],Qv()),e)],Rf=(r,e)=>[r.run(ft(r,e[0],ew()),e)],zf=(r,e)=>[r.run(ft(r,e[0],Hs()),e)],Lf=(r,e)=>[r.run(ft(r,e[0],qs()),e)],Mf=(r,e)=>[r.run(ft(r,e[0],tw()),e)],Nf=(r,e)=>[r.run(ft(r,e[0],rw()),e)],Ff=(r,e)=>[r.run(ft(r,e[0],nw()),e)],Vf=(r,e)=>[r.run(ft(r,e[0],ow()),e)]});function Ar(r){let e;switch(r.activation){case"Relu":e=Hs();break;case"Sigmoid":e=qs();break;case"Clip":e=Ws(r.clipMin,r.clipMax);break;default:return{activationFunction:"",applyActivation:""}}let n=e.name,t=e.body,o=`value = ${n}_(value);`;return{activationFunction:t,applyActivation:o}}var Jn,On=R(()=>{"use strict";Ke();Ys();Jn=r=>{let e=r.getString("activation","");if(e==="Clip"){let[n,t]=r.getFloats("activation_params",[_n,Sn]);return{activation:e,clipMax:t,clipMin:n,activationCacheKey:`${e}:${n},${t}`}}return{activation:e,activationCacheKey:e}}});var uw,lw,Uf,Gf=R(()=>{"use strict";nr();it();Ue();ta();On();uw=(r,e)=>({name:"GroupedConv",inputNames:r?["X","W","Bias"]:["X","W"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e}),lw=(r,e,n,t)=>{let i=e.length>2?"value += getBias(output_channel);":"",s=e[0].dims.slice(),a=e[1].dims.slice(),u=a[0]/t.group;Ye.verbose("GroupedConv",`autpPad:${t.autoPad}, dilations:${t.dilations}, group:${t.group}, kernelShape:${t.kernelShape}, pads:${t.pads}, strides:${t.strides}`);let l=Qn(s,a,t.dilations,t.pads,t.strides),d=ge(r.session.backend.glContext.version),{activationFunction:h,applyActivation:m}=Ar(t),b=`
  const ivec2 strides = ivec2(${t.strides[0]}, ${t.strides[1]});
  const ivec2 pads = ivec2(${t.pads[0]}, ${t.pads[1]});
  ${h}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;
    ivec2 xRCCorner = coords.zw * strides - pads;
    int group_id = output_channel / ${u};

    float value = 0.0;
    for (int wInChannel = 0; wInChannel < ${a[1]}; wInChannel++) {
      int input_channel = group_id * ${a[1]} + wInChannel;
      for (int wHeight = 0; wHeight < ${a[2]}; wHeight++) {
        int xHeight = xRCCorner.x + wHeight * ${t.dilations[0]};

        if (xHeight < 0 || xHeight >= ${s[2]}) {
          continue;
        }

        for (int wWidth = 0; wWidth < ${a[3]}; wWidth++) {
          int xWidth = xRCCorner.y + wWidth * ${t.dilations[1]};
          if (xWidth < 0 || xWidth >= ${s[3]}) {
            continue;
          }

          float xVal = getX(batch, input_channel, xWidth, xHeight);
          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);
          value += xVal*wVal;
        }
      }
    }
    ${i}
    ${m}
    ${d.output} = vec4(value, .0, .0, .0);
  }
`;return{...n,output:{dims:l,type:e[0].type,textureType:0},shaderSource:b,hasMain:!0}},Uf=(r,e,n)=>{let t=uw(e.length>2,n.cacheKey);return{...t,get:()=>lw(r,e,t,n)}}});var dw,cw,Wf,Hf=R(()=>{"use strict";it();Ue();An();dw=r=>({name:"Im2Col (packed)",inputNames:["A"],inputTypes:[2],cacheHint:r}),cw=(r,e,n,t,o,i)=>{let s=n.dims,a=t.dims,u=2,l=3,d=o.length,h=[a[1]*a[2]*a[3],o[2]*o[3]],m=a[2]*a[3],b=Ir(),y=ge(r.session.backend.glContext.version),x="";for(let I=0;I<=1;I++)for(let $=0;$<=1;$++)x+=`
            blockIndex = rc.x + ${$};
            pos = rc.y + ${I};

            if(blockIndex < ${h[1]} && pos < ${h[0]}) {
              offsetY = int(blockIndex / (${o[d-1]})) * ${i.strides[0]} -
                ${i.pads[0]};
              d0 = offsetY + ${i.dilations[0]} * (imod(pos, ${m}) / ${a[2]});

              if(d0 < ${s[u]} && d0 >= 0) {
                offsetX = imod(blockIndex, ${o[d-1]}) * ${i.strides[1]} -
                  ${i.pads[1]};
                d1 = offsetX + ${i.dilations[1]} * imod(imod(pos, ${m}), ${a[2]});

                if(d1 < ${s[l]} && d1 >= 0) {

                  ch = int(float(pos)/ ${m}.);
                    innerDims = vec2(d0, d1);
                    result[${I*2+$}] = getChannel(
                      getA(0, ch, int(innerDims.x),
                      int(innerDims.y)), innerDims);
                }
              }
            }

          `;let A=`
      ${b}

      void main() {
        ivec2 rc = getOutputCoords();
          vec4 result = vec4(0.0);
          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
          vec2 innerDims;
          ${x}
          ${y.output} = result;
      }
            `;return{...e,output:{dims:h,type:n.type,textureType:2},shaderSource:A,hasMain:!0}},Wf=(r,e,n,t,o)=>{let i=dw(o.cacheKey);return{...i,get:()=>cw(r,i,e,n,t,o)}}});function pw(r,e,n){let t=e[0].dims,o=e[1].dims,i=Nt.calcShape(t,o,!0);if(!i)throw new Error("Can't use matmul on the given tensors");let s=Ft(i.length),a=yr(),{activationFunction:u,applyActivation:l}=Ar(n),d=e.length>2,h=d?"value += getBiasForMatmul();":"",m=d?`${Zs(s,a,e[2].dims,i,!1)}`:"",b=i.length,y=t.length,x=o.length,A=t[t.length-1],I=`
    ${u}
    ${m}
    float process(int indices[${b}]) {
        int a[${y}];
        int b[${x}];
        bcastMatmulIndices_A(indices, a);
        bcastMatmulIndices_B(indices, b);

        float value;
        for (int k=0; k<${A}; ++k) {
            a[${y-1}] = k;
            b[${x-2}] = k;
            value += _A(a) * _B(b);
        }
        ${h}
        ${l}
        return value;
    }`;return{...r,output:{dims:i,type:e[0].type,textureType:0},shaderSource:I}}function Xs(r,e){let n=fw(r.length>2,e.activationCacheKey);return{...n,get:()=>pw(n,r,e)}}function Zs(r,e,n,t,o){let i="",s=n.length,a=t.length,u=a-s;a<2&&s>0?i="coords":i=n.map((x,A)=>`coords.${e[A+u]}`).join(", ");let d=Nt.getBroadcastDims(n,t).map(x=>`coords.${e[x+u]} = 0;`).join(`
`),m=le.size(n)===1,b="vec4(outputValue.xx, outputValue.yy)";return m&&(b="vec4(outputValue.x)"),o?`
vec4 getBiasForMatmul() {
  ${r} coords = getOutputCoords();
  ${d}
  vec4 outputValue = getBias(${i});
  return ${b};
}`:`
float getBiasForMatmul() {
  ${r} coords = getOutputCoords();
  ${d}
  return getBias(coords.x);
}`}var qf,jf,fw,hw,ra=R(()=>{"use strict";Ke();Ue();Sr();On();Js();qf=(r,e,n)=>(hw(e),r.session.pack?[r.run(na(r,e,n),e)]:[r.run(Xs(e,n),e)]),jf=r=>Jn(r.attributes),fw=(r,e)=>({name:"MatMul",inputNames:r?["A","B","Bias"]:["A","B"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e});hw=r=>{if(!r||r.length!==2)throw new Error("MatMul requires 2 inputs.");if(r[0].dims[r[0].dims.length-1]!==r[1].dims[r[1].dims.length-2])throw new Error("shared dimension does not match.");if(r[0].type!=="float32"&&r[0].type!=="float64"||r[1].type!=="float32"&&r[1].type!=="float64")throw new Error("inputs should be float type");if(r[0].type!==r[1].type)throw new Error("inputs types should match")}});function bw(r,e,n,t){let o=[],i=[],s=n[0].dims,a=n[1].dims,u=s.length,l=a.length,d=t.length,h=d-u,m=d-l;o=s.map((O,E)=>`coords.${e[E+h]}`),o[u-1]="i*2",o.join(", "),i=a.map((O,E)=>`coords.${e[E+m]}`),i[l-2]="i*2",i.join(", ");let b=Nt.getBroadcastDims(s,t),y=Nt.getBroadcastDims(a,t),x=b.map(O=>`coords.${e[O+h]} = 0;`).join(`
`),A=y.map(O=>`coords.${e[O+m]} = 0;`).join(`
`),I=`int lastDim = coords.${e[d-1]};
  coords.${e[d-1]} = coords.${e[d-2]};
  coords.${e[d-2]} = lastDim;`;return`
vec4 getAAtOutCoordsMatmul(int i) {
  ${r} coords = getOutputCoords();
  ${I}
  ${x}
  vec4 outputValue = getA(${o});
  return outputValue;
}

vec4 getBAtOutCoordsMatmul(int i) {
  ${r} coords = getOutputCoords();
  ${I}
  ${A}
  vec4 outputValue = getB(${i});
  return outputValue;
}`}function yw(r,e){let n="";for(let t=0;t<e-2;t++)n+=`rc.${r[t]}, `;return n+=`rc.${r[e-2]}, i*2`,n}function vw(r,e){let n="";for(let t=0;t<e-2;t++)n+=`rc.${r[t]}, `;return n+=`i*2, rc.${r[e-1]}`,n}var mw,gw,na,Js=R(()=>{"use strict";Ke();it();Ue();Sr();On();ra();mw=(r,e)=>({name:"MatMul (packed)",inputNames:r?["A","B","Bias"]:["A","B"],inputTypes:r?[2,2,2]:[2,2],cacheHint:e}),gw=(r,e,n,t)=>{let o=n.length>2,i=o?"value += getBiasForMatmul();":"",s=n[0].dims,a=n[1].dims,u=Nt.calcShape(s,a,!0),l=!le.areEqual(n[0].dims,n[1].dims);if(!u)throw new Error("Can't use matmul on the given tensors");let d=s[s.length-1],h=Math.ceil(d/2),m=s.length,b=a.length,y=ge(r.session.backend.glContext.version),x=Ft(u.length),A=u.length,I=yr(),{activationFunction:$,applyActivation:O}=Ar(t),E=o?`${Zs(x,I,n[2].dims,u,!0)}`:"",F=l?`${bw(x,I,n,u)}`:"",z=l?"getAAtOutCoordsMatmul(i)":`getA(${yw(I,m)})`,G=l?"getBAtOutCoordsMatmul(i)":`getB(${vw(I,b)})`,j=l?"":`${x} rc =
          getOutputCoords(); int lastDim = rc.${I[A-1]}; rc.${I[A-1]} =
          rc.${I[A-2]}; rc.${I[A-2]} = lastDim;
      `,X=`
            ${F}
            ${E}
            ${$}
            void main() {
              ${j}

              vec4 value = vec4(0);
              for (int i = 0; i < ${h}; i++) {
                vec4 a = ${z};
                vec4 b = ${G};

                value += (a.rrbb * b.rgrg);
                value += (a.ggaa * b.baba);
              }
              ${i}
              ${O}
              ${y.output} = value;
            }`;return{...e,output:{dims:u,type:n[0].type,textureType:2},shaderSource:X,hasMain:!0}},na=(r,e,n)=>{let t=mw(e.length>2,n.activationCacheKey);return{...t,get:()=>gw(r,t,e,n)}}});var Kf,Yf=R(()=>{"use strict";ta();Hf();Js();Kf=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=Qn(t,o,n.dilations,n.pads,n.strides),s=r.run(Wf(r,e[0],e[1],i,n),[e[0]]),a=r.reshapePacked(e[1],[o[0],o[1]*o[2]*o[3]]),u=e.length===3?[a,s,e[2]]:[a,s],l=r.run(na(r,u,n),u);return r.reshapePacked(l,i)}});var ww,xw,Xf,Qs,eu=R(()=>{"use strict";Ue();ww=r=>({name:"Im2Col",inputNames:["X"],inputTypes:[0],cacheHint:r}),xw=(r,e,n,t,o,i)=>{let s=n.dims,a=t.dims,u=o.length,l=Qs(s,a,o,4),d=`
        const int XC = ${s[1]};
        const int XH = ${s[2]};
        const int XW = ${s[3]};
        const int KH = ${i.kernelShape[0]};
        const int KW = ${i.kernelShape[1]};
        const int dilationH = ${i.dilations[0]};
        const int dilationW = ${i.dilations[1]};
        const int strideH = ${i.strides[0]};
        const int strideW = ${i.strides[1]};
        const int padH = ${i.pads[0]};
        const int padW = ${i.pads[1]};
        const int KHKW = KH*KW;
        const int XCKHKW = XC * KHKW;
        const int outputChannels = 4;
        vec4 process(int indices[${u}]) {
          int b  = indices[0]; // batch size
          int oh = indices[1] * strideH - padH; //output height
          int ow = indices[2] * strideW - padW; //output width
          int p = indices[3] * outputChannels; //patch
          vec4 value = vec4(0.0);
          for(int i=0; i < outputChannels; ++i) {
            if(p < XCKHKW) {
              int patchC = p / KHKW;
              int patchH = (p - patchC*KHKW) / KW;
              int patchW = (p - patchC*KHKW) - patchH * KW;
              int xh2 = oh + patchH * dilationH;
              int xw2 = ow + patchW * dilationW;
              int x[${s.length}];
              x[0] = b;
              x[1] = patchC;
              x[2] = xh2;
              x[3] = xw2;
              if(xh2 >= 0 &&
                  xh2 < XH &&
                  xw2 >= 0 &&
                  xw2 < XW) {
                value[i] = _X(x);
              }
            }
            ++p;
          }
          return value;
        }
        `;return{...e,output:{dims:l,type:n.type,textureType:4},shaderSource:d}},Xf=(r,e,n,t,o)=>{let i=ww(o.cacheKey);return{...i,get:()=>xw(r,i,e,n,t,o)}},Qs=(r,e,n,t=4)=>[n[0],n[2],n[3],Math.ceil(r[1]*e[2]*e[3]/t)]});var Tw,$w,Zf,Jf=R(()=>{"use strict";Ke();it();Ue();On();eu();Tw=(r,e)=>({name:"ConvDotProduct",inputNames:r?["Im2Col","K","B"]:["Im2Col","K"],inputTypes:r?[0,4,0]:[0,4],cacheKey:e.activationCacheKey}),$w=(r,e,n,t,o)=>{let i=n[0].dims,s=n[1].dims,a=[s[0],Math.ceil(i[1]*s[2]*s[3]/4)],u=Qs(i,s,t),[l,d]=r.calculateTextureWidthAndHeight(a,4),h=le.computeStrides(u),[m,b]=r.calculateTextureWidthAndHeight(u,4),y=t.length,x=n.length<3?"0.0":"_B(b)",A=Math.ceil(i[1]*s[2]*s[3]/4),{activationFunction:I,applyActivation:$}=Ar(o),O=ge(r.session.backend.glContext.version),E=`
${I}
float process(int indices[${y}]) {
  int b[1];
  b[0] = indices[1];
  int im2col[4];
  im2col[0] = indices[0];
  im2col[1] = indices[2];
  im2col[2] = indices[3];
  int im2colOffset = im2col[0] * ${h[0]} + im2col[1] * ${h[1]} + im2col[2] * ${h[2]};
  int kernelOffset = indices[1] * ${a[1]};
  float value = ${x};
  for (int i = 0; i < ${A}; ++i) {
    vec2 im2colCoords = offsetToCoords(im2colOffset, ${m}, ${b});
    vec2 kernelCoords = offsetToCoords(kernelOffset, ${l}, ${d});
    value += dot(${O.texture2D}(Im2Col, im2colCoords), ${O.texture2D}(K, kernelCoords));
    ++im2colOffset;
    ++kernelOffset;
  }
  ${$}
  return value;
}`;return{...e,output:{dims:t,type:n[0].type,textureType:0},shaderSource:E}},Zf=(r,e,n,t)=>{let o=Tw(e.length>2,t);return{...o,get:()=>$w(r,o,e,n,t)}}});var Qn,tu,_w,Sw,Iw,Aw,ru,Ow,ta=R(()=>{"use strict";_t();Ke();Gf();Yf();Jf();On();eu();ra();Qn=(r,e,n,t,o)=>{let i=r[0],s=r.slice(2),a=s.length,u=e[0],d=e.slice(2).map((y,x)=>y+(y-1)*(n[x]-1)),m=s.map((y,x)=>y+t[x]+t[x+a]).map((y,x)=>Math.floor((y-d[x]+o[x])/o[x]));return[i,u].concat(...m)},tu=(r,e,n)=>(Ow(e,n),_w(r,e,n)),_w=(r,e,n)=>{let t=Aw(n,e),o=r.session.pack,i=t.kernelShape[0]===1&&t.kernelShape[1]===1;return t.group>1?[r.run(Uf(r,e,t),e)]:i&&o?[Sw(r,e,t)]:o&&e[0].dims.length===4&&e[0].dims[0]===1&&!i?[Kf(r,e,t)]:[Iw(r,e,t)]},Sw=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=Qn(t,o,n.dilations,n.pads,n.strides),s=r.reshapeUnpacked(e[0],[t[1],t[2]*t[3]]),a=r.reshapeUnpacked(e[1],[o[0],o[1]]),u=e.length>2?[a,s,e[2]]:[a,s],l=r.run(Xs(u,n),u);return r.reshapeUnpacked(l,i)},Iw=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=Qn(t,o,n.dilations,n.pads,n.strides),s=r.run(Xf(r,e[0],e[1],i,n),[e[0]]),a=e.length===3?[s,e[1],e[2]]:[s,e[1]];return r.run(Zf(r,e,i,n),a)},Aw=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0)for(let i=2;i<e[1].dims.length;++i)n.push(e[1].dims[i]);let t=r.pads.slice();$n.adjustPadsBasedOnAutoPad(e[0].dims,r.strides,r.dilations,n,t,r.autoPad);let o=Object.assign({},r);return Object.assign(o,{kernelShape:n,pads:t,cacheKey:r.cacheKey}),o},ru=r=>{let e=r.attributes,n=Jn(e),t=e.getString("auto_pad","NOTSET"),o=e.getInts("dilations",[1,1]),i=e.getInt("group",1),s=e.getInts("kernel_shape",[]),a=e.getInts("pads",[0,0,0,0]),u=e.getInts("strides",[1,1]);return Ce({autoPad:t,dilations:o,group:i,kernelShape:s,pads:a,strides:u,...n})},Ow=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4||r[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");let n=r[0].dims[1],t=r[1].dims[1]*e.group;if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(r.length===3&&(r[2].dims.length!==1||r[1].dims[0]!==r[2].dims[0]))throw new Error("invalid bias");let o=r[0].dims.length-2;if(e.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(e.strides.length!==o)throw new Error(`strides should be ${o}D`);if(e.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(r[0].type!=="float32"||r[1].type!=="float32")throw new Error("Conv input(X,W) should be float tensor");if(r.length===3&&r[2].type!=="float32")throw new Error("Conv input(bias) should be float tensor")}});var Ew,Cw,Pw,Qf,kw,Dw,Bw,Rw,zw,Lw,ep,Mw,tp=R(()=>{"use strict";_t();it();Ue();On();Ew=(r,e,n,t,o,i)=>(r-1)*e+n+(t-1)*o+1-i,Cw=(r,e,n,t,o)=>{let i=Math.floor(r/2);e==="SAME_UPPER"?(n[t]=i,n[o]=r-i):e==="SAME_LOWER"&&(n[t]=r-i,n[o]=i)},Pw=(r,e,n,t,o,i,s,a)=>{let u=r.length-2,l=a.length===0;for(let d=0;d<u;++d){let h=l?r[d+2]*i[d]:a[d],m=Ew(r[d+2],i[d],o[d],e[d],n[d],h);Cw(m,t,o,d,d+u),l&&a.push(i[d]*(r[d+2]-1)+s[d]+(e[d]-1)*n[d]+1-o[d]-o[d+u])}},Qf=(r,e,n)=>(Mw(e,n),kw(r,e,n)),kw=(r,e,n)=>{let t=Lw(n,e);return[zw(r,e,t)]},Dw=(r,e)=>({name:"ConvTranspose",inputNames:r?["X","W","B"]:["X","W"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e}),Bw=(r,e,n,t)=>{let i=e.length>2?"getB(output_channel)":"0.0",s=e[0].dims,a=e[1].dims,u=a[1],l=a[0]/t.group,d=[e[0].dims[0],e[1].dims[1]*t.group,...t.outputShape],h=ge(r.session.backend.glContext.version),{activationFunction:m,applyActivation:b}=Ar(t),y=`
  const ivec2 strides = ivec2(${t.strides[0]}, ${t.strides[1]});
  const ivec2 pads = ivec2(${t.pads[0]}, ${t.pads[1]});
  ${m}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;

    ivec2 loc = coords.zw + pads;

    int group_id = output_channel / ${u};
    int wOutChannel = output_channel - group_id * ${u};

    float value = ${i};
    for (int inChannelOffset = 0; inChannelOffset < ${l}; inChannelOffset++) {
      int input_channel = group_id * ${l} + inChannelOffset;
      for (int wWOff = 0; wWOff < ${a[2]}; wWOff++) {
        for (int wHOff = 0; wHOff < ${a[3]}; wHOff++) {
          ivec2 wOff = ivec2(wWOff * ${t.dilations[0]}, wHOff * ${t.dilations[1]});
          ivec2 wLoc = loc - wOff;
          ivec2 wLocIn = wLoc / strides;
          if (
            wLocIn * strides == wLoc &&
            wLocIn.x >= 0 && wLocIn.x < ${s[2]} &&
            wLocIn.y >= 0 && wLocIn.y < ${s[3]}
          ) {
            float xVal = getX(batch, input_channel, wLocIn.y, wLocIn.x);
            float wVal = getW(input_channel, wOutChannel, wHOff, wWOff);
            value += xVal * wVal;
          }
        }
      }
    }
    ${b}
    ${h.output} = vec4(value, .0, .0, .0);
  }
`;return{...n,output:{dims:d,type:e[0].type,textureType:0},shaderSource:y,hasMain:!0}},Rw=(r,e,n)=>{let t=Dw(e.length>2,n.cacheKey);return{...t,get:()=>Bw(r,e,t,n)}},zw=(r,e,n)=>r.run(Rw(r,e,n),e),Lw=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0)for(let a=2;a<e[1].dims.length;++a)n.push(e[1].dims[a]);let t=r.pads.slice(),o=r.outputShape.slice(),i=e[0].dims;Pw(i,n,r.dilations,r.autoPad,t,r.strides,r.outputPadding,o);let s=Object.assign({},r);return Object.assign(s,{kernelShape:n,pads:t,outputShape:o,cacheKey:r.cacheKey}),s},ep=r=>{let e=r.attributes,n=Jn(e),t=e.getString("auto_pad","NOTSET"),o=e.getInts("dilations",[1,1]),i=e.getInt("group",1),s=e.getInts("kernel_shape",[]),a=e.getInts("output_padding",[0,0]),u=e.getInts("output_shape",[]),l=e.getInts("pads",[0,0,0,0]),d=e.getInts("strides",[1,1]);return Ce({autoPad:t,dilations:o,group:i,kernelShape:s,outputPadding:a,outputShape:u,pads:l,strides:d,...n})},Mw=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4||r[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");let n=r[0].dims[1],t=r[1].dims[0];if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=r[1].dims[1]*e.group;if(r.length===3&&(r[2].dims.length!==1||r[2].dims[0]!==o))throw new Error("invalid bias");let i=r[0].dims.length-2;if(e.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(e.strides.length!==i)throw new Error(`strides should be ${i}D`);if(e.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(e.outputPadding.length!==i)throw new Error(`output_padding should be ${i}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==r[0].dims.length-2)throw new Error("invalid output shape");if(r[0].type!=="float32"||r[1].type!=="float32")throw new Error("ConvTranspose input(X,W) should be float tensor");if(r.length===3&&r[2].type!=="float32")throw new Error("ConvTranspose input(bias) should be float tensor")}});var rp,En,np,Nw,op,Fw,Vw,Uw,oa=R(()=>{"use strict";_t();Ke();Ue();rp={name:"Transpose",inputNames:["A"],inputTypes:[0]},En=(r,e,n)=>(Uw(e),[r.run({...rp,cacheHint:n.cacheKey,get:()=>Nw(r,e[0],n.perm)},e)]),np=r=>Ce({perm:r.attributes.getInts("perm",[])}),Nw=(r,e,n)=>{let t=e.dims;n=op(t,n);let o=Fw(t,n),i=t.length,s=`
      ${Vw("perm",n,i)}
      float process(int indices[${i}]) {
        int a[${i}];
        perm(a, indices);
        return _A(a);
      }`;return{...rp,output:{dims:o,type:e.type,textureType:0},shaderSource:s}},op=(r,e)=>(e&&e.length!==r.length&&(e=[...r.keys()].reverse()),e),Fw=(r,e)=>(e=op(r,e),le.sortBasedOnPerm(r,e)),Vw=(r,e,n)=>{let t=[];t.push(`void ${r}(out int a[${n}], int src[${n}]) {`);for(let o=0;o<n;++o)t.push(`	a[${e[o]}]=src[${o}];`);return t.push("	}"),t.join(`
`)},Uw=r=>{if(!r||r.length!==1)throw new Error("Transpose requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("input should be float tensor")}});var ip,ap,Gw,sp=R(()=>{"use strict";oa();ip=(r,e,n)=>{Gw(e);let t=n.blocksize,o=t*t,i=n.mode==="DCR"?[0,3,4,1,5,2]:[0,1,4,2,5,3],s=n.mode==="DCR"?[e[0].dims[0],t,t,e[0].dims[1]/o,e[0].dims[2],e[0].dims[3]]:[e[0].dims[0],e[0].dims[1]/o,t,t,e[0].dims[2],e[0].dims[3]],a=r.reshapeUnpacked(e[0],s),u={perm:i,cacheKey:`${i}`},[l]=En(r,[a],u),d=[e[0].dims[0],e[0].dims[1]/o,e[0].dims[2]*t,e[0].dims[3]*t];return[r.reshapeUnpacked(l,d)]},ap=r=>{let e=r.attributes.getInt("blocksize");if(e<1)throw new Error(`blocksize must be >= 1, but got : ${e} for DepthToSpace`);let n=r.attributes.getString("mode","DCR");if(n!=="DCR"&&n!=="CRD")throw new Error(`unrecognized mode: ${n} for DepthToSpace`);return{mode:n,blocksize:e}},Gw=r=>{if(r.length!==1)throw new Error(`DepthToSpace expect 1 inputs, but got ${r.length}`);if(r[0].type==="string"||r[0].dims.length!==4)throw new TypeError("DepthToSpace input should be a 4-D numeric tensor")}});var up,lp,Ww,dp=R(()=>{"use strict";Ke();up=(r,e,n)=>{Ww(e,n);let t=le.flattenShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},lp=r=>r.attributes.getInt("axis",1),Ww=(r,e)=>{if(!r||r.length!==1)throw new Error("Flatten requires 1 input.");let n=r[0].dims.length;if(n===0)throw new Error("scalar tensor is not supported.");if(e<-n||e>n)throw new Error("Invalid axis");if(r[0].type==="string")throw new Error("string tensor is not supported.")}});var rn,Vo=R(()=>{"use strict";rn=["float32","float64","int32","int16","int8","uint16","uint32","uint8"]});var cp,fp,Hw,qw,jw,Kw,pp=R(()=>{"use strict";_t();Vo();Ke();Ue();cp=(r,e,n)=>(Kw(e,n.axis),[r.run(jw(r,e,n),e)]),fp=r=>Ce({axis:r.attributes.getInt("axis",0)}),Hw={name:"Gather",inputNames:["A","B"],inputTypes:[0,0]},qw=(r,e,n,t)=>{let o=n[0].dims.slice(),i=n[1].dims.slice(),s=new Array(o.length+i.length-1);t=le.normalizeAxis(t,o.length);let a=[];for(let m=0;m<s.length;m++)m<t?(s[m]=o[m],a.push(`inputIdx[${m}] = outputIdx[${m}];`)):m<t+i.length?(s[m]=i[m-t],a.push(`indexDataIdx[${m-t}] = outputIdx[${m}];`)):(s[m]=o[m-i.length+1],a.push(`inputIdx[${m-i.length+1}] = outputIdx[${m}];`));let u=s.length||1,l=o.length,d=i.length||1,h=`
      float process(int outputIdx[${u}]) {
        int inputIdx[${l}];
        int indexDataIdx[${d}];
        indexDataIdx[0] = 0;
        ${a.join(`
        `)}
        int idx = int(_B(indexDataIdx));
        inputIdx[${t}] = idx < 0 ? idx + ${o[t]} : idx;
        return _A(inputIdx);
      }`;return{...e,output:{dims:s,type:n[0].type,textureType:0},shaderSource:h}},jw=(r,e,n)=>{let t={...Hw,cacheHint:n.cacheKey};return{...t,get:()=>qw(r,t,e,n.axis)}},Kw=(r,e)=>{if(!r||r.length!==2)throw new Error("Gather requires 2 inputs.");let n=r[0].dims.length;if(n<1)throw new Error("Invalid input shape.");if(e<-n||e>n-1)throw new Error("Invalid axis.");if(rn.indexOf(r[0].type)===-1)throw new Error("Invaid input type.");if(r[1].type!=="int32"&&r[1].type!=="int16")throw new Error("Invaid input type.")}});var nu,hp,mp,gp,Yw,Xw,Zw,bp=R(()=>{"use strict";_t();Ke();Ue();nu=(r,e,n)=>(Zw(e,n),[r.run(Yw(e,n),e)]),hp=(r,e)=>{let n=r.attributes.getInt("transA",0)!==0,t=r.attributes.getInt("transB",0)!==0,o=r.attributes.getFloat("alpha",1),i=r.attributes.getFloat("beta",1);return Ce({transA:n,transB:t,alpha:o,beta:i,isOptionalC:e})},mp=r=>hp(r,!1),gp=r=>hp(r,!0),Yw=(r,e)=>{let n={name:"Gemm",inputNames:r.length===3?["A","B","C"]:["A","B"],inputTypes:r.length===3?[0,0,0]:[0,0],key:e.cacheKey};return{...n,get:()=>Xw(n,r,e)}},Xw=(r,e,n)=>{let t=e[0].dims.slice(),o=e[1].dims.slice(),[i,s]=ji.getShapeOfGemmResult(t,n.transA,o,n.transB,e.length===3?e[2].dims:void 0),a=[i,s];if(!a)throw new Error("Can't use gemm on the given tensors");let u=t[t.length-1],l="";n.transA&&(u=t[0]),n.transA&&n.transB?l="value += _A_T(a) * _B_T(b);":n.transA&&!n.transB?l="value += _A_T(a) * _B(b);":!n.transA&&n.transB?l="value += _A(a) * _B_T(b);":!n.transA&&!n.transB&&(l="value += _A(a) * _B(b);");let d=a.length,h=e.length===3?`int c[${e[2].dims.length}];`:"",m=e.length===3?"bcastIndices_C(indices, c);":"",b=e.length===3?"value += beta * _C(c);":"",y=`
      float process(int indices[${d}]) {
          int a[${d}];
          int b[${d}];
          ${h}

          copyVec(indices, a);
          copyVec(indices, b);
          ${m}

          float value = 0.0;
          for (int k=0; k<${u}; ++k) {
              a[${d-1}] = k;
              b[${d-2}] = k;
              ${l}
          }

          value = value * alpha;
          ${b}
          return value;
      }`;return{...r,output:{dims:a,type:e[0].type,textureType:0},variables:[{name:"alpha",type:"float",data:n.alpha},{name:"beta",type:"float",data:n.beta}],shaderSource:y}},Zw=(r,e)=>{if(!r)throw new Error("Input is missing");if(e.isOptionalC&&(r.length<2||r.length>3))throw new Error("Invaid input shape.");if(!e.isOptionalC&&r.length!==3)throw new Error("Gemm requires 3 inputs");if(r.length===3&&r[2].dims.length!==1&&r[2].dims.length!==2)throw new Error("Invalid input shape of C");if(r[0].type!=="float32"&&r[0].type!=="float64"||r[1].type!=="float32"&&r[1].type!=="float64"||r.length===3&&r[2].type!=="float32"&&r[2].type!=="float64")throw new Error("Invalid input type.");if(r[0].type!==r[1].type||r.length===3&&r[0].type!==r[2].type)throw new Error("Input types are mismatched")}});var yp,vp,Jw,Qw,ex,tx,rx,wp=R(()=>{"use strict";_t();Ue();yp=(r,e,n)=>(rx(e),[r.run(ex(r,e,n),e)]),vp=r=>{let e=r.attributes.getFloat("scale"),n=r.attributes.getFloats("bias");return Ce({scale:e,bias:n})},Jw={name:"ImageScaler",inputNames:["X"],inputTypes:[0]},Qw=(r,e,n,t)=>{let o=n[0].dims.slice(),i=o.length,a=`
      ${tx(t.bias.length)}
      float process(int indices[${i}]) {
        return _X(indices) * scale + getBias(bias, indices[1]);
      }`;return{...e,output:{dims:o,type:n[0].type,textureType:0},variables:[{name:"bias",type:"float",arrayLength:t.bias.length,data:t.bias},{name:"scale",type:"float",data:t.scale}],shaderSource:a}},ex=(r,e,n)=>{let t={...Jw,cacheHint:n.cacheKey};return{...t,get:()=>Qw(r,t,e,n)}},tx=r=>{let e=[`float getBias(float bias[${r}], int channel) {`];for(let n=0;n<r;++n)n===0?e.push(`	if (channel == ${n}) { return bias[${n}]; }`):n===r-1?e.push(`	else { return bias[${n}]; }`):e.push(`	else if (channel == ${n}) { return bias[${n}]; }`);return e.push("	}"),e.join(`
`)},rx=r=>{if(!r||r.length!==1)throw new Error("ImageScaler requires 1 input.");if(r[0].dims.length!==4)throw new Error("Invalid input shape.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")}});var Tp,$p,xp,nx,ox,ix,ax,sx,ux,_p=R(()=>{"use strict";it();Ue();Tp=(r,e,n)=>{ux(e);let t=r.run(ox(e[0]),e);return[r.run(sx(r,e[0],n,t.dims),[e[0],t,e[1],e[2]])]},$p=r=>r.attributes.getFloat("epsilon",1e-5),xp={name:"InstanceNormalization_MeanAndVariance",inputNames:["X"],inputTypes:[0]},nx=(r,e)=>{let n=e.dims.slice(),t=n[1],o=n[2]*n[3],i=[n[0],t],s=`
      vec4 process(int[2] indices) {
        vec4 v = vec4(0.0);
        int a[4];
        a[0] = indices[0];
        a[1] = indices[1];
        float temp = 0.0;
        for(int a2=0; a2<${n[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${n[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += x;
          }
        }
        float mean = temp / float(${o});
        temp = 0.0;
        for(int a2=0; a2<${n[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${n[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += (x - mean) * (x - mean);
          }
        }
        v.r = mean;
        v.g = temp / float(${o});

        return v;
      }`;return{...r,output:{dims:i,type:e.type,textureType:4},shaderSource:s}},ox=r=>({...xp,get:()=>nx(xp,r)}),ix={name:"InstanceNormalization_ComputeOutput",inputNames:["X","MeanAndVariance","Scale","B"],inputTypes:[0,4,0,0]},ax=(r,e,n,t,o)=>{let i=ge(r.session.backend.glContext.version),[s,a]=r.calculateTextureWidthAndHeight(o,4),[u,l]=[s/4,a],d=`
      vec4 get_MeanAndVariance(int[2] mv) {
        int offset = indicesToOffset_MeanAndVariance(mv);
        vec2 coords = offsetToCoords(offset, ${u}, ${l});
        return ${i.texture2D}(MeanAndVariance, coords);
      }

      float process(int[4] indices) {
        int mv[2];
        mv[0] = indices[0];
        mv[1] = indices[1];
        vec4 mean_and_variance = get_MeanAndVariance(mv);
        float mean = mean_and_variance.r;
        float variance = mean_and_variance.g;

        int sb[1];
        sb[0] = indices[1];
        float scale = _Scale(sb);
        float b = _B(sb);

        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;
      }`;return{...e,output:{dims:n.dims,type:n.type,textureType:0},variables:[{name:"epsilon",type:"float",data:t}],shaderSource:d}},sx=(r,e,n,t)=>{let o={...ix,cacheHint:`${n}`};return{...o,get:()=>ax(r,o,e,n,t)}},ux=r=>{if(!r||r.length!==3)throw new Error("InstanceNormalization requires 3 inputs.");let e=r[0],n=r[1],t=r[2];if(e.dims.length<3||n.dims.length!==1||t.dims.length!==1)throw new Error("Invalid input shape.");if(n.dims[0]!==e.dims[1]||t.dims[0]!==e.dims[1])throw new Error("Input shapes are mismatched.");if(e.type!=="float32"&&e.type!=="float64"||n.type!=="float32"&&n.type!=="float64"||t.type!=="float32"&&t.type!=="float64")throw new Error("Invalid input type.");if(r[0].dims.length!==4)throw new Error("Only support 4-D input shape.")}});function lx(r,e){let n=r[0].dims[1],t=r[0].dims.length,o=-Math.floor((e.size-1)/2),i=Math.ceil((e.size-1)/2),s=`float(${e.alpha}) / float(${e.size})`,a=`float(${e.bias})`,u=`float(${e.beta})`,l=`
    float process(int indices[${t}]) {
        int c = indices[1];
        float x = _X(indices);
        float square_sum = 0.0;

        for (int i = ${o}; i <= ${i}; i++) {
          int idx = c + i;
          if (c >= 0 && c < ${n}) {
            indices[1] = idx;
            float j = _X(indices);
            square_sum += j * j;
          }
        }
        return x / pow(${a} + ${s} * square_sum, ${u});
    }`;return{...Ap,cacheHint:e.cacheKey,output:{dims:r[0].dims,type:r[0].type,textureType:0},shaderSource:l}}function dx(r,e){return{...Ap,cacheHint:e.cacheKey,get:()=>lx(r,e)}}var Sp,Ip,Ap,cx,Op=R(()=>{"use strict";_t();Ue();Sp=(r,e,n)=>(cx(e),[r.run(dx(e,n),e)]),Ip=r=>{let e=r.attributes.getFloat("alpha",1e-4),n=r.attributes.getFloat("beta",.75),t=r.attributes.getFloat("bias",1),o=r.attributes.getInt("size");return Ce({alpha:e,beta:n,bias:t,size:o})},Ap={name:"LRN",inputNames:["X"],inputTypes:[0]};cx=r=>{if(!r||r.length!==1)throw new Error("LRN requires 1 input.");if(r[0].dims.length!==4)throw new Error('currently only support LRN for input with "NCHW" format');if(r[0].type!=="float32")throw new Error("input should be float type")}});var fx,ou,Ep,Cp,Pp,px,hx,mx,gx,bx,yx,vx,wx,kp=R(()=>{"use strict";_t();Ke();it();Ue();fx={name:"Pad",inputNames:["A"],inputTypes:[0]},ou=(r,e,n)=>(mx(e),[r.run({...fx,cacheHint:n.cacheKey,get:()=>hx(r,e[0],n)},e)]),Ep=r=>{let e=r.attributes.getString("mode","constant"),n=r.attributes.getFloat("value",0),t=r.attributes.getInts("pads");return Ce({mode:e,value:n,pads:t})},Cp=(r,e,n)=>{gx(e);let t=px(r,e,n);return ou(r,[e[0]],t)},Pp=r=>r.attributes.getString("mode","constant"),px=(r,e,n)=>{if(!r.session.isInitializer(e[1].dataId)||e.length>=3&&!r.session.isInitializer(e[2].dataId))throw new Error("dynamic pad attributes are not allowed");let t=Array.from(e[1].integerData),o=e.length>=3?e[2].floatData[0]:0;return Ce({mode:n,pads:t,value:o})},hx=(r,e,n)=>{let t=le.padShape(e.dims.slice(),n.pads),o=t.length,s=`
      ${bx(r,e,n)}
      float process(int[${o}] indices) {
          return padA(indices);
      }`;return{name:"Pad",inputNames:["A"],inputTypes:[0],output:{dims:t,type:e.type,textureType:0},shaderSource:s}},mx=r=>{if(!r||r.length!==1)throw new Error("Pad requires 1 input");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")},gx=r=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Pad requires 2 or 3 inputs");if(r[1].type!=="int32")throw new Error("Invalid input type.");if(r.length>=3&&r[2].type==="string")throw new Error("Invalid input type.")},bx=(r,e,n)=>{let t=ge(r.session.backend.glContext.version),[o,i]=r.calculateTextureWidthAndHeight(e.dims,0),s=le.computeStrides(e.dims);switch(n.mode){case"constant":return yx(t,e.dims,s,o,i,n.pads,n.value);case"reflect":return vx(t,e.dims,s,o,i,n.pads);case"edge":return wx(t,e.dims,s,o,i,n.pads);default:throw new Error("Invalid mode")}},yx=(r,e,n,t,o,i,s)=>{let a=e.length,u="";for(let l=a-1;l>=0;--l)u+=`
        k = m[${l}] - ${i[l]};
        if (k < 0)  return constant;
        if (k >= ${e[l]}) return constant;
        offset += k * ${n[l]};
        `;return`
      float padA(int m[${a}]) {
        const float constant = float(${s});
        int offset = 0;
        int k = 0;
        ${u}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `},vx=(r,e,n,t,o,i)=>{let s=e.length,a="";for(let u=s-1;u>=0;--u)a+=`
        k = m[${u}] - ${i[u]};
        if (k < 0) { k = -k; }
        {
          const int _2n_1 = ${2*(e[u]-1)};
          k = int( mod( float(k), float(_2n_1) ) ) ;
          if(k >= ${e[u]}) { k = _2n_1 - k; }
        }
        offset += k * ${n[u]};
        `;return`
      float padA(int m[${s}]) {
        int offset = 0;
        int k = 0;
        ${a}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `},wx=(r,e,n,t,o,i)=>{let s=e.length,a="";for(let u=s-1;u>=0;--u)a+=`
        k = m[${u}] - ${i[u]};
        if (k < 0)  k = 0;
        if (k >= ${e[u]}) k = ${e[u]-1};
        offset += k * ${n[u]};
      `;return`
      float padA(int m[${s}]) {
        int offset = 0;
        int k = 0;
        ${a}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `}});var Bp,Rp,zp,Lp,Mp,Np,Fp,Vp,Up,xx,Dp,Gp,aa,Wp,ia,Tx,Hp=R(()=>{"use strict";_t();Ke();Ue();Bp=(r,e,n)=>{aa(e);let t={name:"AveragePool",inputNames:["X"],inputTypes:[0],cacheHint:n.cacheKey};return[r.run({...t,get:()=>zp(e,t,!1,n)},e)]},Rp=r=>{let e=r.attributes.getString("auto_pad","NOTSET"),n=r.attributes.getInt("ceil_mode",0),t=r.attributes.getInt("count_include_pad",0)!==0,o=r.attributes.getInts("kernel_shape"),i=r.attributes.getInts("strides",[]),s=r.attributes.getInts("pads",[]);if(n!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return Ce({autoPad:e,ceilMode:n,countIncludePad:t,kernelShape:o,strides:i,pads:s})},zp=(r,e,n,t)=>{let[o,i]=Up(r,t,n),s=le.size(o.kernelShape),a="value += _X(x);",u="";o.countIncludePad?u+=`value /= float(${s});`:u+=`value /= float(${s} - pad);`;let d=`
        ${Wp(r[0].dims,o,a,u,"0.0")}
      `;return{...e,output:{dims:i,type:r[0].type,textureType:0},shaderSource:d}},Lp=(r,e,n)=>{aa(e);let t={name:"GlobalAveragePool",inputNames:["X"],inputTypes:[0],cacheHint:`${n.countIncludePad}`};return[r.run({...t,get:()=>zp(e,t,!0,n)},e)]},Mp=r=>{let e=r.attributes.getInt("count_include_pad",0)!==0;return Ce({autoPad:"",ceilMode:0,countIncludePad:e,kernelShape:[],strides:[],pads:[]})},Np=(r,e,n)=>{aa(e);let t={name:"MaxPool",inputNames:["X"],inputTypes:[0],cacheHint:n.cacheKey};return[r.run({...t,get:()=>Vp(e,t,!1,n)},e)]},Fp=r=>{let e=r.attributes.getString("auto_pad","NOTSET"),n=r.attributes.getInt("ceil_mode",0),t=r.attributes.getInts("kernel_shape"),o=r.attributes.getInts("strides",[]),i=r.attributes.getInts("pads",[]),s=r.attributes.getInt("storage_order",0),a=r.attributes.getInts("dilations",[]);if(s!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(n!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return Ce({autoPad:e,ceilMode:n,countIncludePad:!1,kernelShape:t,strides:o,pads:i,storageOrder:s,dilations:a})},Vp=(r,e,n,t)=>{let[o,i]=Up(r,t,n),s=`
      value = max(_X(x), value);
    `,a="",l=`
      ${Wp(r[0].dims,o,s,a,"-1e5")}
    `;return{...e,output:{dims:i,type:r[0].type,textureType:0},shaderSource:l}},Up=(r,e,n)=>{let t=r[0].dims.slice(),o=Object.hasOwnProperty.call(e,"dilations"),i=e.kernelShape.slice(),s=e.strides.slice(),a=o?e.dilations.slice():[],u=e.pads.slice();$n.adjustPoolAttributes(n,t,i,s,a,u);let l=$n.computePoolOutputShape(n,t,s,a,i,u,e.autoPad),d=Object.assign({},e);return o?Object.assign(d,{kernelShape:i,strides:s,pads:u,dilations:a,cacheKey:e.cacheKey}):Object.assign(d,{kernelShape:i,strides:s,pads:u,cacheKey:e.cacheKey}),[d,l]},xx={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},Dp={name:"GlobalMaxPool",inputNames:["X"],inputTypes:[0]},Gp=(r,e)=>(aa(e),[r.run({...Dp,get:()=>Vp(e,Dp,!0,xx)},e)]),aa=r=>{if(!r||r.length!==1)throw new Error("Pool ops requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")},Wp=(r,e,n,t,o)=>{let i=r.length;if(e.kernelShape.length<=2){let s=e.kernelShape[e.kernelShape.length-1],a=e.strides[e.strides.length-1],u=e.pads[e.pads.length/2-1],l=e.pads[e.pads.length-1],d=r[i-1],h="",m="",b="";if(u+l!==0?h=`
          for (int i = 0; i < ${s}; i++) {
            x[${i} - 1] = indices[${i} - 1] * ${a} - ${u} + i;
            if (x[${i} - 1] < 0 || x[${i} - 1] >= ${d}) {
              pad++;
              continue;
            }
            ${n}
          }`:h=`
          for (int i = 0; i < ${s}; i++) {
            x[${i} - 1] = indices[${i} - 1] * ${a} - ${u} + i;
            ${n}
          }`,e.kernelShape.length===2){let x=e.kernelShape[e.kernelShape.length-2],A=e.strides[e.strides.length-2],I=e.pads[e.pads.length/2-2],$=e.pads[e.pads.length-2],O=r[i-2];I+$!==0?m=`
            for (int j = 0; j < ${x}; j++) {
              x[${i} - 2] = indices[${i} - 2] * ${A} - ${I} + j;
              if (x[${i} - 2] < 0 || x[${i} - 2] >= ${O}) {
                pad+= ${s};
                continue;
              }
          `:m=`
            for (int j = 0; j < ${x}; j++) {
              x[${i} - 2] = indices[${i} - 2] * ${A} - ${I} + j;
            `,b=`
          }
        `}return`
        float process(int indices[${i}]) {
          int x[${i}];
          copyVec(indices, x);

          float value = ${o};
          int pad = 0;
          ${m}
          ${h}
          ${b}
          ${t}
          return value;
        }
      `}else{let s=le.size(e.kernelShape),a=le.computeStrides(e.kernelShape),u=a.length,l=e.pads.length,d=Tx(u),h=ia(r,"inputDims"),m=ia(e.pads,"pads"),b=ia(a,"kernelStrides"),y=ia(e.strides,"strides"),x=e.pads.reduce(($,O)=>$+O),A="";return x?A=`
            if (x[j] >= inputDims[j] || x[j] < 0) {
              pad++;
              isPad = true;
              break;
            }
          }
          if (!isPad) {
            ${n}
          }`:A=`
          }
          ${n}
        `,`
        ${d}
        float process(int indices[${i}]) {
          int x[${i}];
          copyVec(indices, x);
          int offset[${u}];
          int pads[${l}];
          int inputDims[${i}];
          int kernelStrides[${u}];
          int strides[${u}];
          ${m}
          ${h}
          ${y}
          ${b}

          float value = ${o};
          int pad = 0;
          bool isPad = false;
          for (int i = 0; i < ${s}; i++) {
            offsetToIndices(i, kernelStrides, offset);
            isPad = false;
            for (int j = ${i} - ${u}; j < ${i}; j++) {
              x[j] = indices[j] * strides[j - ${i} + ${u}]
                + offset[j - ${i} + ${u}] - pads[j - 2];
              ${A}
          }
          ${t}

          return value;
        }
      `}},ia=(r,e)=>{let n="";for(let t=0;t<r.length;t++)n+=`
      ${e}[${t}] = ${r[t]};
    `;return n},Tx=r=>`
  void offsetToIndices(int offset, int[${r}] strides, out int[${r}] indices) {
    if (${r} == 0) {
      return;
    }
    for (int i = 0; i < ${r} - 1; ++i) {
      indices[i] = offset / strides[i];
      offset -= indices[i] * strides[i];
    }
    indices[${r} - 1] = offset;
  }`});var Cn,nn,$x,_x,qp,jp,Kp,Yp,Xp,Zp,Jp,Qp=R(()=>{"use strict";_t();Vo();Ke();Ue();Cn=(r,e,n,t,o)=>{_x(e);let i={name:t,inputNames:["A"],inputTypes:[0]};return[r.run({...i,cacheHint:n.cacheKey,get:()=>$x(r,e,n,t,o,i)},e)]},nn=r=>{let e=r.attributes.getInts("axes",[]),n=r.attributes.getInt("keepdims",1)===1;return Ce({axes:e,keepDims:n})},$x=(r,e,n,t,o,i)=>{let s=[],a=e[0].dims.length||1,u=[],l=le.normalizeAxes(n.axes,e[0].dims.length),d=o(e,l),h=d[1];for(let y=0;y<e[0].dims.length;y++)l.indexOf(y)>=0||l.length===0?(n.keepDims&&s.push(1),h=`
          for(int j${y} = 0; j${y} < ${e[0].dims[y]}; j${y}++) {
            inputIdx[${y}] = j${y};
            ${h}
          }`):(u.push(`inputIdx[${y}] = outputIdx[${s.length}];`),s.push(e[0].dims[y]));let b=`
      float process(int outputIdx[${s.length||1}]) {
        float value;                 // final result
        int inputIdx[${a}];      // addressing input data
        ${u.join(`
`)}
        ${d[0]}       // init ops for reduce max/min
        ${h}
        ${d[2]}       // final computation for reduce mean
        return value;
      }`;return{...i,output:{dims:s,type:e[0].type,textureType:0},shaderSource:b}},_x=r=>{if(!r||r.length!==1)throw new Error("Reduce op requires 1 input.");if(rn.indexOf(r[0].type)===-1)throw new Error("Invalid input type.")},qp=(r,e,n)=>Cn(r,e,n,"ReduceSum",()=>["value = 0.0;","value += _A(inputIdx);",""]),jp=(r,e,n)=>Cn(r,e,n,"ReduceMean",(o,i)=>{let s=1;for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&(s*=o[0].dims[a]);return["value = 0.0;","value += _A(inputIdx);",`value /= ${s}.;`]}),Kp=(r,e,n)=>Cn(r,e,n,"ReduceMax",(o,i)=>{let s=[];for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`inputIdx[${a}] = 0;`);return[`${s.join(`
`)}
value = _A(inputIdx);`,"value = max(value, _A(inputIdx));",""]}),Yp=(r,e,n)=>Cn(r,e,n,"ReduceMin",(o,i)=>{let s=[];for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`inputIdx[${a}] = 0;`);return[`${s.join(`
`)}
value = _A(inputIdx);`,"value = min(value, _A(inputIdx));",""]}),Xp=(r,e,n)=>Cn(r,e,n,"ReduceProd",()=>["value = 1.0;","value *= _A(inputIdx);",""]),Zp=(r,e,n)=>Cn(r,e,n,"ReduceLogSum",()=>["value = 0.0;","value += _A(inputIdx);","value = log(value);"]),Jp=(r,e,n)=>Cn(r,e,n,"ReduceLogSumSquare",()=>["float t; value = 0.0;","t = _A(inputIdx); value += t * t;",""])});var eh,th=R(()=>{"use strict";Ke();eh=(r,e)=>{let n=le.calculateReshapedDims(e[0].dims,e[1].integerData);return r.session.pack?[r.reshapePacked(e[0],n)]:[r.reshapeUnpacked(e[0],n)]}});var rh,iu,nh,oh,Uo,Sx,au,sa,su=R(()=>{"use strict";_t();it();Ue();rh={name:"Upsample",inputNames:["X"],inputTypes:[0]},iu=(r,e,n)=>(au(e,n),[r.run({...rh,cacheHint:n.cacheKey,get:()=>Sx(r,e,n)},e)]),nh=r=>Uo(r,7),oh=r=>Uo(r,9),Uo=(r,e)=>{let n=e>=10,t=r.attributes.getString("mode","nearest");if(t!=="nearest"&&t!=="linear"&&(e<11||t!=="cubic"))throw new Error(`unrecognized mode: ${t}`);let o=[];e<9&&(o=r.attributes.getFloats("scales"),sa(o,t,n));let i=r.attributes.getFloat("extrapolation_value",0),s=e>10?r.attributes.getString("coordinate_transformation_mode","half_pixel"):"asymmetric";if(["asymmetric","pytorch_half_pixel","tf_half_pixel_for_nn","align_corners","tf_crop_and_resize","half_pixel"].indexOf(s)===-1)throw new Error(`coordinate_transform_mode '${s}' is not supported`);let a=s==="tf_crop_and_resize",u=a,l=t==="nearest"&&e>=11?r.attributes.getString("nearest_mode","round_prefer_floor"):"";if(["round_prefer_floor","round_prefer_ceil","floor","ceil",""].indexOf(l)===-1)throw new Error(`nearest_mode '${l}' is not supported`);let d=r.attributes.getFloat("cubic_coeff_a",-.75),h=r.attributes.getInt("exclude_outside",0)!==0;if(h&&t!=="cubic")throw new Error("exclude_outside can be set to 1 only when mode is CUBIC.");let m=e<11?!0:t==="nearest"&&s==="asymmetric"&&l==="floor",b=0,y=0,x=0;return e>10?r.inputs.length>2?(b=1,y=2,x=3):(y=1,x=2):e===9&&(y=1),Ce({opset:e,isResize:n,mode:t,scales:o,extrapolationValue:i,coordinateTransformMode:s,useExtrapolation:u,needRoiInput:a,nearestMode:l,cubicCoefficientA:d,excludeOutside:h,useNearest2xOptimization:m,roiInputIdx:b,scalesInputIdx:y,sizesInputIdx:x})},Sx=(r,e,n)=>{let t=ge(r.session.backend.glContext.version),[o,i]=r.calculateTextureWidthAndHeight(e[0].dims,0),s=e[0].dims.map((x,A)=>Math.floor(x*n.scales[A])),[a,u]=r.calculateTextureWidthAndHeight(s,0),l=s.length,d=new Array(l),h=new Array(l),m=`
      int output_pitches[${l}];
      int input_pitches[${l}];
      `;for(let x=l-1;x>=0;x--)d[x]=x===l-1?1:d[x+1]*s[x+1],h[x]=x===l-1?1:h[x+1]*e[0].dims[x+1],m+=`
        output_pitches[${x}] = ${d[x]};
        input_pitches[${x}] = ${h[x]};
        `;let b=`
      float getInputFloat(int index) {
        vec2 coords = offsetToCoords(index, ${o}, ${i});
        float value = getColorAsFloat(${t.texture2D}(X, coords));
        return value;
      }
      `,y=n.mode==="nearest"?`
    ${b}
    float process(int indices[${l}]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${u});

      ${m}

      int d, m;
      for (int dim = 0; dim < ${l}; ++dim) {
        d = output_index / output_pitches[dim];
        m = output_index - d * output_pitches[dim];
        output_index = m;

        if (scales[dim] != 1 && d > 0) {
          int d2 = d / scales[dim];
          m = d - d2 * scales[dim];
          d = d2;
        }
        input_index += input_pitches[dim] * d;
      }

      return getInputFloat(input_index);
    }`:l===4?`
    ${b}
    float process(int indices[4]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${u});

      ${m}

      int m;
      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m / output_pitches[1];
      m = m - index_of_dim1 * output_pitches[1];
      index_of_dim2 = m / output_pitches[2];
      m = m - index_of_dim2 * output_pitches[2];
      index_of_dim3 = m;

      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;
      index_of_input_dim2 = index_of_dim2 / scales[2];
      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];
      index_of_input_dim3 = index_of_dim3 / scales[3];
      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];

      input_index = index_of_dim0 * input_pitches[0] +
            index_of_dim1 * input_pitches[1] +
            index_of_input_dim2 * input_pitches[2] +
            index_of_input_dim3;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim2 = false;
      if (index_of_input_dim2 == (${e[0].dims[2]} - 1)) {
        // It's the end in dimension 2
        x01 = x00;
        end_of_dim2 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[2]);
      }

      if (index_of_input_dim3 == (input_pitches[2] - 1)) {
        // It's the end in dimension 3
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);
    }`:`
    ${b}
    float process(int indices[2]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${u});

      ${m}

      int m;
      int index_of_dim0, index_of_dim1;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m;

      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;
      index_of_input_dim0 = index_of_dim0 / scales[0];
      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];
      index_of_input_dim1 = index_of_dim1 / scales[1];
      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];

      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim0 = false;
      if (index_of_input_dim0 == (${e[0].dims[0]} - 1)) {
        // It's the end in dimension 0
        x01 = x00;
        end_of_dim0 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[0]);
      }

      if (index_of_input_dim1 == (input_pitches[0] - 1)) {
        // It's the end in dimension 1
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);
    }`;return{...rh,output:{dims:s,type:e[0].type,textureType:0},shaderSource:y,variables:[{name:"scales",type:"int",arrayLength:n.scales.length,data:n.scales.map(x=>Math.ceil(x))}]}},au=(r,e)=>{if(!r||e.opset<9&&r.length!==1||e.opset>=9&&e.opset<11&&r.length!==2||e.opset>=11&&r.length<2)throw new Error("invalid inputs.");if(e.scales.length>0&&r[0].dims.length!==e.scales.length)throw new Error("Invalid input shape.");if(r[0].type==="string")throw new Error("Invalid input tensor types.")},sa=(r,e,n)=>{if(n){for(let t of r)if(t<=0)throw new Error("Scale value should be greater than 0.")}else for(let t of r)if(t<1)throw new Error("Scale value should be greater than or equal to 1.");if((e==="linear"||e==="cubic")&&r.length!==2&&(r.length!==4||r[0]!==1||r[1]!==1))throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic')         or 4-D inputs with the corresponding outermost 2 scale values being 1         in the ${n?"Resize":"Upsample"} opeartor.`)}});var uu,lu,ih,ah,Ix,Ax,Ox,Ex,sh=R(()=>{"use strict";it();Ue();Sr();An();su();uu={name:"Resize",inputNames:["A"],inputTypes:[2]},lu=(r,e,n)=>(au(e,n),[r.run({...uu,cacheHint:n.cacheKey,get:()=>Ix(r,e,n)},e)]),ih=r=>Uo(r,10),ah=r=>Uo(r,11),Ix=(r,e,n)=>{let t=ge(r.session.backend.glContext.version),[o,i]=Ax(e,n);if(o.every(O=>O===1)&&n.coordinateTransformMode!=="tf_crop_and_resize")return{...uu,output:{dims:i,type:e[0].type,textureType:2},hasMain:!0,shaderSource:`void main() {
                    vec4 v = ${t.texture2D}(X, TexCoords);
                    ${t.output} = v;
                }`};let a=i.length;if(a<2)throw new Error(`output dimension should be at least 2, but got ${a}`);let u=i[a-2],l=i[a-1],d=e[0].dims;if(a!==d.length)throw new Error(`output dimension should match input ${d.length}, but got ${a}`);let h=d[a-2],m=d[a-1],b=o[a-2],y=o[a-1],x="";if(n.mode!=="linear")throw new Error(`resize (packed) does not support mode: '${n.mode}'`);switch(n.coordinateTransformMode){case"asymmetric":x=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return vec4(coords) / scaleWHWH;
                    }
                `;break;case"half_pixel":x=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;
                    }
                `;break;case"pytorch_half_pixel":x=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 fcoords = vec4(coords);
                        return vec4(
                            ${l}.0 > 1.0 ? (fcoords.x + 0.5) / scaleWHWH.x - 0.5 : 0.0,
                            ${u}.0 > 1.0 ? (fcoords.y + 0.5) / scaleWHWH.y - 0.5 : 0.0,
                            ${l}.0 > 1.0 ? (fcoords.z + 0.5) / scaleWHWH.z - 0.5 : 0.0,
                            ${u}.0 > 1.0 ? (fcoords.w + 0.5) / scaleWHWH.w - 0.5 : 0.0
                          );
                    }
                `;break;case"align_corners":x=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 resized = vec4(${l}.0 - 1.0, ${u}.0 - 1.0, ${l}.0 - 1.0,
                            ${u}.0 - 1.0);
                        vec4 original = vec4(${m}.0 - 1.0, ${h}.0 - 1.0, ${m}.0 - 1.0,
                            ${h}.0 - 1.0);
                        vec4 new_scale = original / resized;
                        return vec4(coords) * new_scale;
                    }
                `;break;default:throw new Error(`resize (packed) does not support coordinateTransformMode:                                 '${n.coordinateTransformMode}'`)}let A=Ft(a),I=Ir(),$=`
            const vec2 inputWH = vec2(${h}.0, ${m}.0);
            const vec4 scaleWHWH = vec4(float(${b}), float(${y}), float(${b}), float(${y}));
            ${I}
            ${x}
            float getAValue(int x10, int r, int c, int d) {
                return getChannel(getA(x10, r, c, d), vec2(c, d));
            }
            void main() {
                ${A} rc = getOutputCoords();

                int batch = rc[0];
                int depth = rc[1];

                // retrieve the 4 coordinates that is used in the 4 packed output values.
                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);

                // calculate the source index in fraction
                vec4 sourceFrac = getSourceFracIndex(coords);

                // get the lower and upper bound of the 4 values that will be packed into one texel.
                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));
                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));
                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));
                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));

                bool hasNextRow = rc.w < ${u-1};
                bool hasNextCol = rc.z < ${l-1};

                // pack x00, x01, x10, x11's top-left corner into one vec4 structure
                vec4 topLeft = vec4(
                    getAValue(batch, depth, x00.x, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);

                // pack x00, x01, x10, x11's top-right corner into one vec4 structure
                vec4 topRight = vec4(
                    getAValue(batch, depth, x00.x, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);

                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure
                vec4 bottomLeft = vec4(
                    getAValue(batch, depth, x00.z, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);

                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure
                vec4 bottomRight = vec4(
                    getAValue(batch, depth, x00.z, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);

                // calculate the interpolation fraction on u and v direction
                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);
                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));

                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);
                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);
                vec4 newValue = mix(top, bottom, clampFrac.xxzz);

                ${t.output} = vec4(newValue);
            }
        `;return{...uu,output:{dims:i,type:e[0].type,textureType:2},hasMain:!0,shaderSource:$}},Ax=(r,e)=>{let t=r[0].dims,o=e.scales,i;if(o.length===0){let a=r[e.scalesInputIdx];if(a&&a.size!==0){if(r[e.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");o=Ox(a,e.mode,e.isResize)}else{let u=r[e.sizesInputIdx];if(!u||u.size===0)throw new Error("Either scales or sizes MUST be provided as input.");i=Array.from(u.integerData),o=Ex(i,t,e.mode,e.isResize)}}else if(r[e.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");let s=i||t.map((a,u)=>Math.floor(a*o[u]));return[o,s]},Ox=(r,e,n)=>{let t=Array.from(r.floatData);return sa(t,e,n),t},Ex=(r,e,n,t)=>{let o=e.length,i=new Array(o);for(let s=0,a=o;s<a;s++)if(e[s]===0){if(r[s]!==0)throw new Error("Input dim is zero but required output dim is non-zero.");i[s]=1}else i[s]=r[s]/e[s];return sa(i,n,t),i}});var uh,Cx,lh=R(()=>{"use strict";In();uh=(r,e)=>(Cx(e),[new mt([e[0].dims.length],"int32",void 0,void 0,new Int32Array(e[0].dims))]),Cx=r=>{if(!r||r.length!==1)throw new Error("Shape requires 1 input.")}});var du,dh,ch,fh,Px,ph,kx,Dx,hh=R(()=>{"use strict";_t();Vo();Ke();Ue();du={name:"Slice",inputNames:["A"],inputTypes:[0]},dh=(r,e,n)=>(Px(e),[r.run({...du,cacheHint:n.cacheKey,get:()=>fh(r,e[0],n)},e)]),ch=r=>{let e=r.attributes.getInts("starts"),n=r.attributes.getInts("ends"),t=r.attributes.getInts("axes",[]);return Ce({starts:e,ends:n,axes:t})},fh=(r,e,n)=>{let t=n.axes.length===0?e.dims.slice(0).map((h,m)=>m):n.axes,o=le.normalizeAxes(t,e.dims.length),i=n.starts.map((h,m)=>h>e.dims[o[m]]-1?e.dims[o[m]]:le.normalizeAxis(h,e.dims[o[m]])),s=n.ends.map((h,m)=>h>e.dims[o[m]]-1?e.dims[o[m]]:le.normalizeAxis(h,e.dims[o[m]])),a=e.dims.slice(),u=[];for(let h=0;h<o.length;h++)a[o[h]]=s[h]-i[h],i[h]>0&&u.push(`outputIdx[${o[h]}] += ${i[h]};`);let d=`
      float process(int outputIdx[${a.length}]) {
        ${u.join(`
      `)}
        return _A(outputIdx);
      }`;return{...du,output:{dims:a,type:e.type,textureType:0},shaderSource:d}},Px=r=>{if(!r||r.length!==1)throw new Error("Slice requires 1 input.");if(rn.indexOf(r[0].type)===-1)throw new Error("Invalid input type.")},ph=(r,e)=>{Dx(e);let n=kx(r,e);return[r.run({...du,cacheHint:n.cacheKey,get:()=>fh(r,e[0],n)},[e[0]])]},kx=(r,e)=>{if(!r.session.isInitializer(e[1].dataId)||!r.session.isInitializer(e[2].dataId)||e.length>=4&&!r.session.isInitializer(e[3].dataId)||e.length>=5&&!r.session.isInitializer(e[4].dataId))throw new Error("dynamic slice attributes are not allowed");if(e.length>=5&&e[4].integerData.some(s=>s!==1))throw new Error("currently non-1 steps is not supported for Slice");let n=Array.from(e[1].integerData),t=Array.from(e[2].integerData),o=e.length>=4?Array.from(e[3].integerData):[],i=`${o};${n};${t}`;return{starts:n,ends:t,axes:o,cacheKey:i}},Dx=r=>{if(!r||r.length<3||r.length>5)throw new Error("Invalid input number.");if(r[1].type!=="int32"||r[1].dims.length!==1)throw new Error("Invalid input type.");if(r[2].type!=="int32"||r[2].dims.length!==1)throw new Error("Invalid input type.");if(r.length>=4&&(r[3].type!=="int32"||r[3].dims.length!==1))throw new Error("Invalid input type.");if(r.length>=5&&(r[4].type!=="int32"||r[4].dims.length!==1))throw new Error("Invalid input type.")}});var mh,gh,bh,yh,vh,wh,xh,Th,Bx,Rx,zx,$h,_h=R(()=>{"use strict";_t();Ke();it();Ue();oa();mh={name:"SoftmaxComputeMax",inputNames:["A"],inputTypes:[0]},gh={name:"SoftmaxComputeScale",inputNames:["A","Max"],inputTypes:[0,0]},bh={name:"SoftMax",inputNames:["A","Max","Norm"],inputTypes:[0,0,0]},yh=(r,e,n)=>{$h(e);let t=e[0].dims.slice(),o=le.normalizeAxis(n.axis,t.length),i=le.sizeToDimension(t,o),s=le.sizeFromDimension(t,o);return Th(r,e,n,i,s)},vh=r=>Ce({axis:r.attributes.getInt("axis",1)}),wh=r=>Ce({axis:r.attributes.getInt("axis",-1)}),xh=(r,e,n)=>{$h(e);let t=e[0].dims.slice(),o=le.normalizeAxis(n.axis,t.length),i=t.length,s=o!==i-1,a=[],u=[],l=[],d;s&&(u=Array.from({length:i}).map((y,x)=>x),u[o]=i-1,u[i-1]=o,u.map(y=>a.push(t[y])),d=Ce({perm:u}),l=En(r,e,d));let h=s?le.sizeToDimension(a,i-1):le.sizeToDimension(t,i-1),m=s?le.sizeFromDimension(a,i-1):le.sizeFromDimension(t,i-1),b=Th(r,s?l:e,n,h,m);return s?En(r,b,d):b},Th=(r,e,n,t,o)=>{let i=Bx(r,e[0],t,o,[t]),s=r.run({...mh,cacheHint:n.cacheKey,get:()=>i},e),a=Rx(r,e[0],t,o,i.output.dims,[t]),u=r.run({...gh,cacheHint:n.cacheKey,get:()=>a},[e[0],s]),l=zx(r,e[0],t,o,i.output.dims,a.output.dims);return[r.run({...bh,cacheHint:n.cacheKey,get:()=>l},[e[0],s,u])]},Bx=(r,e,n,t,o)=>{let[i,s]=r.calculateTextureWidthAndHeight(e.dims,0),a=o.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(o.length!==1)throw new Error("Dimensionality of the output should be 1");if(o[0]!==n)throw new Error("Shape of the output should be equal to logical row count");let u=ge(r.session.backend.glContext.version),l=`
      float process(int[${a}] indices) {
        int logical_row_start_offset = indices[0] * ${t};

        float max = getColorAsFloat(${u.texture2D}(A, offsetToCoords(logical_row_start_offset, ${i},
        ${s} )));
        for(int i=1; i<${t}; ++i)
        {
          float current = getColorAsFloat(${u.texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${i}, ${s})));
          if(current > max)
          max = current;
        }

        return max;
      }`;return{...mh,output:{dims:o,type:e.type,textureType:0},shaderSource:l}},Rx=(r,e,n,t,o,i)=>{let[s,a]=r.calculateTextureWidthAndHeight(e.dims,0),u=i.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(i.length!==1)throw new Error("Dimensionality of the output should be 1");if(i[0]!==n)throw new Error("Shape of the output should be equal to logical row count");if(o.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(o[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");let l=ge(r.session.backend.glContext.version),d=`
      float process(int[${u}] indices) {
        int logical_row_start_offset = indices[0] * ${t};

        float norm_factor = 0.0;
        float max = _Max(indices);
        for(int i=0; i<${t}; ++i)
        {
          norm_factor += exp(getColorAsFloat(${l.texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${s}, ${a}))) - max);
        }

        return norm_factor;
      }`;return{...gh,output:{dims:i,type:e.type,textureType:0},shaderSource:d}},zx=(r,e,n,t,o,i)=>{let[s,a]=r.calculateTextureWidthAndHeight(e.dims,0),u=e.dims.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(o.length!==1||i.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(o[0]!==n||i[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");let l=`
      float process(int[${u}] indices) {

      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)
      int offset = coordsToOffset(TexCoords, ${s}, ${a});

      //determine the logical row for this index
      int logical_row_index[1];
      logical_row_index[0] = offset / ${t};

      float norm_factor = _Norm(logical_row_index);

      // avoid possible division by 0
      // if norm_facor is 0, all elements are zero
      // if so, return 0
      if(norm_factor == 0.0)
        return 0.0;

      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;
    }`;return{...bh,output:{dims:e.dims,type:e.type,textureType:0},shaderSource:l}},$h=r=>{if(!r||r.length!==1)throw new Error("Softmax requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type")}});var Sh,Ih,Ah,Lx,Mx,Nx,Oh=R(()=>{"use strict";_t();Ke();Ue();Sh={name:"Split",inputNames:["A"],inputTypes:[0]},Ih=(r,e,n)=>{Nx(e);let t=le.normalizeAxis(n.axis,e[0].dims.length),o=Lx(r,e,t,n),i=[];for(let s=0;s<o;++s)i.push(r.run({...Sh,cacheHint:`${n.cacheKey};${s}`,get:()=>Mx(r,e[0],n,t,s)},e));return i},Ah=r=>{let e=r.attributes.getInt("axis",0),n=r.attributes.getInts("split",[]),t=r.outputs.length;return Ce({axis:e,split:n,numOutputs:t})},Lx=(r,e,n,t)=>{let[,o]=Ro.splitShape(e[0].dims,n,t.split,t.numOutputs);return o.length},Mx=(r,e,n,t,o)=>{let[i,s]=Ro.splitShape(e.dims,t,n.split,n.numOutputs),a=s[o],u=i[o],d=`
      float process(int indices[${u.length}]) {
        indices[${t}] += ${a};
        return _A(indices);
      }
    `;return{...Sh,cacheHint:`${n.cacheKey}:${o}`,output:{dims:u,type:e.type,textureType:0},shaderSource:d}},Nx=r=>{if(!r||r.length!==1)throw new Error("Split requires one input.");if(r[0].type!=="int8"&&r[0].type!=="uint8"&&r[0].type!=="int16"&&r[0].type!=="uint16"&&r[0].type!=="int32"&&r[0].type!=="uint32"&&r[0].type!=="float32"&&r[0].type!=="float64"&&r[0].type!=="bool")throw new Error("Invalid input type.")}});var cu,Eh,Ch,Fx,Vx,Ph=R(()=>{"use strict";Ke();cu=(r,e,n)=>{Fx(e);let t=le.squeezeShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},Eh=(r,e)=>(Vx(e),cu(r,[e[0]],Array.from(e[1].integerData))),Ch=r=>r.attributes.getInts("axes"),Fx=r=>{if(!r||r.length!==1)throw new Error("Squeeze requires 1 input.");if(r[0].type==="string")throw new Error("invalid input tensor types.")},Vx=r=>{if(!r||r.length!==2)throw new Error("Squeeze requires 2 inputs.");if(r[1].type!=="int32")throw new Error("Invalid input type.")}});var kh,Ux,Gx,Dh=R(()=>{"use strict";it();Ue();kh=(r,e)=>{Gx(e);let n={name:"Sum",inputNames:e.map((o,i)=>`X${i}`),inputTypes:new Array(e.length).fill(0)};return[r.run({...n,get:()=>Ux(r,e,n)},e)]},Ux=(r,e,n)=>{let t=ge(r.session.backend.glContext.version),o=e[0].dims.slice(),s=`
      void main() {
        vec4 result = ${e.map((a,u)=>`${t.texture2D}(X${u},TexCoords)`).join(" + ")};
        ${t.output} = result;
      }
    `;return{...n,output:{dims:o,type:e[0].type,textureType:0},hasMain:!0,shaderSource:s}},Gx=r=>{if(!r||r.length===0)throw new Error("Sum requires inputs.");let e=r[0].dims.length;for(let n=1;n<r.length;n++){if(e!==r[n].dims.length)throw new Error("Input shapes are mismatched.");for(let t=0;t<e;t++)if(r[0].dims[t]!==r[n].dims[t])throw new Error("Input shapes are not matched.")}if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.");for(let n=1;n<r.length;n++)if(r[0].type!==r[n].type)throw new Error("Input types are not matched.")}});var Bh,Wx,Hx,Rh=R(()=>{"use strict";Vo();Ue();Bh=(r,e)=>{Hx(e);let n={name:"Tile",inputNames:["A"],inputTypes:[0]};return[r.run({...n,get:()=>Wx(r,e,n)},e)]},Wx=(r,e,n)=>{let t=e[0].dims.slice(),o=new Array(t.length),i=[];for(let u=0;u<t.length;u++)o[u]=t[u]*e[1].numberData[u],i.push(`inputIdx[${u}] = int(mod(float(outputIdx[${u}]), ${t[u]}.));`);let s=o.length,a=`
      float process(int outputIdx[${s}]) {
        int inputIdx[${s}];
        ${i.join(`
`)}
        return _A(inputIdx);
      }
    `;return{...n,output:{dims:o,type:e[0].type,textureType:0},shaderSource:a}},Hx=r=>{if(!r||r.length!==2)throw new Error("Tile requires 2 input.");if(r[1].dims.length!==1)throw new Error("The second input shape must 1 dimension.");if(r[1].dims[0]!==r[0].dims.length)throw new Error("Invalid input shape.");if(rn.indexOf(r[0].type)===-1)throw new Error("Invalid input type.");if(r[1].type!=="int32"&&r[1].type!=="int16")throw new Error("Invalid repeat type.")}});var fu,zh,Lh,qx,jx,Mh=R(()=>{"use strict";Ke();fu=(r,e,n)=>{qx(e);let t=le.unsqueezeShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},zh=(r,e)=>(jx(e),fu(r,[e[0]],Array.from(e[1].integerData))),Lh=r=>r.attributes.getInts("axes"),qx=r=>{if(!r||r.length!==1)throw new Error("Unsqueeze requires 1 input.");if(r[0].type==="string")throw new Error("invalid input tensor types.")},jx=r=>{if(!r||r.length!==2)throw new Error("Unsqueeze requires 2 inputs.");if(r[1].type!=="int32")throw new Error("Invalid input type.")}});var Nh,Fh=R(()=>{"use strict";Yc();lf();ff();yf();ta();tp();sp();dp();pp();bp();wp();_p();Op();ra();kp();Hp();Qp();th();sh();lh();hh();_h();Oh();Ph();Dh();Rh();oa();Ys();Mh();su();Nh=[["Abs","","6+",vf],["Acos","","7+",wf],["Add","","7+",Xc],["And","","7+",Zc],["Asin","","7+",xf],["Atan","","7+",Tf],["AveragePool","","7+",Bp,Rp],["BatchNormalization","","7+",jc,Kc],["Cast","","6+",df,cf],["Ceil","","6+",Sf],["Clip","","6-10",js,$f],["Clip","","11+",_f],["Concat","","4+",mf,bf],["Conv","","1+",tu,ru],["ConvTranspose","","1+",Qf,ep],["Cos","","7+",If],["Div","","7+",Jc],["Dropout","","7+",Ks],["DepthToSpace","","1+",ip,ap],["Equal","","7+",Qc],["Elu","","6+",Af,Of],["Exp","","6+",Ef],["Flatten","","1+",up,lp],["Floor","","6+",Cf],["FusedConv","com.microsoft","1+",tu,ru],["Gather","","1+",cp,fp],["Gemm","","7-10",nu,mp],["Gemm","","11+",nu,gp],["GlobalAveragePool","","1+",Lp,Mp],["GlobalMaxPool","","1+",Gp],["Greater","","7+",ef],["Identity","","1+",Ks],["ImageScaler","","1+",yp,vp],["InstanceNormalization","","6+",Tp,$p],["LeakyRelu","","6+",Pf,kf],["Less","","7+",tf],["LRN","","1+",Sp,Ip],["Log","","6+",Df],["MatMul","","1+",qf,jf],["MaxPool","","1+",Np,Fp],["Mul","","7+",rf],["Neg","","6+",Bf],["Not","","1+",Rf],["Or","","7+",nf],["Pad","","2-10",ou,Ep],["Pad","","11+",Cp,Pp],["Pow","","7+",of],["PRelu","","7+",af],["ReduceLogSum","","1+",Zp,nn],["ReduceMax","","1+",Kp,nn],["ReduceMean","","1+",jp,nn],["ReduceMin","","1+",Yp,nn],["ReduceProd","","1+",Xp,nn],["ReduceSum","","1-12",qp,nn],["ReduceSumSquare","","1+",Jp,nn],["Relu","","6+",zf],["Reshape","","5+",eh],["Resize","","10",lu,ih],["Resize","","11+",lu,ah],["Shape","","1+",uh],["Sigmoid","","6+",Lf],["Sin","","7+",Mf],["Slice","","10+",ph],["Slice","","1-9",dh,ch],["Softmax","","1-12",yh,vh],["Softmax","","13+",xh,wh],["Split","","2-12",Ih,Ah],["Sqrt","","6+",Nf],["Squeeze","","1-12",cu,Ch],["Squeeze","","13+",Eh],["Sub","","7+",sf],["Sum","","6+",kh],["Tan","","7+",Ff],["Tanh","","6+",Vf],["Tile","","6+",Bh],["Transpose","","1+",En,np],["Upsample","","7-8",iu,nh],["Upsample","","9",iu,oh],["Unsqueeze","","1-12",fu,Lh],["Unsqueeze","","13+",zh],["Xor","","7+",uf]]});function Uh(r){let e={},n;for(;(n=Vh.exec(r))!==null;){let t=n[3].split(",").map(o=>{let i=o.trim().split(" ");return i&&i.length===2?{type:i[0],name:i[1]}:null}).filter(o=>o!==null);e[n[2]]={params:t,body:n[4]}}for(let t in e){let o=Kx.replace("__FUNC__",t),i=new RegExp(o,"gm");for(;(n=i.exec(r))!==null;){let s=n[1],a=n[2],u=n[3].split(","),l=s?`${s} ${a};`:"",d=e[t].body,h="";e[t].params.forEach((b,y)=>{b&&(h+=`${b.type} ${b.name} = ${u[y]};
`)}),d=`${h}
 ${d}`,d=d.replace("return",`${a} = `);let m=`
      ${l}
      {
        ${d}
      }
      `;r=r.replace(n[0],m)}}return r=r.replace(Vh,""),r}var Vh,Kx,Gh=R(()=>{"use strict";Vh=/@inline[\s\n\r]+(\w+)[\s\n\r]+([0-9a-zA-Z_]+)\s*\(([^)]*)\)\s*{(([^}]|[\n\r])*)}/gm,Kx="(\\w+)?\\s+([_0-9a-zA-Z]+)\\s+=\\s+__FUNC__\\((.*)\\)\\s*;"});function eo(r,e){let n=[],t=[],o=e!=null&&Array.isArray(e)&&e.length===0,i=e==null||o?null:Yx(e,r).sort(),s=0;for(let a=0;a<r.length;++a){if(i!=null){if(i[s]===a&&r[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${r[a]}' is not 1`);(i[s]==null||i[s]>a)&&r[a]===1&&(n.push(r[a]),t.push(a)),i[s]<=a&&s++}r[a]!==1&&(n.push(r[a]),t.push(a))}return{newShape:n,keptDims:t}}function Yx(r,e){let n=e.length;return r=r==null?e.map((t,o)=>o):[].concat(r),Kn(r.every(t=>t>=-n&&t<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${r}`),Kn(r.every(Xx),()=>`All values in axis param must be integers but got axis ${r}`),r.map(t=>t<0?n+t:t)}function Xx(r){return r%1===0}function Zx(r){if(r.length===0)return 1;let e=r[0];for(let n=1;n<r.length;n++)e*=r[n];return e}function Wh(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}var ua,pu=R(()=>{"use strict";nr();Ke();ua=class{constructor(e){this.maxTextureSize=e}computeTextureWH(e,n){let t=this.computeTexture(e,n);return n&&n.isPacked&&(t[0]/=2,t[1]/=2),n&&n.reverseWH?[t[1],t[0]]:t}computeTexture(e,n){let t=n&&n.isPacked;if(e.length===0)return t?[2,2]:[1,1];let o=this.maxTextureSize;if(n&&n.breakAxis!==void 0){let a=n.breakAxis>=e.length?1:e.slice(n.breakAxis).reduce((l,d)=>l*d),u=n.breakAxis<=0?1:e.slice(0,n.breakAxis).reduce((l,d)=>l*d);if(a>o||u>o)Ye.verbose("TextureLayout",`Given width/height preferences were unattainable: shape:${e}, breakAxis:${n.breakAxis}`);else return[a,u]}let i=e.slice(0);t&&(o=o*2,i=i.map((a,u)=>u>=i.length-2?i[u]%2===0?i[u]:i[u]+1:i[u]),i.length===1&&(i=[2,i[0]])),i.length!==2&&(i=eo(i).newShape);let s=Zx(i);return i.length<=1&&s<=o?[1,s]:i.length===2&&i[0]<=o&&i[1]<=o?i:i.length===3&&i[0]*i[1]<=o&&i[2]<=o?[i[0]*i[1],i[2]]:i.length===3&&i[0]<=o&&i[1]*i[2]<=o?[i[0],i[1]*i[2]]:i.length===4&&i[0]*i[1]*i[2]<=o&&i[3]<=o?[i[0]*i[1]*i[2],i[3]]:i.length===4&&i[0]<=o&&i[1]*i[2]*i[3]<=o?[i[0],i[1]*i[2]*i[3]]:t?Wh(s/4).map(a=>a*2):Wh(s)}}});var la,Hh=R(()=>{"use strict";Ke();Hr();it();pu();Sr();la=class extends sr{constructor(n){super(n)}getFunctions(){return{...this.offsetToCoords(),...this.coordsToOffset(),...this.toVec(),...this.valueFrom(),...this.getCommonUtilFuncs(),...this.getInputsSamplingSnippets(),...this.getOutputSamplingSnippet()}}getCustomTypes(){return{}}offsetToCoords(){let n="offsetToCoords";return{offsetToCoords:new se(`
      vec2 ${n}(int offset, int width, int height) {
        int t = offset / width;
        int s = offset - t*width;
        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);
        return coords;
      }
      `)}}coordsToOffset(){let n="coordsToOffset";return{coordsToOffset:new se(`
      int ${n}(vec2 coords, int width, int height) {
        float s = coords.s * float(width);
        float t = coords.t * float(height);
        int offset = int(t) * width + int(s);
        return offset;
      }
      `)}}getOutputSamplingSnippet(){let n=this.context.outputTextureLayout;return n.isPacked?this.getPackedOutputSamplingSnippet(n):this.getUnpackedOutputSamplingSnippet(n)}getPackedOutputSamplingSnippet(n){let t=n.unpackedShape,o=[n.width,n.height],i={},s="getOutputCoords";switch(t.length){case 0:i[s]=this.getOutputScalarCoords();break;case 1:i[s]=this.getOutputPacked1DCoords(t,o);break;case 2:i[s]=this.getOutputPacked2DCoords(t,o);break;case 3:i[s]=this.getOutputPacked3DCoords(t,o);break;default:i[s]=this.getOutputPackedNDCoords(t,o)}let u=`
      void setOutput(vec4 val) {
        ${ge(this.context.glContext.version).output} = val;
      }
    `,l="floatTextureSetRGBA";return i[l]=new se(u),i}getUnpackedOutputSamplingSnippet(n){let t=n.unpackedShape,o=[n.width,n.height],i={},s="getOutputCoords";switch(t.length){case 0:i[s]=this.getOutputScalarCoords();break;case 1:i[s]=this.getOutputUnpacked1DCoords(t,o);break;case 2:i[s]=this.getOutputUnpacked2DCoords(t,o);break;case 3:i[s]=this.getOutputUnpacked3DCoords(t,o);break;case 4:i[s]=this.getOutputUnpacked4DCoords(t,o);break;case 5:i[s]=this.getOutputUnpacked5DCoords(t,o);break;case 6:i[s]=this.getOutputUnpacked6DCoords(t,o);break;default:throw new Error(`Unsupported output dimensionality: ${t.length}`)}let u=`
        void setOutput(float val) {
          ${ge(this.context.glContext.version).output} = vec4(val, 0, 0, 0);
        }
    `,l="floatTextureSetR";return i[l]=new se(u),i}getOutputScalarCoords(){return new se(`
      int getOutputCoords() {
        return 0;
      }
    `)}getOutputPacked1DCoords(n,t){let o=t,i="";return o[0]===1?(i=`
          int getOutputCoords() {
            return 2 * int(TexCoords.y * ${o[1]}.0);
          }
        `,new se(i)):o[1]===1?(i=`
          int getOutputCoords() {
            return 2 * int(TexCoords.x * ${o[0]}.0);
          }
        `,new se(i)):(i=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                 vec2(${o[0]}, ${o[1]}));
          return 2 * (resTexRC.y * ${o[0]} + resTexRC.x);
        }
      `,new se(i))}getOutputPacked2DCoords(n,t){let o="";if(Tn.arraysEqual(n,t))return o=`
        ivec2 getOutputCoords() {
          return 2 * ivec2(TexCoords.xy * vec2(${t[0]}, ${t[1]}));
        }
      `,new se(o);let i=t,s=Math.ceil(n[1]/2);return o=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${i[0]}, ${i[1]}));

          int index = resTexRC.y * ${i[0]} + resTexRC.x;

          // reverse r and c order for packed texture
          int r = imod(index, ${s}) * 2;
          int c = 2 * (index / ${s});

          return ivec2(r, c);
        }
      `,new se(o)}getOutputPacked3DCoords(n,t){let o=[t[0],t[1]],i=Math.ceil(n[2]/2),s=i*Math.ceil(n[1]/2),a=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${o[0]}, ${o[1]}));
          int index = resTexRC.y * ${o[0]} + resTexRC.x;

          int b = index / ${s};
          index -= b * ${s};

          // reverse r and c order for packed texture
          int r = imod(index, ${i}) * 2;
          int c = 2 * (index / ${i});

          return ivec3(b, r, c);
        }
      `;return new se(a)}getOutputPackedNDCoords(n,t){let o=[t[0],t[1]],i=Math.ceil(n[n.length-1]/2),s=i*Math.ceil(n[n.length-2]/2),a=s,u="",l="b, r, c";for(let h=2;h<n.length-1;h++)a*=n[n.length-h-1],u=`
      int b${h} = index / ${a};
      index -= b${h} * ${a};
    `+u,l=`b${h}, `+l;let d=`
      ivec${n.length} getOutputCoords() {
        ivec2 resTexRC = ivec2(TexCoords.xy *
                              vec2(${o[0]}, ${o[1]}));
        int index = resTexRC.y * ${o[0]} + resTexRC.x;

        ${u}

        int b = index / ${s};
        index -= b * ${s};

        // reverse r and c order for packed texture
        int r = imod(index, ${i}) * 2;
        int c = 2 * (index / ${i});

        return ivec${n.length}(${l});
      }
    `;return new se(d)}getOutputUnpacked1DCoords(n,t){let o=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          return resTexRC.y * ${t[0]} + resTexRC.x;
        }
      `;return new se(o)}getOutputUnpacked2DCoords(n,t){let o=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          int r = index / ${n[1]};
          int c = index - r * ${n[1]};
          return ivec2(r, c);
        }
      `;return new se(o)}getOutputUnpacked3DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d"],u=s.map((l,d)=>{let h=`int ${a[d]} = index / ${l}`,m=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${h}; ${m};`}).join("");return o=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${u}
          return ivec3(r, c, d);
        }
      `,new se(o)}getOutputUnpacked4DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d","d2"],u=s.map((l,d)=>{let h=`int ${a[d]} = index / ${l}`,m=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${h}; ${m};`}).join("");return o=`
      ivec4 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${u}
          return ivec4(r, c, d, d2);
        }
      `,new se(o)}getOutputUnpacked5DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d","d2","d3"],u=s.map((l,d)=>{let h=`int ${a[d]} = index / ${l}`,m=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${h}; ${m};`}).join("");return o=`
      ivec5 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${u}
          return ivec5(r, c, d, d2, d3);
        }
      `,new se(o)}getOutputUnpacked6DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d","d2","d3","d4"],u=s.map((l,d)=>{let h=`int ${a[d]} = index / ${l}`,m=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${h}; ${m};`}).join("");return o=`
     ivec6 getOutputCoords() {
         ivec2 resTexRC = ivec2(TexCoords.xy *
                               vec2(${t[0]}, ${t[1]}));
         int index = resTexRC.y * ${t[0]} + resTexRC.x;
         ${u}
         return ivec6(r, c, d, d2, d3, d4);
       }
     `,new se(o)}getCommonUtilFuncs(){let n={},t="uvFromFlat";n[t]=new se(`
    vec2 uvFromFlat(int texNumR, int texNumC, int index) {
      int texC = index / texNumR;
      int texR = index - texC * texNumR;
      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to
      //       v.
      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);
    }
    `),t="packedUVfrom1D",n[t]=new se(`
      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
        int texelIndex = index / 2;
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="packedUVfrom2D",n[t]=new se(`
      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {
        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="packedUVfrom3D",n[t]=new se(`
      vec2 packedUVfrom3D(int texNumR, int texNumC,
          int texelsInBatch, int texelsInLogicalRow, int b,
          int row, int col) {
        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = index / texNumC;
        int texC = index - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="sampleTexture";let o=ge(this.context.glContext.version);return n[t]=new se(`
        float sampleTexture(sampler2D textureSampler, vec2 uv) {
            return ${o.texture2D}(textureSampler, uv).r;
        }`),n}getInputsSamplingSnippets(){let n={},t=this.context.outputTextureLayout;return this.context.programInfo.inputNames.forEach((o,i)=>{let s=this.context.inputTextureLayouts[i],a=Ki(o);s.isPacked?n[a]=this.getPackedSamplerFromInput(a,o,s):n[a]=this.getUnpackedSamplerFromInput(a,o,s);let u=Pc(o);s.unpackedShape.length<=t.unpackedShape.length&&(s.isPacked?n[u]=this.getPackedSamplerAtOutputCoords(u,s,t,o):n[u]=this.getUnpackedSamplerAtOutputCoords(u,s,t,o))}),n}getPackedSamplerAtOutputCoords(n,t,o,i){let s=t.unpackedShape,a=o.unpackedShape,l=Ki(i),d=s.length,h=a.length,m=Nt.getBroadcastDims(s,a),b=Ft(h),y=h-d,x,A=yr();d===0?x="":h<2&&m.length>=1?x="coords = 0;":x=m.map(X=>`coords.${A[X+y]} = 0;`).join(`
`);let I="";h<2&&d>0?I="coords":I=s.map((X,N)=>`coords.${A[N+y]}`).join(", ");let $="return outputValue;",E=le.size(s)===1,z=le.size(a)===1;if(d===1&&!E&&!z)$=`
        return vec4(outputValue.xy, outputValue.xy);
      `;else if(E&&!z)h===1?$=`
          return vec4(outputValue.x, outputValue.x, 0., 0.);
        `:$=`
          return vec4(outputValue.x);
        `;else if(m.length){let X=d-2,N=d-1;m.indexOf(X)>-1&&m.indexOf(N)>-1?$="return vec4(outputValue.x);":m.indexOf(X)>-1?$="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":m.indexOf(N)>-1&&($="return vec4(outputValue.xx, outputValue.zz);")}let G=`
        int lastDim = coords.${A[h-1]};
        coords.${A[h-1]} = coords.${A[h-2]};
        coords.${A[h-2]} = lastDim;
      `,j=`
      vec4 ${n}() {
        ${b} coords = getOutputCoords();
        ${G}
        ${x}
        vec4 outputValue = ${l}(${I});
        ${$}
      }
    `;return new se(j,["coordinates.getOutputCoords"])}getUnpackedSamplerAtOutputCoords(n,t,o,i){let s=[o.width,o.height],a=[t.width,t.height],u=t.unpackedShape.length,l=o.unpackedShape.length,d=t.unpackedShape,h=o.unpackedShape,m=Ki(i);if(u===l&&Tn.arraysEqual(a,s)){let E=`
          float ${n}() {
            return sampleTexture(${i}, TexCoords);
          }
        `;return new se(E,["coordinates.sampleTexture"])}let b=Ft(l),y=Nt.getBroadcastDims(d,h),x=l-u,A,I=yr();u===0?A="":l<2&&y.length>=1?A="coords = 0;":A=y.map(E=>`coords.${I[E+x]} = 0;`).join(`
`);let $="";l<2&&u>0?$="coords":$=t.unpackedShape.map((E,F)=>`coords.${I[F+x]}`).join(", ");let O=`
        float ${n}() {
          ${b} coords = getOutputCoords();
          ${A}
          return ${m}(${$});
        }
      `;return new se(O,["coordinates.getOutputCoords"])}getPackedSamplerFromInput(n,t,o){switch(o.unpackedShape.length){case 0:return this.getPackedSamplerScalar(n,t);case 1:return this.getPackedSampler1D(n,t,o);case 2:return this.getPackedSampler2D(n,t,o);case 3:return this.getPackedSampler3D(n,t,o);default:return this.getPackedSamplerND(n,t,o)}}getUnpackedSamplerFromInput(n,t,o){let i=o.unpackedShape;switch(i.length){case 0:return this.getUnpackedSamplerScalar(n,t,o);case 1:return this.getUnpackedSampler1D(n,t,o);case 2:return this.getUnpackedSampler2D(n,t,o);case 3:return this.getUnpackedSampler3D(n,t,o);case 4:return this.getUnpackedSampler4D(n,t,o);case 5:return this.getUnpackedSampler5D(n,t,o);case 6:return this.getUnpackedSampler6D(n,t,o);default:throw new Error(`Unsupported dimension ${i.length}-D`)}}getPackedSamplerScalar(n,t){let o=ge(this.context.glContext.version),i=`
          vec4 ${n}() {
            return ${o.texture2D}(${t}, halfCR);
          }
        `;return new se(i)}getPackedSampler1D(n,t,o){let i=[o.width,o.height],s=[i[1],i[0]],a=ge(this.context.glContext.version),l=`vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
      ${s[0]}, ${s[1]}, index);
      return ${a.texture2D}(${t}, uv);
    }`;return new se(l,["coordinates.packedUVfrom1D"])}getPackedSampler2D(n,t,o){let i=o.unpackedShape,s=[o.width,o.height],a=ge(this.context.glContext.version),u=s[0],l=s[1];if(s!=null&&Tn.arraysEqual(i,s)){let y=`vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${u}.0);
        return ${a.texture2D}(${t}, uv);
      }`;return new se(y)}let d=s,h=Math.ceil(i[1]/2),b=`vec4 ${n}(int row, int col) {
      vec2 uv = packedUVfrom2D(${d[1]}, ${d[0]}, ${h}, row, col);
      return ${a.texture2D}(${t}, uv);
    }`;return new se(b,["coordinates.packedUVfrom2D"])}getPackedSampler3D(n,t,o){let i=o.unpackedShape,s=[o.width,o.height],a=[s[0],s[1]],u=ge(this.context.glContext.version);if(i[0]===1){let x=i.slice(1),A=[1,2],I=Yn(i,x),$=["b","row","col"],O=JSON.parse(JSON.stringify(o));O.unpackedShape=I;let E=this.getPackedSamplerFromInput(n,t,O),z=`${E.routineBody}
      vec4 ${n}(int b, int row, int col) {
        return ${n}(${Xn($,A)});
      } `;return new se(z,E.dependencies)}let l=a[0],d=a[1],h=Math.ceil(i[2]/2),m=h*Math.ceil(i[1]/2),y=`vec4 ${n}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${d}, ${l}, ${m}, ${h}, b, row, col);
      return ${u.texture2D}(${t}, uv);}`;return new se(y,["coordinates.packedUVfrom3D"])}getPackedSamplerND(n,t,o){let i=o.unpackedShape,s=i.length,a=[o.width,o.height],u=ge(this.context.glContext.version),l=[a[0],a[1]],d=l[1],h=l[0],m=Math.ceil(i[s-1]/2),b=m*Math.ceil(i[s-2]/2),y="int b, int row, int col",x=`b * ${b} + (row / 2) * ${m} + (col / 2)`;for(let $=2;$<s-1;$++)y=`int b${$}, `+y,b*=i[s-$-1],x=`b${$} * ${b} + `+x;let I=`vec4 ${n}(${y}) {
      int index = ${x};
      int texR = index / ${h};
      int texC = index - texR * ${h};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}, ${d});
      return ${u.texture2D}(${t}, uv);
    }`;return new se(I)}getUnpackedSamplerScalar(n,t,o){let[i,s]=[o.width,o.height];if(i===1&&s===1){let u=`
          float ${n}() {
            return sampleTexture(${t}, halfCR);
          }
        `;return new se(u,["coordinates.sampleTexture"])}let a=`
        float ${n}() {
          int offset_${t} = coordsToOffset(TexCoords, ${i}, ${s});
          vec2 uv = uvFromFlat(${i}, ${s}, offset_${t});
          return sampleTexture(${t}, uv);
        }
      `;return new se(a,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler1D(n,t,o){let i=o.width,s=o.height;if(s===1&&i===1){let u=`
        float ${n}(int index) {
          return sampleTexture(${t}, halfCR);
        }
      `;return new se(u,["coordinates.sampleTexture"])}if(s===1){let u=`
          float ${n}(int index) {
            vec2 uv = vec2((float(index) + 0.5) / ${i}.0, 0.5);
            return sampleTexture(${t}, uv);
          }
        `;return new se(u,["coordinates.sampleTexture"])}if(i===1){let u=`
          float ${n}(int index) {
            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${s}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new se(u,["coordinates.sampleTexture"])}let a=`
        float ${n}(int index) {
          vec2 uv = uvFromFlat(${i}, ${s}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new se(a,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler2D(n,t,o){let i=o.unpackedShape,s=[o.height,o.width];if(s!=null&&Tn.arraysEqual(i,s)){let b=s[1],y=s[0],x=`
          float ${n}(int row, int col) {
            vec2 uv = (vec2(row, col) + halfCR) / vec2(${b}.0, ${y}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new se(x,["coordinates.sampleTexture"])}let{newShape:a,keptDims:u}=eo(i),l=a;if(l.length<i.length){let b=Yn(i,l),y=JSON.parse(JSON.stringify(o));y.unpackedShape=b;let x=["col","row"],A=`
          ${this.getUnpackedSamplerFromInput(n,t,y).routineBody}
          float ${n}(int row, int col) {
            return ${n}(${Xn(x,u)});
          }
        `;return new se(A,["coordinates.sampleTexture"])}let d=s[1],h=s[0];if(h===1){let b=`
          float ${n}(int row, int col) {
            int offset_${t} = coordsToOffset(TexCoords, ${d}, ${h});
            float index = dot(vec3(row, col, offset_${t}), vec3(${i[1]}, 1, 1));
            vec2 uv = vec2(0.5, (index + 0.5) / ${d}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new se(b,["coordinates.sampleTexture","coordinates.coordsToOffset"])}if(d===1){let b=`
          float ${n}(int row, int col) {
            int offset_${t} = coordsToOffset(TexCoords, ${d}, ${h});
            float index = dot(vec3(row, col, offset_${t}), vec3(${i[1]}, 1, 1));
            vec2 uv = vec2((index + 0.5) / ${h}.0, 0.5);
            return sampleTexture(${t}, uv);
          }
        `;return new se(b,["coordinates.sampleTexture","coordinates.coordsToOffset"])}let m=`
        float ${n}(int row, int col) {
          int index = col * ${i[1]} + row;
          vec2 uv = uvFromFlat(${d}, ${h}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new se(m,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler3D(n,t,o){let i=o.unpackedShape,s=i[1]*i[2],a=i[2],{newShape:u,keptDims:l}=eo(i),d=u;if(d.length<i.length){let y=Yn(i,d),x=["batch","col","row"],A=JSON.parse(JSON.stringify(o));A.unpackedShape=y;let I=this.getUnpackedSamplerFromInput(n,t,A),$=l.reverse(),O=`
          ${I.routineBody}
          float ${n}(int batch, int row, int col) {
            return ${n}(${Xn(x,$)});
          }
        `;return new se(O,I.dependencies)}let h=o.width,m=o.height,b=`
          float ${n}(int depth, int row, int col) {
            // Explicitly use integer operations as dot() only works on floats.
            int index = depth * ${s} + col * ${a} + row;
            vec2 uv = uvFromFlat(${h}, ${m}, index);
            return sampleTexture(${t}, uv);
          }
      `;return new se(b,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler4D(n,t,o){let i=o.unpackedShape,s=i[3],a=i[2]*s,u=i[1]*a,l=o.width,d=o.height,h=`
        float ${n}(int row, int col, int depth, int depth2) {
          int index = row * ${u} + col * ${a} +
              depth2 * ${s} + depth;
          vec2 uv = uvFromFlat(${l}, ${d}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new se(h,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler5D(n,t,o){let i=o.unpackedShape,s=i[4],a=i[3]*s,u=i[2]*a,l=i[1]*u,{newShape:d,keptDims:h}=eo(i);if(d.length<i.length){let x=Yn(i,d),A=["row","col","depth","depth2","depth3"],I=JSON.parse(JSON.stringify(o));I.unpackedShape=x;let $=`
          ${this.getUnpackedSamplerFromInput(n,t,I).routineBody}
          float ${n}(int row, int col, int depth, int depth2, int depth3) {
            return ${n}(${Xn(A,h)});
          }
        `;return new se($,["coordinates.sampleTexture","coordinates.uvFromFlat"])}let m=o.width,b=o.height,y=`
        float ${n}(int row, int col, int depth, int depth2, int depth3) {
          int index = row * ${l} + col * ${u} + depth * ${a} +
          depth3 * ${s} + depth2;
          vec2 uv = uvFromFlat(${m}, ${b}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new se(y,["coordinates.sampleTexture","coordinates.uvFromFlat"])}getUnpackedSampler6D(n,t,o){let i=o.unpackedShape,s=i[5],a=i[4]*s,u=i[3]*a,l=i[2]*u,d=i[1]*l,{newShape:h,keptDims:m}=eo(i);if(h.length<i.length){let A=Yn(i,h),I=["row","col","depth","depth2","depth3","depth4"],$=JSON.parse(JSON.stringify(o));$.unpackedShape=A;let O=`
            ${this.getUnpackedSamplerFromInput(n,t,$).routineBody}
            float ${n}(int row, int col, int depth,
              int depth2, int depth3, int depth4) {
              return ${n}(${Xn(I,m)});
            }
          `;return new se(O,["coordinates.sampleTexture","coordinates.uvFromFlat"])}let b=o.width,y=o.height,x=`
          float ${n}(int row, int col, int depth,
            int depth2, int depth3, int depth4) {
            int index = row * ${d} + col * ${l} + depth * ${u} +
            depth2 * ${a} + depth3 * ${s} + depth4;
            vec2 uv = uvFromFlat(${b}, ${y}, index);
            return sampleTexture(${t}, uv);
          }
        `;return new se(x,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}toVec(){let n=this.context.outputTextureLayout,t=n.shape.length,o=n.strides,i=n.width,s=n.height,a=[];for(let l=0;l<t-1;++l)a.push(`
        c[${l}] = offset / ${o[l]};`),a.push(`
        offset -= c[${l}] * ${o[l]};`);a.push(`
        c[${t-1}] = offset;`);let u=`
      void toVec(vec2 texCoords, out int c[${t}]) {
        int offset = coordsToOffset(texCoords, ${i}, ${s});
        ${a.join("")}
      }
      void toVec(int offset, out int c[${t}]) {
        ${a.join("")}
      }
    `;return{toVec:new se(u,["coordinates.coordsToOffset"])}}valueFrom(){let n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o],a=(i.unpackedShape.length>0?i.unpackedShape:i.shape).length,u=`_${t}`;n[u]=new se(this.getValueFromSingle(t,a,i.width,i.height,!1),[`shapeUtils.indicesToOffset${u}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"]),u=u+"_T",n[u]=new se(this.getValueFromSingle(t,a,i.width,i.height,!0),[`shapeUtils.indicesToOffset${u}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"])}),n}getValueFromSingle(n,t,o,i,s){let a=`_${n}`;s&&(a=a+"_T");let u=ge(this.context.glContext.version);return`
        float ${a}(int m[${t}]) {
          int offset = indicesToOffset${a}(m);
          vec2 coords = offsetToCoords(offset, ${o}, ${i});
          float value = getColorAsFloat(${u.texture2D}(${n}, coords));
          return value;
        }
        `}getPackedValueFrom(n,t,o,i,s){let a=`_${n}_Pack`;s&&(a=a+"_T");let u=ge(this.context.glContext.version);return`
        vec4 ${a}(int m[${t}]) {
          int offset = indicesToOffset_${n}(m);
          vec2 coords = offsetToCoords(offset, ${o}, ${i});
          return ${u.texture2D}(${n}, coords);
        }
        `}}});var da,qh=R(()=>{"use strict";Hr();da=class r extends sr{constructor(e){super(e)}getFunctions(){return{...this.encodeFloat32(),...this.decodeFloat32()}}getCustomTypes(){return{}}encodeFloat32(){return{encode:new se(`highp vec4 encode(highp float f) {
        return vec4(f, 0.0, 0.0, 0.0);
      }
        `)}}decodeFloat32(){return{decode:new se(`highp float decode(highp vec4 rgba) {
        return rgba.r;
      }
        `)}}encodeUint8(){let e=r.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{encode:new se(`
      highp vec4 encode(highp float f) {
        highp float F = abs(f);
        highp float Sign = step(0.0,-f);
        highp float Exponent = floor(log2(F));
        highp float Mantissa = (exp2(- Exponent) * F);
        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));
        highp vec4 rgba;
        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));
        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);
        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));
        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));
        ${e}
        rgba = rgba / 255.0; // values need to be normalized to [0,1]
        return rgba;
    }
        `)}}decodeUint8(){let e=r.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{decode:new se(`
        highp float decode(highp vec4 rgba) {
          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]
          ${e}
          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;
          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;
          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);
          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));
          return Result;
      }
        `)}}static isLittleEndian(){let e=new ArrayBuffer(4),n=new Uint32Array(e),t=new Uint8Array(e);if(n[0]=3735928559,t[0]===239)return!0;if(t[0]===222)return!1;throw new Error("unknown endianness")}}});var ca,jh=R(()=>{"use strict";Hr();it();ca=class extends sr{constructor(e){super(e)}getFunctions(){return{...this.setFragColor(),...this.getColorAsFloat()}}getCustomTypes(){return{}}setFragColor(){let e=ge(this.context.glContext.version);return{setFragColor:new se(`
        void setFragColor(float value) {
            ${e.output} = encode(value);
        }
        `,["encoding.encode"])}}getColorAsFloat(){return{getColorAsFloat:new se(`
        float getColorAsFloat(vec4 color) {
            return decode(color);
        }
        `,["encoding.decode"])}}}});var fa,Kh=R(()=>{"use strict";Hr();fa=class r extends sr{constructor(e){super(e)}getFunctions(){return{...this.bcastIndex(),...this.bcastMatmulIndex(),...this.offsetToIndices(),...this.indicesToOffset(),...this.incrementIndices()}}getCustomTypes(){return{}}bcastIndex(){let e=this.context.outputTextureLayout.shape.length,n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o].unpackedShape;if(i.length<=e){let s=i.length,a=e-s,u=`bcastIndices_${t}`,l="";for(let h=0;h<s;++h)l+=`
          realIndices[${h}] = int( mod(float(bcastedIndices[${a+h}]), ${i[h]}.0) );
          `;let d=`
        void ${u} (int bcastedIndices[${e}], out int realIndices[${s}]) {
          ${l}
        }
        `;n[u]=new se(d)}}),n}bcastMatmulIndex(){let e=this.context.outputTextureLayout.shape.length,n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o].shape;if(!(i.length<2||i.length>e)){let s=i.length,a=e-s,u=`bcastMatmulIndices_${t}`,l="";for(let h=0;h<s-2;++h)l+=`
          realIndices[${h}] = int( mod(float(bcastedIndices[${a+h}]), ${i[h]}.0) );
          `;let d=`
        void ${u}(int bcastedIndices[${e}], out int realIndices[${s}]) {
          ${l}
          realIndices[${s-1}] = bcastedIndices[${e-1}];
          realIndices[${s-2}] = bcastedIndices[${e-2}];
        }
        `;n[u]=new se(d)}}),n}indicesToOffset(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=this.context.inputTextureLayouts[t].strides,s=o.length,a=`indicesToOffset_${n}`;e[a]=new se(r.indexToOffsetSingle(a,s,i)),a=`indicesToOffset_${n}_T`,e[a]=new se(r.indexToOffsetSingle(a,s,i.slice().reverse()))}),e}static indexToOffsetSingle(e,n,t){let o="";for(let i=n-1;i>=0;--i)o+=`
        offset += indices[${i}] * ${t[i]};
        `;return`
      int ${e}(int indices[${n}]) {
        int offset = 0;
        ${o}
        return offset;
      }
      `}offsetToIndices(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=this.context.inputTextureLayouts[t].strides,s=o.length,a=`offsetToIndices_${n}`;e[a]=new se(r.offsetToIndicesSingle(a,s,i)),a=`offsetToIndices_${n}_T`,e[a]=new se(r.offsetToIndicesSingle(a,s,i.slice().reverse()))}),e}static offsetToIndicesSingle(e,n,t){let o=[];for(let i=0;i<n-1;++i)o.push(`
      indices[${i}] = offset / ${t[i]};`),o.push(`
        offset -= indices[${i}] * ${t[i]};`);return o.push(`
      indices[${n-1}] = offset;`),`
      void ${e}(int offset, out int indices[${n}]) {
        ${o.join("")}
      }
      `}incrementIndices(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=o.length,s=`incrementIndices_${n}`,a="";for(let l=0;l<i;++l)a+=`
        shape[${l}] = ${o[l]};`;let u=`
        void ${s}(int axis, out int indices[${i}]) {
          int shape[${i}];
          ${a};
          for(int i = ${i} -1 ; i >= 0; --i) {
            if(i > axis) continue;
            indices[i] += 1;
            if(indices[i] < shape[i]) {
              break;
            }
            indices[i] = 0;
          }
        }
        `;e[s]=new se(u)}),e}}});var pa,Yh=R(()=>{"use strict";Hr();pa=class extends sr{constructor(e){super(e)}getCustomTypes(){return{}}getFunctions(){return{...this.binaryVecFunctions(),...this.copyVec(),...this.setVecItem(),...this.getVecItem()}}binaryVecFunctions(){let n=this.context.outputTextureLayout.shape.length,t={add:"+=",sub:"-=",mul:"*=",div:"/="},o={};for(let i in t){let s=`${i}Vec`,a="";for(let l=0;l<n;++l)a+=`
          dest[${l}] ${t[i]} src[${l}];
          `;let u=`
        void ${s}(int src[${n}], out int dest[${n}]) {
          ${a}
        }
        `;o[s]=new se(u)}return o}copyVec(){let n=this.context.outputTextureLayout.shape.length,t="";for(let i=0;i<n;++i)t+=`
        dest[${i}] = src[${i}];
        `;let o=`
      void copyVec(int src[${n}], out int dest[${n}]) {
        ${t}
      }
      `;return{copyVec:new se(o)}}setVecItem(){let n=this.context.outputTextureLayout.shape.length,t=`
        if(index < 0)
            index =${n} + index;
        if (index == 0)
            m[0] = value;
        `;for(let i=1;i<n-1;++i)t+=`
        else if (index == ${i})
            m[${i}] = value;
            `;t+=`
        else
            m[${n-1}] = value;
        `;let o=`
      void setVecItem(out int m[${n}], int index, int value) {
        ${t}
      }
        `;return{setVecItem:new se(o)}}getVecItem(){let n=this.context.outputTextureLayout.shape.length,t=`
        if(index < 0)
            index = ${n} + index;
        if (index == 0)
            return m[0];
      `;for(let i=1;i<n-1;++i)t+=`
        else if (index == ${i})
            return m[${i}];
      `;t+=`
        else
            return m[${n-1}];
        `;let o=`
      int getVecItem(int m[${n}], int index) {
        ${t}
      }
    `;return{getVecItem:new se(o)}}}});var hu,Xh=R(()=>{"use strict";Hh();qh();jh();Kh();Yh();hu={encoding:da,fragcolor:ca,vec:pa,shapeUtils:fa,coordinates:la}});var ha,Zh=R(()=>{"use strict";Hr();Gh();Xh();it();ha=class{constructor(e,n,t,o){this.libs={};this.glslLibRoutineDependencyGraph={};this.context=new Ji(e,n,t,o),Object.keys(hu).forEach(s=>{let a=new hu[s](this.context);this.libs[s]=a});let i=this.glslLibRoutineDependencyGraph;for(let s in this.libs){let u=this.libs[s].getFunctions();for(let l in u){let d=s+"."+l,h;i[d]?(h=i[d],h.routineBody=u[l].routineBody):(h=new Fo(d,u[l].routineBody),i[d]=h);let m=u[l].dependencies;if(m)for(let b=0;b<m.length;++b)if(i[m[b]])h.addDependency(i[m[b]]);else{let y=new Fo(m[b]);i[m[b]]=y,h.addDependency(y)}}}}preprocess(){let e=this.context.programInfo,n=e.shaderSource;return this.context.programInfo.hasMain||(n=`${n}
      ${Cc(this.context.glContext.version,this.context.outputTextureLayout.shape.length)}`),n=Uh(n),`${Ec(this.context.glContext.version)}
    ${this.getUniforms(e.inputNames,e.variables)}
    ${this.getImports(n)}
    ${n}`}getImports(e){let n=this.selectGlslLibRoutinesToBeIncluded(e);if(n.length===0)return"";let t="";for(let o=0;o<n.length;++o)if(n[o].routineBody)t+=n[o].routineBody+`
`;else throw new Error(`Missing body for the Glsl Library routine: ${n[o].name}`);return t}selectGlslLibRoutinesToBeIncluded(e){let n=[];return Object.keys(this.glslLibRoutineDependencyGraph).forEach(t=>{let o=t.split(".")[1];e.indexOf(o)!==-1&&n.push(this.glslLibRoutineDependencyGraph[t])}),Qi.returnOrderedNodes(n)}getUniforms(e,n){let t=[];if(e)for(let o of e)t.push(`uniform sampler2D ${o};`);if(n)for(let o of n)t.push(`uniform ${o.type} ${o.name}${o.arrayLength?`[${o.arrayLength}]`:""};`);return t.join(`
`)}}});var ma,Jh=R(()=>{"use strict";Ct();nr();Zh();it();ma=class{constructor(e,n,t){this.profiler=e;this.glContext=n;this.textureLayoutStrategy=t;this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,n){this.repo.set(e,n)}run(e,n,t){this.profiler.event("op",`ProgramManager.run ${e.programInfo.name??"unknown kernel"}`,()=>{let o=this.glContext.gl,i=e.program;o.useProgram(i);try{this.bindOutput(t),this.attributesBound||this.bindAttributes(e.attribLocations),this.bindUniforms(e.uniformLocations,e.programInfo.variables??[],n)}catch(s){throw Ye.error("ProgramManager",e.programInfo.shaderSource),s}this.profiler.event("backend","GlContext.draw()",()=>{this.glContext.draw()})},this.glContext)}dispose(){this.vertexShader&&this.glContext.deleteShader(this.vertexShader),this.repo.forEach(e=>this.glContext.deleteProgram(e.program))}build(e,n,t){return this.profiler.event("backend","ProgramManager.build",()=>{let o=new ha(this.glContext,e,n,t),i=o.preprocess(),s=this.compile(i);return{programInfo:e,program:s,uniformLocations:this.getUniformLocations(s,o.context.programInfo.inputNames,o.context.programInfo.variables),attribLocations:this.getAttribLocations(s)}})}compile(e){if(!this.vertexShader){Ye.verbose("ProrgramManager","Compiling and caching Vertex shader for the first time");let o=Oc(this.glContext.version);this.vertexShader=this.glContext.compileShader(o,this.glContext.gl.VERTEX_SHADER)}xe.debug&&Ye.verbose("ProrgramManager",`FragShader:
${e}
`);let n=this.glContext.compileShader(e,this.glContext.gl.FRAGMENT_SHADER),t=this.glContext.createProgram(this.vertexShader,n);return this.glContext.deleteShader(n),t}bindOutput(e){let n=e.width,t=e.height;Ye.verbose("ProrgramManager",`Binding output texture to Framebuffer: w/h=${n}/${t}, shape=${e.shape}, type=${e.tensor.type}`),this.glContext.attachFramebuffer(e.texture,n,t)}bindAttributes(e){let n=e.position,t=e.textureCoord;this.glContext.setVertexAttributes(n,t),this.attributesBound=!0}bindUniforms(e,n,t){let o=this.glContext.gl,i=0;for(let{name:s,type:a,location:u,arrayLength:l}of e){let d=n.find(h=>h.name===s)?.data;if(a!=="sampler2D"&&!d)throw new Error(`variable '${s}' does not have data defined in program info`);switch(a){case"sampler2D":this.bindTexture(t[i],u,i),i++;break;case"float":l?o.uniform1fv(u,d):o.uniform1f(u,d);break;case"int":l?o.uniform1iv(u,d):o.uniform1i(u,d);break;default:throw new Error(`Uniform not implemented: ${a}`)}}}bindTexture(e,n,t){this.glContext.bindTextureToUniform(e.texture,t,n)}getAttribLocations(e){return{position:this.getAttribLocation(e,"position"),textureCoord:this.getAttribLocation(e,"textureCoord")}}getUniformLocations(e,n,t){let o=[];if(n)for(let i of n)o.push({name:i,type:"sampler2D",location:this.getUniformLocation(e,i)});if(t)for(let i of t)o.push({...i,location:this.getUniformLocation(e,i.name)});return o}getUniformLocation(e,n){let o=this.glContext.gl.getUniformLocation(e,n);if(o===null)throw new Error(`Uniform ${n} not found.`);return o}getAttribLocation(e,n){return this.glContext.gl.getAttribLocation(e,n)}}});var ga,Qh=R(()=>{"use strict";nr();Mo();ga=class{constructor(e,n,t,o){this.glContext=e;this.layoutStrategy=n;this.profiler=t;this.config=o;this.pendingRead=new Map;o.reuseTextures&&(this.inUseTextures=new Map,this.idleTextures=new Map,this.textureLookup=new Map)}createTextureFromLayout(e,n,t,o){let i=this.toEncoderType(e),s=this.glContext.getEncoder(i,n.channels||1,o);if(n.isPacked&&o===1)throw new Error("not implemented");let a=n.width,u=n.height,l,d;if(this.config.reuseTextures){l=`${a}x${u}_${s.format}_${s.internalFormat}_${s.textureType}`,d=this.inUseTextures.get(l),d||(d=[],this.inUseTextures.set(l,d));let m=this.idleTextures.get(l);if(m&&m.length>0){let b=m.pop();return d.push(b),o===1&&this.glContext.updateTexture(b,a,u,s,this.toTextureData(e,t)),b}}Ye.verbose("TextureManager",`Creating new texture of size ${n.width}x${n.height}`);let h=this.glContext.allocateTexture(a,u,s,this.toTextureData(e,t));return this.config.reuseTextures&&(d.push(h),this.textureLookup.set(h,l)),h}readTexture(e,n,t){return t||(t=1),this.profiler.event("backend","TextureManager.readTexture",()=>{let o=e.shape.reduce((s,a)=>s*a)*t,i=this.glContext.readTexture(e.texture,e.width,e.height,o,this.toEncoderType(n),t);return this.toTensorData(n,i)})}async readTextureAsync(e,n,t){let o=e.tensor.dataId;if(t||(t=1),this.pendingRead.has(o)){let i=this.pendingRead.get(o);return new Promise(s=>i?.push(s))}return this.profiler.event("backend","TextureManager.readTextureAsync",async()=>{this.pendingRead.set(o,[]);let i=e.shape.reduce((l,d)=>l*d)*t;await this.glContext.createAndWaitForFence();let s=this.glContext.readTexture(e.texture,e.width,e.height,i,this.toEncoderType(n),t),a=this.toTensorData(n,s),u=this.pendingRead.get(o);return this.pendingRead.delete(o),u?.forEach(l=>l(a)),a})}readUint8TextureAsFloat(e){return this.profiler.event("backend","TextureManager.readUint8TextureAsFloat",()=>{let n=e.shape.reduce((o,i)=>o*i),t=this.glContext.readTexture(e.texture,e.width,e.height,n*4,"byte",4);return new Float32Array(t.buffer,t.byteOffset,n)})}releaseTexture(e,n){let t;if(this.config.reuseTextures&&(t=this.textureLookup.get(e.texture),t)){n&&this.textureLookup.delete(t);let o=this.inUseTextures.get(t);if(o){let i=o.indexOf(e.texture);if(i!==-1){o.splice(i,1);let s=this.idleTextures.get(t);s||(s=[],this.idleTextures.set(t,s)),s.push(e.texture)}}}(!t||n)&&(Ye.verbose("TextureManager",`Deleting texture of size ${e.width}x${e.height}`),this.glContext.deleteTexture(e.texture))}toTensorData(e,n){switch(e){case"int16":return n instanceof Int16Array?n:Int16Array.from(n);case"int32":return n instanceof Int32Array?n:Int32Array.from(n);case"int8":return n instanceof Int8Array?n:Int8Array.from(n);case"uint16":return n instanceof Uint16Array?n:Uint16Array.from(n);case"uint32":return n instanceof Uint32Array?n:Uint32Array.from(n);case"uint8":case"bool":return n instanceof Uint8Array?n:Uint8Array.from(n);case"float32":return n instanceof Float32Array?n:Float32Array.from(n);case"float64":return n instanceof Float64Array?n:Float64Array.from(n);default:throw new Error(`TensorData type ${e} is not supported`)}}toTextureData(e,n){if(n)return n instanceof Float32Array?n:new Float32Array(n)}toEncoderType(e){return"float"}clearActiveTextures(){this.glContext.clearActiveTextures()}}});var ba,em=R(()=>{"use strict";nr();hd();Hc();Fh();Jh();pu();Qh();ba=class{constructor(e,n){this.backend=e;this.context=n;this.layoutStrategy=new ua(e.glContext.maxTextureSize),this.programManager=new ma(this.context.profiler,e.glContext,this.layoutStrategy),this.textureManager=new ga(e.glContext,this.layoutStrategy,this.context.profiler,{reuseTextures:e.textureCacheMode==="full"}),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map,this.pack=e.pack,this.pack2unpackMap=new Map,this.unpack2packMap=new Map}createInferenceHandler(){return new Zi(this)}onGraphInitialized(e){let n=e.getValues().filter(t=>t.from===-1&&t.tensor).map(t=>t.tensor.dataId);this.initializers=new Set(n)}isInitializer(e){return this.initializers?this.initializers.has(e):!1}addInitializer(e){this.initializers.add(e)}getTextureData(e,n){return n?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,n,t=!1){Ye.verbose("WebGLSessionHandler","Storing Texture data in cache"),t?this.packedTextureDataCache.set(e,n):this.unpackedTextureDataCache.set(e,n)}dispose(){this.programManager.dispose(),this.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(e=>this.textureManager.releaseTexture(e,!0)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(e=>this.textureManager.releaseTexture(e,!0)),this.unpackedTextureDataCache=new Map}resolve(e,n,t){let o=pd(e,n,Nh);return{impl:o.opImpl,context:o.opInit?o.opInit(e,t):e}}}});function Jx(r){let e=0;for(;e<r.length&&r[e]();++e);return e-1}var Go,tm=R(()=>{"use strict";Ct();Mo();Mo();Sr();Go=class{constructor(e,n){this.frameBufferBound=!1;this.itemsToPoll=[];this.gl=e,this.version=n,this.getExtensions(),this.vertexbuffer=this.createVertexbuffer(),this.framebuffer=this.createFramebuffer(),this.queryVitalParameters()}allocateTexture(e,n,t,o){let i=this.gl,s=i.createTexture();i.bindTexture(i.TEXTURE_2D,s),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE);let a=o?t.encode(o,e*n):null;return i.texImage2D(i.TEXTURE_2D,0,t.internalFormat,e,n,0,t.format,t.textureType,a),this.checkError(),s}updateTexture(e,n,t,o,i){let s=this.gl;s.bindTexture(s.TEXTURE_2D,e);let a=o.encode(i,n*t);s.texSubImage2D(s.TEXTURE_2D,0,0,0,n,t,o.format,o.textureType,a),this.checkError()}attachFramebuffer(e,n,t){let o=this.gl;o.bindTexture(o.TEXTURE_2D,e),o.bindFramebuffer(o.FRAMEBUFFER,this.framebuffer),o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,e,0),this.checkError(),o.viewport(0,0,n,t),o.scissor(0,0,n,t)}readTexture(e,n,t,o,i,s){let a=this.gl;s||(s=1),this.frameBufferBound||this.attachFramebuffer(e,n,t);let u=this.getEncoder(i,s),l=u.allocate(n*t);return a.bindTexture(a.TEXTURE_2D,e),a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,e,0),a.readPixels(0,0,n,t,a.RGBA,u.textureType,l),this.checkError(),u.decode(l,o)}isFramebufferReady(){return!0}getActiveTexture(){let e=this.gl;return`TEXTURE${e.getParameter(this.gl.ACTIVE_TEXTURE)-e.TEXTURE0}`}getTextureBinding(){return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D)}getFramebufferBinding(){return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING)}setVertexAttributes(e,n){let t=this.gl;t.vertexAttribPointer(e,3,t.FLOAT,!1,20,0),t.enableVertexAttribArray(e),n!==-1&&(t.vertexAttribPointer(n,2,t.FLOAT,!1,20,12),t.enableVertexAttribArray(n)),this.checkError()}createProgram(e,n){let t=this.gl,o=t.createProgram();return t.attachShader(o,e),t.attachShader(o,n),t.linkProgram(o),o}compileShader(e,n){let t=this.gl,o=t.createShader(n);if(!o)throw new Error(`createShader() returned null with type ${n}`);if(t.shaderSource(o,e),t.compileShader(o),t.getShaderParameter(o,t.COMPILE_STATUS)===!1)throw new Error(`Failed to compile shader: ${t.getShaderInfoLog(o)}
Shader source:
${e}`);return o}deleteShader(e){this.gl.deleteShader(e)}bindTextureToUniform(e,n,t){let o=this.gl;o.activeTexture(o.TEXTURE0+n),this.checkError(),o.bindTexture(o.TEXTURE_2D,e),this.checkError(),o.uniform1i(t,n),this.checkError()}draw(){this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4),this.checkError()}checkError(){if(xe.debug){let e=this.gl,n=e.getError(),t="";switch(n){case e.NO_ERROR:return;case e.INVALID_ENUM:t="INVALID_ENUM";break;case e.INVALID_VALUE:t="INVALID_VALUE";break;case e.INVALID_OPERATION:t="INVALID_OPERATION";break;case e.INVALID_FRAMEBUFFER_OPERATION:t="INVALID_FRAMEBUFFER_OPERATION";break;case e.OUT_OF_MEMORY:t="OUT_OF_MEMORY";break;case e.CONTEXT_LOST_WEBGL:t="CONTEXT_LOST_WEBGL";break;default:t=`Unknown WebGL Error: ${n.toString(16)}`}throw new Error(t)}}deleteTexture(e){this.gl.deleteTexture(e)}deleteProgram(e){this.gl.deleteProgram(e)}getEncoder(e,n,t=0){if(this.version===2)return new Yi(this.gl,n);switch(e){case"float":return t===1||this.isRenderFloat32Supported?new Lo(this.gl,n):new Lo(this.gl,n,this.textureHalfFloatExtension.HALF_FLOAT_OES);case"int":throw new Error("not implemented");case"byte":return new Xi(this.gl,n);default:throw new Error(`Invalid dataType: ${e}`)}}clearActiveTextures(){let e=this.gl;for(let n=0;n<this.maxTextureImageUnits;++n)e.activeTexture(e.TEXTURE0+n),e.bindTexture(e.TEXTURE_2D,null)}dispose(){if(this.disposed)return;let e=this.gl;e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(this.framebuffer),e.bindBuffer(e.ARRAY_BUFFER,null),e.deleteBuffer(this.vertexbuffer),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null),e.finish(),this.disposed=!0}createDefaultGeometry(){return new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0])}createVertexbuffer(){let e=this.gl,n=e.createBuffer();if(!n)throw new Error("createBuffer() returned null");let t=this.createDefaultGeometry();return e.bindBuffer(e.ARRAY_BUFFER,n),e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW),this.checkError(),n}createFramebuffer(){let e=this.gl.createFramebuffer();if(!e)throw new Error("createFramebuffer returned null");return e}queryVitalParameters(){let e=this.gl;if(this.isFloatTextureAttachableToFrameBuffer=this.checkFloatTextureAttachableToFrameBuffer(),this.isRenderFloat32Supported=this.checkRenderFloat32(),this.isFloat32DownloadSupported=this.checkFloat32Download(),this.version===1&&!this.textureHalfFloatExtension&&!this.isRenderFloat32Supported)throw new Error("both float32 and float16 TextureType are not supported");this.isBlendSupported=!this.isRenderFloat32Supported||this.checkFloat32Blend(),this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.maxTextureImageUnits=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this.version}getExtensions(){this.version===2?(this.colorBufferFloatExtension=this.gl.getExtension("EXT_color_buffer_float"),this.disjointTimerQueryWebgl2Extension=this.gl.getExtension("EXT_disjoint_timer_query_webgl2")):(this.textureFloatExtension=this.gl.getExtension("OES_texture_float"),this.textureHalfFloatExtension=this.gl.getExtension("OES_texture_half_float"))}checkFloatTextureAttachableToFrameBuffer(){let e=this.gl,n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let t=this.version===2?e.RGBA32F:e.RGBA;e.texImage2D(e.TEXTURE_2D,0,t,1,1,0,e.RGBA,e.FLOAT,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(o),i}checkRenderFloat32(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension)return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Download(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension||!this.gl.getExtension("WEBGL_color_buffer_float"))return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Blend(){let e=this.gl,n,t,o,i,s;try{n=e.createTexture(),t=e.createFramebuffer(),e.bindTexture(e.TEXTURE_2D,n);let a=this.version===2?e.RGBA32F:e.RGBA;return e.texImage2D(e.TEXTURE_2D,0,a,1,1,0,e.RGBA,e.FLOAT,null),e.bindFramebuffer(e.FRAMEBUFFER,t),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0),e.enable(e.BLEND),o=e.createShader(e.VERTEX_SHADER),!o||(e.shaderSource(o,"void main(){}"),e.compileShader(o),i=e.createShader(e.FRAGMENT_SHADER),!i)||(e.shaderSource(i,"precision highp float;void main(){gl_FragColor=vec4(0.5);}"),e.compileShader(i),s=e.createProgram(),!s)?!1:(e.attachShader(s,o),e.attachShader(s,i),e.linkProgram(s),e.useProgram(s),e.drawArrays(e.POINTS,0,1),e.getError()===e.NO_ERROR)}finally{e.disable(e.BLEND),s&&e.deleteProgram(s),o&&e.deleteShader(o),i&&e.deleteShader(i),t&&(e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(t)),n&&(e.bindTexture(e.TEXTURE_2D,null),e.deleteTexture(n))}}beginTimer(){if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let e=this.gl,n=this.disjointTimerQueryWebgl2Extension,t=e.createQuery();return e.beginQuery(n.TIME_ELAPSED_EXT,t),t}else throw new Error("WebGL1 profiling currently not supported.")}endTimer(){if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let e=this.gl,n=this.disjointTimerQueryWebgl2Extension;e.endQuery(n.TIME_ELAPSED_EXT);return}else throw new Error("WebGL1 profiling currently not supported")}isTimerResultAvailable(e){let n=!1,t=!1;if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let o=this.gl,i=this.disjointTimerQueryWebgl2Extension;n=o.getQueryParameter(e,o.QUERY_RESULT_AVAILABLE),t=o.getParameter(i.GPU_DISJOINT_EXT)}else throw new Error("WebGL1 profiling currently not supported");return n&&!t}getTimerResult(e){let n=0;if(this.version===2){let t=this.gl;n=t.getQueryParameter(e,t.QUERY_RESULT),t.deleteQuery(e)}else throw new Error("WebGL1 profiling currently not supported");return n/1e6}async waitForQueryAndGetTime(e){return await Ns(()=>this.isTimerResultAvailable(e)),this.getTimerResult(e)}async createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let n,t=e,o=t.fenceSync(t.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),o===null?n=()=>!0:n=()=>{let i=t.clientWaitSync(o,0,0);return i===t.ALREADY_SIGNALED||i===t.CONDITION_SATISFIED},{query:o,isFencePassed:n}}async pollFence(e){return new Promise(n=>{this.addItemToPoll(()=>e.isFencePassed(),()=>n())})}pollItems(){let e=Jx(this.itemsToPoll.map(n=>n.isDoneFn));for(let n=0;n<=e;++n){let{resolveFn:t}=this.itemsToPoll[n];t()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}async addItemToPoll(e,n){this.itemsToPoll.push({isDoneFn:e,resolveFn:n}),!(this.itemsToPoll.length>1)&&await Ns(()=>(this.pollItems(),this.itemsToPoll.length===0))}}});function mu(r){let e;if((!r||r==="webgl2")&&"webgl2"in to?e=to.webgl2:(!r||r==="webgl")&&"webgl"in to&&(e=to.webgl),!e)try{let t=e2();e=rm(t,r)}catch{let o=Qx();e=rm(o,r)}r=r||e.version===1?"webgl":"webgl2";let n=e.gl;return to[r]=e,n.isContextLost()?(delete to[r],mu(r)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),e)}function rm(r,e){let n={alpha:!1,depth:!1,antialias:!1,stencil:!1,preserveDrawingBuffer:!1,premultipliedAlpha:!1,failIfMajorPerformanceCaveat:!1},t,o=n;if((!e||e==="webgl2")&&(t=r.getContext("webgl2",o),t))try{return new Go(t,2)}catch(i){Ye.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl2'. Error: ${i}`)}if((!e||e==="webgl")&&(t=r.getContext("webgl",o)||r.getContext("experimental-webgl",o),t))try{return new Go(t,1)}catch(i){Ye.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${i}`)}throw new Error("WebGL is not supported")}function Qx(){if(typeof document>"u")throw new TypeError("failed to create canvas: document is not supported");let r=document.createElement("canvas");return r.width=1,r.height=1,r}function e2(){if(typeof OffscreenCanvas>"u")throw new TypeError("failed to create offscreen canvas: OffscreenCanvas is not supported");return new OffscreenCanvas(1,1)}var to,nm=R(()=>{"use strict";nr();tm();to={}});var ya,om=R(()=>{"use strict";Ct();nr();em();nm();ya=class{get contextId(){return xe.webgl.contextId}set contextId(e){xe.webgl.contextId=e}get matmulMaxBatchSize(){return xe.webgl.matmulMaxBatchSize}set matmulMaxBatchSize(e){xe.webgl.matmulMaxBatchSize=e}get textureCacheMode(){return xe.webgl.textureCacheMode}set textureCacheMode(e){xe.webgl.textureCacheMode=e}get pack(){return xe.webgl.pack}set pack(e){xe.webgl.pack=e}get async(){return xe.webgl.async}set async(e){xe.webgl.async=e}initialize(){try{return this.glContext=mu(this.contextId),typeof this.matmulMaxBatchSize!="number"&&(this.matmulMaxBatchSize=16),typeof this.textureCacheMode!="string"&&(this.textureCacheMode="full"),typeof this.pack!="boolean"&&(this.pack=!1),typeof this.async!="boolean"&&(this.async=!1),Ye.setWithEnv(xe),xe.webgl.context||Object.defineProperty(xe.webgl,"context",{value:this.glContext.gl}),Ye.verbose("WebGLBackend",`Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${this.async}.`),!0}catch(e){return Ye.warning("WebGLBackend",`Unable to initialize WebGLBackend. ${e}`),!1}}createSessionHandler(e){return new ba(this,e)}dispose(){this.glContext.dispose()}}});async function gu(r){if(r){let e=typeof r=="string"?[r]:r;for(let n of e){let t=im.get(n);if(t)return t;let o=await r2(n);if(o)return o}}else return gu(["webgl"]);throw new Error("no available backend to use")}async function r2(r){let e=t2;if(typeof e[r]<"u"&&n2(e[r])){let n=e[r],t=n.initialize();if(typeof t=="object"&&"then"in t&&(t=await t),t)return im.set(r,n),n}}function n2(r){let e=r;return"initialize"in e&&typeof e.initialize=="function"&&"createSessionHandler"in e&&typeof e.createSessionHandler=="function"&&"dispose"in e&&typeof e.dispose=="function"}var im,t2,am=R(()=>{"use strict";om();im=new Map,t2={webgl:new ya}});var bu,va,sm=R(()=>{"use strict";nr();bu=class{constructor(e,n){this.op=e;this.node=n}},va=class{constructor(e,n,t){this.graph=e;this.profiler=t;this.initialize(n)}initialize(e){this.profiler.event("session","ExecutionPlan.initialize",()=>{let n=this.graph.getNodes();if(n.length!==e.length)throw new Error("The size of nodes and OPs do not match.");this._ops=e.map((t,o)=>new bu(t,n[o])),this.reset(),this._starter=[],this._ops.forEach((t,o)=>{let i=!0;for(let s of t.node.inputs)if(!this._values[s]&&this.graph.getInputIndices().indexOf(s)===-1){i=!1;break}i&&this._starter.push(o)})})}reset(){this._values=this.graph.getValues().map(e=>e.tensor)}async execute(e,n){return this.profiler.event("session","ExecutionPlan.execute",async()=>{this.reset();let t=e.createInferenceHandler(),o=this.graph.getInputIndices();if(n.length!==o.length)throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${n.length} expected: ${o.length}`);n.forEach((d,h)=>{let m=o[h];this._values[m]=d});let i=this._starter.slice(0),s=this.graph.getValues(),a=this.graph.getNodes(),u=0;for(;u<i.length;){let d=i[u++],h=this._ops[d],m=h.node.inputs.map(A=>this._values[A]);if(m.indexOf(void 0)!==-1)throw new Error(`unresolved input detected: op: ${h.node}`);let b=m;Ye.verbose("ExecPlan",`Runing op:${h.node.name} (${b.map((A,I)=>`'${h.node.inputs[I]}': ${A.type}[${A.dims.join(",")}]`).join(", ")})`);let y=await this.profiler.event("node",h.node.name,async()=>h.op.impl(t,b,h.op.context));if(y.length!==h.node.outputs.length)throw new Error("the size of output does not match model definition.");y.forEach((A,I)=>{let $=h.node.outputs[I];if(this._values[$])throw new Error(`output [${$}] already has value: op:${h.node.name}`);this._values[$]=A});let x=new Set;y.forEach((A,I)=>{let $=h.node.outputs[I];for(let O of s[$].to){let E=a[O],F=!0;for(let z of E.inputs)if(!this._values[z]){F=!1;break}F&&x.add(O)}}),i.push(...x)}let l=[];for(let d=0;d<this.graph.getOutputIndices().length;d++){let h=this.graph.getOutputIndices()[d],m=this._values[h];if(m===void 0)throw new Error(`required output [${h}] does not have value`);h===0?await m.getData():m.data,l.push(m)}return Ye.verbose("ExecPlan","disposing of inferenceHandler"),t.dispose(),l})}}});var Le,dr,Wo,um=R(()=>{"use strict";Po();Le=Gn(jn());In();Ke();dr=ce.experimental.fbs,Wo=class r{constructor(e){if(this._attributes=new Map,e!=null){for(let n of e)n instanceof Le.onnx.AttributeProto?this._attributes.set(n.name,[r.getValue(n),r.getType(n)]):n instanceof dr.Attribute&&this._attributes.set(n.name(),[r.getValue(n),r.getType(n)]);if(this._attributes.size<e.length)throw new Error("duplicated attribute names")}}set(e,n,t){this._attributes.set(e,[t,n])}delete(e){this._attributes.delete(e)}getFloat(e,n){return this.get(e,"float",n)}getInt(e,n){return this.get(e,"int",n)}getString(e,n){return this.get(e,"string",n)}getTensor(e,n){return this.get(e,"tensor",n)}getFloats(e,n){return this.get(e,"floats",n)}getInts(e,n){return this.get(e,"ints",n)}getStrings(e,n){return this.get(e,"strings",n)}getTensors(e,n){return this.get(e,"tensors",n)}get(e,n,t){let o=this._attributes.get(e);if(o===void 0){if(t!==void 0)return t;throw new Error(`required attribute not found: ${e}`)}if(o[1]!==n)throw new Error(`type mismatch: expected ${n} but got ${o[1]}`);return o[0]}static getType(e){let n=e instanceof Le.onnx.AttributeProto?e.type:e.type();switch(n){case Le.onnx.AttributeProto.AttributeType.FLOAT:return"float";case Le.onnx.AttributeProto.AttributeType.INT:return"int";case Le.onnx.AttributeProto.AttributeType.STRING:return"string";case Le.onnx.AttributeProto.AttributeType.TENSOR:return"tensor";case Le.onnx.AttributeProto.AttributeType.FLOATS:return"floats";case Le.onnx.AttributeProto.AttributeType.INTS:return"ints";case Le.onnx.AttributeProto.AttributeType.STRINGS:return"strings";case Le.onnx.AttributeProto.AttributeType.TENSORS:return"tensors";default:throw new Error(`attribute type is not supported yet: ${Le.onnx.AttributeProto.AttributeType[n]}`)}}static getValue(e){let n=e instanceof Le.onnx.AttributeProto?e.type:e.type();if(n===Le.onnx.AttributeProto.AttributeType.GRAPH||n===Le.onnx.AttributeProto.AttributeType.GRAPHS)throw new Error("graph attribute is not supported yet");let t=this.getValueNoCheck(e);if(n===Le.onnx.AttributeProto.AttributeType.INT&&Kt.isLong(t))return Kt.longToNumber(t);if(n===Le.onnx.AttributeProto.AttributeType.INTS){let o=t,i=new Array(o.length);for(let s=0;s<o.length;s++){let a=o[s];i[s]=Kt.longToNumber(a)}return i}if(n===Le.onnx.AttributeProto.AttributeType.TENSOR)return e instanceof Le.onnx.AttributeProto?mt.fromProto(t):mt.fromOrtTensor(t);if(n===Le.onnx.AttributeProto.AttributeType.TENSORS){if(e instanceof Le.onnx.AttributeProto)return t.map(i=>mt.fromProto(i));if(e instanceof dr.Attribute)return t.map(i=>mt.fromOrtTensor(i))}return n===Le.onnx.AttributeProto.AttributeType.STRING&&e instanceof Le.onnx.AttributeProto?zo(t):n===Le.onnx.AttributeProto.AttributeType.STRINGS&&e instanceof Le.onnx.AttributeProto?t.map(zo):t}static getValueNoCheck(e){return e instanceof Le.onnx.AttributeProto?this.getValueNoCheckFromOnnxFormat(e):this.getValueNoCheckFromOrtFormat(e)}static getValueNoCheckFromOnnxFormat(e){switch(e.type){case Le.onnx.AttributeProto.AttributeType.FLOAT:return e.f;case Le.onnx.AttributeProto.AttributeType.INT:return e.i;case Le.onnx.AttributeProto.AttributeType.STRING:return e.s;case Le.onnx.AttributeProto.AttributeType.TENSOR:return e.t;case Le.onnx.AttributeProto.AttributeType.GRAPH:return e.g;case Le.onnx.AttributeProto.AttributeType.FLOATS:return e.floats;case Le.onnx.AttributeProto.AttributeType.INTS:return e.ints;case Le.onnx.AttributeProto.AttributeType.STRINGS:return e.strings;case Le.onnx.AttributeProto.AttributeType.TENSORS:return e.tensors;case Le.onnx.AttributeProto.AttributeType.GRAPHS:return e.graphs;default:throw new Error(`unsupported attribute type: ${Le.onnx.AttributeProto.AttributeType[e.type]}`)}}static getValueNoCheckFromOrtFormat(e){switch(e.type()){case dr.AttributeType.FLOAT:return e.f();case dr.AttributeType.INT:return e.i();case dr.AttributeType.STRING:return e.s();case dr.AttributeType.TENSOR:return e.t();case dr.AttributeType.GRAPH:return e.g();case dr.AttributeType.FLOATS:return e.floatsArray();case dr.AttributeType.INTS:{let n=[];for(let t=0;t<e.intsLength();t++)n.push(e.ints(t));return n}case dr.AttributeType.STRINGS:{let n=[];for(let t=0;t<e.stringsLength();t++)n.push(e.strings(t));return n}case dr.AttributeType.TENSORS:{let n=[];for(let t=0;t<e.tensorsLength();t++)n.push(e.tensors(t));return n}default:throw new Error(`unsupported attribute type: ${dr.AttributeType[e.type()]}`)}}}});var vu,wa,wu,Or,xa,yu,lm=R(()=>{"use strict";um();Po();vu=Gn(jn());In();Ke();wa=ce.experimental.fbs,wu={from:(r,e)=>new yu(r,e)},Or=class{constructor(e){this._from=void 0,this._to=[],this.tensor=void 0,this.type=void 0,e&&(this.type=Et.tensorValueTypeFromProto(e.type.tensorType))}get from(){return this._from}get to(){return this._to}},xa=class{constructor(e,n){e instanceof vu.onnx.NodeProto?(this.name=e.name,this.opType=e.opType,this.attributes=new Wo(e.attribute)):e instanceof wa.Node&&(this.name=n??e.name(),this.opType=e.opType(),this.attributes=new Wo(Et.tensorAttributesFromORTFormat(e))),this.inputs=[],this.outputs=[],this.executeNode=!0}},yu=class{constructor(e,n){if(!e)throw new TypeError("graph is empty");this.buildGraph(e),this.transformGraph(n),this.checkIsAcyclic()}getInputIndices(){return this._allInputIndices}getInputNames(){return this._allInputNames}getOutputIndices(){return this._allOutputIndices}getOutputNames(){return this._allOutputNames}getValues(){return this._allData}getNodes(){return this._nodes}buildGraph(e){if(e instanceof vu.onnx.GraphProto)this.buildGraphFromOnnxFormat(e);else if(e instanceof wa.Graph)this.buildGraphFromOrtFormat(e);else throw new TypeError("Graph type is not supported.")}buildGraphFromOnnxFormat(e){let n=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];let t=new Map;if(!e.input)throw new Error("missing information in graph: input");let o=[];for(let i of e.input){if(n.has(i.name))throw new Error(`duplicated input name: ${i.name}`);let s=this._allData.push(new Or(i))-1;n.set(i.name,s),o.push(i.name)}if(!e.initializer)throw new Error("missing information in graph: initializer");for(let i of e.initializer){let s=n.get(i.name);if(s===void 0){let a=new Or;a.type={shape:{dims:Et.tensorDimsFromProto(i.dims)},tensorType:Et.tensorDataTypeFromProto(i.dataType)},s=this._allData.push(a)-1,n.set(i.name,s)}this._allData[s]._from=-1,this._allData[s].tensor=mt.fromProto(i)}for(let i=0;i<this._allData.length;i++)this._allData[i].tensor||(this._allInputIndices.push(i),this._allInputNames.push(o[i]));if(!e.output)throw new Error("missing information in graph: output");for(let i of e.output){if(n.has(i.name))throw new Error(`duplicated output name: ${i.name}`);let s=this._allData.push(new Or(i))-1;n.set(i.name,s),this._allOutputIndices.push(s),this._allOutputNames.push(i.name)}if(!e.node)throw new Error("missing information in graph: node");for(let i of e.node){if(!i.name)for(let a=0;;a++){let u=`unnamed_${i.opType}_${a}`;if(!t.has(u)){i.name=u;break}}if(t.has(i.name))throw new Error(`duplicated node name: ${i.name}`);let s=this._nodes.push(new xa(i))-1;t.set(i.name,s)}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.node[i];if(!a.output)throw new Error(`missing output for node: ${a.name}`);for(let u of a.output){let l=n.get(u);if(typeof l>"u"&&(l=this._allData.push(new Or)-1,n.set(u,l)),s.outputs.push(l),this._allData[l]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${l}`);if(this._allData[l]._from=i,a.opType==="Constant"){if(!a.attribute||a.attribute.length!==1||!a.attribute[0].t)throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(!a.output||a.output.length!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");s.outputs.pop(),s.executeNode=!1,this._allData[l]._from=-1,this._allData[l].tensor=mt.fromProto(a.attribute[0].t)}}}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.node[i];if(!a.input)throw new Error(`missing input for node: ${a.name}`);for(let u of a.input){let l=n.get(u);if(typeof l>"u"){if(u===""&&(a.input.length===3||a.input.length===4)&&a.opType==="Resize")continue;throw new Error(`unrecognized input '${u}' for node: ${a.name}`)}s.inputs.push(l),this._allData[l]._to.push(i)}}return!0}buildGraphFromOrtFormat(e){let n=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];let t=new Map,o=[];for(let i=0;i<e.inputsLength();i++){let s=e.inputs(i);if(n.has(s))throw new Error(`duplicated input name: ${s}`);for(let a=0;a<e.nodeArgsLength();a++)if(e.nodeArgs(a)?.name()===s){let u=new Or;if(e.nodeArgs(a)?.type()?.valueType()!==wa.TypeInfoValue.tensor_type)throw new Error("Unexpected value type for the nodeArg.");let d=e.nodeArgs(a).type().value(new wa.TensorTypeAndShape),h=Et.tensorDataTypeFromProto(d.elemType()),m=d.shape(),b=[];for(let x=0;x<m.dimLength();x++)b.push(Kt.longToNumber(m.dim(x).value().dimValue()));u.type={shape:{dims:b},tensorType:h};let y=this._allData.push(u)-1;n.set(s,y),o.push(s)}}for(let i=0;i<e.initializersLength();i++){let s=e.initializers(i),a=n.get(s.name());if(a===void 0){let u=new Or,l=Et.tensorDimsFromORTFormat(s),d=Et.tensorDataTypeFromProto(s.dataType());u.type={shape:{dims:l},tensorType:d},a=this._allData.push(u)-1,n.set(s.name(),a)}this._allData[a]._from=-1,this._allData[a].tensor=mt.fromOrtTensor(s)}for(let i=0;i<this._allData.length;i++)this._allData[i].tensor||(this._allInputIndices.push(i),this._allInputNames.push(o[i]));for(let i=0;i<e.outputsLength();i++){let s=e.outputs(i);if(n.has(s))throw new Error(`duplicated output name: ${s}`);let a=this._allData.push(new Or)-1;n.set(s,a),this._allOutputIndices.push(a),this._allOutputNames.push(s)}if(!e.nodes)throw new Error("missing information in graph: node");for(let i=0;i<e.nodesLength();i++){let s=e.nodes(i),a=s.name();if(!a)for(let l=0;a=`unnamed_${s.opType()}_${l}`,!!t.has(a);l++);if(t.has(a))throw new Error(`duplicated node name: ${a}`);let u=this._nodes.push(new xa(s,a))-1;t.set(a,u)}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.nodes(i);if(a==null)throw new Error(`No node exists at index ${i}`);if(a?.outputsLength()===0)throw new Error(`missing output for node: ${a.name}`);for(let u=0;u<a?.outputsLength();u++){let l=a?.outputs(u),d=n.get(l);if(typeof d>"u"&&(d=this._allData.push(new Or)-1,n.set(l,d)),s.outputs.push(d),this._allData[d]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${d}`);if(this._allData[d]._from=i,a.opType()==="Constant"){if(a.attributesLength()!==1||!a.attributes(0).t())throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(a.outputsLength()!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");s.outputs.pop(),s.executeNode=!1,this._allData[d]._from=-1,this._allData[d].tensor=mt.fromOrtTensor(a.attributes(0).t())}}}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.nodes(i);if(a.inputsLength()===0)throw new Error(`missing input for node: ${a.name}`);for(let u=0;u<a.inputsLength();u++){let l=a.inputs(u),d=n.get(l);if(typeof d>"u")throw new Error(`unrecognized input '${l}' for node: ${a.name()}`);s.inputs.push(d),this._allData[d]._to.push(i)}}}checkIsAcyclic(){let e=new Set;this._allInputIndices.forEach(o=>{this._allData[o]._to.forEach(s=>{e.add(s)})});let n=Array.from(e),t=new Array(this._nodes.length).fill("white");for(;n.length>0;){let o=n.pop();t[o]==="gray"?t[o]="black":(n.push(o),t[o]="gray",this._nodes[o].outputs.forEach(i=>{let s=this._allData[i];if(typeof s.tensor<"u")throw new Error("node outputs should not be initialized");if(s._from!==o)throw new Error("from property of the Value object doesn't match index of Node being processed");s._to.forEach(a=>{if(t[a]==="gray")throw new Error("model graph is cyclic");t[a]==="white"&&n.push(a)})}))}}transformGraph(e){this.removeAllIdentityNodes(),this.removeAllDropoutNodes(),this.fuseConvActivationNodes(),e&&e.transformGraph(this),this.finalizeGraph()}finalizeGraph(){let e=0,n=new Array(this._nodes.length,0),t=0;for(let o=0;o<this._nodes.length;o++)n[o]=t,this._nodes[o].executeNode?(t!==o&&(this._nodes[t]=this._nodes[o]),t++):this._nodes[o].outputs.forEach(i=>{this._allData[i]._from=-2});this._nodes.splice(t,this._nodes.length-t);for(let o=0;o<this._allData.length;o++){let i=this._allData[o];i._from!==void 0&&i._from!==-1&&i._from!==-2&&(i._from=n[i._from]);for(let s=0;s<i._to.length;s++)if(i._to[s]>=0)i._to[s]=n[i._to[s]];else throw new Error("Trying to update a removed node")}e=0;for(let o=0;o<this._allData.length;o++){if(this._allData[o].from===-2&&this._allOutputIndices.indexOf(o+e)===-1){e++,this._allData.splice(o,1),o--;continue}if(e>0){let i=-1;this._allData[o].from!==void 0&&this._allData[o].from!==-1?(i=this._nodes[this._allData[o].from].outputs.indexOf(o+e),i!==-1&&(this._nodes[this._allData[o].from].outputs[i]=o)):(i=this._allInputIndices.indexOf(o+e),i!==-1&&(this._allInputIndices[i]=o)),this._allData[o].to.forEach(s=>{i=this._nodes[s].inputs.indexOf(o+e),i!==-1&&(this._nodes[s].inputs[i]=o)}),this._allData[o].to.length===0&&(i=this._allOutputIndices.indexOf(o+e),i!==-1&&(this._allOutputIndices[i]=o))}}}deleteNode(e){let n=this._nodes[e];if(n.outputs.length>1){for(let a=1;a<n.outputs.length;a++)if(this._allData[n.outputs[a]].to.length>0)throw new Error("Node deletion with more than one output connected to other nodes is not supported. ")}n.executeNode=!1;let t=n.inputs[0],o=n.outputs[0],i=this._allData[o].to;for(let a=0;a<n.inputs.length;a++){let u=this._allData[n.inputs[a]].to.indexOf(e);if(u===-1)throw new Error("The Value object doesn't have the current Node in it's 'to' property ");this._allData[n.inputs[a]].to.splice(u,1)}this._allData[o]._to=[];let s=this._allOutputIndices.indexOf(o);if(s!==-1&&(this._allOutputIndices[s]=t),i&&i.length>0)for(let a of i){let u=this._nodes[a].inputs.indexOf(o);if(u===-1)throw new Error("The Node object doesn't have the output Value in it's 'inputs' property ");this._nodes[a].inputs[u]=t,this._allData[t].to.push(a)}}removeAllDropoutNodes(){let e=0;for(let n of this._nodes){if(n.opType==="Dropout"){if(n.inputs.length!==1)throw new Error("Dropout nodes should only contain one input. ");if(n.outputs.length!==1&&n.outputs.length!==2)throw new Error("Dropout nodes should contain either 1 or 2 output(s)");if(n.outputs.length===2&&this._allData[n.outputs[1]]._to.length!==0)throw new Error("Dropout nodes's second output should not be referenced by other nodes");this.deleteNode(e)}e++}}removeAllIdentityNodes(){let e=0;for(let n of this._nodes)n.opType==="Identity"&&this.deleteNode(e),e++}isActivation(e){switch(e.opType){case"Relu":case"Sigmoid":case"Clip":return!0;default:return!1}}fuseConvActivationNodes(){for(let e of this._nodes)if(e.opType==="Conv"){let n=this._allData[e.outputs[0]]._to;if(n.length===1&&this.isActivation(this._nodes[n[0]])){let t=this._nodes[n[0]];if(t.opType==="Clip")if(t.inputs.length===1)try{e.attributes.set("activation_params","floats",[t.attributes.getFloat("min"),t.attributes.getFloat("max")])}catch{e.attributes.set("activation_params","floats",[_n,Sn])}else if(t.inputs.length>=3&&this._allData[t.inputs[1]].tensor!==void 0&&this._allData[t.inputs[2]].tensor!==void 0)e.attributes.set("activation_params","floats",[this._allData[t.inputs[1]].tensor.floatData[0],this._allData[t.inputs[2]].tensor.floatData[0]]);else continue;e.attributes.set("activation","string",t.opType),this.deleteNode(n[0])}}}}});var dm,o2,Ta,cm=R(()=>{"use strict";Ui();lm();Po();dm=Gn(jn());Ke();o2=ce.experimental.fbs,Ta=class{constructor(){}load(e,n,t){if(!t)try{this.loadFromOnnxFormat(e,n);return}catch(o){if(t!==void 0)throw o}this.loadFromOrtFormat(e,n)}loadFromOnnxFormat(e,n){let t=dm.onnx.ModelProto.decode(e);if(Kt.longToNumber(t.irVersion)<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=t.opsetImport.map(i=>({domain:i.domain,version:Kt.longToNumber(i.version)})),this._graph=wu.from(t.graph,n)}loadFromOrtFormat(e,n){let t=new B.ByteBuffer(e),o=o2.InferenceSession.getRootAsInferenceSession(t).model();if(Kt.longToNumber(o.irVersion())<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=[];for(let s=0;s<o.opsetImportLength();s++){let a=o.opsetImport(s);this._opsets.push({domain:a?.domain(),version:Kt.longToNumber(a.version())})}this._graph=wu.from(o.graph(),n)}get graph(){return this._graph}get opsets(){return this._opsets}}});var $a,fm=R(()=>{"use strict";am();sm();nr();cm();$a=class{constructor(e={}){this._initialized=!1,this.backendHint=e.backendHint,this.profiler=Fi.create(e.profiler),this.context={profiler:this.profiler,graphInputTypes:[],graphInputDims:[]}}get inputNames(){return this._model.graph.getInputNames()}get outputNames(){return this._model.graph.getOutputNames()}startProfiling(){this.profiler.start()}endProfiling(){this.profiler.stop()}async loadModel(e,n,t){await this.profiler.event("session","Session.loadModel",async()=>{let o=await gu(this.backendHint);if(this.sessionHandler=o.createSessionHandler(this.context),this._model=new Ta,typeof e=="string"){let i=e.endsWith(".ort");if(typeof process<"u"&&process.versions&&process.versions.node){let s=await(void 0)(e);this.initialize(s,i)}else{let a=await(await fetch(e)).arrayBuffer();this.initialize(new Uint8Array(a),i)}}else if(ArrayBuffer.isView(e))this.initialize(e);else{let i=new Uint8Array(e,n||0,t||e.byteLength);this.initialize(i)}})}initialize(e,n){if(this._initialized)throw new Error("already initialized");this.profiler.event("session","Session.initialize",()=>{let t=this.sessionHandler.transformGraph?this.sessionHandler:void 0;this._model.load(e,t,n),this.sessionHandler.onGraphInitialized&&this.sessionHandler.onGraphInitialized(this._model.graph),this.initializeOps(this._model.graph),this._executionPlan=new va(this._model.graph,this._ops,this.profiler)}),this._initialized=!0}async run(e){if(!this._initialized)throw new Error("session not initialized yet");return this.profiler.event("session","Session.run",async()=>{let n=this.normalizeAndValidateInputs(e),t=await this._executionPlan.execute(this.sessionHandler,n);return this.createOutput(t)})}normalizeAndValidateInputs(e){let n=this._model.graph.getInputNames();if(Array.isArray(e)){if(e.length!==n.length)throw new Error(`incorrect input array length: expected ${n.length} but got ${e.length}`)}else{if(e.size!==n.length)throw new Error(`incorrect input map size: expected ${n.length} but got ${e.size}`);let t=new Array(e.size),o=0;for(let i=0;i<n.length;++i){let s=e.get(n[i]);if(!s)throw new Error(`missing input tensor for: '${name}'`);t[o++]=s}e=t}if(!this.context.graphInputTypes||this.context.graphInputTypes.length===0||!this.context.graphInputDims||this.context.graphInputDims.length===0){let t=this._model.graph.getInputIndices(),o=this._model.graph.getValues(),i=new Array(t.length);for(let s=0;s<t.length;++s){let a=o[t[s]];i[s]=a.type.shape.dims,this.context.graphInputTypes.push(a.type.tensorType),this.context.graphInputDims.push(e[s].dims)}this.validateInputTensorDims(i,e,!0)}else this.validateInputTensorDims(this.context.graphInputDims,e,!1);return this.validateInputTensorTypes(this.context.graphInputTypes,e),e}validateInputTensorTypes(e,n){for(let t=0;t<n.length;t++){let o=e[t],i=n[t].type;if(o!==i)throw new Error(`input tensor[${t}] check failed: expected type '${o}' but got ${i}`)}}validateInputTensorDims(e,n,t){for(let o=0;o<n.length;o++){let i=e[o],s=n[o].dims;if(!this.compareTensorDims(i,s,t))throw new Error(`input tensor[${o}] check failed: expected shape '[${i.join(",")}]' but got [${s.join(",")}]`)}}compareTensorDims(e,n,t){if(e.length!==n.length)return!1;for(let o=0;o<e.length;++o)if(e[o]!==n[o]&&(!t||e[o]!==0))return!1;return!0}createOutput(e){let n=this._model.graph.getOutputNames();if(e.length!==n.length)throw new Error("expected number of outputs do not match number of generated outputs");let t=new Map;for(let o=0;o<n.length;++o)t.set(n[o],e[o]);return t}initializeOps(e){let n=e.getNodes();this._ops=new Array(n.length);for(let t=0;t<n.length;t++)this._ops[t]=this.sessionHandler.resolve(n[t],this._model.opsets,e)}}});var _a,pm=R(()=>{"use strict";Ct();In();_a=class{constructor(e){this.session=e;this.inputNames=this.session.inputNames,this.outputNames=this.session.outputNames}async dispose(){}async run(e,n,t){let o=new Map;for(let a in e)if(Object.hasOwnProperty.call(e,a)){let u=e[a];o.set(a,new mt(u.dims,u.type,void 0,void 0,u.data))}let i=await this.session.run(o),s={};return i.forEach((a,u)=>{s[u]=new Tt(a.type,a.data,a.dims)}),s}startProfiling(){this.session.startProfiling()}endProfiling(){this.session.endProfiling()}}});var hm={};gn(hm,{onnxjsBackend:()=>a2});var xu,a2,mm=R(()=>{"use strict";fm();pm();xu=class{async init(){}async createInferenceSessionHandler(e,n){let t=new $a(n);return typeof e=="string"?await t.loadModel(e):await t.loadModel(e),new _a(t)}},a2=new xu});var Tu={};gn(Tu,{createReadStream:()=>gm,readFile:()=>s2,readFileSync:()=>u2});var s2,u2,gm,$u=R(()=>{s2=void 0,u2=void 0,gm=void 0});var _u={};gn(_u,{join:()=>l2});var l2,Su=R(()=>{l2=void 0});var vm=Qe((ym,Iu)=>{"use strict";var bm=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e={}){var n=e,t,o;n.ready=new Promise((f,g)=>{t=f,o=g}),n.mountExternalData=(f,g)=>{(n.gb||(n.gb=new Map)).set(f,g)},n.unmountExternalData=()=>{delete n.gb},n.jsepInit=(f,g,w,_,k,V,K,oe)=>{n.Fb=f,n.vb=g,n.xb=w,n.ob=_,n.wb=k,n.Sa=V,n.yb=K,n.zb=oe,g=(te,Q,pe)=>(...Se)=>{let ze=Bt,L=Q?.();Se=te(...Se);let ye=Q?.();return L!==ye&&(te=ye,pe(L),Q=pe=null),Bt!=ze?ui():Se},w=te=>async(...Q)=>{try{if(n.fb)throw Error("Session already started");let pe=n.fb={Ab:Q[0],errors:[]},Se=await te(...Q);if(n.fb!==pe)throw Error("Session mismatch");f.flush();let ze=pe.errors;if(0<ze.length){let L=await Promise.all(ze);if(L=L.filter(ye=>ye),0<L.length)throw Error(L.join(`
`))}return Se}finally{n.fb=null}},n._OrtCreateSession=g(n._OrtCreateSession,()=>n._OrtCreateSession,te=>n._OrtCreateSession=te),n._OrtRun=w(g(n._OrtRun,()=>n._OrtRun,te=>n._OrtRun=te)),n._OrtRunWithBinding=w(g(n._OrtRunWithBinding,()=>n._OrtRunWithBinding,te=>n._OrtRunWithBinding=te)),n._OrtBindInput=g(n._OrtBindInput,()=>n._OrtBindInput,te=>n._OrtBindInput=te),n.jsepRegisterBuffer=(te,Q,pe,Se)=>f.registerBuffer(te,Q,pe,Se),n.jsepUnregisterBuffers=te=>{f.unregisterBuffers(te)},n.jsepGetBuffer=te=>f.getBuffer(te),n.jsepCreateDownloader=(te,Q,pe)=>f.createDownloader(te,Q,pe)};var i=Object.assign({},n),s="./this.program",a=(f,g)=>{throw g},u=typeof window=="object",l=typeof importScripts=="function",d=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",h="",m,b,y;if(d){var x=($u(),Xr(Tu)),A=(Su(),Xr(_u));h=l?A.dirname(h)+"/":__dirname+"/",m=(f,g)=>(f=fe(f)?new URL(f):A.normalize(f),x.readFileSync(f,g?void 0:"utf8")),y=f=>(f=m(f,!0),f.buffer||(f=new Uint8Array(f)),f),b=(f,g,w,_=!0)=>{f=fe(f)?new URL(f):A.normalize(f),x.readFile(f,_?void 0:"utf8",(k,V)=>{k?w(k):g(_?V.buffer:V)})},!n.thisProgram&&1<process.argv.length&&(s=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),a=(f,g)=>{throw process.exitCode=f,g},n.inspect=()=>"[Emscripten Module object]"}else(u||l)&&(l?h=self.location.href:typeof document<"u"&&document.currentScript&&(h=document.currentScript.src),r&&(h=r),h.indexOf("blob:")!==0?h=h.substr(0,h.replace(/[?#].*/,"").lastIndexOf("/")+1):h="",m=f=>{var g=new XMLHttpRequest;return g.open("GET",f,!1),g.send(null),g.responseText},l&&(y=f=>{var g=new XMLHttpRequest;return g.open("GET",f,!1),g.responseType="arraybuffer",g.send(null),new Uint8Array(g.response)}),b=(f,g,w)=>{var _=new XMLHttpRequest;_.open("GET",f,!0),_.responseType="arraybuffer",_.onload=()=>{_.status==200||_.status==0&&_.response?g(_.response):w()},_.onerror=w,_.send(null)});var I=console.log.bind(console),$=console.error.bind(console);Object.assign(n,i),i=null,typeof WebAssembly!="object"&&It("no native wasm support detected");var O,E=!1,F,z,G,j,X,N,U,be,Ee,ue,Be;function yt(){var f=O.buffer;n.HEAP8=z=new Int8Array(f),n.HEAP16=j=new Int16Array(f),n.HEAPU8=G=new Uint8Array(f),n.HEAPU16=X=new Uint16Array(f),n.HEAP32=N=new Int32Array(f),n.HEAPU32=U=new Uint32Array(f),n.HEAPF32=be=new Float32Array(f),n.HEAPF64=Be=new Float64Array(f),n.HEAP64=Ee=new BigInt64Array(f),n.HEAPU64=ue=new BigUint64Array(f)}var Ae=[],Ge=[],$e=[],ke=0,ht=null,st=null;function It(f){throw f="Aborted("+f+")",$(f),E=!0,F=1,f=new WebAssembly.RuntimeError(f+". Build with -sASSERTIONS for more info."),o(f),f}var J=f=>f.startsWith("data:application/octet-stream;base64,"),fe=f=>f.startsWith("file://"),Ie;if(Ie="ort-wasm-simd.wasm",!J(Ie)){var Dt=Ie;Ie=n.locateFile?n.locateFile(Dt,h):h+Dt}function Ut(f){if(y)return y(f);throw"both async and sync fetching of the wasm failed"}function Je(f){if(u||l){if(typeof fetch=="function"&&!fe(f))return fetch(f,{credentials:"same-origin"}).then(g=>{if(!g.ok)throw"failed to load wasm binary file at '"+f+"'";return g.arrayBuffer()}).catch(()=>Ut(f));if(b)return new Promise((g,w)=>{b(f,_=>g(new Uint8Array(_)),w)})}return Promise.resolve().then(()=>Ut(f))}function vt(f,g,w){return Je(f).then(_=>WebAssembly.instantiate(_,g)).then(_=>_).then(w,_=>{$(`failed to asynchronously prepare wasm: ${_}`),It(_)})}function Lr(f,g){var w=Ie;return typeof WebAssembly.instantiateStreaming!="function"||J(w)||fe(w)||d||typeof fetch!="function"?vt(w,f,g):fetch(w,{credentials:"same-origin"}).then(_=>WebAssembly.instantiateStreaming(_,f).then(g,function(k){return $(`wasm streaming compile failed: ${k}`),$("falling back to ArrayBuffer instantiation"),vt(w,f,g)}))}var Mr={902248:(f,g,w,_)=>{if(typeof n>"u"||!n.gb)return 1;if(f=wt(f>>>0),f.startsWith("./")&&(f=f.substring(2)),f=n.gb.get(f),!f)return 2;if(g>>>=0,w>>>=0,g+w>f.byteLength)return 3;try{return G.set(f.subarray(g,g+w),_>>>0>>>0),0}catch{return 4}},902749:f=>n.vb(f),902782:f=>n.xb(f),902814:(f,g,w)=>{n.ob(f,g,w,!0)},902853:(f,g,w)=>{n.ob(f,g,w)},902886:f=>{n.Sa("Abs",f,void 0)},902937:f=>{n.Sa("Neg",f,void 0)},902988:f=>{n.Sa("Floor",f,void 0)},903041:f=>{n.Sa("Ceil",f,void 0)},903093:f=>{n.Sa("Reciprocal",f,void 0)},903151:f=>{n.Sa("Sqrt",f,void 0)},903203:f=>{n.Sa("Exp",f,void 0)},903254:f=>{n.Sa("Erf",f,void 0)},903305:f=>{n.Sa("Sigmoid",f,void 0)},903360:f=>{n.Sa("Log",f,void 0)},903411:f=>{n.Sa("Sin",f,void 0)},903462:f=>{n.Sa("Cos",f,void 0)},903513:f=>{n.Sa("Tan",f,void 0)},903564:f=>{n.Sa("Asin",f,void 0)},903616:f=>{n.Sa("Acos",f,void 0)},903668:f=>{n.Sa("Atan",f,void 0)},903720:f=>{n.Sa("Sinh",f,void 0)},903772:f=>{n.Sa("Cosh",f,void 0)},903824:f=>{n.Sa("Asinh",f,void 0)},903877:f=>{n.Sa("Acosh",f,void 0)},903930:f=>{n.Sa("Atanh",f,void 0)},903983:f=>{n.Sa("Tanh",f,void 0)},904035:f=>{n.Sa("Not",f,void 0)},904086:(f,g,w)=>{n.Sa("Clip",f,{min:g,max:w})},904155:f=>{n.Sa("Clip",f,void 0)},904207:(f,g)=>{n.Sa("Elu",f,{alpha:g})},904265:f=>{n.Sa("Relu",f,void 0)},904317:(f,g)=>{n.Sa("LeakyRelu",f,{alpha:g})},904381:(f,g)=>{n.Sa("ThresholdedRelu",f,{alpha:g})},904451:(f,g)=>{n.Sa("Cast",f,{to:g})},904509:f=>{n.Sa("Add",f,void 0)},904560:f=>{n.Sa("Sub",f,void 0)},904611:f=>{n.Sa("Mul",f,void 0)},904662:f=>{n.Sa("Div",f,void 0)},904713:f=>{n.Sa("Pow",f,void 0)},904764:f=>{n.Sa("Equal",f,void 0)},904817:f=>{n.Sa("Greater",f,void 0)},904872:f=>{n.Sa("GreaterOrEqual",f,void 0)},904934:f=>{n.Sa("Less",f,void 0)},904986:f=>{n.Sa("LessOrEqual",f,void 0)},905045:(f,g,w,_,k)=>{n.Sa("ReduceMean",f,{keepDims:!!g,noopWithEmptyAxes:!!w,axes:_?Array.from(N.subarray(_>>>0,k>>>0)):[]})},905204:(f,g,w,_,k)=>{n.Sa("ReduceMax",f,{keepDims:!!g,noopWithEmptyAxes:!!w,axes:_?Array.from(N.subarray(_>>>0,k>>>0)):[]})},905362:(f,g,w,_,k)=>{n.Sa("ReduceMin",f,{keepDims:!!g,noopWithEmptyAxes:!!w,axes:_?Array.from(N.subarray(_>>>0,k>>>0)):[]})},905520:(f,g,w,_,k)=>{n.Sa("ReduceProd",f,{keepDims:!!g,noopWithEmptyAxes:!!w,axes:_?Array.from(N.subarray(_>>>0,k>>>0)):[]})},905679:(f,g,w,_,k)=>{n.Sa("ReduceSum",f,{keepDims:!!g,noopWithEmptyAxes:!!w,axes:_?Array.from(N.subarray(_>>>0,k>>>0)):[]})},905837:(f,g,w,_,k)=>{n.Sa("ReduceL1",f,{keepDims:!!g,noopWithEmptyAxes:!!w,axes:_?Array.from(N.subarray(_>>>0,k>>>0)):[]})},905994:(f,g,w,_,k)=>{n.Sa("ReduceL2",f,{keepDims:!!g,noopWithEmptyAxes:!!w,axes:_?Array.from(N.subarray(_>>>0,k>>>0)):[]})},906151:(f,g,w,_,k)=>{n.Sa("ReduceLogSum",f,{keepDims:!!g,noopWithEmptyAxes:!!w,axes:_?Array.from(N.subarray(_>>>0,k>>>0)):[]})},906312:(f,g,w,_,k)=>{n.Sa("ReduceSumSquare",f,{keepDims:!!g,noopWithEmptyAxes:!!w,axes:_?Array.from(N.subarray(_>>>0,k>>>0)):[]})},906476:(f,g,w,_,k)=>{n.Sa("ReduceLogSumExp",f,{keepDims:!!g,noopWithEmptyAxes:!!w,axes:_?Array.from(N.subarray(_>>>0,k>>>0)):[]})},906640:f=>{n.Sa("Where",f,void 0)},906693:(f,g,w)=>{n.Sa("Transpose",f,{perm:g?Array.from(N.subarray(g>>>0,w>>>0)):[]})},906801:(f,g,w,_,k,V,K,oe,te,Q,pe,Se,ze,L,ye)=>{n.Sa("ConvTranspose",f,{format:te?"NHWC":"NCHW",autoPad:g,dilations:[w],group:_,kernel_shape:[k],pads:[V,K],strides:[oe],wIsConst:()=>!!z[Q>>>0],outputPadding:pe?Array.from(N.subarray(pe>>>0,Se>>>0)):[],outputShape:ze?Array.from(N.subarray(ze>>>0,L>>>0)):[],activation:wt(ye)})},907203:(f,g,w,_,k,V,K,oe,te,Q,pe,Se,ze,L)=>{n.Sa("ConvTranspose",f,{format:oe?"NHWC":"NCHW",autoPad:g,dilations:Array.from(N.subarray(w>>>0,(w>>>0)+2>>>0)),group:_,kernelShape:Array.from(N.subarray(k>>>0,(k>>>0)+2>>>0)),pads:Array.from(N.subarray(V>>>0,(V>>>0)+4>>>0)),strides:Array.from(N.subarray(K>>>0,(K>>>0)+2>>>0)),wIsConst:()=>!!z[te>>>0],outputPadding:Q?Array.from(N.subarray(Q>>>0,pe>>>0)):[],outputShape:Se?Array.from(N.subarray(Se>>>0,ze>>>0)):[],activation:wt(L)})},907768:(f,g,w,_,k,V,K,oe,te,Q,pe,Se,ze,L,ye)=>{n.Sa("ConvTranspose",f,{format:te?"NHWC":"NCHW",autoPad:g,dilations:[w],group:_,kernel_shape:[k],pads:[V,K],strides:[oe],wIsConst:()=>!!z[Q>>>0],outputPadding:pe?Array.from(N.subarray(pe>>>0,Se>>>0)):[],outputShape:ze?Array.from(N.subarray(ze>>>0,L>>>0)):[],activation:wt(ye)})},908170:(f,g,w,_,k,V,K,oe,te,Q,pe,Se,ze,L)=>{n.Sa("ConvTranspose",f,{format:oe?"NHWC":"NCHW",autoPad:g,dilations:Array.from(N.subarray(w>>>0,(w>>>0)+2>>>0)),group:_,kernelShape:Array.from(N.subarray(k>>>0,(k>>>0)+2>>>0)),pads:Array.from(N.subarray(V>>>0,(V>>>0)+4>>>0)),strides:Array.from(N.subarray(K>>>0,(K>>>0)+2>>>0)),wIsConst:()=>!!z[te>>>0],outputPadding:Q?Array.from(N.subarray(Q>>>0,pe>>>0)):[],outputShape:Se?Array.from(N.subarray(Se>>>0,ze>>>0)):[],activation:wt(L)})},908735:(f,g)=>{n.Sa("GlobalAveragePool",f,{format:g?"NHWC":"NCHW"})},908826:(f,g,w,_,k,V,K,oe,te,Q,pe,Se,ze,L,ye,Ve)=>{n.Sa("AveragePool",f,{format:Ve?"NHWC":"NCHW",auto_pad:g,ceil_mode:w,count_include_pad:_,storage_order:k,dilations:[V,K],kernel_shape:[oe,te],pads:[Q,pe,Se,ze],strides:[L,ye]})},909110:(f,g)=>{n.Sa("GlobalAveragePool",f,{format:g?"NHWC":"NCHW"})},909201:(f,g,w,_,k,V,K,oe,te,Q,pe,Se,ze,L,ye,Ve)=>{n.Sa("AveragePool",f,{format:Ve?"NHWC":"NCHW",auto_pad:g,ceil_mode:w,count_include_pad:_,storage_order:k,dilations:[V,K],kernel_shape:[oe,te],pads:[Q,pe,Se,ze],strides:[L,ye]})},909485:(f,g)=>{n.Sa("GlobalMaxPool",f,{format:g?"NHWC":"NCHW"})},909572:(f,g,w,_,k,V,K,oe,te,Q,pe,Se,ze,L,ye,Ve)=>{n.Sa("MaxPool",f,{format:Ve?"NHWC":"NCHW",auto_pad:g,ceil_mode:w,count_include_pad:_,storage_order:k,dilations:[V,K],kernel_shape:[oe,te],pads:[Q,pe,Se,ze],strides:[L,ye]})},909852:(f,g)=>{n.Sa("GlobalMaxPool",f,{format:g?"NHWC":"NCHW"})},909939:(f,g,w,_,k,V,K,oe,te,Q,pe,Se,ze,L,ye,Ve)=>{n.Sa("MaxPool",f,{format:Ve?"NHWC":"NCHW",auto_pad:g,ceil_mode:w,count_include_pad:_,storage_order:k,dilations:[V,K],kernel_shape:[oe,te],pads:[Q,pe,Se,ze],strides:[L,ye]})},910219:(f,g,w,_,k)=>{n.Sa("Gemm",f,{alpha:g,beta:w,transA:_,transB:k})},910323:f=>{n.Sa("MatMul",f,void 0)},910377:(f,g,w,_)=>{n.Sa("ArgMax",f,{keepDims:!!g,selectLastIndex:!!w,axis:_})},910485:(f,g,w,_)=>{n.Sa("ArgMin",f,{keepDims:!!g,selectLastIndex:!!w,axis:_})},910593:(f,g)=>{n.Sa("Softmax",f,{axis:g})},910656:(f,g)=>{n.Sa("Concat",f,{axis:g})},910716:(f,g,w,_,k)=>{n.Sa("Split",f,{axis:g,numOutputs:w,splitSizes:_?Array.from(N.subarray(_>>>0,k>>>0)):[]})},910856:f=>{n.Sa("Expand",f,void 0)},910910:(f,g)=>{n.Sa("Gather",f,{axis:Number(g)})},910981:(f,g)=>{n.Sa("GatherElements",f,{axis:Number(g)})},911060:(f,g,w,_,k,V,K,oe,te,Q,pe)=>{n.Sa("Resize",f,{antialias:g,axes:w?Array.from(N.subarray(w>>>0,_>>>0)):[],coordinateTransformMode:wt(k),cubicCoeffA:V,excludeOutside:K,extrapolationValue:oe,keepAspectRatioPolicy:wt(te),mode:wt(Q),nearestMode:wt(pe)})},911406:(f,g,w,_,k,V,K)=>{n.Sa("Slice",f,{starts:g?Array.from(N.subarray(g>>>0,w>>>0)):[],ends:_?Array.from(N.subarray(_>>>0,k>>>0)):[],axes:V?Array.from(N.subarray(V>>>0,K>>>0)):[]})},911622:f=>{n.Sa("Tile",f,void 0)},911674:(f,g,w)=>{n.Sa("LayerNormalization",f,{axis:Number(g),epsilon:Number(w)})},911781:(f,g,w)=>{n.Sa("InstanceNormalization",f,{epsilon:g,format:w?"NHWC":"NCHW"})},911895:(f,g,w)=>{n.Sa("InstanceNormalization",f,{epsilon:g,format:w?"NHWC":"NCHW"})},912009:f=>{n.Sa("Range",f,void 0)},912062:(f,g)=>{n.Sa("Einsum",f,{equation:wt(g)})},912143:(f,g,w,_,k)=>{n.Sa("Pad",f,{mode:g,value:w,pads:_?Array.from(N.subarray(_>>>0,k>>>0)):[]})},912270:(f,g,w,_,k,V)=>{n.Sa("BatchNormalization",f,{epsilon:g,momentum:w,spatial:!!k,trainingMode:!!_,format:V?"NHWC":"NCHW"})},912439:(f,g,w,_,k,V)=>{n.Sa("BatchNormalization",f,{epsilon:g,momentum:w,spatial:!!k,trainingMode:!!_,format:V?"NHWC":"NCHW"})},912608:(f,g,w)=>{n.Sa("CumSum",f,{exclusive:Number(g),reverse:Number(w)})},912705:(f,g,w,_,k,V,K,oe,te)=>{n.Sa("Attention",f,{numHeads:g,isUnidirectional:w,maskFilterValue:_,scale:k,doRotary:V,qkvHiddenSizes:K?Array.from(N.subarray(Number(oe)>>>0,Number(oe)+K>>>0)):[],pastPresentShareBuffer:!!te})},912977:f=>{n.Sa("Gelu",f,void 0)},913029:(f,g,w,_,k,V)=>{n.Sa("MultiHeadAttention",f,{numHeads:g,isUnidirectional:w,maskFilterValue:_,scale:k,doRotary:V})},913188:f=>{n.Sa("BiasAdd",f,void 0)},913243:f=>{n.Sa("BiasSplitGelu",f,void 0)},913304:(f,g)=>{n.Sa("SkipLayerNormalization",f,{epsilon:g})},913385:(f,g,w,_,k,V,K,oe,te,Q,pe,Se,ze)=>{n.Sa("Conv",f,{format:te?"NHWC":"NCHW",auto_pad:g,dilations:[w],group:_,kernel_shape:[k],pads:V?Array.from(N.subarray(V>>>0,K>>>0)):[],strides:[oe],w_is_const:()=>!!z[Q>>>0],activation:wt(pe),activation_params:Se?Array.from(be.subarray(Se>>>0,ze>>>0)):[]})},913755:(f,g,w,_,k,V,K,oe,te,Q,pe,Se,ze,L,ye,Ve)=>{n.Sa("Conv",f,{format:Se?"NHWC":"NCHW",auto_pad:g,dilations:[w,_],group:k,kernel_shape:[V,K],pads:oe?Array.from(N.subarray(oe>>>0,te>>>0)):[],strides:[Q,pe],w_is_const:()=>!!z[ze>>>0],activation:wt(L),activation_params:ye?Array.from(be.subarray(ye>>>0,Ve>>>0)):[]})},914146:f=>{n.yb(f)},914180:(f,g)=>n.zb(f,g,n.fb.Ab,n.fb.errors)};function sn(f){this.name="ExitStatus",this.message=`Program terminated with exit(${f})`,this.status=f}function qr(f){this.cb=f-24,this.rb=function(g){U[this.cb+4>>>2>>>0]=g},this.qb=function(g){U[this.cb+8>>>2>>>0]=g},this.kb=function(g,w){this.jb(),this.rb(g),this.qb(w)},this.jb=function(){U[this.cb+16>>>2>>>0]=0}}var Dn=0,un=0,so=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,jr=(f,g,w)=>{g>>>=0;var _=g+w;for(w=g;f[w]&&!(w>=_);)++w;if(16<w-g&&f.buffer&&so)return so.decode(f.subarray(g,w));for(_="";g<w;){var k=f[g++];if(k&128){var V=f[g++]&63;if((k&224)==192)_+=String.fromCharCode((k&31)<<6|V);else{var K=f[g++]&63;k=(k&240)==224?(k&15)<<12|V<<6|K:(k&7)<<18|V<<12|K<<6|f[g++]&63,65536>k?_+=String.fromCharCode(k):(k-=65536,_+=String.fromCharCode(55296|k>>10,56320|k&1023))}}else _+=String.fromCharCode(k)}return _},wt=(f,g)=>(f>>>=0)?jr(G,f,g):"",Nr=f=>{for(var g=0,w=0;w<f.length;++w){var _=f.charCodeAt(w);127>=_?g++:2047>=_?g+=2:55296<=_&&57343>=_?(g+=4,++w):g+=3}return g},xr=(f,g,w,_)=>{if(w>>>=0,!(0<_))return 0;var k=w;_=w+_-1;for(var V=0;V<f.length;++V){var K=f.charCodeAt(V);if(55296<=K&&57343>=K){var oe=f.charCodeAt(++V);K=65536+((K&1023)<<10)|oe&1023}if(127>=K){if(w>=_)break;g[w++>>>0]=K}else{if(2047>=K){if(w+1>=_)break;g[w++>>>0]=192|K>>6}else{if(65535>=K){if(w+2>=_)break;g[w++>>>0]=224|K>>12}else{if(w+3>=_)break;g[w++>>>0]=240|K>>18,g[w++>>>0]=128|K>>12&63}g[w++>>>0]=128|K>>6&63}g[w++>>>0]=128|K&63}}return g[w>>>0]=0,w-k},uo=f=>{if(f===null)return"null";var g=typeof f;return g==="object"||g==="array"||g==="function"?f.toString():""+f},ti,Gt=f=>{for(var g="";G[f>>>0];)g+=ti[G[f++>>>0]];return g},lo={},ln={},co={},tr;function ri(f,g,w={}){var _=g.name;if(!f)throw new tr(`type "${_}" must have a positive integer typeid pointer`);if(ln.hasOwnProperty(f)){if(w.tb)return;throw new tr(`Cannot register type '${_}' twice`)}ln[f]=g,delete co[f],lo.hasOwnProperty(f)&&(g=lo[f],delete lo[f],g.forEach(k=>k()))}function At(f,g,w={}){if(!("argPackAdvance"in g))throw new TypeError("registerType registeredInstance requires argPackAdvance");ri(f,g,w)}var fo=(f,g,w)=>{switch(g){case 1:return w?_=>z[_>>>0>>>0]:_=>G[_>>>0>>>0];case 2:return w?_=>j[_>>>1>>>0]:_=>X[_>>>1>>>0];case 4:return w?_=>N[_>>>2>>>0]:_=>U[_>>>2>>>0];case 8:return w?_=>Ee[_>>>3]:_=>ue[_>>>3];default:throw new TypeError(`invalid integer width (${g}): ${f}`)}};function po(){this.$a=[void 0],this.nb=[]}var Ze=new po;function ho(f){f>>>=0,f>=Ze.cb&&--Ze.get(f).pb===0&&Ze.jb(f)}var Re=f=>{if(!f)throw new tr("Cannot use deleted val. handle = "+f);return Ze.get(f).value},Wt=f=>{switch(f){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return Ze.kb({pb:1,value:f})}};function Bn(f){return this.fromWireType(N[f>>>2>>>0])}var mo=(f,g)=>{switch(g){case 4:return function(w){return this.fromWireType(be[w>>>2>>>0])};case 8:return function(w){return this.fromWireType(Be[w>>>3>>>0])};default:throw new TypeError(`invalid float width (${g}): ${f}`)}};function ts(f){return this.fromWireType(U[f>>>2>>>0])}var go=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,rs=(f,g)=>{for(var w=f>>1,_=w+g/2;!(w>=_)&&X[w>>>0];)++w;if(w<<=1,32<w-f&&go)return go.decode(G.subarray(f>>>0,w>>>0));for(w="",_=0;!(_>=g/2);++_){var k=j[f+2*_>>>1>>>0];if(k==0)break;w+=String.fromCharCode(k)}return w},_e=(f,g,w)=>{if(w??=2147483647,2>w)return 0;w-=2;var _=g;w=w<2*f.length?w/2:f.length;for(var k=0;k<w;++k)j[g>>>1>>>0]=f.charCodeAt(k),g+=2;return j[g>>>1>>>0]=0,g-_},Rn=f=>2*f.length,ni=(f,g)=>{for(var w=0,_="";!(w>=g/4);){var k=N[f+4*w>>>2>>>0];if(k==0)break;++w,65536<=k?(k-=65536,_+=String.fromCharCode(55296|k>>10,56320|k&1023)):_+=String.fromCharCode(k)}return _},ns=(f,g,w)=>{if(g>>>=0,w??=2147483647,4>w)return 0;var _=g;w=_+w-4;for(var k=0;k<f.length;++k){var V=f.charCodeAt(k);if(55296<=V&&57343>=V){var K=f.charCodeAt(++k);V=65536+((V&1023)<<10)|K&1023}if(N[g>>>2>>>0]=V,g+=4,g+4>w)break}return N[g>>>2>>>0]=0,g-_},oi=f=>{for(var g=0,w=0;w<f.length;++w){var _=f.charCodeAt(w);55296<=_&&57343>=_&&++w,g+=4}return g},bo=(f,g)=>{var w=ln[f];if(w===void 0)throw f=pn(f),w=Gt(f),Ht(f),new tr(g+" has unknown type "+w);return w},yo=(f,g,w)=>{var _=[];return f=f.toWireType(_,w),_.length&&(U[g>>>2>>>0]=Wt(_)),f},dn=f=>{try{f()}catch(g){It(g)}};function ii(){var f=ve,g={};for(let[w,_]of Object.entries(f))g[w]=typeof _=="function"?function(){Kr.push(w);try{return _.apply(null,arguments)}finally{E||(Kr.pop(),Bt&&fr===1&&Kr.length===0&&(fr=0,dn(wi),typeof Fibers<"u"&&Fibers.Hb()))}}:_;return g}var fr=0,Bt=null,vo=0,Kr=[],wo={},xo={},ai=0,zn=null,si=[];function ui(){return new Promise((f,g)=>{zn={resolve:f,reject:g}})}function li(){var f=Yr(65548),g=f+12;U[f>>>2>>>0]=g,U[f+4>>>2>>>0]=g+65536,g=Kr[0];var w=wo[g];return w===void 0&&(w=ai++,wo[g]=w,xo[w]=g),N[f+8>>>2>>>0]=w,f}function di(f){if(!E){if(fr===0){var g=!1,w=!1;f((_=0)=>{if(!E&&(vo=_,g=!0,w)){fr=2,dn(()=>pr(Bt)),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.resume(),_=!1;try{var k=(0,ve[xo[N[Bt+8>>>2>>>0]]])()}catch(oe){k=oe,_=!0}var V=!1;if(!Bt){var K=zn;K&&(zn=null,(_?K.reject:K.resolve)(k),V=!0)}if(_&&!V)throw k}}),w=!0,g||(fr=1,Bt=li(),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.pause(),dn(()=>hn(Bt)))}else fr===2?(fr=0,dn(Jt),Ht(Bt),Bt=null,si.forEach(_=>{if(!E)try{_();try{F=F=_=F,n.onExit?.(_),E=!0,a(_,new sn(_))}catch(k){k instanceof sn||k=="unwind"||a(1,k)}}catch(k){k instanceof sn||k=="unwind"||a(1,k)}})):It(`invalid state: ${fr}`);return vo}}function To(f){return di(g=>{f().then(g)})}var cn=[],ci={},Ln=f=>{var g=ci[f];return g===void 0?Gt(f):g},$o=()=>typeof globalThis=="object"?globalThis:Function("return this")(),Zt=f=>{var g=cn.length;return cn.push(f),g},_o=(f,g)=>{for(var w=Array(f),_=0;_<f;++_)w[_]=bo(U[g+4*_>>>2>>>0],"parameter "+_);return w},Mn=(f,g)=>Object.defineProperty(g,"name",{value:f});function os(f){var g=Function;if(!(g instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof g} which is not a function`);var w=Mn(g.name||"unknownFunctionName",function(){});return w.prototype=g.prototype,w=new w,f=g.apply(w,f),f instanceof Object?f:w}var Rt=f=>f%4===0&&(f%100!==0||f%400===0),fi=[0,31,60,91,121,152,182,213,244,274,305,335],rr=[0,31,59,90,120,151,181,212,243,273,304,334],So=f=>{var g=Nr(f)+1,w=Yr(g);return w&&xr(f,G,w,g),w},Nn=[],zt=(f,g)=>{Nn.length=0;for(var w;w=G[f++>>>0];){var _=w!=105;_&=w!=112,g+=_&&g%8?4:0,Nn.push(w==112?U[g>>>2>>>0]:w==106?Ee[g>>>3]:w==105?N[g>>>2>>>0]:Be[g>>>3>>>0]),g+=_?8:4}return Nn},fn={},Ot=()=>{if(!Lt){var f={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:s||"./this.program"},g;for(g in fn)fn[g]===void 0?delete f[g]:f[g]=fn[g];var w=[];for(g in f)w.push(`${g}=${f[g]}`);Lt=w}return Lt},Lt,pi=[null,[],[]],hi=[31,29,31,30,31,30,31,31,30,31,30,31],mi=[31,28,31,30,31,30,31,31,30,31,30,31];function gi(f){var g=Array(Nr(f)+1);return xr(f,g,0,g.length),g}function bi(f,g,w,_){function k(L,ye,Ve){for(L=typeof L=="number"?L.toString():L||"";L.length<ye;)L=Ve[0]+L;return L}function V(L,ye){return k(L,ye,"0")}function K(L,ye){function Ve(Ur){return 0>Ur?-1:0<Ur?1:0}var Vr;return(Vr=Ve(L.getFullYear()-ye.getFullYear()))===0&&(Vr=Ve(L.getMonth()-ye.getMonth()))===0&&(Vr=Ve(L.getDate()-ye.getDate())),Vr}function oe(L){switch(L.getDay()){case 0:return new Date(L.getFullYear()-1,11,29);case 1:return L;case 2:return new Date(L.getFullYear(),0,3);case 3:return new Date(L.getFullYear(),0,2);case 4:return new Date(L.getFullYear(),0,1);case 5:return new Date(L.getFullYear()-1,11,31);case 6:return new Date(L.getFullYear()-1,11,30)}}function te(L){var ye=L.ab;for(L=new Date(new Date(L.bb+1900,0,1).getTime());0<ye;){var Ve=L.getMonth(),Vr=(Rt(L.getFullYear())?hi:mi)[Ve];if(ye>Vr-L.getDate())ye-=Vr-L.getDate()+1,L.setDate(1),11>Ve?L.setMonth(Ve+1):(L.setMonth(0),L.setFullYear(L.getFullYear()+1));else{L.setDate(L.getDate()+ye);break}}return Ve=new Date(L.getFullYear()+1,0,4),ye=oe(new Date(L.getFullYear(),0,4)),Ve=oe(Ve),0>=K(ye,L)?0>=K(Ve,L)?L.getFullYear()+1:L.getFullYear():L.getFullYear()-1}f>>>=0,g>>>=0,w>>>=0,_>>>=0;var Q=U[_+40>>>2>>>0];_={Db:N[_>>>2>>>0],Cb:N[_+4>>>2>>>0],hb:N[_+8>>>2>>>0],mb:N[_+12>>>2>>>0],ib:N[_+16>>>2>>>0],bb:N[_+20>>>2>>>0],Wa:N[_+24>>>2>>>0],ab:N[_+28>>>2>>>0],Gb:N[_+32>>>2>>>0],Bb:N[_+36>>>2>>>0],Eb:Q?wt(Q):""},w=wt(w),Q={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var pe in Q)w=w.replace(new RegExp(pe,"g"),Q[pe]);var Se="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),ze="January February March April May June July August September October November December".split(" ");Q={"%a":L=>Se[L.Wa].substring(0,3),"%A":L=>Se[L.Wa],"%b":L=>ze[L.ib].substring(0,3),"%B":L=>ze[L.ib],"%C":L=>V((L.bb+1900)/100|0,2),"%d":L=>V(L.mb,2),"%e":L=>k(L.mb,2," "),"%g":L=>te(L).toString().substring(2),"%G":L=>te(L),"%H":L=>V(L.hb,2),"%I":L=>(L=L.hb,L==0?L=12:12<L&&(L-=12),V(L,2)),"%j":L=>{for(var ye=0,Ve=0;Ve<=L.ib-1;ye+=(Rt(L.bb+1900)?hi:mi)[Ve++]);return V(L.mb+ye,3)},"%m":L=>V(L.ib+1,2),"%M":L=>V(L.Cb,2),"%n":()=>`
`,"%p":L=>0<=L.hb&&12>L.hb?"AM":"PM","%S":L=>V(L.Db,2),"%t":()=>"	","%u":L=>L.Wa||7,"%U":L=>V(Math.floor((L.ab+7-L.Wa)/7),2),"%V":L=>{var ye=Math.floor((L.ab+7-(L.Wa+6)%7)/7);if(2>=(L.Wa+371-L.ab-2)%7&&ye++,ye)ye==53&&(Ve=(L.Wa+371-L.ab)%7,Ve==4||Ve==3&&Rt(L.bb)||(ye=1));else{ye=52;var Ve=(L.Wa+7-L.ab-1)%7;(Ve==4||Ve==5&&Rt(L.bb%400-1))&&ye++}return V(ye,2)},"%w":L=>L.Wa,"%W":L=>V(Math.floor((L.ab+7-(L.Wa+6)%7)/7),2),"%y":L=>(L.bb+1900).toString().substring(2),"%Y":L=>L.bb+1900,"%z":L=>{L=L.Bb;var ye=0<=L;return L=Math.abs(L)/60,(ye?"+":"-")+("0000"+(L/60*100+L%60)).slice(-4)},"%Z":L=>L.Eb,"%%":()=>"%"},w=w.replace(/%%/g,"\0\0");for(pe in Q)w.includes(pe)&&(w=w.replace(new RegExp(pe,"g"),Q[pe](_)));return w=w.replace(/\0\0/g,"%"),pe=gi(w),pe.length>g?0:(z.set(pe,f>>>0),pe.length-1)}for(var yi=Array(256),Fn=0;256>Fn;++Fn)yi[Fn]=String.fromCharCode(Fn);ti=yi,tr=n.BindingError=class extends Error{constructor(f){super(f),this.name="BindingError"}},n.InternalError=class extends Error{constructor(f){super(f),this.name="InternalError"}},Object.assign(po.prototype,{get(f){return this.$a[f]},has(f){return this.$a[f]!==void 0},kb(f){var g=this.nb.pop()||this.$a.length;return this.$a[g]=f,g},jb(f){this.$a[f]=void 0,this.nb.push(f)}}),Ze.$a.push({value:void 0},{value:null},{value:!0},{value:!1}),Ze.cb=Ze.$a.length,n.count_emval_handles=()=>{for(var f=0,g=Ze.cb;g<Ze.$a.length;++g)Ze.$a[g]!==void 0&&++f;return f};var is={ia:function(f,g,w){return To(async()=>{await n.wb(f,g,w)})},a:function(f,g,w){throw f>>>=0,new qr(f).kb(g>>>0,w>>>0),Dn=f,un++,Dn},w:function(){return 0},ca:function(){},P:function(){},R:function(){},J:function(){return 0},aa:function(){},X:function(){},$:function(){},D:function(){},Q:function(){},N:function(){},ba:function(){},O:function(){},G:function(f,g,w,_,k){g>>>=0,g=Gt(g);var V=g.indexOf("u")!=-1;V&&(k=(1n<<64n)-1n),At(f>>>0,{name:g,fromWireType:K=>K,toWireType:function(K,oe){if(typeof oe!="bigint"&&typeof oe!="number")throw new TypeError(`Cannot convert "${uo(oe)}" to ${this.name}`);if(oe<_||oe>k)throw new TypeError(`Passing a number "${uo(oe)}" from JS side to C/C++ side to an argument of type "${g}", which is outside the valid range [${_}, ${k}]!`);return oe},argPackAdvance:8,readValueFromPointer:fo(g,w>>>0,!V),eb:null})},ga:function(f,g,w,_){g=Gt(g>>>0),At(f>>>0,{name:g,fromWireType:function(k){return!!k},toWireType:function(k,V){return V?w:_},argPackAdvance:8,readValueFromPointer:function(k){return this.fromWireType(G[k>>>0])},eb:null})},fa:function(f,g){g=Gt(g>>>0),At(f>>>0,{name:g,fromWireType:w=>{var _=Re(w);return ho(w),_},toWireType:(w,_)=>Wt(_),argPackAdvance:8,readValueFromPointer:Bn,eb:null})},F:function(f,g,w){g=Gt(g>>>0),At(f>>>0,{name:g,fromWireType:_=>_,toWireType:(_,k)=>k,argPackAdvance:8,readValueFromPointer:mo(g,w>>>0),eb:null})},t:function(f,g,w,_,k){if(f>>>=0,w>>>=0,g=Gt(g>>>0),k===-1&&(k=4294967295),k=oe=>oe,_===0){var V=32-8*w;k=oe=>oe<<V>>>V}var K=g.includes("unsigned")?function(oe,te){return te>>>0}:function(oe,te){return te};At(f,{name:g,fromWireType:k,toWireType:K,argPackAdvance:8,readValueFromPointer:fo(g,w,_!==0),eb:null})},n:function(f,g,w){function _(V){return new k(z.buffer,U[V+4>>>2>>>0],U[V>>>2>>>0])}var k=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][g];w=Gt(w>>>0),At(f>>>0,{name:w,fromWireType:_,argPackAdvance:8,readValueFromPointer:_},{tb:!0})},H:function(f,g){g=Gt(g>>>0);var w=g==="std::string";At(f>>>0,{name:g,fromWireType:function(_){var k=U[_>>>2>>>0],V=_+4;if(w)for(var K=V,oe=0;oe<=k;++oe){var te=V+oe;if(oe==k||G[te>>>0]==0){if(K=wt(K,te-K),Q===void 0)var Q=K;else Q+=String.fromCharCode(0),Q+=K;K=te+1}}else{for(Q=Array(k),oe=0;oe<k;++oe)Q[oe]=String.fromCharCode(G[V+oe>>>0]);Q=Q.join("")}return Ht(_),Q},toWireType:function(_,k){k instanceof ArrayBuffer&&(k=new Uint8Array(k));var V=typeof k=="string";if(!(V||k instanceof Uint8Array||k instanceof Uint8ClampedArray||k instanceof Int8Array))throw new tr("Cannot pass non-string to std::string");var K=w&&V?Nr(k):k.length,oe=Yr(4+K+1),te=oe+4;if(U[oe>>>2>>>0]=K,w&&V)xr(k,G,te,K+1);else if(V)for(V=0;V<K;++V){var Q=k.charCodeAt(V);if(255<Q)throw Ht(te),new tr("String has UTF-16 code units that do not fit in 8 bits");G[te+V>>>0]=Q}else for(V=0;V<K;++V)G[te+V>>>0]=k[V];return _!==null&&_.push(Ht,oe),oe},argPackAdvance:8,readValueFromPointer:ts,eb(_){Ht(_)}})},y:function(f,g,w){if(g>>>=0,w>>>=0,w=Gt(w),g===2)var _=rs,k=_e,V=Rn,K=()=>X,oe=1;else g===4&&(_=ni,k=ns,V=oi,K=()=>U,oe=2);At(f>>>0,{name:w,fromWireType:te=>{for(var Q=U[te>>>2>>>0],pe=K(),Se,ze=te+4,L=0;L<=Q;++L){var ye=te+4+L*g;(L==Q||pe[ye>>>oe]==0)&&(ze=_(ze,ye-ze),Se===void 0?Se=ze:(Se+=String.fromCharCode(0),Se+=ze),ze=ye+g)}return Ht(te),Se},toWireType:(te,Q)=>{if(typeof Q!="string")throw new tr(`Cannot pass non-string to C++ string type ${w}`);var pe=V(Q),Se=Yr(4+pe+g);return U[Se>>>2]=pe>>oe,k(Q,Se+4,pe+g),te!==null&&te.push(Ht,Se),Se},argPackAdvance:8,readValueFromPointer:Bn,eb(te){Ht(te)}})},ha:function(f,g){g=Gt(g>>>0),At(f>>>0,{ub:!0,name:g,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},da:()=>1,s:function(f,g,w){return g>>>=0,w>>>=0,f=Re(f>>>0),g=bo(g,"emval::as"),yo(g,w,f)},v:function(f){return f>>>=0,To(()=>(f=Re(f),f.then(Wt)))},o:function(f,g,w,_){return w>>>=0,_>>>=0,f=cn[f>>>0],g=Re(g>>>0),f(null,g,w,_)},k:function(f,g,w,_,k){return w>>>=0,_>>>=0,k>>>=0,f=cn[f>>>0],g=Re(g>>>0),w=Ln(w),f(g,g[w],_,k)},b:ho,z:function(f,g){return g>>>=0,f=Re(f>>>0),g=Re(g),f==g},m:function(f){return f>>>=0,f===0?Wt($o()):(f=Ln(f),Wt($o()[f]))},i:function(f,g,w){g=_o(f,g>>>0);var _=g.shift();f--;var k=`return function (obj, func, destructorsRef, args) {
`,V=0,K=[];w===0&&K.push("obj");for(var oe=["retType"],te=[_],Q=0;Q<f;++Q)K.push("arg"+Q),oe.push("argType"+Q),te.push(g[Q]),k+=`  var arg${Q} = argType${Q}.readValueFromPointer(args${V?"+"+V:""});
`,V+=g[Q].argPackAdvance;for(k+=`  var rv = ${w===1?"new func":"func.call"}(${K.join(", ")});
`,Q=0;Q<f;++Q)g[Q].deleteObject&&(k+=`  argType${Q}.deleteObject(arg${Q});
`);return _.ub||(oe.push("emval_returnValue"),te.push(yo),k+=`  return emval_returnValue(retType, destructorsRef, rv);
`),oe.push(k+`};
`),f=os(oe).apply(null,te),w=`methodCaller<(${g.map(pe=>pe.name).join(", ")}) => ${_.name}>`,Zt(Mn(w,f))},r:function(f,g){return g>>>=0,f=Re(f>>>0),g=Re(g),Wt(f[g])},d:function(f){f>>>=0,4<f&&(Ze.get(f).pb+=1)},u:function(){return Wt([])},l:function(f){f=Re(f>>>0);for(var g=Array(f.length),w=0;w<f.length;w++)g[w]=f[w];return Wt(g)},e:function(f){return Wt(Ln(f>>>0))},j:function(){return Wt({})},h:function(f){f>>>=0;for(var g=Re(f);g.length;){var w=g.pop();g.pop()(w)}ho(f)},g:function(f,g,w){g>>>=0,w>>>=0,f=Re(f>>>0),g=Re(g),w=Re(w),f[g]=w},c:function(f,g){return g>>>=0,f=bo(f>>>0,"_emval_take_value"),f=f.readValueFromPointer(g),Wt(f)},U:function(f,g){f=-9007199254740992>f||9007199254740992<f?NaN:Number(f),g>>>=0,f=new Date(1e3*f),N[g>>>2>>>0]=f.getUTCSeconds(),N[g+4>>>2>>>0]=f.getUTCMinutes(),N[g+8>>>2>>>0]=f.getUTCHours(),N[g+12>>>2>>>0]=f.getUTCDate(),N[g+16>>>2>>>0]=f.getUTCMonth(),N[g+20>>>2>>>0]=f.getUTCFullYear()-1900,N[g+24>>>2>>>0]=f.getUTCDay(),N[g+28>>>2>>>0]=(f.getTime()-Date.UTC(f.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},V:function(f,g){f=-9007199254740992>f||9007199254740992<f?NaN:Number(f),g>>>=0,f=new Date(1e3*f),N[g>>>2>>>0]=f.getSeconds(),N[g+4>>>2>>>0]=f.getMinutes(),N[g+8>>>2>>>0]=f.getHours(),N[g+12>>>2>>>0]=f.getDate(),N[g+16>>>2>>>0]=f.getMonth(),N[g+20>>>2>>>0]=f.getFullYear()-1900,N[g+24>>>2>>>0]=f.getDay(),N[g+28>>>2>>>0]=(Rt(f.getFullYear())?fi:rr)[f.getMonth()]+f.getDate()-1|0,N[g+36>>>2>>>0]=-(60*f.getTimezoneOffset());var w=new Date(f.getFullYear(),6,1).getTimezoneOffset(),_=new Date(f.getFullYear(),0,1).getTimezoneOffset();N[g+32>>>2>>>0]=(w!=_&&f.getTimezoneOffset()==Math.min(_,w))|0},W:function(f){f>>>=0;var g=new Date(N[f+20>>>2>>>0]+1900,N[f+16>>>2>>>0],N[f+12>>>2>>>0],N[f+8>>>2>>>0],N[f+4>>>2>>>0],N[f>>>2>>>0],0),w=N[f+32>>>2>>>0],_=g.getTimezoneOffset(),k=new Date(g.getFullYear(),6,1).getTimezoneOffset(),V=new Date(g.getFullYear(),0,1).getTimezoneOffset(),K=Math.min(V,k);return 0>w?N[f+32>>>2>>>0]=+(k!=V&&K==_):0<w!=(K==_)&&(k=Math.max(V,k),g.setTime(g.getTime()+6e4*((0<w?K:k)-_))),N[f+24>>>2>>>0]=g.getDay(),N[f+28>>>2>>>0]=(Rt(g.getFullYear())?fi:rr)[g.getMonth()]+g.getDate()-1|0,N[f>>>2>>>0]=g.getSeconds(),N[f+4>>>2>>>0]=g.getMinutes(),N[f+8>>>2>>>0]=g.getHours(),N[f+12>>>2>>>0]=g.getDate(),N[f+16>>>2>>>0]=g.getMonth(),N[f+20>>>2>>>0]=g.getYear(),f=g.getTime(),isNaN(f)?(N[vi()>>>2>>>0]=61,f=-1):f/=1e3,BigInt(f)},S:function(){return-52},T:function(){},L:function(f,g,w){function _(te){return(te=te.toTimeString().match(/\(([A-Za-z ]+)\)$/))?te[1]:"GMT"}w>>>=0;var k=new Date().getFullYear(),V=new Date(k,0,1),K=new Date(k,6,1);k=V.getTimezoneOffset();var oe=K.getTimezoneOffset();U[f>>>0>>>2>>>0]=60*Math.max(k,oe),N[g>>>0>>>2>>>0]=+(k!=oe),f=_(V),g=_(K),f=So(f),g=So(g),oe<k?(U[w>>>2>>>0]=f,U[w+4>>>2>>>0]=g):(U[w>>>2>>>0]=g,U[w+4>>>2>>>0]=f)},A:()=>{It("")},f:function(f,g,w){return f>>>=0,g=zt(g>>>0,w>>>0),Mr[f].apply(null,g)},I:function(f,g,w){return f>>>=0,g=zt(g>>>0,w>>>0),Mr[f].apply(null,g)},E:()=>Date.now(),M:function(){return 4294901760},q:()=>performance.now(),K:function(f){f>>>=0;var g=G.length;if(4294901760<f)return!1;for(var w=1;4>=w;w*=2){var _=g*(1+.2/w);_=Math.min(_,f+100663296);var k=Math;_=Math.max(f,_);e:{k=(k.min.call(k,4294901760,_+(65536-_%65536)%65536)-O.buffer.byteLength+65535)/65536;try{O.grow(k),yt();var V=1;break e}catch{}V=void 0}if(V)return!0}return!1},Z:function(f,g){f>>>=0,g>>>=0;var w=0;return Ot().forEach((_,k)=>{var V=g+w;for(k=U[f+4*k>>>2>>>0]=V,V=0;V<_.length;++V)z[k++>>>0>>>0]=_.charCodeAt(V);z[k>>>0>>>0]=0,w+=_.length+1}),0},_:function(f,g){f>>>=0,g>>>=0;var w=Ot();U[f>>>2>>>0]=w.length;var _=0;return w.forEach(k=>_+=k.length+1),U[g>>>2>>>0]=_,0},x:()=>52,C:function(){return 52},Y:function(){return 70},B:function(f,g,w,_){g>>>=0,w>>>=0,_>>>=0;for(var k=0,V=0;V<w;V++){var K=U[g>>>2>>>0],oe=U[g+4>>>2>>>0];g+=8;for(var te=0;te<oe;te++){var Q=G[K+te>>>0],pe=pi[f];Q===0||Q===10?((f===1?I:$)(jr(pe,0)),pe.length=0):pe.push(Q)}k+=oe}return U[_>>>2>>>0]=k,0},ea:bi,p:function(f,g,w,_){return bi(f>>>0,g>>>0,w>>>0,_>>>0)}},ve=function(){function f(w){return ve=w.exports,ve=ii(),ve=xi(),O=ve.ja,yt(),Ge.unshift(ve.ka),ke--,ke==0&&(ht!==null&&(clearInterval(ht),ht=null),st&&(w=st,st=null,w())),ve}var g={a:is};if(ke++,n.instantiateWasm)try{return n.instantiateWasm(g,f)}catch(w){$(`Module.instantiateWasm callback failed with error: ${w}`),o(w)}return Lr(g,function(w){f(w.instance)}).catch(o),{}}();n._OrtInit=(f,g)=>(n._OrtInit=ve.la)(f,g),n._OrtGetLastError=(f,g)=>(n._OrtGetLastError=ve.ma)(f,g),n._OrtCreateSessionOptions=(f,g,w,_,k,V,K,oe,te,Q)=>(n._OrtCreateSessionOptions=ve.na)(f,g,w,_,k,V,K,oe,te,Q),n._OrtAppendExecutionProvider=(f,g)=>(n._OrtAppendExecutionProvider=ve.oa)(f,g),n._OrtAddFreeDimensionOverride=(f,g,w)=>(n._OrtAddFreeDimensionOverride=ve.pa)(f,g,w),n._OrtAddSessionConfigEntry=(f,g,w)=>(n._OrtAddSessionConfigEntry=ve.qa)(f,g,w),n._OrtReleaseSessionOptions=f=>(n._OrtReleaseSessionOptions=ve.ra)(f),n._OrtCreateSession=(f,g,w)=>(n._OrtCreateSession=ve.sa)(f,g,w),n._OrtReleaseSession=f=>(n._OrtReleaseSession=ve.ta)(f),n._OrtGetInputOutputCount=(f,g,w)=>(n._OrtGetInputOutputCount=ve.ua)(f,g,w),n._OrtGetInputName=(f,g)=>(n._OrtGetInputName=ve.va)(f,g),n._OrtGetOutputName=(f,g)=>(n._OrtGetOutputName=ve.wa)(f,g),n._OrtFree=f=>(n._OrtFree=ve.xa)(f),n._OrtCreateTensor=(f,g,w,_,k,V)=>(n._OrtCreateTensor=ve.ya)(f,g,w,_,k,V),n._OrtGetTensorData=(f,g,w,_,k)=>(n._OrtGetTensorData=ve.za)(f,g,w,_,k),n._OrtReleaseTensor=f=>(n._OrtReleaseTensor=ve.Aa)(f),n._OrtCreateRunOptions=(f,g,w,_)=>(n._OrtCreateRunOptions=ve.Ba)(f,g,w,_),n._OrtAddRunConfigEntry=(f,g,w)=>(n._OrtAddRunConfigEntry=ve.Ca)(f,g,w),n._OrtReleaseRunOptions=f=>(n._OrtReleaseRunOptions=ve.Da)(f),n._OrtCreateBinding=f=>(n._OrtCreateBinding=ve.Ea)(f),n._OrtBindInput=(f,g,w)=>(n._OrtBindInput=ve.Fa)(f,g,w),n._OrtBindOutput=(f,g,w,_)=>(n._OrtBindOutput=ve.Ga)(f,g,w,_),n._OrtClearBoundOutputs=f=>(n._OrtClearBoundOutputs=ve.Ha)(f),n._OrtReleaseBinding=f=>(n._OrtReleaseBinding=ve.Ia)(f),n._OrtRunWithBinding=(f,g,w,_,k)=>(n._OrtRunWithBinding=ve.Ja)(f,g,w,_,k),n._OrtRun=(f,g,w,_,k,V,K,oe)=>(n._OrtRun=ve.Ka)(f,g,w,_,k,V,K,oe),n._OrtEndProfiling=f=>(n._OrtEndProfiling=ve.La)(f),n._JsepOutput=(f,g,w)=>(n._JsepOutput=ve.Ma)(f,g,w),n._JsepGetNodeName=f=>(n._JsepGetNodeName=ve.Na)(f);var vi=()=>(vi=ve.Oa)(),Yr=n._malloc=f=>(Yr=n._malloc=ve.Pa)(f),Ht=n._free=f=>(Ht=n._free=ve.Qa)(f),pn=f=>(pn=ve.Ra)(f),Vn=()=>(Vn=ve.Ta)(),Un=f=>(Un=ve.Ua)(f),Io=f=>(Io=ve.Va)(f),hn=f=>(hn=ve.Xa)(f),wi=()=>(wi=ve.Ya)(),pr=f=>(pr=ve.Za)(f),Jt=()=>(Jt=ve._a)();n.___start_em_js=914292,n.___stop_em_js=914453;function xi(){var f=ve;f=Object.assign({},f);var g=_=>()=>_()>>>0,w=_=>k=>_(k)>>>0;return f.Oa=g(f.Oa),f.Pa=w(f.Pa),f.Ra=w(f.Ra),f.Ta=g(f.Ta),f.Va=w(f.Va),f}n.stackAlloc=Io,n.stackSave=Vn,n.stackRestore=Un,n.UTF8ToString=wt,n.stringToUTF8=(f,g,w)=>xr(f,G,g,w),n.lengthBytesUTF8=Nr;var Fr;st=function f(){Fr||Ao(),Fr||(st=f)};function Ao(){if(!(0<ke)){if(n.preRun)for(typeof n.preRun=="function"&&(n.preRun=[n.preRun]);n.preRun.length;){var f=n.preRun.shift();Ae.unshift(f)}for(;0<Ae.length;)Ae.shift()(n);if(!(0<ke||Fr||(Fr=!0,n.calledRun=!0,E))){for(;0<Ge.length;)Ge.shift()(n);for(t(n);0<$e.length;)$e.shift()(n)}}}return Ao(),e.ready}})();typeof ym=="object"&&typeof Iu=="object"?Iu.exports=bm:typeof define=="function"&&define.amd&&define([],()=>bm)});var wm=Qe(()=>{});var xm=Qe(()=>{});var Tm={};gn(Tm,{cpus:()=>d2});var d2,$m=R(()=>{d2=void 0});var Im=Qe((Sm,Au)=>{"use strict";var _m=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e={}){function n(){return Be.buffer!=$e.buffer&&Je(),$e}function t(){return Be.buffer!=$e.buffer&&Je(),ke}function o(){return Be.buffer!=$e.buffer&&Je(),ht}function i(){return Be.buffer!=$e.buffer&&Je(),st}function s(){return Be.buffer!=$e.buffer&&Je(),It}function a(){return Be.buffer!=$e.buffer&&Je(),J}function u(){return Be.buffer!=$e.buffer&&Je(),fe}function l(){return Be.buffer!=$e.buffer&&Je(),Ut}var d=e,h,m;d.ready=new Promise((c,p)=>{h=c,m=p}),d.mountExternalData=(c,p)=>{(d.Fb||(d.Fb=new Map)).set(c,p)},d.unmountExternalData=()=>{delete d.Fb},d.jsepInit=(c,p,v,T,C,D,W,Y)=>{d.rc=c,d.$b=p,d.bc=v,d.Ob=T,d.ac=C,d.eb=D,d.cc=W,d.dc=Y,p=(ne,re,me)=>(...Oe)=>{let Ne=Jt,M=re?.();Oe=ne(...Oe);let we=re?.();return M!==we&&(ne=we,me(M),re=me=null),Jt!=Ne?k():Oe},v=ne=>async(...re)=>{try{if(d.Eb)throw Error("Session already started");let me=d.Eb={fc:re[0],errors:[]},Oe=await ne(...re);if(d.Eb!==me)throw Error("Session mismatch");c.flush();let Ne=me.errors;if(0<Ne.length){let M=await Promise.all(Ne);if(M=M.filter(we=>we),0<M.length)throw Error(M.join(`
`))}return Oe}finally{d.Eb=null}},d._OrtCreateSession=p(d._OrtCreateSession,()=>d._OrtCreateSession,ne=>d._OrtCreateSession=ne),d._OrtRun=v(p(d._OrtRun,()=>d._OrtRun,ne=>d._OrtRun=ne)),d._OrtRunWithBinding=v(p(d._OrtRunWithBinding,()=>d._OrtRunWithBinding,ne=>d._OrtRunWithBinding=ne)),d._OrtBindInput=p(d._OrtBindInput,()=>d._OrtBindInput,ne=>d._OrtBindInput=ne),d.jsepRegisterBuffer=(ne,re,me,Oe)=>c.registerBuffer(ne,re,me,Oe),d.jsepUnregisterBuffers=ne=>{c.unregisterBuffers(ne)},d.jsepGetBuffer=ne=>c.getBuffer(ne),d.jsepCreateDownloader=(ne,re,me)=>c.createDownloader(ne,re,me)};var b=Object.assign({},d),y="./this.program",x=(c,p)=>{throw p},A=typeof window=="object",I=typeof importScripts=="function",$=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",O=d.ENVIRONMENT_IS_PTHREAD||!1,E="";function F(c){return d.locateFile?d.locateFile(c,E):E+c}var z,G,j;if($){var X=($u(),Xr(Tu)),N=(Su(),Xr(_u));E=I?N.dirname(E)+"/":__dirname+"/",z=(p,v)=>(p=Nr(p)?new URL(p):N.normalize(p),X.readFileSync(p,v?void 0:"utf8")),j=p=>(p=z(p,!0),p.buffer||(p=new Uint8Array(p)),p),G=(p,v,T,C=!0)=>{p=Nr(p)?new URL(p):N.normalize(p),X.readFile(p,C?void 0:"utf8",(D,W)=>{D?T(D):v(C?W.buffer:W)})},!d.thisProgram&&1<process.argv.length&&(y=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),x=(p,v)=>{throw process.exitCode=p,v},d.inspect=()=>"[Emscripten Module object]";let c;try{c=wm()}catch(p){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),p}global.Worker=c.Worker}else(A||I)&&(I?E=self.location.href:typeof document<"u"&&document.currentScript&&(E=document.currentScript.src),typeof r<"u"&&r&&(E=r),E.indexOf("blob:")!==0?E=E.substr(0,E.replace(/[?#].*/,"").lastIndexOf("/")+1):E="",$||(z=c=>{var p=new XMLHttpRequest;return p.open("GET",c,!1),p.send(null),p.responseText},I&&(j=c=>{var p=new XMLHttpRequest;return p.open("GET",c,!1),p.responseType="arraybuffer",p.send(null),new Uint8Array(p.response)}),G=(c,p,v)=>{var T=new XMLHttpRequest;T.open("GET",c,!0),T.responseType="arraybuffer",T.onload=()=>{T.status==200||T.status==0&&T.response?p(T.response):v()},T.onerror=v,T.send(null)}));$&&typeof performance>"u"&&(global.performance=xm().performance);var U=console.log.bind(console),be=console.error.bind(console);$&&(U=(...c)=>X.writeSync(1,c.join(" ")+`
`),be=(...c)=>X.writeSync(2,c.join(" ")+`
`));var Ee=U,ue=be;Object.assign(d,b),b=null,typeof WebAssembly!="object"&&jr("no native wasm support detected");var Be,yt,Ae=!1,Ge,$e,ke,ht,st,It,J,fe,Ie,Dt,Ut;function Je(){var c=Be.buffer;d.HEAP8=$e=new Int8Array(c),d.HEAP16=ht=new Int16Array(c),d.HEAPU8=ke=new Uint8Array(c),d.HEAPU16=st=new Uint16Array(c),d.HEAP32=It=new Int32Array(c),d.HEAPU32=J=new Uint32Array(c),d.HEAPF32=fe=new Float32Array(c),d.HEAPF64=Ut=new Float64Array(c),d.HEAP64=Ie=new BigInt64Array(c),d.HEAPU64=Dt=new BigUint64Array(c)}var vt=16777216;if(O)Be=d.wasmMemory;else if(d.wasmMemory)Be=d.wasmMemory;else if(Be=new WebAssembly.Memory({initial:vt/65536,maximum:65536,shared:!0}),!(Be.buffer instanceof SharedArrayBuffer))throw ue("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),$&&ue("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");Je(),vt=Be.buffer.byteLength;var Lr=[],Mr=[],sn=[],qr=0,Dn=null,un=null;function so(){if(qr--,qr==0&&(Dn!==null&&(clearInterval(Dn),Dn=null),un)){var c=un;un=null,c()}}function jr(c){throw c="Aborted("+c+")",ue(c),Ae=!0,Ge=1,c=new WebAssembly.RuntimeError(c+". Build with -sASSERTIONS for more info."),m(c),c}var wt=c=>c.startsWith("data:application/octet-stream;base64,"),Nr=c=>c.startsWith("file://"),xr;xr="ort-wasm-simd-threaded.wasm",wt(xr)||(xr=F(xr));function uo(c){if(j)return j(c);throw"both async and sync fetching of the wasm failed"}function ti(c){if(A||I){if(typeof fetch=="function"&&!Nr(c))return fetch(c,{credentials:"same-origin"}).then(p=>{if(!p.ok)throw"failed to load wasm binary file at '"+c+"'";return p.arrayBuffer()}).catch(()=>uo(c));if(G)return new Promise((p,v)=>{G(c,T=>p(new Uint8Array(T)),v)})}return Promise.resolve().then(()=>uo(c))}function Gt(c,p,v){return ti(c).then(T=>WebAssembly.instantiate(T,p)).then(T=>T).then(v,T=>{ue(`failed to asynchronously prepare wasm: ${T}`),jr(T)})}function lo(c,p){var v=xr;return typeof WebAssembly.instantiateStreaming!="function"||wt(v)||Nr(v)||$||typeof fetch!="function"?Gt(v,c,p):fetch(v,{credentials:"same-origin"}).then(T=>WebAssembly.instantiateStreaming(T,c).then(p,function(C){return ue(`wasm streaming compile failed: ${C}`),ue("falling back to ArrayBuffer instantiation"),Gt(v,c,p)}))}var ln={903244:(c,p,v,T)=>{if(typeof d>"u"||!d.Fb)return 1;if(c=Ze(c>>>0),c.startsWith("./")&&(c=c.substring(2)),c=d.Fb.get(c),!c)return 2;if(p>>>=0,v>>>=0,T>>>=0,p+v>c.byteLength)return 3;try{return t().set(c.subarray(p,p+v),T>>>0),0}catch{return 4}},903745:c=>d.$b(c),903778:c=>d.bc(c),903810:(c,p,v)=>{d.Ob(c,p,v,!0)},903849:(c,p,v)=>{d.Ob(c,p,v)},903882:c=>{d.eb("Abs",c,void 0)},903933:c=>{d.eb("Neg",c,void 0)},903984:c=>{d.eb("Floor",c,void 0)},904037:c=>{d.eb("Ceil",c,void 0)},904089:c=>{d.eb("Reciprocal",c,void 0)},904147:c=>{d.eb("Sqrt",c,void 0)},904199:c=>{d.eb("Exp",c,void 0)},904250:c=>{d.eb("Erf",c,void 0)},904301:c=>{d.eb("Sigmoid",c,void 0)},904356:c=>{d.eb("Log",c,void 0)},904407:c=>{d.eb("Sin",c,void 0)},904458:c=>{d.eb("Cos",c,void 0)},904509:c=>{d.eb("Tan",c,void 0)},904560:c=>{d.eb("Asin",c,void 0)},904612:c=>{d.eb("Acos",c,void 0)},904664:c=>{d.eb("Atan",c,void 0)},904716:c=>{d.eb("Sinh",c,void 0)},904768:c=>{d.eb("Cosh",c,void 0)},904820:c=>{d.eb("Asinh",c,void 0)},904873:c=>{d.eb("Acosh",c,void 0)},904926:c=>{d.eb("Atanh",c,void 0)},904979:c=>{d.eb("Tanh",c,void 0)},905031:c=>{d.eb("Not",c,void 0)},905082:(c,p,v)=>{d.eb("Clip",c,{min:p,max:v})},905151:c=>{d.eb("Clip",c,void 0)},905203:(c,p)=>{d.eb("Elu",c,{alpha:p})},905261:c=>{d.eb("Relu",c,void 0)},905313:(c,p)=>{d.eb("LeakyRelu",c,{alpha:p})},905377:(c,p)=>{d.eb("ThresholdedRelu",c,{alpha:p})},905447:(c,p)=>{d.eb("Cast",c,{to:p})},905505:c=>{d.eb("Add",c,void 0)},905556:c=>{d.eb("Sub",c,void 0)},905607:c=>{d.eb("Mul",c,void 0)},905658:c=>{d.eb("Div",c,void 0)},905709:c=>{d.eb("Pow",c,void 0)},905760:c=>{d.eb("Equal",c,void 0)},905813:c=>{d.eb("Greater",c,void 0)},905868:c=>{d.eb("GreaterOrEqual",c,void 0)},905930:c=>{d.eb("Less",c,void 0)},905982:c=>{d.eb("LessOrEqual",c,void 0)},906041:(c,p,v,T,C)=>{d.eb("ReduceMean",c,{keepDims:!!p,noopWithEmptyAxes:!!v,axes:T?Array.from(s().subarray(T>>>0,C>>>0)):[]})},906200:(c,p,v,T,C)=>{d.eb("ReduceMax",c,{keepDims:!!p,noopWithEmptyAxes:!!v,axes:T?Array.from(s().subarray(T>>>0,C>>>0)):[]})},906358:(c,p,v,T,C)=>{d.eb("ReduceMin",c,{keepDims:!!p,noopWithEmptyAxes:!!v,axes:T?Array.from(s().subarray(T>>>0,C>>>0)):[]})},906516:(c,p,v,T,C)=>{d.eb("ReduceProd",c,{keepDims:!!p,noopWithEmptyAxes:!!v,axes:T?Array.from(s().subarray(T>>>0,C>>>0)):[]})},906675:(c,p,v,T,C)=>{d.eb("ReduceSum",c,{keepDims:!!p,noopWithEmptyAxes:!!v,axes:T?Array.from(s().subarray(T>>>0,C>>>0)):[]})},906833:(c,p,v,T,C)=>{d.eb("ReduceL1",c,{keepDims:!!p,noopWithEmptyAxes:!!v,axes:T?Array.from(s().subarray(T>>>0,C>>>0)):[]})},906990:(c,p,v,T,C)=>{d.eb("ReduceL2",c,{keepDims:!!p,noopWithEmptyAxes:!!v,axes:T?Array.from(s().subarray(T>>>0,C>>>0)):[]})},907147:(c,p,v,T,C)=>{d.eb("ReduceLogSum",c,{keepDims:!!p,noopWithEmptyAxes:!!v,axes:T?Array.from(s().subarray(T>>>0,C>>>0)):[]})},907308:(c,p,v,T,C)=>{d.eb("ReduceSumSquare",c,{keepDims:!!p,noopWithEmptyAxes:!!v,axes:T?Array.from(s().subarray(T>>>0,C>>>0)):[]})},907472:(c,p,v,T,C)=>{d.eb("ReduceLogSumExp",c,{keepDims:!!p,noopWithEmptyAxes:!!v,axes:T?Array.from(s().subarray(T>>>0,C>>>0)):[]})},907636:c=>{d.eb("Where",c,void 0)},907689:(c,p,v)=>{d.eb("Transpose",c,{perm:p?Array.from(s().subarray(p>>>0,v>>>0)):[]})},907797:(c,p,v,T,C,D,W,Y,ne,re,me,Oe,Ne,M,we)=>{d.eb("ConvTranspose",c,{format:ne?"NHWC":"NCHW",autoPad:p,dilations:[v],group:T,kernel_shape:[C],pads:[D,W],strides:[Y],wIsConst:()=>!!n()[re>>>0],outputPadding:me?Array.from(s().subarray(me>>>0,Oe>>>0)):[],outputShape:Ne?Array.from(s().subarray(Ne>>>0,M>>>0)):[],activation:Ze(we)})},908199:(c,p,v,T,C,D,W,Y,ne,re,me,Oe,Ne,M)=>{d.eb("ConvTranspose",c,{format:Y?"NHWC":"NCHW",autoPad:p,dilations:Array.from(s().subarray(v>>>0,(v>>>0)+2>>>0)),group:T,kernelShape:Array.from(s().subarray(C>>>0,(C>>>0)+2>>>0)),pads:Array.from(s().subarray(D>>>0,(D>>>0)+4>>>0)),strides:Array.from(s().subarray(W>>>0,(W>>>0)+2>>>0)),wIsConst:()=>!!n()[ne>>>0],outputPadding:re?Array.from(s().subarray(re>>>0,me>>>0)):[],outputShape:Oe?Array.from(s().subarray(Oe>>>0,Ne>>>0)):[],activation:Ze(M)})},908764:(c,p,v,T,C,D,W,Y,ne,re,me,Oe,Ne,M,we)=>{d.eb("ConvTranspose",c,{format:ne?"NHWC":"NCHW",autoPad:p,dilations:[v],group:T,kernel_shape:[C],pads:[D,W],strides:[Y],wIsConst:()=>!!n()[re>>>0],outputPadding:me?Array.from(s().subarray(me>>>0,Oe>>>0)):[],outputShape:Ne?Array.from(s().subarray(Ne>>>0,M>>>0)):[],activation:Ze(we)})},909166:(c,p,v,T,C,D,W,Y,ne,re,me,Oe,Ne,M)=>{d.eb("ConvTranspose",c,{format:Y?"NHWC":"NCHW",autoPad:p,dilations:Array.from(s().subarray(v>>>0,(v>>>0)+2>>>0)),group:T,kernelShape:Array.from(s().subarray(C>>>0,(C>>>0)+2>>>0)),pads:Array.from(s().subarray(D>>>0,(D>>>0)+4>>>0)),strides:Array.from(s().subarray(W>>>0,(W>>>0)+2>>>0)),wIsConst:()=>!!n()[ne>>>0],outputPadding:re?Array.from(s().subarray(re>>>0,me>>>0)):[],outputShape:Oe?Array.from(s().subarray(Oe>>>0,Ne>>>0)):[],activation:Ze(M)})},909731:(c,p)=>{d.eb("GlobalAveragePool",c,{format:p?"NHWC":"NCHW"})},909822:(c,p,v,T,C,D,W,Y,ne,re,me,Oe,Ne,M,we,qe)=>{d.eb("AveragePool",c,{format:qe?"NHWC":"NCHW",auto_pad:p,ceil_mode:v,count_include_pad:T,storage_order:C,dilations:[D,W],kernel_shape:[Y,ne],pads:[re,me,Oe,Ne],strides:[M,we]})},910106:(c,p)=>{d.eb("GlobalAveragePool",c,{format:p?"NHWC":"NCHW"})},910197:(c,p,v,T,C,D,W,Y,ne,re,me,Oe,Ne,M,we,qe)=>{d.eb("AveragePool",c,{format:qe?"NHWC":"NCHW",auto_pad:p,ceil_mode:v,count_include_pad:T,storage_order:C,dilations:[D,W],kernel_shape:[Y,ne],pads:[re,me,Oe,Ne],strides:[M,we]})},910481:(c,p)=>{d.eb("GlobalMaxPool",c,{format:p?"NHWC":"NCHW"})},910568:(c,p,v,T,C,D,W,Y,ne,re,me,Oe,Ne,M,we,qe)=>{d.eb("MaxPool",c,{format:qe?"NHWC":"NCHW",auto_pad:p,ceil_mode:v,count_include_pad:T,storage_order:C,dilations:[D,W],kernel_shape:[Y,ne],pads:[re,me,Oe,Ne],strides:[M,we]})},910848:(c,p)=>{d.eb("GlobalMaxPool",c,{format:p?"NHWC":"NCHW"})},910935:(c,p,v,T,C,D,W,Y,ne,re,me,Oe,Ne,M,we,qe)=>{d.eb("MaxPool",c,{format:qe?"NHWC":"NCHW",auto_pad:p,ceil_mode:v,count_include_pad:T,storage_order:C,dilations:[D,W],kernel_shape:[Y,ne],pads:[re,me,Oe,Ne],strides:[M,we]})},911215:(c,p,v,T,C)=>{d.eb("Gemm",c,{alpha:p,beta:v,transA:T,transB:C})},911319:c=>{d.eb("MatMul",c,void 0)},911373:(c,p,v,T)=>{d.eb("ArgMax",c,{keepDims:!!p,selectLastIndex:!!v,axis:T})},911481:(c,p,v,T)=>{d.eb("ArgMin",c,{keepDims:!!p,selectLastIndex:!!v,axis:T})},911589:(c,p)=>{d.eb("Softmax",c,{axis:p})},911652:(c,p)=>{d.eb("Concat",c,{axis:p})},911712:(c,p,v,T,C)=>{d.eb("Split",c,{axis:p,numOutputs:v,splitSizes:T?Array.from(s().subarray(T>>>0,C>>>0)):[]})},911852:c=>{d.eb("Expand",c,void 0)},911906:(c,p)=>{d.eb("Gather",c,{axis:Number(p)})},911977:(c,p)=>{d.eb("GatherElements",c,{axis:Number(p)})},912056:(c,p,v,T,C,D,W,Y,ne,re,me)=>{d.eb("Resize",c,{antialias:p,axes:v?Array.from(s().subarray(v>>>0,T>>>0)):[],coordinateTransformMode:Ze(C),cubicCoeffA:D,excludeOutside:W,extrapolationValue:Y,keepAspectRatioPolicy:Ze(ne),mode:Ze(re),nearestMode:Ze(me)})},912402:(c,p,v,T,C,D,W)=>{d.eb("Slice",c,{starts:p?Array.from(s().subarray(p>>>0,v>>>0)):[],ends:T?Array.from(s().subarray(T>>>0,C>>>0)):[],axes:D?Array.from(s().subarray(D>>>0,W>>>0)):[]})},912618:c=>{d.eb("Tile",c,void 0)},912670:(c,p,v)=>{d.eb("LayerNormalization",c,{axis:Number(p),epsilon:Number(v)})},912777:(c,p,v)=>{d.eb("InstanceNormalization",c,{epsilon:p,format:v?"NHWC":"NCHW"})},912891:(c,p,v)=>{d.eb("InstanceNormalization",c,{epsilon:p,format:v?"NHWC":"NCHW"})},913005:c=>{d.eb("Range",c,void 0)},913058:(c,p)=>{d.eb("Einsum",c,{equation:Ze(p)})},913139:(c,p,v,T,C)=>{d.eb("Pad",c,{mode:p,value:v,pads:T?Array.from(s().subarray(T>>>0,C>>>0)):[]})},913266:(c,p,v,T,C,D)=>{d.eb("BatchNormalization",c,{epsilon:p,momentum:v,spatial:!!C,trainingMode:!!T,format:D?"NHWC":"NCHW"})},913435:(c,p,v,T,C,D)=>{d.eb("BatchNormalization",c,{epsilon:p,momentum:v,spatial:!!C,trainingMode:!!T,format:D?"NHWC":"NCHW"})},913604:(c,p,v)=>{d.eb("CumSum",c,{exclusive:Number(p),reverse:Number(v)})},913701:(c,p,v,T,C,D,W,Y,ne)=>{d.eb("Attention",c,{numHeads:p,isUnidirectional:v,maskFilterValue:T,scale:C,doRotary:D,qkvHiddenSizes:W?Array.from(s().subarray(Number(Y)>>>0,Number(Y)+W>>>0)):[],pastPresentShareBuffer:!!ne})},913973:c=>{d.eb("Gelu",c,void 0)},914025:(c,p,v,T,C,D)=>{d.eb("MultiHeadAttention",c,{numHeads:p,isUnidirectional:v,maskFilterValue:T,scale:C,doRotary:D})},914184:c=>{d.eb("BiasAdd",c,void 0)},914239:c=>{d.eb("BiasSplitGelu",c,void 0)},914300:(c,p)=>{d.eb("SkipLayerNormalization",c,{epsilon:p})},914381:(c,p,v,T,C,D,W,Y,ne,re,me,Oe,Ne)=>{d.eb("Conv",c,{format:ne?"NHWC":"NCHW",auto_pad:p,dilations:[v],group:T,kernel_shape:[C],pads:D?Array.from(s().subarray(D>>>0,W>>>0)):[],strides:[Y],w_is_const:()=>!!n()[re>>>0],activation:Ze(me),activation_params:Oe?Array.from(u().subarray(Oe>>>0,Ne>>>0)):[]})},914751:(c,p,v,T,C,D,W,Y,ne,re,me,Oe,Ne,M,we,qe)=>{d.eb("Conv",c,{format:Oe?"NHWC":"NCHW",auto_pad:p,dilations:[v,T],group:C,kernel_shape:[D,W],pads:Y?Array.from(s().subarray(Y>>>0,ne>>>0)):[],strides:[re,me],w_is_const:()=>!!n()[Ne>>>0],activation:Ze(M),activation_params:we?Array.from(u().subarray(we>>>0,qe>>>0)):[]})},915142:c=>{d.cc(c)},915176:(c,p)=>d.dc(c,p,d.Eb.fc,d.Eb.errors)};function co(c){this.name="ExitStatus",this.message=`Program terminated with exit(${c})`,this.status=c}var tr=c=>{c.terminate(),c.onmessage=()=>{}},ri=c=>{_e.yb.length==0&&(go(),_e.Pb(_e.yb[0]));var p=_e.yb.pop();if(!p)return 6;_e.zb.push(p),_e.pb[c.xb]=p,p.xb=c.xb;var v={cmd:"run",start_routine:c.hc,arg:c.Vb,pthread_ptr:c.xb};return $&&p.unref(),p.postMessage(v,c.nc),0},At=0,fo=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,po=(c,p,v)=>{p>>>=0;var T=p+v;for(v=p;c[v]&&!(v>=T);)++v;if(16<v-p&&c.buffer&&fo)return fo.decode(c.buffer instanceof SharedArrayBuffer?c.slice(p,v):c.subarray(p,v));for(T="";p<v;){var C=c[p++];if(C&128){var D=c[p++]&63;if((C&224)==192)T+=String.fromCharCode((C&31)<<6|D);else{var W=c[p++]&63;C=(C&240)==224?(C&15)<<12|D<<6|W:(C&7)<<18|D<<12|W<<6|c[p++]&63,65536>C?T+=String.fromCharCode(C):(C-=65536,T+=String.fromCharCode(55296|C>>10,56320|C&1023))}}else T+=String.fromCharCode(C)}return T},Ze=(c,p)=>(c>>>=0)?po(t(),c,p):"",ho=c=>{var p=cs();return c=c(),_i(p),c};function Re(c,p){var v=arguments.length-2,T=arguments;return ho(()=>{for(var C=2*v,D=fs(8*C),W=D>>>3,Y=0;Y<v;Y++){var ne=T[2+Y];typeof ne=="bigint"?(Ie[W+2*Y]=1n,Ie[W+2*Y+1]=ne):(Ie[W+2*Y]=0n,l()[W+2*Y+1>>>0]=ne)}return Ol(c,C,D,p)})}function Wt(c){if(O)return Re(0,1,c);Ge=c,0<At||(_e.ic(),d.onExit?.(c),Ae=!0),x(c,new co(c))}var Bn=c=>{if(Ge=c,O)throw ni(c),"unwind";Wt(c)},mo=c=>{c instanceof co||c=="unwind"||x(1,c)};function ts(){for(var c=d.numThreads;c--;)go();Lr.unshift(()=>{qr++,rs(()=>so())})}function go(){var c=F("ort-wasm-simd-threaded.worker.js");c=new Worker(c),_e.yb.push(c)}function rs(c){O?c():Promise.all(_e.yb.map(_e.Pb)).then(c)}var _e={yb:[],zb:[],Ub:[],pb:{},Ib(){O?(_e.receiveObjectTransfer=_e.ec,_e.threadInitTLS=_e.Tb,_e.setExitStatus=_e.Sb):ts()},Sb:c=>Ge=c,sc:["$terminateWorker"],ic:()=>{for(var c of _e.zb)tr(c);for(c of _e.yb)tr(c);_e.yb=[],_e.zb=[],_e.pb=[]},Rb:c=>{var p=c.xb;delete _e.pb[p],_e.yb.push(c),_e.zb.splice(_e.zb.indexOf(c),1),c.xb=0,ls(p)},ec(){},Tb(){_e.Ub.forEach(c=>c())},Pb:c=>new Promise(p=>{c.onmessage=D=>{D=D.data;var W=D.cmd;if(D.targetThread&&D.targetThread!=$i()){var Y=_e.pb[D.targetThread];Y?Y.postMessage(D,D.transferList):ue(`Internal error! Worker sent a message "${W}" to target pthread ${D.targetThread}, but that thread no longer exists!`)}else W==="checkMailbox"?pn():W==="spawnThread"?ri(D):W==="cleanupThread"?_e.Rb(_e.pb[D.thread]):W==="killThread"?(D=D.thread,W=_e.pb[D],delete _e.pb[D],tr(W),ls(D),_e.zb.splice(_e.zb.indexOf(W),1),W.xb=0):W==="cancelThread"?_e.pb[D.thread].postMessage({cmd:"cancel"}):W==="loaded"?(c.loaded=!0,$&&!c.xb&&c.unref(),p(c)):W==="alert"?alert(`Thread ${D.threadId}: ${D.text}`):D.target==="setimmediate"?c.postMessage(D):W==="callHandler"?d[D.handler](...D.args):W&&ue(`worker sent an unknown command ${W}`)},c.onerror=D=>{throw ue(`worker sent an error! ${D.filename}:${D.lineno}: ${D.message}`),D},$&&(c.on("message",D=>c.onmessage({data:D})),c.on("error",D=>c.onerror(D)));var v=[],T=["onExit"],C;for(C of T)d.hasOwnProperty(C)&&v.push(C);c.postMessage({cmd:"load",handlers:v,urlOrBlob:d.mainScriptUrlOrBlob||r,wasmMemory:Be,wasmModule:yt})})};d.PThread=_e;var Rn=c=>{for(;0<c.length;)c.shift()(d)};d.establishStackSpace=()=>{var c=$i(),p=a()[c+52>>>2>>>0];c=a()[c+56>>>2>>>0],Cl(p,p-c),_i(p)};function ni(c){if(O)return Re(1,0,c);Bn(c)}d.invokeEntryPoint=(c,p)=>{c=Pl.apply(null,[c,p]),0<At?_e.Sb(c):ds(c)};function ns(c){this.Db=c-24,this.pc=function(p){a()[this.Db+4>>>2>>>0]=p},this.Mb=function(p){a()[this.Db+8>>>2>>>0]=p},this.Ib=function(p,v){this.Kb(),this.pc(p),this.Mb(v)},this.Kb=function(){a()[this.Db+16>>>2>>>0]=0}}var oi=0,bo=0;function yo(c,p,v,T){return O?Re(2,1,c,p,v,T):dn(c,p,v,T)}function dn(c,p,v,T){if(c>>>=0,p>>>=0,v>>>=0,T>>>=0,typeof SharedArrayBuffer>"u")return ue("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var C=[];return O&&C.length===0?yo(c,p,v,T):(c={hc:v,xb:c,Vb:T,nc:C},O?(c.qc="spawnThread",postMessage(c,C),0):ri(c))}function ii(c,p,v){return O?Re(3,1,c,p,v):0}function fr(c,p){if(O)return Re(4,1,c,p)}var Bt=c=>{for(var p=0,v=0;v<c.length;++v){var T=c.charCodeAt(v);127>=T?p++:2047>=T?p+=2:55296<=T&&57343>=T?(p+=4,++v):p+=3}return p},vo=(c,p,v,T)=>{if(v>>>=0,!(0<T))return 0;var C=v;T=v+T-1;for(var D=0;D<c.length;++D){var W=c.charCodeAt(D);if(55296<=W&&57343>=W){var Y=c.charCodeAt(++D);W=65536+((W&1023)<<10)|Y&1023}if(127>=W){if(v>=T)break;p[v++>>>0]=W}else{if(2047>=W){if(v+1>=T)break;p[v++>>>0]=192|W>>6}else{if(65535>=W){if(v+2>=T)break;p[v++>>>0]=224|W>>12}else{if(v+3>=T)break;p[v++>>>0]=240|W>>18,p[v++>>>0]=128|W>>12&63}p[v++>>>0]=128|W>>6&63}p[v++>>>0]=128|W&63}}return p[v>>>0]=0,v-C},Kr=(c,p,v)=>vo(c,t(),p,v);function wo(c,p){if(O)return Re(5,1,c,p)}function xo(c,p,v){if(O)return Re(6,1,c,p,v)}function ai(c,p,v){return O?Re(7,1,c,p,v):0}function zn(c,p){if(O)return Re(8,1,c,p)}function si(c,p,v){if(O)return Re(9,1,c,p,v)}function ui(c,p,v,T){if(O)return Re(10,1,c,p,v,T)}function li(c,p,v,T){if(O)return Re(11,1,c,p,v,T)}function di(c,p,v,T){if(O)return Re(12,1,c,p,v,T)}function To(c){if(O)return Re(13,1,c)}function cn(c,p){if(O)return Re(14,1,c,p)}function ci(c,p,v){if(O)return Re(15,1,c,p,v)}var Ln=c=>{if(c===null)return"null";var p=typeof c;return p==="object"||p==="array"||p==="function"?c.toString():""+c},$o,Zt=c=>{for(var p="";t()[c>>>0];)p+=$o[t()[c++>>>0]];return p},_o={},Mn={},os={},Rt;function fi(c,p,v={}){var T=p.name;if(!c)throw new Rt(`type "${T}" must have a positive integer typeid pointer`);if(Mn.hasOwnProperty(c)){if(v.Yb)return;throw new Rt(`Cannot register type '${T}' twice`)}Mn[c]=p,delete os[c],_o.hasOwnProperty(c)&&(p=_o[c],delete _o[c],p.forEach(C=>C()))}function rr(c,p,v={}){if(!("argPackAdvance"in p))throw new TypeError("registerType registeredInstance requires argPackAdvance");fi(c,p,v)}var So=(c,p,v)=>{switch(p){case 1:return v?T=>n()[T>>>0>>>0]:T=>t()[T>>>0>>>0];case 2:return v?T=>o()[T>>>1>>>0]:T=>i()[T>>>1>>>0];case 4:return v?T=>s()[T>>>2>>>0]:T=>a()[T>>>2>>>0];case 8:return v?T=>Ie[T>>>3]:T=>Dt[T>>>3];default:throw new TypeError(`invalid integer width (${p}): ${c}`)}};function Nn(){this.wb=[void 0],this.Nb=[]}var zt=new Nn;function fn(c){c>>>=0,c>=zt.Db&&--zt.get(c).Qb===0&&zt.Mb(c)}var Ot=c=>{if(!c)throw new Rt("Cannot use deleted val. handle = "+c);return zt.get(c).value},Lt=c=>{switch(c){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return zt.Kb({Qb:1,value:c})}};function pi(c){return this.fromWireType(s()[c>>>2>>>0])}var hi=(c,p)=>{switch(p){case 4:return function(v){return this.fromWireType(u()[v>>>2>>>0])};case 8:return function(v){return this.fromWireType(l()[v>>>3>>>0])};default:throw new TypeError(`invalid float width (${p}): ${c}`)}};function mi(c){return this.fromWireType(a()[c>>>2>>>0])}var gi=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,bi=(c,p)=>{for(var v=c>>1,T=v+p/2;!(v>=T)&&i()[v>>>0];)++v;if(v<<=1,32<v-c&&gi)return gi.decode(t().slice(c,v));for(v="",T=0;!(T>=p/2);++T){var C=o()[c+2*T>>>1>>>0];if(C==0)break;v+=String.fromCharCode(C)}return v},yi=(c,p,v)=>{if(v??=2147483647,2>v)return 0;v-=2;var T=p;v=v<2*c.length?v/2:c.length;for(var C=0;C<v;++C){var D=c.charCodeAt(C);o()[p>>>1>>>0]=D,p+=2}return o()[p>>>1>>>0]=0,p-T},Fn=c=>2*c.length,is=(c,p)=>{for(var v=0,T="";!(v>=p/4);){var C=s()[c+4*v>>>2>>>0];if(C==0)break;++v,65536<=C?(C-=65536,T+=String.fromCharCode(55296|C>>10,56320|C&1023)):T+=String.fromCharCode(C)}return T},ve=(c,p,v)=>{if(p>>>=0,v??=2147483647,4>v)return 0;var T=p;v=T+v-4;for(var C=0;C<c.length;++C){var D=c.charCodeAt(C);if(55296<=D&&57343>=D){var W=c.charCodeAt(++C);D=65536+((D&1023)<<10)|W&1023}if(s()[p>>>2>>>0]=D,p+=4,p+4>v)break}return s()[p>>>2>>>0]=0,p-T},vi=c=>{for(var p=0,v=0;v<c.length;++v){var T=c.charCodeAt(v);55296<=T&&57343>=T&&++v,p+=4}return p},Yr=()=>{if(!(0<At))try{O?ds(Ge):Bn(Ge)}catch(c){mo(c)}};function Ht(c){c>>>=0,typeof Atomics.oc=="function"&&(Atomics.oc(s(),c>>>2,c).value.then(pn),c+=128,Atomics.store(s(),c>>>2,1))}d.__emscripten_thread_mailbox_await=Ht;var pn=()=>{var c=$i();if(c&&(Ht(c),!Ae))try{El(),Yr()}catch(p){mo(p)}};d.checkMailbox=pn;var Vn=[],Un=(c,p)=>{var v=Mn[c];if(v===void 0)throw c=Il(c),v=Zt(c),Tr(c),new Rt(p+" has unknown type "+v);return v},Io=(c,p,v)=>{var T=[];return c=c.toWireType(T,v),T.length&&(a()[p>>>2>>>0]=Lt(T)),c},hn=c=>{try{c()}catch(p){jr(p)}};function wi(){var c=de,p={};for(let[v,T]of Object.entries(c))p[v]=typeof T=="function"?function(){Fr.push(v);try{return T.apply(null,arguments)}finally{Ae||(Fr.pop(),Jt&&pr===1&&Fr.length===0&&(pr=0,At+=1,hn(Dl),typeof Fibers<"u"&&Fibers.uc()))}}:T;return p}var pr=0,Jt=null,xi=0,Fr=[],Ao={},f={},g=0,w=null,_=[];function k(){return new Promise((c,p)=>{w={resolve:c,reject:p}})}function V(){var c=Oo(65548),p=c+12;a()[c>>>2>>>0]=p,a()[c+4>>>2>>>0]=p+65536,p=Fr[0];var v=Ao[p];return v===void 0&&(v=g++,Ao[p]=v,f[v]=p),p=v,s()[c+8>>>2>>>0]=p,c}function K(){var c=s()[Jt+8>>>2>>>0];return c=de[f[c]],--At,c()}function oe(c){if(!Ae){if(pr===0){var p=!1,v=!1;c((T=0)=>{if(!Ae&&(xi=T,p=!0,v)){pr=2,hn(()=>Bl(Jt)),typeof Browser<"u"&&Browser.Jb.Xb&&Browser.Jb.resume(),T=!1;try{var C=K()}catch(Y){C=Y,T=!0}var D=!1;if(!Jt){var W=w;W&&(w=null,(T?W.reject:W.resolve)(C),D=!0)}if(T&&!D)throw C}}),v=!0,p||(pr=1,Jt=V(),typeof Browser<"u"&&Browser.Jb.Xb&&Browser.Jb.pause(),hn(()=>kl(Jt)))}else pr===2?(pr=0,hn(Rl),Tr(Jt),Jt=null,_.forEach(T=>{if(!Ae)try{T(),Yr()}catch(C){mo(C)}})):jr(`invalid state: ${pr}`);return xi}}function te(c){return oe(p=>{c().then(p)})}var Q=[],pe={},Se=c=>{var p=pe[c];return p===void 0?Zt(c):p},ze=()=>typeof globalThis=="object"?globalThis:Function("return this")(),L=c=>{var p=Q.length;return Q.push(c),p},ye=(c,p)=>{for(var v=Array(c),T=0;T<c;++T)v[T]=Un(a()[p+4*T>>>2>>>0],"parameter "+T);return v},Ve=(c,p)=>Object.defineProperty(p,"name",{value:c});function Vr(c){var p=Function;if(!(p instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof p} which is not a function`);var v=Ve(p.name||"unknownFunctionName",function(){});return v.prototype=p.prototype,v=new v,c=p.apply(v,c),c instanceof Object?c:v}var Ur=c=>c%4===0&&(c%100!==0||c%400===0),ul=[0,31,60,91,121,152,182,213,244,274,305,335],ll=[0,31,59,90,120,151,181,212,243,273,304,334];function dl(c,p,v,T,C,D,W){return O?Re(16,1,c,p,v,T,C,D,W):-52}function cl(c,p,v,T,C,D){if(O)return Re(17,1,c,p,v,T,C,D)}var fl=c=>{var p=Bt(c)+1,v=Oo(p);return v&&Kr(c,v,p),v},as=[],pl=(c,p)=>{as.length=0;for(var v;v=t()[c++>>>0];){var T=v!=105;T&=v!=112,p+=T&&p%8?4:0,as.push(v==112?a()[p>>>2>>>0]:v==106?Ie[p>>>3]:v==105?s()[p>>>2>>>0]:l()[p>>>3>>>0]),p+=T?8:4}return as},ss={},hl=()=>{if(!us){var c={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:y||"./this.program"},p;for(p in ss)ss[p]===void 0?delete c[p]:c[p]=ss[p];var v=[];for(p in c)v.push(`${p}=${c[p]}`);us=v}return us},us;function ml(c,p){if(O)return Re(18,1,c,p);c>>>=0,p>>>=0;var v=0;return hl().forEach((T,C)=>{var D=p+v;for(C=a()[c+4*C>>>2>>>0]=D,D=0;D<T.length;++D)n()[C++>>>0>>>0]=T.charCodeAt(D);n()[C>>>0>>>0]=0,v+=T.length+1}),0}function gl(c,p){if(O)return Re(19,1,c,p);c>>>=0,p>>>=0;var v=hl();a()[c>>>2>>>0]=v.length;var T=0;return v.forEach(C=>T+=C.length+1),a()[p>>>2>>>0]=T,0}function bl(c){return O?Re(20,1,c):52}function yl(c,p,v,T){return O?Re(21,1,c,p,v,T):52}function vl(c,p,v,T){return O?Re(22,1,c,p,v,T):70}var T0=[null,[],[]];function wl(c,p,v,T){if(O)return Re(23,1,c,p,v,T);p>>>=0,v>>>=0,T>>>=0;for(var C=0,D=0;D<v;D++){var W=a()[p>>>2>>>0],Y=a()[p+4>>>2>>>0];p+=8;for(var ne=0;ne<Y;ne++){var re=t()[W+ne>>>0],me=T0[c];re===0||re===10?((c===1?Ee:ue)(po(me,0)),me.length=0):me.push(re)}C+=Y}return a()[T>>>2>>>0]=C,0}var xl=[31,29,31,30,31,30,31,31,30,31,30,31],Tl=[31,28,31,30,31,30,31,31,30,31,30,31];function $0(c){var p=Array(Bt(c)+1);return vo(c,p,0,p.length),p}var _0=(c,p)=>{n().set(c,p>>>0)};function $l(c,p,v,T){function C(M,we,qe){for(M=typeof M=="number"?M.toString():M||"";M.length<we;)M=qe[0]+M;return M}function D(M,we){return C(M,we,"0")}function W(M,we){function qe(Ll){return 0>Ll?-1:0<Ll?1:0}var mn;return(mn=qe(M.getFullYear()-we.getFullYear()))===0&&(mn=qe(M.getMonth()-we.getMonth()))===0&&(mn=qe(M.getDate()-we.getDate())),mn}function Y(M){switch(M.getDay()){case 0:return new Date(M.getFullYear()-1,11,29);case 1:return M;case 2:return new Date(M.getFullYear(),0,3);case 3:return new Date(M.getFullYear(),0,2);case 4:return new Date(M.getFullYear(),0,1);case 5:return new Date(M.getFullYear()-1,11,31);case 6:return new Date(M.getFullYear()-1,11,30)}}function ne(M){var we=M.Ab;for(M=new Date(new Date(M.Bb+1900,0,1).getTime());0<we;){var qe=M.getMonth(),mn=(Ur(M.getFullYear())?xl:Tl)[qe];if(we>mn-M.getDate())we-=mn-M.getDate()+1,M.setDate(1),11>qe?M.setMonth(qe+1):(M.setMonth(0),M.setFullYear(M.getFullYear()+1));else{M.setDate(M.getDate()+we);break}}return qe=new Date(M.getFullYear()+1,0,4),we=Y(new Date(M.getFullYear(),0,4)),qe=Y(qe),0>=W(we,M)?0>=W(qe,M)?M.getFullYear()+1:M.getFullYear():M.getFullYear()-1}c>>>=0,p>>>=0,v>>>=0,T>>>=0;var re=a()[T+40>>>2>>>0];T={lc:s()[T>>>2>>>0],kc:s()[T+4>>>2>>>0],Gb:s()[T+8>>>2>>>0],Lb:s()[T+12>>>2>>>0],Hb:s()[T+16>>>2>>>0],Bb:s()[T+20>>>2>>>0],vb:s()[T+24>>>2>>>0],Ab:s()[T+28>>>2>>>0],tc:s()[T+32>>>2>>>0],jc:s()[T+36>>>2>>>0],mc:re?Ze(re):""},v=Ze(v),re={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var me in re)v=v.replace(new RegExp(me,"g"),re[me]);var Oe="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Ne="January February March April May June July August September October November December".split(" ");re={"%a":M=>Oe[M.vb].substring(0,3),"%A":M=>Oe[M.vb],"%b":M=>Ne[M.Hb].substring(0,3),"%B":M=>Ne[M.Hb],"%C":M=>D((M.Bb+1900)/100|0,2),"%d":M=>D(M.Lb,2),"%e":M=>C(M.Lb,2," "),"%g":M=>ne(M).toString().substring(2),"%G":M=>ne(M),"%H":M=>D(M.Gb,2),"%I":M=>(M=M.Gb,M==0?M=12:12<M&&(M-=12),D(M,2)),"%j":M=>{for(var we=0,qe=0;qe<=M.Hb-1;we+=(Ur(M.Bb+1900)?xl:Tl)[qe++]);return D(M.Lb+we,3)},"%m":M=>D(M.Hb+1,2),"%M":M=>D(M.kc,2),"%n":()=>`
`,"%p":M=>0<=M.Gb&&12>M.Gb?"AM":"PM","%S":M=>D(M.lc,2),"%t":()=>"	","%u":M=>M.vb||7,"%U":M=>D(Math.floor((M.Ab+7-M.vb)/7),2),"%V":M=>{var we=Math.floor((M.Ab+7-(M.vb+6)%7)/7);if(2>=(M.vb+371-M.Ab-2)%7&&we++,we)we==53&&(qe=(M.vb+371-M.Ab)%7,qe==4||qe==3&&Ur(M.Bb)||(we=1));else{we=52;var qe=(M.vb+7-M.Ab-1)%7;(qe==4||qe==5&&Ur(M.Bb%400-1))&&we++}return D(we,2)},"%w":M=>M.vb,"%W":M=>D(Math.floor((M.Ab+7-(M.vb+6)%7)/7),2),"%y":M=>(M.Bb+1900).toString().substring(2),"%Y":M=>M.Bb+1900,"%z":M=>{M=M.jc;var we=0<=M;return M=Math.abs(M)/60,(we?"+":"-")+("0000"+(M/60*100+M%60)).slice(-4)},"%Z":M=>M.mc,"%%":()=>"%"},v=v.replace(/%%/g,"\0\0");for(me in re)v.includes(me)&&(v=v.replace(new RegExp(me,"g"),re[me](T)));return v=v.replace(/\0\0/g,"%"),me=$0(v),me.length>p?0:(_0(me,c),me.length-1)}_e.Ib();for(var _l=Array(256),Ti=0;256>Ti;++Ti)_l[Ti]=String.fromCharCode(Ti);$o=_l,Rt=d.BindingError=class extends Error{constructor(c){super(c),this.name="BindingError"}},d.InternalError=class extends Error{constructor(c){super(c),this.name="InternalError"}},Object.assign(Nn.prototype,{get(c){return this.wb[c]},has(c){return this.wb[c]!==void 0},Kb(c){var p=this.Nb.pop()||this.wb.length;return this.wb[p]=c,p},Mb(c){this.wb[c]=void 0,this.Nb.push(c)}}),zt.wb.push({value:void 0},{value:null},{value:!0},{value:!1}),zt.Db=zt.wb.length,d.count_emval_handles=()=>{for(var c=0,p=zt.Db;p<zt.wb.length;++p)zt.wb[p]!==void 0&&++c;return c};var S0=[Wt,ni,yo,ii,fr,wo,xo,ai,zn,si,ui,li,di,To,cn,ci,dl,cl,ml,gl,bl,yl,vl,wl],I0={ua:function(c,p,v){return te(async()=>{await d.ac(c,p,v)})},b:function(c,p,v){throw c>>>=0,new ns(c).Ib(p>>>0,v>>>0),oi=c,bo++,oi},ga:function(c){Al(c>>>0,!I,1,!A,131072,!1),_e.Tb()},F:function(c){c>>>=0,O?postMessage({cmd:"cleanupThread",thread:c}):_e.Rb(_e.pb[c])},Y:dn,z:ii,ma:fr,U:wo,W:xo,N:ai,ka:zn,da:si,ja:ui,H:li,V:di,S:To,la:cn,T:ci,K:function(c,p,v,T,C){c>>>=0,p>>>=0,v>>>=0,p=Zt(p);var D=p.indexOf("u")!=-1;D&&(C=(1n<<64n)-1n),rr(c,{name:p,fromWireType:W=>W,toWireType:function(W,Y){if(typeof Y!="bigint"&&typeof Y!="number")throw new TypeError(`Cannot convert "${Ln(Y)}" to ${this.name}`);if(Y<T||Y>C)throw new TypeError(`Passing a number "${Ln(Y)}" from JS side to C/C++ side to an argument of type "${p}", which is outside the valid range [${T}, ${C}]!`);return Y},argPackAdvance:8,readValueFromPointer:So(p,v,!D),Cb:null})},sa:function(c,p,v,T){c>>>=0,p=Zt(p>>>0),rr(c,{name:p,fromWireType:function(C){return!!C},toWireType:function(C,D){return D?v:T},argPackAdvance:8,readValueFromPointer:function(C){return this.fromWireType(t()[C>>>0])},Cb:null})},ra:function(c,p){c>>>=0,p=Zt(p>>>0),rr(c,{name:p,fromWireType:v=>{var T=Ot(v);return fn(v),T},toWireType:(v,T)=>Lt(T),argPackAdvance:8,readValueFromPointer:pi,Cb:null})},J:function(c,p,v){c>>>=0,v>>>=0,p=Zt(p>>>0),rr(c,{name:p,fromWireType:T=>T,toWireType:(T,C)=>C,argPackAdvance:8,readValueFromPointer:hi(p,v),Cb:null})},v:function(c,p,v,T,C){if(c>>>=0,v>>>=0,p=Zt(p>>>0),C===-1&&(C=4294967295),C=Y=>Y,T===0){var D=32-8*v;C=Y=>Y<<D>>>D}var W=p.includes("unsigned")?function(Y,ne){return ne>>>0}:function(Y,ne){return ne};rr(c,{name:p,fromWireType:C,toWireType:W,argPackAdvance:8,readValueFromPointer:So(p,v,T!==0),Cb:null})},o:function(c,p,v){function T(D){var W=a()[D>>>2>>>0];return D=a()[D+4>>>2>>>0],new C(n().buffer,D,W)}c>>>=0;var C=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][p];v=Zt(v>>>0),rr(c,{name:v,fromWireType:T,argPackAdvance:8,readValueFromPointer:T},{Yb:!0})},L:function(c,p){c>>>=0,p=Zt(p>>>0);var v=p==="std::string";rr(c,{name:p,fromWireType:function(T){var C=a()[T>>>2>>>0],D=T+4;if(v)for(var W=D,Y=0;Y<=C;++Y){var ne=D+Y;if(Y==C||t()[ne>>>0]==0){if(W=Ze(W,ne-W),re===void 0)var re=W;else re+=String.fromCharCode(0),re+=W;W=ne+1}}else{for(re=Array(C),Y=0;Y<C;++Y)re[Y]=String.fromCharCode(t()[D+Y>>>0]);re=re.join("")}return Tr(T),re},toWireType:function(T,C){C instanceof ArrayBuffer&&(C=new Uint8Array(C));var D=typeof C=="string";if(!(D||C instanceof Uint8Array||C instanceof Uint8ClampedArray||C instanceof Int8Array))throw new Rt("Cannot pass non-string to std::string");var W=v&&D?Bt(C):C.length,Y=Oo(4+W+1),ne=Y+4;if(a()[Y>>>2>>>0]=W,v&&D)Kr(C,ne,W+1);else if(D)for(D=0;D<W;++D){var re=C.charCodeAt(D);if(255<re)throw Tr(ne),new Rt("String has UTF-16 code units that do not fit in 8 bits");t()[ne+D>>>0]=re}else for(D=0;D<W;++D)t()[ne+D>>>0]=C[D];return T!==null&&T.push(Tr,Y),Y},argPackAdvance:8,readValueFromPointer:mi,Cb(T){Tr(T)}})},B:function(c,p,v){if(c>>>=0,p>>>=0,v>>>=0,v=Zt(v),p===2)var T=bi,C=yi,D=Fn,W=()=>i(),Y=1;else p===4&&(T=is,C=ve,D=vi,W=()=>a(),Y=2);rr(c,{name:v,fromWireType:ne=>{for(var re=a()[ne>>>2>>>0],me=W(),Oe,Ne=ne+4,M=0;M<=re;++M){var we=ne+4+M*p;(M==re||me[we>>>Y]==0)&&(Ne=T(Ne,we-Ne),Oe===void 0?Oe=Ne:(Oe+=String.fromCharCode(0),Oe+=Ne),Ne=we+p)}return Tr(ne),Oe},toWireType:(ne,re)=>{if(typeof re!="string")throw new Rt(`Cannot pass non-string to C++ string type ${v}`);var me=D(re),Oe=Oo(4+me+p);return a()[Oe>>>2]=me>>Y,C(re,Oe+4,me+p),ne!==null&&ne.push(Tr,Oe),Oe},argPackAdvance:8,readValueFromPointer:pi,Cb(ne){Tr(ne)}})},ta:function(c,p){c>>>=0,p=Zt(p>>>0),rr(c,{Zb:!0,name:p,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},qa:()=>1,Q:function(c,p){c>>>=0,c==p>>>0?setTimeout(()=>pn()):O?postMessage({targetThread:c,cmd:"checkMailbox"}):(c=_e.pb[c])&&c.postMessage({cmd:"checkMailbox"})},Z:function(c,p,v,T){p>>>=0,v/=2,Vn.length=v,T=T>>>0>>>3;for(var C=0;C<v;C++)Vn[C]=Ie[T+2*C]?Ie[T+2*C+1]:l()[T+2*C+1>>>0];return c=0>c?ln[-c-1]:S0[c],_e.Wb=p,p=c.apply(null,Vn),_e.Wb=0,p},fa:Ht,pa:function(c){$&&_e.pb[c>>>0].ref()},t:function(c,p,v){return p>>>=0,v>>>=0,c=Ot(c>>>0),p=Un(p,"emval::as"),Io(p,v,c)},y:function(c){return c>>>=0,te(()=>(c=Ot(c),c.then(Lt)))},p:function(c,p,v,T){return v>>>=0,T>>>=0,c=Q[c>>>0],p=Ot(p>>>0),c(null,p,v,T)},k:function(c,p,v,T,C){return v>>>=0,T>>>=0,C>>>=0,c=Q[c>>>0],p=Ot(p>>>0),v=Se(v),c(p,p[v],T,C)},c:fn,C:function(c,p){return p>>>=0,c=Ot(c>>>0),p=Ot(p),c==p},n:function(c){return c>>>=0,c===0?Lt(ze()):(c=Se(c),Lt(ze()[c]))},j:function(c,p,v){p=ye(c,p>>>0);var T=p.shift();c--;var C=`return function (obj, func, destructorsRef, args) {
`,D=0,W=[];v===0&&W.push("obj");for(var Y=["retType"],ne=[T],re=0;re<c;++re)W.push("arg"+re),Y.push("argType"+re),ne.push(p[re]),C+=`  var arg${re} = argType${re}.readValueFromPointer(args${D?"+"+D:""});
`,D+=p[re].argPackAdvance;for(C+=`  var rv = ${v===1?"new func":"func.call"}(${W.join(", ")});
`,re=0;re<c;++re)p[re].deleteObject&&(C+=`  argType${re}.deleteObject(arg${re});
`);return T.Zb||(Y.push("emval_returnValue"),ne.push(Io),C+=`  return emval_returnValue(retType, destructorsRef, rv);
`),Y.push(C+`};
`),c=Vr(Y).apply(null,ne),v=`methodCaller<(${p.map(me=>me.name).join(", ")}) => ${T.name}>`,L(Ve(v,c))},s:function(c,p){return p>>>=0,c=Ot(c>>>0),p=Ot(p),Lt(c[p])},d:function(c){c>>>=0,4<c&&(zt.get(c).Qb+=1)},w:function(){return Lt([])},m:function(c){c=Ot(c>>>0);for(var p=Array(c.length),v=0;v<c.length;v++)p[v]=c[v];return Lt(p)},f:function(c){return Lt(Se(c>>>0))},l:function(){return Lt({})},i:function(c){c>>>=0;for(var p=Ot(c);p.length;){var v=p.pop();p.pop()(v)}fn(c)},h:function(c,p,v){p>>>=0,v>>>=0,c=Ot(c>>>0),p=Ot(p),v=Ot(v),c[p]=v},e:function(c,p){return p>>>=0,c=Un(c>>>0,"_emval_take_value"),c=c.readValueFromPointer(p),Lt(c)},aa:function(c,p){c=-9007199254740992>c||9007199254740992<c?NaN:Number(c),p>>>=0,c=new Date(1e3*c),s()[p>>>2>>>0]=c.getUTCSeconds(),s()[p+4>>>2>>>0]=c.getUTCMinutes(),s()[p+8>>>2>>>0]=c.getUTCHours(),s()[p+12>>>2>>>0]=c.getUTCDate(),s()[p+16>>>2>>>0]=c.getUTCMonth(),s()[p+20>>>2>>>0]=c.getUTCFullYear()-1900,s()[p+24>>>2>>>0]=c.getUTCDay(),c=(c.getTime()-Date.UTC(c.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,s()[p+28>>>2>>>0]=c},ba:function(c,p){c=-9007199254740992>c||9007199254740992<c?NaN:Number(c),p>>>=0,c=new Date(1e3*c),s()[p>>>2>>>0]=c.getSeconds(),s()[p+4>>>2>>>0]=c.getMinutes(),s()[p+8>>>2>>>0]=c.getHours(),s()[p+12>>>2>>>0]=c.getDate(),s()[p+16>>>2>>>0]=c.getMonth(),s()[p+20>>>2>>>0]=c.getFullYear()-1900,s()[p+24>>>2>>>0]=c.getDay();var v=(Ur(c.getFullYear())?ul:ll)[c.getMonth()]+c.getDate()-1|0;s()[p+28>>>2>>>0]=v,s()[p+36>>>2>>>0]=-(60*c.getTimezoneOffset()),v=new Date(c.getFullYear(),6,1).getTimezoneOffset();var T=new Date(c.getFullYear(),0,1).getTimezoneOffset();c=(v!=T&&c.getTimezoneOffset()==Math.min(T,v))|0,s()[p+32>>>2>>>0]=c},ca:function(c){c>>>=0;var p=new Date(s()[c+20>>>2>>>0]+1900,s()[c+16>>>2>>>0],s()[c+12>>>2>>>0],s()[c+8>>>2>>>0],s()[c+4>>>2>>>0],s()[c>>>2>>>0],0),v=s()[c+32>>>2>>>0],T=p.getTimezoneOffset(),C=new Date(p.getFullYear(),6,1).getTimezoneOffset(),D=new Date(p.getFullYear(),0,1).getTimezoneOffset(),W=Math.min(D,C);return 0>v?s()[c+32>>>2>>>0]=+(C!=D&&W==T):0<v!=(W==T)&&(C=Math.max(D,C),p.setTime(p.getTime()+6e4*((0<v?W:C)-T))),s()[c+24>>>2>>>0]=p.getDay(),v=(Ur(p.getFullYear())?ul:ll)[p.getMonth()]+p.getDate()-1|0,s()[c+28>>>2>>>0]=v,s()[c>>>2>>>0]=p.getSeconds(),s()[c+4>>>2>>>0]=p.getMinutes(),s()[c+8>>>2>>>0]=p.getHours(),s()[c+12>>>2>>>0]=p.getDate(),s()[c+16>>>2>>>0]=p.getMonth(),s()[c+20>>>2>>>0]=p.getYear(),c=p.getTime(),isNaN(c)?(s()[Sl()>>>2>>>0]=61,c=-1):c/=1e3,BigInt(c)},_:dl,$:cl,P:function(c,p,v){function T(re){return(re=re.toTimeString().match(/\(([A-Za-z ]+)\)$/))?re[1]:"GMT"}c>>>=0,p>>>=0,v>>>=0;var C=new Date().getFullYear(),D=new Date(C,0,1),W=new Date(C,6,1);C=D.getTimezoneOffset();var Y=W.getTimezoneOffset(),ne=Math.max(C,Y);a()[c>>>2>>>0]=60*ne,s()[p>>>2>>>0]=+(C!=Y),c=T(D),p=T(W),c=fl(c),p=fl(p),Y<C?(a()[v>>>2>>>0]=c,a()[v+4>>>2>>>0]=p):(a()[v>>>2>>>0]=p,a()[v+4>>>2>>>0]=c)},q:()=>{jr("")},g:function(c,p,v){return c>>>=0,p=pl(p>>>0,v>>>0),ln[c].apply(null,p)},M:function(c,p,v){return c>>>=0,p=pl(p>>>0,v>>>0),ln[c].apply(null,p)},G:()=>{},I:()=>Date.now(),oa:()=>{throw At+=1,"unwind"},R:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>$?($m(),Xr(Tm)).cpus().length:navigator.hardwareConcurrency,O:function(c){c>>>=0;var p=t().length;if(c<=p||4294901760<c)return!1;for(var v=1;4>=v;v*=2){var T=p*(1+.2/v);T=Math.min(T,c+100663296);var C=Math;T=Math.max(c,T);e:{C=(C.min.call(C,4294901760,T+(65536-T%65536)%65536)-Be.buffer.byteLength+65535)/65536;try{Be.grow(C),Je();var D=1;break e}catch{}D=void 0}if(D)return!0}return!1},ha:ml,ia:gl,X:Bn,A:bl,E:yl,ea:vl,D:wl,a:Be||d.wasmMemory,na:$l,r:function(c,p,v,T){return $l(c>>>0,p>>>0,v>>>0,T>>>0)}},de=function(){function c(v,T){return de=v.exports,de=wi(),de=A0(),_e.Ub.push(de.bb),Mr.unshift(de.va),yt=T,so(),de}var p={a:I0};if(qr++,d.instantiateWasm)try{return d.instantiateWasm(p,c)}catch(v){ue(`Module.instantiateWasm callback failed with error: ${v}`),m(v)}return lo(p,function(v){c(v.instance,v.module)}).catch(m),{}}();d._OrtInit=(c,p)=>(d._OrtInit=de.wa)(c,p),d._OrtGetLastError=(c,p)=>(d._OrtGetLastError=de.xa)(c,p),d._OrtCreateSessionOptions=(c,p,v,T,C,D,W,Y,ne,re)=>(d._OrtCreateSessionOptions=de.ya)(c,p,v,T,C,D,W,Y,ne,re),d._OrtAppendExecutionProvider=(c,p)=>(d._OrtAppendExecutionProvider=de.za)(c,p),d._OrtAddFreeDimensionOverride=(c,p,v)=>(d._OrtAddFreeDimensionOverride=de.Aa)(c,p,v),d._OrtAddSessionConfigEntry=(c,p,v)=>(d._OrtAddSessionConfigEntry=de.Ba)(c,p,v),d._OrtReleaseSessionOptions=c=>(d._OrtReleaseSessionOptions=de.Ca)(c),d._OrtCreateSession=(c,p,v)=>(d._OrtCreateSession=de.Da)(c,p,v),d._OrtReleaseSession=c=>(d._OrtReleaseSession=de.Ea)(c),d._OrtGetInputOutputCount=(c,p,v)=>(d._OrtGetInputOutputCount=de.Fa)(c,p,v),d._OrtGetInputName=(c,p)=>(d._OrtGetInputName=de.Ga)(c,p),d._OrtGetOutputName=(c,p)=>(d._OrtGetOutputName=de.Ha)(c,p),d._OrtFree=c=>(d._OrtFree=de.Ia)(c),d._OrtCreateTensor=(c,p,v,T,C,D)=>(d._OrtCreateTensor=de.Ja)(c,p,v,T,C,D),d._OrtGetTensorData=(c,p,v,T,C)=>(d._OrtGetTensorData=de.Ka)(c,p,v,T,C),d._OrtReleaseTensor=c=>(d._OrtReleaseTensor=de.La)(c),d._OrtCreateRunOptions=(c,p,v,T)=>(d._OrtCreateRunOptions=de.Ma)(c,p,v,T),d._OrtAddRunConfigEntry=(c,p,v)=>(d._OrtAddRunConfigEntry=de.Na)(c,p,v),d._OrtReleaseRunOptions=c=>(d._OrtReleaseRunOptions=de.Oa)(c),d._OrtCreateBinding=c=>(d._OrtCreateBinding=de.Pa)(c),d._OrtBindInput=(c,p,v)=>(d._OrtBindInput=de.Qa)(c,p,v),d._OrtBindOutput=(c,p,v,T)=>(d._OrtBindOutput=de.Ra)(c,p,v,T),d._OrtClearBoundOutputs=c=>(d._OrtClearBoundOutputs=de.Sa)(c),d._OrtReleaseBinding=c=>(d._OrtReleaseBinding=de.Ta)(c),d._OrtRunWithBinding=(c,p,v,T,C)=>(d._OrtRunWithBinding=de.Ua)(c,p,v,T,C),d._OrtRun=(c,p,v,T,C,D,W,Y)=>(d._OrtRun=de.Va)(c,p,v,T,C,D,W,Y),d._OrtEndProfiling=c=>(d._OrtEndProfiling=de.Wa)(c),d._JsepOutput=(c,p,v)=>(d._JsepOutput=de.Xa)(c,p,v),d._JsepGetNodeName=c=>(d._JsepGetNodeName=de.Ya)(c);var Sl=()=>(Sl=de.Za)(),$i=d._pthread_self=()=>($i=d._pthread_self=de._a)(),Oo=d._malloc=c=>(Oo=d._malloc=de.$a)(c),Tr=d._free=c=>(Tr=d._free=de.ab)(c);d.__emscripten_tls_init=()=>(d.__emscripten_tls_init=de.bb)();var Il=c=>(Il=de.cb)(c);d.__embind_initialize_bindings=()=>(d.__embind_initialize_bindings=de.db)();var Al=d.__emscripten_thread_init=(c,p,v,T,C,D)=>(Al=d.__emscripten_thread_init=de.fb)(c,p,v,T,C,D);d.__emscripten_thread_crashed=()=>(d.__emscripten_thread_crashed=de.gb)();var Ol=(c,p,v,T)=>(Ol=de.hb)(c,p,v,T),ls=c=>(ls=de.ib)(c),ds=d.__emscripten_thread_exit=c=>(ds=d.__emscripten_thread_exit=de.jb)(c),El=()=>(El=de.kb)(),Cl=(c,p)=>(Cl=de.lb)(c,p),cs=()=>(cs=de.mb)(),_i=c=>(_i=de.nb)(c),fs=c=>(fs=de.ob)(c),Pl=d.dynCall_ii=(c,p)=>(Pl=d.dynCall_ii=de.qb)(c,p),kl=c=>(kl=de.rb)(c),Dl=()=>(Dl=de.sb)(),Bl=c=>(Bl=de.tb)(c),Rl=()=>(Rl=de.ub)();d.___start_em_js=915288,d.___stop_em_js=915449;function A0(){var c=de;c=Object.assign({},c);var p=T=>()=>T()>>>0,v=T=>C=>T(C)>>>0;return c.Za=p(c.Za),c._a=p(c._a),c.$a=v(c.$a),c.cb=v(c.cb),c.emscripten_main_runtime_thread_id=p(c.emscripten_main_runtime_thread_id),c.mb=p(c.mb),c.ob=v(c.ob),c}d.wasmMemory=Be,d.stackAlloc=fs,d.stackSave=cs,d.stackRestore=_i,d.keepRuntimeAlive=()=>0<At,d.UTF8ToString=Ze,d.stringToUTF8=Kr,d.lengthBytesUTF8=Bt,d.ExitStatus=co,d.PThread=_e;var Si;un=function c(){Si||zl(),Si||(un=c)};function zl(){if(!(0<qr))if(O)h(d),O||Rn(Mr),startWorker(d);else{if(d.preRun)for(typeof d.preRun=="function"&&(d.preRun=[d.preRun]);d.preRun.length;)Lr.unshift(d.preRun.shift());Rn(Lr),0<qr||Si||(Si=!0,d.calledRun=!0,Ae||(O||Rn(Mr),h(d),O||Rn(sn)))}}return zl(),e.ready}})();typeof Sm=="object"&&typeof Au=="object"?Au.exports=_m:typeof define=="function"&&define.amd&&define([],()=>_m)});var Am=Qe((GP,c2)=>{c2.exports='"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(Module.__embind_initialize_bindings(),initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed?.(),a}}self.onmessage=handleMessage;\n'});var Em,f2,Ou,Eu,Sa,Om,p2,h2,m2,Cm,lt,ro=R(()=>{"use strict";Em=vm();f2=Im(),Eu=!1,Sa=!1,Om=!1,p2=()=>{try{return typeof SharedArrayBuffer>"u"?!1:(typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch{return!1}},h2=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},m2=(r,e)=>r?e?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":e?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Cm=async r=>{if(Eu)return Promise.resolve();if(Sa)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Om)throw new Error("previous call to 'initializeWebAssembly()' failed.");Sa=!0;let e=r.initTimeout,n=r.numThreads,t=r.simd,o=n>1&&p2(),i=t&&h2(),s=r.wasmPaths,a=typeof s=="string"?s:void 0,u=m2(i,o),l=typeof s=="object"?s[u]:void 0,d=!1,h=[];if(e>0&&h.push(new Promise(m=>{setTimeout(()=>{d=!0,m()},e)})),h.push(new Promise((m,b)=>{let y=o?f2:Em,x={locateFile:(A,I)=>{if(o&&A.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Am()],{type:"text/javascript"}));if(A.endsWith(".wasm")){if(l)return l;let $=a??I;return u==="ort-wasm-simd.wasm"?$+"ort-wasm-simd.jsep.wasm":u==="ort-wasm-simd-threaded.wasm"?$+"ort-wasm-simd-threaded.jsep.wasm":$+u}return I+A}};if(o)if(x.numThreads=n,typeof Blob>"u")x.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let A=`var ortWasmThreaded=${y.toString()};`;x.mainScriptUrlOrBlob=new Blob([A],{type:"text/javascript"})}y(x).then(A=>{Sa=!1,Eu=!0,Ou=A,m()},A=>{Sa=!1,Om=!0,b(A)})})),await Promise.race(h),d)throw new Error(`WebAssembly backend initializing failed due to timeout: ${e}ms`)},lt=()=>{if(Eu&&Ou)return Ou;throw new Error("WebAssembly is not initialized yet.")}});var pt,Ho,nt,Ia=R(()=>{"use strict";ro();pt=(r,e)=>{let n=lt(),t=n.lengthBytesUTF8(r)+1,o=n._malloc(t);return n.stringToUTF8(r,o,t),e.push(o),o},Ho=(r,e,n,t)=>{if(typeof r=="object"&&r!==null){if(n.has(r))throw new Error("Circular reference in options");n.add(r)}Object.entries(r).forEach(([o,i])=>{let s=e?e+o:o;if(typeof i=="object")Ho(i,s+".",n,t);else if(typeof i=="string"||typeof i=="number")t(s,i.toString());else if(typeof i=="boolean")t(s,i?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof i}`)})},nt=r=>{let e=lt(),n=e.stackSave();try{let t=e.stackAlloc(8);e._OrtGetLastError(t,t+4);let o=e.HEAP32[t/4],i=e.HEAPU32[t/4+1],s=i?e.UTF8ToString(i):"";throw new Error(`${r} ERROR_CODE: ${o}, ERROR_MESSAGE: ${s}`)}finally{e.stackRestore(n)}}});var Pm,km=R(()=>{"use strict";ro();Ia();Pm=r=>{let e=lt(),n=0,t=[],o=r||{};try{if(r?.logSeverityLevel===void 0)o.logSeverityLevel=2;else if(typeof r.logSeverityLevel!="number"||!Number.isInteger(r.logSeverityLevel)||r.logSeverityLevel<0||r.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${r.logSeverityLevel}`);if(r?.logVerbosityLevel===void 0)o.logVerbosityLevel=0;else if(typeof r.logVerbosityLevel!="number"||!Number.isInteger(r.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${r.logVerbosityLevel}`);r?.terminate===void 0&&(o.terminate=!1);let i=0;return r?.tag!==void 0&&(i=pt(r.tag,t)),n=e._OrtCreateRunOptions(o.logSeverityLevel,o.logVerbosityLevel,!!o.terminate,i),n===0&&nt("Can't create run options."),r?.extra!==void 0&&Ho(r.extra,"",new WeakSet,(s,a)=>{let u=pt(s,t),l=pt(a,t);e._OrtAddRunConfigEntry(n,u,l)!==0&&nt(`Can't set a run config entry: ${s} - ${a}.`)}),[n,t]}catch(i){throw n!==0&&e._OrtReleaseRunOptions(n),t.forEach(s=>e._free(s)),i}}});var g2,b2,y2,v2,Dm,Bm=R(()=>{"use strict";ro();Ia();g2=r=>{switch(r){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${r}`)}},b2=r=>{switch(r){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${r}`)}},y2=r=>{r.extra||(r.extra={}),r.extra.session||(r.extra.session={});let e=r.extra.session;e.use_ort_model_bytes_directly||(e.use_ort_model_bytes_directly="1"),r.executionProviders&&r.executionProviders.some(n=>(typeof n=="string"?n:n.name)==="webgpu")&&(r.enableMemPattern=!1)},v2=(r,e,n)=>{for(let t of e){let o=typeof t=="string"?t:t.name;switch(o){case"webnn":if(o="WEBNN",typeof t!="string"){let s=t;if(s?.deviceType){let a=pt("deviceType",n),u=pt(s.deviceType,n);lt()._OrtAddSessionConfigEntry(r,a,u)!==0&&nt(`Can't set a session config entry: 'deviceType' - ${s.deviceType}.`)}if(s?.numThreads){let a=s.numThreads;(typeof a!="number"||!Number.isInteger(a)||a<0)&&(a=0);let u=pt("numThreads",n),l=pt(a.toString(),n);lt()._OrtAddSessionConfigEntry(r,u,l)!==0&&nt(`Can't set a session config entry: 'numThreads' - ${s.numThreads}.`)}if(s?.powerPreference){let a=pt("powerPreference",n),u=pt(s.powerPreference,n);lt()._OrtAddSessionConfigEntry(r,a,u)!==0&&nt(`Can't set a session config entry: 'powerPreference' - ${s.powerPreference}.`)}}break;case"webgpu":if(o="JS",typeof t!="string"){let s=t;if(s?.preferredLayout){if(s.preferredLayout!=="NCHW"&&s.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${s.preferredLayout}`);let a=pt("preferredLayout",n),u=pt(s.preferredLayout,n);lt()._OrtAddSessionConfigEntry(r,a,u)!==0&&nt(`Can't set a session config entry: 'preferredLayout' - ${s.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${o}`)}let i=pt(o,n);lt()._OrtAppendExecutionProvider(r,i)!==0&&nt(`Can't append execution provider: ${o}.`)}},Dm=r=>{let e=lt(),n=0,t=[],o=r||{};y2(o);try{let i=g2(o.graphOptimizationLevel??"all"),s=b2(o.executionMode??"sequential"),a=typeof o.logId=="string"?pt(o.logId,t):0,u=o.logSeverityLevel??2;if(!Number.isInteger(u)||u<0||u>4)throw new Error(`log serverity level is not valid: ${u}`);let l=o.logVerbosityLevel??0;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log verbosity level is not valid: ${l}`);let d=typeof o.optimizedModelFilePath=="string"?pt(o.optimizedModelFilePath,t):0;if(n=e._OrtCreateSessionOptions(i,!!o.enableCpuMemArena,!!o.enableMemPattern,s,!!o.enableProfiling,0,a,u,l,d),n===0&&nt("Can't create session options."),o.executionProviders&&v2(n,o.executionProviders,t),o.freeDimensionOverrides)for(let[h,m]of Object.entries(o.freeDimensionOverrides)){if(typeof h!="string")throw new Error(`free dimension override name must be a string: ${h}`);if(typeof m!="number"||!Number.isInteger(m)||m<0)throw new Error(`free dimension override value must be a non-negative integer: ${m}`);let b=pt(h,t);e._OrtAddFreeDimensionOverride(n,b,m)!==0&&nt(`Can't set a free dimension override: ${h} - ${m}.`)}return o.extra!==void 0&&Ho(o.extra,"",new WeakSet,(h,m)=>{let b=pt(h,t),y=pt(m,t);e._OrtAddSessionConfigEntry(n,b,y)!==0&&nt(`Can't set a session config entry: ${h} - ${m}.`)}),[n,t]}catch(i){throw n!==0&&e._OrtReleaseSessionOptions(n),t.forEach(s=>e._free(s)),i}}});var Cu,Yt,qo,Aa,jo,Oa,Pu,ut=R(()=>{"use strict";Cu=r=>{switch(r){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${r}`)}},Yt=r=>{switch(r){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${r}`)}},qo=r=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][r],Aa=r=>{switch(r){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${r}`)}},jo=r=>{switch(r){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${r}`)}},Oa=r=>r==="float32"||r==="int32"||r==="int64"||r==="bool"||r==="float16"||r==="uint32",Pu=r=>{switch(r){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${r}`)}}});var Ko,ku=R(()=>{"use strict";Ko=async r=>{if(typeof r=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(r))}catch(e){if(e.code==="ERR_FS_FILE_TOO_LARGE"){let n=(void 0)(r),t=[];for await(let o of n)t.push(o);return new Uint8Array(Buffer.concat(t))}throw e}else{let e=await fetch(r);if(!e.ok)throw new Error(`failed to load external data file: ${r}`);let n=e.headers.get("Content-Length"),t=n?parseInt(n,10):0;if(t<1073741824)return new Uint8Array(await e.arrayBuffer());{if(!e.body)throw new Error(`failed to load external data file: ${r}, no response body.`);let o=e.body.getReader(),i=Math.ceil(t/65536),s=new WebAssembly.Memory({initial:i,maximum:i}).buffer,a=0;for(;;){let{done:u,value:l}=await o.read();if(u)break;let d=l.byteLength;new Uint8Array(s,a,d).set(l),a+=d}return new Uint8Array(s,0,t)}}else return r instanceof Blob?new Uint8Array(await r.arrayBuffer()):r instanceof Uint8Array?r:new Uint8Array(r)}});var w2,x2,Rm,zm,Lm,T2,at,on=R(()=>{"use strict";ut();w2=["V","I","W","E","F"],x2=(r,e)=>{console.log(`[${w2[r]},${new Date().toISOString()}]${e}`)},Lm=(r,e)=>{Rm=r,zm=e},T2=(r,e)=>{let n=jo(r),t=jo(Rm);n>=t&&x2(n,typeof e=="function"?e():e)},at=(...r)=>{zm&&T2(...r)}});var Mm,Nm=R(()=>{"use strict";ut();Mm=(r,e)=>new(Aa(e))(r)});var Ea=R(()=>{"use strict"});var Ca,$2,Fm,Bu,Du,Um,Gm=R(()=>{"use strict";on();Ea();Ca=r=>Math.ceil(r/16)*16,$2=1,Fm=()=>$2++,Bu=async(r,e,n,t)=>{let o=Ca(n),i=r.device.createBuffer({size:o,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let s=r.getCommandEncoder();r.endComputePass(),s.copyBufferToBuffer(e,0,i,0,o),r.flush(),await i.mapAsync(GPUMapMode.READ);let a=i.getMappedRange();if(t){let u=t();return u.set(new Uint8Array(a,0,n)),u}else return new Uint8Array(a.slice(0,n))}finally{i.destroy()}},Du=class{constructor(e){this.backend=e;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map}upload(e,n){let t=n.buffer,o=n.byteOffset,i=n.byteLength,s=Ca(i),a=this.storageCache.get(e);if(!a)throw new Error("gpu data for uploading does not exist");if(a.originalSize!==i)throw new Error(`inconsistent data size. gpu data size=${a.originalSize}, data size=${i}`);let u=this.backend.device.createBuffer({mappedAtCreation:!0,size:s,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=u.getMappedRange();new Uint8Array(l).set(new Uint8Array(t,o,i)),u.unmap();let d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(u,0,a.gpuData.buffer,0,s),at("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`),this.buffersForUploadingPending.push(u)}memcpy(e,n){let t=this.storageCache.get(e);if(!t)throw new Error("source gpu data for memcpy does not exist");let o=this.storageCache.get(n);if(!o)throw new Error("destination gpu data for memcpy does not exist");if(t.originalSize!==o.originalSize)throw new Error("inconsistent source and destination gpu data size");let i=Ca(t.originalSize),s=this.backend.getCommandEncoder();this.backend.endComputePass(),s.copyBufferToBuffer(t.gpuData.buffer,0,o.gpuData.buffer,0,i)}registerExternalBuffer(e,n,t){let o;if(t){if(o=this.externalBuffers.get(t),o===void 0)throw new Error("previous buffer is not registered");if(e===t)return at("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${n}) => id=${o}, buffer is the same, skip.`),o;this.externalBuffers.delete(t)}else o=Fm();return this.storageCache.set(o,{gpuData:{id:o,type:0,buffer:e},originalSize:n}),this.externalBuffers.set(e,o),at("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${n}) => id=${o}, registered.`),o}unregisterExternalBuffer(e){let n=this.externalBuffers.get(e);n!==void 0&&(this.storageCache.delete(n),this.externalBuffers.delete(e),at("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${n}`))}create(e,n=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let t=Ca(e),o,i=(n&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,s=(n&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(i||s){let u=i?this.freeBuffers:this.freeUniformBuffers,l=u.get(t);l||(l=[],u.set(t,l)),l.length>0?o=l.pop():o=this.backend.device.createBuffer({size:t,usage:n})}else o=this.backend.device.createBuffer({size:t,usage:n});let a={id:Fm(),type:0,buffer:o};return this.storageCache.set(a.id,{gpuData:a,originalSize:e}),at("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${a.id}`),a}get(e){return this.storageCache.get(e)?.gpuData}release(e){let n=this.storageCache.get(e);if(!n)throw new Error("releasing data does not exist");return at("verbose",()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${n.gpuData.id}`),this.storageCache.delete(e),this.buffersPending.push(n.gpuData.buffer),n.originalSize}async download(e,n){let t=this.storageCache.get(e);if(!t)throw new Error("data does not exist");await Bu(this.backend,t.gpuData.buffer,t.originalSize,n)}refreshPendingBuffers(){for(let e of this.buffersForUploadingPending)e.destroy();this.buffersForUploadingPending=[];for(let e of this.buffersPending)(e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(e.size).push(e):(e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(e.size).push(e):e.destroy();this.buffersPending=[]}dispose(){this.freeBuffers.forEach(e=>{e.forEach(n=>{n.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(n=>{n.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map}},Um=(...r)=>new Du(...r)});var Ru,Pe,xt=R(()=>{"use strict";Ru=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},Pe=r=>new Ru(r)});var zu,Er,q,Pn,Pa,ka,Da,Fe=R(()=>{"use strict";zu=class{static calcMatMulShape(e,n){return e[1]!==n[0]?void 0:[e[0],n[1]]}},Er=class{static calcShape(e,n,t=!1){let o=e.length,i=n.length;if(o===0)return n;if(i===0)return e;let s=Math.max(e.length,n.length),a=new Array(s);if(t){if(o<2||i<2)return;let u=zu.calcMatMulShape([e[o-2],e[o-1]],[n[i-2],n[i-1]]);if(u===void 0)return;[a[s-2],a[s-1]]=u}for(let u=t?3:1;u<=s;u++){let l=o-u<0?1:e[o-u],d=i-u<0?1:n[i-u];if(l!==d&&l>1&&d>1)return;a[s-u]=Math.max(l,d)}return a}static isValidBroadcast(e,n){let t=e.length,o=n.length;if(t>o)return!1;for(let i=1;i<=t;i++)if(e[t-i]!==1&&e[t-i]!==n[o-i])return!1;return!0}},q=class r{static size(e){return r.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,n,e.length)}static sizeToDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,0,n)}static getSizeFromDimensionRange(e,n,t){let o=1;for(let i=n;i<t;i++){if(e[i]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");o*=e[i]}return o}static computeStrides(e){let n=e.length;if(n===0)return[];if(n===1)return[1];let t=new Array(n);t[n-1]=1,t[n-2]=e[n-1];for(let o=n-3;o>=0;--o)t[o]=t[o+1]*e[o+1];return t}static normalizeAxis(e,n){if(e<-n&&e>=n)throw new Error("unsupported axis for this operation.");return e<0?e+n:e}static normalizeAxes(e,n){return e.map(t=>this.normalizeAxis(t,n??e.length))}static sortBasedOnPerm(e,n){return n?n.map(t=>e[t]):e.slice().reverse()}static padShape(e,n){let t=e.length;return e.map((o,i)=>o+n[i]+n[i+t])}static areEqual(e,n){return e.length!==n.length?!1:e.every((t,o)=>t===n[o])}},Pn=class r{static adjustPoolAttributes(e,n,t,o,i,s){if(!e&&t.length!==n.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let a=0;a<n.length-2;a++)a>=t.length?t.push(n[a+2]):t[a]=n[a+2];for(let a=0;a<t.length;a++)if(a<o.length){if(o[a]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let a=0;a<t.length;a++)if(a<i.length){if(i[a]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let a=0;a<t.length*2;a++)if(a<s.length){if(s[a]<0)throw new Error("pad should be greater than or equal to 1")}else s.push(0);for(let a=0;a<t.length;a++){if(t[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(s[a]>=t[a]||s[a+t.length]>=t[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,n,t,o,i,s,a){if(a){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let u=0;u<e.length-2;u++)r.adjustPadAndReturnShape(e[u+(s?1:2)],n[u],t[u],o[u],i,u,u+e.length-2,a)}}static computePoolOutputShape(e,n,t,o,i,s,a){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let u=[n[0],n[1]];return r.computeShapeHelper(e,n,u,t,o,i,s,a),u}static computeConvOutputShape(e,n,t,o,i,s,a){if(e.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let u=[e[0],n[0]];return r.computeShapeHelper(!1,e,u,t,o,i,s,a),u}static computeShapeHelper(e,n,t,o,i,s,a,u){if(e)for(let l=0;l<n.length-2;l++)t.push(1);else for(let l=0;l<n.length-2;l++)t.push(r.adjustPadAndReturnShape(n[l+2],o[l],i[l],s[l],a,l,l+n.length-2,u))}static adjustPadAndReturnShape(e,n,t,o,i,s,a,u){let l=t*(o-1)+1;if(u&&u!=="NOTSET")switch(u){case"VALID":return i[s]=0,i[a]=0,Math.floor((e-l)/n+1);case"SAME_LOWER":case"SAME_UPPER":if(t!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let h=((e+n-1)/n-1)*n+o-e;return i[s]=Math.floor(u==="SAME_LOWER"?(h+1)/2:h/2),i[a]=h-i[s],Math.floor((e+h-o)/n+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+i[s]+i[a]-l)/n+1)}},Pa=class{static getShapeOfGemmResult(e,n,t,o,i){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let s,a,u;n?(s=e[1],a=e[0]):(s=e[0],a=e[1]);let l=-1;if(o?(u=t[0],l=1):(u=t[1],l=0),t[l]!==a)throw new Error("dimension mismatch");if(s<=0||u<=0||a<=0)throw new Error("invalid shape specified");if(i&&!Er.isValidBroadcast(i,[s,u]))throw new Error("gemm: invalid bias shape for broadcast");return[s,u,a]}},ka=-34028234663852886e22,Da=34028234663852886e22});var _2,Mu,gt,Cr,ee,bt,kt,vr,Xt,Te,Nu,H,ae,Ba,Lu,Wm,no,ot,Me=R(()=>{"use strict";ut();Fe();_2=64,Mu=(r,e)=>{if(e===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(r){case 10:return e>1?`vec${e}<f16>`:"f16";case 1:return e>1?`vec${e}<f32>`:"f32";case 6:return e>1?`vec${e}<i32>`:"i32";case 12:return e>1?`vec${e}<u32>`:"u32";case 7:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(e!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${r}`)}},gt=(r,e=1)=>{let n=Mu(r,e);return typeof n=="string"?n:n[0]},Cr=(r,e=1)=>{let n=Mu(r,e);return typeof n=="string"?n:n[1]},ee=r=>r.length===0?[]:[{type:"uint32",data:r},{type:"uint32",data:q.computeStrides(r)}],bt=r=>r%4===0?4:r%2===0?2:1,kt=(r="f32",e,n="0")=>!e||e===1?`${r}(${n})`:`vec${e}<${r}>(${n})`,vr=(r,e,n)=>r==="f32"?n:e===1?`f32(${n})`:`vec${e}f(${n})`,Xt=(r,e)=>e===4?`(${r}.x + ${r}.y + ${r}.z + ${r}.w)`:e===2?`(${r}.x + ${r}.y)`:e===3?`(${r}.x + ${r}.y + ${r}.z)`:r,Te=(r,e,n)=>r.startsWith("uniforms.")&&n>4?typeof e=="string"?`${r}[(${e}) / 4][(${e}) % 4]`:`${r}[${Math.floor(e/4)}][${e%4}]`:n>1?`${r}[${e}]`:r,Nu=(r,e,n,t,o)=>{let i=typeof n=="number",s=i?n:n.length,a=[...new Array(s).keys()],u=s<2?"u32":s<=4?`vec${s}<u32>`:`array<u32, ${s}>`,l=Mu(e,o),d=typeof l=="string"?l:l[1],h=typeof l=="string"?l:l[0],m={indices:u,value:d,storage:h,tensor:e},b=J=>typeof J=="string"?J:`${J}u`,y={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},x=i?"uniforms.":"",A=`${x}${r}_shape`,I=`${x}${r}_strides`,$="";for(let J=0;J<s-1;J++)$+=`
    let dim${J} = current / ${Te(I,J,s)};
    let rest${J} = current % ${Te(I,J,s)};
    indices[${J}] = dim${J};
    current = rest${J};
    `;$+=`indices[${s-1}] = current;`;let O=s<2?"":`
  fn o2i_${r}(offset: u32) -> ${m.indices} {
    var indices: ${m.indices};
    var current = offset;
    ${$}
    return indices;
  }`,E=J=>(y.offsetToIndices=!0,s<2?J:`o2i_${r}(${J})`),F=[];if(s>=2)for(let J=s-1;J>=0;J--)F.push(`${Te(I,J,s)} * (indices[${J}])`);let z=s<2?"":`
  fn i2o_${r}(indices: ${m.indices}) -> u32 {
    return ${F.join("+")};
  }`,G=J=>(y.indicesToOffset=!0,s<2?J:`i2o_${r}(${J})`),j=(...J)=>s===0?"0u":`${m.indices}(${J.map(b).join(",")})`,X=(J,fe)=>s<2?`${J}`:`${Te(J,fe,s)}`,N=(J,fe,Ie)=>s<2?`${J}=${Ie};`:`${Te(J,fe,s)}=${Ie};`,U={},be=(J,fe)=>{y.broadcastedIndicesToOffset=!0;let Ie=`${fe.name}broadcastedIndicesTo${r}Offset`;if(Ie in U)return`${Ie}(${J})`;let Dt=[];for(let Ut=s-1;Ut>=0;Ut--){let Je=fe.indicesGet("outputIndices",Ut+fe.rank-s);Dt.push(`${X(I,Ut)} * (${Je} % ${X(A,Ut)})`)}return U[Ie]=`fn ${Ie}(outputIndices: ${fe.type.indices}) -> u32 {
             return ${Dt.length>0?Dt.join("+"):"0u"};
           }`,`${Ie}(${J})`},Ee=(J,fe)=>(()=>{if(m.storage===m.value)return`${r}[${J}]=${fe};`;if(m.storage==="vec2<u32>"&&m.value==="i32")return`${r}[${J}]=vec2<u32>(u32(${fe}), select(0u, 0xFFFFFFFFu, ${fe} < 0));`;if(m.storage==="vec2<u32>"&&m.value==="u32")return`${r}[${J}]=vec2<u32>(u32(${fe}), 0u);`;if(m.storage==="u32"&&m.value==="vec4<bool>")return`${r}[${J}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${fe}));`;throw new Error(`not supported combination of storage type ${m.storage} and value type ${m.value} yet`)})(),ue=J=>(()=>{if(m.storage===m.value)return`${r}[${J}]`;if(m.storage==="vec2<u32>"&&m.value==="i32")return`i32(${r}[${J}].x)`;if(m.storage==="vec2<u32>"&&m.value==="u32")return`u32(${r}[${J}].x)`;if(m.storage==="u32"&&m.value==="vec4<bool>")return`vec4<bool>(bool(${r}[${J}] & 0xFFu), bool(${r}[${J}] & 0xFF00u), bool(${r}[${J}] & 0xFF0000u), bool(${r}[${J}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${m.storage} and value type ${m.value} yet`)})(),Be=s<2?"":`
  fn get_${r}ByIndices(indices: ${m.indices}) -> ${d} {
    return ${ue(`i2o_${r}(indices)`)};
  }`,yt=s<2?"":(()=>{let J=a.map(Ie=>`d${Ie}: u32`).join(", "),fe=a.map(Ie=>`d${Ie}`).join(", ");return`
  fn get_${r}(${J}) -> ${d} {
    return get_${r}ByIndices(${j(fe)});
  }`})(),Ae=(...J)=>{if(J.length!==s)throw new Error(`indices length must be ${s}`);let fe=J.map(b).join(",");return s===0?ue("0u"):s===1?ue(fe[0]):(y.get=!0,y.getByIndices=!0,y.indicesToOffset=!0,`get_${r}(${fe})`)},Ge=J=>s<2?ue(J):(y.getByIndices=!0,y.indicesToOffset=!0,`get_${r}ByIndices(${J})`),$e=s<2?"":`
  fn set_${r}ByIndices(indices: ${m.indices}, value: ${d}) {
    ${Ee(`i2o_${r}(indices)`,"value")}
  }`,ke=s<2?"":(()=>{let J=a.map(Ie=>`d${Ie}: u32`).join(", "),fe=a.map(Ie=>`d${Ie}`).join(", ");return`
  fn set_${r}(${J}, value: ${d}) {
    set_${r}ByIndices(${j(fe)}, value);
  }`})();return{impl:()=>{let J=[],fe=!1;return y.offsetToIndices&&(J.push(O),fe=!0),y.indicesToOffset&&(J.push(z),fe=!0),y.broadcastedIndicesToOffset&&(Object.values(U).forEach(Ie=>J.push(Ie)),fe=!0),y.set&&(J.push(ke),fe=!0),y.setByIndices&&(J.push($e),fe=!0),y.get&&(J.push(yt),fe=!0),y.getByIndices&&(J.push(Be),fe=!0),!i&&fe&&J.unshift(`const ${A} = ${m.indices}(${n.join(",")});`,`const ${I} = ${m.indices}(${q.computeStrides(n).join(",")});`),J.join(`
`)},type:m,offsetToIndices:E,indicesToOffset:G,broadcastedIndicesToOffset:be,indices:j,indicesGet:X,indicesSet:N,set:(...J)=>{if(J.length!==s+1)throw new Error(`indices length must be ${s}`);let fe=J[s];if(typeof fe!="string")throw new Error("value must be string");let Ie=J.slice(0,s).map(b).join(",");return s===0?Ee("0u",fe):s===1?Ee(Ie[0],fe):(y.set=!0,y.setByIndices=!0,y.indicesToOffset=!0,`set_${r}(${Ie}, ${fe})`)},setByOffset:Ee,setByIndices:(J,fe)=>s<2?Ee(J,fe):(y.setByIndices=!0,y.indicesToOffset=!0,`set_${r}ByIndices(${J}, ${fe});`),get:Ae,getByOffset:ue,getByIndices:Ge,usage:t,name:r,strides:I,shape:A,rank:s}},H=(r,e,n,t=1)=>Nu(r,e,n,"input",t),ae=(r,e,n,t=1)=>Nu(r,e,n,"output",t),Ba=(r,e,n,t=1)=>Nu(r,e,n,"internal",t),Lu=class{constructor(e){this.normalizedDispatchGroup=e;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=_2){let n=typeof e=="number"?e:e[0],t=typeof e=="number"?1:e[1],o=typeof e=="number"?1:e[2],i=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,s=i?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,a=i?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${n*t*o}u + local_idx;`;return`@compute @workgroup_size(${n}, ${t}, ${o})
  fn main(${s}) {
    ${a}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,n){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let t=e.usage==="input"?"read":"read_write",o=e.type.storage;return`@group(0) @binding(${n}) var<storage, ${t}> ${e.name}: array<${o}>;`}declareVariables(...e){return e.map(n=>this.declareVariable(n,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(n=>this.registerInternalVariable(n)),this}registerUniform(e,n,t=1){return this.uniforms.push({name:e,type:n,length:t}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:n,type:t,length:o}of this.uniforms)if(o&&o>4)e.push(`${n}:array<vec4<${t}>, ${Math.ceil(o/4)}>`);else{let i=o==null||o===1?t:`vec${o}<${t}>`;e.push(`${n}:${i}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}},Wm=r=>new Lu(r),no=(r,e)=>{let n=r.length,t=[];for(let o=0;o<n;o++){let i=n-1-o,s=r[i]||1;(e[e.length-1-o]||1)>1&&s===1&&t.unshift(i)}return t},ot=r=>!0});var S2,Hm,I2,A2,wr,qm,jm,oo=R(()=>{"use strict";Fe();xt();Me();S2=r=>{if(!r||r.length!==1)throw new Error("Transpose requires 1 input.")},Hm=(r,e)=>e&&e.length!==r?[...new Array(r).keys()].reverse():e,I2=(r,e)=>q.sortBasedOnPerm(r,Hm(r.length,e)),A2=(r,e,n,t)=>{let o=[];o.push(`fn perm(i: ${t.type.indices}) -> ${n.type.indices} {
    var a: ${n.type.indices};`);for(let i=0;i<e;++i)o.push(n.indicesSet("a",r[i],`i[${i}]`));return o.push("return a;}"),o.join(`
`)},wr=(r,e)=>{let n=r.dataType,t=r.dims.length,o=Hm(t,e),i=ot(t),s=I2(r.dims,o),a=i?s.length:s,u=i?t:r.dims,l=ae("output",n,a),d=H("a",n,u),h=m=>`
  ${m.registerUniform("output_size","u32").declareVariables(d,l)}

  ${A2(o,t,d,l)}

  ${m.mainStart()}
    ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${l.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${l.setByOffset("global_idx",d.getByIndices("aIndices"))}
  }`;return{name:"Transpose",shaderCache:{hint:`${e}`,inputDependencies:i?["rank"]:["dims"]},getRunData:m=>{let b=q.size(s);return{outputs:[{dims:s,dataType:m[0].dataType}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:i?[{type:"uint32",data:b},...ee(m[0].dims),...ee(s)]:[{type:"uint32",data:b}]}},getShaderSource:h}},qm=(r,e)=>{S2(r.inputs),r.compute(wr(r.inputs[0],e.perm))},jm=r=>Pe({perm:r.perm})});var O2,E2,C2,P2,k2,D2,B2,R2,z2,L2,Pr,Km,Ym,Xm,Zm,Jm,Qm,eg,tg,rg,ng,og=R(()=>{"use strict";Fe();Me();Ra();oo();O2={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},E2={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},C2={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},P2={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},k2=(r,e)=>{let n=[];for(let t=e-r;t<e;++t)n.push(t);return n},D2=(r,e)=>{let n=[],t=r.length;for(let i=0;i<t;i++)e.indexOf(i)===-1&&n.push(r[i]);let o=e.map(i=>r[i]);return[n,o]},B2=(r,e)=>{let n=r.length+e.length,t=[],o=0;for(let i=0;i<n;i++)e.indexOf(i)===-1?t.push(r[o++]):t.push(1);return t},R2=(r,e)=>{for(let n=0;n<r.length;++n)if(r[r.length-n-1]!==e-1-n)return!1;return!0},z2=(r,e)=>{let n=[];if(!R2(r,e)){for(let t=0;t<e;++t)r.indexOf(t)===-1&&n.push(t);r.forEach(t=>n.push(t))}return n},L2=(r,e,n,t,o,i,s)=>{let a=n[0].dims,u=q.size(i),l=q.size(s),d=H("_A",n[0].dataType,a),h=ae("output",o,i),m=32,b=`
          var<workgroup> aBestValues : array<${h.type.storage}, ${m}>;
       `;return{name:r,shaderCache:e,getShaderSource:x=>`
        ${x.registerUniform("reduceSize","u32").declareVariables(d,h)}
        ${b}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${x.mainStart(m)}

          let outputIndex = global_idx / ${m};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = ${h.type.storage}(${C2[t]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${m}) {
           let candidate = ${h.type.storage}(${d.getByOffset("offset + k")});
           bestValue = ${O2[t]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${m}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${E2[t]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${h.setByOffset("outputIndex",`${t==="mean"?`bestValue / ${h.type.storage}(uniforms.reduceSize)`:`${P2[t]}`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:i,dataType:o}],dispatchGroup:{x:u},programUniforms:[{type:"uint32",data:l}]})}},Pr=(r,e,n,t)=>{let o=r.inputs.length===1?n:Fu(r.inputs,n),i=o.axes;i.length===0&&!o.noopWithEmptyAxes&&(i=r.inputs[0].dims.map((b,y)=>y));let s=q.normalizeAxes(i,r.inputs[0].dims.length),a=s,u=r.inputs[0],l=z2(a,r.inputs[0].dims.length);l.length>0&&(u=r.compute(wr(r.inputs[0],l),{inputs:[0],outputs:[-1]})[0],a=k2(a.length,u.dims.length));let[d,h]=D2(u.dims,a),m=d;o.keepDims&&(m=B2(d,s)),r.compute(L2(e,{hint:o.cacheKey,inputDependencies:["type"]},[u],t,r.inputs[0].dataType,m,h),{inputs:[u]})},Km=(r,e)=>{Pr(r,"ReduceMeanShared",e,"mean")},Ym=(r,e)=>{Pr(r,"ReduceL1Shared",e,"l1")},Xm=(r,e)=>{Pr(r,"ReduceL2Shared",e,"l2")},Zm=(r,e)=>{Pr(r,"ReduceLogSumExpShared",e,"logSumExp")},Jm=(r,e)=>{Pr(r,"ReduceMaxShared",e,"max")},Qm=(r,e)=>{Pr(r,"ReduceMinShared",e,"min")},eg=(r,e)=>{Pr(r,"ReduceProdShared",e,"prod")},tg=(r,e)=>{Pr(r,"ReduceSumShared",e,"sum")},rg=(r,e)=>{Pr(r,"ReduceSumSquareShared",e,"sumSquare")},ng=(r,e)=>{Pr(r,"ReduceLogSumShared",e,"logSum")}});var kr,M2,za,Fu,Dr,N2,F2,V2,U2,G2,W2,H2,q2,j2,K2,Br,ig,ag,sg,ug,lg,dg,cg,fg,pg,hg,Ra=R(()=>{"use strict";Fe();xt();Me();og();kr=r=>{if(!r||r.length===0||r.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(r.length===2&&r[1].dims.length!==1)throw new Error("Invalid axes input dims.")},M2=r=>["","",`var value = ${r.getByIndices("input_indices")};`,""],za=(r,e,n,t,o,i,s=!1,a=!1)=>{let u=[],l=n[0].dims,d=l.length,h=q.normalizeAxes(o,d),m=!a&&h.length===0;l.forEach((A,I)=>{m||h.indexOf(I)>=0?s&&u.push(1):u.push(A)});let b=u.length,y=q.size(u);return{name:r,shaderCache:e,getShaderSource:A=>{let I=[],$=H("_A",n[0].dataType,d),O=ae("output",i,b),E=t($,O,h),F=E[2];for(let z=0,G=0;z<d;z++)m||h.indexOf(z)>=0?(s&&G++,F=`for(var j${z}: u32 = 0; j${z} < ${l[z]}; j${z}++) {
                  ${E[2].includes("last_index")?`let last_index = j${z};`:""}
                  ${$.indicesSet("input_indices",z,`j${z}`)}
                  ${F}
                }`):(I.push(`${$.indicesSet("input_indices",z,O.indicesGet("output_indices",G))};`),G++);return`

        ${A.registerUniform("output_size","u32").declareVariables($,O)}

        ${A.mainStart()}
          ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${$.type.indices};
          let output_indices = ${O.offsetToIndices("global_idx")};

          ${I.join(`
`)}
          ${E[0]}       // init ops for reduce max/min
          ${E[1]}
          ${F}
          ${E[3]}
          ${E.length===4?O.setByOffset("global_idx","value"):E.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:u,dataType:i}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:[{type:"uint32",data:y},...ee(l),...ee(u)]})}},Fu=(r,e)=>{let n=[];return r[1].dims[0]>0&&r[1].getBigInt64Array().forEach(t=>n.push(Number(t))),Pe({axes:n,keepDims:e.keepDims,noopWithEmptyAxes:e.noopWithEmptyAxes})},Dr=(r,e,n,t)=>{let o=r.inputs,i=o.length===1?n:Fu(o,n);r.compute(za(e,{hint:i.cacheKey,inputDependencies:["rank"]},[o[0]],i.noopWithEmptyAxes&&i.axes.length===0?M2:t,i.axes,o[0].dataType,i.keepDims,i.noopWithEmptyAxes),{inputs:[0]})},N2=(r,e)=>{kr(r.inputs),Dr(r,"ReduceLogSum",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,"value = log(value);"])},F2=(r,e)=>{kr(r.inputs),Dr(r,"ReduceL1",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += abs(${t.getByIndices("input_indices")});`,""])},V2=(r,e)=>{kr(r.inputs),Dr(r,"ReduceL2",e,(t,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},U2=(r,e)=>{kr(r.inputs),Dr(r,"ReduceLogSumExp",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += exp(${t.getByIndices("input_indices")});`,"value = log(value);"])},G2=(r,e)=>{kr(r.inputs),Dr(r,"ReduceMax",e,(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(t.indicesSet("input_indices",a,0));return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = max(value, ${t.getByIndices("input_indices")});`,""]})},W2=(r,e)=>{kr(r.inputs),Dr(r,"ReduceMean",e,(t,o,i)=>{let s=1;for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&(s*=r.inputs[0].dims[a]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${o.type.value}(sum / ${s});`]})},H2=(r,e)=>{kr(r.inputs),Dr(r,"ReduceMin",e,(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`input_indices[${a}] = 0;`);return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = min(value, ${t.getByIndices("input_indices")});`,""]})},q2=(r,e)=>{kr(r.inputs),Dr(r,"ReduceProd",e,(t,o)=>[`var value = ${o.type.storage}(1);`,"",`value *= ${t.getByIndices("input_indices")};`,""])},j2=(r,e)=>{kr(r.inputs),Dr(r,"ReduceSum",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,""])},K2=(r,e)=>{kr(r.inputs),Dr(r,"ReduceSumSquare",e,(t,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += t * t;`,""])},Br=(r,e,n)=>{if(e.length===0)return n;let t=1,o=1;for(let i=0;i<e.length;i++)e.indexOf(i)===-1?t*=r[i]:o*=r[i];return o<32&&t>1024},ig=(r,e)=>{Br(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?W2(r,e):Km(r,e)},ag=(r,e)=>{Br(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?F2(r,e):Ym(r,e)},sg=(r,e)=>{Br(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?V2(r,e):Xm(r,e)},ug=(r,e)=>{Br(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?U2(r,e):Zm(r,e)},lg=(r,e)=>{Br(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?G2(r,e):Jm(r,e)},dg=(r,e)=>{Br(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?H2(r,e):Qm(r,e)},cg=(r,e)=>{Br(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?q2(r,e):eg(r,e)},fg=(r,e)=>{Br(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?j2(r,e):tg(r,e)},pg=(r,e)=>{Br(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?K2(r,e):rg(r,e)},hg=(r,e)=>{Br(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?N2(r,e):ng(r,e)}});var mg,gg,bg,Vu,yg=R(()=>{"use strict";ut();xt();Ra();mg=r=>{if(!r||r.length===0||r.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(r[0].dataType!==1)throw new Error("Invalid input type.")},gg=(r,e)=>{mg(r.inputs);let n=(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`input_indices[${a}] = 0;`);return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${t.getByIndices("input_indices")} ${e.selectLastIndex>0?"<=":"<"} value) {
         value = ${t.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",o.setByOffset("global_idx","best_index")]};r.compute(za("ArgMin",{hint:e.cacheKey,inputDependencies:["rank"]},[r.inputs[0]],n,[e.axis],7,e.keepDims),{inputs:[0]})},bg=(r,e)=>{mg(r.inputs);let n=(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`input_indices[${a}] = 0;`);return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${t.getByIndices("input_indices")} ${e.selectLastIndex>0?">=":">"} value) {
         value = ${t.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",o.setByOffset("global_idx","best_index")]};r.compute(za("argMax",{hint:e.cacheKey,inputDependencies:["rank"]},[r.inputs[0]],n,[e.axis],7,e.keepDims),{inputs:[0]})},Vu=r=>Pe(r)});var Y2,X2,Z2,J2,La,Q2,vg,Uu=R(()=>{"use strict";ut();Ea();Me();Y2=(r,e)=>{let n=r[0],t=r[1],o=r[2],i=r[3],s=r[4],a=r[5];if(s&&a)throw new Error("Attention cannot have both past and relative_position_bias");if(n.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let u=n.dims[0],l=n.dims[1],d=n.dims[2];if(o.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(t.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(t.dims[0]!==d)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(o.dims[0]!==t.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let h=o.dims[0]/3,m=h,b=m;if(e.qkvHiddenSizes.length>0){if(e.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let O of e.qkvHiddenSizes)if(O%e.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");h=e.qkvHiddenSizes[0],m=e.qkvHiddenSizes[1],b=e.qkvHiddenSizes[2]}let y=l;if(h!==m)throw new Error("qkv_hidden_sizes first element should be same as the second");if(o.dims[0]!==h+m+b)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let x=0;if(s){if(m!==b)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(s.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(s.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(s.dims[1]!==u)throw new Error('Input "past" second dimension must be batch_size');if(s.dims[2]!==e.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(s.dims[4]!==m/e.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');e.pastPresentShareBuffer||(x=s.dims[3])}let A=y+x,I=-1,$=0;if(i)throw new Error("Mask not supported");if(s)throw new Error("past is not supported");if(a)throw new Error("relativePositionBias is not supported");return{batchSize:u,sequenceLength:l,pastSequenceLength:x,kvSequenceLength:y,totalSequenceLength:A,maxSequenceLength:I,inputHiddenSize:d,hiddenSize:h,vHiddenSize:b,headSize:Math.floor(h/e.numHeads),vHeadSize:Math.floor(b/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:$,scale:e.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},X2=(r,e,n,t)=>{let o=bt(t),i=64,s=t/o;s<i?i=1:s/8<64&&(i=Math.ceil(s/8));let a=Math.ceil(t/o/i),l=[{type:Yt(e.dataType),data:1/t},{type:"uint32",data:s},{type:"uint32",data:a}],d=gt(e.dataType,o),h=m=>{let b=ae("x",e.dataType,e.dims,o),y="thread_max_vector";o===2?y="max(thread_max_vector.x, thread_max_vector.y)":o===4&&(y="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let x=Cr(e.dataType),A=[{name:"d_inv",type:x},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`
  var<workgroup> wgMax: array<f32, ${i}>;
  var<workgroup> wgSum: array<f32, ${i}>;
  ${m.registerUniforms(A).declareVariables(b)}
  ${m.mainStart([i,1,1])}
    let localOffset = local_idx * uniforms.elements_per_wg;
    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;

    var thread_max_vector = ${kt("f32",o,"-3.402823e+38f")};
    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
      thread_max_vector = max(${vr(x,o,"x[offset + i]")}, thread_max_vector);
    }
    wgMax[local_idx] = ${y};
    workgroupBarrier();

    var maxValue = -3.402823e+38f;
    for (var i = 0u; i < ${i}; i++) {
      maxValue = max(wgMax[i], maxValue);
    }

    var sumVector = ${kt("f32",o,"0")};
    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
      sumVector += exp(${vr(x,o,"x[offset + i]")} - maxValue);
    }
    wgSum[local_idx] = ${Xt("sumVector",o)};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${i}; i++) {
      sum += wgSum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
        x[offset + i] = ${kt("f32",o,"uniforms.d_inv")};
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
        let f32input = ${vr(x,o,"x[offset + i]")};
        x[offset + i] = ${b.type.value}(exp(f32input - maxValue) / sum);
      }
    }
  }`};r.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${i};${d};${o}`},getShaderSource:h,getRunData:()=>({outputs:[],dispatchGroup:{x:n},programUniforms:l})},{inputs:[e],outputs:[]})},Z2=(r,e,n,t,o,i)=>{let s=[o.batchSize,o.numHeads,o.sequenceLength,o.kvSequenceLength+o.pastSequenceLength],a=i.scale===0?1/Math.sqrt(o.headSize):i.scale,u=bt(o.headSize),l=o.headSize/u,d=12,h={x:Math.ceil(o.totalSequenceLength/d),y:Math.ceil(o.sequenceLength/d),z:o.batchSize*o.numHeads},m=Yt(e.dataType),b=[{type:"uint32",data:o.sequenceLength},{type:"uint32",data:l},{type:"uint32",data:o.totalSequenceLength},{type:"uint32",data:o.kvSequenceLength},{type:m,data:a}],y=[e,n],x=I=>{let $=H("q",e.dataType,e.dims,u),O=H("key",n.dataType,n.dims,u),E=ae("output",e.dataType,s),F=gt(e.dataType),z=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:F}];return`
  const beta: ${F} = 1.0;
  const TILE_SIZE = ${d}u;

  var<workgroup> tileQ: array<${$.type.storage}, ${d*d}>;
  var<workgroup> tileK: array<${$.type.storage}, ${d*d}>;
  ${I.registerUniforms(z).declareVariables($,O,E)}
  ${I.mainStart([d,d,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let lm = m + local_id.y;
    let ln = n + local_id.x;

    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;
    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;

    var value = ${kt(F,u)};
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m + local_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];
      }

      workgroupBarrier();
    }

    let headOffset = headIdx * uniforms.M * uniforms.N;
    if (lm < uniforms.M && ln < uniforms.N) {
      let outputIdx = headOffset + lm * uniforms.N + ln;
      output[outputIdx] = ${Xt("value",u)} * uniforms.alpha;
    }
  }`},A=r.compute({name:"AttentionProbs",shaderCache:{hint:`${u}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:e.dataType,gpuDataType:0}],dispatchGroup:h,programUniforms:b}),getShaderSource:x},{inputs:y,outputs:[-1]})[0];return X2(r,A,o.batchSize*o.numHeads*o.sequenceLength,o.totalSequenceLength),A},J2=(r,e,n,t)=>{let o=[t.batchSize,t.sequenceLength,t.vHiddenSize],i=12,s={x:Math.ceil(t.vHeadSize/i),y:Math.ceil(t.sequenceLength/i),z:t.batchSize*t.numHeads},a=[{type:"uint32",data:t.sequenceLength},{type:"uint32",data:t.totalSequenceLength},{type:"uint32",data:t.vHeadSize},{type:"uint32",data:t.numHeads},{type:"uint32",data:t.vHiddenSize}],u=l=>{let d=H("probs",e.dataType,e.dims),h=H("v",n.dataType,n.dims),m=ae("output",e.dataType,o),b=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`
  const TILE_SIZE = ${i}u;
  var<workgroup> tileQ: array<${d.type.value}, ${i*i}>;
  var<workgroup> tileK: array<${d.type.value}, ${i*i}>;
  ${l.registerUniforms(b).declareVariables(d,h,m)}
  ${l.mainStart([i,i,1])}
   let headIdx = workgroup_id.z;
   let m = workgroup_id.y * TILE_SIZE + local_id.y;
   let n = workgroup_id.x * TILE_SIZE + local_id.x;

   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;
   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;

   var value = ${d.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
     if (m < uniforms.M && w + local_id.x < uniforms.K) {
       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
     }
     if (n < uniforms.N && w + local_id.y < uniforms.K) {
       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];
     }
     workgroupBarrier();
     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;
   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + currentBatchHeadNumber * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return r.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:o,dataType:e.dataType,gpuDataType:0}],dispatchGroup:s,programUniforms:a}),getShaderSource:u},{inputs:[e,n],outputs:[0]})[0]},La=(r,e,n,t,o,i,s,a,u,l,d)=>{let h=Z2(r,e,n,u,l,d);J2(r,h,t,l)},Q2=(r,e)=>{let n=[e.batchSize,e.numHeads,e.sequenceLength,e.headSize],t=e.sequenceLength,o=e.inputHiddenSize,i=e.headSize,s=12,a={x:Math.ceil(e.headSize/s),y:Math.ceil(e.sequenceLength/s),z:e.batchSize*e.numHeads},u=[r.inputs[0],r.inputs[1],r.inputs[2]],l=[{type:"uint32",data:t},{type:"uint32",data:o},{type:"uint32",data:i},{type:"uint32",data:e.numHeads},{type:"uint32",data:e.headSize},{type:"uint32",data:e.hiddenSize},{type:"uint32",data:e.hiddenSize+e.hiddenSize+e.vHiddenSize}],d=h=>{let m=ae("output_q",u[0].dataType,n),b=ae("output_k",u[0].dataType,n),y=ae("output_v",u[0].dataType,n),x=H("input",u[0].dataType,u[0].dims),A=H("weight",u[1].dataType,u[1].dims),I=H("bias",u[2].dataType,u[2].dims),$=x.type.storage,O=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${s}u;
  var<workgroup> tileInput: array<${$}, ${s*s}>;
  var<workgroup> tileWeightQ: array<${$}, ${s*s}>;
  var<workgroup> tileWeightK: array<${$}, ${s*s}>;
  var<workgroup> tileWeightV: array<${$}, ${s*s}>;
  ${h.registerUniforms(O).declareVariables(x,A,I,m,b,y)}
  ${h.mainStart([s,s,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE + local_id.y;
    let n = workgroup_id.x * TILE_SIZE + local_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${$}(0);
    var valueK = ${$}(0);
    var valueV = ${$}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return r.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:n,dataType:r.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:r.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:r.inputs[0].dataType,gpuDataType:0}],dispatchGroup:a,programUniforms:l}),getShaderSource:d},{inputs:u,outputs:[-1,-1,-1]})},vg=(r,e)=>{let n=Y2(r.inputs,e),[t,o,i]=Q2(r,n);return La(r,t,o,i,r.inputs[4],void 0,void 0,void 0,r.inputs[5],n,e)}});var e1,t1,r1,wg,xg=R(()=>{"use strict";Ct();Fe();xt();Me();e1=(r,e)=>{if(!r||r.length!==5)throw new Error("BatchNormalization requires 5 inputs");let n=(t,o,i)=>{let s=o.length;if(s!==t.length)throw new Error(`${i}: num dimensions != ${s}`);o.forEach((a,u)=>{if(a!==t[u])throw new Error(`${i}: dim[${u}] do not match`)})};if(r[0].dims.length>1){let t=e.format==="NHWC"?e.spatial?r[0].dims.slice(-1):r[0].dims.slice(-1).concat(r[0].dims.slice(1,r[0].dims.length-1)):r[0].dims.slice(1,e.spatial?2:void 0);n(r[1].dims,t,"Invalid input scale"),n(r[2].dims,t,"Invalid input B"),n(r[3].dims,t,"Invalid input mean"),n(r[4].dims,t,"Invalid input var")}else n(r[1].dims,[1],"Invalid input scale"),n(r[2].dims,[1],"Invalid input B"),n(r[3].dims,[1],"Invalid input mean"),n(r[4].dims,[1],"Invalid input var")},t1=(r,e)=>{let{epsilon:n,spatial:t,format:o}=e,i=r[0].dims,s=t?bt(i[i.length-1]):1,a=o==="NHWC"&&i.length>1?s:1,u=q.size(i)/s,l=ot(i.length)&&t,d=l?i.length:i,h=H("x",r[0].dataType,r[0].dims,s),m=H("scale",r[1].dataType,r[1].dims,a),b=H("bias",r[2].dataType,r[2].dims,a),y=H("inputMean",r[3].dataType,r[3].dims,a),x=H("inputVar",r[4].dataType,r[4].dims,a),A=ae("y",r[0].dataType,d,s),I=()=>{let O="";if(t)O=`let cOffset = ${i.length===1?"0u":o==="NHWC"?`outputIndices[${i.length-1}] / ${s}`:"outputIndices[1]"};`;else if(o==="NCHW")O=`
            ${A.indicesSet("outputIndices","0","0")}
            let cOffset = ${A.indicesToOffset("outputIndices")};`;else{O=`var cIndices = ${m.type.indices}(0);
                       cIndices[0] = outputIndices[${i.length-1}];`;for(let E=1;E<m.rank;E++)O+=`cIndices[${E}] = outputIndices[${E}];`;O+=`let cOffset = ${m.indicesToOffset("cIndices")};`}return O},$=O=>`
  const epsilon = ${n};
  ${O.registerUniform("outputSize","u32").declareVariables(h,m,b,y,x,A)}
  ${O.mainStart()}
  ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${A.offsetToIndices(`global_idx * ${s}`)};
    ${I()}
    let scale = ${m.getByOffset("cOffset")};
    let bias = ${b.getByOffset("cOffset")};
    let inputMean = ${y.getByOffset("cOffset")};
    let inputVar = ${x.getByOffset("cOffset")};
    let x = ${h.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${A.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${e.epsilon}_${e.format}_${t}_${s}`,inputDependencies:l?["rank","type","type","type","type"]:void 0},getShaderSource:$,getRunData:()=>({outputs:[{dims:r[0].dims,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l?[{type:"uint32",data:u},...ee(i)]:[{type:"uint32",data:u}]})}},r1=r=>Pe(r),wg=(r,e)=>{let{inputs:n,outputCount:t}=r,o=r1({...e,outputCount:t});if(xe.webgpu.validateInputContent&&e1(n,o),e.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");r.compute(t1(n,o))}});var n1,o1,Tg,$g=R(()=>{"use strict";Fe();Me();n1=r=>{if(r[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(r[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(r[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(r[0].dims[2]!==r[1].dims[0])throw new Error("last dimension of input and bias are not the same")},o1=r=>{let e=r[0].dims,n=r[0].dims[2],t=q.size(e)/4,o=r[0].dataType,i=H("input",o,e,4),s=H("bias",o,[n],4),a=H("residual",o,e,4),u=ae("output",o,e,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:e,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(t/64)}}),getShaderSource:d=>`
  const channels = ${n}u / 4;
  ${d.declareVariables(i,s,a,u)}

  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes(t)}
    let value = ${i.getByOffset("global_idx")}
      + ${s.getByOffset("global_idx % channels")} + ${a.getByOffset("global_idx")};
    ${u.setByOffset("global_idx","value")}
  }`}},Tg=r=>{n1(r.inputs),r.compute(o1(r.inputs))}});var i1,Xe,_g,Sg,Ig,Ag,Og,Eg,Cg,Pg,kg,a1,Dg,Bg,Rg,zg,Ma,Lg,Na,Mg,Ng,Fg,Vg,Ug,Gg,Wg,Hg,qg,jg,Kg,Yg,Xg,Zg,Jg,Qg,eb,Gu=R(()=>{"use strict";ut();Fe();xt();Me();i1=(r,e,n,t,o,i)=>{let s=Math.ceil(e/4),a="";typeof o=="string"?a=`${o}(a)`:a=o("a");let u=H("inputData",n,[s],4),l=ae("outputData",t,[s],4);return`
      ${r.registerUniform("vec_size","u32").declareVariables(u,l)}

  ${i??""}

  ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${u.getByOffset("global_idx")};
    ${l.setByOffset("global_idx",a)}
  }`},Xe=(r,e,n,t,o,i=r.dataType)=>({name:e,shaderCache:{hint:o,inputDependencies:["type"]},getShaderSource:s=>i1(s,q.size(r.dims),r.dataType,i,n,t),getRunData:s=>({outputs:[{dims:r.dims,dataType:i}],dispatchGroup:{x:Math.ceil(q.size(s[0].dims)/64/4)},programUniforms:[{type:"uint32",data:Math.ceil(q.size(r.dims)/4)}]})}),_g=r=>{r.compute(Xe(r.inputs[0],"Abs","abs"))},Sg=r=>{r.compute(Xe(r.inputs[0],"Acos","acos"))},Ig=r=>{r.compute(Xe(r.inputs[0],"Acosh","acosh"))},Ag=r=>{r.compute(Xe(r.inputs[0],"Asin","asin"))},Og=r=>{r.compute(Xe(r.inputs[0],"Asinh","asinh"))},Eg=r=>{r.compute(Xe(r.inputs[0],"Atan","atan"))},Cg=r=>{r.compute(Xe(r.inputs[0],"Atanh","atanh"))},Pg=r=>Pe(r),kg=(r,e)=>{let n;switch(e.to){case 10:n="vec4<f16>";break;case 1:n="vec4<f32>";break;case 12:n="vec4<u32>";break;case 6:n="vec4<i32>";break;case 9:n="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${e.to}`)}r.compute(Xe(r.inputs[0],"Cast",n,void 0,e.cacheKey,e.to))},a1=r=>{let e=r.length>=2&&r[1].data!==0?r[1].getFloat32Array()[0]:ka,n=r.length>=3&&r[2].data!==0?r[2].getFloat32Array()[0]:Da;return Pe({min:e,max:n})},Dg=(r,e)=>{let n=r.inputs.length===1?e:a1(r.inputs),t=Cr(r.inputs[0].dataType);r.compute(Xe(r.inputs[0],"Clip",o=>`clamp(${o}, clip_min_, clip_max_)`,`
    const clip_min_: vec4<${t}> = vec4(${t}(${n.min}));
    const clip_max_: vec4<${t}> = vec4(${t}(${n.max}));
`,n.cacheKey),{inputs:[0]})},Bg=r=>{r.compute(Xe(r.inputs[0],"Ceil","ceil"))},Rg=r=>{r.compute(Xe(r.inputs[0],"Cos","cos"))},zg=r=>{r.compute(Xe(r.inputs[0],"Cosh","cosh"))},Ma=r=>Pe(r),Lg=(r,e)=>{let n=Cr(r.inputs[0].dataType);r.compute(Xe(r.inputs[0],"Elu",t=>`elu_vf32(${t})`,`
  const elu_alpha_ = ${n}(${e.alpha});

  fn elu_f32(a: ${n}) -> ${n} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${n}>) -> vec4<${n}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,e.cacheKey))},Na=(r,e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: ${r}) -> ${r} {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,Mg=r=>{let e=Cr(r.inputs[0].dataType);r.compute(Xe(r.inputs[0],"Erf",n=>`erf_vf32(${n})`,Na(`vec4<${e}>`,e)))},Ng=r=>{r.compute(Xe(r.inputs[0],"Exp","exp"))},Fg=r=>{r.compute(Xe(r.inputs[0],"Floor","floor"))},Vg=r=>{let e=Cr(r.inputs[0].dataType);r.compute(Xe(r.inputs[0],"Gelu",n=>`0.5 * ${n} * (1.0 + erf_vf32(${n} * 0.7071067811865475))`,Na(`vec4<${e}>`,e)))},Ug=(r,e)=>{let n=Cr(r.inputs[0].dataType);r.compute(Xe(r.inputs[0],"LeakyRelu",t=>`select(leaky_relu_alpha_ * ${t}, ${t}, ${t} >= vec4<${n}>(0.0))`,`const leaky_relu_alpha_ = ${n}(${e.alpha});`,e.cacheKey))},Gg=r=>{r.compute(Xe(r.inputs[0],"Not",e=>`!${e}`))},Wg=r=>{r.compute(Xe(r.inputs[0],"Neg",e=>`-${e}`))},Hg=r=>{r.compute(Xe(r.inputs[0],"Reciprocal",e=>`1.0/${e}`))},qg=r=>{let e=Cr(r.inputs[0].dataType);r.compute(Xe(r.inputs[0],"Relu",n=>`select(vec4<${e}>(0.0), ${n}, ${n} > vec4<${e}>(0.0))`))},jg=r=>{r.compute(Xe(r.inputs[0],"Sigmoid",e=>`(1.0 / (1.0 + exp(-${e})))`))},Kg=r=>{r.compute(Xe(r.inputs[0],"Sin","sin"))},Yg=r=>{r.compute(Xe(r.inputs[0],"Sinh","sinh"))},Xg=r=>{r.compute(Xe(r.inputs[0],"Sqrt","sqrt"))},Zg=r=>{r.compute(Xe(r.inputs[0],"Tan","tan"))},Jg=r=>{r.compute(Xe(r.inputs[0],"Tanh","tanh"))},Qg=(r,e)=>{let n=Cr(r.inputs[0].dataType);return r.compute(Xe(r.inputs[0],"ThresholdedRelu",t=>`select(vec4<${n}>(0.0), ${t}, ${t} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${n}>(${e.alpha});`,e.cacheKey)),0},eb=r=>{r.compute(Xe(r.inputs[0],"Log","log"))}});var u1,l1,tb,rb=R(()=>{"use strict";Fe();Me();Gu();u1=r=>{if(r[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(r[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(r[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(r[0].dims[2]!==r[1].dims[0])throw new Error("last dimension of input and bias are not the same")},l1=r=>{let e=r[0].dims.slice();e[2]=e[2]/2;let n=H("input",r[0].dataType,r[0].dims,4),t=H("bias",r[0].dataType,[r[0].dims[2]],4),o=ae("output",r[0].dataType,e,4),i=q.size(e)/4,s=gt(r[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:e,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:u=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${r[0].dims[2]/4/2}u;

  ${u.declareVariables(n,t,o)}

  ${Na(`vec4<${s}>`,s)}

  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes(i)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${o.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},tb=r=>{u1(r.inputs),r.compute(l1(r.inputs))}});var d1,c1,Rr,nb,ob,ib,ab,sb,ub,lb,db,cb,fb,pb=R(()=>{"use strict";ut();Fe();Me();d1=(r,e,n,t,o,i,s,a,u,l,d,h,m)=>{let b,y;typeof a=="string"?b=y=(z,G)=>`${a}((${z}),(${G}))`:typeof a=="function"?b=y=a:(b=a.scalar,y=a.vector);let x=h?e.length:e,A=h?n.length:n,I=h?t.length:t,$=ae("outputData",d,I,4),O=H("aData",u,x,4),E=H("bData",l,A,4),F;if(o)if(i){let z=q.size(e)===1,G=q.size(n)===1,j=e.length>0&&e[e.length-1]%4===0,X=n.length>0&&n[n.length-1]%4===0;z||G?F=$.setByOffset("global_idx",y(z?`${O.type.value}(${O.getByOffset("0")}.x)`:O.getByOffset("global_idx"),G?`${E.type.value}(${E.getByOffset("0")}.x)`:E.getByOffset("global_idx"))):F=`
            let outputIndices = ${$.offsetToIndices("global_idx * 4u")};
            let offsetA = ${O.broadcastedIndicesToOffset("outputIndices",$)};
            let offsetB = ${E.broadcastedIndicesToOffset("outputIndices",$)};
            ${$.setByOffset("global_idx",y(s||j?O.getByOffset("offsetA / 4u"):`${O.type.value}(${O.getByOffset("offsetA / 4u")}[offsetA % 4u])`,s||X?E.getByOffset("offsetB / 4u"):`${E.type.value}(${E.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else F=$.setByOffset("global_idx",y(O.getByOffset("global_idx"),E.getByOffset("global_idx")));else{if(!i)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let z=(G,j,X="")=>{let N=`aData[indexA${j}][componentA${j}]`,U=`bData[indexB${j}][componentB${j}]`;return`
            let outputIndices${j} = ${$.offsetToIndices(`global_idx * 4u + ${j}u`)};
            let offsetA${j} = ${O.broadcastedIndicesToOffset(`outputIndices${j}`,$)};
            let offsetB${j} = ${E.broadcastedIndicesToOffset(`outputIndices${j}`,$)};
            let indexA${j} = offsetA${j} / 4u;
            let indexB${j} = offsetB${j} / 4u;
            let componentA${j} = offsetA${j} % 4u;
            let componentB${j} = offsetB${j} % 4u;
            ${G}[${j}] = ${X}(${b(N,U)});
          `};d===9?F=`
            var data = vec4<u32>(0);
            ${z("data",0,"u32")}
            ${z("data",1,"u32")}
            ${z("data",2,"u32")}
            ${z("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:F=`
            ${z("outputData[global_idx]",0)}
            ${z("outputData[global_idx]",1)}
            ${z("outputData[global_idx]",2)}
            ${z("outputData[global_idx]",3)}
          `}return`
        ${r.registerUniform("vec_size","u32").declareVariables(O,E,$)}

        ${m??""}

        ${r.mainStart()}
        ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${F}
      }`},c1=(r,e,n,t,o,i,s=n.dataType)=>{let a=!q.areEqual(n.dims,t.dims),u=n.dims,l=q.size(n.dims),d=!1,h=!1,m=[a];if(a){let y=Er.calcShape(n.dims,t.dims,!1);if(!y)throw new Error("Can't perform binary op on the given tensors");u=y,l=q.size(u);let x=q.size(n.dims)===1,A=q.size(t.dims)===1,I=n.dims.length>0&&n.dims[n.dims.length-1]%4===0,$=t.dims.length>0&&t.dims[t.dims.length-1]%4===0;m.push(x),m.push(A),m.push(I),m.push($);let O=1;for(let E=1;E<u.length;E++){let F=n.dims[n.dims.length-E]??1,z=t.dims[t.dims.length-E]??1;if(F===z)O*=F;else break}O%4===0?(h=!0,d=!0):(x||A||I||$)&&(d=!0)}else d=!0;m.push(d);let b=ot(n.dims.length)&&ot(t.dims.length)&&ot(u.length);return{name:r,shaderCache:{hint:e+m.map(y=>y.toString()).join("_"),inputDependencies:b?["rank","rank"]:["dims","dims"]},getShaderSource:y=>d1(y,n.dims,t.dims,u,d,a,h,o,n.dataType,t.dataType,s,b,i),getRunData:()=>({outputs:[{dims:u,dataType:s}],dispatchGroup:{x:Math.ceil(l/64/4)},programUniforms:b?[{type:"uint32",data:Math.ceil(q.size(u)/4)},...ee(n.dims),...ee(t.dims),...ee(u)]:[{type:"uint32",data:Math.ceil(q.size(u)/4)}]})}},Rr=(r,e,n,t,o,i)=>{r.compute(c1(e,o??"",r.inputs[0],r.inputs[1],n,t,i))},nb=r=>{Rr(r,"Add",(e,n)=>`${e}+${n}`)},ob=r=>{Rr(r,"Div",(e,n)=>`${e}/${n}`)},ib=r=>{Rr(r,"Equal",{scalar:(e,n)=>`u32(${e}==${n})`,vector:(e,n)=>`vec4<u32>(${e}==${n})`},void 0,void 0,9)},ab=r=>{Rr(r,"Mul",(e,n)=>`${e}*${n}`)},sb=r=>{let e=H("input",r.inputs[0].dataType,r.inputs[0].dims).type.value;Rr(r,"Pow",{scalar:(t,o)=>`pow_custom(${t},${o})`,vector:(t,o)=>`pow_vector_custom(${t},${o})`},`
    fn pow_custom(a : ${e}, b : ${e}) -> ${e} {
      if (b == ${e}(0.0)) {
        return ${e}(1.0);
      } else if (a < ${e}(0.0) && f32(b) != floor(f32(b))) {
        return ${e}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${e}(1.0), round(f32(abs(b) % ${e}(2.0))) != 1.0) * ${e}(${e==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${e}>, b : vec4<${e}>) -> vec4<${e}> {
      // TODO: implement vectorized pow
      return vec4<${e}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},ub=r=>{Rr(r,"Sub",(e,n)=>`${e}-${n}`)},lb=r=>{Rr(r,"Greater",{scalar:(e,n)=>`u32(${e}>${n})`,vector:(e,n)=>`vec4<u32>(${e}>${n})`},void 0,void 0,9)},db=r=>{Rr(r,"Less",{scalar:(e,n)=>`u32(${e}<${n})`,vector:(e,n)=>`vec4<u32>(${e}<${n})`},void 0,void 0,9)},cb=r=>{Rr(r,"GreaterOrEqual",{scalar:(e,n)=>`u32(${e}>=${n})`,vector:(e,n)=>`vec4<u32>(${e}>=${n})`},void 0,void 0,9)},fb=r=>{Rr(r,"LessOrEqual",{scalar:(e,n)=>`u32(${e}<=${n})`,vector:(e,n)=>`vec4<u32>(${e}<=${n})`},void 0,void 0,9)}});var p1,h1,m1,g1,hb,mb,gb=R(()=>{"use strict";Fe();xt();Me();p1=r=>{if(!r||r.length<1)throw new Error("too few inputs");let e=r[0].dataType,n=r[0].dims.length;for(let t of r){if(t.dataType!==e)throw new Error("input tensors should be one type");if(t.dims.length!==n)throw new Error("input tensors should have the same shape")}},h1=(r,e)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${r}u>(${e});
    for (var i: u32 = 0u; i < ${r}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${r}u;
  }`,m1=(r,e)=>{let n=r.length,t=[];for(let o=0;o<n;++o){let i=e.setByOffset("global_idx",r[o].getByIndices("indices"));n===1?t.push(i):o===0?t.push(`if (inputIndex == ${o}u) { ${i} }`):o===n-1?t.push(`else { ${i} }`):t.push(`else if (inputIndex == ${o}) { ${i} }`)}return t.join(`
`)},g1=(r,e)=>{let n=r[0].dims.slice();if(e>=n.length||e<-1*n.length)throw new Error("axis specified for concat doesn't match input dimensionality");let t=e<0?n.length+e:e,o=n.slice(0);for(let E=1;E<r.length;E++){let F=r[E].dims.slice();for(let z=0;z<n.length;z++)if(z===t)o[t]+=F[z];else if(n[z]!==F[z])throw new Error("non concat dimensions must match")}let i=q.size(o),s=new Array(r.length),a=new Array(r.length),u=r[0].dataType,l=0,d=[],h=[],m=[],b=[{type:"uint32",data:i}];for(let E=0;E<r.length;++E)l+=r[E].dims[t],s[E]=l,m.push(ot(r[E].dims.length)),h.push(m[E]?r[E].dims.length:r[E].dims),a[E]=H(`input${E}`,u,h[E]),d.push(m[E]?"rank":"dims"),b.push({type:"uint32",data:s[E]});for(let E=0;E<r.length;++E)m[E]&&b.push(...ee(r[E].dims));let y=ot(o.length);y&&b.push(...ee(o));let x=y?o.length:o,A=ae("output",u,x),I=A.indicesGet("indices",t),$=Array.from(Array(s.length).keys()).map(E=>`uniforms.sizeInConcatAxis${E}`).join(","),O=E=>`

  ${(()=>{E.registerUniform("outputSize","u32");for(let F=0;F<r.length;F++)E.registerUniform(`sizeInConcatAxis${F}`,"u32");return E.declareVariables(...a,A)})()}

  ${h1(s.length,$)}

  ${E.mainStart()}
    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${A.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${I});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${s.length}u>(${$});
      ${I} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${m1(a,A)}
  }`;return{name:"Concat",shaderCache:{hint:`${e}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:o,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:b}),getShaderSource:O}},hb=(r,e)=>{p1(r.inputs),r.compute(g1(r.inputs,e.axis))},mb=r=>Pe({axis:r.axis})});var zr,Fa,an=R(()=>{"use strict";Fe();zr=(r,e)=>{switch(r.activation){case"Relu":return{activationFunction:"",applyActivation:`value = max(value, ${e}(0.0));`};case"Sigmoid":return{activationFunction:"",applyActivation:`value = (${e}(1.0) / (${e}(1.0) + exp(-value)));`};case"Clip":return{activationFunction:`const clip_min_=${e}(${r.clipMin});const clip_max_=${e}(${r.clipMax});`,applyActivation:"value = clamp(value, clip_min_, clip_max_);"};default:return{activationFunction:"",applyActivation:""}}},Fa=r=>{let e=r?.activation||"";if(e==="Clip"){let[n,t]=r?.activation_params||[ka,Da];return{activation:e,clipMax:t,clipMin:n,activationCacheKey:`${e}:${n},${t}`}}return{activation:e,activationCacheKey:e}}});var St,Va,Ua=R(()=>{"use strict";St=(r,e)=>{switch(r){case 1:return e;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${r}-component is not supported.`)}},Va=r=>`
      ${r?"value = value + getBiasByOutputCoords(coords);":""}
      `});var Ga,Wu=R(()=>{"use strict";Ga=r=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${r}.x), i32(${r}.y), i32(${r}.z), 1));
}
`});var b1,y1,Yo,bb,v1,Xo,w1,Wa,Zo=R(()=>{"use strict";Fe();Me();an();Ua();b1=(r,e)=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${e?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${e?", batchIndices":""});
        `,y1=(r,e)=>r?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${e===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,Yo=(r,e,n="f32",t,o=!1,i=32,s=!1,a=32)=>{let u=e[1]*r[1],l=e[0]*r[0],d=o?u:i,h=o?i:u,m=d/e[0],b=i/e[1];if(!((o&&m===4&&r[1]===4||!o&&(m===3||m===4))&&d%e[0]===0&&i%e[1]===0&&r[0]===4))throw new Error(`If transposeA ${o} is true, innerElementSize ${m} and workPerThread[1] ${r[1]} must be 4.
      Otherwise, innerElementSize ${m} must be 3 or 4.
  tileAWidth ${d} must be divisible by workgroupSize[0]${e[0]}. tileInner ${i} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${r[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${m}<${n}>, ${d/m}>, ${h}>;
var<workgroup> mm_Bsub: array<array<vec4<${n}>, ${l/r[0]}>, ${i}>;

const rowPerThread = ${r[1]};
const colPerThread = ${r[0]};
const innerElementSize = ${m};
const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${s?"0":"i32(globalId.z)"};
  ${t?`let batchIndices = ${t.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${u};

  let numTiles = ${s?`${Math.ceil(a/i)}`:"(uniforms.dimInner - 1) / tileInner + 1"};
  var kStart = ${s?`i32(globalId.z) * ${a}`:"0"};

  var acc: array<vec4<${n}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${b};
  for (var t = 0; t < numTiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${b1(o,t)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${b}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${t?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${m===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${y1(o,m)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},bb=(r,e)=>r?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${e?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${e?", batchIndices":""});
            `,v1=r=>r?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Xo=(r,e,n="f32",t,o=!1,i=32,s=!1,a=32,u=!1)=>{let l=r[1]*e[1],d=r[0]*e[0],h=o?l:i,m=o?i:l;if(!(m%e[1]===0&&h%e[0]===0&&i%e[1]===0))throw new Error(`tileAHight ${m} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${h} must be divisible by workgroupSize[0]${e[0]}, tileInner ${i} must be divisible by workgroupSize[1]${e[1]}`);let b=m/e[1],y=h/e[0],x=i/e[1],A=u?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${l};
    let globalColStart = i32(workgroupId.x) * ${d};

    // Loop over shared dimension.
    for (var t = 0; t < numTiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${m}; inputRow = inputRow + ${e[1]}) {
        for (var inputCol = localCol; inputCol < ${h}; inputCol = inputCol + ${e[0]}) {
          ${bb(o,t)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${i}; inputRow = inputRow + ${e[1]}) {
            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${e[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${t?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${n}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${o?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${e[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${e[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${l};

let tileRowA = i32(localId.y) * ${b};
let tileColA = i32(localId.x) * ${y};
let tileRowB = i32(localId.y) * ${x};
// Loop over shared dimension.
for (var t = 0; t < numTiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${b}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${y}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${bb(o,t)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${x}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${t?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${n}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${v1(o)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${n}, ${h}>, ${m}>;
  var<workgroup> mm_Bsub : array<array<${n}, ${d}>, ${i}>;
  const rowPerThread = ${r[1]};
  const colPerThread = ${r[0]};
  const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${s?"0":"i32(globalId.z)"};
    ${t?`let batchIndices = ${t.offsetToIndices("u32(batch)")};`:""}
    let numTiles = ${s?`${Math.ceil(a/i)}`:"(uniforms.dimInner - 1) / tileInner + 1"};
    var kStart = ${s?`i32(globalId.z) * ${a}`:"0"};

    var acc : array<array<${n}, colPerThread>, rowPerThread>;

    // Without this initialization strange values show up in acc.
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = 0.0;
      }
    }
    ${A}
  }
`},w1=(r,e,n,t,o,i=!1)=>{let[s,a,u]=o,[l,d,h,m]=t,b=no(s,u),y=no(a,u),x=gt(t[0].type.tensor),A=()=>{let O=d.rank,E=l.rank,F=`var aIndices: ${d.type.indices};`;for(let z=O-2-1,G=E-1;z>=0;z--,G--)F+=`
aIndices[${z}] = ${E>1?`batchIndices[${G}]`:"batchIndices"};`;return b.forEach(z=>{F+=`
aIndices[${z}] = 0;`}),F+=`
aIndices[${O-2}] = u32(row);
                   aIndices[${O-1}] = u32(colIn);`,F},I=()=>{let O=h.rank,E=l.rank,F=`var bIndices: ${h.type.indices};`;for(let z=O-2-1,G=E-1;z>=0;z--,G--)F+=`
bIndices[${z}] = ${E>1?`batchIndices[${G}]`:"batchIndices"};`;return y.forEach(z=>{F+=`
bIndices[${z}] = 0;`}),F+=`
bIndices[${O-2}] = u32(row);
                   bIndices[${O-1}] = u32(colIn);`,F};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${St(r,x)} {
      var value = ${St(r,x)}(0.0);
      let col = colIn * ${r};
      if(row < uniforms.dimAOuter && col < uniforms.dimInner)
      {
        ${A()}
        value = ${d.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${St(r,x)} {
      var value = ${St(r,x)}(0.0);
      let col = colIn * ${r};
      if(row < uniforms.dimInner && col < uniforms.dimBOuter)
      {
        ${I()}
        value = ${h.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${St(r,x)}) {
      let col = colIn * ${r};
      if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${e?`value = value + ${i?"bias[colIn]":`${St(r,x)}(bias[row])`};`:""}
        ${n}
        ${m.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},Wa=(r,e,n,t,o=!1)=>{let i=r[0].dims,s=r[1].dims,a=i.slice(0,-2),u=s.slice(0,-2),l=t?t.slice(0,-2):n.slice(0,-2),d=ot(l.length),h=d?l.length:l,m=Ba("batchDims",r[0].dataType,h,1),b=q.size(l),y=i[i.length-2],x=i[i.length-1],A=s[s.length-1],I=x%4===0&&A%4===0,$=y<=8?[4,1,1]:[4,4,1],O=[8,8,1],E=[Math.ceil(A/O[0]/$[0]),Math.ceil(y/O[1]/$[1]),Math.ceil(b/O[2]/$[2])],F=gt(r[0].dataType),z=I?4:1,G=[...a,y,x/z],j=ot(G.length),X=j?G.length:G,N=[...u,x,A/z],U=ot(N.length),be=U?N.length:N,Ee=[b,y,A/z],ue=H("a",r[0].dataType,X,z),Be=H("b",r[1].dataType,be,z),yt=ae("result",r[0].dataType,Ee.length,z),Ae=[ue,Be],Ge=[{type:"int32",data:y},{type:"int32",data:A},{type:"int32",data:x}];d&&Ge.push(...ee(l)),j&&Ge.push(...ee(G)),U&&Ge.push(...ee(N));let $e=[];$e.push(j?"rank":"dims"),$e.push(U?"rank":"dims");let ke=r.length>2,{activationFunction:ht,applyActivation:st}=zr(e,yt.type.value),It=w1(z,ke,st,[m,ue,Be,yt],[a,u,l],o);if(ke){let fe=o?z:1;Ae.push(H("bias",r[2].dataType,r[2].dims.length,fe)),Ge.push(...ee(r[2].dims)),$e.push("rank")}Ge.push(...ee(Ee));let J=fe=>`
  ${fe.registerUniform("dimAOuter","i32").registerUniform("dimBOuter","i32").registerUniform("dimInner","i32").registerInternalVariables(m).declareVariables(...Ae,yt)}
  ${ht}
  ${It}
  ${I?Yo($,O,F,m):Xo($,O,F,m)}
                   `;return{name:"MatMul",shaderCache:{hint:e.activationCacheKey+`${$}${I}${o}`,inputDependencies:$e},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:Ge}),getShaderSource:J}}});var x1,yb,vb=R(()=>{"use strict";on();Me();an();Ua();Wu();Zo();x1=(r,e,n,t,o=!1,i,s=4,a=4,u=4,l="f32")=>{let d=U=>{switch(U){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${l}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${U} is not supported.`)}},h=U=>{switch(U){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${U} is not supported.`)}},m=r?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,b=r?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,y=r?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",x=r?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",A=r?"row":"col",I=r?"col":"row",$=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${A} / outWidth;
    let outCol = ${A} % outWidth;

    let WRow = ${I} / (filterDims[1] * inChannels);
    let WCol = ${I} / inChannels % filterDims[1];
    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];
    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];
    let xCh = ${I} % inChannels;
    var resData = ${St(s,l)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${y} && xCol >= 0 && xCol < ${x}) {
      ${m}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${d(s)}
    }
    return resData;`,O=r?e&&t?`
    let col = colIn * ${s};
    ${$}`:`
    let col = colIn * ${s};
    if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      ${$}
    }
    return ${St(s,l)}(0.0);`:t&&n?`
    let col = colIn * ${s};
    ${$}`:`
    let col = colIn * ${s};
    if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
      ${$}
    }
    return ${St(s,l)}(0.0);`,E=`${h(a)}`,F=St(u,l),z=r?St(s,l):St(a,l),G=r?St(a,l):St(s,l),{activationFunction:j,applyActivation:X}=zr(i,F);return`
    ${j}
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${z} {
      ${r?O:E}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${G} {
      ${r?E:O}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${F}) {
      let col = colIn * ${u};
      if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
      {
      var value = valueIn;
      let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${b}
      ${Va(o)}
      ${X}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},yb=(r,e,n,t,o,i,s,a)=>{let u=e.format==="NHWC",l=u?r[0].dims[3]:r[0].dims[1],d=n[0],h=u?n[2]:n[3],m=u?n[1]:n[2],b=u?n[3]:n[1],y=u&&(l%4===0||l%3===0)&&b%4===0,x=u?b:h*m,A=u?h*m:b,I=[8,8,1],$=t<=8?[4,1,1]:[4,4,1],O=[Math.ceil(x/I[0]/$[0]),Math.ceil(A/I[1]/$[1]),Math.ceil(d/I[2]/$[2])];at("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${O}`);let E=y?u&&l%4!==0?3:4:1,F=I[1]*$[1],z=I[0]*$[0],G=Math.max(I[0]*E,I[1]),j=t%F===0,X=o%z===0,N=i%G===0,U=y?[E,4,4]:[1,1,1],be=gt(r[0].dataType),Ee=y?4:1,ue=[{type:"int32",data:t},{type:"int32",data:o},{type:"int32",data:i}],Be=H("x",r[0].dataType,r[0].dims.length,E===3?1:E),yt=H("w",r[1].dataType,r[1].dims.length,Ee),Ae=[Be,yt];ue.push(...ee(r[0].dims)),ue.push(...ee(r[1].dims));let Ge=`
      fn setOutputAtIndex(flatIndex : i32, value : ${y?`vec4<${be}>`:be}) {
        result[flatIndex] = ${y?`vec4<${be}>`:be}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${y?`vec4<${be}>`:be}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${y?"/ 4":""}, value);
      }`;if(s){let ke=H("bias",r[2].dataType,r[2].dims.length,Ee);Ae.push(ke),ue.push(...ee(r[2].dims)),Ge+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${y?`vec4<${be}>`:be} {
          return bias[coords.${u?"w":"y"}${y?"/ 4":""}];
        }`}let $e=ae("result",r[0].dataType,n.length,Ee);return ue.push(...ee(n)),{name:"Conv2DMatMul",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:O[0],y:O[1],z:O[2]},programUniforms:ue}),getShaderSource:ke=>`
        ${Ga("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${ke.registerUniform("dimAOuter","i32").registerUniform("dimBOuter","i32").registerUniform("dimInner","i32").declareVariables(...Ae,$e)}
        const filterDims : vec2<i32> = vec2<i32>(${e.kernelShape[0]}, ${e.kernelShape[1]});
        const pad : vec2<i32> = vec2<i32>(${e.pads[0]}, ${e.pads[1]});
        const stride : vec2<i32> = vec2<i32>(${e.strides[0]}, ${e.strides[1]});
        const dilation : vec2<i32> = vec2<i32>(${e.dilations[0]}, ${e.dilations[1]});
        ${Ge}
        ${x1(u,j,X,N,s,e,U[0],U[1],U[2],be)}
            ${y?Yo($,I,be,void 0,!u,G):Xo($,I,be,void 0,!u,G,!1,void 0,a)}`}}});var Hu,wb=R(()=>{"use strict";Fe();Me();ju();an();Hu=(r,e,n)=>{let t=r.length>2,o=t?"value += b[output_channel];":"",i=r[0].dims,s=r[1].dims,a=s[0]/e.group,u=e.format==="NHWC",l=qu(i,s,e.dilations,e.pads,e.strides,u),d=q.size(l),h=ae("output",r[0].dataType,l),{activationFunction:m,applyActivation:b}=zr(e,h.type.value),y=H("x",r[0].dataType,i),x=H("w",r[1].dataType,s),A=[y,x];t&&A.push(H("b",r[2].dataType,r[2].dims));let I=$=>`
  const strides: vec2<u32> = vec2(${e.strides[0]}u, ${e.strides[1]}u);
  const pads: vec2<u32> = vec2(${e.pads[0]}u, ${e.pads[1]}u);

  ${$.declareVariables(...A,h)}

  ${m}

  ${$.mainStart()}
    ${$.guardAgainstOutOfBoundsWorkgroupSizes(d)}

    let outputIndices = ${h.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${u?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${u?1:2}], outputIndices[${u?2:3}]) * strides - pads;
    let group_id: u32 = output_channel / ${a}u;

    var value: ${h.type.value} = ${h.type.value}(0);
    for (var wInChannel: u32 = 0u; wInChannel < ${s[1]}u; wInChannel++) {
      let input_channel = group_id * ${s[1]}u + wInChannel;
      for (var wHeight: u32 = 0u; wHeight < ${s[2]}u; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * ${e.dilations[0]}u;

        if (xHeight < 0u || xHeight >= ${i[u?1:2]}u) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < ${s[3]}u; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * ${e.dilations[1]}u;
          if (xWidth < 0u || xWidth >= ${i[u?2:3]}u) {
            continue;
          }

          let xVal = ${u?y.get("batch","xHeight","xWidth","input_channel"):y.get("batch","input_channel","xHeight","xWidth")};
          let wVal = ${x.get("output_channel","wInChannel","wHeight","wWidth")};
          value += xVal*wVal;
        }
      }
    }
    ${o}
    ${b}
    ${h.setByOffset("global_idx","value")}
  }`;return{name:"GroupedConv",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:n?n(l):l,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)}}),getShaderSource:I}}});var Ku,T1,xb,Yu=R(()=>{"use strict";Fe();Zo();Me();an();Ku=(r,e,n,t,o=!1)=>{let i=r[0].dims,s=r[1].dims,a=i[i.length-2],u=s[s.length-1],l=i[i.length-1],d=bt(u),h=bt(l),m=bt(a),b=q.size(n)/d/m,y=r.length>2,x=t?t.slice(0,-2):n.slice(0,-2),I=[q.size(x),a,u],$=[{type:"uint32",data:b},{type:"uint32",data:a},{type:"uint32",data:u},{type:"uint32",data:l},...ee(x),...ee(i),...ee(s)];y&&$.push(...ee(r[2].dims)),$.push(...ee(I));let O=E=>{let F=Ba("batch_dims",r[0].dataType,x.length),z=H("a",r[0].dataType,i.length,h),G=H("b",r[1].dataType,s.length,d),j=ae("output",r[0].dataType,I.length,d),{activationFunction:X,applyActivation:N}=zr(e,j.type.value),U=[z,G],be="";if(y){let $e=o?d:1;U.push(H("bias",r[2].dataType,r[2].dims.length,$e)),be=`${o?`value += bias[col / ${$e}];`:`value += ${j.type.value}(bias[row + i]);`}`}let Ee=i.slice(0,-2),ue=s.slice(0,-2),Be=no(Ee,x),yt=no(ue,x),Ae=($e,ke)=>{let ht=$e.rank,st=$e.name;if(ht===2)return`var ${st}_indices = ${$e.type.indices}(0u, 0u);`;let It=F.rank,J=`var ${st}_indices: ${$e.type.indices};`;for(let fe=ht-2-1,Ie=It-1;fe>=0;fe--,Ie--)J+=`
${st}_indices[${fe}] = ${It>1?`batch_indices[${Ie}]`:"batch_indices"};`;return ke.forEach(fe=>{J+=`
${st}_indices[${fe}] = 0;`}),J+=`${st}_indices[${ht-2}] = 0u;
                     ${st}_indices[${ht-1}] = 0u;`,J},Ge=()=>{let $e=`var a_data: ${z.type.value};`;for(let ke=0;ke<h;ke++)$e+=`
              let b_data${ke} = b[(b_offset + (k + ${ke}) * uniforms.N + col) / ${d}];`;for(let ke=0;ke<m;ke++){$e+=`a_data = a[(a_offset + (row + ${ke}) * uniforms.K + k) / ${h}];`;for(let ht=0;ht<h;ht++)$e+=`
            values[${ke}] = fma(${G.type.value}(a_data${h===1?"":`[${ht}]`}), b_data${ht}, values[${ke}]);
`}return $e};return`
  ${E.registerUniform("outputSize","u32").registerUniform("M","u32").registerUniform("N","u32").registerUniform("K","u32").registerInternalVariables(F).declareVariables(...U,j)}
  ${X}
  ${E.mainStart()}
    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    let col = (global_idx % (uniforms.N / ${d})) * ${d};
    var index1 = global_idx / (uniforms.N / ${d});
    let stride1 = uniforms.M / ${m};
    let row = (index1 % stride1) * ${m};
    let batch = index1 / stride1;

    ${n.length===2?"":`let batch_indices = ${F.offsetToIndices("batch")};`}
    ${Ae(z,Be)}
    let a_offset = ${z.indicesToOffset("a_indices")};
    ${Ae(G,yt)}
    let b_offset = ${G.indicesToOffset("b_indices")};
    var values: array<${j.type.value}, ${m}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${h}) {
      ${Ge()}
    }
    for (var i = 0u; i < ${m}u; i++) {
      var value = values[i];
      ${be}
      ${N}
      let cur_indices = ${j.type.indices}(batch, row + i, col);
      let offset = ${j.indicesToOffset("cur_indices")};
      ${j.setByOffset(`offset / ${d}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${e.activationCacheKey}_${d}_${h}_${m}_${o}`,inputDependencies:y?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:$}),getShaderSource:O}},T1=r=>{if(!r||r.length!==2)throw new Error("MatMul requires 2 inputs.");if(r[0].dims[r[0].dims.length-1]!==r[1].dims[r[1].dims.length-2])throw new Error("shared dimension does not match.")},xb=r=>{T1(r.inputs);let e=Er.calcShape(r.inputs[0].dims,r.inputs[1].dims,!0);if(!e)throw new Error("Can't use matmul on the given tensors");let n=e[e.length-1],t=r.inputs[0].dims[r.inputs[0].dims.length-1];n<8&&t<8?r.compute(Ku(r.inputs,{activation:"",activationCacheKey:""},e)):r.compute(Wa(r.inputs,{activation:"",activationCacheKey:""},e))}});var qu,Tb,$1,$b,Xu,_1,S1,Zu,ju=R(()=>{"use strict";Fe();xt();vb();Zo();wb();an();Yu();oo();qu=(r,e,n,t,o,i)=>{let s=r[0],a=r.slice(i?1:2,i?3:4),u=a.length,l=e[0],h=e.slice(2).map((y,x)=>y+(y-1)*(n[x]-1)),b=a.map((y,x)=>y+t[x]+t[x+u]).map((y,x)=>Math.floor((y-h[x]+o[x])/o[x]));return b.splice(0,0,s),b.splice(i?3:1,0,l),b},Tb=[2,3,1,0],$1=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4&&r[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(r[0].dims.length!==r[1].dims.length)throw new Error("filter does not have same dimension as input");let n=r[0].dims[e.format==="NHWC"?r[0].dims.length-1:1],t=r[1].dims[1]*e.group;if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(r.length===3&&(r[2].dims.length!==1||r[1].dims[0]!==r[2].dims[0]))throw new Error("invalid bias");let o=r[0].dims.length-2;if(e.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(e.strides.length!==o)throw new Error(`strides should be ${o}D`);if(e.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape")},$b=(r,e)=>{let n=r.kernelShape.slice();for(let i=2;i<e[1].dims.length;++i)n[i-2]===0&&(n[i-2]=e[1].dims[i]);let t=r.pads.slice();Pn.adjustPadsBasedOnAutoPad(e[0].dims,r.strides,r.dilations,n,t,r.format==="NHWC",r.autoPad);let o=Object.assign({},r);return Object.assign(o,{kernelShape:n,pads:t,cacheKey:r.cacheKey}),o},Xu=r=>{let e=Fa(r),n=r.format,t=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][r.auto_pad],o=r.dilations,i=r.group,s=r.kernel_shape,a=r.pads,u=r.strides,l=r.w_is_const();return Pe({autoPad:t,format:n,dilations:o,group:i,kernelShape:s,pads:a,strides:u,wIsConst:l,...e})},_1=(r,e,n)=>{let t=$b(n,e),o=n.format==="NHWC";if(n.group!==1){r.compute(Hu(e,t));return}let i=e.length===3,s=e[0].dims[o?1:2],a=e[0].dims[o?2:3],u=e[0].dims[o?3:1],l=e[1].dims[2],d=e[1].dims[3],h=qu(e[0].dims,e[1].dims,n.dilations,t.pads,n.strides,o),m=h[o?1:2],b=h[o?2:3],y=h[o?3:1],x=o&&l===s&&d===a&&n.pads[0]===0&&n.pads[1]===0;if(x||l===1&&d===1&&n.dilations[0]===1&&n.dilations[1]===1&&n.strides[0]===1&&n.strides[1]===1&&n.pads[0]===0&&n.pads[1]===0){let z=h[0],G,j,X,N=[];if(o){let Ee=r.kernelCustomData.wT??r.compute(wr(e[1],Tb),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];if(n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=Ee),x){let ue=s*a*u;G=e[0].reshape([1,z,ue]),j=Ee.reshape([1,ue,y]),X=[1,z,y]}else G=e[0].reshape([z,s*a,u]),j=Ee.reshape([1,u,y]),X=[z,m*b,y];N.push(G),N.push(j)}else G=e[0].reshape([z,u,s*a]),j=e[1].reshape([1,y,u]),X=[z,y,m*b],N.push(j),N.push(G);i&&N.push(e[2]);let U=X[2],be=N[0].dims[N[0].dims.length-1];U<8&&be<8?r.compute(Ku(N,t,h,X,o),{inputs:N}):r.compute(Wa(N,t,h,X,o),{inputs:N});return}let A=!0,I=r.kernelCustomData.wT??r.compute(wr(e[1],Tb),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=I);let $=[e[0],I];i&&$.push(e[2]);let O=o?m*b:y,E=o?y:m*b,F=l*d*u;r.compute(yb($,t,h,O,E,F,i,A),{inputs:$})},S1=(r,e)=>{let n=e.format==="NHWC",t=[r.inputs[0].reshape(n?[r.inputs[0].dims[0],1,r.inputs[0].dims[1],r.inputs[0].dims[2]]:[r.inputs[0].dims[0],r.inputs[0].dims[1],1,r.inputs[0].dims[2]]),r.inputs[1].reshape([r.inputs[1].dims[0],r.inputs[1].dims[1],1,r.inputs[1].dims[2]])];r.inputs.length===3&&t.push(r.inputs[2]);let o=[0,e.pads[0],0,e.pads[1]],i=[1].concat(e.strides),s=[1].concat(e.dilations),a=[1].concat(e.kernelShape),u=$b({...e,pads:o,strides:i,dilations:s,kernelShape:a},t);r.compute(Hu(t,u,l=>n?[l[0],l[2],l[3]]:[]))},Zu=(r,e)=>{$1(r.inputs,e),r.inputs[0].dims.length===3?S1(r,e):_1(r,r.inputs,e)}});var I1,_b,Sb=R(()=>{"use strict";on();Me();an();Ua();Wu();Zo();I1=(r,e=!1,n,t=4)=>{let o=St(t,"f32"),i=$=>{switch($){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];
            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];
            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];
            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${$} is not supported.`)}},s=r?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,a=r?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,u=r?"outBackprop[1]":"outBackprop[2]",l=r?"outBackprop[2]":"outBackprop[3]",d=r?"row":"col",h=r?"col":"row",m=`
      let inChannels = ${r?"outBackprop[3]":"outBackprop[1]"};
      let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      let outRow = ${d} / outWidth;
      let outCol = ${d} % outWidth;

      let WRow = ${h} / (filterDims[1] * inChannels);
      let WCol = ${h} / inChannels % filterDims[1];
      let xR = f32(outRow - pads[0] + dilation[0] * WRow) / f32(strides[0]);
      let xC = f32(outCol - pads[1] + dilation[1] * WCol) / f32(strides[1]);
      if (xR < 0.0 || xR >= f32(${u}) || fract(xR) > 0.0) {
        return ${o}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${l}) || fract(xC) > 0.0) {
        return ${o}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${h} % inChannels;
      ${s}
      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${t}];`,b=r?`
      let col = colIn * ${t};
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${m}
      }
      return ${o}(0.0);`:`
      let col = colIn * ${t};
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${m}
      }
      return ${o}(0.0);`,y=`
      let col = colIn * ${t};
      let inChannels = ${r?"outBackprop[3]":"outBackprop[1]"};
      let coordX = filterDims.x - 1 - row / (filterDims[1] * inChannels);
      let coordY = filterDims.y - 1 - (row / inChannels) % filterDims[1];
      if (${r?"row < uniforms.dimInner && col < uniforms.dimBOuter":"row < uniforms.dimInner && col < uniforms.dimAOuter"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${i(t)}
      }
      return ${o}(0.0);
      `,{activationFunction:x,applyActivation:A}=zr(n,o);return`
      ${x}
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${o} {
    ${r?b:y}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${o} {
    ${r?y:b}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${o}) {
    let col = colIn * ${t};
    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
      var value = valueInput;
      let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${a}
      ${Va(e)}
      ${A}
      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${t}] = value;
    }
  }`},_b=(r,e,n,t,o,i,s,a)=>{let u=e.format==="NHWC",l=u?r[0].dims[3]:r[0].dims[1],d=n[0],h=u?n[2]:n[3],m=u?n[1]:n[2],b=u?n[3]:n[1],y=u?l%4===0&&b%4===0:h%4===0&&b%4===0,x=u?b:h*m,A=u?h*m:b,I=y?[8,8,1]:[x<=4||A<=4?4:16,x>4&&A<=4?4:16,1],$=y?[4,4,1]:[x<=4?1:4,x>4&&A<=4?1:4,1],O=[Math.ceil(x/I[0]/$[0]),Math.ceil(A/I[1]/$[1]),Math.ceil(d/I[2]/$[2])];at("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${O}`);let E=y?4:1,F=Math.max(I[0]*E,I[1]),z=y?4:1,G=[{type:"int32",data:t},{type:"int32",data:o},{type:"int32",data:i}],j=H("x",r[0].dataType,r[0].dims.length,z),X=H("w",r[1].dataType,r[1].dims.length,1),N=ae("result",r[0].dataType,n.length,z),U=[j,X];G.push(...ee(r[0].dims)),G.push(...ee(r[1].dims));let be="";if(s){let Ee=H("bias",r[2].dataType,r[2].dims.length,z);U.push(Ee),G.push(...ee(r[2].dims)),be+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${y?"vec4<f32>":"f32"} {
          return bias[coords.${u?"w":"y"}${y?"/ 4":""}];
        }`}return G.push(...ee(n)),{name:"Conv2DTransposeMatMul",shaderCache:{hint:e.cacheKey},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:O[0],y:O[1],z:O[2]},programUniforms:G}),getShaderSource:Ee=>`
        ${Ga("uniforms.result_strides")}
        ${Ee.registerUniform("dimAOuter","i32").registerUniform("dimBOuter","i32").registerUniform("dimInner","i32").declareVariables(...U,N)};
        const outBackprop : vec4<i32> = vec4<i32>(${r[0].dims.join(",")});
        const filterDims : vec2<i32> = vec2<i32>(${e.kernelShape[u?1:2]}, ${e.kernelShape[u?2:3]});
        const effectiveFilterDims : vec2<i32> = filterDims + vec2<i32>(
              ${e.dilations[0]<=1?0:(e.kernelShape[u?1:2]-1)*(e.dilations[0]-1)},
              ${e.dilations[1]<=1?0:(e.kernelShape[u?2:3]-1)*(e.dilations[1]-1)});
        const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${e.pads[0]+e.pads[2]})/2,
                                         i32(effectiveFilterDims[1]) - 1 - (${e.pads[1]+e.pads[3]})/2);
        const strides : vec2<i32> = vec2<i32>(${e.strides[0]}, ${e.strides[1]});
        const dilation : vec2<i32> = vec2<i32>(${e.dilations[0]}, ${e.dilations[1]});
        const dimAOuter : i32 = ${t};
        const dimBOuter : i32 = ${o};
        const dimInner : i32 = ${i};
        ${be}
        ${I1(u,s,e,E)}
        ${y?Yo($,I,"f32",void 0,!u,F):Xo($,I,"f32",void 0,!u,F,!1,void 0,a)}`}}});var A1,Ju,Ib=R(()=>{"use strict";on();Fe();Me();A1=(r,e,n,t,o,i,s=!1,a)=>{let u=n.format==="NHWC",l=u?1:2,d=u?2:3,h=u?3:1,m=q.size(t),b=s?2:1,y=n.group,x=e[1].dims,A=x[0]/y,I=x[1],$=`
  fn setOutputAtIndex(flatIndex : u32, value : ${s?`vec4<${a}>`:a}) {
    result[flatIndex] = ${s?`vec4<${a}>`:a}(value);
  }`;o&&($+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${s?`vec4<${a}>`:a} {
      return bias[coords.${u?"w":"y"}${s?"/ 4":""}];
    }`);let O=s?4:1,E=H("W",e[1].dataType,e[1].dims,O),F=H("Dy",e[0].dataType,e[0].dims,O),z=[F,E];o&&z.push(H("bias",e[2].dataType,[t[h]],O));let G=ae("result",e[0].dataType,t,O),j=`{
        let batch: u32 = ${i?"global_id.z":"workgroup_id.z"} / outShape[1];
        let r = ${i?"global_id.z":"workgroup_id.z"} % outShape[1];
        let c = ${i?"global_id.y":"workgroup_id.y"} * ${b};
        let d1: u32 = ${i?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${a}>, ${b}>;
        for (var i = 0; i < ${b}; i++) {
          dotProd[i] = vec4<${a}>(0.0);
        }
        for (var wR: u32 = 0; wR < filterDims[0]; wR = wR + 1) {
          var dyR = (${a}(dyCorner.x) + ${a}(wR)) / ${a}(strides.x);
          let wRPerm = filterDims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${a}(outBackprop[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < filterDims[1]; wC = wC + 1) {
            let dyC = (${a}(dyCorner.y) + ${a}(wC)) / ${a}(strides.y);
            let dyC2 = (${a}(dyCorner.y) + 1.0 + ${a}(wC)) / ${a}(strides.y);
            let wCPerm = filterDims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${a}(outBackprop[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${a}(outBackprop[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = outBackprop[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${E.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${E.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${E.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${E.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${F.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${a}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${F.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${a}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = outBackprop[${h}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${E.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${E.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${E.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${E.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${F.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${a}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = outBackprop[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${E.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${E.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${E.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${E.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${F.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${a}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${b}; i = i + 1) {
          let value = dotProd[i] + ${o?"bias[c+i]":`vec4<${a}>(0.0)`};
          ${G.set("batch","r","c + i","d1","value")};
        }
      }`,X=`
          let outputIndices = ${G.offsetToIndices("global_idx")};
          let batch = ${G.indicesGet("outputIndices",0)};
          let d1 = ${G.indicesGet("outputIndices",h)};
          let r = ${G.indicesGet("outputIndices",l)};
          let c = ${G.indicesGet("outputIndices",d)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / ${I};
          let wOutChannel = d1 - groupId * ${I};
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = ${a}(0.0);
          for (var wR: u32 = 0; wR < effectiveFilterDims.x; wR = wR + 1) {
            if (wR % dilations.x != 0) {
              continue;
            }
            let dyR = (${a}(dyRCorner) + ${a}(wR)) / ${a}(strides[0]);
            let wRPerm = filterDims.x - 1 - wR / dilations.x;
            if (dyR < 0.0 || dyR >= ${a}(outBackprop[${l}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < effectiveFilterDims.y; wC = wC + 1) {
              if (wC % dilations.y != 0) {
                continue;
              }
              let dyC = (${a}(dyCCorner) + ${a}(wC)) / ${a}(strides.y);
              let wCPerm = filterDims.y - 1 - wC / dilations.y;
              if (dyC < 0.0 || dyC >= ${a}(outBackprop[${d}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * ${A};
              for (var d2: u32 = 0; d2 < ${A}; d2 = d2 + 1) {
                let xValue = ${u?F.get("batch","idyR","idyC","inputChannel"):F.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${E.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${o?"bias[d1]":`${a}(0.0)`};
          ${G.setByOffset("global_idx","value")};
        `;return`
  ${r.declareVariables(...z,G)}
  ${$}
  const outShape : vec4<u32> = vec4<u32>(${t.join(",")});
  const outBackprop : vec4<u32> = vec4<u32>(${e[0].dims.join(",")});
  const strides : vec2<u32> = vec2<u32>(${n.strides[0]}, ${n.strides[1]});
  const filterDims : vec2<u32> = vec2<u32>(${n.kernelShape[u?1:2]}, ${n.kernelShape[u?2:3]});
  const dilations : vec2<u32> = vec2<u32>(${n.dilations[0]}, ${n.dilations[1]});
  const effectiveFilterDims : vec2<u32> = filterDims + vec2<u32>(
          ${n.dilations[0]<=1?0:(n.kernelShape[u?1:2]-1)*(n.dilations[0]-1)},
          ${n.dilations[1]<=1?0:(n.kernelShape[u?2:3]-1)*(n.dilations[1]-1)});
  const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${n.pads[0]+n.pads[2]})/2,
                                     i32(effectiveFilterDims[1]) - 1 - (${n.pads[1]+n.pads[3]})/2);
    ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes(m)};
  ${s?j:X}}`},Ju=(r,e,n)=>{let t=r.length>2,o=e.outputShape,i=q.size(o),s=[Math.ceil(i/64),1,1];at("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${s}`);let a=gt(r[0].dataType);return{name:"ConvTranspose2D",shaderCache:{hint:e.cacheKey},getRunData:()=>({dispatchGroup:{x:s[0],y:s[1],z:s[2]},outputs:[{dims:n?n(o):o,dataType:r[0].dataType}]}),getShaderSource:u=>A1(u,r,e,o,t,s[1]===1&&s[2]===1,!1,a)}}});var O1,E1,C1,Ab,Ob,P1,k1,D1,B1,Eb,Cb=R(()=>{"use strict";xt();Sb();Ib();an();oo();O1=(r,e,n,t,o,i)=>(r-1)*e+n+(t-1)*o+1-i,E1=(r,e,n,t,o)=>{let i=Math.floor(r/2);e==="SAME_UPPER"?(n[t]=i,n[o]=r-i):e==="SAME_LOWER"&&(n[t]=r-i,n[o]=i)},C1=(r,e,n,t,o,i,s,a,u,l)=>{let d=r.length-2,h=l.length===0;if(u.length===0)for(let y=0;y<d;++y)u.push(0);let m=r[0],b=e[a?3:1]*o;for(let y=0,x=r.length-d-(a?1:0);y<d;++y,++x){let A=r[x],I=h?A*s[y]:l[y],$=O1(A,s[y],i[y],e[x],n[y],I);E1($,t,i,y,y+d),h&&l.push(s[y]*(A-1)+u[y]+(e[x]-1)*n[y]+1-i[y]-i[y+d])}l.splice(0,0,m),l.splice(a?3:1,0,b)},Ab=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0||r.kernelShape.reduce((m,b)=>m*b,1)===0){n.length=0;for(let m=2;m<e[1].dims.length;++m)n.push(e[1].dims[m])}let t=r.format==="NHWC";n.splice(0,0,e[1].dims[0]),n.splice(t?3:1,0,e[1].dims[1]);let o=r.pads.slice(),i=r.outputShape.slice(),s=r.outputPadding.slice(),a=e[0].dims,u=r.dilations.slice();if(u.reduce((m,b)=>m+b,0)===0){let m=e[0].dims.length-2;u=new Array(m).fill(1)}let l=r.strides.slice();if(l.reduce((m,b)=>m+b,0)===0){let m=e[0].dims.length-2;l=new Array(m).fill(1)}C1(a,n,u,r.autoPad,r.group,o,l,t,s,i);let d=Object.assign({},r),h=r.cacheKey+[n.join("n,"),o.join(","),l.join(","),s.join(","),i.join(","),u.join(",")].join("_");return Object.assign(d,{kernelShape:n,pads:o,outputPadding:s,outputShape:i,dilations:u,strides:l,cacheKey:h}),d},Ob=r=>{let e=Fa(r),n=r.format,t=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof r.autoPad>"u"?0:r.autoPad],o=r.dilations,i=r.group,s=r.kernelShape,a=r.pads,u=r.strides,l=r.wIsConst(),d=r.outputPadding,h=r.outputShape;return Pe({autoPad:t,format:n,dilations:o,group:i,kernelShape:s,outputPadding:d,outputShape:h,pads:a,strides:u,wIsConst:l,...e})},P1=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4&&r[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(r[0].dims.length!==r[1].dims.length)throw new Error("filter does not have same dimension as input");let n=r[0].dims[e.format==="NHWC"?r[0].dims.length-1:1],t=r[1].dims[0];if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=r[1].dims[1]*e.group;if(r.length===3&&(r[2].dims.length!==1||r[2].dims[0]!==o))throw new Error("invalid bias");let i=r[0].dims.length-2;if(e.dilations.reduce((d,h)=>d+h,0)>0&&e.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(e.strides.reduce((d,h)=>d+h,0)>0&&e.strides.length!==i)throw new Error(`strides should be ${i}D`);if(e.pads.reduce((d,h)=>d+h,0)>0&&e.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(e.outputPadding.length!==i&&e.outputPadding.length!==0)throw new Error(`output_padding should be ${i}D`);if(e.kernelShape.reduce((d,h)=>d+h,0)>0&&e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==r[0].dims.length-2)throw new Error("invalid output shape")},k1=[2,3,1,0],D1=(r,e,n)=>{let t=Ab(n,e),o=n.format==="NHWC",i=t.outputShape,s=i[o?3:1],a=e[0].dims[o?3:1];if(t.group!==1||s===1&&a===1){r.compute(Ju(e,t));return}let u=i[o?1:2],l=i[o?2:3],d=e[1].dims[2],h=e[1].dims[3],m=o?u*l:s,b=o?s:u*l,y=d*h*a,x=!0,A=r.kernelCustomData.wT??r.compute(wr(e[1],k1),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=A);let I=[e[0],A],$=e.length===3;$&&(!o&&e[2].dims.length===1?I.push(e[2].reshape([e[2].dims[0],1,1])):I.push(e[2])),r.compute(_b(I,t,i,m,b,y,$,x),{inputs:I})},B1=(r,e)=>{let n=e.format==="NHWC",t=[r.inputs[0].reshape(n?[r.inputs[0].dims[0],1,r.inputs[0].dims[1],r.inputs[0].dims[2]]:[r.inputs[0].dims[0],r.inputs[0].dims[1],1,r.inputs[0].dims[2]]),r.inputs[1].reshape([r.inputs[1].dims[0],r.inputs[1].dims[1],1,r.inputs[1].dims[2]])];t.length===3&&t.push(r.inputs[2]);let o=e.kernelShape;(o.length===0||o[0]===0)&&(o=[r.inputs[1].dims[2]]);let i=e.dilations;(i.length===0||i[0]===0)&&(i=[1]);let s=e.strides;(s.length===0||s[0]===0)&&(s=[1]);let a=e.pads;a.length===0&&(a=[0,0]),a=[0,a[0],0,a[1]],s=[1].concat(s),i=[1].concat(i),o=[1].concat(o);let u=Ab({...e,pads:a,strides:s,dilations:i,kernelShape:o},t);r.compute(Ju(t,u,l=>n?[l[0],l[2],l[3]]:[l[0],l[1],l[3]]))},Eb=(r,e)=>{P1(r.inputs,e),r.inputs[0].dims.length===3?B1(r,e):D1(r,r.inputs,e)}});var R1,Pb,kb,Db=R(()=>{"use strict";ut();Fe();xt();Me();R1=(r,e,n,t)=>{let o=q.size(e),i=e.length,s=H("input",r,i),a=ae("output",r,i),u=n.dataType===6?n.getInt32Array()[0]:Number(n.getBigInt64Array()[0]),l=q.normalizeAxis(u,i),d=h=>{let m=` i32(${s.indicesGet("inputIndices","uniforms.axis")}) `,b=Te("uniforms.input_shape","uniforms.axis",i),y=t.reverse?m+(t.exclusive?" + 1":""):"0",x=t.reverse?b:m+(t.exclusive?"":" + 1");return`
                ${h.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(s,a)}
                ${h.mainStart()}
                  ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${a.offsetToIndices("global_idx")};
                  var sum = ${a.type.value}(0);
                  let first : i32 = ${y};
                  let last : i32 = ${x};
                  for (var i : i32 = first; i < last; i++) {
                    ${s.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${s.getByIndices("inputIndices")};
                  }
                  ${a.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:e,dataType:r}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:"uint32",data:o},{type:"int32",data:l},...ee(e),...ee(e)]}),getShaderSource:d}},Pb=(r,e)=>{let n=r.inputs[0].dims,t=r.inputs[0].dataType,o=r.inputs[1];r.compute(R1(t,n,o,e),{inputs:[0]})},kb=r=>{let e=r.exclusive===1,n=r.reverse===1;return Pe({exclusive:e,reverse:n})}});var Qu,Ha,Bb,z1,L1,el,tl,Rb,M1,zb,Lb,Mb=R(()=>{"use strict";Fe();xt();Me();Qu="[a-zA-Z]|\\.\\.\\.",Ha="("+Qu+")+",Bb="^"+Ha+"$",z1="("+Ha+",)*"+Ha,L1="^"+z1+"$",el=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,n){let t=this.symbolToIndices.get(e);t===void 0?t=[n]:t.push(n),this.symbolToIndices.set(e,t)}},tl=class{constructor(e,n){this.equation=n;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[t,o]=n.includes("->")?n.split("->",2):[n,""];if(!t.match(RegExp(L1)))throw new Error("Invalid LHS term");if(t.split(",").forEach((a,u)=>{let l=e[u].dims.slice();if(!a.match(RegExp(Bb)))throw new Error("Invalid LHS term");let d=this.processTerm(a,!0,l,u);this.lhs.push(d)}),o==="")o+=[...this.symbolToInfo.entries()].filter(([a,u])=>u.count===1||a==="...").map(([a])=>a).join("");else if(!o.match(RegExp(Ha)))throw new Error("Invalid RHS");o.match(RegExp(Qu,"g"))?.forEach(a=>{if(a==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let u=this.symbolToInfo.get(a);if(u===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(u.dimValue)}}),this.rhs=this.processTerm(o,!1,this.outputDims)}addSymbol(e,n,t){let o=this.symbolToInfo.get(e);if(o!==void 0){if(o.dimValue!==n&&o.count!==1)throw new Error("Dimension mismatch");o.count++,o.inputIndices.push(t)}else o={count:1,dimValue:n,inputIndices:[t]};this.symbolToInfo.set(e,o)}processTerm(e,n,t,o=-1){let i=t.length,s=!1,a=[],u=0;if(!e.match(RegExp(Bb))&&!n&&e!=="")throw new Error("Invalid LHS term");let l=e.match(RegExp(Qu,"g")),d=new el(o);return l?.forEach((h,m)=>{if(h==="..."){if(s)throw new Error("Only one ellipsis is allowed per input term");s=!0;let b=i-l.length+1;if(b<0)throw new Error("Ellipsis out of bounds");if(a=t.slice(u,u+b),this.hasEllipsis){if(this.ellipsisDims.length!==a.length||this.ellipsisDims.toString()!==a.toString())throw new Error("Ellipsis dimensions mismatch")}else if(n)this.hasEllipsis=!0,this.ellipsisDims=a;else throw new Error("Ellipsis must be specified in the LHS");for(let y=0;y<a.length;y++){let x=String.fromCharCode("0".charCodeAt(0)+y);d.addSymbol(x,m+y),this.addSymbol(x,t[u++],o)}}else d.addSymbol(h,m+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(h,t[u++],o)}),d}},Rb=r=>r+"_max",M1=(r,e,n,t,o)=>{let s=e.map((b,y)=>r[y]?b.length:b).map((b,y)=>H(`input${y}`,n,b)),a=q.size(o),u=ot(o.length),l=u?o.length:o,d=ae("output",n,l),h=[...t.symbolToInfo.keys()].filter(b=>!t.rhs.symbolToIndices.has(b)),m=b=>{let y=[],x="var prod = 1.0;",A="var sum = 0.0;",I="sum += prod;",$=[],O=[],E=[],F=[],z=t.symbolToInfo.size===t.rhs.symbolToIndices.size;t.symbolToInfo.forEach((j,X)=>{if(t.rhs.symbolToIndices.has(X)){let N=t.rhs.symbolToIndices.get(X)?.[0];N!==void 0&&t.lhs.forEach((U,be)=>{if(j.inputIndices.includes(be)){let Ee=U.symbolToIndices.get(X);if(Ee===void 0)throw new Error("Invalid symbol error");Ee.forEach(ue=>{y.push(`${s[be].indicesSet(`input${be}Indices`,ue,d.indicesGet("outputIndices",N))}`)})}})}else t.lhs.forEach((N,U)=>{if(j.inputIndices.includes(U)){let be=N.symbolToIndices.get(X);if(be===void 0)throw new Error("Invalid symbol error");be.forEach(Ee=>{$.push(`${s[U].indicesSet(`input${U}Indices`,Ee,`${X}`)}`)}),F.push(`prod *= ${s[U].getByIndices(`input${U}Indices`)};`)}}),O.push(`for(var ${X}: u32 = 0; ${X} < uniforms.${Rb(X)}; ${X}++) {`),E.push("}")});let G=z?[...y,`let sum = ${s.map((j,X)=>j.getByIndices(`input${X}Indices`)).join(" * ")};`]:[...y,A,...O,...$,x,...F,I,...E];return`
            ${b.registerUniforms(h.map(j=>({name:`${Rb(j)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...s,d)}

            ${b.mainStart()}
            ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${d.offsetToIndices("global_idx")};
            ${s.map((j,X)=>`var input${X}Indices: ${s[X].type.indices};`).join(`
`)}
            ${G.join(`
`)};
            ${d.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:t.equation,inputDependencies:r.map(b=>b?"rank":"dims")},getRunData:()=>{let b=h.filter(x=>t.symbolToInfo.has(x)).map(x=>({type:"uint32",data:t.symbolToInfo.get(x)?.dimValue||0}));b.push({type:"uint32",data:a});let y=e.filter((x,A)=>r[A]).map((x,A)=>[...ee(x)]).reduce((x,A)=>x.concat(A),b);return u&&y.push(...ee(o)),{outputs:[{dims:o,dataType:n}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:y}},getShaderSource:m}},zb=(r,e)=>{let n=new tl(r.inputs,e.equation),t=r.inputs.map((s,a)=>ot(s.dims.length)),o=n.outputDims,i=r.inputs.map((s,a)=>s.dims);r.compute(M1(t,i,r.inputs[0].dataType,n,o))},Lb=r=>{let e=r.equation.replace(/\s+/g,"");return Pe({equation:e})}});var N1,Nb,F1,V1,Fb,Vb=R(()=>{"use strict";ut();Fe();Me();N1=r=>{if(!r||r.length!==2)throw new Error("Expand requires 2 input.");let e=r[0].dims,n=Array.from(r[1].getBigInt64Array(),Number),t=n.length<e.length?0:n.length-e.length,o=e.length<n.length?0:e.length-n.length;for(;t<n.length&&o<e.length;++t,++o)if(n[t]!==e[o]&&n[t]!==1&&e[o]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Nb=(r,e)=>{let n=r.length-e.length,t=[];for(let o=0;o<n;++o)t.push(r[o]);for(let o=0;o<e.length;++o)t.push(e[o]===1?r[o+n]:e[o]);return t},F1=(r,e)=>r.length>e.length?Nb(r,e):Nb(e,r),V1=r=>{let e=r[0].dims,n=Array.from(r[1].getBigInt64Array(),Number),t=F1(e,n),o=r[0].dataType,i=o===9?4:1,s=Math.ceil(q.size(t)/i),a=ot(e.length),u=ot(t.length),l=h=>{let m=a?e.length:e,b=u?t.length:t,y=H("input",o,m,i),x=ae("output",o,b,i),A;if(o===9){let I=($,O,E="")=>`
          let outputIndices${O} = ${x.offsetToIndices(`outputOffset + ${O}u`)};
          let offset${O} = ${y.broadcastedIndicesToOffset(`outputIndices${O}`,x)};
          let index${O} = offset${O} / 4u;
          let component${O} = offset${O} % 4u;
          ${$}[${O}] = ${E}(${y.getByOffset(`index${O}`)}[component${O}]);
        `;A=`
        let outputOffset = global_idx * ${i};
        var data = vec4<u32>(0);
        ${I("data",0,"u32")}
        ${I("data",1,"u32")}
        ${I("data",2,"u32")}
        ${I("data",3,"u32")}
        ${x.setByOffset("global_idx","data")}
      }`}else A=`
        let outputIndices = ${x.offsetToIndices("global_idx")};
        let inputOffset = ${y.broadcastedIndicesToOffset("outputIndices",x)};
        ${x.setByOffset("global_idx",y.getByOffset("inputOffset"))}
      }`;return`
    ${h.registerUniform("vec_size","u32").declareVariables(y,x)}
    ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${A}`},d=[{type:"uint32",data:s}];return a&&d.push(...ee(e)),u&&d.push(...ee(t)),{name:"Expand",shaderCache:{hint:`${t.length}`,inputDependencies:[a?"rank":"dims"]},getShaderSource:l,getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:d})}},Fb=r=>{N1(r.inputs),r.compute(V1(r.inputs),{inputs:[0]})}});var U1,G1,Ub,Gb,Wb=R(()=>{"use strict";ut();Fe();xt();Me();U1=r=>{if(!r||r.length!==2)throw new Error("Gather requires 2 inputs.")},G1=(r,e)=>{let n=r[0].dims,t=r[1].dims,o=n.length,i=q.normalizeAxis(e.axis,o),s=n.slice(0);s.splice(i,1,...t);let a=n[i],u=r[0].dataType===9?4:1,l=Math.ceil(q.size(s)/u),d=ot(r[0].dims.length),h=d?r[0].dims.length:r[0].dims,m=ot(r[1].dims.length),b=m?r[1].dims.length:r[1].dims,y=ot(s.length),x=y?s.length:s,A=[{type:"uint32",data:l},{type:"int32",data:a},{type:"uint32",data:i}];d&&A.push(...ee(r[0].dims)),m&&A.push(...ee(r[1].dims)),y&&A.push(...ee(s));let I=[];I.push(d?"rank":"dims"),I.push(m?"rank":"dims");let $=O=>{let E=H("data",r[0].dataType,h,u),F=H("inputIndices",r[1].dataType,b),z=ae("output",r[0].dataType,x,u),G=X=>{let N=t.length,U=`var indicesIndices${X}  = ${F.type.indices}(0);`;for(let be=0;be<N;be++)U+=`${N>1?`indicesIndices${X}[${be}]`:`indicesIndices${X}`} = ${s.length>1?`outputIndices${X}[uniforms.axis + ${be}]`:`outputIndices${X}`};`;U+=`
          var idx${X} = ${F.getByIndices(`indicesIndices${X}`)};
          if (idx${X} < 0) {
            idx${X} = idx${X} + uniforms.axisDimLimit;
          }
          var dataIndices${X} = ${E.type.indices}(0);
        `;for(let be=0,Ee=0;be<o;be++)be===i?(U+=`${o>1?`dataIndices${X}[${be}]`:`dataIndices${X}`} = u32(idx${X});`,Ee+=N):(U+=`${o>1?`dataIndices${X}[${be}]`:`dataIndices${X}`} = ${s.length>1?`outputIndices${X}[${Ee}]`:`outputIndices${X}`};`,Ee++);return U},j;if(r[0].dataType===9){let X=(N,U,be="")=>`
          let outputIndices${U} = ${z.offsetToIndices(`outputOffset + ${U}u`)};
          ${G(U)};
          let offset${U} = ${E.indicesToOffset(`dataIndices${U}`)};
          let index${U} = offset${U} / 4u;
          let component${U} = offset${U} % 4u;
          ${N}[${U}] = ${be}(${E.getByOffset(`index${U}`)}[component${U}]);
        `;j=`
        let outputOffset = global_idx * ${u};
        var value = vec4<u32>(0);
        ${X("value",0,"u32")}
        ${X("value",1,"u32")}
        ${X("value",2,"u32")}
        ${X("value",3,"u32")}
        ${z.setByOffset("global_idx","value")}
      `}else j=`
      let outputIndices = ${z.offsetToIndices("global_idx")};
      ${G("")};
      let value = ${E.getByIndices("dataIndices")};
      ${z.setByOffset("global_idx","value")};
      `;return`
      ${O.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(E,F,z)}
      ${O.mainStart()}
        ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${j}
      }`};return{name:"Gather",shaderCache:{hint:e.cacheKey,inputDependencies:I},getRunData:()=>({outputs:[{dims:s,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:A}),getShaderSource:$}},Ub=r=>Pe({axis:r.axis}),Gb=(r,e)=>{let n=r.inputs;U1(n),r.compute(G1(r.inputs,e))}});var W1,H1,Hb,qb,jb=R(()=>{"use strict";Fe();xt();Me();W1=r=>{if(!r||r.length!==2)throw new Error("GatherElements requires 2 inputs.");if(r[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(r[0].dims.length!==r[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},H1=(r,e)=>{let n=r[0].dims,t=r[0].dataType,o=n.length,i=r[1].dims,s=r[1].dataType,a=q.normalizeAxis(e.axis,o),u=n[a],l=i.slice(0),d=q.size(l),h=H("input",t,o),m=H("indicesInput",s,i.length),b=ae("output",t,l.length),y=[{type:"uint32",data:d},{type:"int32",data:u},{type:"uint32",data:a}];return y.push(...ee(n)),y.push(...ee(i)),y.push(...ee(l)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:l,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:y}),getShaderSource:I=>`
      ${I.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(h,m,b)}
      ${I.mainStart()}
      ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${b.offsetToIndices("global_idx")};

      var idx = ${m.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${h.type.indices}(outputIndices);
      ${h.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${h.getByIndices("inputIndices")};

      ${b.setByOffset("global_idx","value")};
  }`}},Hb=r=>Pe({axis:r.axis}),qb=(r,e)=>{let n=r.inputs;W1(n),r.compute(H1(r.inputs,e))}});var q1,j1,Kb,Yb,Xb=R(()=>{"use strict";Fe();Me();q1=r=>{if(!r)throw new Error("Input is missing");if(r.length<2||r.length>3)throw new Error("Invaid input number.");if(r.length===3&&r[2].dims.length>2)throw new Error("Invalid input shape of C");if(r[0].dataType!==r[1].dataType||r.length===3&&r[0].dataType!==r[2].dataType)throw new Error("Input types are mismatched")},j1=(r,e)=>{let n=r[0].dims.slice(),t=r[1].dims.slice(),[o,i,s]=Pa.getShapeOfGemmResult(n,e.transA,t,e.transB,r.length===3?r[2].dims:void 0),a=[o,i];if(!a)throw new Error("Can't use gemm on the given tensors");let u=q.size(a),l=[{type:"uint32",data:u},{type:"uint32",data:o},{type:"uint32",data:i},{type:"uint32",data:s},{type:"float32",data:e.alpha},{type:"float32",data:e.beta}],d=["type","type"];r.length===3&&(l.push(...ee(r[2].dims)),d.push("rank")),l.push(...ee(a));let h=m=>{let b="";e.transA&&e.transB?b="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":e.transA&&!e.transB?b="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!e.transA&&e.transB?b="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!e.transA&&!e.transB&&(b="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let y=e.alpha===1?"":"value *= uniforms.alpha;",x=H("a",r[0].dataType,r[0].dims),A=H("b",r[1].dataType,r[1].dims),I=x.type.value,$=null,O=[x,A];r.length===3&&($=H("c",r[2].dataType,r[2].dims.length),O.push($));let E=ae("output",r[0].dataType,a.length);O.push(E);let F=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${m.registerUniforms(F).declareVariables(...O)}

  ${m.mainStart()}
    ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${I}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${b}
    }

    ${y}
    ${(()=>$!=null?`let cOffset = ${$.broadcastedIndicesToOffset("vec2(m, n)",E)}; value += ${I}(uniforms.beta) * ${$.getByOffset("cOffset")};`:"")()}
    output[global_idx] = value;
  }`};return{name:"Gemm",shaderCache:{hint:`${e.cacheKey}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:a,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l}),getShaderSource:h}},Kb=r=>{let e=r.transA,n=r.transB,t=r.alpha,o=r.beta;return{transA:e,transB:n,alpha:t,beta:o,cacheKey:`${r.transA};${r.transB};${r.alpha===1}`}},Yb=(r,e)=>{q1(r.inputs),r.compute(j1(r.inputs,e))}});var K1,Y1,X1,Zb,Jb=R(()=>{"use strict";ut();Fe();Me();K1=(r,e)=>{let n=r[0].dims,t=n,o=2,i=q.sizeToDimension(n,o),s=q.sizeFromDimension(n,o),a=bt(s),u=s/a,l=[n[0],n[1],u],d=["rank","type","type"],h=[{type:"uint32",data:s},{type:"uint32",data:u}];h.push(...ee(l),...ee(l));let m=b=>{let y=H("x",r[0].dataType,l.length,a),x=H("scale",r[1].dataType,r[1].dims),A=H("bias",r[2].dataType,r[2].dims),I=ae("output",r[0].dataType,l.length,a),$=[y,x,A,I],O=y.type.value,E=a===1?"f32":`vec${a}<f32>`,F=64,z=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`
  var<workgroup> meanShared : f32;
  var<workgroup> squaredNormShared : f32;
  var<workgroup> workgroupShared : array<${E}, ${F}>;
  const workgroupSize = ${F}u;
  ${b.registerUniforms(z).declareVariables(...$)}
  ${b.mainStart(F)}
    let norm = global_idx / workgroupSize;
    let batch = norm / uniforms.x_shape[1];
    let channel = norm % uniforms.x_shape[1];
    let localIndex = local_id.x;

    // initialize workgroup memory
    var initial = ${E}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      initial = initial + ${E}(${y.get("batch","channel","h")});
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the mean of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      meanShared = ${Xt("workgroupShared[0]",a)} / f32(uniforms.normSize);
    }
    workgroupBarrier();

    // reinitialize workgroup memory.
    initial = ${E}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let deviation =  ${E}(${y.get("batch","channel","h")}) - ${E}(meanShared);
      initial = initial + deviation * deviation;
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the sum of square of deviation of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      squaredNormShared = ${Xt("workgroupShared[0]",a)};
    }
    workgroupBarrier();

    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${e.epsilon}));
    let channelScale = invStdDev * f32(${x.getByOffset("channel")});
    let channelShift = f32(${A.getByOffset("channel")}) - meanShared * channelScale;
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let value = ${y.get("batch","channel","h")} * ${O}(${E}(channelScale)) + ${O}(${E}(channelShift));
      ${I.set("batch","channel","h","value")};
    }
  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${e.epsilon};${a}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:i},programUniforms:h}),getShaderSource:m}},Y1=(r,e,n,t,o,i,s,a)=>{let u=bt(s),l=64,d=u===1?"vec2f":`mat2x${u}f`,h=u===1?"f32":`vec${u}f`,m=(z,G)=>`${d}(${z}, ${G})`,b=o*s/u,y=Math.ceil(i/l),x=["type"],A=[{type:"uint32",data:y},{type:"uint32",data:i},{type:"uint32",data:Math.floor(s/u)},{type:"uint32",data:Math.floor(i*s/u)}],I=z=>{let G=H("input",e.dataType,e.dims,u);return`
  ${z.declareVariables(G)}
  @group(0) @binding(1) var<storage, read_write> output : array<${d}>;
  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};
  @group(0) @binding(2) var<uniform> uniforms: Uniforms;

  ${z.mainStart(l)}
    let currentImageNumber = global_idx / ${l} / uniforms.C;
    let currentChannelNumber = (global_idx / ${l}) % uniforms.C;
    let wgId = global_idx % ${l};
    let wgOffset = wgId * uniforms.wg_size;
    if (wgOffset >= uniforms.H) {
        return;
    }
    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);

    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;
    var sum = ${kt("f32",u)};
    var squaredSum = ${kt("f32",u)};
    for (var i: u32 = wgOffset; i < wgMax; i++) {
        let value = ${h}(input[offset + i * uniforms.C]);
        sum += value;
        squaredSum += value * value;
    }
    output[global_idx] = ${m("sum","squaredSum")};
  }`},$=r.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${u}`,inputDependencies:x},getRunData:()=>({outputs:[{dims:[o,s,l,2],dataType:1}],dispatchGroup:{x:o*s/u},programUniforms:A}),getShaderSource:I},{inputs:[e],outputs:[-1]})[0],O=[{type:"uint32",data:b},{type:"uint32",data:i},{type:"uint32",data:Math.floor(s/u)},{type:"uint32",data:Math.floor(l*s/u)}],E=["type","type","type"],F=z=>{let G=H("scale",n.dataType,n.dims,u),j=H("bias",t.dataType,t.dims,u);return`
  @group(0) @binding(0) var<storage, read> input : array<${d}>;
  @group(0) @binding(1) var<storage, read> scale : array<${G.type.storage}>;
  @group(0) @binding(2) var<storage, read> bias : array<${j.type.storage}>;
  @group(0) @binding(3) var<storage, read_write> output : array<${d}>;
  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};
  @group(0) @binding(4) var<uniform> uniforms: Uniforms;

  ${z.mainStart()}
    ${z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}
    let currentImageNumber = global_idx / uniforms.C;
    let currentChannelNumber = global_idx % uniforms.C;

    let offset = currentImageNumber * uniforms.image_size;
    var sum = ${kt("f32",u)};
    var squaredSum = ${kt("f32",u)};
    for (var i: u32 = 0; i < ${l}; i++) {
        let value = input[offset + i + currentChannelNumber * ${l}];
        sum += value[0];
        squaredSum += value[1];
    }
    sum = sum / f32(uniforms.H);
    squaredSum = squaredSum / f32(uniforms.H);
    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${a}));
    let channelScale = invStdDev * ${h}(scale[currentChannelNumber]);
    let channelShift = ${h}(bias[currentChannelNumber]) - sum * channelScale;

    output[global_idx] = ${m("channelScale","channelShift")};
  }`};return r.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${u};${a}`,inputDependencies:E},getRunData:()=>({outputs:[{dims:[o,s,2],dataType:1}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:O}),getShaderSource:F},{inputs:[$,n,t],outputs:[-1]})[0]},X1=(r,e,n)=>{let t=e[0].dims,o=t,i=t[0],s=t[t.length-1],a=q.sizeFromDimension(t,1)/s,u=bt(s),l=q.size(o)/u,d=[{type:"uint32",data:a},{type:"uint32",data:Math.floor(s/u)}],h=["type","type"],m=Y1(r,e[0],e[1],e[2],i,a,s,n.epsilon),b=y=>{let x=gt(e[0].dataType),A=u===1?"vec2f":`mat2x${u}f`,I=u===1?x:`vec${u}<${x}>`,$=H("input",e[0].dataType,e[0].dims,u),O=ae("output",e[0].dataType,o,u);return`
  @group(0) @binding(0) var<storage, read> input : array<${$.type.storage}>;
  @group(0) @binding(1) var<storage, read> scaleInput : array<${A}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${O.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${y.mainStart()}
    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);
    let currentChannelNumber = global_idx % uniforms.C;

    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;
    let scale = scaleInput[scaleOffset];
    output[global_idx] = fma(input[global_idx], ${I}(scale[0]), ${I}(scale[1]));
  }`};r.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${u}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:b},{inputs:[e[0],m]})},Zb=(r,e)=>{e.format==="NHWC"?X1(r,r.inputs,e):r.compute(K1(r.inputs,e))}});var Z1,J1,Qb,ey=R(()=>{"use strict";ut();Fe();Me();Z1=r=>{if(!r||r.length<2)throw new Error("layerNorm requires at least 2 inputs.")},J1=(r,e,n)=>{let t=r[0].dims,o=r[1],i=r[2],s=t,a=q.normalizeAxis(e.axis,t.length),u=q.sizeToDimension(t,a),l=q.sizeFromDimension(t,a),d=q.size(o.dims),h=i?q.size(i.dims):0;if(d!==l||i&&h!==l)throw new Error(`Size of X.shape()[axis:] == ${l}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${d} and bias size of ${h}`);let m=[];for(let E=0;E<t.length;++E)E<a?m.push(t[E]):m.push(1);let b=bt(l),y=["type","type"],x=[{type:"uint32",data:u},{type:"float32",data:l},{type:"uint32",data:Math.floor(l/b)},{type:"float32",data:e.epsilon}];i&&y.push("type");let A=n>1,I=n>2,$=E=>{let F=gt(r[0].dataType),z=[H("x",r[0].dataType,r[0].dims,b),H("scale",o.dataType,o.dims,b)];i&&z.push(H("bias",i.dataType,i.dims,b)),z.push(ae("output",r[0].dataType,s,b)),A&&z.push(ae("mean_data_output",1,m)),I&&z.push(ae("inv_std_output",1,m));let G=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${E.registerUniforms(G).declareVariables(...z)}
  ${E.mainStart()}
    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var meanVector = ${kt("f32",b)};
    var meanSquareVector = ${kt("f32",b)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${vr(F,b,"x[h + offset]")};
      meanVector += value;
      meanSquareVector += value * value;
    }
    let mean = ${Xt("meanVector",b)} / uniforms.norm_size;
    let invStdDev =
        inverseSqrt(${Xt("meanSquareVector",b)} / uniforms.norm_size - mean * mean + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${vr(F,b,"x[j + offset]")};
      let f32scale = ${vr(F,b,"scale[j]")};
      output[j + offset] = ${z[0].type.value}((f32input - mean) * invStdDev * f32scale
        ${i?`+ ${vr(F,b,"bias[j]")}`:""}
      );
    }

    ${A?"mean_data_output[global_idx] = mean":""};
    ${I?"inv_std_output[global_idx] = invStdDev":""};
  }`},O=[{dims:s,dataType:r[0].dataType}];return A&&O.push({dims:m,dataType:1}),I&&O.push({dims:m,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${b};${n}`,inputDependencies:y},getRunData:()=>({outputs:O,dispatchGroup:{x:Math.ceil(u/64)},programUniforms:x}),getShaderSource:$}},Qb=(r,e)=>{Z1(r.inputs),r.compute(J1(r.inputs,e,r.outputCount))}});var Q1,ry,ty,eT,rl,ny,oy=R(()=>{"use strict";Fe();xt();Ea();Uu();Me();oo();Q1=(r,e)=>{let n=r[0],t=r[1],o=r[2],i=r[3],s=r[4],a=r[5],u=r[6],l=r[7];if(n.dims.length!==3&&n.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let d=!1,h=n.dims[0],m=n.dims[1],b=n.dims.length===3?d?n.dims[2]/3:n.dims[2]:e.numHeads*n.dims[4],y=m,x=0,A=0,I=Math.floor(b/e.numHeads);if(u&&l){if(u.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');x=u.dims[2],A=u.dims[2]}else if(u||l)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let $;if(t){if(n.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(t.dims.length<3||t.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(n.dims[0]!==t.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(t.dims.length===3){if(t.dims[2]!==n.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');$=2,y=t.dims[1]}else if(t.dims.length===5){if(t.dims[2]!==e.numHeads||t.dims[3]!==2||t.dims[4]!==I)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(o)throw new Error('Expect "value" be none when "key" has packed kv format.');$=5,y=t.dims[1]}else{if(t.dims[1]!==e.numHeads||t.dims[3]!==I)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');$=0,y=t.dims[2]}}else{if(n.dims.length!==3&&n.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(n.dims.length===5&&(n.dims[2]!==e.numHeads||n.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');$=3}if(i){if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(o&&n.dims.length===5&&n.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let O=0;if(s){O=8;let j=s.dims;throw j.length===1?j[0]===h?O=1:j[0]===3*h+2&&(O=3):j.length===2&&j[0]===h&&j[1]===y&&(O=5),O===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)'):new Error("Mask not supported")}let E=!1,F=b;if(o){if(o.dims.length!==3&&o.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(n.dims[0]!==o.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(o.dims.length===3){if(y!==o.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');F=o.dims[2]}else{if(y!==o.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');F=o.dims[1]*o.dims[3],E=!0}}let z=x+y,G=!1;if(s)throw new Error("Key padding mask is not supported");if(a)throw new Error("extraAddQk is not supported");if(u)throw new Error("pastKey is not supported");if(l)throw new Error("pastValue is not supported");return{batchSize:h,sequenceLength:m,pastSequenceLength:x,kvSequenceLength:y,totalSequenceLength:z,maxSequenceLength:A,inputHiddenSize:0,hiddenSize:b,vHiddenSize:F,headSize:I,vHeadSize:Math.floor(F/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:O,scale:e.scale,broadcastResPosBias:G,passPastInKv:E,qkvFormat:$}},ry=r=>Pe({...r}),ty=Pe({perm:[0,2,1,3]}),eT=(r,e,n,t,o,i,s)=>{let a=[t,o,i],u=q.size(a),l=[{type:"uint32",data:u},{type:"uint32",data:s},{type:"uint32",data:i}],d=h=>{let m=ae("qkv_with_bias",e.dataType,a),b=H("qkv",e.dataType,a),y=H("bias",n.dataType,a),x=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${h.registerUniforms(x).declareVariables(b,y,m)}
  ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return r.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:e.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l}),getShaderSource:d},{inputs:[e,n],outputs:[-1]})[0]},rl=(r,e,n,t,o,i,s,a)=>{let u=i;if(s){if(t===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return u=eT(r,i,s,e,t,n*o,a),u=u.reshape([e,t,n,o]),r.compute(wr(u,ty.perm),{inputs:[u],outputs:[-1]})[0]}else return i.dims.length===3&&(u=i.reshape([e,t,n,o])),r.compute(wr(u,ty.perm),{inputs:[u],outputs:[-1]})[0]},ny=(r,e)=>{let n=Q1(r.inputs,e);if(r.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(r.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let t=r.inputs[1]&&r.inputs[2]&&r.inputs[1].dims.length===4&&r.inputs[2].dims.length===4,o=rl(r,n.batchSize,n.numHeads,n.sequenceLength,n.headSize,r.inputs[0],r.inputs[3],0);if(t)return La(r,o,r.inputs[1],r.inputs[2],r.inputs[4],void 0,void 0,void 0,r.inputs[5],n,e);let i=rl(r,n.batchSize,n.numHeads,n.kvSequenceLength,n.headSize,r.inputs[1],r.inputs[3],n.hiddenSize),s=rl(r,n.batchSize,n.numHeads,n.kvSequenceLength,n.vHeadSize,r.inputs[2],r.inputs[3],2*n.hiddenSize);La(r,o,i,s,r.inputs[4],void 0,r.inputs[6],r.inputs[7],r.inputs[5],n,e)}});var tT,rT,nT,oT,iT,aT,sT,uT,iy,ay=R(()=>{"use strict";ut();Fe();Me();tT=r=>{if(!r||r.length<1)throw new Error("Too few inputs");if(r[0].dataType!==1)throw new Error("Input type must be float.");if(r.length>=2){let e=r[0].dims.length*2===r[1].dims[0];if(r.length===4&&(e=r[3].dims[0]*2===r[1].dims[0]),!e)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},rT=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
            k = i32(${r.indicesGet("indices",o)}) - ${Te("uniforms.pads",o,n)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${Te("uniforms.x_shape",o,e)})) {
              break;
            }
            offset += k * i32(${Te("uniforms.x_strides",o,e)});
        `;return`
          value = ${r.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${t}
            value = x[offset];
          }
      `},nT=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
                k = i32(${r.indicesGet("indices",o)}) - ${Te("uniforms.pads",o,n)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${Te("uniforms.x_shape",o,e)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${Te("uniforms.x_shape",o,e)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${Te("uniforms.x_strides",o,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${t}
              value = x[offset];
          `},oT=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
                k = i32(${r.indicesGet("indices",o)}) - ${Te("uniforms.pads",o,n)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${Te("uniforms.x_shape",o,e)})) {
                  k = i32(${Te("uniforms.x_shape",o,e)}) - 1;
                }
                offset += k * i32(${Te("uniforms.x_strides",o,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${t}
              value = x[offset];
          `},iT=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
                k = i32(${r.indicesGet("indices",o)}) - ${Te("uniforms.pads",o,n)};
                if (k < 0)  {
                  k += i32(${Te("uniforms.x_shape",o,e)}]);
                }
                if (k >= i32(${Te("uniforms.x_shape",o,e)})) {
                  k -= i32(${Te("uniforms.x_shape",o,e)});
                }
                offset += k * i32(${Te("uniforms.x_strides",o,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${t}
              value = x[offset];
          `},aT=(r,e,n)=>{switch(n.mode){case 0:return rT(r,e,n.pads.length);case 1:return nT(r,e,n.pads.length);case 2:return oT(r,e,n.pads.length);case 3:return iT(r,e,n.pads.length);default:throw new Error("Invalid mode")}},sT=(r,e)=>{let n=q.padShape(r[0].dims.slice(),e.pads),t=r[0].dims,i=[{type:"uint32",data:q.size(n)},{type:"uint32",data:e.pads}];if(e.mode===0){let u=Yt(r[0].dataType);i.push({type:u,data:e.value})}i.push(...ee(r[0].dims),...ee(n));let s=["rank"],a=u=>{let l=ae("output",r[0].dataType,n.length),d=H("x",r[0].dataType,t.length),h=d.type.value,m=aT(l,t.length,e),b=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:e.pads.length}];return e.mode===0&&b.push({name:"constant_value",type:h}),`
            ${u.registerUniforms(b).declareVariables(d,l)}
            ${u.mainStart()}
            ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${l.offsetToIndices("global_idx")};

            var value = ${h}(0);
            ${m}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${e.mode}`,inputDependencies:s},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(q.size(n)/64)},programUniforms:i}),getShaderSource:a}},uT=(r,e)=>{if(r.length>1){let n=r[1].getBigInt64Array(),t=r.length>=3&&r[2].data?r[2].getFloat32Array()[0]:0,o=r[0].dims.length,i=new Int32Array(2*o).fill(0);if(r.length>=4){let a=r[3].getBigInt64Array();for(let u=0;u<a.length;u++)i[Number(a[u])]=Number(n[u]),i[Number(a[u])+o]=Number(n[u+a.length])}else n.forEach((a,u)=>i[Number(u)]=Number(a));let s=[];return i.forEach(a=>s.push(a)),{mode:e.mode,value:t,pads:s}}else return e},iy=(r,e)=>{tT(r.inputs);let n=uT(r.inputs,e);r.compute(sT(r.inputs,n),{inputs:[0]})}});var qa,sy,uy,ly,dy,lT,dT,cy,fy,py,hy,my,gy,by,yy,vy,wy,xy,Ty,$y=R(()=>{"use strict";Ct();Fe();Me();qa=r=>{if(xe.webgpu.validateInputContent&&(!r||r.length!==1))throw new Error("Pool ops requires 1 input.")},sy=(r,e,n)=>{let t=e.format==="NHWC",o=r.dims.slice();t&&o.splice(1,0,o.pop());let i=Object.hasOwnProperty.call(e,"dilations"),s=e.kernelShape.slice(),a=e.strides.slice(),u=i?e.dilations.slice():[],l=e.pads.slice();Pn.adjustPoolAttributes(n,o,s,a,u,l);let d=Pn.computePoolOutputShape(n,o,a,u,s,l,e.autoPad),h=Object.assign({},e);i?Object.assign(h,{kernelShape:s,strides:a,pads:l,dilations:u,cacheKey:e.cacheKey}):Object.assign(h,{kernelShape:s,strides:a,pads:l,cacheKey:e.cacheKey});let m=d.slice();return m.push(m.splice(1,1)[0]),[h,t?m:d]},uy=(r,e)=>{let n=e.format==="NHWC",t=q.size(r),o=q.size(e.kernelShape),i=[{type:"uint32",data:t},{type:"uint32",data:o}],s=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(e.kernelShape.length<=2){let a=e.kernelShape[e.kernelShape.length-1],u=e.strides[e.strides.length-1],l=e.pads[e.pads.length/2-1],d=e.pads[e.pads.length-1],h=!!(l+d);i.push({type:"uint32",data:a},{type:"uint32",data:u},{type:"uint32",data:l},{type:"uint32",data:d}),s.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let m=!1;if(e.kernelShape.length===2){let b=e.kernelShape[e.kernelShape.length-2],y=e.strides[e.strides.length-2],x=e.pads[e.pads.length/2-2],A=e.pads[e.pads.length-2];m=!!(x+A),i.push({type:"uint32",data:b},{type:"uint32",data:y},{type:"uint32",data:x},{type:"uint32",data:A}),s.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[i,s,!0,h,m]}else{if(n)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let a=q.computeStrides(e.kernelShape);i.push({type:"uint32",data:a},{type:"uint32",data:e.pads},{type:"uint32",data:e.strides}),s.push({name:"kernelStrides",type:"u32",length:a.length},{name:"pads",type:"u32",length:e.pads.length},{name:"strides",type:"u32",length:e.strides.length});let u=e.pads.reduce((l,d)=>l+d);return[i,s,!!u,!1,!1]}},ly=(r,e,n,t,o,i,s,a,u,l,d,h)=>{let m=o.format==="NHWC",b=e.type.value,y=ae("output",e.type.tensor,t);if(o.kernelShape.length<=2){let x="",A="",I="",$=n-(m?2:1);if(d?x=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${$}] = indices[${$}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${$}] < 0 || xIndices[${$}]
                      >= uniforms.x_shape[${$}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`:x=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${$}] = indices[${$}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`,o.kernelShape.length===2){let E=n-(m?3:2);h?A=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${E}] = indices[${E}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${E}] < 0 || xIndices[${E}] >= uniforms.x_shape[${E}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:A=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${E}] = indices[${E}] * uniforms.sh - uniforms.phStart + j;
                `,I=`
              }
            `}return`
            ${r.registerUniforms(u).declareVariables(e,y)}

            ${r.mainStart()}
              ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${y.offsetToIndices("global_idx")};
              var xIndices = ${y.offsetToIndices("global_idx")};

              var value = ${b}(${a});
              var pad = 0;
              ${A}
              ${x}
              ${I}
              ${s}

              output[global_idx] = value;
            }`}else{if(m)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let x=o.kernelShape.length,A=o.pads.length,I="";return l?I=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${e.indicesToOffset("xIndices")}];
                ${i}
              }`:I=`
              }
              let x_val = x[${e.indicesToOffset("xIndices")}];
              ${i}
            `,`
            ${r.registerUniforms(u).declareVariables(e,y)}

            ${r.mainStart()}
              ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${y.offsetToIndices("global_idx")};
              var xIndices = ${y.offsetToIndices("global_idx")};

              var offsets: array<u32, ${x}>;

              var value = ${b}(${a});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${x-1}u; j++) {
                  offsets[j] = offset / ${Te("uniforms.kernelStrides","j",x)};
                  offset -= offsets[j] * ${Te("uniforms.kernelStrides","j",x)};
                }
                offsets[${x-1}] = offset;

                isPad = false;
                for (var j = ${n-x}u; j < ${n}u; j++) {
                  xIndices[j] = indices[j] * ${Te("uniforms.strides",`j - ${n-x}u`,x)}
                    + offsets[j - ${n-x}u] - ${Te("uniforms.pads","j - 2u",A)};
                  ${I}
              }
              ${s}

              output[global_idx] = value;
            }`}},dy=r=>`${r.format};${r.ceilMode};${r.autoPad};${r.kernelShape.length}`,lT=r=>`${dy(r)};${r.countIncludePad}`,dT=r=>`${dy(r)};${r.storageOrder};${r.dilations}`,cy=r=>({format:r.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][r.auto_pad],ceilMode:r.ceil_mode,kernelShape:r.kernel_shape,strides:r.strides,pads:r.pads}),fy=(r,e,n,t)=>{let[o,i]=sy(e,t,n),s=H("x",e.dataType,e.dims.length),a=s.type.value,u="value += x_val;",l="";o.countIncludePad?l+=`value /= ${a}(uniforms.kernelSize);`:l+=`value /= ${a}(i32(uniforms.kernelSize) - pad);`;let[d,h,m,b,y]=uy(i,o);d.push(...ee(e.dims),...ee(i));let x=["rank"];return{name:r,shaderCache:{hint:`${t.cacheKey};${m};${b};${y}`,inputDependencies:x},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(q.size(i)/64)},programUniforms:d}),getShaderSource:A=>ly(A,s,e.dims.length,i.length,o,u,l,0,h,m,b,y)}},py=r=>{let e=r.count_include_pad!==0,n=cy(r);if(n.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let t={countIncludePad:e,...n,cacheKey:""};return{...t,cacheKey:lT(t)}},hy=(r,e)=>{qa(r.inputs),r.compute(fy("AveragePool",r.inputs[0],!1,e))},my={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},gy=r=>{let e=r.format;return{format:e,...my,cacheKey:e}},by=(r,e)=>{qa(r.inputs),r.compute(fy("GlobalAveragePool",r.inputs[0],!0,e))},yy=(r,e,n,t)=>{let[o,i]=sy(e,t,n),s=`
      value = max(x_val, value);
    `,a="",u=H("x",e.dataType,e.dims.length),l=["rank"],[d,h,m,b,y]=uy(i,o);return d.push(...ee(e.dims),...ee(i)),{name:r,shaderCache:{hint:`${t.cacheKey};${m};${b};${y}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(q.size(i)/64)},programUniforms:d}),getShaderSource:x=>ly(x,u,e.dims.length,i.length,o,s,a,-1e5,h,m,b,y)}},vy=(r,e)=>{qa(r.inputs),r.compute(yy("MaxPool",r.inputs[0],!1,e))},wy=r=>{let e=r.storage_order,n=r.dilations,t=cy(r);if(e!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let o={storageOrder:e,dilations:n,...t,cacheKey:""};return{...o,cacheKey:dT(o)}},xy=r=>{let e=r.format;return{format:e,...my,cacheKey:e}},Ty=(r,e)=>{qa(r.inputs),r.compute(yy("GlobalMaxPool",r.inputs[0],!0,e))}});var fT,pT,_y,Sy=R(()=>{"use strict";Ct();ut();Me();fT=(r,e,n)=>{let t=r===e,o=r<e&&n<0,i=r>e&&n>0;if(t||o||i)throw new Error("Range these inputs' contents are invalid.")},pT=(r,e,n,t)=>{let o=Math.abs(Math.ceil((e-r)/n)),i=[o],s=o,a=Yt(t),u=[{type:"uint32",data:s},{type:a,data:r},{type:a,data:n},...ee(i)],l=d=>{let h=ae("output",t,i.length),m=h.type.value,b=[{name:"outputSize",type:"u32"},{name:"start",type:m},{name:"delta",type:m}];return`
        ${d.registerUniforms(b).declareVariables(h)}
        ${d.mainStart()}
        ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${m}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${t}`},getShaderSource:l,getRunData:()=>({outputs:[{dims:i,dataType:t}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:u})}},_y=r=>{let e=0,n=0,t=0;r.inputs[0].dataType===6?(e=r.inputs[0].getInt32Array()[0],n=r.inputs[1].getInt32Array()[0],t=r.inputs[2].getInt32Array()[0]):r.inputs[0].dataType===1&&(e=r.inputs[0].getFloat32Array()[0],n=r.inputs[1].getFloat32Array()[0],t=r.inputs[2].getFloat32Array()[0]),xe.webgpu.validateInputContent&&fT(e,n,t),r.compute(pT(e,n,t,r.inputs[0].dataType),{inputs:[]})}});var hT,mT,gT,bT,yT,vT,wT,xT,TT,$T,_T,Iy,ST,IT,AT,OT,ET,Ay,Oy,Ey=R(()=>{"use strict";Fe();xt();Me();hT=(r,e)=>{if(r.every(n=>n>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),r.length>0){if(e.mode==="linear"){if(!(r.length===2||r.length===3||r.length===4&&r[0]===1&&r[1]===1||r.length===4&&r[0]===1&&r[3]===1||r.length===5&&r[0]===1&&r[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(e.mode==="cubic"&&!(r.length===2||r.length===4&&r[0]===1&&r[1]===1||r.length===4&&r[0]===1&&r[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},mT=(r,e,n)=>{e.every(o=>o>=0&&o<n||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let t=new Array(n).fill(1);return e.forEach((o,i)=>t[o]=r[i]),t},gT=(r,e,n,t,o,i)=>{let[s,a,u]=n>10?[1,2,3]:[-1,r.length>1?1:-1,-1],l=r[0].dims.length;if(s>0&&r.length>s&&r[s].dims.length>0)r[s].getFloat32Array().forEach(d=>i.push(d));else if(e.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(a>0&&r.length>a&&r[a].dims.length>0){if(r[a].getFloat32Array().forEach(d=>t.push(d)),t.length!==0&&t.length!==l&&n>=18&&t.length!==e.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");hT(t,e),e.axes.length>0&&mT(t,e.axes,l).forEach((d,h)=>t[h]=d)}if(u>0&&r.length>u&&(r[u].getBigInt64Array().forEach(d=>o.push(Number(d))),o.length!==l||n>=18&&o.length===e.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(e.axes.length>0){if(t.length!==e.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(o.length!==e.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof t<"u"&&typeof o<"u"&&t.length>0&&o.length>l)throw new Error("Resize requires only of scales or sizes to be specified")},bT=(r,e)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${e} { `+(()=>{switch(r){case"asymmetric":return`return ${e}(xResized) / ${e}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${e}(xResized) + 0.5) / ${e}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${e}(xResized) + 0.5) / ${e}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${e}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${e}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${e}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${e}(roiStart) * ${e}(lengthOriginal - 1) +
                        (${e}(xResized) * ${e}(roiEnd - roiStart) * ${e}(lengthOriginal - 1)) /
                        ${e}(lengthResized - 1);
                  } else {
                    return 0.5 * ${e}(roiStart + roiEnd) * ${e}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${e}xScale * ${e}(lengthResized);
                  const adjustment = ${e}(lengthResized) / outputWidth;
                  const center = ${e}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${e}(xResized) + 0.5) / ${e}(xScale)) - 0.5;`;case"half_pixel":return`return ((${e}(xResized) + 0.5) / ${e}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${r} is not supported`)}})()+"}",yT=(r,e,n)=>`fn getNearestPixelFromOriginal(xOriginal: ${n}, isDownSample: bool) -> ${n} {`+(()=>{switch(r){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(e<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${r} is not supported`)}})()+"}",vT=(r,e,n)=>{let t=new Array(n).fill(0).concat(new Array(n).fill(1)),o=r.length===0?t:r.slice();return e.length>0?(e.forEach((i,s)=>{t[i]=o[s],t[s+n]=o[e.length+s]}),t):o},wT=(r,e,n,t)=>{let o=[];if(n.length>0)if(t.length>0){if(r.forEach(i=>o.push(i)),Math.max(...t)>r.length)throw new Error("axes is out of bound");t.forEach((i,s)=>o[i]=n[s])}else n.forEach(i=>o.push(i));else{if(e.length===0)throw new Error("Resize requires either scales or sizes.");o=r.map((i,s)=>Math.round(i*e[s]))}return o},xT=(r,e,n)=>{let t=(()=>{switch(n.keepAspectRatioPolicy){case"not_larger":return n.axes.length>0?Math.min(...n.axes.map(i=>e[i]),Number.MAX_VALUE):Math.min(...e,Number.MAX_VALUE);case"not_smaller":return n.axes.length>0?Math.max(...n.axes.map(i=>e[i]),Number.MIN_VALUE):Math.max(...e,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${n.keepAspectRatioPolicy} is not supported`)}})();e.fill(1,0,e.length);let o=r.slice();return n.axes.length>0?(n.axes.forEach(i=>e[i]=t),n.axes.forEach(i=>o[i]=Math.round(r[i]*e[i]))):(e.fill(t,0,e.length),o.forEach((i,s)=>o[s]=Math.round(i*e[s]))),o},TT=(r,e,n,t,o)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${r.type.indices}) -> array<${r.type.value}, ${n.length}> {
      var original_indices: array<${r.type.value}, ${n.length}>;
      for (var i:u32 = 0; i < ${n.length}; i++) {
        var output_index = ${r.indicesGet("output_indices","i")};
        var scale = ${Te("uniforms.scales","i",t)};
        var roi_low = ${Te("uniforms.roi","i",o)};
        var roi_hi = ${Te("uniforms.roi",`i + ${e.length}`,o)};
        if (scale == 1.0) {
          original_indices[i] = ${r.type.value}(output_index);
        } else {
          var input_shape_i = ${Te("uniforms.input_shape","i",e.length)};
          var output_shape_i = ${Te("uniforms.output_shape","i",n.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,$T=(r,e,n,t,o,i,s)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> ${r.type.indices} {
      var input_indices: ${r.type.indices};
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${Te("uniforms.scales","i",o)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${Te("uniforms.roi","i",i)};
          var roi_hi = ${Te("uniforms.roi",`i + ${n.length}`,i)};
          var input_shape_i = ${Te("uniforms.input_shape","i",n.length)};
          var output_shape_i = ${Te("uniforms.output_shape","i",t.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${s} || (original_idx >= 0 && original_idx < ${e.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${e.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${r.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,_T=(r,e)=>`
    fn checkInputIndices(input_indices: ${r.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${e.length}; i++) {
        var input_index = ${r.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${Te("uniforms.input_shape","i",e.length)}) {
          return false;
        }
      }
      return true;
    }`,Iy=(r,e,n,t)=>r.rank>t?`
    ${r.indicesSet("input_indices",e,"channel")};
    ${r.indicesSet("input_indices",n,"batch")};
`:"",ST=(r,e,n,t,o)=>{let[s,a,u,l]=n.length===2?[-1,0,1,-1]:[0,2,3,1],d=r.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {
      var input_indices: ${r.type.indices};
      ${r.indicesSet("input_indices",a,`max(0, min(row, ${n[a]} - 1))`)};
      ${r.indicesSet("input_indices",u,`max(0, min(col, ${n[u]} - 1))`)};
      ${Iy(r,l,s,2)}
      return ${r.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${e.type.indices}) -> ${d} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${d} = originalIndices[${a}];
      var col:${d} = originalIndices[${u}];
      ${t?`if (row < 0 || row > (${n[a]} - 1) || col < 0 || col > (${n[u]} - 1)) {
        return ${o};
      }`:""};
      row = max(0, min(row, ${n[a]} - 1));
      col = max(0, min(col, ${n[u]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${n.length>2?`u32(originalIndices[${l}])`:"0"};
      var batch: u32 =  ${n.length>2?`u32(originalIndices[${s}])`:"0"};
      var x11: ${d} = getInputValue(batch, channel, row1, col1);
      var x12: ${d} = getInputValue(batch, channel, row1, col2);
      var x21: ${d} = getInputValue(batch, channel, row2, col1);
      var x22: ${d} = getInputValue(batch, channel, row2, col2);
      var dx1: ${d} = abs(row - ${d}(row1));
      var dx2: ${d} = abs(${d}(row2) - row);
      var dy1: ${d} = abs(col - ${d}(col1));
      var dy2: ${d} = abs(${d}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},IT=(r,e,n,t,o,i,s,a,u,l)=>{let d=n.length===2,h=!0,[m,b]=d?[0,1]:h?[2,3]:[1,2],y=r.type.value,x=A=>{let I=A===m?"row":"col";return`
      fn ${I}CubicInterpolation(input_indices: ${r.type.indices}, output_indices: ${e.type.indices}) -> ${y} {
        var output_index = ${e.indicesGet("output_indices",A)};
        var originalIdx: ${y} = getOriginalCoordinateFromResizedCoordinate(output_index, ${o[A]},
        ${t[A]}, ${n[A]}, ${i[A]}, ${i[A]} + ${n.length});
        var fractOriginalIdx: ${y} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${a} && (originalIdx < 0 || originalIdx > (${n[A]} - 1))) {
          return ${u};
        }
        var data: array<${y}, 4> = array<${y}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${I}: ${y} = originalIdx + ${y}(i);
          if (${I} < 0 || ${I} >= ${n[A]}) {
            ${(()=>l?`coefs[i + 1] = 0.0;
                        continue;`:a?`return ${u};`:`${I} = max(0, min(${I}, ${n[A]} - 1));`)()};
          }
        var input_indices_copy: ${r.type.indices} = input_indices;
          ${r.indicesSet("input_indices_copy",A,`u32(${I})`)};
          data[i + 1] = ${A===m?r.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${x(m)};
    ${x(b)};
  fn getCubicInterpolationCoefs(s: ${y}) -> array<${y}, 4> {
    var absS = abs(s);
    var coeffs: array<${y}, 4> = array<${y}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${y} = 1.0 - absS;
    var twoMinusAbsS: ${y} = 2.0 - absS;
    var onePlusAbsS: ${y} = 1.0 + absS;
    coeffs[0] = ((${s} * onePlusAbsS - 5 * ${s}) * onePlusAbsS + 8 * ${s}) * onePlusAbsS - 4 * ${s};
    coeffs[1] = ((${s} + 2) * absS - (${s} + 3)) * absS * absS + 1;
    coeffs[2] = ((${s} + 2) * oneMinusAbsS - (${s} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${s} * twoMinusAbsS - 5 * ${s}) * twoMinusAbsS + 8 * ${s}) * twoMinusAbsS - 4 * ${s};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${y}, 4>, coefs: array<${y}, 4>) -> ${y} {
    var coefsSum: ${y} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${e.type.indices}) -> ${y} {
    var input_indices: ${r.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},AT=(r,e,n,t,o)=>{let[s,a,u,l,d]=n.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],h=r.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${h} {
      var input_indices: ${r.type.indices};
      ${r.indicesSet("input_indices",a,`max(0, min(depth, ${n[a]} - 1))`)};
      ${r.indicesSet("input_indices",u,`max(0, min(height, ${n[u]} - 1))`)};
      ${r.indicesSet("input_indices",l,`max(0, min(width, ${n[l]} - 1))`)};
      ${Iy(r,d,s,3)}
      return ${r.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${e.type.indices}) -> ${h} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${h} = originalIndices[${a}];
      var height:${h} = originalIndices[${u}];
      var width:${h} = originalIndices[${l}];
      ${t?`if (depth < 0 || depth > (${n[a]} - 1) || height < 0 || height > (${n[u]} - 1) || width < 0 || (width > ${n[l]} - 1)) {
      return ${o};
        }`:""};

    depth = max(0, min(depth, ${n[a]} - 1));
      height = max(0, min(height, ${n[u]} - 1));
      width = max(0, min(width, ${n[l]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${n.length>3?`u32(originalIndices[${d}])`:"0"};
      var batch: u32 =  ${n.length>3?`u32(originalIndices[${s}])`:"0"};

      var x111: ${h} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${h} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${h} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${h} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${h} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${h} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${h} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${h} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${h} = abs(depth - ${h}(depth1));
      var dx2: ${h} = abs(${h}(depth2) - depth);
      var dy1: ${h} = abs(height - ${h}(height1));
      var dy2: ${h} = abs(${h}(height2) - height);
      var dz1: ${h} = abs(width - ${h}(width1));
      var dz2: ${h} = abs(${h}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},OT=(r,e,n,t,o,i)=>{let s=r.dims,a=vT(i,e.axes,s.length),u=wT(s,t,o,e.axes),l=t.slice();t.length===0&&(l=s.map(($,O)=>$===0?1:u[O]/$),e.keepAspectRatioPolicy!=="stretch"&&(u=xT(s,l,e)));let d=ae("output",r.dataType,u.length),h=H("input",r.dataType,s.length),m=q.size(u),b=s.length===u.length&&s.every(($,O)=>$===u[O]),y=e.coordinateTransformMode==="tf_crop_and_resize",x=e.extrapolationValue,A=h.type.value,I=$=>`
      ${b?"":`
      ${bT(e.coordinateTransformMode,A)};
      ${(()=>{switch(e.mode){case"nearest":return`
              ${_T(h,s)};
              ${yT(e.nearestMode,n,A)};
              ${$T(h,d,s,u,l.length,a.length,y)};
              `;case"linear":return`
              ${TT(d,s,u,l.length,a.length)};
              ${(()=>{if(s.length===2||s.length===4)return`${ST(h,d,s,y,x)}`;if(s.length===3||s.length===5)return`${AT(h,d,s,y,x)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(s.length===2||s.length===4)return`${IT(h,d,s,u,l,a,e.cubicCoeffA,y,e.extrapolationValue,e.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${$.registerUniform("output_size","u32").registerUniform("scales","f32",l.length).registerUniform("roi","f32",a.length).declareVariables(h,d)}
      ${$.mainStart()}
        ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${b?"output[global_idx] = input[global_idx];":`
        let output_indices = ${d.offsetToIndices("global_idx")};
        var input_indices: ${h.type.indices};
        ${(()=>{switch(e.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${h.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${e.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${s.length===2||s.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${e.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${e.cacheKey}|${n}|${l.length>0?l:""}|${o.length>0?o:""}|${a.length>0?a:""}|${b}|${s}`,inputDependencies:["rank"]},getShaderSource:I,getRunData:()=>({outputs:[{dims:u,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:[{type:"uint32",data:m},{type:"float32",data:l},{type:"float32",data:a},...ee(s),...ee(u)]})}},ET=r=>{let e=r.customDataBuffer;return new Uint32Array(e,e.byteOffset,1)[0]},Ay=(r,e)=>{let n=[],t=[],o=[],i=ET(r);if(e.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");gT(r.inputs,e,i,n,t,o),r.compute(OT(r.inputs[0],e,i,n,t,o),{inputs:[0]})},Oy=r=>{let e=r.antialias,n=r.axes,t=r.coordinateTransformMode,o=r.cubicCoeffA,i=r.excludeOutside!==0,s=r.extrapolationValue,a=r.keepAspectRatioPolicy,u=r.mode,l=r.nearestMode===""?"simple":r.nearestMode;return Pe({antialias:e,axes:n,coordinateTransformMode:t,cubicCoeffA:o,excludeOutside:i,extrapolationValue:s,keepAspectRatioPolicy:a,mode:u,nearestMode:l})}});var CT,PT,Cy,Py,ky=R(()=>{"use strict";ut();Fe();xt();Me();CT=r=>{if(!r||r.length<3)throw new Error("layerNorm requires at least 3 inputs.");let e=r[0],n=r[1],t=r[2];if(e.dataType!==n.dataType||e.dataType!==t.dataType)throw new Error("All inputs must have the same data type");if(e.dims.length!==3&&e.dims.length!==2)throw new Error("Input must be 2D or 3D");if(n.dims.length!==3&&n.dims.length!==2)throw new Error("Skip must be 2D or 3D");let o=e.dims[e.dims.length-1],i=e.dims[e.dims.length-2];if(n.dims[n.dims.length-1]!==o)throw new Error("Skip must have the same hidden size as input");if(n.dims[n.dims.length-2]!==i)throw new Error("Skip must have the same sequence length as input");if(t.dims.length!==1)throw new Error("Gamma must be 1D");if(t.dims[t.dims.length-1]!==o)throw new Error("Gamma must have the same hidden size as input");if(r.length>3){let s=r[3];if(s.dims.length!==1)throw new Error("Beta must be 1D");if(s.dims[s.dims.length-1]!==o)throw new Error("Beta must have the same hidden size as input")}if(r.length>4){let s=r[4];if(s.dims.length!==1)throw new Error("Bias must be 1D");if(s.dims[s.dims.length-1]!==o)throw new Error("Bias must have the same hidden size as input")}},PT=(r,e,n,t)=>{let o=r[0].dims,i=q.size(o),s=o,a=i,u=o.slice(-1)[0],l=t?o.slice(0,-1).concat(1):[],d=r.length>3,h=r.length>4,m=t&&n>1,b=t&&n>2,y=n>3,x=bt(u),A=[H("x",r[0].dataType,r[0].dims,x),H("skip",r[1].dataType,r[1].dims,x),H("gamma",r[2].dataType,r[2].dims,x)];d&&A.push(H("beta",r[3].dataType,r[3].dims,x)),h&&A.push(H("bias",r[4].dataType,r[4].dims,x)),A.push(ae("output",r[0].dataType,s,x)),m&&A.push(ae("meanOutput",1,l)),b&&A.push(ae("invStdOutput",1,l)),y&&A.push(ae("inputSkipBiasSum",r[0].dataType,s,x));let I=gt(r[0].dataType),$=E=>`
      const hiddenSize: f32 = ${u};
      const hiddenSizeVectorized: u32 = ${u/x};
      const epsilon: f32 = ${e.epsilon};

      ${E.declareVariables(...A)}

      ${E.mainStart()}
        ${E.guardAgainstOutOfBoundsWorkgroupSizes(a/u)}
        let offset = global_idx * hiddenSizeVectorized;
        var sum = ${kt("f32",x)};
        var squareSum = ${kt("f32",x)};
        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {
          let skipValue = skip[offset + i];
          let biasValue = ${h?"bias[i]":"0.0"};
          let inputValue = x[offset + i];
          let value = inputValue + skipValue + biasValue;
          ${y?"inputSkipBiasSum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32Value = ${vr(I,x,"value")};
          sum += f32Value;
          squareSum += f32Value * f32Value;
        }
        let mean = ${Xt("sum",x)} / hiddenSize;
        let invStdDev = inverseSqrt(${Xt("squareSum",x)} / hiddenSize - mean * mean + epsilon);
        ${m?"meanOutput[global_idx] = mean;":""}
        ${b?"invStdOutput[global_idx] = invStdDev;":""}
        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {
          output[offset + i] = (output[offset + i] - ${I}(mean)) * ${I}(invStdDev) * gamma[i]
           + ${d?"beta[i]":"0.0"};
        }
      }`,O=[{dims:s,dataType:r[0].dataType}];return n>1&&O.push({dims:l,dataType:1}),n>2&&O.push({dims:l,dataType:1}),n>3&&O.push({dims:o,dataType:r[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:e.cacheKey},getShaderSource:$,getRunData:()=>({outputs:O,dispatchGroup:{x:Math.ceil(a/u/64)}})}},Cy=(r,e)=>{CT(r.inputs);let t=[0];r.outputCount>1&&t.push(-3),r.outputCount>2&&t.push(-3),r.outputCount>3&&t.push(3),r.compute(PT(r.inputs,e,r.outputCount,!1),{outputs:t})},Py=r=>{let e=r.epsilon;return Pe({epsilon:e})}});var kT,ja,DT,Dy,BT,RT,By,Ry,zy=R(()=>{"use strict";ut();Fe();xt();Me();kT=(r,e)=>{if(!r||r.length<1)throw new Error("too few inputs");if(e.axes.length!==0){if(e.axes.length!==e.starts.length||e.axes.length!==e.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(e.starts.length!==e.ends.length)throw new Error("starts and ends must have the same length");r.slice(1).forEach((n,t)=>{if(r[t+1].dataType!==6&&r[t+1].dataType!==7)throw new Error(`Input ${t} must be an array of int32 or int64`)})},ja=(r,e)=>{let n=[];if(r.length>e)if(r[e].dataType===7)r[e].getBigInt64Array().forEach(t=>n.push(Number(t)));else if(r[e].dataType===6)r[e].getInt32Array().forEach(t=>n.push(Number(t)));else throw new Error(`Input ${e} must be an array of int32 or int64`);return n},DT=(r,e)=>{if(r.length>1){let n=ja(r,1),t=ja(r,2),o=ja(r,3);return o.length===0&&(o=[...Array(r[0].dims.length).keys()]),Pe({starts:n,ends:t,axes:o})}else return e},Dy=(r,e,n,t,o)=>{let i=r;return r<0&&(i+=n[t[e]]),o[e]<0?Math.max(0,Math.min(i,n[t[e]]-1)):Math.max(0,Math.min(i,n[t[e]]))},BT=(r,e,n)=>`fn calculateInputIndices(output_indices: ${e.type.indices}) -> ${r.type.indices} {
          var input_indices: ${r.type.indices};
          var carry = 0u;
          for (var i = ${n.length}; i >= 0; i--) {
            let input_shape_i = ${Te("uniforms.input_shape","i",n.length)};
            let steps_i = ${Te("uniforms.steps","i",n.length)};
            let signs_i = ${Te("uniforms.signs","i",n.length)};
            let starts_i = ${Te("uniforms.starts","i",n.length)};
            var output_index = ${e.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${r.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,RT=(r,e)=>{let n=r[0].dims,t=q.size(n),o=e.axes.length>0?q.normalizeAxes(e.axes,n.length):[...Array(n.length).keys()],i=ja(r,4);i.forEach(I=>I!==0||(()=>{throw new Error("step cannot be 0")})),i.length===0&&(i=Array(o.length).fill(1));let s=e.starts.map((I,$)=>Dy(I,$,n,o,i)),a=e.ends.map((I,$)=>Dy(I,$,n,o,i));if(o.length!==s.length||o.length!==a.length)throw new Error("start, ends and axes should have the same number of elements");if(o.length!==n.length)for(let I=0;I<n.length;++I)o.includes(I)||(s.splice(I,0,0),a.splice(I,0,n[I]),i.splice(I,0,1));let u=i.map(I=>Math.sign(I));i.forEach((I,$,O)=>{if(I<0){let E=(a[$]-s[$])/I,F=s[$],z=F+E*i[$];s[$]=z,a[$]=F,O[$]=-I}});let l=n.slice(0);o.forEach((I,$)=>{l[I]=Math.ceil((a[I]-s[I])/i[I])});let d={dims:l,dataType:r[0].dataType},h=ae("output",r[0].dataType,l.length),m=H("input",r[0].dataType,r[0].dims.length),b=q.size(l),y=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:s.length},{name:"signs",type:"i32",length:u.length},{name:"steps",type:"u32",length:i.length}],x=[{type:"uint32",data:b},{type:"uint32",data:s},{type:"int32",data:u},{type:"uint32",data:i},...ee(r[0].dims),...ee(l)],A=I=>`
      ${I.registerUniforms(y).declareVariables(m,h)}
        ${BT(m,h,n)}
        ${I.mainStart()}
          ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${h.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${h.setByOffset("global_idx",m.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${u.length}_${s.length}_${i.length}`,inputDependencies:["rank"]},getShaderSource:A,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(t/64)},programUniforms:x})}},By=(r,e)=>{kT(r.inputs,e);let n=DT(r.inputs,e);r.compute(RT(r.inputs,n),{inputs:[0]})},Ry=r=>{let e=r.starts,n=r.ends,t=r.axes;return Pe({starts:e,ends:n,axes:t})}});var zT,LT,Ly,My,Ny=R(()=>{"use strict";Fe();xt();Me();zT=r=>{if(!r||r.length!==1)throw new Error("Softmax op requires 1 input.")},LT=(r,e)=>{let n=r.dims,t=q.size(n),o=64,i=e.axis;if(i<0&&(i=n.length+i),i<n.length-1)throw new Error("softmax only supports last axis for now.");let s=n[i],a=t/s,u=bt(s),l=s/u,d=(A,I)=>I===4?`max(max(${A}.x, ${A}.y), max(${A}.z, ${A}.w))`:I===2?`max(${A}.x, ${A}.y)`:I===3?`max(max(${A}.x, ${A}.y), ${A}.z)`:A,h=H("x",r.dataType,r.dims,u),m=ae("result",r.dataType,r.dims,u),b=h.type.value,y=gt(r.dataType)==="f32"?`var threadMax = ${b}(-3.402823e+38f);`:`var threadMax = ${b}(-65504.0h);`,x=A=>`
      var<workgroup> rowMaxShared : ${b};
      var<workgroup> rowSumShared : ${b};
      var<workgroup> threadShared : array<${b}, ${o}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${b} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${b}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${A.registerUniform("packedCols","i32").declareVariables(h,m)}
      ${A.mainStart()}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${o};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${y}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${b}(${d("threadShared[0]",u)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${b}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${b}(${Xt("threadShared[0]",u)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`;return{name:"Softmax",shaderCache:{hint:`${u}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:n,dataType:r.dataType}],dispatchGroup:{x:a},programUniforms:[{type:"uint32",data:l}]}),getShaderSource:x}},Ly=(r,e)=>{zT(r.inputs),r.compute(LT(r.inputs[0],e))},My=r=>Pe({axis:r.axis})});var MT,NT,FT,VT,UT,Fy,Vy,Uy=R(()=>{"use strict";Fe();xt();Me();MT=r=>{if(!r||r.length<1)throw new Error("too few inputs")},NT=(r,e)=>{let n=[],t=e.numOutputs;return r[1].dims[0]>0&&(r[1].getBigInt64Array().forEach(o=>n.push(Number(o))),t=n.length),Pe({numOutputs:t,axis:e.axis,splitSizes:n})},FT=r=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${r}u; i += 1u ) {
    if (index < ${Te("uniforms.size_in_split_axis","i",r)}) {
        return i;
    }
    }
    return ${r}u;
}`,VT=r=>{let e=r.length,n=[];for(let t=0;t<e;++t){let o=r[t].setByIndices("indices","input[global_idx]");e===1?n.push(o):t===0?n.push(`if (output_number == ${t}u) { ${o} }`):t===e-1?n.push(`else { ${o} }`):n.push(`else if (output_number == ${t}) { ${o} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${r[0].type.indices}, global_idx: u32) {
        ${n.join(`
`)}
      }`},UT=(r,e)=>{let n=r[0].dims,t=q.size(n),o=r[0].dataType,i=q.normalizeAxis(e.axis,n.length),s=new Array(e.numOutputs),a=H("input",o,n),u=new Array(e.numOutputs),l=[],d=[],h=0,m=[{type:"uint32",data:t}];for(let y=0;y<e.numOutputs;y++){h+=e.splitSizes[y],u[y]=h;let x=n.slice();x[e.axis]=e.splitSizes[y],d.push(x),s[y]=ae(`output${y}`,o,x),l.push({dims:d[y],dataType:r[0].dataType})}m.push({type:"uint32",data:u}),m.push(...ee(n)),d.forEach(y=>m.push(...ee(y)));let b=y=>`
  ${y.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",u.length).declareVariables(a,...s)}
  ${FT(u.length)}
  ${VT(s)}

  ${y.mainStart()}
    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${a.offsetToIndices("global_idx")};
    var index = ${a.indicesGet("indices",i)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${Te("uniforms.size_in_split_axis","output_number - 1u",u.length)};
      ${a.indicesSet("indices",i,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:e.cacheKey,inputDependencies:["rank"]},getShaderSource:b,getRunData:()=>({outputs:l,dispatchGroup:{x:Math.ceil(t/64)},programUniforms:m})}},Fy=(r,e)=>{MT(r.inputs);let n=r.inputs.length===1?e:NT(r.inputs,e);r.compute(UT(r.inputs,n),{inputs:[0]})},Vy=r=>{let e=r.axis,n=r.splitSizes,t=r.numOutputs<0?n.length:r.numOutputs;if(t!==n.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Pe({axis:e,numOutputs:t,splitSizes:n})}});var Gy,GT,WT,HT,Wy,Hy=R(()=>{"use strict";ut();Fe();Me();Gy=r=>Array.from(r.getBigInt64Array(),Number),GT=r=>{if(!r||r.length!==2)throw new Error("Tile requires 2 inputs.");if(r[0].dataType!==1&&r[0].dataType!==6&&r[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(r[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(r[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Gy(r[1]).length!==r[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},WT=(r,e)=>{let n=[];for(let t=0;t<r.length;++t)n.push(r[t]*e[t]);return n},HT=r=>{let e=r[0].dims,n=Gy(r[1]),t=WT(e,n),o=q.size(t),i=r[0].dataType,s=H("input",i,e.length),a=ae("output",i,t.length),u=l=>`
      const inputShape = ${s.indices(...e)};
      ${l.registerUniform("output_size","u32").declareVariables(s,a)}
      ${l.mainStart()}
      ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${a.offsetToIndices("global_idx")};
      var input_indices: ${s.type.indices};
      for (var i = 0; i < ${e.length}; i++) {
        let input_dim_i = ${s.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${a.indicesGet("output_indices","i")}  % input_dim_i;

        ${s.indicesSet("input_indices","i","input_dim_value")}
      }
      ${a.setByOffset("global_idx",s.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${n}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:"uint32",data:o},...ee(r[0].dims),...ee(t)]}),getShaderSource:u}},Wy=r=>{GT(r.inputs),r.compute(HT(r.inputs),{inputs:[0]})}});var qT,jT,qy,jy=R(()=>{"use strict";ut();Fe();Me();qT=(r,e,n,t,o)=>{let i=ae("output_data",o,n.length,4),s=H("a_data",e[1].dataType,e[1].dims.length,4),a=H("b_data",e[2].dataType,e[2].dims.length,4),u=H("c_data",e[0].dataType,e[0].dims.length,4),l,d=(h,m,b)=>`select(${m}, ${h}, ${b})`;if(!t)l=i.setByOffset("global_idx",d(s.getByOffset("global_idx"),a.getByOffset("global_idx"),u.getByOffset("global_idx")));else{let h=(m,b,y="")=>{let x=`a_data[index_a${b}][component_a${b}]`,A=`b_data[index_b${b}][component_b${b}]`,I=`bool(c_data[index_c${b}] & ${4278190080>>>(3-b)*8}u)`;return`
            let output_indices${b} = ${i.offsetToIndices(`global_idx * 4u + ${b}u`)};
            let offset_a${b} = ${s.broadcastedIndicesToOffset(`output_indices${b}`,i)};
            let offset_b${b} = ${a.broadcastedIndicesToOffset(`output_indices${b}`,i)};
            let offset_c${b} = ${u.broadcastedIndicesToOffset(`output_indices${b}`,i)};
            let index_a${b} = offset_a${b} / 4u;
            let index_b${b} = offset_b${b} / 4u;
            let index_c${b} = offset_c${b} / 4u;
            let component_a${b} = offset_a${b} % 4u;
            let component_b${b} = offset_b${b} % 4u;
            ${m}[${b}] = ${y}(${d(x,A,I)});
          `};o===9?l=`
            var data = vec4<u32>(0);
            ${h("data",0,"u32")}
            ${h("data",1,"u32")}
            ${h("data",2,"u32")}
            ${h("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:l=`
            ${h("output_data[global_idx]",0)}
            ${h("output_data[global_idx]",1)}
            ${h("output_data[global_idx]",2)}
            ${h("output_data[global_idx]",3)}
          `}return`
        ${r.registerUniform("vec_size","u32").declareVariables(u,s,a,i)}
        ${r.mainStart()}
        ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${l}
      }`},jT=r=>{let e=r[1].dims,n=r[2].dims,t=r[0].dims,o=r[1].dataType,i=!(q.areEqual(e,n)&&q.areEqual(n,t)),s=e,a=q.size(e);if(i){let l=Er.calcShape(Er.calcShape(e,n,!1),t,!1);if(!l)throw new Error("Can't perform where op on the given tensors");s=l,a=q.size(s)}let u=Math.ceil(a/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:l=>qT(l,r,s,i,o),getRunData:()=>({outputs:[{dims:s,dataType:o}],dispatchGroup:{x:Math.ceil(a/64/4)},programUniforms:[{type:"uint32",data:u},...ee(t),...ee(e),...ee(n),...ee(s)]})}},qy=r=>{r.compute(jT(r.inputs))}});var Ky,Yy=R(()=>{"use strict";yg();Uu();xg();$g();rb();pb();gb();ju();Cb();Db();Mb();Vb();Wb();jb();Xb();Jb();ey();Yu();oy();ay();$y();Sy();Ra();Ey();ky();zy();Ny();Uy();Hy();oo();Gu();jy();Ky=new Map([["Abs",[_g]],["Acos",[Sg]],["Acosh",[Ig]],["Add",[nb]],["ArgMax",[bg,Vu]],["ArgMin",[gg,Vu]],["Asin",[Ag]],["Asinh",[Og]],["Atan",[Eg]],["Atanh",[Cg]],["Attention",[vg]],["AveragePool",[hy,py]],["BatchNormalization",[wg]],["BiasAdd",[Tg]],["BiasSplitGelu",[tb]],["Cast",[kg,Pg]],["Ceil",[Bg]],["Clip",[Dg]],["Concat",[hb,mb]],["Conv",[Zu,Xu]],["ConvTranspose",[Eb,Ob]],["Cos",[Rg]],["Cosh",[zg]],["CumSum",[Pb,kb]],["Div",[ob]],["Einsum",[zb,Lb]],["Elu",[Lg,Ma]],["Equal",[ib]],["Erf",[Mg]],["Exp",[Ng]],["Expand",[Fb]],["Floor",[Fg]],["FusedConv",[Zu,Xu]],["Gather",[Gb,Ub]],["GatherElements",[qb,Hb]],["Gelu",[Vg]],["Gemm",[Yb,Kb]],["GlobalAveragePool",[by,gy]],["GlobalMaxPool",[Ty,xy]],["Greater",[lb]],["GreaterOrEqual",[cb]],["InstanceNormalization",[Zb]],["LayerNormalization",[Qb]],["LeakyRelu",[Ug,Ma]],["Less",[db]],["LessOrEqual",[fb]],["Log",[eb]],["MatMul",[xb]],["MaxPool",[vy,wy]],["Mul",[ab]],["MultiHeadAttention",[ny,ry]],["Neg",[Wg]],["Not",[Gg]],["Pad",[iy]],["Pow",[sb]],["Range",[_y]],["Reciprocal",[Hg]],["ReduceMin",[dg]],["ReduceMean",[ig]],["ReduceMax",[lg]],["ReduceSum",[fg]],["ReduceProd",[cg]],["ReduceL1",[ag]],["ReduceL2",[sg]],["ReduceLogSum",[hg]],["ReduceLogSumExp",[ug]],["ReduceSumSquare",[pg]],["Relu",[qg]],["Resize",[Ay,Oy]],["Sigmoid",[jg]],["Sin",[Kg]],["Sinh",[Yg]],["Slice",[By,Ry]],["SkipLayerNormalization",[Cy,Py]],["Split",[Fy,Vy]],["Sqrt",[Xg]],["Softmax",[Ly,My]],["Sub",[ub]],["Tan",[Zg]],["Tanh",[Jg]],["ThresholdedRelu",[Qg,Ma]],["Tile",[Wy]],["Transpose",[qm,jm]],["Where",[qy]]])});var Ka,Xy=R(()=>{"use strict";Ct();on();Me();Ka=class{constructor(e){this.backend=e;this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,n){this.repo.set(e,n)}run(e,n,t,o,i){Qt(e.programInfo.name);let s=this.backend.device,a=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2),a.setPipeline(e.computePipeline);let u=[];for(let d of n)u.push({binding:u.length,resource:{buffer:d.buffer}});for(let d of t)u.push({binding:u.length,resource:{buffer:d.buffer}});i&&u.push({binding:u.length,resource:i});let l=s.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:u,label:e.programInfo.name});a.setBindGroup(0,l),a.dispatchWorkgroups(...o),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),er(e.programInfo.name)}dispose(){}build(e,n){Qt(e.name);let t=this.backend.device,o=[];t.features.has("shader-f16")&&o.push("enable f16;");let i=Wm(n),s=e.getShaderSource(i),a=`${o.join(`
`)}
${i.additionalImplementations}
${s}`,u=t.createShaderModule({code:a,label:e.name});at("verbose",()=>`[WebGPU] ${e.name} shader code: ${a}`);let l=t.createComputePipeline({compute:{module:u,entryPoint:"main"},layout:"auto",label:e.name});return er(e.name),{programInfo:e,computePipeline:l}}normalizeDispatchGroupSize(e){let n=typeof e=="number"?e:e.x,t=typeof e=="number"?1:e.y||1,o=typeof e=="number"?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(n<=i&&t<=i&&o<=i)return[n,t,o];let s=n*t*o,a=Math.ceil(Math.sqrt(s));if(a>i){if(a=Math.ceil(Math.cbrt(s)),a>i)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[a,a,a]}else return[a,a,1]}}});var KT,YT,Ya,Zy=R(()=>{"use strict";Ct();ut();on();Nm();Gm();Yy();Xy();KT=(r,e)=>{if(e.length!==r.length)throw new Error(`inputDependencies length ${e.length} is not equal to inputTensors length ${r.length}.`);let n=[];for(let t=0;t<r.length;++t){let o=r[t].dataType;switch(e[t]){case"none":{n.push("");break}case"type":{n.push(`${o}`);break}case"rank":{let i=r[t].dims.length;n.push(`${o};${i}`);break}case"dims":{let i=r[t].dims.join(",");n.push(`${o};${i}`);break}default:throw new Error(`unsupported input dependency: ${e[t]}`)}}return n.join("|")},YT=(r,e,n)=>{let t=r.name;return r.shaderCache?.hint&&(t+="["+r.shaderCache.hint+"]"),t+=":"+n+`:${KT(e,r.shaderCache?.inputDependencies??new Array(e.length).fill("dims"))}`,t},Ya=class{constructor(){this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,n){this.env=e;let t=[],o={requiredLimits:{maxComputeWorkgroupStorageSize:n.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:n.limits.maxStorageBufferBindingSize,maxBufferSize:n.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:n.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:n.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:n.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:n.limits.maxComputeWorkgroupSizeZ},requiredFeatures:t};n.features.has("chromium-experimental-timestamp-query-inside-passes")?t.push("chromium-experimental-timestamp-query-inside-passes"):n.features.has("timestamp-query")&&t.push("timestamp-query"),n.features.has("shader-f16")&&t.push("shader-f16"),this.device=await n.requestDevice(o),this.gpuDataManager=Um(this),this.programManager=new Ka(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Lm(e.logLevel,!!e.debug),this.device.onuncapturederror=i=>{i.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${i.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder(),this.setQueryType(),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE}))),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e={};this.queryType==="at-passes"&&(e.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=this.getCommandEncoder().beginComputePass(e)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Qt(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{let n=new BigUint64Array(e.getMappedRange()),t=this.pendingQueries.get(e);for(let o=0;o<n.length/2;o++){let i=t[o],s=i.kernelId,a=this.kernels.get(s),u=a.kernelType,l=a.kernelName,d=i.programName,h=i.inputTensorViews,m=i.outputTensorViews,b=n[o*2],y=n[o*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=b);let x=Number(b-this.queryTimeBase),A=Number(y-this.queryTimeBase);if(!Number.isSafeInteger(x)||!Number.isSafeInteger(A))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:h.map(I=>({dims:I.dims,dataType:Yt(I.dataType)})),outputsMetadata:m.map(I=>({dims:I.dims,dataType:Yt(I.dataType)})),kernelId:s,kernelType:u,kernelName:l,programName:d,startTime:x,endTime:A});else{let I="";h.forEach((O,E)=>{I+=`input[${E}]: [${O.dims}] | ${Yt(O.dataType)}, `});let $="";m.forEach((O,E)=>{$+=`output[${E}]: [${O.dims}] | ${Yt(O.dataType)}, `}),console.log(`[profiling] kernel "${s}|${u}|${l}|${d}" ${I}${$}execution time: ${A-x} ns`)}Di("GPU",`${d}::${b}::${y}`)}e.unmap(),this.pendingQueries.delete(e)}),er()}run(e,n,t,o,i){Qt(e.name);let s=[];for(let $=0;$<n.length;++$){let O=this.gpuDataManager.get(n[$].data);if(!O)throw new Error(`no GPU data for input: ${n[$].data}`);s[$]=O}let{outputs:a,dispatchGroup:u,programUniforms:l}=e.getRunData(n),d=t.length===0?a.map(($,O)=>O):t;if(d.length!==a.length)throw new Error(`Output size ${d.length} must be equal to ${a.length}.`);let h=[],m=[];for(let $=0;$<a.length;++$){if(!Number.isInteger(d[$])||d[$]<-3||d[$]>=a.length)throw new Error(`Invalid output index: ${d[$]}`);if(d[$]===-3)continue;let O=d[$]===-1,E=d[$]===-2,F=O||E?i(a[$].dataType,a[$].dims):o(d[$],a[$].dataType,a[$].dims),z=this.gpuDataManager.get(F.data);if(!z)throw new Error(`no GPU data for output: ${F.data}`);if(O&&this.temporaryData.push(z),E){let G=this.kernelPersistentData.get(this.currentKernelId);G||(G=[],this.kernelPersistentData.set(this.currentKernelId,G)),G.push(z)}h.push(F),m.push(z)}let b;if(l){let $=0,O=[];l.forEach(G=>{let j=typeof G.data=="number"?[G.data]:G.data;if(j.length===0)return;let X=j.length<=2?j.length*4:16;$=Math.ceil($/X)*X,O.push($),$+=j.length>4?Math.ceil(j.length/4)*16:j.length*4});let E=16;$=Math.ceil($/E)*E;let F=new ArrayBuffer($);l.forEach((G,j)=>{let X=O[j],N=typeof G.data=="number"?[G.data]:G.data;G.type==="int32"?new Int32Array(F,X,N.length).set(N):G.type==="uint32"?new Uint32Array(F,X,N.length).set(N):new Float32Array(F,X,N.length).set(N)});let z=this.gpuDataManager.create($,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(z.buffer,0,F,0,$),this.gpuDataManager.release(z.id),b={offset:0,size:$,buffer:z.buffer}}let y=this.programManager.normalizeDispatchGroupSize(u),x=y[1]===1&&y[2]===1,A=YT(e,n,x),I=this.programManager.getArtifact(A);if(I||(I=this.programManager.build(e,y),this.programManager.setArtifact(A,I),at("info",()=>`[artifact] key: ${A}, programName: ${e.name}`)),at("info",()=>`[ProgramManager] run "${e.name}" (key=${A}) with ${y[0]}x${y[1]}x${y[2]}`),this.queryType!=="none"){let $={kernelId:this.currentKernelId,programName:I.programInfo.name,inputTensorViews:n,outputTensorViews:h};this.pendingKernels.push($)}return this.programManager.run(I,s,m,y,b),er(e.name),h}upload(e,n){this.gpuDataManager.upload(e,n)}memcpy(e,n){this.gpuDataManager.memcpy(e,n)}async download(e,n){await this.gpuDataManager.download(e,n)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,n,t,o){let i=Ky.get(e);if(!i)throw new Error(`kernel not implemented: ${e}`);let s={kernelType:e,kernelName:o,kernelEntry:i[0],attributes:[i[1],t]};this.kernels.set(n,s)}releaseKernel(e){let n=this.kernelPersistentData.get(e);if(n){for(let t of n)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,n,t){let o=this.kernels.get(e);if(!o)throw new Error(`kernel not created: ${e}`);let i=o.kernelType,s=o.kernelName,a=o.kernelEntry,u=o.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${i}] ${s}" is not allowed to be called recursively`);this.currentKernelId=e,u[0]&&(u[1]=u[0](u[1]),u[0]=void 0),at("info",()=>`[WebGPU] Start to run kernel "[${i}] ${s}"...`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),a(n,u[1]),0}catch(d){return t.push(Promise.resolve(`[WebGPU] Kernel "[${i}] ${s}" failed. ${d}`)),1}finally{l&&t.push(this.device.popErrorScope().then(d=>d?`GPU validation error for kernel "[${i}] ${s}": ${d.message}`:null));for(let d of this.temporaryData)this.gpuDataManager.release(d.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,n,t,o){let i=this.sessionExternalDataMapping.get(e);i||(i=new Map,this.sessionExternalDataMapping.set(e,i));let s=i.get(n),a=this.gpuDataManager.registerExternalBuffer(t,o,s?.[1]);return i.set(n,[a,t]),a}unregisterBuffers(e){let n=this.sessionExternalDataMapping.get(e);n&&(n.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[1])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let n=this.gpuDataManager.get(e);if(!n)throw new Error(`no GPU data for buffer: ${e}`);return n.buffer}createDownloader(e,n,t){return async()=>{let o=await Bu(this,e,n);return Mm(o.buffer,t)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||this.env.wasm.trace)&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"))}}});var Jy={};gn(Jy,{init:()=>XT});var Jo,nl,XT,Qy=R(()=>{"use strict";ut();Zy();on();Fe();Jo=class r{constructor(e,n,t,o){this.module=e;this.dataType=n;this.data=t;this.dims=o}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let e=q.size(this.dims);return e===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let e=q.size(this.dims);return e===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let e=q.size(this.dims);return e===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}reshape(e){if(q.size(e)!==q.size(this.dims))throw new Error("Invalid new shape");return new r(this.module,this.dataType,this.data,e)}},nl=class{constructor(e,n,t){this.module=e;this.backend=n;this.customDataOffset=0;this.customDataSize=0;let o=e.HEAPU32,i=t>>>2;this.opKernelContext=o[i++];let s=o[i++];this.outputCount=o[i++],this.customDataOffset=o[i++],this.customDataSize=o[i++];let a=[];for(let u=0;u<s;u++){let l=o[i++],d=o[i++],h=o[i++],m=[];for(let b=0;b<h;b++)m.push(o[i++]);a.push(new Jo(e,l,d,m))}this.inputs=a}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,n){let t=n?.inputs?.map(a=>typeof a=="number"?this.inputs[a]:a)??this.inputs,o=n?.outputs??[],i=(a,u,l)=>new Jo(this.module,u,this.output(a,l),l),s=(a,u)=>{let l=qo(a);if(!l)throw new Error(`Unsupported data type: ${a}`);let d=l*q.size(u);return new Jo(this.module,a,this.backend.gpuDataManager.create(d).id,u)};return this.backend.run(e,t,o,i,s)}output(e,n){let t=this.module.stackSave();try{let o=this.module.stackAlloc((1+n.length)*4),i=o>>2;this.module.HEAPU32[i++]=n.length;for(let s=0;s<n.length;s++)this.module.HEAPU32[i++]=n[s];return this.module._JsepOutput(this.opKernelContext,e,o)}catch(o){throw new Error(`Failed to generate kernel's output[${e}] with dims [${n}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${o}`)}finally{this.module.stackRestore(t)}}},XT=async(r,e,n)=>{let t=r.jsepInit;if(!t)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");let o=new Ya;await o.initialize(e,n),t(o,i=>o.alloc(i),i=>o.free(i),(i,s,a,u=!1)=>{if(u)at("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${i}, dst=${s}, size=${a}`),o.memcpy(i,s);else{at("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${i}, gpuDataId=${s}, size=${a}`);let l=r.HEAPU8.subarray(i>>>0,(i>>>0)+a);o.upload(s,l)}},async(i,s,a)=>{at("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${i}, dataOffset=${s}, size=${a}`),await o.download(i,()=>r.HEAPU8.subarray(s>>>0,(s>>>0)+a))},(i,s,a)=>o.createKernel(i,s,a,r.UTF8ToString(r._JsepGetNodeName(s))),i=>o.releaseKernel(i),(i,s,a,u)=>{at("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${a}, kernel=${i}, contextDataOffset=${s}`);let l=new nl(r,o,s);return o.computeKernel(i,l,u)})}});var ZT,t0,r0,Qo,JT,ol,n0,o0,e0,i0,a0,s0,u0=R(()=>{"use strict";km();Bm();ut();ro();Ia();ku();ZT=(r,e)=>{lt()._OrtInit(r,e)!==0&&nt("Can't initialize onnxruntime.")},t0=async r=>{ZT(r.wasm.numThreads,jo(r.logLevel))},r0=async(r,e)=>{if(e==="webgpu"||e==="webnn"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let n=await navigator.gpu.requestAdapter();if(!n)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.');if(!r.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");let t=(Qy(),Xr(Jy)).init;await t(lt(),r,n)}},Qo=new Map,JT=r=>{let e=lt(),n=e.stackSave();try{let t=e.stackAlloc(8);return e._OrtGetInputOutputCount(r,t,t+4)!==0&&nt("Can't get session input/output count."),[e.HEAP32[t/4],e.HEAP32[t/4+1]]}finally{e.stackRestore(n)}},ol=r=>{let e=lt(),n=e._malloc(r.byteLength);if(n===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${r.byteLength}.`);return e.HEAPU8.set(r,n),[n,r.byteLength]},n0=async(r,e)=>{let n,t,o=lt();Array.isArray(r)?[n,t]=r:r.buffer===o.HEAPU8.buffer?[n,t]=[r.byteOffset,r.byteLength]:[n,t]=ol(r);let i=0,s=0,a=0,u=[],l=[],d=[];try{if([s,u]=Dm(e),e?.externalData&&o.mountExternalData){let I=[];for(let $ of e.externalData){let O=typeof $=="string"?$:$.path;I.push(Ko(typeof $=="string"?$:$.data).then(E=>{o.mountExternalData(O,E)}))}await Promise.all(I)}i=await o._OrtCreateSession(n,t,s),i===0&&nt("Can't create a session.");let[h,m]=JT(i),b=[],y=[],x=[];for(let I=0;I<h;I++){let $=o._OrtGetInputName(i,I);$===0&&nt("Can't get an input name."),l.push($),b.push(o.UTF8ToString($))}for(let I=0;I<m;I++){let $=o._OrtGetOutputName(i,I);$===0&&nt("Can't get an output name."),d.push($);let O=o.UTF8ToString($);y.push(O);{let E=typeof e?.preferredOutputLocation=="string"?e.preferredOutputLocation:e?.preferredOutputLocation?.[O]??"cpu";if(E!=="cpu"&&E!=="cpu-pinned"&&E!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${E}.`);x.push(E)}}let A=null;return x.some(I=>I==="gpu-buffer")&&(a=o._OrtCreateBinding(i),a===0&&nt("Can't create IO binding."),A={handle:a,outputPreferredLocations:x,outputPreferredLocationsEncoded:x.map(I=>Pu(I))}),Qo.set(i,[i,l,d,A]),[i,b,y]}catch(h){throw l.forEach(m=>o._OrtFree(m)),d.forEach(m=>o._OrtFree(m)),a!==0&&o._OrtReleaseBinding(a),i!==0&&o._OrtReleaseSession(i),h}finally{o._free(n),s!==0&&o._OrtReleaseSessionOptions(s),u.forEach(h=>o._free(h)),o.unmountExternalData?.()}},o0=r=>{let e=lt(),n=Qo.get(r);if(!n)throw new Error(`cannot release session. invalid session id: ${r}`);let[t,o,i,s]=n;s&&e._OrtReleaseBinding(s.handle),e.jsepUnregisterBuffers?.(r),o.forEach(a=>e._OrtFree(a)),i.forEach(a=>e._OrtFree(a)),e._OrtReleaseSession(t),Qo.delete(r)},e0=(r,e,n,t,o)=>{if(!r){e.push(0);return}let i=lt(),s=r[0],a=r[1],u=r[3],l,d;if(s==="string"&&u==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(u==="gpu-buffer"){let b=r[2].gpuBuffer,y=qo(Cu(s));d=a.reduce((x,A)=>x*A,1)*y,l=i.jsepRegisterBuffer(t,o,b,d)}else{let b=r[2];if(Array.isArray(b)){d=4*b.length,l=i._malloc(d),n.push(l);let y=l/4;for(let x=0;x<b.length;x++){if(typeof b[x]!="string")throw new TypeError(`tensor data at index ${x} is not a string`);i.HEAPU32[y++]=pt(b[x],n)}}else d=b.byteLength,l=i._malloc(d),n.push(l),i.HEAPU8.set(new Uint8Array(b.buffer,b.byteOffset,d),l)}let h=i.stackSave(),m=i.stackAlloc(4*a.length);try{let b=m/4;a.forEach(x=>i.HEAP32[b++]=x);let y=i._OrtCreateTensor(Cu(s),l,d,m,a.length,Pu(u));y===0&&nt(`Can't create tensor for input/output. session=${t}, index=${o}.`),e.push(y)}finally{i.stackRestore(h)}},i0=async(r,e,n,t,o,i)=>{let s=lt(),a=Qo.get(r);if(!a)throw new Error(`cannot run inference. invalid session id: ${r}`);let[u,l,d,h]=a,m=e.length,b=t.length,y=0,x=[],A=[],I=[],$=[],O=s.stackSave(),E=s.stackAlloc(m*4),F=s.stackAlloc(m*4),z=s.stackAlloc(b*4),G=s.stackAlloc(b*4);try{[y,x]=Pm(i);for(let ue=0;ue<m;ue++)e0(n[ue],A,$,r,e[ue]);for(let ue=0;ue<b;ue++)e0(o[ue],I,$,r,m+t[ue]);let j=E/4,X=F/4,N=z/4,U=G/4;for(let ue=0;ue<m;ue++)s.HEAPU32[j++]=A[ue],s.HEAPU32[X++]=l[e[ue]];for(let ue=0;ue<b;ue++)s.HEAPU32[N++]=I[ue],s.HEAPU32[U++]=d[t[ue]];if(h){let{handle:ue,outputPreferredLocations:Be,outputPreferredLocationsEncoded:yt}=h;if(l.length!==m)throw new Error(`input count from feeds (${m}) is expected to be always equal to model's input count (${l.length}).`);for(let Ae=0;Ae<m;Ae++){let Ge=e[Ae];await s._OrtBindInput(ue,l[Ge],A[Ae])!==0&&nt(`Can't bind input[${Ae}] for session=${r}.`)}for(let Ae=0;Ae<b;Ae++){let Ge=t[Ae];o[Ae]?.[3]?s._OrtBindOutput(ue,d[Ge],I[Ae],0)!==0&&nt(`Can't bind pre-allocated output[${Ae}] for session=${r}.`):s._OrtBindOutput(ue,d[Ge],0,yt[Ge])!==0&&nt(`Can't bind output[${Ae}] to ${Be[Ae]} for session=${r}.`)}}let be;h?be=await s._OrtRunWithBinding(u,h.handle,b,z,y):be=await s._OrtRun(u,F,E,m,G,b,z,y),be!==0&&nt("failed to call OrtRun().");let Ee=[];for(let ue=0;ue<b;ue++){let Be=s.HEAPU32[z/4+ue];if(Be===I[ue]){Ee.push(o[ue]);continue}let yt=s.stackSave(),Ae=s.stackAlloc(4*4),Ge=!1,$e,ke=0;try{s._OrtGetTensorData(Be,Ae,Ae+4,Ae+8,Ae+12)!==0&&nt(`Can't access output tensor data on index ${ue}.`);let st=Ae/4,It=s.HEAPU32[st++];ke=s.HEAPU32[st++];let J=s.HEAPU32[st++],fe=s.HEAPU32[st++],Ie=[];for(let Je=0;Je<fe;Je++)Ie.push(s.HEAPU32[J/4+Je]);s._OrtFree(J);let Dt=Ie.reduce((Je,vt)=>Je*vt,1);$e=Yt(It);let Ut=h?.outputPreferredLocations[t[ue]];if($e==="string"){if(Ut==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let Je=[],vt=ke/4;for(let Lr=0;Lr<Dt;Lr++){let Mr=s.HEAPU32[vt++],sn=Lr===Dt-1?void 0:s.HEAPU32[vt]-Mr;Je.push(s.UTF8ToString(Mr,sn))}Ee.push([$e,Ie,Je,"cpu"])}else if(Ut==="gpu-buffer"&&Dt>0){let Je=s.jsepGetBuffer(ke),vt=qo(It);if(vt===void 0||!Oa($e))throw new Error(`Unsupported data type: ${$e}`);Ge=!0,Ee.push([$e,Ie,{gpuBuffer:Je,download:s.jsepCreateDownloader(Je,Dt*vt,$e),dispose:()=>{s._OrtReleaseTensor(Be)}},"gpu-buffer"])}else{let Je=Aa($e),vt=new Je(Dt);new Uint8Array(vt.buffer,vt.byteOffset,vt.byteLength).set(s.HEAPU8.subarray(ke,ke+vt.byteLength)),Ee.push([$e,Ie,vt,"cpu"])}}finally{s.stackRestore(yt),$e==="string"&&ke&&s._free(ke),Ge||s._OrtReleaseTensor(Be)}}return h&&s._OrtClearBoundOutputs(h.handle),Ee}finally{s.stackRestore(O),A.forEach(j=>s._OrtReleaseTensor(j)),I.forEach(j=>s._OrtReleaseTensor(j)),$.forEach(j=>s._free(j)),y!==0&&s._OrtReleaseRunOptions(y),x.forEach(j=>s._free(j))}},a0=r=>{let e=lt(),n=Qo.get(r);if(!n)throw new Error("invalid session id");let t=n[0],o=e._OrtEndProfiling(t);o===0&&nt("Can't get an profile file name."),e._OrtFree(o)},s0=r=>{let e=[];for(let n of r){let t=n[2];!Array.isArray(t)&&"buffer"in t&&e.push(t.buffer)}return e}});var l0=Qe((yL,e$)=>{e$.exports='/*!\n * ONNX Runtime Web v1.17.0\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n"use strict";(()=>{var to=Object.defineProperty;var kl=Object.getOwnPropertyDescriptor;var Rl=Object.getOwnPropertyNames;var Bl=Object.prototype.hasOwnProperty;var te=(e,t)=>()=>(e&&(t=e(e=0)),t);var Dr=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),gn=(e,t)=>{for(var r in t)to(e,r,{get:t[r],enumerable:!0})},Dl=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of Rl(t))!Bl.call(e,i)&&i!==r&&to(e,i,{get:()=>t[i],enumerable:!(o=kl(t,i))||o.enumerable});return e};var lr=e=>Dl(to({},"__esModule",{value:!0}),e);var ro={};gn(ro,{createReadStream:()=>bi,readFile:()=>Ml,readFileSync:()=>zl});var Ml,zl,bi,no=te(()=>{Ml=void 0,zl=void 0,bi=void 0});var oo={};gn(oo,{join:()=>Ul});var Ul,io=te(()=>{Ul=void 0});var $i=Dr((vi,ao)=>{"use strict";var wi=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){var r=t,o,i;r.ready=new Promise((s,p)=>{o=s,i=p}),r.mountExternalData=(s,p)=>{(r.gb||(r.gb=new Map)).set(s,p)},r.unmountExternalData=()=>{delete r.gb},r.jsepInit=(s,p,h,$,I,M,G,Q)=>{r.Fb=s,r.vb=p,r.xb=h,r.ob=$,r.wb=I,r.Sa=M,r.yb=G,r.zb=Q,p=(Y,q,ie)=>(...fe)=>{let xe=Qe,k=q?.();fe=Y(...fe);let ue=q?.();return k!==ue&&(Y=ue,ie(k),q=ie=null),Qe!=xe?Xr():fe},h=Y=>async(...q)=>{try{if(r.fb)throw Error("Session already started");let ie=r.fb={Ab:q[0],errors:[]},fe=await Y(...q);if(r.fb!==ie)throw Error("Session mismatch");s.flush();let xe=ie.errors;if(0<xe.length){let k=await Promise.all(xe);if(k=k.filter(ue=>ue),0<k.length)throw Error(k.join(`\n`))}return fe}finally{r.fb=null}},r._OrtCreateSession=p(r._OrtCreateSession,()=>r._OrtCreateSession,Y=>r._OrtCreateSession=Y),r._OrtRun=h(p(r._OrtRun,()=>r._OrtRun,Y=>r._OrtRun=Y)),r._OrtRunWithBinding=h(p(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,Y=>r._OrtRunWithBinding=Y)),r._OrtBindInput=p(r._OrtBindInput,()=>r._OrtBindInput,Y=>r._OrtBindInput=Y),r.jsepRegisterBuffer=(Y,q,ie,fe)=>s.registerBuffer(Y,q,ie,fe),r.jsepUnregisterBuffers=Y=>{s.unregisterBuffers(Y)},r.jsepGetBuffer=Y=>s.getBuffer(Y),r.jsepCreateDownloader=(Y,q,ie)=>s.createDownloader(Y,q,ie)};var u=Object.assign({},r),a="./this.program",c=(s,p)=>{throw p},m=typeof window=="object",g=typeof importScripts=="function",d=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",b="",v,S,w;if(d){var C=(no(),lr(ro)),O=(io(),lr(oo));b=g?O.dirname(b)+"/":__dirname+"/",v=(s,p)=>(s=oe(s)?new URL(s):O.normalize(s),C.readFileSync(s,p?void 0:"utf8")),w=s=>(s=v(s,!0),s.buffer||(s=new Uint8Array(s)),s),S=(s,p,h,$=!0)=>{s=oe(s)?new URL(s):O.normalize(s),C.readFile(s,$?void 0:"utf8",(I,M)=>{I?h(I):p($?M.buffer:M)})},!r.thisProgram&&1<process.argv.length&&(a=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),c=(s,p)=>{throw process.exitCode=s,p},r.inspect=()=>"[Emscripten Module object]"}else(m||g)&&(g?b=self.location.href:typeof document<"u"&&document.currentScript&&(b=document.currentScript.src),e&&(b=e),b.indexOf("blob:")!==0?b=b.substr(0,b.replace(/[?#].*/,"").lastIndexOf("/")+1):b="",v=s=>{var p=new XMLHttpRequest;return p.open("GET",s,!1),p.send(null),p.responseText},g&&(w=s=>{var p=new XMLHttpRequest;return p.open("GET",s,!1),p.responseType="arraybuffer",p.send(null),new Uint8Array(p.response)}),S=(s,p,h)=>{var $=new XMLHttpRequest;$.open("GET",s,!0),$.responseType="arraybuffer",$.onload=()=>{$.status==200||$.status==0&&$.response?p($.response):h()},$.onerror=h,$.send(null)});var A=console.log.bind(console),x=console.error.bind(console);Object.assign(r,u),u=null,typeof WebAssembly!="object"&&Ke("no native wasm support detected");var E,T=!1,N,B,V,H,J,D,j,se,be,re,$e;function Ge(){var s=E.buffer;r.HEAP8=B=new Int8Array(s),r.HEAP16=H=new Int16Array(s),r.HEAPU8=V=new Uint8Array(s),r.HEAPU16=J=new Uint16Array(s),r.HEAP32=D=new Int32Array(s),r.HEAPU32=j=new Uint32Array(s),r.HEAPF32=se=new Float32Array(s),r.HEAPF64=$e=new Float64Array(s),r.HEAP64=be=new BigInt64Array(s),r.HEAPU64=re=new BigUint64Array(s)}var ge=[],Te=[],pe=[],ve=0,We=null,Me=null;function Ke(s){throw s="Aborted("+s+")",x(s),T=!0,N=1,s=new WebAssembly.RuntimeError(s+". Build with -sASSERTIONS for more info."),i(s),s}var F=s=>s.startsWith("data:application/octet-stream;base64,"),oe=s=>s.startsWith("file://"),he;if(he="ort-wasm-simd.wasm",!F(he)){var Je=he;he=r.locateFile?r.locateFile(Je,b):b+Je}function ot(s){if(w)return w(s);throw"both async and sync fetching of the wasm failed"}function ke(s){if(m||g){if(typeof fetch=="function"&&!oe(s))return fetch(s,{credentials:"same-origin"}).then(p=>{if(!p.ok)throw"failed to load wasm binary file at \'"+s+"\'";return p.arrayBuffer()}).catch(()=>ot(s));if(S)return new Promise((p,h)=>{S(s,$=>p(new Uint8Array($)),h)})}return Promise.resolve().then(()=>ot(s))}function Le(s,p,h){return ke(s).then($=>WebAssembly.instantiate($,p)).then($=>$).then(h,$=>{x(`failed to asynchronously prepare wasm: ${$}`),Ke($)})}function Tt(s,p){var h=he;return typeof WebAssembly.instantiateStreaming!="function"||F(h)||oe(h)||d||typeof fetch!="function"?Le(h,s,p):fetch(h,{credentials:"same-origin"}).then($=>WebAssembly.instantiateStreaming($,s).then(p,function(I){return x(`wasm streaming compile failed: ${I}`),x("falling back to ArrayBuffer instantiation"),Le(h,s,p)}))}var Et={902248:(s,p,h,$)=>{if(typeof r>"u"||!r.gb)return 1;if(s=Fe(s>>>0),s.startsWith("./")&&(s=s.substring(2)),s=r.gb.get(s),!s)return 2;if(p>>>=0,h>>>=0,p+h>s.byteLength)return 3;try{return V.set(s.subarray(p,p+h),$>>>0>>>0),0}catch{return 4}},902749:s=>r.vb(s),902782:s=>r.xb(s),902814:(s,p,h)=>{r.ob(s,p,h,!0)},902853:(s,p,h)=>{r.ob(s,p,h)},902886:s=>{r.Sa("Abs",s,void 0)},902937:s=>{r.Sa("Neg",s,void 0)},902988:s=>{r.Sa("Floor",s,void 0)},903041:s=>{r.Sa("Ceil",s,void 0)},903093:s=>{r.Sa("Reciprocal",s,void 0)},903151:s=>{r.Sa("Sqrt",s,void 0)},903203:s=>{r.Sa("Exp",s,void 0)},903254:s=>{r.Sa("Erf",s,void 0)},903305:s=>{r.Sa("Sigmoid",s,void 0)},903360:s=>{r.Sa("Log",s,void 0)},903411:s=>{r.Sa("Sin",s,void 0)},903462:s=>{r.Sa("Cos",s,void 0)},903513:s=>{r.Sa("Tan",s,void 0)},903564:s=>{r.Sa("Asin",s,void 0)},903616:s=>{r.Sa("Acos",s,void 0)},903668:s=>{r.Sa("Atan",s,void 0)},903720:s=>{r.Sa("Sinh",s,void 0)},903772:s=>{r.Sa("Cosh",s,void 0)},903824:s=>{r.Sa("Asinh",s,void 0)},903877:s=>{r.Sa("Acosh",s,void 0)},903930:s=>{r.Sa("Atanh",s,void 0)},903983:s=>{r.Sa("Tanh",s,void 0)},904035:s=>{r.Sa("Not",s,void 0)},904086:(s,p,h)=>{r.Sa("Clip",s,{min:p,max:h})},904155:s=>{r.Sa("Clip",s,void 0)},904207:(s,p)=>{r.Sa("Elu",s,{alpha:p})},904265:s=>{r.Sa("Relu",s,void 0)},904317:(s,p)=>{r.Sa("LeakyRelu",s,{alpha:p})},904381:(s,p)=>{r.Sa("ThresholdedRelu",s,{alpha:p})},904451:(s,p)=>{r.Sa("Cast",s,{to:p})},904509:s=>{r.Sa("Add",s,void 0)},904560:s=>{r.Sa("Sub",s,void 0)},904611:s=>{r.Sa("Mul",s,void 0)},904662:s=>{r.Sa("Div",s,void 0)},904713:s=>{r.Sa("Pow",s,void 0)},904764:s=>{r.Sa("Equal",s,void 0)},904817:s=>{r.Sa("Greater",s,void 0)},904872:s=>{r.Sa("GreaterOrEqual",s,void 0)},904934:s=>{r.Sa("Less",s,void 0)},904986:s=>{r.Sa("LessOrEqual",s,void 0)},905045:(s,p,h,$,I)=>{r.Sa("ReduceMean",s,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:$?Array.from(D.subarray($>>>0,I>>>0)):[]})},905204:(s,p,h,$,I)=>{r.Sa("ReduceMax",s,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:$?Array.from(D.subarray($>>>0,I>>>0)):[]})},905362:(s,p,h,$,I)=>{r.Sa("ReduceMin",s,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:$?Array.from(D.subarray($>>>0,I>>>0)):[]})},905520:(s,p,h,$,I)=>{r.Sa("ReduceProd",s,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:$?Array.from(D.subarray($>>>0,I>>>0)):[]})},905679:(s,p,h,$,I)=>{r.Sa("ReduceSum",s,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:$?Array.from(D.subarray($>>>0,I>>>0)):[]})},905837:(s,p,h,$,I)=>{r.Sa("ReduceL1",s,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:$?Array.from(D.subarray($>>>0,I>>>0)):[]})},905994:(s,p,h,$,I)=>{r.Sa("ReduceL2",s,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:$?Array.from(D.subarray($>>>0,I>>>0)):[]})},906151:(s,p,h,$,I)=>{r.Sa("ReduceLogSum",s,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:$?Array.from(D.subarray($>>>0,I>>>0)):[]})},906312:(s,p,h,$,I)=>{r.Sa("ReduceSumSquare",s,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:$?Array.from(D.subarray($>>>0,I>>>0)):[]})},906476:(s,p,h,$,I)=>{r.Sa("ReduceLogSumExp",s,{keepDims:!!p,noopWithEmptyAxes:!!h,axes:$?Array.from(D.subarray($>>>0,I>>>0)):[]})},906640:s=>{r.Sa("Where",s,void 0)},906693:(s,p,h)=>{r.Sa("Transpose",s,{perm:p?Array.from(D.subarray(p>>>0,h>>>0)):[]})},906801:(s,p,h,$,I,M,G,Q,Y,q,ie,fe,xe,k,ue)=>{r.Sa("ConvTranspose",s,{format:Y?"NHWC":"NCHW",autoPad:p,dilations:[h],group:$,kernel_shape:[I],pads:[M,G],strides:[Q],wIsConst:()=>!!B[q>>>0],outputPadding:ie?Array.from(D.subarray(ie>>>0,fe>>>0)):[],outputShape:xe?Array.from(D.subarray(xe>>>0,k>>>0)):[],activation:Fe(ue)})},907203:(s,p,h,$,I,M,G,Q,Y,q,ie,fe,xe,k)=>{r.Sa("ConvTranspose",s,{format:Q?"NHWC":"NCHW",autoPad:p,dilations:Array.from(D.subarray(h>>>0,(h>>>0)+2>>>0)),group:$,kernelShape:Array.from(D.subarray(I>>>0,(I>>>0)+2>>>0)),pads:Array.from(D.subarray(M>>>0,(M>>>0)+4>>>0)),strides:Array.from(D.subarray(G>>>0,(G>>>0)+2>>>0)),wIsConst:()=>!!B[Y>>>0],outputPadding:q?Array.from(D.subarray(q>>>0,ie>>>0)):[],outputShape:fe?Array.from(D.subarray(fe>>>0,xe>>>0)):[],activation:Fe(k)})},907768:(s,p,h,$,I,M,G,Q,Y,q,ie,fe,xe,k,ue)=>{r.Sa("ConvTranspose",s,{format:Y?"NHWC":"NCHW",autoPad:p,dilations:[h],group:$,kernel_shape:[I],pads:[M,G],strides:[Q],wIsConst:()=>!!B[q>>>0],outputPadding:ie?Array.from(D.subarray(ie>>>0,fe>>>0)):[],outputShape:xe?Array.from(D.subarray(xe>>>0,k>>>0)):[],activation:Fe(ue)})},908170:(s,p,h,$,I,M,G,Q,Y,q,ie,fe,xe,k)=>{r.Sa("ConvTranspose",s,{format:Q?"NHWC":"NCHW",autoPad:p,dilations:Array.from(D.subarray(h>>>0,(h>>>0)+2>>>0)),group:$,kernelShape:Array.from(D.subarray(I>>>0,(I>>>0)+2>>>0)),pads:Array.from(D.subarray(M>>>0,(M>>>0)+4>>>0)),strides:Array.from(D.subarray(G>>>0,(G>>>0)+2>>>0)),wIsConst:()=>!!B[Y>>>0],outputPadding:q?Array.from(D.subarray(q>>>0,ie>>>0)):[],outputShape:fe?Array.from(D.subarray(fe>>>0,xe>>>0)):[],activation:Fe(k)})},908735:(s,p)=>{r.Sa("GlobalAveragePool",s,{format:p?"NHWC":"NCHW"})},908826:(s,p,h,$,I,M,G,Q,Y,q,ie,fe,xe,k,ue,Ie)=>{r.Sa("AveragePool",s,{format:Ie?"NHWC":"NCHW",auto_pad:p,ceil_mode:h,count_include_pad:$,storage_order:I,dilations:[M,G],kernel_shape:[Q,Y],pads:[q,ie,fe,xe],strides:[k,ue]})},909110:(s,p)=>{r.Sa("GlobalAveragePool",s,{format:p?"NHWC":"NCHW"})},909201:(s,p,h,$,I,M,G,Q,Y,q,ie,fe,xe,k,ue,Ie)=>{r.Sa("AveragePool",s,{format:Ie?"NHWC":"NCHW",auto_pad:p,ceil_mode:h,count_include_pad:$,storage_order:I,dilations:[M,G],kernel_shape:[Q,Y],pads:[q,ie,fe,xe],strides:[k,ue]})},909485:(s,p)=>{r.Sa("GlobalMaxPool",s,{format:p?"NHWC":"NCHW"})},909572:(s,p,h,$,I,M,G,Q,Y,q,ie,fe,xe,k,ue,Ie)=>{r.Sa("MaxPool",s,{format:Ie?"NHWC":"NCHW",auto_pad:p,ceil_mode:h,count_include_pad:$,storage_order:I,dilations:[M,G],kernel_shape:[Q,Y],pads:[q,ie,fe,xe],strides:[k,ue]})},909852:(s,p)=>{r.Sa("GlobalMaxPool",s,{format:p?"NHWC":"NCHW"})},909939:(s,p,h,$,I,M,G,Q,Y,q,ie,fe,xe,k,ue,Ie)=>{r.Sa("MaxPool",s,{format:Ie?"NHWC":"NCHW",auto_pad:p,ceil_mode:h,count_include_pad:$,storage_order:I,dilations:[M,G],kernel_shape:[Q,Y],pads:[q,ie,fe,xe],strides:[k,ue]})},910219:(s,p,h,$,I)=>{r.Sa("Gemm",s,{alpha:p,beta:h,transA:$,transB:I})},910323:s=>{r.Sa("MatMul",s,void 0)},910377:(s,p,h,$)=>{r.Sa("ArgMax",s,{keepDims:!!p,selectLastIndex:!!h,axis:$})},910485:(s,p,h,$)=>{r.Sa("ArgMin",s,{keepDims:!!p,selectLastIndex:!!h,axis:$})},910593:(s,p)=>{r.Sa("Softmax",s,{axis:p})},910656:(s,p)=>{r.Sa("Concat",s,{axis:p})},910716:(s,p,h,$,I)=>{r.Sa("Split",s,{axis:p,numOutputs:h,splitSizes:$?Array.from(D.subarray($>>>0,I>>>0)):[]})},910856:s=>{r.Sa("Expand",s,void 0)},910910:(s,p)=>{r.Sa("Gather",s,{axis:Number(p)})},910981:(s,p)=>{r.Sa("GatherElements",s,{axis:Number(p)})},911060:(s,p,h,$,I,M,G,Q,Y,q,ie)=>{r.Sa("Resize",s,{antialias:p,axes:h?Array.from(D.subarray(h>>>0,$>>>0)):[],coordinateTransformMode:Fe(I),cubicCoeffA:M,excludeOutside:G,extrapolationValue:Q,keepAspectRatioPolicy:Fe(Y),mode:Fe(q),nearestMode:Fe(ie)})},911406:(s,p,h,$,I,M,G)=>{r.Sa("Slice",s,{starts:p?Array.from(D.subarray(p>>>0,h>>>0)):[],ends:$?Array.from(D.subarray($>>>0,I>>>0)):[],axes:M?Array.from(D.subarray(M>>>0,G>>>0)):[]})},911622:s=>{r.Sa("Tile",s,void 0)},911674:(s,p,h)=>{r.Sa("LayerNormalization",s,{axis:Number(p),epsilon:Number(h)})},911781:(s,p,h)=>{r.Sa("InstanceNormalization",s,{epsilon:p,format:h?"NHWC":"NCHW"})},911895:(s,p,h)=>{r.Sa("InstanceNormalization",s,{epsilon:p,format:h?"NHWC":"NCHW"})},912009:s=>{r.Sa("Range",s,void 0)},912062:(s,p)=>{r.Sa("Einsum",s,{equation:Fe(p)})},912143:(s,p,h,$,I)=>{r.Sa("Pad",s,{mode:p,value:h,pads:$?Array.from(D.subarray($>>>0,I>>>0)):[]})},912270:(s,p,h,$,I,M)=>{r.Sa("BatchNormalization",s,{epsilon:p,momentum:h,spatial:!!I,trainingMode:!!$,format:M?"NHWC":"NCHW"})},912439:(s,p,h,$,I,M)=>{r.Sa("BatchNormalization",s,{epsilon:p,momentum:h,spatial:!!I,trainingMode:!!$,format:M?"NHWC":"NCHW"})},912608:(s,p,h)=>{r.Sa("CumSum",s,{exclusive:Number(p),reverse:Number(h)})},912705:(s,p,h,$,I,M,G,Q,Y)=>{r.Sa("Attention",s,{numHeads:p,isUnidirectional:h,maskFilterValue:$,scale:I,doRotary:M,qkvHiddenSizes:G?Array.from(D.subarray(Number(Q)>>>0,Number(Q)+G>>>0)):[],pastPresentShareBuffer:!!Y})},912977:s=>{r.Sa("Gelu",s,void 0)},913029:(s,p,h,$,I,M)=>{r.Sa("MultiHeadAttention",s,{numHeads:p,isUnidirectional:h,maskFilterValue:$,scale:I,doRotary:M})},913188:s=>{r.Sa("BiasAdd",s,void 0)},913243:s=>{r.Sa("BiasSplitGelu",s,void 0)},913304:(s,p)=>{r.Sa("SkipLayerNormalization",s,{epsilon:p})},913385:(s,p,h,$,I,M,G,Q,Y,q,ie,fe,xe)=>{r.Sa("Conv",s,{format:Y?"NHWC":"NCHW",auto_pad:p,dilations:[h],group:$,kernel_shape:[I],pads:M?Array.from(D.subarray(M>>>0,G>>>0)):[],strides:[Q],w_is_const:()=>!!B[q>>>0],activation:Fe(ie),activation_params:fe?Array.from(se.subarray(fe>>>0,xe>>>0)):[]})},913755:(s,p,h,$,I,M,G,Q,Y,q,ie,fe,xe,k,ue,Ie)=>{r.Sa("Conv",s,{format:fe?"NHWC":"NCHW",auto_pad:p,dilations:[h,$],group:I,kernel_shape:[M,G],pads:Q?Array.from(D.subarray(Q>>>0,Y>>>0)):[],strides:[q,ie],w_is_const:()=>!!B[xe>>>0],activation:Fe(k),activation_params:ue?Array.from(se.subarray(ue>>>0,Ie>>>0)):[]})},914146:s=>{r.yb(s)},914180:(s,p)=>r.zb(s,p,r.fb.Ab,r.fb.errors)};function Wt(s){this.name="ExitStatus",this.message=`Program terminated with exit(${s})`,this.status=s}function Bt(s){this.cb=s-24,this.rb=function(p){j[this.cb+4>>>2>>>0]=p},this.qb=function(p){j[this.cb+8>>>2>>>0]=p},this.kb=function(p,h){this.jb(),this.rb(p),this.qb(h)},this.jb=function(){j[this.cb+16>>>2>>>0]=0}}var Qt=0,Nt=0,fr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Dt=(s,p,h)=>{p>>>=0;var $=p+h;for(h=p;s[h]&&!(h>=$);)++h;if(16<h-p&&s.buffer&&fr)return fr.decode(s.subarray(p,h));for($="";p<h;){var I=s[p++];if(I&128){var M=s[p++]&63;if((I&224)==192)$+=String.fromCharCode((I&31)<<6|M);else{var G=s[p++]&63;I=(I&240)==224?(I&15)<<12|M<<6|G:(I&7)<<18|M<<12|G<<6|s[p++]&63,65536>I?$+=String.fromCharCode(I):(I-=65536,$+=String.fromCharCode(55296|I>>10,56320|I&1023))}}else $+=String.fromCharCode(I)}return $},Fe=(s,p)=>(s>>>=0)?Dt(V,s,p):"",Ot=s=>{for(var p=0,h=0;h<s.length;++h){var $=s.charCodeAt(h);127>=$?p++:2047>=$?p+=2:55296<=$&&57343>=$?(p+=4,++h):p+=3}return p},bt=(s,p,h,$)=>{if(h>>>=0,!(0<$))return 0;var I=h;$=h+$-1;for(var M=0;M<s.length;++M){var G=s.charCodeAt(M);if(55296<=G&&57343>=G){var Q=s.charCodeAt(++M);G=65536+((G&1023)<<10)|Q&1023}if(127>=G){if(h>=$)break;p[h++>>>0]=G}else{if(2047>=G){if(h+1>=$)break;p[h++>>>0]=192|G>>6}else{if(65535>=G){if(h+2>=$)break;p[h++>>>0]=224|G>>12}else{if(h+3>=$)break;p[h++>>>0]=240|G>>18,p[h++>>>0]=128|G>>12&63}p[h++>>>0]=128|G>>6&63}p[h++>>>0]=128|G&63}}return p[h>>>0]=0,h-I},hr=s=>{if(s===null)return"null";var p=typeof s;return p==="object"||p==="array"||p==="function"?s.toString():""+s},Lr,it=s=>{for(var p="";V[s>>>0];)p+=Lr[V[s++>>>0]];return p},gr={},Ht={},yr={},pt;function Fr(s,p,h={}){var $=p.name;if(!s)throw new pt(`type "${$}" must have a positive integer typeid pointer`);if(Ht.hasOwnProperty(s)){if(h.tb)return;throw new pt(`Cannot register type \'${$}\' twice`)}Ht[s]=p,delete yr[s],gr.hasOwnProperty(s)&&(p=gr[s],delete gr[s],p.forEach(I=>I()))}function Ye(s,p,h={}){if(!("argPackAdvance"in p))throw new TypeError("registerType registeredInstance requires argPackAdvance");Fr(s,p,h)}var br=(s,p,h)=>{switch(p){case 1:return h?$=>B[$>>>0>>>0]:$=>V[$>>>0>>>0];case 2:return h?$=>H[$>>>1>>>0]:$=>J[$>>>1>>>0];case 4:return h?$=>D[$>>>2>>>0]:$=>j[$>>>2>>>0];case 8:return h?$=>be[$>>>3]:$=>re[$>>>3];default:throw new TypeError(`invalid integer width (${p}): ${s}`)}};function wr(){this.$a=[void 0],this.nb=[]}var Pe=new wr;function vr(s){s>>>=0,s>=Pe.cb&&--Pe.get(s).pb===0&&Pe.jb(s)}var Se=s=>{if(!s)throw new pt("Cannot use deleted val. handle = "+s);return Pe.get(s).value},at=s=>{switch(s){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return Pe.kb({pb:1,value:s})}};function er(s){return this.fromWireType(D[s>>>2>>>0])}var $r=(s,p)=>{switch(p){case 4:return function(h){return this.fromWireType(se[h>>>2>>>0])};case 8:return function(h){return this.fromWireType($e[h>>>3>>>0])};default:throw new TypeError(`invalid float width (${p}): ${s}`)}};function Gn(s){return this.fromWireType(j[s>>>2>>>0])}var Sr=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Ln=(s,p)=>{for(var h=s>>1,$=h+p/2;!(h>=$)&&J[h>>>0];)++h;if(h<<=1,32<h-s&&Sr)return Sr.decode(V.subarray(s>>>0,h>>>0));for(h="",$=0;!($>=p/2);++$){var I=H[s+2*$>>>1>>>0];if(I==0)break;h+=String.fromCharCode(I)}return h},me=(s,p,h)=>{if(h??=2147483647,2>h)return 0;h-=2;var $=p;h=h<2*s.length?h/2:s.length;for(var I=0;I<h;++I)H[p>>>1>>>0]=s.charCodeAt(I),p+=2;return H[p>>>1>>>0]=0,p-$},tr=s=>2*s.length,jr=(s,p)=>{for(var h=0,$="";!(h>=p/4);){var I=D[s+4*h>>>2>>>0];if(I==0)break;++h,65536<=I?(I-=65536,$+=String.fromCharCode(55296|I>>10,56320|I&1023)):$+=String.fromCharCode(I)}return $},Fn=(s,p,h)=>{if(p>>>=0,h??=2147483647,4>h)return 0;var $=p;h=$+h-4;for(var I=0;I<s.length;++I){var M=s.charCodeAt(I);if(55296<=M&&57343>=M){var G=s.charCodeAt(++I);M=65536+((M&1023)<<10)|G&1023}if(D[p>>>2>>>0]=M,p+=4,p+4>h)break}return D[p>>>2>>>0]=0,p-$},qr=s=>{for(var p=0,h=0;h<s.length;++h){var $=s.charCodeAt(h);55296<=$&&57343>=$&&++h,p+=4}return p},xr=(s,p)=>{var h=Ht[s];if(h===void 0)throw s=jt(s),h=it(s),st(s),new pt(p+" has unknown type "+h);return h},_r=(s,p,h)=>{var $=[];return s=s.toWireType($,h),$.length&&(j[p>>>2>>>0]=at($)),s},Gt=s=>{try{s()}catch(p){Ke(p)}};function Kr(){var s=le,p={};for(let[h,$]of Object.entries(s))p[h]=typeof $=="function"?function(){Mt.push(h);try{return $.apply(null,arguments)}finally{T||(Mt.pop(),Qe&&ft===1&&Mt.length===0&&(ft=0,Gt(dn),typeof Fibers<"u"&&Fibers.Hb()))}}:$;return p}var ft=0,Qe=null,Cr=0,Mt=[],Ar={},Ir={},Yr=0,rr=null,Zr=[];function Xr(){return new Promise((s,p)=>{rr={resolve:s,reject:p}})}function Jr(){var s=zt(65548),p=s+12;j[s>>>2>>>0]=p,j[s+4>>>2>>>0]=p+65536,p=Mt[0];var h=Ar[p];return h===void 0&&(h=Yr++,Ar[p]=h,Ir[h]=p),D[s+8>>>2>>>0]=h,s}function Qr(s){if(!T){if(ft===0){var p=!1,h=!1;s(($=0)=>{if(!T&&(Cr=$,p=!0,h)){ft=2,Gt(()=>ht(Qe)),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.resume(),$=!1;try{var I=(0,le[Ir[D[Qe+8>>>2>>>0]]])()}catch(Q){I=Q,$=!0}var M=!1;if(!Qe){var G=rr;G&&(rr=null,($?G.reject:G.resolve)(I),M=!0)}if($&&!M)throw I}}),h=!0,p||(ft=1,Qe=Jr(),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.pause(),Gt(()=>qt(Qe)))}else ft===2?(ft=0,Gt(ct),st(Qe),Qe=null,Zr.forEach($=>{if(!T)try{$();try{N=N=$=N,r.onExit?.($),T=!0,c($,new Wt($))}catch(I){I instanceof Wt||I=="unwind"||c(1,I)}}catch(I){I instanceof Wt||I=="unwind"||c(1,I)}})):Ke(`invalid state: ${ft}`);return Cr}}function Tr(s){return Qr(p=>{s().then(p)})}var Lt=[],en={},nr=s=>{var p=en[s];return p===void 0?it(s):p},Er=()=>typeof globalThis=="object"?globalThis:Function("return this")(),dt=s=>{var p=Lt.length;return Lt.push(s),p},Or=(s,p)=>{for(var h=Array(s),$=0;$<s;++$)h[$]=xr(j[p+4*$>>>2>>>0],"parameter "+$);return h},or=(s,p)=>Object.defineProperty(p,"name",{value:s});function jn(s){var p=Function;if(!(p instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof p} which is not a function`);var h=or(p.name||"unknownFunctionName",function(){});return h.prototype=p.prototype,h=new h,s=p.apply(h,s),s instanceof Object?s:h}var et=s=>s%4===0&&(s%100!==0||s%400===0),tn=[0,31,60,91,121,152,182,213,244,274,305,335],mt=[0,31,59,90,120,151,181,212,243,273,304,334],Pr=s=>{var p=Ot(s)+1,h=zt(p);return h&&bt(s,V,h,p),h},ir=[],tt=(s,p)=>{ir.length=0;for(var h;h=V[s++>>>0];){var $=h!=105;$&=h!=112,p+=$&&p%8?4:0,ir.push(h==112?j[p>>>2>>>0]:h==106?be[p>>>3]:h==105?D[p>>>2>>>0]:$e[p>>>3>>>0]),p+=$?8:4}return ir},Ft={},Ze=()=>{if(!rt){var s={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:a||"./this.program"},p;for(p in Ft)Ft[p]===void 0?delete s[p]:s[p]=Ft[p];var h=[];for(p in s)h.push(`${p}=${s[p]}`);rt=h}return rt},rt,rn=[null,[],[]],nn=[31,29,31,30,31,30,31,31,30,31,30,31],on=[31,28,31,30,31,30,31,31,30,31,30,31];function an(s){var p=Array(Ot(s)+1);return bt(s,p,0,p.length),p}function sn(s,p,h,$){function I(k,ue,Ie){for(k=typeof k=="number"?k.toString():k||"";k.length<ue;)k=Ie[0]+k;return k}function M(k,ue){return I(k,ue,"0")}function G(k,ue){function Ie(Rt){return 0>Rt?-1:0<Rt?1:0}var kt;return(kt=Ie(k.getFullYear()-ue.getFullYear()))===0&&(kt=Ie(k.getMonth()-ue.getMonth()))===0&&(kt=Ie(k.getDate()-ue.getDate())),kt}function Q(k){switch(k.getDay()){case 0:return new Date(k.getFullYear()-1,11,29);case 1:return k;case 2:return new Date(k.getFullYear(),0,3);case 3:return new Date(k.getFullYear(),0,2);case 4:return new Date(k.getFullYear(),0,1);case 5:return new Date(k.getFullYear()-1,11,31);case 6:return new Date(k.getFullYear()-1,11,30)}}function Y(k){var ue=k.ab;for(k=new Date(new Date(k.bb+1900,0,1).getTime());0<ue;){var Ie=k.getMonth(),kt=(et(k.getFullYear())?nn:on)[Ie];if(ue>kt-k.getDate())ue-=kt-k.getDate()+1,k.setDate(1),11>Ie?k.setMonth(Ie+1):(k.setMonth(0),k.setFullYear(k.getFullYear()+1));else{k.setDate(k.getDate()+ue);break}}return Ie=new Date(k.getFullYear()+1,0,4),ue=Q(new Date(k.getFullYear(),0,4)),Ie=Q(Ie),0>=G(ue,k)?0>=G(Ie,k)?k.getFullYear()+1:k.getFullYear():k.getFullYear()-1}s>>>=0,p>>>=0,h>>>=0,$>>>=0;var q=j[$+40>>>2>>>0];$={Db:D[$>>>2>>>0],Cb:D[$+4>>>2>>>0],hb:D[$+8>>>2>>>0],mb:D[$+12>>>2>>>0],ib:D[$+16>>>2>>>0],bb:D[$+20>>>2>>>0],Wa:D[$+24>>>2>>>0],ab:D[$+28>>>2>>>0],Gb:D[$+32>>>2>>>0],Bb:D[$+36>>>2>>>0],Eb:q?Fe(q):""},h=Fe(h),q={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ie in q)h=h.replace(new RegExp(ie,"g"),q[ie]);var fe="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),xe="January February March April May June July August September October November December".split(" ");q={"%a":k=>fe[k.Wa].substring(0,3),"%A":k=>fe[k.Wa],"%b":k=>xe[k.ib].substring(0,3),"%B":k=>xe[k.ib],"%C":k=>M((k.bb+1900)/100|0,2),"%d":k=>M(k.mb,2),"%e":k=>I(k.mb,2," "),"%g":k=>Y(k).toString().substring(2),"%G":k=>Y(k),"%H":k=>M(k.hb,2),"%I":k=>(k=k.hb,k==0?k=12:12<k&&(k-=12),M(k,2)),"%j":k=>{for(var ue=0,Ie=0;Ie<=k.ib-1;ue+=(et(k.bb+1900)?nn:on)[Ie++]);return M(k.mb+ue,3)},"%m":k=>M(k.ib+1,2),"%M":k=>M(k.Cb,2),"%n":()=>`\n`,"%p":k=>0<=k.hb&&12>k.hb?"AM":"PM","%S":k=>M(k.Db,2),"%t":()=>"	","%u":k=>k.Wa||7,"%U":k=>M(Math.floor((k.ab+7-k.Wa)/7),2),"%V":k=>{var ue=Math.floor((k.ab+7-(k.Wa+6)%7)/7);if(2>=(k.Wa+371-k.ab-2)%7&&ue++,ue)ue==53&&(Ie=(k.Wa+371-k.ab)%7,Ie==4||Ie==3&&et(k.bb)||(ue=1));else{ue=52;var Ie=(k.Wa+7-k.ab-1)%7;(Ie==4||Ie==5&&et(k.bb%400-1))&&ue++}return M(ue,2)},"%w":k=>k.Wa,"%W":k=>M(Math.floor((k.ab+7-(k.Wa+6)%7)/7),2),"%y":k=>(k.bb+1900).toString().substring(2),"%Y":k=>k.bb+1900,"%z":k=>{k=k.Bb;var ue=0<=k;return k=Math.abs(k)/60,(ue?"+":"-")+("0000"+(k/60*100+k%60)).slice(-4)},"%Z":k=>k.Eb,"%%":()=>"%"},h=h.replace(/%%/g,"\\0\\0");for(ie in q)h.includes(ie)&&(h=h.replace(new RegExp(ie,"g"),q[ie]($)));return h=h.replace(/\\0\\0/g,"%"),ie=an(h),ie.length>p?0:(B.set(ie,s>>>0),ie.length-1)}for(var un=Array(256),ar=0;256>ar;++ar)un[ar]=String.fromCharCode(ar);Lr=un,pt=r.BindingError=class extends Error{constructor(s){super(s),this.name="BindingError"}},r.InternalError=class extends Error{constructor(s){super(s),this.name="InternalError"}},Object.assign(wr.prototype,{get(s){return this.$a[s]},has(s){return this.$a[s]!==void 0},kb(s){var p=this.nb.pop()||this.$a.length;return this.$a[p]=s,p},jb(s){this.$a[s]=void 0,this.nb.push(s)}}),Pe.$a.push({value:void 0},{value:null},{value:!0},{value:!1}),Pe.cb=Pe.$a.length,r.count_emval_handles=()=>{for(var s=0,p=Pe.cb;p<Pe.$a.length;++p)Pe.$a[p]!==void 0&&++s;return s};var qn={ia:function(s,p,h){return Tr(async()=>{await r.wb(s,p,h)})},a:function(s,p,h){throw s>>>=0,new Bt(s).kb(p>>>0,h>>>0),Qt=s,Nt++,Qt},w:function(){return 0},ca:function(){},P:function(){},R:function(){},J:function(){return 0},aa:function(){},X:function(){},$:function(){},D:function(){},Q:function(){},N:function(){},ba:function(){},O:function(){},G:function(s,p,h,$,I){p>>>=0,p=it(p);var M=p.indexOf("u")!=-1;M&&(I=(1n<<64n)-1n),Ye(s>>>0,{name:p,fromWireType:G=>G,toWireType:function(G,Q){if(typeof Q!="bigint"&&typeof Q!="number")throw new TypeError(`Cannot convert "${hr(Q)}" to ${this.name}`);if(Q<$||Q>I)throw new TypeError(`Passing a number "${hr(Q)}" from JS side to C/C++ side to an argument of type "${p}", which is outside the valid range [${$}, ${I}]!`);return Q},argPackAdvance:8,readValueFromPointer:br(p,h>>>0,!M),eb:null})},ga:function(s,p,h,$){p=it(p>>>0),Ye(s>>>0,{name:p,fromWireType:function(I){return!!I},toWireType:function(I,M){return M?h:$},argPackAdvance:8,readValueFromPointer:function(I){return this.fromWireType(V[I>>>0])},eb:null})},fa:function(s,p){p=it(p>>>0),Ye(s>>>0,{name:p,fromWireType:h=>{var $=Se(h);return vr(h),$},toWireType:(h,$)=>at($),argPackAdvance:8,readValueFromPointer:er,eb:null})},F:function(s,p,h){p=it(p>>>0),Ye(s>>>0,{name:p,fromWireType:$=>$,toWireType:($,I)=>I,argPackAdvance:8,readValueFromPointer:$r(p,h>>>0),eb:null})},t:function(s,p,h,$,I){if(s>>>=0,h>>>=0,p=it(p>>>0),I===-1&&(I=4294967295),I=Q=>Q,$===0){var M=32-8*h;I=Q=>Q<<M>>>M}var G=p.includes("unsigned")?function(Q,Y){return Y>>>0}:function(Q,Y){return Y};Ye(s,{name:p,fromWireType:I,toWireType:G,argPackAdvance:8,readValueFromPointer:br(p,h,$!==0),eb:null})},n:function(s,p,h){function $(M){return new I(B.buffer,j[M+4>>>2>>>0],j[M>>>2>>>0])}var I=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][p];h=it(h>>>0),Ye(s>>>0,{name:h,fromWireType:$,argPackAdvance:8,readValueFromPointer:$},{tb:!0})},H:function(s,p){p=it(p>>>0);var h=p==="std::string";Ye(s>>>0,{name:p,fromWireType:function($){var I=j[$>>>2>>>0],M=$+4;if(h)for(var G=M,Q=0;Q<=I;++Q){var Y=M+Q;if(Q==I||V[Y>>>0]==0){if(G=Fe(G,Y-G),q===void 0)var q=G;else q+=String.fromCharCode(0),q+=G;G=Y+1}}else{for(q=Array(I),Q=0;Q<I;++Q)q[Q]=String.fromCharCode(V[M+Q>>>0]);q=q.join("")}return st($),q},toWireType:function($,I){I instanceof ArrayBuffer&&(I=new Uint8Array(I));var M=typeof I=="string";if(!(M||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array))throw new pt("Cannot pass non-string to std::string");var G=h&&M?Ot(I):I.length,Q=zt(4+G+1),Y=Q+4;if(j[Q>>>2>>>0]=G,h&&M)bt(I,V,Y,G+1);else if(M)for(M=0;M<G;++M){var q=I.charCodeAt(M);if(255<q)throw st(Y),new pt("String has UTF-16 code units that do not fit in 8 bits");V[Y+M>>>0]=q}else for(M=0;M<G;++M)V[Y+M>>>0]=I[M];return $!==null&&$.push(st,Q),Q},argPackAdvance:8,readValueFromPointer:Gn,eb($){st($)}})},y:function(s,p,h){if(p>>>=0,h>>>=0,h=it(h),p===2)var $=Ln,I=me,M=tr,G=()=>J,Q=1;else p===4&&($=jr,I=Fn,M=qr,G=()=>j,Q=2);Ye(s>>>0,{name:h,fromWireType:Y=>{for(var q=j[Y>>>2>>>0],ie=G(),fe,xe=Y+4,k=0;k<=q;++k){var ue=Y+4+k*p;(k==q||ie[ue>>>Q]==0)&&(xe=$(xe,ue-xe),fe===void 0?fe=xe:(fe+=String.fromCharCode(0),fe+=xe),xe=ue+p)}return st(Y),fe},toWireType:(Y,q)=>{if(typeof q!="string")throw new pt(`Cannot pass non-string to C++ string type ${h}`);var ie=M(q),fe=zt(4+ie+p);return j[fe>>>2]=ie>>Q,I(q,fe+4,ie+p),Y!==null&&Y.push(st,fe),fe},argPackAdvance:8,readValueFromPointer:er,eb(Y){st(Y)}})},ha:function(s,p){p=it(p>>>0),Ye(s>>>0,{ub:!0,name:p,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},da:()=>1,s:function(s,p,h){return p>>>=0,h>>>=0,s=Se(s>>>0),p=xr(p,"emval::as"),_r(p,h,s)},v:function(s){return s>>>=0,Tr(()=>(s=Se(s),s.then(at)))},o:function(s,p,h,$){return h>>>=0,$>>>=0,s=Lt[s>>>0],p=Se(p>>>0),s(null,p,h,$)},k:function(s,p,h,$,I){return h>>>=0,$>>>=0,I>>>=0,s=Lt[s>>>0],p=Se(p>>>0),h=nr(h),s(p,p[h],$,I)},b:vr,z:function(s,p){return p>>>=0,s=Se(s>>>0),p=Se(p),s==p},m:function(s){return s>>>=0,s===0?at(Er()):(s=nr(s),at(Er()[s]))},i:function(s,p,h){p=Or(s,p>>>0);var $=p.shift();s--;var I=`return function (obj, func, destructorsRef, args) {\n`,M=0,G=[];h===0&&G.push("obj");for(var Q=["retType"],Y=[$],q=0;q<s;++q)G.push("arg"+q),Q.push("argType"+q),Y.push(p[q]),I+=`  var arg${q} = argType${q}.readValueFromPointer(args${M?"+"+M:""});\n`,M+=p[q].argPackAdvance;for(I+=`  var rv = ${h===1?"new func":"func.call"}(${G.join(", ")});\n`,q=0;q<s;++q)p[q].deleteObject&&(I+=`  argType${q}.deleteObject(arg${q});\n`);return $.ub||(Q.push("emval_returnValue"),Y.push(_r),I+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),Q.push(I+`};\n`),s=jn(Q).apply(null,Y),h=`methodCaller<(${p.map(ie=>ie.name).join(", ")}) => ${$.name}>`,dt(or(h,s))},r:function(s,p){return p>>>=0,s=Se(s>>>0),p=Se(p),at(s[p])},d:function(s){s>>>=0,4<s&&(Pe.get(s).pb+=1)},u:function(){return at([])},l:function(s){s=Se(s>>>0);for(var p=Array(s.length),h=0;h<s.length;h++)p[h]=s[h];return at(p)},e:function(s){return at(nr(s>>>0))},j:function(){return at({})},h:function(s){s>>>=0;for(var p=Se(s);p.length;){var h=p.pop();p.pop()(h)}vr(s)},g:function(s,p,h){p>>>=0,h>>>=0,s=Se(s>>>0),p=Se(p),h=Se(h),s[p]=h},c:function(s,p){return p>>>=0,s=xr(s>>>0,"_emval_take_value"),s=s.readValueFromPointer(p),at(s)},U:function(s,p){s=-9007199254740992>s||9007199254740992<s?NaN:Number(s),p>>>=0,s=new Date(1e3*s),D[p>>>2>>>0]=s.getUTCSeconds(),D[p+4>>>2>>>0]=s.getUTCMinutes(),D[p+8>>>2>>>0]=s.getUTCHours(),D[p+12>>>2>>>0]=s.getUTCDate(),D[p+16>>>2>>>0]=s.getUTCMonth(),D[p+20>>>2>>>0]=s.getUTCFullYear()-1900,D[p+24>>>2>>>0]=s.getUTCDay(),D[p+28>>>2>>>0]=(s.getTime()-Date.UTC(s.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},V:function(s,p){s=-9007199254740992>s||9007199254740992<s?NaN:Number(s),p>>>=0,s=new Date(1e3*s),D[p>>>2>>>0]=s.getSeconds(),D[p+4>>>2>>>0]=s.getMinutes(),D[p+8>>>2>>>0]=s.getHours(),D[p+12>>>2>>>0]=s.getDate(),D[p+16>>>2>>>0]=s.getMonth(),D[p+20>>>2>>>0]=s.getFullYear()-1900,D[p+24>>>2>>>0]=s.getDay(),D[p+28>>>2>>>0]=(et(s.getFullYear())?tn:mt)[s.getMonth()]+s.getDate()-1|0,D[p+36>>>2>>>0]=-(60*s.getTimezoneOffset());var h=new Date(s.getFullYear(),6,1).getTimezoneOffset(),$=new Date(s.getFullYear(),0,1).getTimezoneOffset();D[p+32>>>2>>>0]=(h!=$&&s.getTimezoneOffset()==Math.min($,h))|0},W:function(s){s>>>=0;var p=new Date(D[s+20>>>2>>>0]+1900,D[s+16>>>2>>>0],D[s+12>>>2>>>0],D[s+8>>>2>>>0],D[s+4>>>2>>>0],D[s>>>2>>>0],0),h=D[s+32>>>2>>>0],$=p.getTimezoneOffset(),I=new Date(p.getFullYear(),6,1).getTimezoneOffset(),M=new Date(p.getFullYear(),0,1).getTimezoneOffset(),G=Math.min(M,I);return 0>h?D[s+32>>>2>>>0]=+(I!=M&&G==$):0<h!=(G==$)&&(I=Math.max(M,I),p.setTime(p.getTime()+6e4*((0<h?G:I)-$))),D[s+24>>>2>>>0]=p.getDay(),D[s+28>>>2>>>0]=(et(p.getFullYear())?tn:mt)[p.getMonth()]+p.getDate()-1|0,D[s>>>2>>>0]=p.getSeconds(),D[s+4>>>2>>>0]=p.getMinutes(),D[s+8>>>2>>>0]=p.getHours(),D[s+12>>>2>>>0]=p.getDate(),D[s+16>>>2>>>0]=p.getMonth(),D[s+20>>>2>>>0]=p.getYear(),s=p.getTime(),isNaN(s)?(D[ln()>>>2>>>0]=61,s=-1):s/=1e3,BigInt(s)},S:function(){return-52},T:function(){},L:function(s,p,h){function $(Y){return(Y=Y.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?Y[1]:"GMT"}h>>>=0;var I=new Date().getFullYear(),M=new Date(I,0,1),G=new Date(I,6,1);I=M.getTimezoneOffset();var Q=G.getTimezoneOffset();j[s>>>0>>>2>>>0]=60*Math.max(I,Q),D[p>>>0>>>2>>>0]=+(I!=Q),s=$(M),p=$(G),s=Pr(s),p=Pr(p),Q<I?(j[h>>>2>>>0]=s,j[h+4>>>2>>>0]=p):(j[h>>>2>>>0]=p,j[h+4>>>2>>>0]=s)},A:()=>{Ke("")},f:function(s,p,h){return s>>>=0,p=tt(p>>>0,h>>>0),Et[s].apply(null,p)},I:function(s,p,h){return s>>>=0,p=tt(p>>>0,h>>>0),Et[s].apply(null,p)},E:()=>Date.now(),M:function(){return 4294901760},q:()=>performance.now(),K:function(s){s>>>=0;var p=V.length;if(4294901760<s)return!1;for(var h=1;4>=h;h*=2){var $=p*(1+.2/h);$=Math.min($,s+100663296);var I=Math;$=Math.max(s,$);e:{I=(I.min.call(I,4294901760,$+(65536-$%65536)%65536)-E.buffer.byteLength+65535)/65536;try{E.grow(I),Ge();var M=1;break e}catch{}M=void 0}if(M)return!0}return!1},Z:function(s,p){s>>>=0,p>>>=0;var h=0;return Ze().forEach(($,I)=>{var M=p+h;for(I=j[s+4*I>>>2>>>0]=M,M=0;M<$.length;++M)B[I++>>>0>>>0]=$.charCodeAt(M);B[I>>>0>>>0]=0,h+=$.length+1}),0},_:function(s,p){s>>>=0,p>>>=0;var h=Ze();j[s>>>2>>>0]=h.length;var $=0;return h.forEach(I=>$+=I.length+1),j[p>>>2>>>0]=$,0},x:()=>52,C:function(){return 52},Y:function(){return 70},B:function(s,p,h,$){p>>>=0,h>>>=0,$>>>=0;for(var I=0,M=0;M<h;M++){var G=j[p>>>2>>>0],Q=j[p+4>>>2>>>0];p+=8;for(var Y=0;Y<Q;Y++){var q=V[G+Y>>>0],ie=rn[s];q===0||q===10?((s===1?A:x)(Dt(ie,0)),ie.length=0):ie.push(q)}I+=Q}return j[$>>>2>>>0]=I,0},ea:sn,p:function(s,p,h,$){return sn(s>>>0,p>>>0,h>>>0,$>>>0)}},le=function(){function s(h){return le=h.exports,le=Kr(),le=cn(),E=le.ja,Ge(),Te.unshift(le.ka),ve--,ve==0&&(We!==null&&(clearInterval(We),We=null),Me&&(h=Me,Me=null,h())),le}var p={a:qn};if(ve++,r.instantiateWasm)try{return r.instantiateWasm(p,s)}catch(h){x(`Module.instantiateWasm callback failed with error: ${h}`),i(h)}return Tt(p,function(h){s(h.instance)}).catch(i),{}}();r._OrtInit=(s,p)=>(r._OrtInit=le.la)(s,p),r._OrtGetLastError=(s,p)=>(r._OrtGetLastError=le.ma)(s,p),r._OrtCreateSessionOptions=(s,p,h,$,I,M,G,Q,Y,q)=>(r._OrtCreateSessionOptions=le.na)(s,p,h,$,I,M,G,Q,Y,q),r._OrtAppendExecutionProvider=(s,p)=>(r._OrtAppendExecutionProvider=le.oa)(s,p),r._OrtAddFreeDimensionOverride=(s,p,h)=>(r._OrtAddFreeDimensionOverride=le.pa)(s,p,h),r._OrtAddSessionConfigEntry=(s,p,h)=>(r._OrtAddSessionConfigEntry=le.qa)(s,p,h),r._OrtReleaseSessionOptions=s=>(r._OrtReleaseSessionOptions=le.ra)(s),r._OrtCreateSession=(s,p,h)=>(r._OrtCreateSession=le.sa)(s,p,h),r._OrtReleaseSession=s=>(r._OrtReleaseSession=le.ta)(s),r._OrtGetInputOutputCount=(s,p,h)=>(r._OrtGetInputOutputCount=le.ua)(s,p,h),r._OrtGetInputName=(s,p)=>(r._OrtGetInputName=le.va)(s,p),r._OrtGetOutputName=(s,p)=>(r._OrtGetOutputName=le.wa)(s,p),r._OrtFree=s=>(r._OrtFree=le.xa)(s),r._OrtCreateTensor=(s,p,h,$,I,M)=>(r._OrtCreateTensor=le.ya)(s,p,h,$,I,M),r._OrtGetTensorData=(s,p,h,$,I)=>(r._OrtGetTensorData=le.za)(s,p,h,$,I),r._OrtReleaseTensor=s=>(r._OrtReleaseTensor=le.Aa)(s),r._OrtCreateRunOptions=(s,p,h,$)=>(r._OrtCreateRunOptions=le.Ba)(s,p,h,$),r._OrtAddRunConfigEntry=(s,p,h)=>(r._OrtAddRunConfigEntry=le.Ca)(s,p,h),r._OrtReleaseRunOptions=s=>(r._OrtReleaseRunOptions=le.Da)(s),r._OrtCreateBinding=s=>(r._OrtCreateBinding=le.Ea)(s),r._OrtBindInput=(s,p,h)=>(r._OrtBindInput=le.Fa)(s,p,h),r._OrtBindOutput=(s,p,h,$)=>(r._OrtBindOutput=le.Ga)(s,p,h,$),r._OrtClearBoundOutputs=s=>(r._OrtClearBoundOutputs=le.Ha)(s),r._OrtReleaseBinding=s=>(r._OrtReleaseBinding=le.Ia)(s),r._OrtRunWithBinding=(s,p,h,$,I)=>(r._OrtRunWithBinding=le.Ja)(s,p,h,$,I),r._OrtRun=(s,p,h,$,I,M,G,Q)=>(r._OrtRun=le.Ka)(s,p,h,$,I,M,G,Q),r._OrtEndProfiling=s=>(r._OrtEndProfiling=le.La)(s),r._JsepOutput=(s,p,h)=>(r._JsepOutput=le.Ma)(s,p,h),r._JsepGetNodeName=s=>(r._JsepGetNodeName=le.Na)(s);var ln=()=>(ln=le.Oa)(),zt=r._malloc=s=>(zt=r._malloc=le.Pa)(s),st=r._free=s=>(st=r._free=le.Qa)(s),jt=s=>(jt=le.Ra)(s),sr=()=>(sr=le.Ta)(),ur=s=>(ur=le.Ua)(s),kr=s=>(kr=le.Va)(s),qt=s=>(qt=le.Xa)(s),dn=()=>(dn=le.Ya)(),ht=s=>(ht=le.Za)(s),ct=()=>(ct=le._a)();r.___start_em_js=914292,r.___stop_em_js=914453;function cn(){var s=le;s=Object.assign({},s);var p=$=>()=>$()>>>0,h=$=>I=>$(I)>>>0;return s.Oa=p(s.Oa),s.Pa=h(s.Pa),s.Ra=h(s.Ra),s.Ta=p(s.Ta),s.Va=h(s.Va),s}r.stackAlloc=kr,r.stackSave=sr,r.stackRestore=ur,r.UTF8ToString=Fe,r.stringToUTF8=(s,p,h)=>bt(s,V,p,h),r.lengthBytesUTF8=Ot;var Pt;Me=function s(){Pt||Rr(),Pt||(Me=s)};function Rr(){if(!(0<ve)){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;){var s=r.preRun.shift();ge.unshift(s)}for(;0<ge.length;)ge.shift()(r);if(!(0<ve||Pt||(Pt=!0,r.calledRun=!0,T))){for(;0<Te.length;)Te.shift()(r);for(o(r);0<pe.length;)pe.shift()(r)}}}return Rr(),t.ready}})();typeof vi=="object"&&typeof ao=="object"?ao.exports=wi:typeof define=="function"&&define.amd&&define([],()=>wi)});var Si=Dr(()=>{});var xi=Dr(()=>{});var _i={};gn(_i,{cpus:()=>Vl});var Vl,Ci=te(()=>{Vl=void 0});var Ti=Dr((Ii,so)=>{"use strict";var Ai=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){function r(){return $e.buffer!=pe.buffer&&ke(),pe}function o(){return $e.buffer!=pe.buffer&&ke(),ve}function i(){return $e.buffer!=pe.buffer&&ke(),We}function u(){return $e.buffer!=pe.buffer&&ke(),Me}function a(){return $e.buffer!=pe.buffer&&ke(),Ke}function c(){return $e.buffer!=pe.buffer&&ke(),F}function m(){return $e.buffer!=pe.buffer&&ke(),oe}function g(){return $e.buffer!=pe.buffer&&ke(),ot}var d=t,b,v;d.ready=new Promise((n,l)=>{b=n,v=l}),d.mountExternalData=(n,l)=>{(d.Fb||(d.Fb=new Map)).set(n,l)},d.unmountExternalData=()=>{delete d.Fb},d.jsepInit=(n,l,f,y,_,P,z,L)=>{d.rc=n,d.$b=l,d.bc=f,d.Ob=y,d.ac=_,d.eb=P,d.cc=z,d.dc=L,l=(X,Z,ae)=>(...ye)=>{let Ce=ct,R=Z?.();ye=X(...ye);let de=Z?.();return R!==de&&(X=de,ae(R),Z=ae=null),ct!=Ce?I():ye},f=X=>async(...Z)=>{try{if(d.Eb)throw Error("Session already started");let ae=d.Eb={fc:Z[0],errors:[]},ye=await X(...Z);if(d.Eb!==ae)throw Error("Session mismatch");n.flush();let Ce=ae.errors;if(0<Ce.length){let R=await Promise.all(Ce);if(R=R.filter(de=>de),0<R.length)throw Error(R.join(`\n`))}return ye}finally{d.Eb=null}},d._OrtCreateSession=l(d._OrtCreateSession,()=>d._OrtCreateSession,X=>d._OrtCreateSession=X),d._OrtRun=f(l(d._OrtRun,()=>d._OrtRun,X=>d._OrtRun=X)),d._OrtRunWithBinding=f(l(d._OrtRunWithBinding,()=>d._OrtRunWithBinding,X=>d._OrtRunWithBinding=X)),d._OrtBindInput=l(d._OrtBindInput,()=>d._OrtBindInput,X=>d._OrtBindInput=X),d.jsepRegisterBuffer=(X,Z,ae,ye)=>n.registerBuffer(X,Z,ae,ye),d.jsepUnregisterBuffers=X=>{n.unregisterBuffers(X)},d.jsepGetBuffer=X=>n.getBuffer(X),d.jsepCreateDownloader=(X,Z,ae)=>n.createDownloader(X,Z,ae)};var S=Object.assign({},d),w="./this.program",C=(n,l)=>{throw l},O=typeof window=="object",A=typeof importScripts=="function",x=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",E=d.ENVIRONMENT_IS_PTHREAD||!1,T="";function N(n){return d.locateFile?d.locateFile(n,T):T+n}var B,V,H;if(x){var J=(no(),lr(ro)),D=(io(),lr(oo));T=A?D.dirname(T)+"/":__dirname+"/",B=(l,f)=>(l=Ot(l)?new URL(l):D.normalize(l),J.readFileSync(l,f?void 0:"utf8")),H=l=>(l=B(l,!0),l.buffer||(l=new Uint8Array(l)),l),V=(l,f,y,_=!0)=>{l=Ot(l)?new URL(l):D.normalize(l),J.readFile(l,_?void 0:"utf8",(P,z)=>{P?y(P):f(_?z.buffer:z)})},!d.thisProgram&&1<process.argv.length&&(w=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),C=(l,f)=>{throw process.exitCode=l,f},d.inspect=()=>"[Emscripten Module object]";let n;try{n=Si()}catch(l){throw console.error(\'The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?\'),l}global.Worker=n.Worker}else(O||A)&&(A?T=self.location.href:typeof document<"u"&&document.currentScript&&(T=document.currentScript.src),typeof e<"u"&&e&&(T=e),T.indexOf("blob:")!==0?T=T.substr(0,T.replace(/[?#].*/,"").lastIndexOf("/")+1):T="",x||(B=n=>{var l=new XMLHttpRequest;return l.open("GET",n,!1),l.send(null),l.responseText},A&&(H=n=>{var l=new XMLHttpRequest;return l.open("GET",n,!1),l.responseType="arraybuffer",l.send(null),new Uint8Array(l.response)}),V=(n,l,f)=>{var y=new XMLHttpRequest;y.open("GET",n,!0),y.responseType="arraybuffer",y.onload=()=>{y.status==200||y.status==0&&y.response?l(y.response):f()},y.onerror=f,y.send(null)}));x&&typeof performance>"u"&&(global.performance=xi().performance);var j=console.log.bind(console),se=console.error.bind(console);x&&(j=(...n)=>J.writeSync(1,n.join(" ")+`\n`),se=(...n)=>J.writeSync(2,n.join(" ")+`\n`));var be=j,re=se;Object.assign(d,S),S=null,typeof WebAssembly!="object"&&Dt("no native wasm support detected");var $e,Ge,ge=!1,Te,pe,ve,We,Me,Ke,F,oe,he,Je,ot;function ke(){var n=$e.buffer;d.HEAP8=pe=new Int8Array(n),d.HEAP16=We=new Int16Array(n),d.HEAPU8=ve=new Uint8Array(n),d.HEAPU16=Me=new Uint16Array(n),d.HEAP32=Ke=new Int32Array(n),d.HEAPU32=F=new Uint32Array(n),d.HEAPF32=oe=new Float32Array(n),d.HEAPF64=ot=new Float64Array(n),d.HEAP64=he=new BigInt64Array(n),d.HEAPU64=Je=new BigUint64Array(n)}var Le=16777216;if(E)$e=d.wasmMemory;else if(d.wasmMemory)$e=d.wasmMemory;else if($e=new WebAssembly.Memory({initial:Le/65536,maximum:65536,shared:!0}),!($e.buffer instanceof SharedArrayBuffer))throw re("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),x&&re("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");ke(),Le=$e.buffer.byteLength;var Tt=[],Et=[],Wt=[],Bt=0,Qt=null,Nt=null;function fr(){if(Bt--,Bt==0&&(Qt!==null&&(clearInterval(Qt),Qt=null),Nt)){var n=Nt;Nt=null,n()}}function Dt(n){throw n="Aborted("+n+")",re(n),ge=!0,Te=1,n=new WebAssembly.RuntimeError(n+". Build with -sASSERTIONS for more info."),v(n),n}var Fe=n=>n.startsWith("data:application/octet-stream;base64,"),Ot=n=>n.startsWith("file://"),bt;bt="ort-wasm-simd-threaded.wasm",Fe(bt)||(bt=N(bt));function hr(n){if(H)return H(n);throw"both async and sync fetching of the wasm failed"}function Lr(n){if(O||A){if(typeof fetch=="function"&&!Ot(n))return fetch(n,{credentials:"same-origin"}).then(l=>{if(!l.ok)throw"failed to load wasm binary file at \'"+n+"\'";return l.arrayBuffer()}).catch(()=>hr(n));if(V)return new Promise((l,f)=>{V(n,y=>l(new Uint8Array(y)),f)})}return Promise.resolve().then(()=>hr(n))}function it(n,l,f){return Lr(n).then(y=>WebAssembly.instantiate(y,l)).then(y=>y).then(f,y=>{re(`failed to asynchronously prepare wasm: ${y}`),Dt(y)})}function gr(n,l){var f=bt;return typeof WebAssembly.instantiateStreaming!="function"||Fe(f)||Ot(f)||x||typeof fetch!="function"?it(f,n,l):fetch(f,{credentials:"same-origin"}).then(y=>WebAssembly.instantiateStreaming(y,n).then(l,function(_){return re(`wasm streaming compile failed: ${_}`),re("falling back to ArrayBuffer instantiation"),it(f,n,l)}))}var Ht={903244:(n,l,f,y)=>{if(typeof d>"u"||!d.Fb)return 1;if(n=Pe(n>>>0),n.startsWith("./")&&(n=n.substring(2)),n=d.Fb.get(n),!n)return 2;if(l>>>=0,f>>>=0,y>>>=0,l+f>n.byteLength)return 3;try{return o().set(n.subarray(l,l+f),y>>>0),0}catch{return 4}},903745:n=>d.$b(n),903778:n=>d.bc(n),903810:(n,l,f)=>{d.Ob(n,l,f,!0)},903849:(n,l,f)=>{d.Ob(n,l,f)},903882:n=>{d.eb("Abs",n,void 0)},903933:n=>{d.eb("Neg",n,void 0)},903984:n=>{d.eb("Floor",n,void 0)},904037:n=>{d.eb("Ceil",n,void 0)},904089:n=>{d.eb("Reciprocal",n,void 0)},904147:n=>{d.eb("Sqrt",n,void 0)},904199:n=>{d.eb("Exp",n,void 0)},904250:n=>{d.eb("Erf",n,void 0)},904301:n=>{d.eb("Sigmoid",n,void 0)},904356:n=>{d.eb("Log",n,void 0)},904407:n=>{d.eb("Sin",n,void 0)},904458:n=>{d.eb("Cos",n,void 0)},904509:n=>{d.eb("Tan",n,void 0)},904560:n=>{d.eb("Asin",n,void 0)},904612:n=>{d.eb("Acos",n,void 0)},904664:n=>{d.eb("Atan",n,void 0)},904716:n=>{d.eb("Sinh",n,void 0)},904768:n=>{d.eb("Cosh",n,void 0)},904820:n=>{d.eb("Asinh",n,void 0)},904873:n=>{d.eb("Acosh",n,void 0)},904926:n=>{d.eb("Atanh",n,void 0)},904979:n=>{d.eb("Tanh",n,void 0)},905031:n=>{d.eb("Not",n,void 0)},905082:(n,l,f)=>{d.eb("Clip",n,{min:l,max:f})},905151:n=>{d.eb("Clip",n,void 0)},905203:(n,l)=>{d.eb("Elu",n,{alpha:l})},905261:n=>{d.eb("Relu",n,void 0)},905313:(n,l)=>{d.eb("LeakyRelu",n,{alpha:l})},905377:(n,l)=>{d.eb("ThresholdedRelu",n,{alpha:l})},905447:(n,l)=>{d.eb("Cast",n,{to:l})},905505:n=>{d.eb("Add",n,void 0)},905556:n=>{d.eb("Sub",n,void 0)},905607:n=>{d.eb("Mul",n,void 0)},905658:n=>{d.eb("Div",n,void 0)},905709:n=>{d.eb("Pow",n,void 0)},905760:n=>{d.eb("Equal",n,void 0)},905813:n=>{d.eb("Greater",n,void 0)},905868:n=>{d.eb("GreaterOrEqual",n,void 0)},905930:n=>{d.eb("Less",n,void 0)},905982:n=>{d.eb("LessOrEqual",n,void 0)},906041:(n,l,f,y,_)=>{d.eb("ReduceMean",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:y?Array.from(a().subarray(y>>>0,_>>>0)):[]})},906200:(n,l,f,y,_)=>{d.eb("ReduceMax",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:y?Array.from(a().subarray(y>>>0,_>>>0)):[]})},906358:(n,l,f,y,_)=>{d.eb("ReduceMin",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:y?Array.from(a().subarray(y>>>0,_>>>0)):[]})},906516:(n,l,f,y,_)=>{d.eb("ReduceProd",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:y?Array.from(a().subarray(y>>>0,_>>>0)):[]})},906675:(n,l,f,y,_)=>{d.eb("ReduceSum",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:y?Array.from(a().subarray(y>>>0,_>>>0)):[]})},906833:(n,l,f,y,_)=>{d.eb("ReduceL1",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:y?Array.from(a().subarray(y>>>0,_>>>0)):[]})},906990:(n,l,f,y,_)=>{d.eb("ReduceL2",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:y?Array.from(a().subarray(y>>>0,_>>>0)):[]})},907147:(n,l,f,y,_)=>{d.eb("ReduceLogSum",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:y?Array.from(a().subarray(y>>>0,_>>>0)):[]})},907308:(n,l,f,y,_)=>{d.eb("ReduceSumSquare",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:y?Array.from(a().subarray(y>>>0,_>>>0)):[]})},907472:(n,l,f,y,_)=>{d.eb("ReduceLogSumExp",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:y?Array.from(a().subarray(y>>>0,_>>>0)):[]})},907636:n=>{d.eb("Where",n,void 0)},907689:(n,l,f)=>{d.eb("Transpose",n,{perm:l?Array.from(a().subarray(l>>>0,f>>>0)):[]})},907797:(n,l,f,y,_,P,z,L,X,Z,ae,ye,Ce,R,de)=>{d.eb("ConvTranspose",n,{format:X?"NHWC":"NCHW",autoPad:l,dilations:[f],group:y,kernel_shape:[_],pads:[P,z],strides:[L],wIsConst:()=>!!r()[Z>>>0],outputPadding:ae?Array.from(a().subarray(ae>>>0,ye>>>0)):[],outputShape:Ce?Array.from(a().subarray(Ce>>>0,R>>>0)):[],activation:Pe(de)})},908199:(n,l,f,y,_,P,z,L,X,Z,ae,ye,Ce,R)=>{d.eb("ConvTranspose",n,{format:L?"NHWC":"NCHW",autoPad:l,dilations:Array.from(a().subarray(f>>>0,(f>>>0)+2>>>0)),group:y,kernelShape:Array.from(a().subarray(_>>>0,(_>>>0)+2>>>0)),pads:Array.from(a().subarray(P>>>0,(P>>>0)+4>>>0)),strides:Array.from(a().subarray(z>>>0,(z>>>0)+2>>>0)),wIsConst:()=>!!r()[X>>>0],outputPadding:Z?Array.from(a().subarray(Z>>>0,ae>>>0)):[],outputShape:ye?Array.from(a().subarray(ye>>>0,Ce>>>0)):[],activation:Pe(R)})},908764:(n,l,f,y,_,P,z,L,X,Z,ae,ye,Ce,R,de)=>{d.eb("ConvTranspose",n,{format:X?"NHWC":"NCHW",autoPad:l,dilations:[f],group:y,kernel_shape:[_],pads:[P,z],strides:[L],wIsConst:()=>!!r()[Z>>>0],outputPadding:ae?Array.from(a().subarray(ae>>>0,ye>>>0)):[],outputShape:Ce?Array.from(a().subarray(Ce>>>0,R>>>0)):[],activation:Pe(de)})},909166:(n,l,f,y,_,P,z,L,X,Z,ae,ye,Ce,R)=>{d.eb("ConvTranspose",n,{format:L?"NHWC":"NCHW",autoPad:l,dilations:Array.from(a().subarray(f>>>0,(f>>>0)+2>>>0)),group:y,kernelShape:Array.from(a().subarray(_>>>0,(_>>>0)+2>>>0)),pads:Array.from(a().subarray(P>>>0,(P>>>0)+4>>>0)),strides:Array.from(a().subarray(z>>>0,(z>>>0)+2>>>0)),wIsConst:()=>!!r()[X>>>0],outputPadding:Z?Array.from(a().subarray(Z>>>0,ae>>>0)):[],outputShape:ye?Array.from(a().subarray(ye>>>0,Ce>>>0)):[],activation:Pe(R)})},909731:(n,l)=>{d.eb("GlobalAveragePool",n,{format:l?"NHWC":"NCHW"})},909822:(n,l,f,y,_,P,z,L,X,Z,ae,ye,Ce,R,de,Ee)=>{d.eb("AveragePool",n,{format:Ee?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:y,storage_order:_,dilations:[P,z],kernel_shape:[L,X],pads:[Z,ae,ye,Ce],strides:[R,de]})},910106:(n,l)=>{d.eb("GlobalAveragePool",n,{format:l?"NHWC":"NCHW"})},910197:(n,l,f,y,_,P,z,L,X,Z,ae,ye,Ce,R,de,Ee)=>{d.eb("AveragePool",n,{format:Ee?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:y,storage_order:_,dilations:[P,z],kernel_shape:[L,X],pads:[Z,ae,ye,Ce],strides:[R,de]})},910481:(n,l)=>{d.eb("GlobalMaxPool",n,{format:l?"NHWC":"NCHW"})},910568:(n,l,f,y,_,P,z,L,X,Z,ae,ye,Ce,R,de,Ee)=>{d.eb("MaxPool",n,{format:Ee?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:y,storage_order:_,dilations:[P,z],kernel_shape:[L,X],pads:[Z,ae,ye,Ce],strides:[R,de]})},910848:(n,l)=>{d.eb("GlobalMaxPool",n,{format:l?"NHWC":"NCHW"})},910935:(n,l,f,y,_,P,z,L,X,Z,ae,ye,Ce,R,de,Ee)=>{d.eb("MaxPool",n,{format:Ee?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:y,storage_order:_,dilations:[P,z],kernel_shape:[L,X],pads:[Z,ae,ye,Ce],strides:[R,de]})},911215:(n,l,f,y,_)=>{d.eb("Gemm",n,{alpha:l,beta:f,transA:y,transB:_})},911319:n=>{d.eb("MatMul",n,void 0)},911373:(n,l,f,y)=>{d.eb("ArgMax",n,{keepDims:!!l,selectLastIndex:!!f,axis:y})},911481:(n,l,f,y)=>{d.eb("ArgMin",n,{keepDims:!!l,selectLastIndex:!!f,axis:y})},911589:(n,l)=>{d.eb("Softmax",n,{axis:l})},911652:(n,l)=>{d.eb("Concat",n,{axis:l})},911712:(n,l,f,y,_)=>{d.eb("Split",n,{axis:l,numOutputs:f,splitSizes:y?Array.from(a().subarray(y>>>0,_>>>0)):[]})},911852:n=>{d.eb("Expand",n,void 0)},911906:(n,l)=>{d.eb("Gather",n,{axis:Number(l)})},911977:(n,l)=>{d.eb("GatherElements",n,{axis:Number(l)})},912056:(n,l,f,y,_,P,z,L,X,Z,ae)=>{d.eb("Resize",n,{antialias:l,axes:f?Array.from(a().subarray(f>>>0,y>>>0)):[],coordinateTransformMode:Pe(_),cubicCoeffA:P,excludeOutside:z,extrapolationValue:L,keepAspectRatioPolicy:Pe(X),mode:Pe(Z),nearestMode:Pe(ae)})},912402:(n,l,f,y,_,P,z)=>{d.eb("Slice",n,{starts:l?Array.from(a().subarray(l>>>0,f>>>0)):[],ends:y?Array.from(a().subarray(y>>>0,_>>>0)):[],axes:P?Array.from(a().subarray(P>>>0,z>>>0)):[]})},912618:n=>{d.eb("Tile",n,void 0)},912670:(n,l,f)=>{d.eb("LayerNormalization",n,{axis:Number(l),epsilon:Number(f)})},912777:(n,l,f)=>{d.eb("InstanceNormalization",n,{epsilon:l,format:f?"NHWC":"NCHW"})},912891:(n,l,f)=>{d.eb("InstanceNormalization",n,{epsilon:l,format:f?"NHWC":"NCHW"})},913005:n=>{d.eb("Range",n,void 0)},913058:(n,l)=>{d.eb("Einsum",n,{equation:Pe(l)})},913139:(n,l,f,y,_)=>{d.eb("Pad",n,{mode:l,value:f,pads:y?Array.from(a().subarray(y>>>0,_>>>0)):[]})},913266:(n,l,f,y,_,P)=>{d.eb("BatchNormalization",n,{epsilon:l,momentum:f,spatial:!!_,trainingMode:!!y,format:P?"NHWC":"NCHW"})},913435:(n,l,f,y,_,P)=>{d.eb("BatchNormalization",n,{epsilon:l,momentum:f,spatial:!!_,trainingMode:!!y,format:P?"NHWC":"NCHW"})},913604:(n,l,f)=>{d.eb("CumSum",n,{exclusive:Number(l),reverse:Number(f)})},913701:(n,l,f,y,_,P,z,L,X)=>{d.eb("Attention",n,{numHeads:l,isUnidirectional:f,maskFilterValue:y,scale:_,doRotary:P,qkvHiddenSizes:z?Array.from(a().subarray(Number(L)>>>0,Number(L)+z>>>0)):[],pastPresentShareBuffer:!!X})},913973:n=>{d.eb("Gelu",n,void 0)},914025:(n,l,f,y,_,P)=>{d.eb("MultiHeadAttention",n,{numHeads:l,isUnidirectional:f,maskFilterValue:y,scale:_,doRotary:P})},914184:n=>{d.eb("BiasAdd",n,void 0)},914239:n=>{d.eb("BiasSplitGelu",n,void 0)},914300:(n,l)=>{d.eb("SkipLayerNormalization",n,{epsilon:l})},914381:(n,l,f,y,_,P,z,L,X,Z,ae,ye,Ce)=>{d.eb("Conv",n,{format:X?"NHWC":"NCHW",auto_pad:l,dilations:[f],group:y,kernel_shape:[_],pads:P?Array.from(a().subarray(P>>>0,z>>>0)):[],strides:[L],w_is_const:()=>!!r()[Z>>>0],activation:Pe(ae),activation_params:ye?Array.from(m().subarray(ye>>>0,Ce>>>0)):[]})},914751:(n,l,f,y,_,P,z,L,X,Z,ae,ye,Ce,R,de,Ee)=>{d.eb("Conv",n,{format:ye?"NHWC":"NCHW",auto_pad:l,dilations:[f,y],group:_,kernel_shape:[P,z],pads:L?Array.from(a().subarray(L>>>0,X>>>0)):[],strides:[Z,ae],w_is_const:()=>!!r()[Ce>>>0],activation:Pe(R),activation_params:de?Array.from(m().subarray(de>>>0,Ee>>>0)):[]})},915142:n=>{d.cc(n)},915176:(n,l)=>d.dc(n,l,d.Eb.fc,d.Eb.errors)};function yr(n){this.name="ExitStatus",this.message=`Program terminated with exit(${n})`,this.status=n}var pt=n=>{n.terminate(),n.onmessage=()=>{}},Fr=n=>{me.yb.length==0&&(Sr(),me.Pb(me.yb[0]));var l=me.yb.pop();if(!l)return 6;me.zb.push(l),me.pb[n.xb]=l,l.xb=n.xb;var f={cmd:"run",start_routine:n.hc,arg:n.Vb,pthread_ptr:n.xb};return x&&l.unref(),l.postMessage(f,n.nc),0},Ye=0,br=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,wr=(n,l,f)=>{l>>>=0;var y=l+f;for(f=l;n[f]&&!(f>=y);)++f;if(16<f-l&&n.buffer&&br)return br.decode(n.buffer instanceof SharedArrayBuffer?n.slice(l,f):n.subarray(l,f));for(y="";l<f;){var _=n[l++];if(_&128){var P=n[l++]&63;if((_&224)==192)y+=String.fromCharCode((_&31)<<6|P);else{var z=n[l++]&63;_=(_&240)==224?(_&15)<<12|P<<6|z:(_&7)<<18|P<<12|z<<6|n[l++]&63,65536>_?y+=String.fromCharCode(_):(_-=65536,y+=String.fromCharCode(55296|_>>10,56320|_&1023))}}else y+=String.fromCharCode(_)}return y},Pe=(n,l)=>(n>>>=0)?wr(o(),n,l):"",vr=n=>{var l=Qn();return n=n(),fn(l),n};function Se(n,l){var f=arguments.length-2,y=arguments;return vr(()=>{for(var _=2*f,P=eo(8*_),z=P>>>3,L=0;L<f;L++){var X=y[2+L];typeof X=="bigint"?(he[z+2*L]=1n,he[z+2*L+1]=X):(he[z+2*L]=0n,g()[z+2*L+1>>>0]=X)}return ui(n,_,P,l)})}function at(n){if(E)return Se(0,1,n);Te=n,0<Ye||(me.ic(),d.onExit?.(n),ge=!0),C(n,new yr(n))}var er=n=>{if(Te=n,E)throw jr(n),"unwind";at(n)},$r=n=>{n instanceof yr||n=="unwind"||C(1,n)};function Gn(){for(var n=d.numThreads;n--;)Sr();Tt.unshift(()=>{Bt++,Ln(()=>fr())})}function Sr(){var n=N("ort-wasm-simd-threaded.worker.js");n=new Worker(n),me.yb.push(n)}function Ln(n){E?n():Promise.all(me.yb.map(me.Pb)).then(n)}var me={yb:[],zb:[],Ub:[],pb:{},Ib(){E?(me.receiveObjectTransfer=me.ec,me.threadInitTLS=me.Tb,me.setExitStatus=me.Sb):Gn()},Sb:n=>Te=n,sc:["$terminateWorker"],ic:()=>{for(var n of me.zb)pt(n);for(n of me.yb)pt(n);me.yb=[],me.zb=[],me.pb=[]},Rb:n=>{var l=n.xb;delete me.pb[l],me.yb.push(n),me.zb.splice(me.zb.indexOf(n),1),n.xb=0,Xn(l)},ec(){},Tb(){me.Ub.forEach(n=>n())},Pb:n=>new Promise(l=>{n.onmessage=P=>{P=P.data;var z=P.cmd;if(P.targetThread&&P.targetThread!=mn()){var L=me.pb[P.targetThread];L?L.postMessage(P,P.transferList):re(`Internal error! Worker sent a message "${z}" to target pthread ${P.targetThread}, but that thread no longer exists!`)}else z==="checkMailbox"?jt():z==="spawnThread"?Fr(P):z==="cleanupThread"?me.Rb(me.pb[P.thread]):z==="killThread"?(P=P.thread,z=me.pb[P],delete me.pb[P],pt(z),Xn(P),me.zb.splice(me.zb.indexOf(z),1),z.xb=0):z==="cancelThread"?me.pb[P.thread].postMessage({cmd:"cancel"}):z==="loaded"?(n.loaded=!0,x&&!n.xb&&n.unref(),l(n)):z==="alert"?alert(`Thread ${P.threadId}: ${P.text}`):P.target==="setimmediate"?n.postMessage(P):z==="callHandler"?d[P.handler](...P.args):z&&re(`worker sent an unknown command ${z}`)},n.onerror=P=>{throw re(`worker sent an error! ${P.filename}:${P.lineno}: ${P.message}`),P},x&&(n.on("message",P=>n.onmessage({data:P})),n.on("error",P=>n.onerror(P)));var f=[],y=["onExit"],_;for(_ of y)d.hasOwnProperty(_)&&f.push(_);n.postMessage({cmd:"load",handlers:f,urlOrBlob:d.mainScriptUrlOrBlob||e,wasmMemory:$e,wasmModule:Ge})})};d.PThread=me;var tr=n=>{for(;0<n.length;)n.shift()(d)};d.establishStackSpace=()=>{var n=mn(),l=c()[n+52>>>2>>>0];n=c()[n+56>>>2>>>0],di(l,l-n),fn(l)};function jr(n){if(E)return Se(1,0,n);er(n)}d.invokeEntryPoint=(n,l)=>{n=ci.apply(null,[n,l]),0<Ye?me.Sb(n):Jn(n)};function Fn(n){this.Db=n-24,this.pc=function(l){c()[this.Db+4>>>2>>>0]=l},this.Mb=function(l){c()[this.Db+8>>>2>>>0]=l},this.Ib=function(l,f){this.Kb(),this.pc(l),this.Mb(f)},this.Kb=function(){c()[this.Db+16>>>2>>>0]=0}}var qr=0,xr=0;function _r(n,l,f,y){return E?Se(2,1,n,l,f,y):Gt(n,l,f,y)}function Gt(n,l,f,y){if(n>>>=0,l>>>=0,f>>>=0,y>>>=0,typeof SharedArrayBuffer>"u")return re("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var _=[];return E&&_.length===0?_r(n,l,f,y):(n={hc:f,xb:n,Vb:y,nc:_},E?(n.qc="spawnThread",postMessage(n,_),0):Fr(n))}function Kr(n,l,f){return E?Se(3,1,n,l,f):0}function ft(n,l){if(E)return Se(4,1,n,l)}var Qe=n=>{for(var l=0,f=0;f<n.length;++f){var y=n.charCodeAt(f);127>=y?l++:2047>=y?l+=2:55296<=y&&57343>=y?(l+=4,++f):l+=3}return l},Cr=(n,l,f,y)=>{if(f>>>=0,!(0<y))return 0;var _=f;y=f+y-1;for(var P=0;P<n.length;++P){var z=n.charCodeAt(P);if(55296<=z&&57343>=z){var L=n.charCodeAt(++P);z=65536+((z&1023)<<10)|L&1023}if(127>=z){if(f>=y)break;l[f++>>>0]=z}else{if(2047>=z){if(f+1>=y)break;l[f++>>>0]=192|z>>6}else{if(65535>=z){if(f+2>=y)break;l[f++>>>0]=224|z>>12}else{if(f+3>=y)break;l[f++>>>0]=240|z>>18,l[f++>>>0]=128|z>>12&63}l[f++>>>0]=128|z>>6&63}l[f++>>>0]=128|z&63}}return l[f>>>0]=0,f-_},Mt=(n,l,f)=>Cr(n,o(),l,f);function Ar(n,l){if(E)return Se(5,1,n,l)}function Ir(n,l,f){if(E)return Se(6,1,n,l,f)}function Yr(n,l,f){return E?Se(7,1,n,l,f):0}function rr(n,l){if(E)return Se(8,1,n,l)}function Zr(n,l,f){if(E)return Se(9,1,n,l,f)}function Xr(n,l,f,y){if(E)return Se(10,1,n,l,f,y)}function Jr(n,l,f,y){if(E)return Se(11,1,n,l,f,y)}function Qr(n,l,f,y){if(E)return Se(12,1,n,l,f,y)}function Tr(n){if(E)return Se(13,1,n)}function Lt(n,l){if(E)return Se(14,1,n,l)}function en(n,l,f){if(E)return Se(15,1,n,l,f)}var nr=n=>{if(n===null)return"null";var l=typeof n;return l==="object"||l==="array"||l==="function"?n.toString():""+n},Er,dt=n=>{for(var l="";o()[n>>>0];)l+=Er[o()[n++>>>0]];return l},Or={},or={},jn={},et;function tn(n,l,f={}){var y=l.name;if(!n)throw new et(`type "${y}" must have a positive integer typeid pointer`);if(or.hasOwnProperty(n)){if(f.Yb)return;throw new et(`Cannot register type \'${y}\' twice`)}or[n]=l,delete jn[n],Or.hasOwnProperty(n)&&(l=Or[n],delete Or[n],l.forEach(_=>_()))}function mt(n,l,f={}){if(!("argPackAdvance"in l))throw new TypeError("registerType registeredInstance requires argPackAdvance");tn(n,l,f)}var Pr=(n,l,f)=>{switch(l){case 1:return f?y=>r()[y>>>0>>>0]:y=>o()[y>>>0>>>0];case 2:return f?y=>i()[y>>>1>>>0]:y=>u()[y>>>1>>>0];case 4:return f?y=>a()[y>>>2>>>0]:y=>c()[y>>>2>>>0];case 8:return f?y=>he[y>>>3]:y=>Je[y>>>3];default:throw new TypeError(`invalid integer width (${l}): ${n}`)}};function ir(){this.wb=[void 0],this.Nb=[]}var tt=new ir;function Ft(n){n>>>=0,n>=tt.Db&&--tt.get(n).Qb===0&&tt.Mb(n)}var Ze=n=>{if(!n)throw new et("Cannot use deleted val. handle = "+n);return tt.get(n).value},rt=n=>{switch(n){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return tt.Kb({Qb:1,value:n})}};function rn(n){return this.fromWireType(a()[n>>>2>>>0])}var nn=(n,l)=>{switch(l){case 4:return function(f){return this.fromWireType(m()[f>>>2>>>0])};case 8:return function(f){return this.fromWireType(g()[f>>>3>>>0])};default:throw new TypeError(`invalid float width (${l}): ${n}`)}};function on(n){return this.fromWireType(c()[n>>>2>>>0])}var an=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,sn=(n,l)=>{for(var f=n>>1,y=f+l/2;!(f>=y)&&u()[f>>>0];)++f;if(f<<=1,32<f-n&&an)return an.decode(o().slice(n,f));for(f="",y=0;!(y>=l/2);++y){var _=i()[n+2*y>>>1>>>0];if(_==0)break;f+=String.fromCharCode(_)}return f},un=(n,l,f)=>{if(f??=2147483647,2>f)return 0;f-=2;var y=l;f=f<2*n.length?f/2:n.length;for(var _=0;_<f;++_){var P=n.charCodeAt(_);i()[l>>>1>>>0]=P,l+=2}return i()[l>>>1>>>0]=0,l-y},ar=n=>2*n.length,qn=(n,l)=>{for(var f=0,y="";!(f>=l/4);){var _=a()[n+4*f>>>2>>>0];if(_==0)break;++f,65536<=_?(_-=65536,y+=String.fromCharCode(55296|_>>10,56320|_&1023)):y+=String.fromCharCode(_)}return y},le=(n,l,f)=>{if(l>>>=0,f??=2147483647,4>f)return 0;var y=l;f=y+f-4;for(var _=0;_<n.length;++_){var P=n.charCodeAt(_);if(55296<=P&&57343>=P){var z=n.charCodeAt(++_);P=65536+((P&1023)<<10)|z&1023}if(a()[l>>>2>>>0]=P,l+=4,l+4>f)break}return a()[l>>>2>>>0]=0,l-y},ln=n=>{for(var l=0,f=0;f<n.length;++f){var y=n.charCodeAt(f);55296<=y&&57343>=y&&++f,l+=4}return l},zt=()=>{if(!(0<Ye))try{E?Jn(Te):er(Te)}catch(n){$r(n)}};function st(n){n>>>=0,typeof Atomics.oc=="function"&&(Atomics.oc(a(),n>>>2,n).value.then(jt),n+=128,Atomics.store(a(),n>>>2,1))}d.__emscripten_thread_mailbox_await=st;var jt=()=>{var n=mn();if(n&&(st(n),!ge))try{li(),zt()}catch(l){$r(l)}};d.checkMailbox=jt;var sr=[],ur=(n,l)=>{var f=or[n];if(f===void 0)throw n=ai(n),f=dt(n),wt(n),new et(l+" has unknown type "+f);return f},kr=(n,l,f)=>{var y=[];return n=n.toWireType(y,f),y.length&&(c()[l>>>2>>>0]=rt(y)),n},qt=n=>{try{n()}catch(l){Dt(l)}};function dn(){var n=ne,l={};for(let[f,y]of Object.entries(n))l[f]=typeof y=="function"?function(){Pt.push(f);try{return y.apply(null,arguments)}finally{ge||(Pt.pop(),ct&&ht===1&&Pt.length===0&&(ht=0,Ye+=1,qt(mi),typeof Fibers<"u"&&Fibers.uc()))}}:y;return l}var ht=0,ct=null,cn=0,Pt=[],Rr={},s={},p=0,h=null,$=[];function I(){return new Promise((n,l)=>{h={resolve:n,reject:l}})}function M(){var n=Br(65548),l=n+12;c()[n>>>2>>>0]=l,c()[n+4>>>2>>>0]=l+65536,l=Pt[0];var f=Rr[l];return f===void 0&&(f=p++,Rr[l]=f,s[f]=l),l=f,a()[n+8>>>2>>>0]=l,n}function G(){var n=a()[ct+8>>>2>>>0];return n=ne[s[n]],--Ye,n()}function Q(n){if(!ge){if(ht===0){var l=!1,f=!1;n((y=0)=>{if(!ge&&(cn=y,l=!0,f)){ht=2,qt(()=>fi(ct)),typeof Browser<"u"&&Browser.Jb.Xb&&Browser.Jb.resume(),y=!1;try{var _=G()}catch(L){_=L,y=!0}var P=!1;if(!ct){var z=h;z&&(h=null,(y?z.reject:z.resolve)(_),P=!0)}if(y&&!P)throw _}}),f=!0,l||(ht=1,ct=M(),typeof Browser<"u"&&Browser.Jb.Xb&&Browser.Jb.pause(),qt(()=>pi(ct)))}else ht===2?(ht=0,qt(hi),wt(ct),ct=null,$.forEach(y=>{if(!ge)try{y(),zt()}catch(_){$r(_)}})):Dt(`invalid state: ${ht}`);return cn}}function Y(n){return Q(l=>{n().then(l)})}var q=[],ie={},fe=n=>{var l=ie[n];return l===void 0?dt(n):l},xe=()=>typeof globalThis=="object"?globalThis:Function("return this")(),k=n=>{var l=q.length;return q.push(n),l},ue=(n,l)=>{for(var f=Array(n),y=0;y<n;++y)f[y]=ur(c()[l+4*y>>>2>>>0],"parameter "+y);return f},Ie=(n,l)=>Object.defineProperty(l,"name",{value:n});function kt(n){var l=Function;if(!(l instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof l} which is not a function`);var f=Ie(l.name||"unknownFunctionName",function(){});return f.prototype=l.prototype,f=new f,n=l.apply(f,n),n instanceof Object?n:f}var Rt=n=>n%4===0&&(n%100!==0||n%400===0),Ho=[0,31,60,91,121,152,182,213,244,274,305,335],Go=[0,31,59,90,120,151,181,212,243,273,304,334];function Lo(n,l,f,y,_,P,z){return E?Se(16,1,n,l,f,y,_,P,z):-52}function Fo(n,l,f,y,_,P){if(E)return Se(17,1,n,l,f,y,_,P)}var jo=n=>{var l=Qe(n)+1,f=Br(l);return f&&Mt(n,f,l),f},Kn=[],qo=(n,l)=>{Kn.length=0;for(var f;f=o()[n++>>>0];){var y=f!=105;y&=f!=112,l+=y&&l%8?4:0,Kn.push(f==112?c()[l>>>2>>>0]:f==106?he[l>>>3]:f==105?a()[l>>>2>>>0]:g()[l>>>3>>>0]),l+=y?8:4}return Kn},Yn={},Ko=()=>{if(!Zn){var n={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:w||"./this.program"},l;for(l in Yn)Yn[l]===void 0?delete n[l]:n[l]=Yn[l];var f=[];for(l in n)f.push(`${l}=${n[l]}`);Zn=f}return Zn},Zn;function Yo(n,l){if(E)return Se(18,1,n,l);n>>>=0,l>>>=0;var f=0;return Ko().forEach((y,_)=>{var P=l+f;for(_=c()[n+4*_>>>2>>>0]=P,P=0;P<y.length;++P)r()[_++>>>0>>>0]=y.charCodeAt(P);r()[_>>>0>>>0]=0,f+=y.length+1}),0}function Zo(n,l){if(E)return Se(19,1,n,l);n>>>=0,l>>>=0;var f=Ko();c()[n>>>2>>>0]=f.length;var y=0;return f.forEach(_=>y+=_.length+1),c()[l>>>2>>>0]=y,0}function Xo(n){return E?Se(20,1,n):52}function Jo(n,l,f,y){return E?Se(21,1,n,l,f,y):52}function Qo(n,l,f,y){return E?Se(22,1,n,l,f,y):70}var Al=[null,[],[]];function ei(n,l,f,y){if(E)return Se(23,1,n,l,f,y);l>>>=0,f>>>=0,y>>>=0;for(var _=0,P=0;P<f;P++){var z=c()[l>>>2>>>0],L=c()[l+4>>>2>>>0];l+=8;for(var X=0;X<L;X++){var Z=o()[z+X>>>0],ae=Al[n];Z===0||Z===10?((n===1?be:re)(wr(ae,0)),ae.length=0):ae.push(Z)}_+=L}return c()[y>>>2>>>0]=_,0}var ti=[31,29,31,30,31,30,31,31,30,31,30,31],ri=[31,28,31,30,31,30,31,31,30,31,30,31];function Il(n){var l=Array(Qe(n)+1);return Cr(n,l,0,l.length),l}var Tl=(n,l)=>{r().set(n,l>>>0)};function ni(n,l,f,y){function _(R,de,Ee){for(R=typeof R=="number"?R.toString():R||"";R.length<de;)R=Ee[0]+R;return R}function P(R,de){return _(R,de,"0")}function z(R,de){function Ee(yi){return 0>yi?-1:0<yi?1:0}var Kt;return(Kt=Ee(R.getFullYear()-de.getFullYear()))===0&&(Kt=Ee(R.getMonth()-de.getMonth()))===0&&(Kt=Ee(R.getDate()-de.getDate())),Kt}function L(R){switch(R.getDay()){case 0:return new Date(R.getFullYear()-1,11,29);case 1:return R;case 2:return new Date(R.getFullYear(),0,3);case 3:return new Date(R.getFullYear(),0,2);case 4:return new Date(R.getFullYear(),0,1);case 5:return new Date(R.getFullYear()-1,11,31);case 6:return new Date(R.getFullYear()-1,11,30)}}function X(R){var de=R.Ab;for(R=new Date(new Date(R.Bb+1900,0,1).getTime());0<de;){var Ee=R.getMonth(),Kt=(Rt(R.getFullYear())?ti:ri)[Ee];if(de>Kt-R.getDate())de-=Kt-R.getDate()+1,R.setDate(1),11>Ee?R.setMonth(Ee+1):(R.setMonth(0),R.setFullYear(R.getFullYear()+1));else{R.setDate(R.getDate()+de);break}}return Ee=new Date(R.getFullYear()+1,0,4),de=L(new Date(R.getFullYear(),0,4)),Ee=L(Ee),0>=z(de,R)?0>=z(Ee,R)?R.getFullYear()+1:R.getFullYear():R.getFullYear()-1}n>>>=0,l>>>=0,f>>>=0,y>>>=0;var Z=c()[y+40>>>2>>>0];y={lc:a()[y>>>2>>>0],kc:a()[y+4>>>2>>>0],Gb:a()[y+8>>>2>>>0],Lb:a()[y+12>>>2>>>0],Hb:a()[y+16>>>2>>>0],Bb:a()[y+20>>>2>>>0],vb:a()[y+24>>>2>>>0],Ab:a()[y+28>>>2>>>0],tc:a()[y+32>>>2>>>0],jc:a()[y+36>>>2>>>0],mc:Z?Pe(Z):""},f=Pe(f),Z={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ae in Z)f=f.replace(new RegExp(ae,"g"),Z[ae]);var ye="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Ce="January February March April May June July August September October November December".split(" ");Z={"%a":R=>ye[R.vb].substring(0,3),"%A":R=>ye[R.vb],"%b":R=>Ce[R.Hb].substring(0,3),"%B":R=>Ce[R.Hb],"%C":R=>P((R.Bb+1900)/100|0,2),"%d":R=>P(R.Lb,2),"%e":R=>_(R.Lb,2," "),"%g":R=>X(R).toString().substring(2),"%G":R=>X(R),"%H":R=>P(R.Gb,2),"%I":R=>(R=R.Gb,R==0?R=12:12<R&&(R-=12),P(R,2)),"%j":R=>{for(var de=0,Ee=0;Ee<=R.Hb-1;de+=(Rt(R.Bb+1900)?ti:ri)[Ee++]);return P(R.Lb+de,3)},"%m":R=>P(R.Hb+1,2),"%M":R=>P(R.kc,2),"%n":()=>`\n`,"%p":R=>0<=R.Gb&&12>R.Gb?"AM":"PM","%S":R=>P(R.lc,2),"%t":()=>"	","%u":R=>R.vb||7,"%U":R=>P(Math.floor((R.Ab+7-R.vb)/7),2),"%V":R=>{var de=Math.floor((R.Ab+7-(R.vb+6)%7)/7);if(2>=(R.vb+371-R.Ab-2)%7&&de++,de)de==53&&(Ee=(R.vb+371-R.Ab)%7,Ee==4||Ee==3&&Rt(R.Bb)||(de=1));else{de=52;var Ee=(R.vb+7-R.Ab-1)%7;(Ee==4||Ee==5&&Rt(R.Bb%400-1))&&de++}return P(de,2)},"%w":R=>R.vb,"%W":R=>P(Math.floor((R.Ab+7-(R.vb+6)%7)/7),2),"%y":R=>(R.Bb+1900).toString().substring(2),"%Y":R=>R.Bb+1900,"%z":R=>{R=R.jc;var de=0<=R;return R=Math.abs(R)/60,(de?"+":"-")+("0000"+(R/60*100+R%60)).slice(-4)},"%Z":R=>R.mc,"%%":()=>"%"},f=f.replace(/%%/g,"\\0\\0");for(ae in Z)f.includes(ae)&&(f=f.replace(new RegExp(ae,"g"),Z[ae](y)));return f=f.replace(/\\0\\0/g,"%"),ae=Il(f),ae.length>l?0:(Tl(ae,n),ae.length-1)}me.Ib();for(var oi=Array(256),pn=0;256>pn;++pn)oi[pn]=String.fromCharCode(pn);Er=oi,et=d.BindingError=class extends Error{constructor(n){super(n),this.name="BindingError"}},d.InternalError=class extends Error{constructor(n){super(n),this.name="InternalError"}},Object.assign(ir.prototype,{get(n){return this.wb[n]},has(n){return this.wb[n]!==void 0},Kb(n){var l=this.Nb.pop()||this.wb.length;return this.wb[l]=n,l},Mb(n){this.wb[n]=void 0,this.Nb.push(n)}}),tt.wb.push({value:void 0},{value:null},{value:!0},{value:!1}),tt.Db=tt.wb.length,d.count_emval_handles=()=>{for(var n=0,l=tt.Db;l<tt.wb.length;++l)tt.wb[l]!==void 0&&++n;return n};var El=[at,jr,_r,Kr,ft,Ar,Ir,Yr,rr,Zr,Xr,Jr,Qr,Tr,Lt,en,Lo,Fo,Yo,Zo,Xo,Jo,Qo,ei],Ol={ua:function(n,l,f){return Y(async()=>{await d.ac(n,l,f)})},b:function(n,l,f){throw n>>>=0,new Fn(n).Ib(l>>>0,f>>>0),qr=n,xr++,qr},ga:function(n){si(n>>>0,!A,1,!O,131072,!1),me.Tb()},F:function(n){n>>>=0,E?postMessage({cmd:"cleanupThread",thread:n}):me.Rb(me.pb[n])},Y:Gt,z:Kr,ma:ft,U:Ar,W:Ir,N:Yr,ka:rr,da:Zr,ja:Xr,H:Jr,V:Qr,S:Tr,la:Lt,T:en,K:function(n,l,f,y,_){n>>>=0,l>>>=0,f>>>=0,l=dt(l);var P=l.indexOf("u")!=-1;P&&(_=(1n<<64n)-1n),mt(n,{name:l,fromWireType:z=>z,toWireType:function(z,L){if(typeof L!="bigint"&&typeof L!="number")throw new TypeError(`Cannot convert "${nr(L)}" to ${this.name}`);if(L<y||L>_)throw new TypeError(`Passing a number "${nr(L)}" from JS side to C/C++ side to an argument of type "${l}", which is outside the valid range [${y}, ${_}]!`);return L},argPackAdvance:8,readValueFromPointer:Pr(l,f,!P),Cb:null})},sa:function(n,l,f,y){n>>>=0,l=dt(l>>>0),mt(n,{name:l,fromWireType:function(_){return!!_},toWireType:function(_,P){return P?f:y},argPackAdvance:8,readValueFromPointer:function(_){return this.fromWireType(o()[_>>>0])},Cb:null})},ra:function(n,l){n>>>=0,l=dt(l>>>0),mt(n,{name:l,fromWireType:f=>{var y=Ze(f);return Ft(f),y},toWireType:(f,y)=>rt(y),argPackAdvance:8,readValueFromPointer:rn,Cb:null})},J:function(n,l,f){n>>>=0,f>>>=0,l=dt(l>>>0),mt(n,{name:l,fromWireType:y=>y,toWireType:(y,_)=>_,argPackAdvance:8,readValueFromPointer:nn(l,f),Cb:null})},v:function(n,l,f,y,_){if(n>>>=0,f>>>=0,l=dt(l>>>0),_===-1&&(_=4294967295),_=L=>L,y===0){var P=32-8*f;_=L=>L<<P>>>P}var z=l.includes("unsigned")?function(L,X){return X>>>0}:function(L,X){return X};mt(n,{name:l,fromWireType:_,toWireType:z,argPackAdvance:8,readValueFromPointer:Pr(l,f,y!==0),Cb:null})},o:function(n,l,f){function y(P){var z=c()[P>>>2>>>0];return P=c()[P+4>>>2>>>0],new _(r().buffer,P,z)}n>>>=0;var _=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][l];f=dt(f>>>0),mt(n,{name:f,fromWireType:y,argPackAdvance:8,readValueFromPointer:y},{Yb:!0})},L:function(n,l){n>>>=0,l=dt(l>>>0);var f=l==="std::string";mt(n,{name:l,fromWireType:function(y){var _=c()[y>>>2>>>0],P=y+4;if(f)for(var z=P,L=0;L<=_;++L){var X=P+L;if(L==_||o()[X>>>0]==0){if(z=Pe(z,X-z),Z===void 0)var Z=z;else Z+=String.fromCharCode(0),Z+=z;z=X+1}}else{for(Z=Array(_),L=0;L<_;++L)Z[L]=String.fromCharCode(o()[P+L>>>0]);Z=Z.join("")}return wt(y),Z},toWireType:function(y,_){_ instanceof ArrayBuffer&&(_=new Uint8Array(_));var P=typeof _=="string";if(!(P||_ instanceof Uint8Array||_ instanceof Uint8ClampedArray||_ instanceof Int8Array))throw new et("Cannot pass non-string to std::string");var z=f&&P?Qe(_):_.length,L=Br(4+z+1),X=L+4;if(c()[L>>>2>>>0]=z,f&&P)Mt(_,X,z+1);else if(P)for(P=0;P<z;++P){var Z=_.charCodeAt(P);if(255<Z)throw wt(X),new et("String has UTF-16 code units that do not fit in 8 bits");o()[X+P>>>0]=Z}else for(P=0;P<z;++P)o()[X+P>>>0]=_[P];return y!==null&&y.push(wt,L),L},argPackAdvance:8,readValueFromPointer:on,Cb(y){wt(y)}})},B:function(n,l,f){if(n>>>=0,l>>>=0,f>>>=0,f=dt(f),l===2)var y=sn,_=un,P=ar,z=()=>u(),L=1;else l===4&&(y=qn,_=le,P=ln,z=()=>c(),L=2);mt(n,{name:f,fromWireType:X=>{for(var Z=c()[X>>>2>>>0],ae=z(),ye,Ce=X+4,R=0;R<=Z;++R){var de=X+4+R*l;(R==Z||ae[de>>>L]==0)&&(Ce=y(Ce,de-Ce),ye===void 0?ye=Ce:(ye+=String.fromCharCode(0),ye+=Ce),Ce=de+l)}return wt(X),ye},toWireType:(X,Z)=>{if(typeof Z!="string")throw new et(`Cannot pass non-string to C++ string type ${f}`);var ae=P(Z),ye=Br(4+ae+l);return c()[ye>>>2]=ae>>L,_(Z,ye+4,ae+l),X!==null&&X.push(wt,ye),ye},argPackAdvance:8,readValueFromPointer:rn,Cb(X){wt(X)}})},ta:function(n,l){n>>>=0,l=dt(l>>>0),mt(n,{Zb:!0,name:l,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},qa:()=>1,Q:function(n,l){n>>>=0,n==l>>>0?setTimeout(()=>jt()):E?postMessage({targetThread:n,cmd:"checkMailbox"}):(n=me.pb[n])&&n.postMessage({cmd:"checkMailbox"})},Z:function(n,l,f,y){l>>>=0,f/=2,sr.length=f,y=y>>>0>>>3;for(var _=0;_<f;_++)sr[_]=he[y+2*_]?he[y+2*_+1]:g()[y+2*_+1>>>0];return n=0>n?Ht[-n-1]:El[n],me.Wb=l,l=n.apply(null,sr),me.Wb=0,l},fa:st,pa:function(n){x&&me.pb[n>>>0].ref()},t:function(n,l,f){return l>>>=0,f>>>=0,n=Ze(n>>>0),l=ur(l,"emval::as"),kr(l,f,n)},y:function(n){return n>>>=0,Y(()=>(n=Ze(n),n.then(rt)))},p:function(n,l,f,y){return f>>>=0,y>>>=0,n=q[n>>>0],l=Ze(l>>>0),n(null,l,f,y)},k:function(n,l,f,y,_){return f>>>=0,y>>>=0,_>>>=0,n=q[n>>>0],l=Ze(l>>>0),f=fe(f),n(l,l[f],y,_)},c:Ft,C:function(n,l){return l>>>=0,n=Ze(n>>>0),l=Ze(l),n==l},n:function(n){return n>>>=0,n===0?rt(xe()):(n=fe(n),rt(xe()[n]))},j:function(n,l,f){l=ue(n,l>>>0);var y=l.shift();n--;var _=`return function (obj, func, destructorsRef, args) {\n`,P=0,z=[];f===0&&z.push("obj");for(var L=["retType"],X=[y],Z=0;Z<n;++Z)z.push("arg"+Z),L.push("argType"+Z),X.push(l[Z]),_+=`  var arg${Z} = argType${Z}.readValueFromPointer(args${P?"+"+P:""});\n`,P+=l[Z].argPackAdvance;for(_+=`  var rv = ${f===1?"new func":"func.call"}(${z.join(", ")});\n`,Z=0;Z<n;++Z)l[Z].deleteObject&&(_+=`  argType${Z}.deleteObject(arg${Z});\n`);return y.Zb||(L.push("emval_returnValue"),X.push(kr),_+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),L.push(_+`};\n`),n=kt(L).apply(null,X),f=`methodCaller<(${l.map(ae=>ae.name).join(", ")}) => ${y.name}>`,k(Ie(f,n))},s:function(n,l){return l>>>=0,n=Ze(n>>>0),l=Ze(l),rt(n[l])},d:function(n){n>>>=0,4<n&&(tt.get(n).Qb+=1)},w:function(){return rt([])},m:function(n){n=Ze(n>>>0);for(var l=Array(n.length),f=0;f<n.length;f++)l[f]=n[f];return rt(l)},f:function(n){return rt(fe(n>>>0))},l:function(){return rt({})},i:function(n){n>>>=0;for(var l=Ze(n);l.length;){var f=l.pop();l.pop()(f)}Ft(n)},h:function(n,l,f){l>>>=0,f>>>=0,n=Ze(n>>>0),l=Ze(l),f=Ze(f),n[l]=f},e:function(n,l){return l>>>=0,n=ur(n>>>0,"_emval_take_value"),n=n.readValueFromPointer(l),rt(n)},aa:function(n,l){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),l>>>=0,n=new Date(1e3*n),a()[l>>>2>>>0]=n.getUTCSeconds(),a()[l+4>>>2>>>0]=n.getUTCMinutes(),a()[l+8>>>2>>>0]=n.getUTCHours(),a()[l+12>>>2>>>0]=n.getUTCDate(),a()[l+16>>>2>>>0]=n.getUTCMonth(),a()[l+20>>>2>>>0]=n.getUTCFullYear()-1900,a()[l+24>>>2>>>0]=n.getUTCDay(),n=(n.getTime()-Date.UTC(n.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,a()[l+28>>>2>>>0]=n},ba:function(n,l){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),l>>>=0,n=new Date(1e3*n),a()[l>>>2>>>0]=n.getSeconds(),a()[l+4>>>2>>>0]=n.getMinutes(),a()[l+8>>>2>>>0]=n.getHours(),a()[l+12>>>2>>>0]=n.getDate(),a()[l+16>>>2>>>0]=n.getMonth(),a()[l+20>>>2>>>0]=n.getFullYear()-1900,a()[l+24>>>2>>>0]=n.getDay();var f=(Rt(n.getFullYear())?Ho:Go)[n.getMonth()]+n.getDate()-1|0;a()[l+28>>>2>>>0]=f,a()[l+36>>>2>>>0]=-(60*n.getTimezoneOffset()),f=new Date(n.getFullYear(),6,1).getTimezoneOffset();var y=new Date(n.getFullYear(),0,1).getTimezoneOffset();n=(f!=y&&n.getTimezoneOffset()==Math.min(y,f))|0,a()[l+32>>>2>>>0]=n},ca:function(n){n>>>=0;var l=new Date(a()[n+20>>>2>>>0]+1900,a()[n+16>>>2>>>0],a()[n+12>>>2>>>0],a()[n+8>>>2>>>0],a()[n+4>>>2>>>0],a()[n>>>2>>>0],0),f=a()[n+32>>>2>>>0],y=l.getTimezoneOffset(),_=new Date(l.getFullYear(),6,1).getTimezoneOffset(),P=new Date(l.getFullYear(),0,1).getTimezoneOffset(),z=Math.min(P,_);return 0>f?a()[n+32>>>2>>>0]=+(_!=P&&z==y):0<f!=(z==y)&&(_=Math.max(P,_),l.setTime(l.getTime()+6e4*((0<f?z:_)-y))),a()[n+24>>>2>>>0]=l.getDay(),f=(Rt(l.getFullYear())?Ho:Go)[l.getMonth()]+l.getDate()-1|0,a()[n+28>>>2>>>0]=f,a()[n>>>2>>>0]=l.getSeconds(),a()[n+4>>>2>>>0]=l.getMinutes(),a()[n+8>>>2>>>0]=l.getHours(),a()[n+12>>>2>>>0]=l.getDate(),a()[n+16>>>2>>>0]=l.getMonth(),a()[n+20>>>2>>>0]=l.getYear(),n=l.getTime(),isNaN(n)?(a()[ii()>>>2>>>0]=61,n=-1):n/=1e3,BigInt(n)},_:Lo,$:Fo,P:function(n,l,f){function y(Z){return(Z=Z.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?Z[1]:"GMT"}n>>>=0,l>>>=0,f>>>=0;var _=new Date().getFullYear(),P=new Date(_,0,1),z=new Date(_,6,1);_=P.getTimezoneOffset();var L=z.getTimezoneOffset(),X=Math.max(_,L);c()[n>>>2>>>0]=60*X,a()[l>>>2>>>0]=+(_!=L),n=y(P),l=y(z),n=jo(n),l=jo(l),L<_?(c()[f>>>2>>>0]=n,c()[f+4>>>2>>>0]=l):(c()[f>>>2>>>0]=l,c()[f+4>>>2>>>0]=n)},q:()=>{Dt("")},g:function(n,l,f){return n>>>=0,l=qo(l>>>0,f>>>0),Ht[n].apply(null,l)},M:function(n,l,f){return n>>>=0,l=qo(l>>>0,f>>>0),Ht[n].apply(null,l)},G:()=>{},I:()=>Date.now(),oa:()=>{throw Ye+=1,"unwind"},R:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>x?(Ci(),lr(_i)).cpus().length:navigator.hardwareConcurrency,O:function(n){n>>>=0;var l=o().length;if(n<=l||4294901760<n)return!1;for(var f=1;4>=f;f*=2){var y=l*(1+.2/f);y=Math.min(y,n+100663296);var _=Math;y=Math.max(n,y);e:{_=(_.min.call(_,4294901760,y+(65536-y%65536)%65536)-$e.buffer.byteLength+65535)/65536;try{$e.grow(_),ke();var P=1;break e}catch{}P=void 0}if(P)return!0}return!1},ha:Yo,ia:Zo,X:er,A:Xo,E:Jo,ea:Qo,D:ei,a:$e||d.wasmMemory,na:ni,r:function(n,l,f,y){return ni(n>>>0,l>>>0,f>>>0,y>>>0)}},ne=function(){function n(f,y){return ne=f.exports,ne=dn(),ne=Pl(),me.Ub.push(ne.bb),Et.unshift(ne.va),Ge=y,fr(),ne}var l={a:Ol};if(Bt++,d.instantiateWasm)try{return d.instantiateWasm(l,n)}catch(f){re(`Module.instantiateWasm callback failed with error: ${f}`),v(f)}return gr(l,function(f){n(f.instance,f.module)}).catch(v),{}}();d._OrtInit=(n,l)=>(d._OrtInit=ne.wa)(n,l),d._OrtGetLastError=(n,l)=>(d._OrtGetLastError=ne.xa)(n,l),d._OrtCreateSessionOptions=(n,l,f,y,_,P,z,L,X,Z)=>(d._OrtCreateSessionOptions=ne.ya)(n,l,f,y,_,P,z,L,X,Z),d._OrtAppendExecutionProvider=(n,l)=>(d._OrtAppendExecutionProvider=ne.za)(n,l),d._OrtAddFreeDimensionOverride=(n,l,f)=>(d._OrtAddFreeDimensionOverride=ne.Aa)(n,l,f),d._OrtAddSessionConfigEntry=(n,l,f)=>(d._OrtAddSessionConfigEntry=ne.Ba)(n,l,f),d._OrtReleaseSessionOptions=n=>(d._OrtReleaseSessionOptions=ne.Ca)(n),d._OrtCreateSession=(n,l,f)=>(d._OrtCreateSession=ne.Da)(n,l,f),d._OrtReleaseSession=n=>(d._OrtReleaseSession=ne.Ea)(n),d._OrtGetInputOutputCount=(n,l,f)=>(d._OrtGetInputOutputCount=ne.Fa)(n,l,f),d._OrtGetInputName=(n,l)=>(d._OrtGetInputName=ne.Ga)(n,l),d._OrtGetOutputName=(n,l)=>(d._OrtGetOutputName=ne.Ha)(n,l),d._OrtFree=n=>(d._OrtFree=ne.Ia)(n),d._OrtCreateTensor=(n,l,f,y,_,P)=>(d._OrtCreateTensor=ne.Ja)(n,l,f,y,_,P),d._OrtGetTensorData=(n,l,f,y,_)=>(d._OrtGetTensorData=ne.Ka)(n,l,f,y,_),d._OrtReleaseTensor=n=>(d._OrtReleaseTensor=ne.La)(n),d._OrtCreateRunOptions=(n,l,f,y)=>(d._OrtCreateRunOptions=ne.Ma)(n,l,f,y),d._OrtAddRunConfigEntry=(n,l,f)=>(d._OrtAddRunConfigEntry=ne.Na)(n,l,f),d._OrtReleaseRunOptions=n=>(d._OrtReleaseRunOptions=ne.Oa)(n),d._OrtCreateBinding=n=>(d._OrtCreateBinding=ne.Pa)(n),d._OrtBindInput=(n,l,f)=>(d._OrtBindInput=ne.Qa)(n,l,f),d._OrtBindOutput=(n,l,f,y)=>(d._OrtBindOutput=ne.Ra)(n,l,f,y),d._OrtClearBoundOutputs=n=>(d._OrtClearBoundOutputs=ne.Sa)(n),d._OrtReleaseBinding=n=>(d._OrtReleaseBinding=ne.Ta)(n),d._OrtRunWithBinding=(n,l,f,y,_)=>(d._OrtRunWithBinding=ne.Ua)(n,l,f,y,_),d._OrtRun=(n,l,f,y,_,P,z,L)=>(d._OrtRun=ne.Va)(n,l,f,y,_,P,z,L),d._OrtEndProfiling=n=>(d._OrtEndProfiling=ne.Wa)(n),d._JsepOutput=(n,l,f)=>(d._JsepOutput=ne.Xa)(n,l,f),d._JsepGetNodeName=n=>(d._JsepGetNodeName=ne.Ya)(n);var ii=()=>(ii=ne.Za)(),mn=d._pthread_self=()=>(mn=d._pthread_self=ne._a)(),Br=d._malloc=n=>(Br=d._malloc=ne.$a)(n),wt=d._free=n=>(wt=d._free=ne.ab)(n);d.__emscripten_tls_init=()=>(d.__emscripten_tls_init=ne.bb)();var ai=n=>(ai=ne.cb)(n);d.__embind_initialize_bindings=()=>(d.__embind_initialize_bindings=ne.db)();var si=d.__emscripten_thread_init=(n,l,f,y,_,P)=>(si=d.__emscripten_thread_init=ne.fb)(n,l,f,y,_,P);d.__emscripten_thread_crashed=()=>(d.__emscripten_thread_crashed=ne.gb)();var ui=(n,l,f,y)=>(ui=ne.hb)(n,l,f,y),Xn=n=>(Xn=ne.ib)(n),Jn=d.__emscripten_thread_exit=n=>(Jn=d.__emscripten_thread_exit=ne.jb)(n),li=()=>(li=ne.kb)(),di=(n,l)=>(di=ne.lb)(n,l),Qn=()=>(Qn=ne.mb)(),fn=n=>(fn=ne.nb)(n),eo=n=>(eo=ne.ob)(n),ci=d.dynCall_ii=(n,l)=>(ci=d.dynCall_ii=ne.qb)(n,l),pi=n=>(pi=ne.rb)(n),mi=()=>(mi=ne.sb)(),fi=n=>(fi=ne.tb)(n),hi=()=>(hi=ne.ub)();d.___start_em_js=915288,d.___stop_em_js=915449;function Pl(){var n=ne;n=Object.assign({},n);var l=y=>()=>y()>>>0,f=y=>_=>y(_)>>>0;return n.Za=l(n.Za),n._a=l(n._a),n.$a=f(n.$a),n.cb=f(n.cb),n.emscripten_main_runtime_thread_id=l(n.emscripten_main_runtime_thread_id),n.mb=l(n.mb),n.ob=f(n.ob),n}d.wasmMemory=$e,d.stackAlloc=eo,d.stackSave=Qn,d.stackRestore=fn,d.keepRuntimeAlive=()=>0<Ye,d.UTF8ToString=Pe,d.stringToUTF8=Mt,d.lengthBytesUTF8=Qe,d.ExitStatus=yr,d.PThread=me;var hn;Nt=function n(){hn||gi(),hn||(Nt=n)};function gi(){if(!(0<Bt))if(E)b(d),E||tr(Et),startWorker(d);else{if(d.preRun)for(typeof d.preRun=="function"&&(d.preRun=[d.preRun]);d.preRun.length;)Tt.unshift(d.preRun.shift());tr(Tt),0<Bt||hn||(hn=!0,d.calledRun=!0,ge||(E||tr(Et),b(d),E||tr(Wt)))}}return gi(),t.ready}})();typeof Ii=="object"&&typeof so=="object"?so.exports=Ai:typeof define=="function"&&define.amd&&define([],()=>Ai)});var Ei=Dr((Vp,Wl)=>{Wl.exports=\'"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(Module.__embind_initialize_bindings(),initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed?.(),a}}self.onmessage=handleMessage;\\n\'});var co,ut,zr,bn,Ur,Di,po,Ue=te(()=>{"use strict";co=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},ut=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},zr=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],bn=e=>{switch(e){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Ur=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Di=e=>e==="float32"||e==="int32"||e==="int64"||e==="bool"||e==="float16"||e==="uint32",po=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var wn=te(()=>{"use strict"});var zi=te(()=>{"use strict";wn()});var Ui,Vi=te(()=>{"use strict";Ui="1.17.0"});var Wi,Yt,mo=te(()=>{"use strict";Vi();Wi="warning",Yt={wasm:{},webgl:{},webgpu:{},versions:{common:Ui},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Wi=e}},get logLevel(){return Wi}};Object.defineProperty(Yt,"logLevel",{enumerable:!0})});var dr,Ni=te(()=>{"use strict";mo();dr=Yt});var Hi=te(()=>{"use strict"});var Gi=te(()=>{"use strict";vn()});var Fi=te(()=>{"use strict"});var ji=te(()=>{"use strict";vn()});var vn=te(()=>{"use strict";Hi();Gi();Fi();ji()});var $n=te(()=>{"use strict";vn()});var fo,qi,Zt,Xt,ho=te(()=>{"use strict";mo();fo=(e,t)=>{Yt.wasm.trace&&console.timeStamp(`${e}::ORT::${t}`)},qi=(e,t)=>{let r=new Error().stack?.split(/\\r\\n|\\r|\\n/g)||[],o=!1;for(let i=0;i<r.length;i++){if(o&&!r[i].includes("TRACE_FUNC")){let u=`FUNC_${e}::${r[i].trim().split(" ")[1]}`;t&&(u+=`::${t}`),fo("CPU",u);return}r[i].includes("TRACE_FUNC")&&(o=!0)}},Zt=e=>{Yt.wasm.trace&&qi("BEGIN",e)},Xt=e=>{Yt.wasm.trace&&qi("END",e)}});var Ki=te(()=>{"use strict";wn();$n();ho()});var Yi=te(()=>{"use strict";Ki()});var Zi=te(()=>{"use strict"});var Xi=te(()=>{"use strict";wn();$n()});var Ji=te(()=>{"use strict";Xi()});var cr=te(()=>{"use strict";zi();Ni();Yi();$n();ho();Zi();Ji()});var Xl,Jl,Qi,ea,ta,Ql,De,Ut=te(()=>{"use strict";Ue();Xl=["V","I","W","E","F"],Jl=(e,t)=>{console.log(`[${Xl[e]},${new Date().toISOString()}]${t}`)},ta=(e,t)=>{Qi=e,ea=t},Ql=(e,t)=>{let r=Ur(e),o=Ur(Qi);r>=o&&Jl(r,typeof t=="function"?t():t)},De=(...e)=>{ea&&Ql(...e)}});var ra,na=te(()=>{"use strict";Ue();ra=(e,t)=>new(bn(t))(e)});var Sn=te(()=>{"use strict"});var xn,ed,oa,yo,go,aa,sa=te(()=>{"use strict";Ut();Sn();xn=e=>Math.ceil(e/16)*16,ed=1,oa=()=>ed++,yo=async(e,t,r,o)=>{let i=xn(r),u=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let a=e.getCommandEncoder();e.endComputePass(),a.copyBufferToBuffer(t,0,u,0,i),e.flush(),await u.mapAsync(GPUMapMode.READ);let c=u.getMappedRange();if(o){let m=o();return m.set(new Uint8Array(c,0,r)),m}else return new Uint8Array(c.slice(0,r))}finally{u.destroy()}},go=class{constructor(t){this.backend=t;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map}upload(t,r){let o=r.buffer,i=r.byteOffset,u=r.byteLength,a=xn(u),c=this.storageCache.get(t);if(!c)throw new Error("gpu data for uploading does not exist");if(c.originalSize!==u)throw new Error(`inconsistent data size. gpu data size=${c.originalSize}, data size=${u}`);let m=this.backend.device.createBuffer({mappedAtCreation:!0,size:a,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),g=m.getMappedRange();new Uint8Array(g).set(new Uint8Array(o,i,u)),m.unmap();let d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(m,0,c.gpuData.buffer,0,a),De("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(m)}memcpy(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("source gpu data for memcpy does not exist");let i=this.storageCache.get(r);if(!i)throw new Error("destination gpu data for memcpy does not exist");if(o.originalSize!==i.originalSize)throw new Error("inconsistent source and destination gpu data size");let u=xn(o.originalSize),a=this.backend.getCommandEncoder();this.backend.endComputePass(),a.copyBufferToBuffer(o.gpuData.buffer,0,i.gpuData.buffer,0,u)}registerExternalBuffer(t,r,o){let i;if(o){if(i=this.externalBuffers.get(o),i===void 0)throw new Error("previous buffer is not registered");if(t===o)return De("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, buffer is the same, skip.`),i;this.externalBuffers.delete(o)}else i=oa();return this.storageCache.set(i,{gpuData:{id:i,type:0,buffer:t},originalSize:r}),this.externalBuffers.set(t,i),De("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, registered.`),i}unregisterExternalBuffer(t){let r=this.externalBuffers.get(t);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(t),De("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let o=xn(t),i,u=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,a=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(u||a){let m=u?this.freeBuffers:this.freeUniformBuffers,g=m.get(o);g||(g=[],m.set(o,g)),g.length>0?i=g.pop():i=this.backend.device.createBuffer({size:o,usage:r})}else i=this.backend.device.createBuffer({size:o,usage:r});let c={id:oa(),type:0,buffer:i};return this.storageCache.set(c.id,{gpuData:c,originalSize:t}),De("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${c.id}`),c}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r=this.storageCache.get(t);if(!r)throw new Error("releasing data does not exist");return De("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("data does not exist");await yo(this.backend,o.gpuData.buffer,o.originalSize,r)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();this.buffersForUploadingPending=[];for(let t of this.buffersPending)(t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(t.size).push(t):(t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(t.size).push(t):t.destroy();this.buffersPending=[]}dispose(){this.freeBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map}},aa=(...e)=>new go(...e)});var bo,we,je=te(()=>{"use strict";bo=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},we=e=>new bo(e)});var wo,vt,W,Jt,_n,Cn,An,Ae=te(()=>{"use strict";wo=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},vt=class{static calcShape(t,r,o=!1){let i=t.length,u=r.length;if(i===0)return r;if(u===0)return t;let a=Math.max(t.length,r.length),c=new Array(a);if(o){if(i<2||u<2)return;let m=wo.calcMatMulShape([t[i-2],t[i-1]],[r[u-2],r[u-1]]);if(m===void 0)return;[c[a-2],c[a-1]]=m}for(let m=o?3:1;m<=a;m++){let g=i-m<0?1:t[i-m],d=u-m<0?1:r[u-m];if(g!==d&&g>1&&d>1)return;c[a-m]=Math.max(g,d)}return c}static isValidBroadcast(t,r){let o=t.length,i=r.length;if(o>i)return!1;for(let u=1;u<=o;u++)if(t[o-u]!==1&&t[o-u]!==r[i-u])return!1;return!0}},W=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,o){let i=1;for(let u=r;u<o;u++){if(t[u]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=t[u]}return i}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let o=new Array(r);o[r-1]=1,o[r-2]=t[r-1];for(let i=r-3;i>=0;--i)o[i]=o[i+1]*t[i+1];return o}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(o=>this.normalizeAxis(o,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(o=>t[o]):t.slice().reverse()}static padShape(t,r){let o=t.length;return t.map((i,u)=>i+r[u]+r[u+o])}static areEqual(t,r){return t.length!==r.length?!1:t.every((o,i)=>o===r[i])}},Jt=class e{static adjustPoolAttributes(t,r,o,i,u,a){if(!t&&o.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let c=0;c<r.length-2;c++)c>=o.length?o.push(r[c+2]):o[c]=r[c+2];for(let c=0;c<o.length;c++)if(c<i.length){if(i[c]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let c=0;c<o.length;c++)if(c<u.length){if(u[c]<0)throw new Error("dilations should be greater than or equal to 1")}else u.push(1);for(let c=0;c<o.length*2;c++)if(c<a.length){if(a[c]<0)throw new Error("pad should be greater than or equal to 1")}else a.push(0);for(let c=0;c<o.length;c++){if(o[c]<=0)throw new Error("kernel shapes need to be greater than 0");if(a[c]>=o[c]||a[c+o.length]>=o[c])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,o,i,u,a,c){if(c){if(u.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let m=0;m<t.length-2;m++)e.adjustPadAndReturnShape(t[m+(a?1:2)],r[m],o[m],i[m],u,m,m+t.length-2,c)}}static computePoolOutputShape(t,r,o,i,u,a,c){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let m=[r[0],r[1]];return e.computeShapeHelper(t,r,m,o,i,u,a,c),m}static computeConvOutputShape(t,r,o,i,u,a,c){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let m=[t[0],r[0]];return e.computeShapeHelper(!1,t,m,o,i,u,a,c),m}static computeShapeHelper(t,r,o,i,u,a,c,m){if(t)for(let g=0;g<r.length-2;g++)o.push(1);else for(let g=0;g<r.length-2;g++)o.push(e.adjustPadAndReturnShape(r[g+2],i[g],u[g],a[g],c,g,g+r.length-2,m))}static adjustPadAndReturnShape(t,r,o,i,u,a,c,m){let g=o*(i-1)+1;if(m&&m!=="NOTSET")switch(m){case"VALID":return u[a]=0,u[c]=0,Math.floor((t-g)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(o!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let b=((t+r-1)/r-1)*r+i-t;return u[a]=Math.floor(m==="SAME_LOWER"?(b+1)/2:b/2),u[c]=b-u[a],Math.floor((t+b-i)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+u[a]+u[c]-g)/r+1)}},_n=class{static getShapeOfGemmResult(t,r,o,i,u){if(t.length!==2||o.length!==2)throw new Error("shape need to be of size 2");let a,c,m;r?(a=t[1],c=t[0]):(a=t[0],c=t[1]);let g=-1;if(i?(m=o[0],g=1):(m=o[1],g=0),o[g]!==c)throw new Error("dimension mismatch");if(a<=0||m<=0||c<=0)throw new Error("invalid shape specified");if(u&&!vt.isValidBroadcast(u,[a,m]))throw new Error("gemm: invalid bias shape for broadcast");return[a,m,c]}},Cn=-34028234663852886e22,An=34028234663852886e22});var td,$o,Ne,$t,K,He,Xe,gt,lt,ce,So,U,ee,In,vo,ua,pr,Be,_e=te(()=>{"use strict";Ue();Ae();td=64,$o=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},Ne=(e,t=1)=>{let r=$o(e,t);return typeof r=="string"?r:r[0]},$t=(e,t=1)=>{let r=$o(e,t);return typeof r=="string"?r:r[1]},K=e=>e.length===0?[]:[{type:"uint32",data:e},{type:"uint32",data:W.computeStrides(e)}],He=e=>e%4===0?4:e%2===0?2:1,Xe=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,gt=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}f(${r})`,lt=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,ce=(e,t,r)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?`${e}[(${t}) / 4][(${t}) % 4]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,So=(e,t,r,o,i)=>{let u=typeof r=="number",a=u?r:r.length,c=[...new Array(a).keys()],m=a<2?"u32":a<=4?`vec${a}<u32>`:`array<u32, ${a}>`,g=$o(t,i),d=typeof g=="string"?g:g[1],b=typeof g=="string"?g:g[0],v={indices:m,value:d,storage:b,tensor:t},S=F=>typeof F=="string"?F:`${F}u`,w={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},C=u?"uniforms.":"",O=`${C}${e}_shape`,A=`${C}${e}_strides`,x="";for(let F=0;F<a-1;F++)x+=`\n    let dim${F} = current / ${ce(A,F,a)};\n    let rest${F} = current % ${ce(A,F,a)};\n    indices[${F}] = dim${F};\n    current = rest${F};\n    `;x+=`indices[${a-1}] = current;`;let E=a<2?"":`\n  fn o2i_${e}(offset: u32) -> ${v.indices} {\n    var indices: ${v.indices};\n    var current = offset;\n    ${x}\n    return indices;\n  }`,T=F=>(w.offsetToIndices=!0,a<2?F:`o2i_${e}(${F})`),N=[];if(a>=2)for(let F=a-1;F>=0;F--)N.push(`${ce(A,F,a)} * (indices[${F}])`);let B=a<2?"":`\n  fn i2o_${e}(indices: ${v.indices}) -> u32 {\n    return ${N.join("+")};\n  }`,V=F=>(w.indicesToOffset=!0,a<2?F:`i2o_${e}(${F})`),H=(...F)=>a===0?"0u":`${v.indices}(${F.map(S).join(",")})`,J=(F,oe)=>a<2?`${F}`:`${ce(F,oe,a)}`,D=(F,oe,he)=>a<2?`${F}=${he};`:`${ce(F,oe,a)}=${he};`,j={},se=(F,oe)=>{w.broadcastedIndicesToOffset=!0;let he=`${oe.name}broadcastedIndicesTo${e}Offset`;if(he in j)return`${he}(${F})`;let Je=[];for(let ot=a-1;ot>=0;ot--){let ke=oe.indicesGet("outputIndices",ot+oe.rank-a);Je.push(`${J(A,ot)} * (${ke} % ${J(O,ot)})`)}return j[he]=`fn ${he}(outputIndices: ${oe.type.indices}) -> u32 {\n             return ${Je.length>0?Je.join("+"):"0u"};\n           }`,`${he}(${F})`},be=(F,oe)=>(()=>{if(v.storage===v.value)return`${e}[${F}]=${oe};`;if(v.storage==="vec2<u32>"&&v.value==="i32")return`${e}[${F}]=vec2<u32>(u32(${oe}), select(0u, 0xFFFFFFFFu, ${oe} < 0));`;if(v.storage==="vec2<u32>"&&v.value==="u32")return`${e}[${F}]=vec2<u32>(u32(${oe}), 0u);`;if(v.storage==="u32"&&v.value==="vec4<bool>")return`${e}[${F}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${oe}));`;throw new Error(`not supported combination of storage type ${v.storage} and value type ${v.value} yet`)})(),re=F=>(()=>{if(v.storage===v.value)return`${e}[${F}]`;if(v.storage==="vec2<u32>"&&v.value==="i32")return`i32(${e}[${F}].x)`;if(v.storage==="vec2<u32>"&&v.value==="u32")return`u32(${e}[${F}].x)`;if(v.storage==="u32"&&v.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${F}] & 0xFFu), bool(${e}[${F}] & 0xFF00u), bool(${e}[${F}] & 0xFF0000u), bool(${e}[${F}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${v.storage} and value type ${v.value} yet`)})(),$e=a<2?"":`\n  fn get_${e}ByIndices(indices: ${v.indices}) -> ${d} {\n    return ${re(`i2o_${e}(indices)`)};\n  }`,Ge=a<2?"":(()=>{let F=c.map(he=>`d${he}: u32`).join(", "),oe=c.map(he=>`d${he}`).join(", ");return`\n  fn get_${e}(${F}) -> ${d} {\n    return get_${e}ByIndices(${H(oe)});\n  }`})(),ge=(...F)=>{if(F.length!==a)throw new Error(`indices length must be ${a}`);let oe=F.map(S).join(",");return a===0?re("0u"):a===1?re(oe[0]):(w.get=!0,w.getByIndices=!0,w.indicesToOffset=!0,`get_${e}(${oe})`)},Te=F=>a<2?re(F):(w.getByIndices=!0,w.indicesToOffset=!0,`get_${e}ByIndices(${F})`),pe=a<2?"":`\n  fn set_${e}ByIndices(indices: ${v.indices}, value: ${d}) {\n    ${be(`i2o_${e}(indices)`,"value")}\n  }`,ve=a<2?"":(()=>{let F=c.map(he=>`d${he}: u32`).join(", "),oe=c.map(he=>`d${he}`).join(", ");return`\n  fn set_${e}(${F}, value: ${d}) {\n    set_${e}ByIndices(${H(oe)}, value);\n  }`})();return{impl:()=>{let F=[],oe=!1;return w.offsetToIndices&&(F.push(E),oe=!0),w.indicesToOffset&&(F.push(B),oe=!0),w.broadcastedIndicesToOffset&&(Object.values(j).forEach(he=>F.push(he)),oe=!0),w.set&&(F.push(ve),oe=!0),w.setByIndices&&(F.push(pe),oe=!0),w.get&&(F.push(Ge),oe=!0),w.getByIndices&&(F.push($e),oe=!0),!u&&oe&&F.unshift(`const ${O} = ${v.indices}(${r.join(",")});`,`const ${A} = ${v.indices}(${W.computeStrides(r).join(",")});`),F.join(`\n`)},type:v,offsetToIndices:T,indicesToOffset:V,broadcastedIndicesToOffset:se,indices:H,indicesGet:J,indicesSet:D,set:(...F)=>{if(F.length!==a+1)throw new Error(`indices length must be ${a}`);let oe=F[a];if(typeof oe!="string")throw new Error("value must be string");let he=F.slice(0,a).map(S).join(",");return a===0?be("0u",oe):a===1?be(he[0],oe):(w.set=!0,w.setByIndices=!0,w.indicesToOffset=!0,`set_${e}(${he}, ${oe})`)},setByOffset:be,setByIndices:(F,oe)=>a<2?be(F,oe):(w.setByIndices=!0,w.indicesToOffset=!0,`set_${e}ByIndices(${F}, ${oe});`),get:ge,getByOffset:re,getByIndices:Te,usage:o,name:e,strides:A,shape:O,rank:a}},U=(e,t,r,o=1)=>So(e,t,r,"input",o),ee=(e,t,r,o=1)=>So(e,t,r,"output",o),In=(e,t,r,o=1)=>So(e,t,r,"internal",o),vo=class{constructor(t){this.normalizedDispatchGroup=t;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=td){let r=typeof t=="number"?t:t[0],o=typeof t=="number"?1:t[1],i=typeof t=="number"?1:t[2],u=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,a=u?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>`,c=u?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${r*o*i}u + local_idx;`;return`@compute @workgroup_size(${r}, ${o}, ${i})\n  fn main(${a}) {\n    ${c}\n  `}appendVariableUniforms(t){t.rank!==0&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,r){if(t.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let o=t.usage==="input"?"read":"read_write",i=t.type.storage;return`@group(0) @binding(${r}) var<storage, ${o}> ${t.name}: array<${i}>;`}declareVariables(...t){return t.map(r=>this.declareVariable(r,this.variableIndex++)).join(`\n`)}registerInternalVariable(t){if(t.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(t,r,o=1){return this.uniforms.push({name:t,type:r,length:o}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:r,type:o,length:i}of this.uniforms)if(i&&i>4)t.push(`${r}:array<vec4<${o}>, ${Math.ceil(i/4)}>`);else{let u=i==null||i===1?o:`vec${i}<${o}>`;t.push(`${r}:${u}`)}return`\n      struct Uniforms { ${t.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`\n`)+this.internalVariables.map(t=>t.impl()).join(`\n`)}},ua=e=>new vo(e),pr=(e,t)=>{let r=e.length,o=[];for(let i=0;i<r;i++){let u=r-1-i,a=e[u]||1;(t[t.length-1-i]||1)>1&&a===1&&o.unshift(u)}return o},Be=e=>!0});var rd,la,nd,od,yt,da,ca,mr=te(()=>{"use strict";Ae();je();_e();rd=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},la=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,nd=(e,t)=>W.sortBasedOnPerm(e,la(e.length,t)),od=(e,t,r,o)=>{let i=[];i.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let u=0;u<t;++u)i.push(r.indicesSet("a",e[u],`i[${u}]`));return i.push("return a;}"),i.join(`\n`)},yt=(e,t)=>{let r=e.dataType,o=e.dims.length,i=la(o,t),u=Be(o),a=nd(e.dims,i),c=u?a.length:a,m=u?o:e.dims,g=ee("output",r,c),d=U("a",r,m),b=v=>`\n  ${v.registerUniform("output_size","u32").declareVariables(d,g)}\n\n  ${od(i,o,d,g)}\n\n  ${v.mainStart()}\n    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${g.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${g.setByOffset("global_idx",d.getByIndices("aIndices"))}\n  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:u?["rank"]:["dims"]},getRunData:v=>{let S=W.size(a);return{outputs:[{dims:a,dataType:v[0].dataType}],dispatchGroup:{x:Math.ceil(S/64)},programUniforms:u?[{type:"uint32",data:S},...K(v[0].dims),...K(a)]:[{type:"uint32",data:S}]}},getShaderSource:b}},da=(e,t)=>{rd(e.inputs),e.compute(yt(e.inputs[0],t.perm))},ca=e=>we({perm:e.perm})});var id,ad,sd,ud,ld,dd,cd,pd,md,fd,St,pa,ma,fa,ha,ga,ya,ba,wa,va,$a,Sa=te(()=>{"use strict";Ae();_e();Tn();mr();id={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},ad={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},sd={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},ud={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},ld=(e,t)=>{let r=[];for(let o=t-e;o<t;++o)r.push(o);return r},dd=(e,t)=>{let r=[],o=e.length;for(let u=0;u<o;u++)t.indexOf(u)===-1&&r.push(e[u]);let i=t.map(u=>e[u]);return[r,i]},cd=(e,t)=>{let r=e.length+t.length,o=[],i=0;for(let u=0;u<r;u++)t.indexOf(u)===-1?o.push(e[i++]):o.push(1);return o},pd=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},md=(e,t)=>{let r=[];if(!pd(e,t)){for(let o=0;o<t;++o)e.indexOf(o)===-1&&r.push(o);e.forEach(o=>r.push(o))}return r},fd=(e,t,r,o,i,u,a)=>{let c=r[0].dims,m=W.size(u),g=W.size(a),d=U("_A",r[0].dataType,c),b=ee("output",i,u),v=32,S=`\n          var<workgroup> aBestValues : array<${b.type.storage}, ${v}>;\n       `;return{name:e,shaderCache:t,getShaderSource:C=>`\n        ${C.registerUniform("reduceSize","u32").declareVariables(d,b)}\n        ${S}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${C.mainStart(v)}\n\n          let outputIndex = global_idx / ${v};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = ${b.type.storage}(${sd[o]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${v}) {\n           let candidate = ${b.type.storage}(${d.getByOffset("offset + k")});\n           bestValue = ${id[o]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${v}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${ad[o]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${b.setByOffset("outputIndex",`${o==="mean"?`bestValue / ${b.type.storage}(uniforms.reduceSize)`:`${ud[o]}`}`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:u,dataType:i}],dispatchGroup:{x:m},programUniforms:[{type:"uint32",data:g}]})}},St=(e,t,r,o)=>{let i=e.inputs.length===1?r:xo(e.inputs,r),u=i.axes;u.length===0&&!i.noopWithEmptyAxes&&(u=e.inputs[0].dims.map((S,w)=>w));let a=W.normalizeAxes(u,e.inputs[0].dims.length),c=a,m=e.inputs[0],g=md(c,e.inputs[0].dims.length);g.length>0&&(m=e.compute(yt(e.inputs[0],g),{inputs:[0],outputs:[-1]})[0],c=ld(c.length,m.dims.length));let[d,b]=dd(m.dims,c),v=d;i.keepDims&&(v=cd(d,a)),e.compute(fd(t,{hint:i.cacheKey,inputDependencies:["type"]},[m],o,e.inputs[0].dataType,v,b),{inputs:[m]})},pa=(e,t)=>{St(e,"ReduceMeanShared",t,"mean")},ma=(e,t)=>{St(e,"ReduceL1Shared",t,"l1")},fa=(e,t)=>{St(e,"ReduceL2Shared",t,"l2")},ha=(e,t)=>{St(e,"ReduceLogSumExpShared",t,"logSumExp")},ga=(e,t)=>{St(e,"ReduceMaxShared",t,"max")},ya=(e,t)=>{St(e,"ReduceMinShared",t,"min")},ba=(e,t)=>{St(e,"ReduceProdShared",t,"prod")},wa=(e,t)=>{St(e,"ReduceSumShared",t,"sum")},va=(e,t)=>{St(e,"ReduceSumSquareShared",t,"sumSquare")},$a=(e,t)=>{St(e,"ReduceLogSumShared",t,"logSum")}});var xt,hd,En,xo,_t,gd,yd,bd,wd,vd,$d,Sd,xd,_d,Cd,Ct,xa,_a,Ca,Aa,Ia,Ta,Ea,Oa,Pa,ka,Tn=te(()=>{"use strict";Ae();je();_e();Sa();xt=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},hd=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],En=(e,t,r,o,i,u,a=!1,c=!1)=>{let m=[],g=r[0].dims,d=g.length,b=W.normalizeAxes(i,d),v=!c&&b.length===0;g.forEach((O,A)=>{v||b.indexOf(A)>=0?a&&m.push(1):m.push(O)});let S=m.length,w=W.size(m);return{name:e,shaderCache:t,getShaderSource:O=>{let A=[],x=U("_A",r[0].dataType,d),E=ee("output",u,S),T=o(x,E,b),N=T[2];for(let B=0,V=0;B<d;B++)v||b.indexOf(B)>=0?(a&&V++,N=`for(var j${B}: u32 = 0; j${B} < ${g[B]}; j${B}++) {\n                  ${T[2].includes("last_index")?`let last_index = j${B};`:""}\n                  ${x.indicesSet("input_indices",B,`j${B}`)}\n                  ${N}\n                }`):(A.push(`${x.indicesSet("input_indices",B,E.indicesGet("output_indices",V))};`),V++);return`\n\n        ${O.registerUniform("output_size","u32").declareVariables(x,E)}\n\n        ${O.mainStart()}\n          ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${x.type.indices};\n          let output_indices = ${E.offsetToIndices("global_idx")};\n\n          ${A.join(`\n`)}\n          ${T[0]}       // init ops for reduce max/min\n          ${T[1]}\n          ${N}\n          ${T[3]}\n          ${T.length===4?E.setByOffset("global_idx","value"):T.slice(4).join(`\n`)}\n        }`},getRunData:()=>({outputs:[{dims:m,dataType:u}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:[{type:"uint32",data:w},...K(g),...K(m)]})}},xo=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(o=>r.push(Number(o))),we({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},_t=(e,t,r,o)=>{let i=e.inputs,u=i.length===1?r:xo(i,r);e.compute(En(t,{hint:u.cacheKey,inputDependencies:["rank"]},[i[0]],u.noopWithEmptyAxes&&u.axes.length===0?hd:o,u.axes,i[0].dataType,u.keepDims,u.noopWithEmptyAxes),{inputs:[0]})},gd=(e,t)=>{xt(e.inputs),_t(e,"ReduceLogSum",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,"value = log(value);"])},yd=(e,t)=>{xt(e.inputs),_t(e,"ReduceL1",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += abs(${o.getByIndices("input_indices")});`,""])},bd=(e,t)=>{xt(e.inputs),_t(e,"ReduceL2",t,(o,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},wd=(e,t)=>{xt(e.inputs),_t(e,"ReduceLogSumExp",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += exp(${o.getByIndices("input_indices")});`,"value = log(value);"])},vd=(e,t)=>{xt(e.inputs),_t(e,"ReduceMax",t,(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(o.indicesSet("input_indices",c,0));return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = max(value, ${o.getByIndices("input_indices")});`,""]})},$d=(e,t)=>{xt(e.inputs),_t(e,"ReduceMean",t,(o,i,u)=>{let a=1;for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&(a*=e.inputs[0].dims[c]);return["var sum = f32(0);","",`sum += f32(${o.getByIndices("input_indices")});`,`let value = ${i.type.value}(sum / ${a});`]})},Sd=(e,t)=>{xt(e.inputs),_t(e,"ReduceMin",t,(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(`input_indices[${c}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = min(value, ${o.getByIndices("input_indices")});`,""]})},xd=(e,t)=>{xt(e.inputs),_t(e,"ReduceProd",t,(o,i)=>[`var value = ${i.type.storage}(1);`,"",`value *= ${o.getByIndices("input_indices")};`,""])},_d=(e,t)=>{xt(e.inputs),_t(e,"ReduceSum",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,""])},Cd=(e,t)=>{xt(e.inputs),_t(e,"ReduceSumSquare",t,(o,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += t * t;`,""])},Ct=(e,t,r)=>{if(t.length===0)return r;let o=1,i=1;for(let u=0;u<t.length;u++)t.indexOf(u)===-1?o*=e[u]:i*=e[u];return i<32&&o>1024},xa=(e,t)=>{Ct(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?$d(e,t):pa(e,t)},_a=(e,t)=>{Ct(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?yd(e,t):ma(e,t)},Ca=(e,t)=>{Ct(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?bd(e,t):fa(e,t)},Aa=(e,t)=>{Ct(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?wd(e,t):ha(e,t)},Ia=(e,t)=>{Ct(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?vd(e,t):ga(e,t)},Ta=(e,t)=>{Ct(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Sd(e,t):ya(e,t)},Ea=(e,t)=>{Ct(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?xd(e,t):ba(e,t)},Oa=(e,t)=>{Ct(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?_d(e,t):wa(e,t)},Pa=(e,t)=>{Ct(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Cd(e,t):va(e,t)},ka=(e,t)=>{Ct(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?gd(e,t):$a(e,t)}});var Ra,Ba,Da,_o,Ma=te(()=>{"use strict";Ue();je();Tn();Ra=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},Ba=(e,t)=>{Ra(e.inputs);let r=(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(`input_indices[${c}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(En("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},Da=(e,t)=>{Ra(e.inputs);let r=(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(`input_indices[${c}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(En("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},_o=e=>we(e)});var Ad,Id,Td,Ed,On,Od,za,Co=te(()=>{"use strict";Ue();Sn();_e();Ad=(e,t)=>{let r=e[0],o=e[1],i=e[2],u=e[3],a=e[4],c=e[5];if(a&&c)throw new Error("Attention cannot have both past and relative_position_bias");if(r.dims.length!==3)throw new Error(\'Input "input" must have 3 dimensions\');let m=r.dims[0],g=r.dims[1],d=r.dims[2];if(i.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimensions\');if(o.dims.length!==2)throw new Error(\'Input "weights" is expected to have 2 dimensions\');if(o.dims[0]!==d)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(i.dims[0]!==o.dims[1])throw new Error(\'Input "bias" dimension 0 should have same length as dimension 1 of input "weights"\');let b=i.dims[0]/3,v=b,S=v;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let E of t.qkvHiddenSizes)if(E%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");b=t.qkvHiddenSizes[0],v=t.qkvHiddenSizes[1],S=t.qkvHiddenSizes[2]}let w=g;if(b!==v)throw new Error("qkv_hidden_sizes first element should be same as the second");if(i.dims[0]!==b+v+S)throw new Error(\'Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes\');let C=0;if(a){if(v!==S)throw new Error(\'Input "past" expect k_hidden_size == v_hidden_size\');if(a.dims.length!==5)throw new Error(\'Input "past" must have 5 dimensions\');if(a.dims[0]!==2)throw new Error(\'Input "past" first dimension must be 2\');if(a.dims[1]!==m)throw new Error(\'Input "past" second dimension must be batch_size\');if(a.dims[2]!==t.numHeads)throw new Error(\'Input "past" third dimension must be num_heads\');if(a.dims[4]!==v/t.numHeads)throw new Error(\'Input "past" fifth dimension must be k_hidden_size / num_heads\');t.pastPresentShareBuffer||(C=a.dims[3])}let O=w+C,A=-1,x=0;if(u)throw new Error("Mask not supported");if(a)throw new Error("past is not supported");if(c)throw new Error("relativePositionBias is not supported");return{batchSize:m,sequenceLength:g,pastSequenceLength:C,kvSequenceLength:w,totalSequenceLength:O,maxSequenceLength:A,inputHiddenSize:d,hiddenSize:b,vHiddenSize:S,headSize:Math.floor(b/t.numHeads),vHeadSize:Math.floor(S/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:x,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Id=(e,t,r,o)=>{let i=He(o),u=64,a=o/i;a<u?u=1:a/8<64&&(u=Math.ceil(a/8));let c=Math.ceil(o/i/u),g=[{type:ut(t.dataType),data:1/o},{type:"uint32",data:a},{type:"uint32",data:c}],d=Ne(t.dataType,i),b=v=>{let S=ee("x",t.dataType,t.dims,i),w="thread_max_vector";i===2?w="max(thread_max_vector.x, thread_max_vector.y)":i===4&&(w="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let C=$t(t.dataType),O=[{name:"d_inv",type:C},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`\n  var<workgroup> wgMax: array<f32, ${u}>;\n  var<workgroup> wgSum: array<f32, ${u}>;\n  ${v.registerUniforms(O).declareVariables(S)}\n  ${v.mainStart([u,1,1])}\n    let localOffset = local_idx * uniforms.elements_per_wg;\n    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;\n\n    var thread_max_vector = ${Xe("f32",i,"-3.402823e+38f")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      thread_max_vector = max(${gt(C,i,"x[offset + i]")}, thread_max_vector);\n    }\n    wgMax[local_idx] = ${w};\n    workgroupBarrier();\n\n    var maxValue = -3.402823e+38f;\n    for (var i = 0u; i < ${u}; i++) {\n      maxValue = max(wgMax[i], maxValue);\n    }\n\n    var sumVector = ${Xe("f32",i,"0")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      sumVector += exp(${gt(C,i,"x[offset + i]")} - maxValue);\n    }\n    wgSum[local_idx] = ${lt("sumVector",i)};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${u}; i++) {\n      sum += wgSum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        x[offset + i] = ${Xe("f32",i,"uniforms.d_inv")};\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        let f32input = ${gt(C,i,"x[offset + i]")};\n        x[offset + i] = ${S.type.value}(exp(f32input - maxValue) / sum);\n      }\n    }\n  }`};e.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${u};${d};${i}`},getShaderSource:b,getRunData:()=>({outputs:[],dispatchGroup:{x:r},programUniforms:g})},{inputs:[t],outputs:[]})},Td=(e,t,r,o,i,u)=>{let a=[i.batchSize,i.numHeads,i.sequenceLength,i.kvSequenceLength+i.pastSequenceLength],c=u.scale===0?1/Math.sqrt(i.headSize):u.scale,m=He(i.headSize),g=i.headSize/m,d=12,b={x:Math.ceil(i.totalSequenceLength/d),y:Math.ceil(i.sequenceLength/d),z:i.batchSize*i.numHeads},v=ut(t.dataType),S=[{type:"uint32",data:i.sequenceLength},{type:"uint32",data:g},{type:"uint32",data:i.totalSequenceLength},{type:"uint32",data:i.kvSequenceLength},{type:v,data:c}],w=[t,r],C=A=>{let x=U("q",t.dataType,t.dims,m),E=U("key",r.dataType,r.dims,m),T=ee("output",t.dataType,a),N=Ne(t.dataType),B=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:N}];return`\n  const beta: ${N} = 1.0;\n  const TILE_SIZE = ${d}u;\n\n  var<workgroup> tileQ: array<${x.type.storage}, ${d*d}>;\n  var<workgroup> tileK: array<${x.type.storage}, ${d*d}>;\n  ${A.registerUniforms(B).declareVariables(x,E,T)}\n  ${A.mainStart([d,d,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let lm = m + local_id.y;\n    let ln = n + local_id.x;\n\n    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;\n    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;\n\n    var value = ${Xe(N,m)};\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m + local_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * uniforms.M * uniforms.N;\n    if (lm < uniforms.M && ln < uniforms.N) {\n      let outputIdx = headOffset + lm * uniforms.N + ln;\n      output[outputIdx] = ${lt("value",m)} * uniforms.alpha;\n    }\n  }`},O=e.compute({name:"AttentionProbs",shaderCache:{hint:`${m}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:t.dataType,gpuDataType:0}],dispatchGroup:b,programUniforms:S}),getShaderSource:C},{inputs:w,outputs:[-1]})[0];return Id(e,O,i.batchSize*i.numHeads*i.sequenceLength,i.totalSequenceLength),O},Ed=(e,t,r,o)=>{let i=[o.batchSize,o.sequenceLength,o.vHiddenSize],u=12,a={x:Math.ceil(o.vHeadSize/u),y:Math.ceil(o.sequenceLength/u),z:o.batchSize*o.numHeads},c=[{type:"uint32",data:o.sequenceLength},{type:"uint32",data:o.totalSequenceLength},{type:"uint32",data:o.vHeadSize},{type:"uint32",data:o.numHeads},{type:"uint32",data:o.vHiddenSize}],m=g=>{let d=U("probs",t.dataType,t.dims),b=U("v",r.dataType,r.dims),v=ee("output",t.dataType,i),S=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`\n  const TILE_SIZE = ${u}u;\n  var<workgroup> tileQ: array<${d.type.value}, ${u*u}>;\n  var<workgroup> tileK: array<${d.type.value}, ${u*u}>;\n  ${g.registerUniforms(S).declareVariables(d,b,v)}\n  ${g.mainStart([u,u,1])}\n   let headIdx = workgroup_id.z;\n   let m = workgroup_id.y * TILE_SIZE + local_id.y;\n   let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;\n   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;\n\n   var value = ${d.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n     if (m < uniforms.M && w + local_id.x < uniforms.K) {\n       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n     }\n     if (n < uniforms.N && w + local_id.y < uniforms.K) {\n       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];\n     }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;\n   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + currentBatchHeadNumber * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`};return e.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:i,dataType:t.dataType,gpuDataType:0}],dispatchGroup:a,programUniforms:c}),getShaderSource:m},{inputs:[t,r],outputs:[0]})[0]},On=(e,t,r,o,i,u,a,c,m,g,d)=>{let b=Td(e,t,r,m,g,d);Ed(e,b,o,g)},Od=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],o=t.sequenceLength,i=t.inputHiddenSize,u=t.headSize,a=12,c={x:Math.ceil(t.headSize/a),y:Math.ceil(t.sequenceLength/a),z:t.batchSize*t.numHeads},m=[e.inputs[0],e.inputs[1],e.inputs[2]],g=[{type:"uint32",data:o},{type:"uint32",data:i},{type:"uint32",data:u},{type:"uint32",data:t.numHeads},{type:"uint32",data:t.headSize},{type:"uint32",data:t.hiddenSize},{type:"uint32",data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],d=b=>{let v=ee("output_q",m[0].dataType,r),S=ee("output_k",m[0].dataType,r),w=ee("output_v",m[0].dataType,r),C=U("input",m[0].dataType,m[0].dims),O=U("weight",m[1].dataType,m[1].dims),A=U("bias",m[2].dataType,m[2].dims),x=C.type.storage,E=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`\n  const TILE_SIZE = ${a}u;\n  var<workgroup> tileInput: array<${x}, ${a*a}>;\n  var<workgroup> tileWeightQ: array<${x}, ${a*a}>;\n  var<workgroup> tileWeightK: array<${x}, ${a*a}>;\n  var<workgroup> tileWeightV: array<${x}, ${a*a}>;\n  ${b.registerUniforms(E).declareVariables(C,O,A,v,S,w)}\n  ${b.mainStart([a,a,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = workgroup_id.y * TILE_SIZE + local_id.y;\n    let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${x}(0);\n    var valueK = ${x}(0);\n    var valueV = ${x}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:c,programUniforms:g}),getShaderSource:d},{inputs:m,outputs:[-1,-1,-1]})},za=(e,t)=>{let r=Ad(e.inputs,t),[o,i,u]=Od(e,r);return On(e,o,i,u,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t)}});var Pd,kd,Rd,Ua,Va=te(()=>{"use strict";cr();Ae();je();_e();Pd=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(o,i,u)=>{let a=i.length;if(a!==o.length)throw new Error(`${u}: num dimensions != ${a}`);i.forEach((c,m)=>{if(c!==o[m])throw new Error(`${u}: dim[${m}] do not match`)})};if(e[0].dims.length>1){let o=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,o,"Invalid input scale"),r(e[2].dims,o,"Invalid input B"),r(e[3].dims,o,"Invalid input mean"),r(e[4].dims,o,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},kd=(e,t)=>{let{epsilon:r,spatial:o,format:i}=t,u=e[0].dims,a=o?He(u[u.length-1]):1,c=i==="NHWC"&&u.length>1?a:1,m=W.size(u)/a,g=Be(u.length)&&o,d=g?u.length:u,b=U("x",e[0].dataType,e[0].dims,a),v=U("scale",e[1].dataType,e[1].dims,c),S=U("bias",e[2].dataType,e[2].dims,c),w=U("inputMean",e[3].dataType,e[3].dims,c),C=U("inputVar",e[4].dataType,e[4].dims,c),O=ee("y",e[0].dataType,d,a),A=()=>{let E="";if(o)E=`let cOffset = ${u.length===1?"0u":i==="NHWC"?`outputIndices[${u.length-1}] / ${a}`:"outputIndices[1]"};`;else if(i==="NCHW")E=`\n            ${O.indicesSet("outputIndices","0","0")}\n            let cOffset = ${O.indicesToOffset("outputIndices")};`;else{E=`var cIndices = ${v.type.indices}(0);\n                       cIndices[0] = outputIndices[${u.length-1}];`;for(let T=1;T<v.rank;T++)E+=`cIndices[${T}] = outputIndices[${T}];`;E+=`let cOffset = ${v.indicesToOffset("cIndices")};`}return E},x=E=>`\n  const epsilon = ${r};\n  ${E.registerUniform("outputSize","u32").declareVariables(b,v,S,w,C,O)}\n  ${E.mainStart()}\n  ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${O.offsetToIndices(`global_idx * ${a}`)};\n    ${A()}\n    let scale = ${v.getByOffset("cOffset")};\n    let bias = ${S.getByOffset("cOffset")};\n    let inputMean = ${w.getByOffset("cOffset")};\n    let inputVar = ${C.getByOffset("cOffset")};\n    let x = ${b.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${O.setByOffset("global_idx","value")}\n  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${o}_${a}`,inputDependencies:g?["rank","type","type","type","type"]:void 0},getShaderSource:x,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:g?[{type:"uint32",data:m},...K(u)]:[{type:"uint32",data:m}]})}},Rd=e=>we(e),Ua=(e,t)=>{let{inputs:r,outputCount:o}=e,i=Rd({...t,outputCount:o});if(dr.webgpu.validateInputContent&&Pd(r,i),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(kd(r,i))}});var Bd,Dd,Wa,Na=te(()=>{"use strict";Ae();_e();Bd=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Dd=e=>{let t=e[0].dims,r=e[0].dims[2],o=W.size(t)/4,i=e[0].dataType,u=U("input",i,t,4),a=U("bias",i,[r],4),c=U("residual",i,t,4),m=ee("output",i,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:d=>`\n  const channels = ${r}u / 4;\n  ${d.declareVariables(u,a,c,m)}\n\n  ${d.mainStart()}\n    ${d.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n    let value = ${u.getByOffset("global_idx")}\n      + ${a.getByOffset("global_idx % channels")} + ${c.getByOffset("global_idx")};\n    ${m.setByOffset("global_idx","value")}\n  }`}},Wa=e=>{Bd(e.inputs),e.compute(Dd(e.inputs))}});var Md,Oe,Ha,Ga,La,Fa,ja,qa,Ka,Ya,Za,zd,Xa,Ja,Qa,es,Pn,ts,kn,rs,ns,os,is,as,ss,us,ls,ds,cs,ps,ms,fs,hs,gs,ys,bs,Ao=te(()=>{"use strict";Ue();Ae();je();_e();Md=(e,t,r,o,i,u)=>{let a=Math.ceil(t/4),c="";typeof i=="string"?c=`${i}(a)`:c=i("a");let m=U("inputData",r,[a],4),g=ee("outputData",o,[a],4);return`\n      ${e.registerUniform("vec_size","u32").declareVariables(m,g)}\n\n  ${u??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${m.getByOffset("global_idx")};\n    ${g.setByOffset("global_idx",c)}\n  }`},Oe=(e,t,r,o,i,u=e.dataType)=>({name:t,shaderCache:{hint:i,inputDependencies:["type"]},getShaderSource:a=>Md(a,W.size(e.dims),e.dataType,u,r,o),getRunData:a=>({outputs:[{dims:e.dims,dataType:u}],dispatchGroup:{x:Math.ceil(W.size(a[0].dims)/64/4)},programUniforms:[{type:"uint32",data:Math.ceil(W.size(e.dims)/4)}]})}),Ha=e=>{e.compute(Oe(e.inputs[0],"Abs","abs"))},Ga=e=>{e.compute(Oe(e.inputs[0],"Acos","acos"))},La=e=>{e.compute(Oe(e.inputs[0],"Acosh","acosh"))},Fa=e=>{e.compute(Oe(e.inputs[0],"Asin","asin"))},ja=e=>{e.compute(Oe(e.inputs[0],"Asinh","asinh"))},qa=e=>{e.compute(Oe(e.inputs[0],"Atan","atan"))},Ka=e=>{e.compute(Oe(e.inputs[0],"Atanh","atanh"))},Ya=e=>we(e),Za=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${t.to}`)}e.compute(Oe(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},zd=e=>{let t=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:Cn,r=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:An;return we({min:t,max:r})},Xa=(e,t)=>{let r=e.inputs.length===1?t:zd(e.inputs),o=$t(e.inputs[0].dataType);e.compute(Oe(e.inputs[0],"Clip",i=>`clamp(${i}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${o}> = vec4(${o}(${r.min}));\n    const clip_max_: vec4<${o}> = vec4(${o}(${r.max}));\n`,r.cacheKey),{inputs:[0]})},Ja=e=>{e.compute(Oe(e.inputs[0],"Ceil","ceil"))},Qa=e=>{e.compute(Oe(e.inputs[0],"Cos","cos"))},es=e=>{e.compute(Oe(e.inputs[0],"Cosh","cosh"))},Pn=e=>we(e),ts=(e,t)=>{let r=$t(e.inputs[0].dataType);e.compute(Oe(e.inputs[0],"Elu",o=>`elu_vf32(${o})`,`\n  const elu_alpha_ = ${r}(${t.alpha});\n\n  fn elu_f32(a: ${r}) -> ${r} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},kn=(e,t="f32")=>`\nconst r0: ${t} = 0.3275911;\nconst r1: ${t} = 0.254829592;\nconst r2: ${t} = -0.284496736;\nconst r3: ${t} = 1.421413741;\nconst r4: ${t} = -1.453152027;\nconst r5: ${t} = 1.061405429;\n\nfn erf_vf32(v: ${e}) -> ${e} {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,rs=e=>{let t=$t(e.inputs[0].dataType);e.compute(Oe(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,kn(`vec4<${t}>`,t)))},ns=e=>{e.compute(Oe(e.inputs[0],"Exp","exp"))},os=e=>{e.compute(Oe(e.inputs[0],"Floor","floor"))},is=e=>{let t=$t(e.inputs[0].dataType);e.compute(Oe(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,kn(`vec4<${t}>`,t)))},as=(e,t)=>{let r=$t(e.inputs[0].dataType);e.compute(Oe(e.inputs[0],"LeakyRelu",o=>`select(leaky_relu_alpha_ * ${o}, ${o}, ${o} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},ss=e=>{e.compute(Oe(e.inputs[0],"Not",t=>`!${t}`))},us=e=>{e.compute(Oe(e.inputs[0],"Neg",t=>`-${t}`))},ls=e=>{e.compute(Oe(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},ds=e=>{let t=$t(e.inputs[0].dataType);e.compute(Oe(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},cs=e=>{e.compute(Oe(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},ps=e=>{e.compute(Oe(e.inputs[0],"Sin","sin"))},ms=e=>{e.compute(Oe(e.inputs[0],"Sinh","sinh"))},fs=e=>{e.compute(Oe(e.inputs[0],"Sqrt","sqrt"))},hs=e=>{e.compute(Oe(e.inputs[0],"Tan","tan"))},gs=e=>{e.compute(Oe(e.inputs[0],"Tanh","tanh"))},ys=(e,t)=>{let r=$t(e.inputs[0].dataType);return e.compute(Oe(e.inputs[0],"ThresholdedRelu",o=>`select(vec4<${r}>(0.0), ${o}, ${o} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},bs=e=>{e.compute(Oe(e.inputs[0],"Log","log"))}});var Vd,Wd,ws,vs=te(()=>{"use strict";Ae();_e();Ao();Vd=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Wd=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=U("input",e[0].dataType,e[0].dims,4),o=U("bias",e[0].dataType,[e[0].dims[2]],4),i=ee("output",e[0].dataType,t,4),u=W.size(t)/4,a=Ne(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)}}),getShaderSource:m=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${m.declareVariables(r,o,i)}\n\n  ${kn(`vec4<${a}>`,a)}\n\n  ${m.mainStart()}\n    ${m.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${i.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},ws=e=>{Vd(e.inputs),e.compute(Wd(e.inputs))}});var Nd,Hd,At,$s,Ss,xs,_s,Cs,As,Is,Ts,Es,Os,Ps=te(()=>{"use strict";Ue();Ae();_e();Nd=(e,t,r,o,i,u,a,c,m,g,d,b,v)=>{let S,w;typeof c=="string"?S=w=(B,V)=>`${c}((${B}),(${V}))`:typeof c=="function"?S=w=c:(S=c.scalar,w=c.vector);let C=b?t.length:t,O=b?r.length:r,A=b?o.length:o,x=ee("outputData",d,A,4),E=U("aData",m,C,4),T=U("bData",g,O,4),N;if(i)if(u){let B=W.size(t)===1,V=W.size(r)===1,H=t.length>0&&t[t.length-1]%4===0,J=r.length>0&&r[r.length-1]%4===0;B||V?N=x.setByOffset("global_idx",w(B?`${E.type.value}(${E.getByOffset("0")}.x)`:E.getByOffset("global_idx"),V?`${T.type.value}(${T.getByOffset("0")}.x)`:T.getByOffset("global_idx"))):N=`\n            let outputIndices = ${x.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${E.broadcastedIndicesToOffset("outputIndices",x)};\n            let offsetB = ${T.broadcastedIndicesToOffset("outputIndices",x)};\n            ${x.setByOffset("global_idx",w(a||H?E.getByOffset("offsetA / 4u"):`${E.type.value}(${E.getByOffset("offsetA / 4u")}[offsetA % 4u])`,a||J?T.getByOffset("offsetB / 4u"):`${T.type.value}(${T.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else N=x.setByOffset("global_idx",w(E.getByOffset("global_idx"),T.getByOffset("global_idx")));else{if(!u)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let B=(V,H,J="")=>{let D=`aData[indexA${H}][componentA${H}]`,j=`bData[indexB${H}][componentB${H}]`;return`\n            let outputIndices${H} = ${x.offsetToIndices(`global_idx * 4u + ${H}u`)};\n            let offsetA${H} = ${E.broadcastedIndicesToOffset(`outputIndices${H}`,x)};\n            let offsetB${H} = ${T.broadcastedIndicesToOffset(`outputIndices${H}`,x)};\n            let indexA${H} = offsetA${H} / 4u;\n            let indexB${H} = offsetB${H} / 4u;\n            let componentA${H} = offsetA${H} % 4u;\n            let componentB${H} = offsetB${H} % 4u;\n            ${V}[${H}] = ${J}(${S(D,j)});\n          `};d===9?N=`\n            var data = vec4<u32>(0);\n            ${B("data",0,"u32")}\n            ${B("data",1,"u32")}\n            ${B("data",2,"u32")}\n            ${B("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:N=`\n            ${B("outputData[global_idx]",0)}\n            ${B("outputData[global_idx]",1)}\n            ${B("outputData[global_idx]",2)}\n            ${B("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(E,T,x)}\n\n        ${v??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${N}\n      }`},Hd=(e,t,r,o,i,u,a=r.dataType)=>{let c=!W.areEqual(r.dims,o.dims),m=r.dims,g=W.size(r.dims),d=!1,b=!1,v=[c];if(c){let w=vt.calcShape(r.dims,o.dims,!1);if(!w)throw new Error("Can\'t perform binary op on the given tensors");m=w,g=W.size(m);let C=W.size(r.dims)===1,O=W.size(o.dims)===1,A=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,x=o.dims.length>0&&o.dims[o.dims.length-1]%4===0;v.push(C),v.push(O),v.push(A),v.push(x);let E=1;for(let T=1;T<m.length;T++){let N=r.dims[r.dims.length-T]??1,B=o.dims[o.dims.length-T]??1;if(N===B)E*=N;else break}E%4===0?(b=!0,d=!0):(C||O||A||x)&&(d=!0)}else d=!0;v.push(d);let S=Be(r.dims.length)&&Be(o.dims.length)&&Be(m.length);return{name:e,shaderCache:{hint:t+v.map(w=>w.toString()).join("_"),inputDependencies:S?["rank","rank"]:["dims","dims"]},getShaderSource:w=>Nd(w,r.dims,o.dims,m,d,c,b,i,r.dataType,o.dataType,a,S,u),getRunData:()=>({outputs:[{dims:m,dataType:a}],dispatchGroup:{x:Math.ceil(g/64/4)},programUniforms:S?[{type:"uint32",data:Math.ceil(W.size(m)/4)},...K(r.dims),...K(o.dims),...K(m)]:[{type:"uint32",data:Math.ceil(W.size(m)/4)}]})}},At=(e,t,r,o,i,u)=>{e.compute(Hd(t,i??"",e.inputs[0],e.inputs[1],r,o,u))},$s=e=>{At(e,"Add",(t,r)=>`${t}+${r}`)},Ss=e=>{At(e,"Div",(t,r)=>`${t}/${r}`)},xs=e=>{At(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},_s=e=>{At(e,"Mul",(t,r)=>`${t}*${r}`)},Cs=e=>{let t=U("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;At(e,"Pow",{scalar:(o,i)=>`pow_custom(${o},${i})`,vector:(o,i)=>`pow_vector_custom(${o},${i})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},As=e=>{At(e,"Sub",(t,r)=>`${t}-${r}`)},Is=e=>{At(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},Ts=e=>{At(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},Es=e=>{At(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},Os=e=>{At(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}});var Ld,Fd,jd,qd,ks,Rs,Bs=te(()=>{"use strict";Ae();je();_e();Ld=e=>{if(!e||e.length<1)throw new Error("too few inputs");let t=e[0].dataType,r=e[0].dims.length;for(let o of e){if(o.dataType!==t)throw new Error("input tensors should be one type");if(o.dims.length!==r)throw new Error("input tensors should have the same shape")}},Fd=(e,t)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${t});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,jd=(e,t)=>{let r=e.length,o=[];for(let i=0;i<r;++i){let u=t.setByOffset("global_idx",e[i].getByIndices("indices"));r===1?o.push(u):i===0?o.push(`if (inputIndex == ${i}u) { ${u} }`):i===r-1?o.push(`else { ${u} }`):o.push(`else if (inputIndex == ${i}) { ${u} }`)}return o.join(`\n`)},qd=(e,t)=>{let r=e[0].dims.slice();if(t>=r.length||t<-1*r.length)throw new Error("axis specified for concat doesn\'t match input dimensionality");let o=t<0?r.length+t:t,i=r.slice(0);for(let T=1;T<e.length;T++){let N=e[T].dims.slice();for(let B=0;B<r.length;B++)if(B===o)i[o]+=N[B];else if(r[B]!==N[B])throw new Error("non concat dimensions must match")}let u=W.size(i),a=new Array(e.length),c=new Array(e.length),m=e[0].dataType,g=0,d=[],b=[],v=[],S=[{type:"uint32",data:u}];for(let T=0;T<e.length;++T)g+=e[T].dims[o],a[T]=g,v.push(Be(e[T].dims.length)),b.push(v[T]?e[T].dims.length:e[T].dims),c[T]=U(`input${T}`,m,b[T]),d.push(v[T]?"rank":"dims"),S.push({type:"uint32",data:a[T]});for(let T=0;T<e.length;++T)v[T]&&S.push(...K(e[T].dims));let w=Be(i.length);w&&S.push(...K(i));let C=w?i.length:i,O=ee("output",m,C),A=O.indicesGet("indices",o),x=Array.from(Array(a.length).keys()).map(T=>`uniforms.sizeInConcatAxis${T}`).join(","),E=T=>`\n\n  ${(()=>{T.registerUniform("outputSize","u32");for(let N=0;N<e.length;N++)T.registerUniform(`sizeInConcatAxis${N}`,"u32");return T.declareVariables(...c,O)})()}\n\n  ${Fd(a.length,x)}\n\n  ${T.mainStart()}\n    ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${O.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${A});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${a.length}u>(${x});\n      ${A} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${jd(c,O)}\n  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:S}),getShaderSource:E}},ks=(e,t)=>{Ld(e.inputs),e.compute(qd(e.inputs,t.axis))},Rs=e=>we({axis:e.axis})});var It,Rn,Vt=te(()=>{"use strict";Ae();It=(e,t)=>{switch(e.activation){case"Relu":return{activationFunction:"",applyActivation:`value = max(value, ${t}(0.0));`};case"Sigmoid":return{activationFunction:"",applyActivation:`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`};case"Clip":return{activationFunction:`const clip_min_=${t}(${e.clipMin});const clip_max_=${t}(${e.clipMax});`,applyActivation:"value = clamp(value, clip_min_, clip_max_);"};default:return{activationFunction:"",applyActivation:""}}},Rn=e=>{let t=e?.activation||"";if(t==="Clip"){let[r,o]=e?.activation_params||[Cn,An];return{activation:t,clipMax:o,clipMin:r,activationCacheKey:`${t}:${r},${o}`}}return{activation:t,activationCacheKey:t}}});var qe,Bn,Dn=te(()=>{"use strict";qe=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Bn=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `});var Mn,Io=te(()=>{"use strict";Mn=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`});var Kd,Yd,Vr,Ds,Zd,Wr,Xd,zn,Nr=te(()=>{"use strict";Ae();_e();Vt();Dn();Kd=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,Yd=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,Vr=(e,t,r="f32",o,i=!1,u=32,a=!1,c=32)=>{let m=t[1]*e[1],g=t[0]*e[0],d=i?m:u,b=i?u:m,v=d/t[0],S=u/t[1];if(!((i&&v===4&&e[1]===4||!i&&(v===3||v===4))&&d%t[0]===0&&u%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${i} is true, innerElementSize ${v} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${v} must be 3 or 4.\n  tileAWidth ${d} must be divisible by workgroupSize[0]${t[0]}. tileInner ${u} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${v}<${r}>, ${d/v}>, ${b}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${r}>, ${g/e[0]}>, ${u}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${v};\nconst tileInner = ${u};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${a?"0":"i32(globalId.z)"};\n  ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${m};\n\n  let numTiles = ${a?`${Math.ceil(c/u)}`:"(uniforms.dimInner - 1) / tileInner + 1"};\n  var kStart = ${a?`i32(globalId.z) * ${c}`:"0"};\n\n  var acc: array<vec4<${r}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${S};\n  for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${Kd(i,o)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${S}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${o?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${v===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${Yd(i,v)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},Ds=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,Zd=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Wr=(e,t,r="f32",o,i=!1,u=32,a=!1,c=32,m=!1)=>{let g=e[1]*t[1],d=e[0]*t[0],b=i?g:u,v=i?u:g;if(!(v%t[1]===0&&b%t[0]===0&&u%t[1]===0))throw new Error(`tileAHight ${v} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${b} must be divisible by workgroupSize[0]${t[0]}, tileInner ${u} must be divisible by workgroupSize[1]${t[1]}`);let S=v/t[1],w=b/t[0],C=u/t[1],O=m?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${g};\n    let globalColStart = i32(workgroupId.x) * ${d};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${v}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${b}; inputCol = inputCol + ${t[0]}) {\n          ${Ds(i,o)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${u}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${o?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${r}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${g};\n\nlet tileRowA = i32(localId.y) * ${S};\nlet tileColA = i32(localId.x) * ${w};\nlet tileRowB = i32(localId.y) * ${C};\n// Loop over shared dimension.\nfor (var t = 0; t < numTiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${S}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${w}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${Ds(i,o)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${C}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${o?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${r}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${Zd(i)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${r}, ${b}>, ${v}>;\n  var<workgroup> mm_Bsub : array<array<${r}, ${d}>, ${u}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${u};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${a?"0":"i32(globalId.z)"};\n    ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n    let numTiles = ${a?`${Math.ceil(c/u)}`:"(uniforms.dimInner - 1) / tileInner + 1"};\n    var kStart = ${a?`i32(globalId.z) * ${c}`:"0"};\n\n    var acc : array<array<${r}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${O}\n  }\n`},Xd=(e,t,r,o,i,u=!1)=>{let[a,c,m]=i,[g,d,b,v]=o,S=pr(a,m),w=pr(c,m),C=Ne(o[0].type.tensor),O=()=>{let E=d.rank,T=g.rank,N=`var aIndices: ${d.type.indices};`;for(let B=E-2-1,V=T-1;B>=0;B--,V--)N+=`\naIndices[${B}] = ${T>1?`batchIndices[${V}]`:"batchIndices"};`;return S.forEach(B=>{N+=`\naIndices[${B}] = 0;`}),N+=`\naIndices[${E-2}] = u32(row);\n                   aIndices[${E-1}] = u32(colIn);`,N},A=()=>{let E=b.rank,T=g.rank,N=`var bIndices: ${b.type.indices};`;for(let B=E-2-1,V=T-1;B>=0;B--,V--)N+=`\nbIndices[${B}] = ${T>1?`batchIndices[${V}]`:"batchIndices"};`;return w.forEach(B=>{N+=`\nbIndices[${B}] = 0;`}),N+=`\nbIndices[${E-2}] = u32(row);\n                   bIndices[${E-1}] = u32(colIn);`,N};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${g.type.indices}) -> ${qe(e,C)} {\n      var value = ${qe(e,C)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dimAOuter && col < uniforms.dimInner)\n      {\n        ${O()}\n        value = ${d.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${g.type.indices}) -> ${qe(e,C)} {\n      var value = ${qe(e,C)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dimInner && col < uniforms.dimBOuter)\n      {\n        ${A()}\n        value = ${b.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${qe(e,C)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${u?"bias[colIn]":`${qe(e,C)}(bias[row])`};`:""}\n        ${r}\n        ${v.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},zn=(e,t,r,o,i=!1)=>{let u=e[0].dims,a=e[1].dims,c=u.slice(0,-2),m=a.slice(0,-2),g=o?o.slice(0,-2):r.slice(0,-2),d=Be(g.length),b=d?g.length:g,v=In("batchDims",e[0].dataType,b,1),S=W.size(g),w=u[u.length-2],C=u[u.length-1],O=a[a.length-1],A=C%4===0&&O%4===0,x=w<=8?[4,1,1]:[4,4,1],E=[8,8,1],T=[Math.ceil(O/E[0]/x[0]),Math.ceil(w/E[1]/x[1]),Math.ceil(S/E[2]/x[2])],N=Ne(e[0].dataType),B=A?4:1,V=[...c,w,C/B],H=Be(V.length),J=H?V.length:V,D=[...m,C,O/B],j=Be(D.length),se=j?D.length:D,be=[S,w,O/B],re=U("a",e[0].dataType,J,B),$e=U("b",e[1].dataType,se,B),Ge=ee("result",e[0].dataType,be.length,B),ge=[re,$e],Te=[{type:"int32",data:w},{type:"int32",data:O},{type:"int32",data:C}];d&&Te.push(...K(g)),H&&Te.push(...K(V)),j&&Te.push(...K(D));let pe=[];pe.push(H?"rank":"dims"),pe.push(j?"rank":"dims");let ve=e.length>2,{activationFunction:We,applyActivation:Me}=It(t,Ge.type.value),Ke=Xd(B,ve,Me,[v,re,$e,Ge],[c,m,g],i);if(ve){let oe=i?B:1;ge.push(U("bias",e[2].dataType,e[2].dims.length,oe)),Te.push(...K(e[2].dims)),pe.push("rank")}Te.push(...K(be));let F=oe=>`\n  ${oe.registerUniform("dimAOuter","i32").registerUniform("dimBOuter","i32").registerUniform("dimInner","i32").registerInternalVariables(v).declareVariables(...ge,Ge)}\n  ${We}\n  ${Ke}\n  ${A?Vr(x,E,N,v):Wr(x,E,N,v)}\n                   `;return{name:"MatMul",shaderCache:{hint:t.activationCacheKey+`${x}${A}${i}`,inputDependencies:pe},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:T[0],y:T[1],z:T[2]},programUniforms:Te}),getShaderSource:F}}});var Jd,Ms,zs=te(()=>{"use strict";Ut();_e();Vt();Dn();Io();Nr();Jd=(e,t,r,o,i=!1,u,a=4,c=4,m=4,g="f32")=>{let d=j=>{switch(j){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${g}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${j} is not supported.`)}},b=j=>{switch(j){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${j} is not supported.`)}},v=e?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,S=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,w=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",C=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",O=e?"row":"col",A=e?"col":"row",x=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${O} / outWidth;\n    let outCol = ${O} % outWidth;\n\n    let WRow = ${A} / (filterDims[1] * inChannels);\n    let WCol = ${A} / inChannels % filterDims[1];\n    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];\n    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];\n    let xCh = ${A} % inChannels;\n    var resData = ${qe(a,g)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the \'same\' padding type.\n    if (xRow >= 0 && xRow < ${w} && xCol >= 0 && xCol < ${C}) {\n      ${v}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${d(a)}\n    }\n    return resData;`,E=e?t&&o?`\n    let col = colIn * ${a};\n    ${x}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n      ${x}\n    }\n    return ${qe(a,g)}(0.0);`:o&&r?`\n    let col = colIn * ${a};\n    ${x}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dimInner && col < uniforms.dimBOuter) {\n      ${x}\n    }\n    return ${qe(a,g)}(0.0);`,T=`${b(c)}`,N=qe(m,g),B=e?qe(a,g):qe(c,g),V=e?qe(c,g):qe(a,g),{activationFunction:H,applyActivation:J}=It(u,N);return`\n    ${H}\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${B} {\n      ${e?E:T}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${V} {\n      ${e?T:E}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${N}) {\n      let col = colIn * ${m};\n      if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${S}\n      ${Bn(i)}\n      ${J}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},Ms=(e,t,r,o,i,u,a,c)=>{let m=t.format==="NHWC",g=m?e[0].dims[3]:e[0].dims[1],d=r[0],b=m?r[2]:r[3],v=m?r[1]:r[2],S=m?r[3]:r[1],w=m&&(g%4===0||g%3===0)&&S%4===0,C=m?S:b*v,O=m?b*v:S,A=[8,8,1],x=o<=8?[4,1,1]:[4,4,1],E=[Math.ceil(C/A[0]/x[0]),Math.ceil(O/A[1]/x[1]),Math.ceil(d/A[2]/x[2])];De("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${E}`);let T=w?m&&g%4!==0?3:4:1,N=A[1]*x[1],B=A[0]*x[0],V=Math.max(A[0]*T,A[1]),H=o%N===0,J=i%B===0,D=u%V===0,j=w?[T,4,4]:[1,1,1],se=Ne(e[0].dataType),be=w?4:1,re=[{type:"int32",data:o},{type:"int32",data:i},{type:"int32",data:u}],$e=U("x",e[0].dataType,e[0].dims.length,T===3?1:T),Ge=U("w",e[1].dataType,e[1].dims.length,be),ge=[$e,Ge];re.push(...K(e[0].dims)),re.push(...K(e[1].dims));let Te=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${w?`vec4<${se}>`:se}) {\n        result[flatIndex] = ${w?`vec4<${se}>`:se}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${w?`vec4<${se}>`:se}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${w?"/ 4":""}, value);\n      }`;if(a){let ve=U("bias",e[2].dataType,e[2].dims.length,be);ge.push(ve),re.push(...K(e[2].dims)),Te+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${w?`vec4<${se}>`:se} {\n          return bias[coords.${m?"w":"y"}${w?"/ 4":""}];\n        }`}let pe=ee("result",e[0].dataType,r.length,be);return re.push(...K(r)),{name:"Conv2DMatMul",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:re}),getShaderSource:ve=>`\n        ${Mn("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${ve.registerUniform("dimAOuter","i32").registerUniform("dimBOuter","i32").registerUniform("dimInner","i32").declareVariables(...ge,pe)}\n        const filterDims : vec2<i32> = vec2<i32>(${t.kernelShape[0]}, ${t.kernelShape[1]});\n        const pad : vec2<i32> = vec2<i32>(${t.pads[0]}, ${t.pads[1]});\n        const stride : vec2<i32> = vec2<i32>(${t.strides[0]}, ${t.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${t.dilations[0]}, ${t.dilations[1]});\n        ${Te}\n        ${Jd(m,H,J,D,a,t,j[0],j[1],j[2],se)}\n            ${w?Vr(x,A,se,void 0,!m,V):Wr(x,A,se,void 0,!m,V,!1,void 0,c)}`}}});var To,Us=te(()=>{"use strict";Ae();_e();Oo();Vt();To=(e,t,r)=>{let o=e.length>2,i=o?"value += b[output_channel];":"",u=e[0].dims,a=e[1].dims,c=a[0]/t.group,m=t.format==="NHWC",g=Eo(u,a,t.dilations,t.pads,t.strides,m),d=W.size(g),b=ee("output",e[0].dataType,g),{activationFunction:v,applyActivation:S}=It(t,b.type.value),w=U("x",e[0].dataType,u),C=U("w",e[1].dataType,a),O=[w,C];o&&O.push(U("b",e[2].dataType,e[2].dims));let A=x=>`\n  const strides: vec2<u32> = vec2(${t.strides[0]}u, ${t.strides[1]}u);\n  const pads: vec2<u32> = vec2(${t.pads[0]}u, ${t.pads[1]}u);\n\n  ${x.declareVariables(...O,b)}\n\n  ${v}\n\n  ${x.mainStart()}\n    ${x.guardAgainstOutOfBoundsWorkgroupSizes(d)}\n\n    let outputIndices = ${b.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${m?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${m?1:2}], outputIndices[${m?2:3}]) * strides - pads;\n    let group_id: u32 = output_channel / ${c}u;\n\n    var value: ${b.type.value} = ${b.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < ${a[1]}u; wInChannel++) {\n      let input_channel = group_id * ${a[1]}u + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < ${a[2]}u; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * ${t.dilations[0]}u;\n\n        if (xHeight < 0u || xHeight >= ${u[m?1:2]}u) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < ${a[3]}u; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * ${t.dilations[1]}u;\n          if (xWidth < 0u || xWidth >= ${u[m?2:3]}u) {\n            continue;\n          }\n\n          let xVal = ${m?w.get("batch","xHeight","xWidth","input_channel"):w.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${C.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${i}\n    ${S}\n    ${b.setByOffset("global_idx","value")}\n  }`;return{name:"GroupedConv",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r?r(g):g,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)}}),getShaderSource:A}}});var Po,Qd,Vs,ko=te(()=>{"use strict";Ae();Nr();_e();Vt();Po=(e,t,r,o,i=!1)=>{let u=e[0].dims,a=e[1].dims,c=u[u.length-2],m=a[a.length-1],g=u[u.length-1],d=He(m),b=He(g),v=He(c),S=W.size(r)/d/v,w=e.length>2,C=o?o.slice(0,-2):r.slice(0,-2),A=[W.size(C),c,m],x=[{type:"uint32",data:S},{type:"uint32",data:c},{type:"uint32",data:m},{type:"uint32",data:g},...K(C),...K(u),...K(a)];w&&x.push(...K(e[2].dims)),x.push(...K(A));let E=T=>{let N=In("batch_dims",e[0].dataType,C.length),B=U("a",e[0].dataType,u.length,b),V=U("b",e[1].dataType,a.length,d),H=ee("output",e[0].dataType,A.length,d),{activationFunction:J,applyActivation:D}=It(t,H.type.value),j=[B,V],se="";if(w){let pe=i?d:1;j.push(U("bias",e[2].dataType,e[2].dims.length,pe)),se=`${i?`value += bias[col / ${pe}];`:`value += ${H.type.value}(bias[row + i]);`}`}let be=u.slice(0,-2),re=a.slice(0,-2),$e=pr(be,C),Ge=pr(re,C),ge=(pe,ve)=>{let We=pe.rank,Me=pe.name;if(We===2)return`var ${Me}_indices = ${pe.type.indices}(0u, 0u);`;let Ke=N.rank,F=`var ${Me}_indices: ${pe.type.indices};`;for(let oe=We-2-1,he=Ke-1;oe>=0;oe--,he--)F+=`\n${Me}_indices[${oe}] = ${Ke>1?`batch_indices[${he}]`:"batch_indices"};`;return ve.forEach(oe=>{F+=`\n${Me}_indices[${oe}] = 0;`}),F+=`${Me}_indices[${We-2}] = 0u;\n                     ${Me}_indices[${We-1}] = 0u;`,F},Te=()=>{let pe=`var a_data: ${B.type.value};`;for(let ve=0;ve<b;ve++)pe+=`\n              let b_data${ve} = b[(b_offset + (k + ${ve}) * uniforms.N + col) / ${d}];`;for(let ve=0;ve<v;ve++){pe+=`a_data = a[(a_offset + (row + ${ve}) * uniforms.K + k) / ${b}];`;for(let We=0;We<b;We++)pe+=`\n            values[${ve}] = fma(${V.type.value}(a_data${b===1?"":`[${We}]`}), b_data${We}, values[${ve}]);\n`}return pe};return`\n  ${T.registerUniform("outputSize","u32").registerUniform("M","u32").registerUniform("N","u32").registerUniform("K","u32").registerInternalVariables(N).declareVariables(...j,H)}\n  ${J}\n  ${T.mainStart()}\n    ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    let col = (global_idx % (uniforms.N / ${d})) * ${d};\n    var index1 = global_idx / (uniforms.N / ${d});\n    let stride1 = uniforms.M / ${v};\n    let row = (index1 % stride1) * ${v};\n    let batch = index1 / stride1;\n\n    ${r.length===2?"":`let batch_indices = ${N.offsetToIndices("batch")};`}\n    ${ge(B,$e)}\n    let a_offset = ${B.indicesToOffset("a_indices")};\n    ${ge(V,Ge)}\n    let b_offset = ${V.indicesToOffset("b_indices")};\n    var values: array<${H.type.value}, ${v}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${b}) {\n      ${Te()}\n    }\n    for (var i = 0u; i < ${v}u; i++) {\n      var value = values[i];\n      ${se}\n      ${D}\n      let cur_indices = ${H.type.indices}(batch, row + i, col);\n      let offset = ${H.indicesToOffset("cur_indices")};\n      ${H.setByOffset(`offset / ${d}`,"value")};\n    }\n  }\n  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activationCacheKey}_${d}_${b}_${v}_${i}`,inputDependencies:w?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(S/64)},programUniforms:x}),getShaderSource:E}},Qd=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Vs=e=>{Qd(e.inputs);let t=vt.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can\'t use matmul on the given tensors");let r=t[t.length-1],o=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&o<8?e.compute(Po(e.inputs,{activation:"",activationCacheKey:""},t)):e.compute(zn(e.inputs,{activation:"",activationCacheKey:""},t))}});var Eo,Ws,ec,Ns,Ro,tc,rc,Bo,Oo=te(()=>{"use strict";Ae();je();zs();Nr();Us();Vt();ko();mr();Eo=(e,t,r,o,i,u)=>{let a=e[0],c=e.slice(u?1:2,u?3:4),m=c.length,g=t[0],b=t.slice(2).map((w,C)=>w+(w-1)*(r[C]-1)),S=c.map((w,C)=>w+o[C]+o[C+m]).map((w,C)=>Math.floor((w-b[C]+i[C])/i[C]));return S.splice(0,0,a),S.splice(u?3:1,0,g),S},Ws=[2,3,1,0],ec=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[1]*t.group;if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let i=e[0].dims.length-2;if(t.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(t.strides.length!==i)throw new Error(`strides should be ${i}D`);if(t.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},Ns=(e,t)=>{let r=e.kernelShape.slice();for(let u=2;u<t[1].dims.length;++u)r[u-2]===0&&(r[u-2]=t[1].dims[u]);let o=e.pads.slice();Jt.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,o,e.format==="NHWC",e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:r,pads:o,cacheKey:e.cacheKey}),i},Ro=e=>{let t=Rn(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],i=e.dilations,u=e.group,a=e.kernel_shape,c=e.pads,m=e.strides,g=e.w_is_const();return we({autoPad:o,format:r,dilations:i,group:u,kernelShape:a,pads:c,strides:m,wIsConst:g,...t})},tc=(e,t,r)=>{let o=Ns(r,t),i=r.format==="NHWC";if(r.group!==1){e.compute(To(t,o));return}let u=t.length===3,a=t[0].dims[i?1:2],c=t[0].dims[i?2:3],m=t[0].dims[i?3:1],g=t[1].dims[2],d=t[1].dims[3],b=Eo(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,i),v=b[i?1:2],S=b[i?2:3],w=b[i?3:1],C=i&&g===a&&d===c&&r.pads[0]===0&&r.pads[1]===0;if(C||g===1&&d===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let B=b[0],V,H,J,D=[];if(i){let be=e.kernelCustomData.wT??e.compute(yt(t[1],Ws),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=be),C){let re=a*c*m;V=t[0].reshape([1,B,re]),H=be.reshape([1,re,w]),J=[1,B,w]}else V=t[0].reshape([B,a*c,m]),H=be.reshape([1,m,w]),J=[B,v*S,w];D.push(V),D.push(H)}else V=t[0].reshape([B,m,a*c]),H=t[1].reshape([1,w,m]),J=[B,w,v*S],D.push(H),D.push(V);u&&D.push(t[2]);let j=J[2],se=D[0].dims[D[0].dims.length-1];j<8&&se<8?e.compute(Po(D,o,b,J,i),{inputs:D}):e.compute(zn(D,o,b,J,i),{inputs:D});return}let O=!0,A=e.kernelCustomData.wT??e.compute(yt(t[1],Ws),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=A);let x=[t[0],A];u&&x.push(t[2]);let E=i?v*S:w,T=i?w:v*S,N=g*d*m;e.compute(Ms(x,o,b,E,T,N,u,O),{inputs:x})},rc=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let i=[0,t.pads[0],0,t.pads[1]],u=[1].concat(t.strides),a=[1].concat(t.dilations),c=[1].concat(t.kernelShape),m=Ns({...t,pads:i,strides:u,dilations:a,kernelShape:c},o);e.compute(To(o,m,g=>r?[g[0],g[2],g[3]]:[]))},Bo=(e,t)=>{ec(e.inputs,t),e.inputs[0].dims.length===3?rc(e,t):tc(e,e.inputs,t)}});var nc,Hs,Gs=te(()=>{"use strict";Ut();_e();Vt();Dn();Io();Nr();nc=(e,t=!1,r,o=4)=>{let i=qe(o,"f32"),u=x=>{switch(x){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return vec4<f32>(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${x} is not supported.`)}},a=e?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,c=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,m=e?"outBackprop[1]":"outBackprop[2]",g=e?"outBackprop[2]":"outBackprop[3]",d=e?"row":"col",b=e?"col":"row",v=`\n      let inChannels = ${e?"outBackprop[3]":"outBackprop[1]"};\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      let outRow = ${d} / outWidth;\n      let outCol = ${d} % outWidth;\n\n      let WRow = ${b} / (filterDims[1] * inChannels);\n      let WCol = ${b} / inChannels % filterDims[1];\n      let xR = f32(outRow - pads[0] + dilation[0] * WRow) / f32(strides[0]);\n      let xC = f32(outCol - pads[1] + dilation[1] * WCol) / f32(strides[1]);\n      if (xR < 0.0 || xR >= f32(${m}) || fract(xR) > 0.0) {\n        return ${i}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${g}) || fract(xC) > 0.0) {\n        return ${i}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${b} % inChannels;\n      ${a}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${o}];`,S=e?`\n      let col = colIn * ${o};\n      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n        ${v}\n      }\n      return ${i}(0.0);`:`\n      let col = colIn * ${o};\n      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {\n        ${v}\n      }\n      return ${i}(0.0);`,w=`\n      let col = colIn * ${o};\n      let inChannels = ${e?"outBackprop[3]":"outBackprop[1]"};\n      let coordX = filterDims.x - 1 - row / (filterDims[1] * inChannels);\n      let coordY = filterDims.y - 1 - (row / inChannels) % filterDims[1];\n      if (${e?"row < uniforms.dimInner && col < uniforms.dimBOuter":"row < uniforms.dimInner && col < uniforms.dimAOuter"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${u(o)}\n      }\n      return ${i}(0.0);\n      `,{activationFunction:C,applyActivation:O}=It(r,i);return`\n      ${C}\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${i} {\n    ${e?S:w}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${i} {\n    ${e?w:S}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${i}) {\n    let col = colIn * ${o};\n    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {\n      var value = valueInput;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${c}\n      ${Bn(t)}\n      ${O}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${o}] = value;\n    }\n  }`},Hs=(e,t,r,o,i,u,a,c)=>{let m=t.format==="NHWC",g=m?e[0].dims[3]:e[0].dims[1],d=r[0],b=m?r[2]:r[3],v=m?r[1]:r[2],S=m?r[3]:r[1],w=m?g%4===0&&S%4===0:b%4===0&&S%4===0,C=m?S:b*v,O=m?b*v:S,A=w?[8,8,1]:[C<=4||O<=4?4:16,C>4&&O<=4?4:16,1],x=w?[4,4,1]:[C<=4?1:4,C>4&&O<=4?1:4,1],E=[Math.ceil(C/A[0]/x[0]),Math.ceil(O/A[1]/x[1]),Math.ceil(d/A[2]/x[2])];De("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${E}`);let T=w?4:1,N=Math.max(A[0]*T,A[1]),B=w?4:1,V=[{type:"int32",data:o},{type:"int32",data:i},{type:"int32",data:u}],H=U("x",e[0].dataType,e[0].dims.length,B),J=U("w",e[1].dataType,e[1].dims.length,1),D=ee("result",e[0].dataType,r.length,B),j=[H,J];V.push(...K(e[0].dims)),V.push(...K(e[1].dims));let se="";if(a){let be=U("bias",e[2].dataType,e[2].dims.length,B);j.push(be),V.push(...K(e[2].dims)),se+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${w?"vec4<f32>":"f32"} {\n          return bias[coords.${m?"w":"y"}${w?"/ 4":""}];\n        }`}return V.push(...K(r)),{name:"Conv2DTransposeMatMul",shaderCache:{hint:t.cacheKey},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:V}),getShaderSource:be=>`\n        ${Mn("uniforms.result_strides")}\n        ${be.registerUniform("dimAOuter","i32").registerUniform("dimBOuter","i32").registerUniform("dimInner","i32").declareVariables(...j,D)};\n        const outBackprop : vec4<i32> = vec4<i32>(${e[0].dims.join(",")});\n        const filterDims : vec2<i32> = vec2<i32>(${t.kernelShape[m?1:2]}, ${t.kernelShape[m?2:3]});\n        const effectiveFilterDims : vec2<i32> = filterDims + vec2<i32>(\n              ${t.dilations[0]<=1?0:(t.kernelShape[m?1:2]-1)*(t.dilations[0]-1)},\n              ${t.dilations[1]<=1?0:(t.kernelShape[m?2:3]-1)*(t.dilations[1]-1)});\n        const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${t.pads[0]+t.pads[2]})/2,\n                                         i32(effectiveFilterDims[1]) - 1 - (${t.pads[1]+t.pads[3]})/2);\n        const strides : vec2<i32> = vec2<i32>(${t.strides[0]}, ${t.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${t.dilations[0]}, ${t.dilations[1]});\n        const dimAOuter : i32 = ${o};\n        const dimBOuter : i32 = ${i};\n        const dimInner : i32 = ${u};\n        ${se}\n        ${nc(m,a,t,T)}\n        ${w?Vr(x,A,"f32",void 0,!m,N):Wr(x,A,"f32",void 0,!m,N,!1,void 0,c)}`}}});var oc,Do,Ls=te(()=>{"use strict";Ut();Ae();_e();oc=(e,t,r,o,i,u,a=!1,c)=>{let m=r.format==="NHWC",g=m?1:2,d=m?2:3,b=m?3:1,v=W.size(o),S=a?2:1,w=r.group,C=t[1].dims,O=C[0]/w,A=C[1],x=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${a?`vec4<${c}>`:c}) {\n    result[flatIndex] = ${a?`vec4<${c}>`:c}(value);\n  }`;i&&(x+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${a?`vec4<${c}>`:c} {\n      return bias[coords.${m?"w":"y"}${a?"/ 4":""}];\n    }`);let E=a?4:1,T=U("W",t[1].dataType,t[1].dims,E),N=U("Dy",t[0].dataType,t[0].dims,E),B=[N,T];i&&B.push(U("bias",t[2].dataType,[o[b]],E));let V=ee("result",t[0].dataType,o,E),H=`{\n        let batch: u32 = ${u?"global_id.z":"workgroup_id.z"} / outShape[1];\n        let r = ${u?"global_id.z":"workgroup_id.z"} % outShape[1];\n        let c = ${u?"global_id.y":"workgroup_id.y"} * ${S};\n        let d1: u32 = ${u?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${c}>, ${S}>;\n        for (var i = 0; i < ${S}; i++) {\n          dotProd[i] = vec4<${c}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < filterDims[0]; wR = wR + 1) {\n          var dyR = (${c}(dyCorner.x) + ${c}(wR)) / ${c}(strides.x);\n          let wRPerm = filterDims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${c}(outBackprop[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < filterDims[1]; wC = wC + 1) {\n            let dyC = (${c}(dyCorner.y) + ${c}(wC)) / ${c}(strides.y);\n            let dyC2 = (${c}(dyCorner.y) + 1.0 + ${c}(wC)) / ${c}(strides.y);\n            let wCPerm = filterDims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${c}(outBackprop[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${c}(outBackprop[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = outBackprop[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${T.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${T.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${T.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${T.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${N.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${c}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${N.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${c}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = outBackprop[${b}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${T.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${T.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${T.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${T.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${N.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${c}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = outBackprop[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${T.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${T.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${T.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${T.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${N.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${c}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${S}; i = i + 1) {\n          let value = dotProd[i] + ${i?"bias[c+i]":`vec4<${c}>(0.0)`};\n          ${V.set("batch","r","c + i","d1","value")};\n        }\n      }`,J=`\n          let outputIndices = ${V.offsetToIndices("global_idx")};\n          let batch = ${V.indicesGet("outputIndices",0)};\n          let d1 = ${V.indicesGet("outputIndices",b)};\n          let r = ${V.indicesGet("outputIndices",g)};\n          let c = ${V.indicesGet("outputIndices",d)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / ${A};\n          let wOutChannel = d1 - groupId * ${A};\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = ${c}(0.0);\n          for (var wR: u32 = 0; wR < effectiveFilterDims.x; wR = wR + 1) {\n            if (wR % dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${c}(dyRCorner) + ${c}(wR)) / ${c}(strides[0]);\n            let wRPerm = filterDims.x - 1 - wR / dilations.x;\n            if (dyR < 0.0 || dyR >= ${c}(outBackprop[${g}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < effectiveFilterDims.y; wC = wC + 1) {\n              if (wC % dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${c}(dyCCorner) + ${c}(wC)) / ${c}(strides.y);\n              let wCPerm = filterDims.y - 1 - wC / dilations.y;\n              if (dyC < 0.0 || dyC >= ${c}(outBackprop[${d}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * ${O};\n              for (var d2: u32 = 0; d2 < ${O}; d2 = d2 + 1) {\n                let xValue = ${m?N.get("batch","idyR","idyC","inputChannel"):N.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${T.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${i?"bias[d1]":`${c}(0.0)`};\n          ${V.setByOffset("global_idx","value")};\n        `;return`\n  ${e.declareVariables(...B,V)}\n  ${x}\n  const outShape : vec4<u32> = vec4<u32>(${o.join(",")});\n  const outBackprop : vec4<u32> = vec4<u32>(${t[0].dims.join(",")});\n  const strides : vec2<u32> = vec2<u32>(${r.strides[0]}, ${r.strides[1]});\n  const filterDims : vec2<u32> = vec2<u32>(${r.kernelShape[m?1:2]}, ${r.kernelShape[m?2:3]});\n  const dilations : vec2<u32> = vec2<u32>(${r.dilations[0]}, ${r.dilations[1]});\n  const effectiveFilterDims : vec2<u32> = filterDims + vec2<u32>(\n          ${r.dilations[0]<=1?0:(r.kernelShape[m?1:2]-1)*(r.dilations[0]-1)},\n          ${r.dilations[1]<=1?0:(r.kernelShape[m?2:3]-1)*(r.dilations[1]-1)});\n  const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${r.pads[0]+r.pads[2]})/2,\n                                     i32(effectiveFilterDims[1]) - 1 - (${r.pads[1]+r.pads[3]})/2);\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(v)};\n  ${a?H:J}}`},Do=(e,t,r)=>{let o=e.length>2,i=t.outputShape,u=W.size(i),a=[Math.ceil(u/64),1,1];De("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${a}`);let c=Ne(e[0].dataType);return{name:"ConvTranspose2D",shaderCache:{hint:t.cacheKey},getRunData:()=>({dispatchGroup:{x:a[0],y:a[1],z:a[2]},outputs:[{dims:r?r(i):i,dataType:e[0].dataType}]}),getShaderSource:m=>oc(m,e,t,i,o,a[1]===1&&a[2]===1,!1,c)}}});var ic,ac,sc,Fs,js,uc,lc,dc,cc,qs,Ks=te(()=>{"use strict";je();Gs();Ls();Vt();mr();ic=(e,t,r,o,i,u)=>(e-1)*t+r+(o-1)*i+1-u,ac=(e,t,r,o,i)=>{let u=Math.floor(e/2);t==="SAME_UPPER"?(r[o]=u,r[i]=e-u):t==="SAME_LOWER"&&(r[o]=e-u,r[i]=u)},sc=(e,t,r,o,i,u,a,c,m,g)=>{let d=e.length-2,b=g.length===0;if(m.length===0)for(let w=0;w<d;++w)m.push(0);let v=e[0],S=t[c?3:1]*i;for(let w=0,C=e.length-d-(c?1:0);w<d;++w,++C){let O=e[C],A=b?O*a[w]:g[w],x=ic(O,a[w],u[w],t[C],r[w],A);ac(x,o,u,w,w+d),b&&g.push(a[w]*(O-1)+m[w]+(t[C]-1)*r[w]+1-u[w]-u[w+d])}g.splice(0,0,v),g.splice(c?3:1,0,S)},Fs=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((v,S)=>v*S,1)===0){r.length=0;for(let v=2;v<t[1].dims.length;++v)r.push(t[1].dims[v])}let o=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(o?3:1,0,t[1].dims[1]);let i=e.pads.slice(),u=e.outputShape.slice(),a=e.outputPadding.slice(),c=t[0].dims,m=e.dilations.slice();if(m.reduce((v,S)=>v+S,0)===0){let v=t[0].dims.length-2;m=new Array(v).fill(1)}let g=e.strides.slice();if(g.reduce((v,S)=>v+S,0)===0){let v=t[0].dims.length-2;g=new Array(v).fill(1)}sc(c,r,m,e.autoPad,e.group,i,g,o,a,u);let d=Object.assign({},e),b=e.cacheKey+[r.join("n,"),i.join(","),g.join(","),a.join(","),u.join(","),m.join(",")].join("_");return Object.assign(d,{kernelShape:r,pads:i,outputPadding:a,outputShape:u,dilations:m,strides:g,cacheKey:b}),d},js=e=>{let t=Rn(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],i=e.dilations,u=e.group,a=e.kernelShape,c=e.pads,m=e.strides,g=e.wIsConst(),d=e.outputPadding,b=e.outputShape;return we({autoPad:o,format:r,dilations:i,group:u,kernelShape:a,outputPadding:d,outputShape:b,pads:c,strides:m,wIsConst:g,...t})},uc=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[0];if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let i=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==i))throw new Error("invalid bias");let u=e[0].dims.length-2;if(t.dilations.reduce((d,b)=>d+b,0)>0&&t.dilations.length!==u)throw new Error(`dilations should be ${u}D`);if(t.strides.reduce((d,b)=>d+b,0)>0&&t.strides.length!==u)throw new Error(`strides should be ${u}D`);if(t.pads.reduce((d,b)=>d+b,0)>0&&t.pads.length!==u*2)throw new Error(`pads should be ${u*2}D`);if(t.outputPadding.length!==u&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${u}D`);if(t.kernelShape.reduce((d,b)=>d+b,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},lc=[2,3,1,0],dc=(e,t,r)=>{let o=Fs(r,t),i=r.format==="NHWC",u=o.outputShape,a=u[i?3:1],c=t[0].dims[i?3:1];if(o.group!==1||a===1&&c===1){e.compute(Do(t,o));return}let m=u[i?1:2],g=u[i?2:3],d=t[1].dims[2],b=t[1].dims[3],v=i?m*g:a,S=i?a:m*g,w=d*b*c,C=!0,O=e.kernelCustomData.wT??e.compute(yt(t[1],lc),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=O);let A=[t[0],O],x=t.length===3;x&&(!i&&t[2].dims.length===1?A.push(t[2].reshape([t[2].dims[0],1,1])):A.push(t[2])),e.compute(Hs(A,o,u,v,S,w,x,C),{inputs:A})},cc=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];o.length===3&&o.push(e.inputs[2]);let i=t.kernelShape;(i.length===0||i[0]===0)&&(i=[e.inputs[1].dims[2]]);let u=t.dilations;(u.length===0||u[0]===0)&&(u=[1]);let a=t.strides;(a.length===0||a[0]===0)&&(a=[1]);let c=t.pads;c.length===0&&(c=[0,0]),c=[0,c[0],0,c[1]],a=[1].concat(a),u=[1].concat(u),i=[1].concat(i);let m=Fs({...t,pads:c,strides:a,dilations:u,kernelShape:i},o);e.compute(Do(o,m,g=>r?[g[0],g[2],g[3]]:[g[0],g[1],g[3]]))},qs=(e,t)=>{uc(e.inputs,t),e.inputs[0].dims.length===3?cc(e,t):dc(e,e.inputs,t)}});var pc,Ys,Zs,Xs=te(()=>{"use strict";Ue();Ae();je();_e();pc=(e,t,r,o)=>{let i=W.size(t),u=t.length,a=U("input",e,u),c=ee("output",e,u),m=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),g=W.normalizeAxis(m,u),d=b=>{let v=` i32(${a.indicesGet("inputIndices","uniforms.axis")}) `,S=ce("uniforms.input_shape","uniforms.axis",u),w=o.reverse?v+(o.exclusive?" + 1":""):"0",C=o.reverse?S:v+(o.exclusive?"":" + 1");return`\n                ${b.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(a,c)}\n                ${b.mainStart()}\n                  ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${c.offsetToIndices("global_idx")};\n                  var sum = ${c.type.value}(0);\n                  let first : i32 = ${w};\n                  let last : i32 = ${C};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${a.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${a.getByIndices("inputIndices")};\n                  }\n                  ${c.setByOffset("global_idx","sum")};\n                }`};return{name:"CumSum",shaderCache:{hint:o.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:"uint32",data:i},{type:"int32",data:g},...K(t),...K(t)]}),getShaderSource:d}},Ys=(e,t)=>{let r=e.inputs[0].dims,o=e.inputs[0].dataType,i=e.inputs[1];e.compute(pc(o,r,i,t),{inputs:[0]})},Zs=e=>{let t=e.exclusive===1,r=e.reverse===1;return we({exclusive:t,reverse:r})}});var Mo,Un,Js,mc,fc,zo,Uo,Qs,hc,eu,tu,ru=te(()=>{"use strict";Ae();je();_e();Mo="[a-zA-Z]|\\\\.\\\\.\\\\.",Un="("+Mo+")+",Js="^"+Un+"$",mc="("+Un+",)*"+Un,fc="^"+mc+"$",zo=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let o=this.symbolToIndices.get(t);o===void 0?o=[r]:o.push(r),this.symbolToIndices.set(t,o)}},Uo=class{constructor(t,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[o,i]=r.includes("->")?r.split("->",2):[r,""];if(!o.match(RegExp(fc)))throw new Error("Invalid LHS term");if(o.split(",").forEach((c,m)=>{let g=t[m].dims.slice();if(!c.match(RegExp(Js)))throw new Error("Invalid LHS term");let d=this.processTerm(c,!0,g,m);this.lhs.push(d)}),i==="")i+=[...this.symbolToInfo.entries()].filter(([c,m])=>m.count===1||c==="...").map(([c])=>c).join("");else if(!i.match(RegExp(Un)))throw new Error("Invalid RHS");i.match(RegExp(Mo,"g"))?.forEach(c=>{if(c==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let m=this.symbolToInfo.get(c);if(m===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(m.dimValue)}}),this.rhs=this.processTerm(i,!1,this.outputDims)}addSymbol(t,r,o){let i=this.symbolToInfo.get(t);if(i!==void 0){if(i.dimValue!==r&&i.count!==1)throw new Error("Dimension mismatch");i.count++,i.inputIndices.push(o)}else i={count:1,dimValue:r,inputIndices:[o]};this.symbolToInfo.set(t,i)}processTerm(t,r,o,i=-1){let u=o.length,a=!1,c=[],m=0;if(!t.match(RegExp(Js))&&!r&&t!=="")throw new Error("Invalid LHS term");let g=t.match(RegExp(Mo,"g")),d=new zo(i);return g?.forEach((b,v)=>{if(b==="..."){if(a)throw new Error("Only one ellipsis is allowed per input term");a=!0;let S=u-g.length+1;if(S<0)throw new Error("Ellipsis out of bounds");if(c=o.slice(m,m+S),this.hasEllipsis){if(this.ellipsisDims.length!==c.length||this.ellipsisDims.toString()!==c.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=c;else throw new Error("Ellipsis must be specified in the LHS");for(let w=0;w<c.length;w++){let C=String.fromCharCode("0".charCodeAt(0)+w);d.addSymbol(C,v+w),this.addSymbol(C,o[m++],i)}}else d.addSymbol(b,v+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(b,o[m++],i)}),d}},Qs=e=>e+"_max",hc=(e,t,r,o,i)=>{let a=t.map((S,w)=>e[w]?S.length:S).map((S,w)=>U(`input${w}`,r,S)),c=W.size(i),m=Be(i.length),g=m?i.length:i,d=ee("output",r,g),b=[...o.symbolToInfo.keys()].filter(S=>!o.rhs.symbolToIndices.has(S)),v=S=>{let w=[],C="var prod = 1.0;",O="var sum = 0.0;",A="sum += prod;",x=[],E=[],T=[],N=[],B=o.symbolToInfo.size===o.rhs.symbolToIndices.size;o.symbolToInfo.forEach((H,J)=>{if(o.rhs.symbolToIndices.has(J)){let D=o.rhs.symbolToIndices.get(J)?.[0];D!==void 0&&o.lhs.forEach((j,se)=>{if(H.inputIndices.includes(se)){let be=j.symbolToIndices.get(J);if(be===void 0)throw new Error("Invalid symbol error");be.forEach(re=>{w.push(`${a[se].indicesSet(`input${se}Indices`,re,d.indicesGet("outputIndices",D))}`)})}})}else o.lhs.forEach((D,j)=>{if(H.inputIndices.includes(j)){let se=D.symbolToIndices.get(J);if(se===void 0)throw new Error("Invalid symbol error");se.forEach(be=>{x.push(`${a[j].indicesSet(`input${j}Indices`,be,`${J}`)}`)}),N.push(`prod *= ${a[j].getByIndices(`input${j}Indices`)};`)}}),E.push(`for(var ${J}: u32 = 0; ${J} < uniforms.${Qs(J)}; ${J}++) {`),T.push("}")});let V=B?[...w,`let sum = ${a.map((H,J)=>H.getByIndices(`input${J}Indices`)).join(" * ")};`]:[...w,O,...E,...x,C,...N,A,...T];return`\n            ${S.registerUniforms(b.map(H=>({name:`${Qs(H)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...a,d)}\n\n            ${S.mainStart()}\n            ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${d.offsetToIndices("global_idx")};\n            ${a.map((H,J)=>`var input${J}Indices: ${a[J].type.indices};`).join(`\n`)}\n            ${V.join(`\n`)};\n            ${d.setByOffset("global_idx","sum")};\n          }`};return{name:"Einsum",shaderCache:{hint:o.equation,inputDependencies:e.map(S=>S?"rank":"dims")},getRunData:()=>{let S=b.filter(C=>o.symbolToInfo.has(C)).map(C=>({type:"uint32",data:o.symbolToInfo.get(C)?.dimValue||0}));S.push({type:"uint32",data:c});let w=t.filter((C,O)=>e[O]).map((C,O)=>[...K(C)]).reduce((C,O)=>C.concat(O),S);return m&&w.push(...K(i)),{outputs:[{dims:i,dataType:r}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:w}},getShaderSource:v}},eu=(e,t)=>{let r=new Uo(e.inputs,t.equation),o=e.inputs.map((a,c)=>Be(a.dims.length)),i=r.outputDims,u=e.inputs.map((a,c)=>a.dims);e.compute(hc(o,u,e.inputs[0].dataType,r,i))},tu=e=>{let t=e.equation.replace(/\\s+/g,"");return we({equation:t})}});var gc,nu,yc,bc,ou,iu=te(()=>{"use strict";Ue();Ae();_e();gc=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=r.length<t.length?0:r.length-t.length,i=t.length<r.length?0:t.length-r.length;for(;o<r.length&&i<t.length;++o,++i)if(r[o]!==t[i]&&r[o]!==1&&t[i]!==1)throw new Error("Expand requires shape to be broadcastable to input")},nu=(e,t)=>{let r=e.length-t.length,o=[];for(let i=0;i<r;++i)o.push(e[i]);for(let i=0;i<t.length;++i)o.push(t[i]===1?e[i+r]:t[i]);return o},yc=(e,t)=>e.length>t.length?nu(e,t):nu(t,e),bc=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=yc(t,r),i=e[0].dataType,u=i===9?4:1,a=Math.ceil(W.size(o)/u),c=Be(t.length),m=Be(o.length),g=b=>{let v=c?t.length:t,S=m?o.length:o,w=U("input",i,v,u),C=ee("output",i,S,u),O;if(i===9){let A=(x,E,T="")=>`\n          let outputIndices${E} = ${C.offsetToIndices(`outputOffset + ${E}u`)};\n          let offset${E} = ${w.broadcastedIndicesToOffset(`outputIndices${E}`,C)};\n          let index${E} = offset${E} / 4u;\n          let component${E} = offset${E} % 4u;\n          ${x}[${E}] = ${T}(${w.getByOffset(`index${E}`)}[component${E}]);\n        `;O=`\n        let outputOffset = global_idx * ${u};\n        var data = vec4<u32>(0);\n        ${A("data",0,"u32")}\n        ${A("data",1,"u32")}\n        ${A("data",2,"u32")}\n        ${A("data",3,"u32")}\n        ${C.setByOffset("global_idx","data")}\n      }`}else O=`\n        let outputIndices = ${C.offsetToIndices("global_idx")};\n        let inputOffset = ${w.broadcastedIndicesToOffset("outputIndices",C)};\n        ${C.setByOffset("global_idx",w.getByOffset("inputOffset"))}\n      }`;return`\n    ${b.registerUniform("vec_size","u32").declareVariables(w,C)}\n    ${b.mainStart()}\n    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${O}`},d=[{type:"uint32",data:a}];return c&&d.push(...K(t)),m&&d.push(...K(o)),{name:"Expand",shaderCache:{hint:`${o.length}`,inputDependencies:[c?"rank":"dims"]},getShaderSource:g,getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:d})}},ou=e=>{gc(e.inputs),e.compute(bc(e.inputs),{inputs:[0]})}});var wc,vc,au,su,uu=te(()=>{"use strict";Ue();Ae();je();_e();wc=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},vc=(e,t)=>{let r=e[0].dims,o=e[1].dims,i=r.length,u=W.normalizeAxis(t.axis,i),a=r.slice(0);a.splice(u,1,...o);let c=r[u],m=e[0].dataType===9?4:1,g=Math.ceil(W.size(a)/m),d=Be(e[0].dims.length),b=d?e[0].dims.length:e[0].dims,v=Be(e[1].dims.length),S=v?e[1].dims.length:e[1].dims,w=Be(a.length),C=w?a.length:a,O=[{type:"uint32",data:g},{type:"int32",data:c},{type:"uint32",data:u}];d&&O.push(...K(e[0].dims)),v&&O.push(...K(e[1].dims)),w&&O.push(...K(a));let A=[];A.push(d?"rank":"dims"),A.push(v?"rank":"dims");let x=E=>{let T=U("data",e[0].dataType,b,m),N=U("inputIndices",e[1].dataType,S),B=ee("output",e[0].dataType,C,m),V=J=>{let D=o.length,j=`var indicesIndices${J}  = ${N.type.indices}(0);`;for(let se=0;se<D;se++)j+=`${D>1?`indicesIndices${J}[${se}]`:`indicesIndices${J}`} = ${a.length>1?`outputIndices${J}[uniforms.axis + ${se}]`:`outputIndices${J}`};`;j+=`\n          var idx${J} = ${N.getByIndices(`indicesIndices${J}`)};\n          if (idx${J} < 0) {\n            idx${J} = idx${J} + uniforms.axisDimLimit;\n          }\n          var dataIndices${J} = ${T.type.indices}(0);\n        `;for(let se=0,be=0;se<i;se++)se===u?(j+=`${i>1?`dataIndices${J}[${se}]`:`dataIndices${J}`} = u32(idx${J});`,be+=D):(j+=`${i>1?`dataIndices${J}[${se}]`:`dataIndices${J}`} = ${a.length>1?`outputIndices${J}[${be}]`:`outputIndices${J}`};`,be++);return j},H;if(e[0].dataType===9){let J=(D,j,se="")=>`\n          let outputIndices${j} = ${B.offsetToIndices(`outputOffset + ${j}u`)};\n          ${V(j)};\n          let offset${j} = ${T.indicesToOffset(`dataIndices${j}`)};\n          let index${j} = offset${j} / 4u;\n          let component${j} = offset${j} % 4u;\n          ${D}[${j}] = ${se}(${T.getByOffset(`index${j}`)}[component${j}]);\n        `;H=`\n        let outputOffset = global_idx * ${m};\n        var value = vec4<u32>(0);\n        ${J("value",0,"u32")}\n        ${J("value",1,"u32")}\n        ${J("value",2,"u32")}\n        ${J("value",3,"u32")}\n        ${B.setByOffset("global_idx","value")}\n      `}else H=`\n      let outputIndices = ${B.offsetToIndices("global_idx")};\n      ${V("")};\n      let value = ${T.getByIndices("dataIndices")};\n      ${B.setByOffset("global_idx","value")};\n      `;return`\n      ${E.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(T,N,B)}\n      ${E.mainStart()}\n        ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${H}\n      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:A},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:O}),getShaderSource:x}},au=e=>we({axis:e.axis}),su=(e,t)=>{let r=e.inputs;wc(r),e.compute(vc(e.inputs,t))}});var $c,Sc,lu,du,cu=te(()=>{"use strict";Ae();je();_e();$c=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},Sc=(e,t)=>{let r=e[0].dims,o=e[0].dataType,i=r.length,u=e[1].dims,a=e[1].dataType,c=W.normalizeAxis(t.axis,i),m=r[c],g=u.slice(0),d=W.size(g),b=U("input",o,i),v=U("indicesInput",a,u.length),S=ee("output",o,g.length),w=[{type:"uint32",data:d},{type:"int32",data:m},{type:"uint32",data:c}];return w.push(...K(r)),w.push(...K(u)),w.push(...K(g)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:g,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:w}),getShaderSource:A=>`\n      ${A.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(b,v,S)}\n      ${A.mainStart()}\n      ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${S.offsetToIndices("global_idx")};\n\n      var idx = ${v.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${b.type.indices}(outputIndices);\n      ${b.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${b.getByIndices("inputIndices")};\n\n      ${S.setByOffset("global_idx","value")};\n  }`}},lu=e=>we({axis:e.axis}),du=(e,t)=>{let r=e.inputs;$c(r),e.compute(Sc(e.inputs,t))}});var xc,_c,pu,mu,fu=te(()=>{"use strict";Ae();_e();xc=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},_c=(e,t)=>{let r=e[0].dims.slice(),o=e[1].dims.slice(),[i,u,a]=_n.getShapeOfGemmResult(r,t.transA,o,t.transB,e.length===3?e[2].dims:void 0),c=[i,u];if(!c)throw new Error("Can\'t use gemm on the given tensors");let m=W.size(c),g=[{type:"uint32",data:m},{type:"uint32",data:i},{type:"uint32",data:u},{type:"uint32",data:a},{type:"float32",data:t.alpha},{type:"float32",data:t.beta}],d=["type","type"];e.length===3&&(g.push(...K(e[2].dims)),d.push("rank")),g.push(...K(c));let b=v=>{let S="";t.transA&&t.transB?S="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?S="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?S="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(S="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let w=t.alpha===1?"":"value *= uniforms.alpha;",C=U("a",e[0].dataType,e[0].dims),O=U("b",e[1].dataType,e[1].dims),A=C.type.value,x=null,E=[C,O];e.length===3&&(x=U("c",e[2].dataType,e[2].dims.length),E.push(x));let T=ee("output",e[0].dataType,c.length);E.push(T);let N=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`\n  ${v.registerUniforms(N).declareVariables(...E)}\n\n  ${v.mainStart()}\n    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let m = global_idx / uniforms.N;\n    let n = global_idx % uniforms.N;\n\n    var value = ${A}(0);\n    for (var k: u32 = 0u; k < uniforms.K; k++) {\n      ${S}\n    }\n\n    ${w}\n    ${(()=>x!=null?`let cOffset = ${x.broadcastedIndicesToOffset("vec2(m, n)",T)}; value += ${A}(uniforms.beta) * ${x.getByOffset("cOffset")};`:"")()}\n    output[global_idx] = value;\n  }`};return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:g}),getShaderSource:b}},pu=e=>{let t=e.transA,r=e.transB,o=e.alpha,i=e.beta;return{transA:t,transB:r,alpha:o,beta:i,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},mu=(e,t)=>{xc(e.inputs),e.compute(_c(e.inputs,t))}});var Cc,Ac,Ic,hu,gu=te(()=>{"use strict";Ue();Ae();_e();Cc=(e,t)=>{let r=e[0].dims,o=r,i=2,u=W.sizeToDimension(r,i),a=W.sizeFromDimension(r,i),c=He(a),m=a/c,g=[r[0],r[1],m],d=["rank","type","type"],b=[{type:"uint32",data:a},{type:"uint32",data:m}];b.push(...K(g),...K(g));let v=S=>{let w=U("x",e[0].dataType,g.length,c),C=U("scale",e[1].dataType,e[1].dims),O=U("bias",e[2].dataType,e[2].dims),A=ee("output",e[0].dataType,g.length,c),x=[w,C,O,A],E=w.type.value,T=c===1?"f32":`vec${c}<f32>`,N=64,B=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`\n  var<workgroup> meanShared : f32;\n  var<workgroup> squaredNormShared : f32;\n  var<workgroup> workgroupShared : array<${T}, ${N}>;\n  const workgroupSize = ${N}u;\n  ${S.registerUniforms(B).declareVariables(...x)}\n  ${S.mainStart(N)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / uniforms.x_shape[1];\n    let channel = norm % uniforms.x_shape[1];\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial = ${T}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      initial = initial + ${T}(${w.get("batch","channel","h")});\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = ${lt("workgroupShared[0]",c)} / f32(uniforms.normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = ${T}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let deviation =  ${T}(${w.get("batch","channel","h")}) - ${T}(meanShared);\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = ${lt("workgroupShared[0]",c)};\n    }\n    workgroupBarrier();\n\n    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${t.epsilon}));\n    let channelScale = invStdDev * f32(${C.getByOffset("channel")});\n    let channelShift = f32(${O.getByOffset("channel")}) - meanShared * channelScale;\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let value = ${w.get("batch","channel","h")} * ${E}(${T}(channelScale)) + ${E}(${T}(channelShift));\n      ${A.set("batch","channel","h","value")};\n    }\n  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${t.epsilon};${c}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:u},programUniforms:b}),getShaderSource:v}},Ac=(e,t,r,o,i,u,a,c)=>{let m=He(a),g=64,d=m===1?"vec2f":`mat2x${m}f`,b=m===1?"f32":`vec${m}f`,v=(B,V)=>`${d}(${B}, ${V})`,S=i*a/m,w=Math.ceil(u/g),C=["type"],O=[{type:"uint32",data:w},{type:"uint32",data:u},{type:"uint32",data:Math.floor(a/m)},{type:"uint32",data:Math.floor(u*a/m)}],A=B=>{let V=U("input",t.dataType,t.dims,m);return`\n  ${B.declareVariables(V)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${d}>;\n  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};\n  @group(0) @binding(2) var<uniform> uniforms: Uniforms;\n\n  ${B.mainStart(g)}\n    let currentImageNumber = global_idx / ${g} / uniforms.C;\n    let currentChannelNumber = (global_idx / ${g}) % uniforms.C;\n    let wgId = global_idx % ${g};\n    let wgOffset = wgId * uniforms.wg_size;\n    if (wgOffset >= uniforms.H) {\n        return;\n    }\n    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);\n\n    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;\n    var sum = ${Xe("f32",m)};\n    var squaredSum = ${Xe("f32",m)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${b}(input[offset + i * uniforms.C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${v("sum","squaredSum")};\n  }`},x=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${m}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:[i,a,g,2],dataType:1}],dispatchGroup:{x:i*a/m},programUniforms:O}),getShaderSource:A},{inputs:[t],outputs:[-1]})[0],E=[{type:"uint32",data:S},{type:"uint32",data:u},{type:"uint32",data:Math.floor(a/m)},{type:"uint32",data:Math.floor(g*a/m)}],T=["type","type","type"],N=B=>{let V=U("scale",r.dataType,r.dims,m),H=U("bias",o.dataType,o.dims,m);return`\n  @group(0) @binding(0) var<storage, read> input : array<${d}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${V.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${H.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${d}>;\n  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};\n  @group(0) @binding(4) var<uniform> uniforms: Uniforms;\n\n  ${B.mainStart()}\n    ${B.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}\n    let currentImageNumber = global_idx / uniforms.C;\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let offset = currentImageNumber * uniforms.image_size;\n    var sum = ${Xe("f32",m)};\n    var squaredSum = ${Xe("f32",m)};\n    for (var i: u32 = 0; i < ${g}; i++) {\n        let value = input[offset + i + currentChannelNumber * ${g}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(uniforms.H);\n    squaredSum = squaredSum / f32(uniforms.H);\n    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${c}));\n    let channelScale = invStdDev * ${b}(scale[currentChannelNumber]);\n    let channelShift = ${b}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${v("channelScale","channelShift")};\n  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${m};${c}`,inputDependencies:T},getRunData:()=>({outputs:[{dims:[i,a,2],dataType:1}],dispatchGroup:{x:Math.ceil(S/64)},programUniforms:E}),getShaderSource:N},{inputs:[x,r,o],outputs:[-1]})[0]},Ic=(e,t,r)=>{let o=t[0].dims,i=o,u=o[0],a=o[o.length-1],c=W.sizeFromDimension(o,1)/a,m=He(a),g=W.size(i)/m,d=[{type:"uint32",data:c},{type:"uint32",data:Math.floor(a/m)}],b=["type","type"],v=Ac(e,t[0],t[1],t[2],u,c,a,r.epsilon),S=w=>{let C=Ne(t[0].dataType),O=m===1?"vec2f":`mat2x${m}f`,A=m===1?C:`vec${m}<${C}>`,x=U("input",t[0].dataType,t[0].dims,m),E=ee("output",t[0].dataType,i,m);return`\n  @group(0) @binding(0) var<storage, read> input : array<${x.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${O}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${E.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${w.mainStart()}\n    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${A}(scale[0]), ${A}(scale[1]));\n  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${m}`,inputDependencies:b},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:d}),getShaderSource:S},{inputs:[t[0],v]})},hu=(e,t)=>{t.format==="NHWC"?Ic(e,e.inputs,t):e.compute(Cc(e.inputs,t))}});var Tc,Ec,yu,bu=te(()=>{"use strict";Ue();Ae();_e();Tc=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Ec=(e,t,r)=>{let o=e[0].dims,i=e[1],u=e[2],a=o,c=W.normalizeAxis(t.axis,o.length),m=W.sizeToDimension(o,c),g=W.sizeFromDimension(o,c),d=W.size(i.dims),b=u?W.size(u.dims):0;if(d!==g||u&&b!==g)throw new Error(`Size of X.shape()[axis:] == ${g}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${d} and bias size of ${b}`);let v=[];for(let T=0;T<o.length;++T)T<c?v.push(o[T]):v.push(1);let S=He(g),w=["type","type"],C=[{type:"uint32",data:m},{type:"float32",data:g},{type:"uint32",data:Math.floor(g/S)},{type:"float32",data:t.epsilon}];u&&w.push("type");let O=r>1,A=r>2,x=T=>{let N=Ne(e[0].dataType),B=[U("x",e[0].dataType,e[0].dims,S),U("scale",i.dataType,i.dims,S)];u&&B.push(U("bias",u.dataType,u.dims,S)),B.push(ee("output",e[0].dataType,a,S)),O&&B.push(ee("mean_data_output",1,v)),A&&B.push(ee("inv_std_output",1,v));let V=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`\n  ${T.registerUniforms(V).declareVariables(...B)}\n  ${T.mainStart()}\n    ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var meanVector = ${Xe("f32",S)};\n    var meanSquareVector = ${Xe("f32",S)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${gt(N,S,"x[h + offset]")};\n      meanVector += value;\n      meanSquareVector += value * value;\n    }\n    let mean = ${lt("meanVector",S)} / uniforms.norm_size;\n    let invStdDev =\n        inverseSqrt(${lt("meanSquareVector",S)} / uniforms.norm_size - mean * mean + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${gt(N,S,"x[j + offset]")};\n      let f32scale = ${gt(N,S,"scale[j]")};\n      output[j + offset] = ${B[0].type.value}((f32input - mean) * invStdDev * f32scale\n        ${u?`+ ${gt(N,S,"bias[j]")}`:""}\n      );\n    }\n\n    ${O?"mean_data_output[global_idx] = mean":""};\n    ${A?"inv_std_output[global_idx] = invStdDev":""};\n  }`},E=[{dims:a,dataType:e[0].dataType}];return O&&E.push({dims:v,dataType:1}),A&&E.push({dims:v,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${S};${r}`,inputDependencies:w},getRunData:()=>({outputs:E,dispatchGroup:{x:Math.ceil(m/64)},programUniforms:C}),getShaderSource:x}},yu=(e,t)=>{Tc(e.inputs),e.compute(Ec(e.inputs,t,e.outputCount))}});var Oc,vu,wu,Pc,Vo,$u,Su=te(()=>{"use strict";Ae();je();Sn();Co();_e();mr();Oc=(e,t)=>{let r=e[0],o=e[1],i=e[2],u=e[3],a=e[4],c=e[5],m=e[6],g=e[7];if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let d=!1,b=r.dims[0],v=r.dims[1],S=r.dims.length===3?d?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],w=v,C=0,O=0,A=Math.floor(S/t.numHeads);if(m&&g){if(m.dims.length!==4)throw new Error(\'Input "past_key" is expected to have 4 dimensions\');if(g.dims.length!==4)throw new Error(\'Input "past_value" is expected to have 4 dimensions\');C=m.dims[2],O=m.dims[2]}else if(m||g)throw new Error(\'Input "past_key" and "past_value" shall be both present or both absent\');let x;if(o){if(r.dims.length!==3)throw new Error(\'Input "query" is expected to have 3 dimensions when key is given\');if(o.dims.length<3||o.dims.length>5)throw new Error(\'Input "key" is expected to have 3, 4, or 5 dimensions\');if(r.dims[0]!==o.dims[0])throw new Error(\'Input "query" and "key" shall have same dim 0 (batch size)\');if(o.dims.length===3){if(o.dims[2]!==r.dims[2])throw new Error(\'Input "query" and "key" shall have same dim 2 (hidden_size)\');x=2,w=o.dims[1]}else if(o.dims.length===5){if(o.dims[2]!==t.numHeads||o.dims[3]!==2||o.dims[4]!==A)throw new Error(\'Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv\');if(i)throw new Error(\'Expect "value" be none when "key" has packed kv format.\');x=5,w=o.dims[1]}else{if(o.dims[1]!==t.numHeads||o.dims[3]!==A)throw new Error(\'Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key\');x=0,w=o.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error(\'Input "query" is expected to have 3 or 5 dimensions when key is empty\');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error(\'Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv\');x=3}if(u){if(u.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimension\');if(i&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let E=0;if(a){E=8;let H=a.dims;throw H.length===1?H[0]===b?E=1:H[0]===3*b+2&&(E=3):H.length===2&&H[0]===b&&H[1]===w&&(E=5),E===8?new Error(\'Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)\'):new Error("Mask not supported")}let T=!1,N=S;if(i){if(i.dims.length!==3&&i.dims.length!==4)throw new Error(\'Input "value" is expected to have 3 or 4 dimensions\');if(r.dims[0]!==i.dims[0])throw new Error(\'Input "query" and "value" shall have same dim 0 (batch_size)\');if(i.dims.length===3){if(w!==i.dims[1])throw new Error(\'Input "key" and "value" shall have the same dim 1 (kv_sequence_length)\');N=i.dims[2]}else{if(w!==i.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)\');N=i.dims[1]*i.dims[3],T=!0}}let B=C+w,V=!1;if(a)throw new Error("Key padding mask is not supported");if(c)throw new Error("extraAddQk is not supported");if(m)throw new Error("pastKey is not supported");if(g)throw new Error("pastValue is not supported");return{batchSize:b,sequenceLength:v,pastSequenceLength:C,kvSequenceLength:w,totalSequenceLength:B,maxSequenceLength:O,inputHiddenSize:0,hiddenSize:S,vHiddenSize:N,headSize:A,vHeadSize:Math.floor(N/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:E,scale:t.scale,broadcastResPosBias:V,passPastInKv:T,qkvFormat:x}},vu=e=>we({...e}),wu=we({perm:[0,2,1,3]}),Pc=(e,t,r,o,i,u,a)=>{let c=[o,i,u],m=W.size(c),g=[{type:"uint32",data:m},{type:"uint32",data:a},{type:"uint32",data:u}],d=b=>{let v=ee("qkv_with_bias",t.dataType,c),S=U("qkv",t.dataType,c),w=U("bias",r.dataType,c),C=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`\n  ${b.registerUniforms(C).declareVariables(S,w,v)}\n  ${b.mainStart()}\n    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:c,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:g}),getShaderSource:d},{inputs:[t,r],outputs:[-1]})[0]},Vo=(e,t,r,o,i,u,a,c)=>{let m=u;if(a){if(o===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return m=Pc(e,u,a,t,o,r*i,c),m=m.reshape([t,o,r,i]),e.compute(yt(m,wu.perm),{inputs:[m],outputs:[-1]})[0]}else return u.dims.length===3&&(m=u.reshape([t,o,r,i])),e.compute(yt(m,wu.perm),{inputs:[m],outputs:[-1]})[0]},$u=(e,t)=>{let r=Oc(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let o=e.inputs[1]&&e.inputs[2]&&e.inputs[1].dims.length===4&&e.inputs[2].dims.length===4,i=Vo(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,e.inputs[0],e.inputs[3],0);if(o)return On(e,i,e.inputs[1],e.inputs[2],e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t);let u=Vo(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,e.inputs[1],e.inputs[3],r.hiddenSize),a=Vo(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,e.inputs[2],e.inputs[3],2*r.hiddenSize);On(e,i,u,a,e.inputs[4],void 0,e.inputs[6],e.inputs[7],e.inputs[5],r,t)}});var kc,Rc,Bc,Dc,Mc,zc,Uc,Vc,xu,_u=te(()=>{"use strict";Ue();Ae();_e();kc=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1)throw new Error("Input type must be float.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Rc=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n            k = i32(${e.indicesGet("indices",i)}) - ${ce("uniforms.pads",i,r)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${ce("uniforms.x_shape",i,t)})) {\n              break;\n            }\n            offset += k * i32(${ce("uniforms.x_strides",i,t)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${o}\n            value = x[offset];\n          }\n      `},Bc=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${ce("uniforms.pads",i,r)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${ce("uniforms.x_shape",i,t)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${ce("uniforms.x_shape",i,t)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${ce("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},Dc=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${ce("uniforms.pads",i,r)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${ce("uniforms.x_shape",i,t)})) {\n                  k = i32(${ce("uniforms.x_shape",i,t)}) - 1;\n                }\n                offset += k * i32(${ce("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},Mc=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${ce("uniforms.pads",i,r)};\n                if (k < 0)  {\n                  k += i32(${ce("uniforms.x_shape",i,t)}]);\n                }\n                if (k >= i32(${ce("uniforms.x_shape",i,t)})) {\n                  k -= i32(${ce("uniforms.x_shape",i,t)});\n                }\n                offset += k * i32(${ce("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},zc=(e,t,r)=>{switch(r.mode){case 0:return Rc(e,t,r.pads.length);case 1:return Bc(e,t,r.pads.length);case 2:return Dc(e,t,r.pads.length);case 3:return Mc(e,t,r.pads.length);default:throw new Error("Invalid mode")}},Uc=(e,t)=>{let r=W.padShape(e[0].dims.slice(),t.pads),o=e[0].dims,u=[{type:"uint32",data:W.size(r)},{type:"uint32",data:t.pads}];if(t.mode===0){let m=ut(e[0].dataType);u.push({type:m,data:t.value})}u.push(...K(e[0].dims),...K(r));let a=["rank"],c=m=>{let g=ee("output",e[0].dataType,r.length),d=U("x",e[0].dataType,o.length),b=d.type.value,v=zc(g,o.length,t),S=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&S.push({name:"constant_value",type:b}),`\n            ${m.registerUniforms(S).declareVariables(d,g)}\n            ${m.mainStart()}\n            ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${g.offsetToIndices("global_idx")};\n\n            var value = ${b}(0);\n            ${v}\n            output[global_idx] = value;\n        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}`,inputDependencies:a},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(W.size(r)/64)},programUniforms:u}),getShaderSource:c}},Vc=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),o=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,i=e[0].dims.length,u=new Int32Array(2*i).fill(0);if(e.length>=4){let c=e[3].getBigInt64Array();for(let m=0;m<c.length;m++)u[Number(c[m])]=Number(r[m]),u[Number(c[m])+i]=Number(r[m+c.length])}else r.forEach((c,m)=>u[Number(m)]=Number(c));let a=[];return u.forEach(c=>a.push(c)),{mode:t.mode,value:o,pads:a}}else return t},xu=(e,t)=>{kc(e.inputs);let r=Vc(e.inputs,t);e.compute(Uc(e.inputs,r),{inputs:[0]})}});var Vn,Cu,Au,Iu,Tu,Wc,Nc,Eu,Ou,Pu,ku,Ru,Bu,Du,Mu,zu,Uu,Vu,Wu,Nu=te(()=>{"use strict";cr();Ae();_e();Vn=e=>{if(dr.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},Cu=(e,t,r)=>{let o=t.format==="NHWC",i=e.dims.slice();o&&i.splice(1,0,i.pop());let u=Object.hasOwnProperty.call(t,"dilations"),a=t.kernelShape.slice(),c=t.strides.slice(),m=u?t.dilations.slice():[],g=t.pads.slice();Jt.adjustPoolAttributes(r,i,a,c,m,g);let d=Jt.computePoolOutputShape(r,i,c,m,a,g,t.autoPad),b=Object.assign({},t);u?Object.assign(b,{kernelShape:a,strides:c,pads:g,dilations:m,cacheKey:t.cacheKey}):Object.assign(b,{kernelShape:a,strides:c,pads:g,cacheKey:t.cacheKey});let v=d.slice();return v.push(v.splice(1,1)[0]),[b,o?v:d]},Au=(e,t)=>{let r=t.format==="NHWC",o=W.size(e),i=W.size(t.kernelShape),u=[{type:"uint32",data:o},{type:"uint32",data:i}],a=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let c=t.kernelShape[t.kernelShape.length-1],m=t.strides[t.strides.length-1],g=t.pads[t.pads.length/2-1],d=t.pads[t.pads.length-1],b=!!(g+d);u.push({type:"uint32",data:c},{type:"uint32",data:m},{type:"uint32",data:g},{type:"uint32",data:d}),a.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let v=!1;if(t.kernelShape.length===2){let S=t.kernelShape[t.kernelShape.length-2],w=t.strides[t.strides.length-2],C=t.pads[t.pads.length/2-2],O=t.pads[t.pads.length-2];v=!!(C+O),u.push({type:"uint32",data:S},{type:"uint32",data:w},{type:"uint32",data:C},{type:"uint32",data:O}),a.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[u,a,!0,b,v]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let c=W.computeStrides(t.kernelShape);u.push({type:"uint32",data:c},{type:"uint32",data:t.pads},{type:"uint32",data:t.strides}),a.push({name:"kernelStrides",type:"u32",length:c.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let m=t.pads.reduce((g,d)=>g+d);return[u,a,!!m,!1,!1]}},Iu=(e,t,r,o,i,u,a,c,m,g,d,b)=>{let v=i.format==="NHWC",S=t.type.value,w=ee("output",t.type.tensor,o);if(i.kernelShape.length<=2){let C="",O="",A="",x=r-(v?2:1);if(d?C=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${x}] = indices[${x}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${x}] < 0 || xIndices[${x}]\n                      >= uniforms.x_shape[${x}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${u}\n                }`:C=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${x}] = indices[${x}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${u}\n                }`,i.kernelShape.length===2){let T=r-(v?3:2);b?O=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${T}] = indices[${T}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${T}] < 0 || xIndices[${T}] >= uniforms.x_shape[${T}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:O=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${T}] = indices[${T}] * uniforms.sh - uniforms.phStart + j;\n                `,A=`\n              }\n            `}return`\n            ${e.registerUniforms(m).declareVariables(t,w)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${w.offsetToIndices("global_idx")};\n              var xIndices = ${w.offsetToIndices("global_idx")};\n\n              var value = ${S}(${c});\n              var pad = 0;\n              ${O}\n              ${C}\n              ${A}\n              ${a}\n\n              output[global_idx] = value;\n            }`}else{if(v)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let C=i.kernelShape.length,O=i.pads.length,A="";return g?A=`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${u}\n              }`:A=`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${u}\n            `,`\n            ${e.registerUniforms(m).declareVariables(t,w)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${w.offsetToIndices("global_idx")};\n              var xIndices = ${w.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${C}>;\n\n              var value = ${S}(${c});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${C-1}u; j++) {\n                  offsets[j] = offset / ${ce("uniforms.kernelStrides","j",C)};\n                  offset -= offsets[j] * ${ce("uniforms.kernelStrides","j",C)};\n                }\n                offsets[${C-1}] = offset;\n\n                isPad = false;\n                for (var j = ${r-C}u; j < ${r}u; j++) {\n                  xIndices[j] = indices[j] * ${ce("uniforms.strides",`j - ${r-C}u`,C)}\n                    + offsets[j - ${r-C}u] - ${ce("uniforms.pads","j - 2u",O)};\n                  ${A}\n              }\n              ${a}\n\n              output[global_idx] = value;\n            }`}},Tu=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Wc=e=>`${Tu(e)};${e.countIncludePad}`,Nc=e=>`${Tu(e)};${e.storageOrder};${e.dilations}`,Eu=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Ou=(e,t,r,o)=>{let[i,u]=Cu(t,o,r),a=U("x",t.dataType,t.dims.length),c=a.type.value,m="value += x_val;",g="";i.countIncludePad?g+=`value /= ${c}(uniforms.kernelSize);`:g+=`value /= ${c}(i32(uniforms.kernelSize) - pad);`;let[d,b,v,S,w]=Au(u,i);d.push(...K(t.dims),...K(u));let C=["rank"];return{name:e,shaderCache:{hint:`${o.cacheKey};${v};${S};${w}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(W.size(u)/64)},programUniforms:d}),getShaderSource:O=>Iu(O,a,t.dims.length,u.length,i,m,g,0,b,v,S,w)}},Pu=e=>{let t=e.count_include_pad!==0,r=Eu(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let o={countIncludePad:t,...r,cacheKey:""};return{...o,cacheKey:Wc(o)}},ku=(e,t)=>{Vn(e.inputs),e.compute(Ou("AveragePool",e.inputs[0],!1,t))},Ru={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Bu=e=>{let t=e.format;return{format:t,...Ru,cacheKey:t}},Du=(e,t)=>{Vn(e.inputs),e.compute(Ou("GlobalAveragePool",e.inputs[0],!0,t))},Mu=(e,t,r,o)=>{let[i,u]=Cu(t,o,r),a=`\n      value = max(x_val, value);\n    `,c="",m=U("x",t.dataType,t.dims.length),g=["rank"],[d,b,v,S,w]=Au(u,i);return d.push(...K(t.dims),...K(u)),{name:e,shaderCache:{hint:`${o.cacheKey};${v};${S};${w}`,inputDependencies:g},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(W.size(u)/64)},programUniforms:d}),getShaderSource:C=>Iu(C,m,t.dims.length,u.length,i,a,c,-1e5,b,v,S,w)}},zu=(e,t)=>{Vn(e.inputs),e.compute(Mu("MaxPool",e.inputs[0],!1,t))},Uu=e=>{let t=e.storage_order,r=e.dilations,o=Eu(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(o.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let i={storageOrder:t,dilations:r,...o,cacheKey:""};return{...i,cacheKey:Nc(i)}},Vu=e=>{let t=e.format;return{format:t,...Ru,cacheKey:t}},Wu=(e,t)=>{Vn(e.inputs),e.compute(Mu("GlobalMaxPool",e.inputs[0],!0,t))}});var Gc,Lc,Hu,Gu=te(()=>{"use strict";cr();Ue();_e();Gc=(e,t,r)=>{let o=e===t,i=e<t&&r<0,u=e>t&&r>0;if(o||i||u)throw new Error("Range these inputs\' contents are invalid.")},Lc=(e,t,r,o)=>{let i=Math.abs(Math.ceil((t-e)/r)),u=[i],a=i,c=ut(o),m=[{type:"uint32",data:a},{type:c,data:e},{type:c,data:r},...K(u)],g=d=>{let b=ee("output",o,u.length),v=b.type.value,S=[{name:"outputSize",type:"u32"},{name:"start",type:v},{name:"delta",type:v}];return`\n        ${d.registerUniforms(S).declareVariables(b)}\n        ${d.mainStart()}\n        ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${v}(global_idx) * uniforms.delta;\n      }`};return{name:"Range",shaderCache:{hint:`${o}`},getShaderSource:g,getRunData:()=>({outputs:[{dims:u,dataType:o}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:m})}},Hu=e=>{let t=0,r=0,o=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],o=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],o=e.inputs[2].getFloat32Array()[0]),dr.webgpu.validateInputContent&&Gc(t,r,o),e.compute(Lc(t,r,o,e.inputs[0].dataType),{inputs:[]})}});var Fc,jc,qc,Kc,Yc,Zc,Xc,Jc,Qc,ep,tp,Lu,rp,np,op,ip,ap,Fu,ju,qu=te(()=>{"use strict";Ae();je();_e();Fc=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},jc=(e,t,r)=>{t.every(i=>i>=0&&i<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let o=new Array(r).fill(1);return t.forEach((i,u)=>o[i]=e[u]),o},qc=(e,t,r,o,i,u)=>{let[a,c,m]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],g=e[0].dims.length;if(a>0&&e.length>a&&e[a].dims.length>0)e[a].getFloat32Array().forEach(d=>u.push(d));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(c>0&&e.length>c&&e[c].dims.length>0){if(e[c].getFloat32Array().forEach(d=>o.push(d)),o.length!==0&&o.length!==g&&r>=18&&o.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Fc(o,t),t.axes.length>0&&jc(o,t.axes,g).forEach((d,b)=>o[b]=d)}if(m>0&&e.length>m&&(e[m].getBigInt64Array().forEach(d=>i.push(Number(d))),i.length!==g||r>=18&&i.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(o.length!==t.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(i.length!==t.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(typeof o<"u"&&typeof i<"u"&&o.length>0&&i.length>g)throw new Error("Resize requires only of scales or sizes to be specified")},Kc=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n                    // offset-by-one error later in floor().\n                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\n                    let fract =\n                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);\n                    return whole + fract;\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +\n                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /\n                        ${t}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);\n                  const adjustment = ${t}(lengthResized) / outputWidth;\n                  const center = ${t}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Yc=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Zc=(e,t,r)=>{let o=new Array(r).fill(0).concat(new Array(r).fill(1)),i=e.length===0?o:e.slice();return t.length>0?(t.forEach((u,a)=>{o[u]=i[a],o[a+r]=i[t.length+a]}),o):i},Xc=(e,t,r,o)=>{let i=[];if(r.length>0)if(o.length>0){if(e.forEach(u=>i.push(u)),Math.max(...o)>e.length)throw new Error("axes is out of bound");o.forEach((u,a)=>i[u]=r[a])}else r.forEach(u=>i.push(u));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");i=e.map((u,a)=>Math.round(u*t[a]))}return i},Jc=(e,t,r)=>{let o=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(u=>t[u]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(u=>t[u]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let i=e.slice();return r.axes.length>0?(r.axes.forEach(u=>t[u]=o),r.axes.forEach(u=>i[u]=Math.round(e[u]*t[u]))):(t.fill(o,0,t.length),i.forEach((u,a)=>i[a]=Math.round(u*t[a]))),i},Qc=(e,t,r,o,i)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {\n      var original_indices: array<${e.type.value}, ${r.length}>;\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${ce("uniforms.scales","i",o)};\n        var roi_low = ${ce("uniforms.roi","i",i)};\n        var roi_hi = ${ce("uniforms.roi",`i + ${t.length}`,i)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${ce("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${ce("uniforms.output_shape","i",r.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,ep=(e,t,r,o,i,u,a)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${o.length}; i++) {\n        var output_index = ${t.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${ce("uniforms.scales","i",i)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${ce("uniforms.roi","i",u)};\n          var roi_hi = ${ce("uniforms.roi",`i + ${r.length}`,u)};\n          var input_shape_i = ${ce("uniforms.input_shape","i",r.length)};\n          var output_shape_i = ${ce("uniforms.output_shape","i",o.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${a} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i"," input_index")}\n      }\n      return input_indices;\n    }`,tp=(e,t)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${ce("uniforms.input_shape","i",t.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,Lu=(e,t,r,o)=>e.rank>o?`\n    ${e.indicesSet("input_indices",t,"channel")};\n    ${e.indicesSet("input_indices",r,"batch")};\n`:"",rp=(e,t,r,o,i)=>{let[a,c,m,g]=r.length===2?[-1,0,1,-1]:[0,2,3,1],d=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",c,`max(0, min(row, ${r[c]} - 1))`)};\n      ${e.indicesSet("input_indices",m,`max(0, min(col, ${r[m]} - 1))`)};\n      ${Lu(e,g,a,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${d} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${d} = originalIndices[${c}];\n      var col:${d} = originalIndices[${m}];\n      ${o?`if (row < 0 || row > (${r[c]} - 1) || col < 0 || col > (${r[m]} - 1)) {\n        return ${i};\n      }`:""};\n      row = max(0, min(row, ${r[c]} - 1));\n      col = max(0, min(col, ${r[m]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${r.length>2?`u32(originalIndices[${g}])`:"0"};\n      var batch: u32 =  ${r.length>2?`u32(originalIndices[${a}])`:"0"};\n      var x11: ${d} = getInputValue(batch, channel, row1, col1);\n      var x12: ${d} = getInputValue(batch, channel, row1, col2);\n      var x21: ${d} = getInputValue(batch, channel, row2, col1);\n      var x22: ${d} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${d} = abs(row - ${d}(row1));\n      var dx2: ${d} = abs(${d}(row2) - row);\n      var dy1: ${d} = abs(col - ${d}(col1));\n      var dy2: ${d} = abs(${d}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},np=(e,t,r,o,i,u,a,c,m,g)=>{let d=r.length===2,b=!0,[v,S]=d?[0,1]:b?[2,3]:[1,2],w=e.type.value,C=O=>{let A=O===v?"row":"col";return`\n      fn ${A}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${w} {\n        var output_index = ${t.indicesGet("output_indices",O)};\n        var originalIdx: ${w} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[O]},\n        ${o[O]}, ${r[O]}, ${u[O]}, ${u[O]} + ${r.length});\n        var fractOriginalIdx: ${w} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${c} && (originalIdx < 0 || originalIdx > (${r[O]} - 1))) {\n          return ${m};\n        }\n        var data: array<${w}, 4> = array<${w}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${A}: ${w} = originalIdx + ${w}(i);\n          if (${A} < 0 || ${A} >= ${r[O]}) {\n            ${(()=>g?`coefs[i + 1] = 0.0;\n                        continue;`:c?`return ${m};`:`${A} = max(0, min(${A}, ${r[O]} - 1));`)()};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",O,`u32(${A})`)};\n          data[i + 1] = ${O===v?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${C(v)};\n    ${C(S)};\n  fn getCubicInterpolationCoefs(s: ${w}) -> array<${w}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${w}, 4> = array<${w}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${w} = 1.0 - absS;\n    var twoMinusAbsS: ${w} = 2.0 - absS;\n    var onePlusAbsS: ${w} = 1.0 + absS;\n    coeffs[0] = ((${a} * onePlusAbsS - 5 * ${a}) * onePlusAbsS + 8 * ${a}) * onePlusAbsS - 4 * ${a};\n    coeffs[1] = ((${a} + 2) * absS - (${a} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${a} + 2) * oneMinusAbsS - (${a} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${a} * twoMinusAbsS - 5 * ${a}) * twoMinusAbsS + 8 * ${a}) * twoMinusAbsS - 4 * ${a};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${w}, 4>, coefs: array<${w}, 4>) -> ${w} {\n    var coefsSum: ${w} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${w} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},op=(e,t,r,o,i)=>{let[a,c,m,g,d]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],b=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${b} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",c,`max(0, min(depth, ${r[c]} - 1))`)};\n      ${e.indicesSet("input_indices",m,`max(0, min(height, ${r[m]} - 1))`)};\n      ${e.indicesSet("input_indices",g,`max(0, min(width, ${r[g]} - 1))`)};\n      ${Lu(e,d,a,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${b} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${b} = originalIndices[${c}];\n      var height:${b} = originalIndices[${m}];\n      var width:${b} = originalIndices[${g}];\n      ${o?`if (depth < 0 || depth > (${r[c]} - 1) || height < 0 || height > (${r[m]} - 1) || width < 0 || (width > ${r[g]} - 1)) {\n      return ${i};\n        }`:""};\n\n    depth = max(0, min(depth, ${r[c]} - 1));\n      height = max(0, min(height, ${r[m]} - 1));\n      width = max(0, min(width, ${r[g]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${r.length>3?`u32(originalIndices[${d}])`:"0"};\n      var batch: u32 =  ${r.length>3?`u32(originalIndices[${a}])`:"0"};\n\n      var x111: ${b} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${b} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${b} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${b} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${b} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${b} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${b} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${b} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${b} = abs(depth - ${b}(depth1));\n      var dx2: ${b} = abs(${b}(depth2) - depth);\n      var dy1: ${b} = abs(height - ${b}(height1));\n      var dy2: ${b} = abs(${b}(height2) - height);\n      var dz1: ${b} = abs(width - ${b}(width1));\n      var dz2: ${b} = abs(${b}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},ip=(e,t,r,o,i,u)=>{let a=e.dims,c=Zc(u,t.axes,a.length),m=Xc(a,o,i,t.axes),g=o.slice();o.length===0&&(g=a.map((x,E)=>x===0?1:m[E]/x),t.keepAspectRatioPolicy!=="stretch"&&(m=Jc(a,g,t)));let d=ee("output",e.dataType,m.length),b=U("input",e.dataType,a.length),v=W.size(m),S=a.length===m.length&&a.every((x,E)=>x===m[E]),w=t.coordinateTransformMode==="tf_crop_and_resize",C=t.extrapolationValue,O=b.type.value,A=x=>`\n      ${S?"":`\n      ${Kc(t.coordinateTransformMode,O)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${tp(b,a)};\n              ${Yc(t.nearestMode,r,O)};\n              ${ep(b,d,a,m,g.length,c.length,w)};\n              `;case"linear":return`\n              ${Qc(d,a,m,g.length,c.length)};\n              ${(()=>{if(a.length===2||a.length===4)return`${rp(b,d,a,w,C)}`;if(a.length===3||a.length===5)return`${op(b,d,a,w,C)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(a.length===2||a.length===4)return`${np(b,d,a,m,g,c,t.cubicCoeffA,w,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${x.registerUniform("output_size","u32").registerUniform("scales","f32",g.length).registerUniform("roi","f32",c.length).declareVariables(b,d)}\n      ${x.mainStart()}\n        ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${S?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${d.offsetToIndices("global_idx")};\n        var input_indices: ${b.type.indices};\n        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${b.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${t.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${a.length===2||a.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n`}\n      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${g.length>0?g:""}|${i.length>0?i:""}|${c.length>0?c:""}|${S}|${a}`,inputDependencies:["rank"]},getShaderSource:A,getRunData:()=>({outputs:[{dims:m,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(v/64)},programUniforms:[{type:"uint32",data:v},{type:"float32",data:g},{type:"float32",data:c},...K(a),...K(m)]})}},ap=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Fu=(e,t)=>{let r=[],o=[],i=[],u=ap(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");qc(e.inputs,t,u,r,o,i),e.compute(ip(e.inputs[0],t,u,r,o,i),{inputs:[0]})},ju=e=>{let t=e.antialias,r=e.axes,o=e.coordinateTransformMode,i=e.cubicCoeffA,u=e.excludeOutside!==0,a=e.extrapolationValue,c=e.keepAspectRatioPolicy,m=e.mode,g=e.nearestMode===""?"simple":e.nearestMode;return we({antialias:t,axes:r,coordinateTransformMode:o,cubicCoeffA:i,excludeOutside:u,extrapolationValue:a,keepAspectRatioPolicy:c,mode:m,nearestMode:g})}});var sp,up,Ku,Yu,Zu=te(()=>{"use strict";Ue();Ae();je();_e();sp=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],o=e[2];if(t.dataType!==r.dataType||t.dataType!==o.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let i=t.dims[t.dims.length-1],u=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==u)throw new Error("Skip must have the same sequence length as input");if(o.dims.length!==1)throw new Error("Gamma must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let a=e[3];if(a.dims.length!==1)throw new Error("Beta must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let a=e[4];if(a.dims.length!==1)throw new Error("Bias must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}},up=(e,t,r,o)=>{let i=e[0].dims,u=W.size(i),a=i,c=u,m=i.slice(-1)[0],g=o?i.slice(0,-1).concat(1):[],d=e.length>3,b=e.length>4,v=o&&r>1,S=o&&r>2,w=r>3,C=He(m),O=[U("x",e[0].dataType,e[0].dims,C),U("skip",e[1].dataType,e[1].dims,C),U("gamma",e[2].dataType,e[2].dims,C)];d&&O.push(U("beta",e[3].dataType,e[3].dims,C)),b&&O.push(U("bias",e[4].dataType,e[4].dims,C)),O.push(ee("output",e[0].dataType,a,C)),v&&O.push(ee("meanOutput",1,g)),S&&O.push(ee("invStdOutput",1,g)),w&&O.push(ee("inputSkipBiasSum",e[0].dataType,a,C));let A=Ne(e[0].dataType),x=T=>`\n      const hiddenSize: f32 = ${m};\n      const hiddenSizeVectorized: u32 = ${m/C};\n      const epsilon: f32 = ${t.epsilon};\n\n      ${T.declareVariables(...O)}\n\n      ${T.mainStart()}\n        ${T.guardAgainstOutOfBoundsWorkgroupSizes(c/m)}\n        let offset = global_idx * hiddenSizeVectorized;\n        var sum = ${Xe("f32",C)};\n        var squareSum = ${Xe("f32",C)};\n        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {\n          let skipValue = skip[offset + i];\n          let biasValue = ${b?"bias[i]":"0.0"};\n          let inputValue = x[offset + i];\n          let value = inputValue + skipValue + biasValue;\n          ${w?"inputSkipBiasSum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32Value = ${gt(A,C,"value")};\n          sum += f32Value;\n          squareSum += f32Value * f32Value;\n        }\n        let mean = ${lt("sum",C)} / hiddenSize;\n        let invStdDev = inverseSqrt(${lt("squareSum",C)} / hiddenSize - mean * mean + epsilon);\n        ${v?"meanOutput[global_idx] = mean;":""}\n        ${S?"invStdOutput[global_idx] = invStdDev;":""}\n        for (var i: u32 = 0; i < hiddenSizeVectorized; i++) {\n          output[offset + i] = (output[offset + i] - ${A}(mean)) * ${A}(invStdDev) * gamma[i]\n           + ${d?"beta[i]":"0.0"};\n        }\n      }`,E=[{dims:a,dataType:e[0].dataType}];return r>1&&E.push({dims:g,dataType:1}),r>2&&E.push({dims:g,dataType:1}),r>3&&E.push({dims:i,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:t.cacheKey},getShaderSource:x,getRunData:()=>({outputs:E,dispatchGroup:{x:Math.ceil(c/m/64)}})}},Ku=(e,t)=>{sp(e.inputs);let o=[0];e.outputCount>1&&o.push(-3),e.outputCount>2&&o.push(-3),e.outputCount>3&&o.push(3),e.compute(up(e.inputs,t,e.outputCount,!1),{outputs:o})},Yu=e=>{let t=e.epsilon;return we({epsilon:t})}});var lp,Wn,dp,Xu,cp,pp,Ju,Qu,el=te(()=>{"use strict";Ue();Ae();je();_e();lp=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,o)=>{if(e[o+1].dataType!==6&&e[o+1].dataType!==7)throw new Error(`Input ${o} must be an array of int32 or int64`)})},Wn=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(o=>r.push(Number(o)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(o=>r.push(Number(o)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},dp=(e,t)=>{if(e.length>1){let r=Wn(e,1),o=Wn(e,2),i=Wn(e,3);return i.length===0&&(i=[...Array(e[0].dims.length).keys()]),we({starts:r,ends:o,axes:i})}else return t},Xu=(e,t,r,o,i)=>{let u=e;return e<0&&(u+=r[o[t]]),i[t]<0?Math.max(0,Math.min(u,r[o[t]]-1)):Math.max(0,Math.min(u,r[o[t]]))},cp=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${r.length}; i >= 0; i--) {\n            let input_shape_i = ${ce("uniforms.input_shape","i",r.length)};\n            let steps_i = ${ce("uniforms.steps","i",r.length)};\n            let signs_i = ${ce("uniforms.signs","i",r.length)};\n            let starts_i = ${ce("uniforms.starts","i",r.length)};\n            var output_index = ${t.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,pp=(e,t)=>{let r=e[0].dims,o=W.size(r),i=t.axes.length>0?W.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],u=Wn(e,4);u.forEach(A=>A!==0||(()=>{throw new Error("step cannot be 0")})),u.length===0&&(u=Array(i.length).fill(1));let a=t.starts.map((A,x)=>Xu(A,x,r,i,u)),c=t.ends.map((A,x)=>Xu(A,x,r,i,u));if(i.length!==a.length||i.length!==c.length)throw new Error("start, ends and axes should have the same number of elements");if(i.length!==r.length)for(let A=0;A<r.length;++A)i.includes(A)||(a.splice(A,0,0),c.splice(A,0,r[A]),u.splice(A,0,1));let m=u.map(A=>Math.sign(A));u.forEach((A,x,E)=>{if(A<0){let T=(c[x]-a[x])/A,N=a[x],B=N+T*u[x];a[x]=B,c[x]=N,E[x]=-A}});let g=r.slice(0);i.forEach((A,x)=>{g[A]=Math.ceil((c[A]-a[A])/u[A])});let d={dims:g,dataType:e[0].dataType},b=ee("output",e[0].dataType,g.length),v=U("input",e[0].dataType,e[0].dims.length),S=W.size(g),w=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:a.length},{name:"signs",type:"i32",length:m.length},{name:"steps",type:"u32",length:u.length}],C=[{type:"uint32",data:S},{type:"uint32",data:a},{type:"int32",data:m},{type:"uint32",data:u},...K(e[0].dims),...K(g)],O=A=>`\n      ${A.registerUniforms(w).declareVariables(v,b)}\n        ${cp(v,b,r)}\n        ${A.mainStart()}\n          ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${b.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${b.setByOffset("global_idx",v.getByIndices("input_indices"))}\n      }`;return{name:"Slice",shaderCache:{hint:`${m.length}_${a.length}_${u.length}`,inputDependencies:["rank"]},getShaderSource:O,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:C})}},Ju=(e,t)=>{lp(e.inputs,t);let r=dp(e.inputs,t);e.compute(pp(e.inputs,r),{inputs:[0]})},Qu=e=>{let t=e.starts,r=e.ends,o=e.axes;return we({starts:t,ends:r,axes:o})}});var mp,fp,tl,rl,nl=te(()=>{"use strict";Ae();je();_e();mp=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},fp=(e,t)=>{let r=e.dims,o=W.size(r),i=64,u=t.axis;if(u<0&&(u=r.length+u),u<r.length-1)throw new Error("softmax only supports last axis for now.");let a=r[u],c=o/a,m=He(a),g=a/m,d=(O,A)=>A===4?`max(max(${O}.x, ${O}.y), max(${O}.z, ${O}.w))`:A===2?`max(${O}.x, ${O}.y)`:A===3?`max(max(${O}.x, ${O}.y), ${O}.z)`:O,b=U("x",e.dataType,e.dims,m),v=ee("result",e.dataType,e.dims,m),S=b.type.value,w=Ne(e.dataType)==="f32"?`var threadMax = ${S}(-3.402823e+38f);`:`var threadMax = ${S}(-65504.0h);`,C=O=>`\n      var<workgroup> rowMaxShared : ${S};\n      var<workgroup> rowSumShared : ${S};\n      var<workgroup> threadShared : array<${S}, ${i}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${S} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${S}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${O.registerUniform("packedCols","i32").declareVariables(b,v)}\n      ${O.mainStart()}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = ${i};\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${w}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${S}(${d("threadShared[0]",m)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${S}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${S}(${lt("threadShared[0]",m)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`;return{name:"Softmax",shaderCache:{hint:`${m}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.dataType}],dispatchGroup:{x:c},programUniforms:[{type:"uint32",data:g}]}),getShaderSource:C}},tl=(e,t)=>{mp(e.inputs),e.compute(fp(e.inputs[0],t))},rl=e=>we({axis:e.axis})});var hp,gp,yp,bp,wp,ol,il,al=te(()=>{"use strict";Ae();je();_e();hp=e=>{if(!e||e.length<1)throw new Error("too few inputs")},gp=(e,t)=>{let r=[],o=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(i=>r.push(Number(i))),o=r.length),we({numOutputs:o,axis:t.axis,splitSizes:r})},yp=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${ce("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,bp=e=>{let t=e.length,r=[];for(let o=0;o<t;++o){let i=e[o].setByIndices("indices","input[global_idx]");t===1?r.push(i):o===0?r.push(`if (output_number == ${o}u) { ${i} }`):o===t-1?r.push(`else { ${i} }`):r.push(`else if (output_number == ${o}) { ${i} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${r.join(`\n`)}\n      }`},wp=(e,t)=>{let r=e[0].dims,o=W.size(r),i=e[0].dataType,u=W.normalizeAxis(t.axis,r.length),a=new Array(t.numOutputs),c=U("input",i,r),m=new Array(t.numOutputs),g=[],d=[],b=0,v=[{type:"uint32",data:o}];for(let w=0;w<t.numOutputs;w++){b+=t.splitSizes[w],m[w]=b;let C=r.slice();C[t.axis]=t.splitSizes[w],d.push(C),a[w]=ee(`output${w}`,i,C),g.push({dims:d[w],dataType:e[0].dataType})}v.push({type:"uint32",data:m}),v.push(...K(r)),d.forEach(w=>v.push(...K(w)));let S=w=>`\n  ${w.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",m.length).declareVariables(c,...a)}\n  ${yp(m.length)}\n  ${bp(a)}\n\n  ${w.mainStart()}\n    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${c.offsetToIndices("global_idx")};\n    var index = ${c.indicesGet("indices",u)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${ce("uniforms.size_in_split_axis","output_number - 1u",m.length)};\n      ${c.indicesSet("indices",u,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:S,getRunData:()=>({outputs:g,dispatchGroup:{x:Math.ceil(o/64)},programUniforms:v})}},ol=(e,t)=>{hp(e.inputs);let r=e.inputs.length===1?t:gp(e.inputs,t);e.compute(wp(e.inputs,r),{inputs:[0]})},il=e=>{let t=e.axis,r=e.splitSizes,o=e.numOutputs<0?r.length:e.numOutputs;if(o!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return we({axis:t,numOutputs:o,splitSizes:r})}});var sl,vp,$p,Sp,ul,ll=te(()=>{"use strict";Ue();Ae();_e();sl=e=>Array.from(e.getBigInt64Array(),Number),vp=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(sl(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},$p=(e,t)=>{let r=[];for(let o=0;o<e.length;++o)r.push(e[o]*t[o]);return r},Sp=e=>{let t=e[0].dims,r=sl(e[1]),o=$p(t,r),i=W.size(o),u=e[0].dataType,a=U("input",u,t.length),c=ee("output",u,o.length),m=g=>`\n      const inputShape = ${a.indices(...t)};\n      ${g.registerUniform("output_size","u32").declareVariables(a,c)}\n      ${g.mainStart()}\n      ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${c.offsetToIndices("global_idx")};\n      var input_indices: ${a.type.indices};\n      for (var i = 0; i < ${t.length}; i++) {\n        let input_dim_i = ${a.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${c.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${a.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${c.setByOffset("global_idx",a.getByIndices("input_indices"))}\n    }`;return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:"uint32",data:i},...K(e[0].dims),...K(o)]}),getShaderSource:m}},ul=e=>{vp(e.inputs),e.compute(Sp(e.inputs),{inputs:[0]})}});var xp,_p,dl,cl=te(()=>{"use strict";Ue();Ae();_e();xp=(e,t,r,o,i)=>{let u=ee("output_data",i,r.length,4),a=U("a_data",t[1].dataType,t[1].dims.length,4),c=U("b_data",t[2].dataType,t[2].dims.length,4),m=U("c_data",t[0].dataType,t[0].dims.length,4),g,d=(b,v,S)=>`select(${v}, ${b}, ${S})`;if(!o)g=u.setByOffset("global_idx",d(a.getByOffset("global_idx"),c.getByOffset("global_idx"),m.getByOffset("global_idx")));else{let b=(v,S,w="")=>{let C=`a_data[index_a${S}][component_a${S}]`,O=`b_data[index_b${S}][component_b${S}]`,A=`bool(c_data[index_c${S}] & ${4278190080>>>(3-S)*8}u)`;return`\n            let output_indices${S} = ${u.offsetToIndices(`global_idx * 4u + ${S}u`)};\n            let offset_a${S} = ${a.broadcastedIndicesToOffset(`output_indices${S}`,u)};\n            let offset_b${S} = ${c.broadcastedIndicesToOffset(`output_indices${S}`,u)};\n            let offset_c${S} = ${m.broadcastedIndicesToOffset(`output_indices${S}`,u)};\n            let index_a${S} = offset_a${S} / 4u;\n            let index_b${S} = offset_b${S} / 4u;\n            let index_c${S} = offset_c${S} / 4u;\n            let component_a${S} = offset_a${S} % 4u;\n            let component_b${S} = offset_b${S} % 4u;\n            ${v}[${S}] = ${w}(${d(C,O,A)});\n          `};i===9?g=`\n            var data = vec4<u32>(0);\n            ${b("data",0,"u32")}\n            ${b("data",1,"u32")}\n            ${b("data",2,"u32")}\n            ${b("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:g=`\n            ${b("output_data[global_idx]",0)}\n            ${b("output_data[global_idx]",1)}\n            ${b("output_data[global_idx]",2)}\n            ${b("output_data[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(m,a,c,u)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${g}\n      }`},_p=e=>{let t=e[1].dims,r=e[2].dims,o=e[0].dims,i=e[1].dataType,u=!(W.areEqual(t,r)&&W.areEqual(r,o)),a=t,c=W.size(t);if(u){let g=vt.calcShape(vt.calcShape(t,r,!1),o,!1);if(!g)throw new Error("Can\'t perform where op on the given tensors");a=g,c=W.size(a)}let m=Math.ceil(c/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:g=>xp(g,e,a,u,i),getRunData:()=>({outputs:[{dims:a,dataType:i}],dispatchGroup:{x:Math.ceil(c/64/4)},programUniforms:[{type:"uint32",data:m},...K(o),...K(t),...K(r),...K(a)]})}},dl=e=>{e.compute(_p(e.inputs))}});var pl,ml=te(()=>{"use strict";Ma();Co();Va();Na();vs();Ps();Bs();Oo();Ks();Xs();ru();iu();uu();cu();fu();gu();bu();ko();Su();_u();Nu();Gu();Tn();qu();Zu();el();nl();al();ll();mr();Ao();cl();pl=new Map([["Abs",[Ha]],["Acos",[Ga]],["Acosh",[La]],["Add",[$s]],["ArgMax",[Da,_o]],["ArgMin",[Ba,_o]],["Asin",[Fa]],["Asinh",[ja]],["Atan",[qa]],["Atanh",[Ka]],["Attention",[za]],["AveragePool",[ku,Pu]],["BatchNormalization",[Ua]],["BiasAdd",[Wa]],["BiasSplitGelu",[ws]],["Cast",[Za,Ya]],["Ceil",[Ja]],["Clip",[Xa]],["Concat",[ks,Rs]],["Conv",[Bo,Ro]],["ConvTranspose",[qs,js]],["Cos",[Qa]],["Cosh",[es]],["CumSum",[Ys,Zs]],["Div",[Ss]],["Einsum",[eu,tu]],["Elu",[ts,Pn]],["Equal",[xs]],["Erf",[rs]],["Exp",[ns]],["Expand",[ou]],["Floor",[os]],["FusedConv",[Bo,Ro]],["Gather",[su,au]],["GatherElements",[du,lu]],["Gelu",[is]],["Gemm",[mu,pu]],["GlobalAveragePool",[Du,Bu]],["GlobalMaxPool",[Wu,Vu]],["Greater",[Is]],["GreaterOrEqual",[Es]],["InstanceNormalization",[hu]],["LayerNormalization",[yu]],["LeakyRelu",[as,Pn]],["Less",[Ts]],["LessOrEqual",[Os]],["Log",[bs]],["MatMul",[Vs]],["MaxPool",[zu,Uu]],["Mul",[_s]],["MultiHeadAttention",[$u,vu]],["Neg",[us]],["Not",[ss]],["Pad",[xu]],["Pow",[Cs]],["Range",[Hu]],["Reciprocal",[ls]],["ReduceMin",[Ta]],["ReduceMean",[xa]],["ReduceMax",[Ia]],["ReduceSum",[Oa]],["ReduceProd",[Ea]],["ReduceL1",[_a]],["ReduceL2",[Ca]],["ReduceLogSum",[ka]],["ReduceLogSumExp",[Aa]],["ReduceSumSquare",[Pa]],["Relu",[ds]],["Resize",[Fu,ju]],["Sigmoid",[cs]],["Sin",[ps]],["Sinh",[ms]],["Slice",[Ju,Qu]],["SkipLayerNormalization",[Ku,Yu]],["Split",[ol,il]],["Sqrt",[fs]],["Softmax",[tl,rl]],["Sub",[As]],["Tan",[hs]],["Tanh",[gs]],["ThresholdedRelu",[ys,Pn]],["Tile",[ul]],["Transpose",[da,ca]],["Where",[dl]]])});var Nn,fl=te(()=>{"use strict";cr();Ut();_e();Nn=class{constructor(t){this.backend=t;this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,o,i,u){Zt(t.programInfo.name);let a=this.backend.device,c=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2),c.setPipeline(t.computePipeline);let m=[];for(let d of r)m.push({binding:m.length,resource:{buffer:d.buffer}});for(let d of o)m.push({binding:m.length,resource:{buffer:d.buffer}});u&&m.push({binding:m.length,resource:u});let g=a.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:m,label:t.programInfo.name});c.setBindGroup(0,g),c.dispatchWorkgroups(...i),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Xt(t.programInfo.name)}dispose(){}build(t,r){Zt(t.name);let o=this.backend.device,i=[];o.features.has("shader-f16")&&i.push("enable f16;");let u=ua(r),a=t.getShaderSource(u),c=`${i.join(`\n`)}\n${u.additionalImplementations}\n${a}`,m=o.createShaderModule({code:c,label:t.name});De("verbose",()=>`[WebGPU] ${t.name} shader code: ${c}`);let g=o.createComputePipeline({compute:{module:m,entryPoint:"main"},layout:"auto",label:t.name});return Xt(t.name),{programInfo:t,computePipeline:g}}normalizeDispatchGroupSize(t){let r=typeof t=="number"?t:t.x,o=typeof t=="number"?1:t.y||1,i=typeof t=="number"?1:t.z||1,u=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=u&&o<=u&&i<=u)return[r,o,i];let a=r*o*i,c=Math.ceil(Math.sqrt(a));if(c>u){if(c=Math.ceil(Math.cbrt(a)),c>u)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[c,c,c]}else return[c,c,1]}}});var Cp,Ap,Hn,hl=te(()=>{"use strict";cr();Ue();Ut();na();sa();ml();fl();Cp=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let o=0;o<e.length;++o){let i=e[o].dataType;switch(t[o]){case"none":{r.push("");break}case"type":{r.push(`${i}`);break}case"rank":{let u=e[o].dims.length;r.push(`${i};${u}`);break}case"dims":{let u=e[o].dims.join(",");r.push(`${i};${u}`);break}default:throw new Error(`unsupported input dependency: ${t[o]}`)}}return r.join("|")},Ap=(e,t,r)=>{let o=e.name;return e.shaderCache?.hint&&(o+="["+e.shaderCache.hint+"]"),o+=":"+r+`:${Cp(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,o},Hn=class{constructor(){this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,r){this.env=t;let o=[],i={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:o};r.features.has("chromium-experimental-timestamp-query-inside-passes")?o.push("chromium-experimental-timestamp-query-inside-passes"):r.features.has("timestamp-query")&&o.push("timestamp-query"),r.features.has("shader-f16")&&o.push("shader-f16"),this.device=await r.requestDevice(i),this.gpuDataManager=aa(this),this.programManager=new Nn(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,ta(t.logLevel,!!t.debug),this.device.onuncapturederror=u=>{u.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${u.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder(),this.setQueryType(),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE}))),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t={};this.queryType==="at-passes"&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=this.getCommandEncoder().beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Zt(),this.endComputePass();let t;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),t=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(t,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&t.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(t.getMappedRange()),o=this.pendingQueries.get(t);for(let i=0;i<r.length/2;i++){let u=o[i],a=u.kernelId,c=this.kernels.get(a),m=c.kernelType,g=c.kernelName,d=u.programName,b=u.inputTensorViews,v=u.outputTensorViews,S=r[i*2],w=r[i*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=S);let C=Number(S-this.queryTimeBase),O=Number(w-this.queryTimeBase);if(!Number.isSafeInteger(C)||!Number.isSafeInteger(O))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:b.map(A=>({dims:A.dims,dataType:ut(A.dataType)})),outputsMetadata:v.map(A=>({dims:A.dims,dataType:ut(A.dataType)})),kernelId:a,kernelType:m,kernelName:g,programName:d,startTime:C,endTime:O});else{let A="";b.forEach((E,T)=>{A+=`input[${T}]: [${E.dims}] | ${ut(E.dataType)}, `});let x="";v.forEach((E,T)=>{x+=`output[${T}]: [${E.dims}] | ${ut(E.dataType)}, `}),console.log(`[profiling] kernel "${a}|${m}|${g}|${d}" ${A}${x}execution time: ${O-C} ns`)}fo("GPU",`${d}::${S}::${w}`)}t.unmap(),this.pendingQueries.delete(t)}),Xt()}run(t,r,o,i,u){Zt(t.name);let a=[];for(let x=0;x<r.length;++x){let E=this.gpuDataManager.get(r[x].data);if(!E)throw new Error(`no GPU data for input: ${r[x].data}`);a[x]=E}let{outputs:c,dispatchGroup:m,programUniforms:g}=t.getRunData(r),d=o.length===0?c.map((x,E)=>E):o;if(d.length!==c.length)throw new Error(`Output size ${d.length} must be equal to ${c.length}.`);let b=[],v=[];for(let x=0;x<c.length;++x){if(!Number.isInteger(d[x])||d[x]<-3||d[x]>=c.length)throw new Error(`Invalid output index: ${d[x]}`);if(d[x]===-3)continue;let E=d[x]===-1,T=d[x]===-2,N=E||T?u(c[x].dataType,c[x].dims):i(d[x],c[x].dataType,c[x].dims),B=this.gpuDataManager.get(N.data);if(!B)throw new Error(`no GPU data for output: ${N.data}`);if(E&&this.temporaryData.push(B),T){let V=this.kernelPersistentData.get(this.currentKernelId);V||(V=[],this.kernelPersistentData.set(this.currentKernelId,V)),V.push(B)}b.push(N),v.push(B)}let S;if(g){let x=0,E=[];g.forEach(V=>{let H=typeof V.data=="number"?[V.data]:V.data;if(H.length===0)return;let J=H.length<=2?H.length*4:16;x=Math.ceil(x/J)*J,E.push(x),x+=H.length>4?Math.ceil(H.length/4)*16:H.length*4});let T=16;x=Math.ceil(x/T)*T;let N=new ArrayBuffer(x);g.forEach((V,H)=>{let J=E[H],D=typeof V.data=="number"?[V.data]:V.data;V.type==="int32"?new Int32Array(N,J,D.length).set(D):V.type==="uint32"?new Uint32Array(N,J,D.length).set(D):new Float32Array(N,J,D.length).set(D)});let B=this.gpuDataManager.create(x,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(B.buffer,0,N,0,x),this.gpuDataManager.release(B.id),S={offset:0,size:x,buffer:B.buffer}}let w=this.programManager.normalizeDispatchGroupSize(m),C=w[1]===1&&w[2]===1,O=Ap(t,r,C),A=this.programManager.getArtifact(O);if(A||(A=this.programManager.build(t,w),this.programManager.setArtifact(O,A),De("info",()=>`[artifact] key: ${O}, programName: ${t.name}`)),De("info",()=>`[ProgramManager] run "${t.name}" (key=${O}) with ${w[0]}x${w[1]}x${w[2]}`),this.queryType!=="none"){let x={kernelId:this.currentKernelId,programName:A.programInfo.name,inputTensorViews:r,outputTensorViews:b};this.pendingKernels.push(x)}return this.programManager.run(A,a,v,w,S),Xt(t.name),b}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,o,i){let u=pl.get(t);if(!u)throw new Error(`kernel not implemented: ${t}`);let a={kernelType:t,kernelName:i,kernelEntry:u[0],attributes:[u[1],o]};this.kernels.set(r,a)}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let o of r)this.gpuDataManager.release(o.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,o){let i=this.kernels.get(t);if(!i)throw new Error(`kernel not created: ${t}`);let u=i.kernelType,a=i.kernelName,c=i.kernelEntry,m=i.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${u}] ${a}" is not allowed to be called recursively`);this.currentKernelId=t,m[0]&&(m[1]=m[0](m[1]),m[0]=void 0),De("info",()=>`[WebGPU] Start to run kernel "[${u}] ${a}"...`);let g=this.env.debug;this.temporaryData=[];try{return g&&this.device.pushErrorScope("validation"),c(r,m[1]),0}catch(d){return o.push(Promise.resolve(`[WebGPU] Kernel "[${u}] ${a}" failed. ${d}`)),1}finally{g&&o.push(this.device.popErrorScope().then(d=>d?`GPU validation error for kernel "[${u}] ${a}": ${d.message}`:null));for(let d of this.temporaryData)this.gpuDataManager.release(d.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,o,i){let u=this.sessionExternalDataMapping.get(t);u||(u=new Map,this.sessionExternalDataMapping.set(t,u));let a=u.get(r),c=this.gpuDataManager.registerExternalBuffer(o,i,a?.[1]);return u.set(r,[c,o]),c}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(o=>this.gpuDataManager.unregisterExternalBuffer(o[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw new Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,o){return async()=>{let i=await yo(this,t,r);return ra(i.buffer,o)}}writeTimestamp(t){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,t)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||this.env.wasm.trace)&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"))}}});var gl={};gn(gl,{init:()=>Ip});var Hr,Wo,Ip,yl=te(()=>{"use strict";Ue();hl();Ut();Ae();Hr=class e{constructor(t,r,o,i){this.module=t;this.dataType=r;this.data=o;this.dims=i}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=W.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=W.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=W.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(W.size(t)!==W.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},Wo=class{constructor(t,r,o){this.module=t;this.backend=r;this.customDataOffset=0;this.customDataSize=0;let i=t.HEAPU32,u=o>>>2;this.opKernelContext=i[u++];let a=i[u++];this.outputCount=i[u++],this.customDataOffset=i[u++],this.customDataSize=i[u++];let c=[];for(let m=0;m<a;m++){let g=i[u++],d=i[u++],b=i[u++],v=[];for(let S=0;S<b;S++)v.push(i[u++]);c.push(new Hr(t,g,d,v))}this.inputs=c}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(t,r){let o=r?.inputs?.map(c=>typeof c=="number"?this.inputs[c]:c)??this.inputs,i=r?.outputs??[],u=(c,m,g)=>new Hr(this.module,m,this.output(c,g),g),a=(c,m)=>{let g=zr(c);if(!g)throw new Error(`Unsupported data type: ${c}`);let d=g*W.size(m);return new Hr(this.module,c,this.backend.gpuDataManager.create(d).id,m)};return this.backend.run(t,o,i,u,a)}output(t,r){let o=this.module.stackSave();try{let i=this.module.stackAlloc((1+r.length)*4),u=i>>2;this.module.HEAPU32[u++]=r.length;for(let a=0;a<r.length;a++)this.module.HEAPU32[u++]=r[a];return this.module._JsepOutput(this.opKernelContext,t,i)}catch(i){throw new Error(`Failed to generate kernel\'s output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${i}`)}finally{this.module.stackRestore(o)}}},Ip=async(e,t,r)=>{let o=e.jsepInit;if(!o)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");let i=new Hn;await i.initialize(t,r),o(i,u=>i.alloc(u),u=>i.free(u),(u,a,c,m=!1)=>{if(m)De("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${u}, dst=${a}, size=${c}`),i.memcpy(u,a);else{De("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${u}, gpuDataId=${a}, size=${c}`);let g=e.HEAPU8.subarray(u>>>0,(u>>>0)+c);i.upload(a,g)}},async(u,a,c)=>{De("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${u}, dataOffset=${a}, size=${c}`),await i.download(u,()=>e.HEAPU8.subarray(a>>>0,(a>>>0)+c))},(u,a,c)=>i.createKernel(u,a,c,e.UTF8ToString(e._JsepGetNodeName(a))),u=>i.releaseKernel(u),(u,a,c,m)=>{De("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${c}, kernel=${u}, contextDataOffset=${a}`);let g=new Wo(e,i,a);return i.computeKernel(u,g,m)})}});var Pi;Pi=$i();var Nl=Ti(),uo,lo=!1,yn=!1,Oi=!1,Hl=()=>{try{return typeof SharedArrayBuffer>"u"?!1:(typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch{return!1}},Gl=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Ll=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",ki=async e=>{if(lo)return Promise.resolve();if(yn)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(Oi)throw new Error("previous call to \'initializeWebAssembly()\' failed.");yn=!0;let t=e.initTimeout,r=e.numThreads,o=e.simd,i=r>1&&Hl(),u=o&&Gl(),a=e.wasmPaths,c=typeof a=="string"?a:void 0,m=Ll(u,i),g=typeof a=="object"?a[m]:void 0,d=!1,b=[];if(t>0&&b.push(new Promise(v=>{setTimeout(()=>{d=!0,v()},t)})),b.push(new Promise((v,S)=>{let w=i?Nl:Pi,C={locateFile:(O,A)=>{if(i&&O.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Ei()],{type:"text/javascript"}));if(O.endsWith(".wasm")){if(g)return g;let x=c??A;return m==="ort-wasm-simd.wasm"?x+"ort-wasm-simd.jsep.wasm":m==="ort-wasm-simd-threaded.wasm"?x+"ort-wasm-simd-threaded.jsep.wasm":x+m}return A+O}};if(i)if(C.numThreads=r,typeof Blob>"u")C.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let O=`var ortWasmThreaded=${w.toString()};`;C.mainScriptUrlOrBlob=new Blob([O],{type:"text/javascript"})}w(C).then(O=>{yn=!1,lo=!0,uo=O,v()},O=>{yn=!1,Oi=!0,S(O)})})),await Promise.race(b),d)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},ze=()=>{if(lo&&uo)return uo;throw new Error("WebAssembly is not initialized yet.")};var Ve=(e,t)=>{let r=ze(),o=r.lengthBytesUTF8(e)+1,i=r._malloc(o);return r.stringToUTF8(e,i,o),t.push(i),i},Mr=(e,t,r,o)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([i,u])=>{let a=t?t+i:i;if(typeof u=="object")Mr(u,a+".",r,o);else if(typeof u=="string"||typeof u=="number")o(a,u.toString());else if(typeof u=="boolean")o(a,u?"1":"0");else throw new Error(`Can\'t handle extra config type: ${typeof u}`)})},Re=e=>{let t=ze(),r=t.stackSave();try{let o=t.stackAlloc(8);t._OrtGetLastError(o,o+4);let i=t.HEAP32[o/4],u=t.HEAPU32[o/4+1],a=u?t.UTF8ToString(u):"";throw new Error(`${e} ERROR_CODE: ${i}, ERROR_MESSAGE: ${a}`)}finally{t.stackRestore(r)}};var Ri=e=>{let t=ze(),r=0,o=[],i=e||{};try{if(e?.logSeverityLevel===void 0)i.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)i.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(i.terminate=!1);let u=0;return e?.tag!==void 0&&(u=Ve(e.tag,o)),r=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,u),r===0&&Re("Can\'t create run options."),e?.extra!==void 0&&Mr(e.extra,"",new WeakSet,(a,c)=>{let m=Ve(a,o),g=Ve(c,o);t._OrtAddRunConfigEntry(r,m,g)!==0&&Re(`Can\'t set a run config entry: ${a} - ${c}.`)}),[r,o]}catch(u){throw r!==0&&t._OrtReleaseRunOptions(r),o.forEach(a=>t._free(a)),u}};var Fl=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},jl=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},ql=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},Kl=(e,t,r)=>{for(let o of t){let i=typeof o=="string"?o:o.name;switch(i){case"webnn":if(i="WEBNN",typeof o!="string"){let a=o;if(a?.deviceType){let c=Ve("deviceType",r),m=Ve(a.deviceType,r);ze()._OrtAddSessionConfigEntry(e,c,m)!==0&&Re(`Can\'t set a session config entry: \'deviceType\' - ${a.deviceType}.`)}if(a?.numThreads){let c=a.numThreads;(typeof c!="number"||!Number.isInteger(c)||c<0)&&(c=0);let m=Ve("numThreads",r),g=Ve(c.toString(),r);ze()._OrtAddSessionConfigEntry(e,m,g)!==0&&Re(`Can\'t set a session config entry: \'numThreads\' - ${a.numThreads}.`)}if(a?.powerPreference){let c=Ve("powerPreference",r),m=Ve(a.powerPreference,r);ze()._OrtAddSessionConfigEntry(e,c,m)!==0&&Re(`Can\'t set a session config entry: \'powerPreference\' - ${a.powerPreference}.`)}}break;case"webgpu":if(i="JS",typeof o!="string"){let a=o;if(a?.preferredLayout){if(a.preferredLayout!=="NCHW"&&a.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either \'NCHW\' or \'NHWC\': ${a.preferredLayout}`);let c=Ve("preferredLayout",r),m=Ve(a.preferredLayout,r);ze()._OrtAddSessionConfigEntry(e,c,m)!==0&&Re(`Can\'t set a session config entry: \'preferredLayout\' - ${a.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${i}`)}let u=Ve(i,r);ze()._OrtAppendExecutionProvider(e,u)!==0&&Re(`Can\'t append execution provider: ${i}.`)}},Bi=e=>{let t=ze(),r=0,o=[],i=e||{};ql(i);try{let u=Fl(i.graphOptimizationLevel??"all"),a=jl(i.executionMode??"sequential"),c=typeof i.logId=="string"?Ve(i.logId,o):0,m=i.logSeverityLevel??2;if(!Number.isInteger(m)||m<0||m>4)throw new Error(`log serverity level is not valid: ${m}`);let g=i.logVerbosityLevel??0;if(!Number.isInteger(g)||g<0||g>4)throw new Error(`log verbosity level is not valid: ${g}`);let d=typeof i.optimizedModelFilePath=="string"?Ve(i.optimizedModelFilePath,o):0;if(r=t._OrtCreateSessionOptions(u,!!i.enableCpuMemArena,!!i.enableMemPattern,a,!!i.enableProfiling,0,c,m,g,d),r===0&&Re("Can\'t create session options."),i.executionProviders&&Kl(r,i.executionProviders,o),i.freeDimensionOverrides)for(let[b,v]of Object.entries(i.freeDimensionOverrides)){if(typeof b!="string")throw new Error(`free dimension override name must be a string: ${b}`);if(typeof v!="number"||!Number.isInteger(v)||v<0)throw new Error(`free dimension override value must be a non-negative integer: ${v}`);let S=Ve(b,o);t._OrtAddFreeDimensionOverride(r,S,v)!==0&&Re(`Can\'t set a free dimension override: ${b} - ${v}.`)}return i.extra!==void 0&&Mr(i.extra,"",new WeakSet,(b,v)=>{let S=Ve(b,o),w=Ve(v,o);t._OrtAddSessionConfigEntry(r,S,w)!==0&&Re(`Can\'t set a session config entry: ${b} - ${v}.`)}),[r,o]}catch(u){throw r!==0&&t._OrtReleaseSessionOptions(r),o.forEach(a=>t._free(a)),u}};Ue();var Mi=async e=>{if(typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(e))}catch(t){if(t.code==="ERR_FS_FILE_TOO_LARGE"){let r=(void 0)(e),o=[];for await(let i of r)o.push(i);return new Uint8Array(Buffer.concat(o))}throw t}else{let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),o=r?parseInt(r,10):0;if(o<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let i=t.body.getReader(),u=Math.ceil(o/65536),a=new WebAssembly.Memory({initial:u,maximum:u}).buffer,c=0;for(;;){let{done:m,value:g}=await i.read();if(m)break;let d=g.byteLength;new Uint8Array(a,c,d).set(g),c+=d}return new Uint8Array(a,0,o)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)};var Tp=(e,t)=>{ze()._OrtInit(e,t)!==0&&Re("Can\'t initialize onnxruntime.")},wl=async e=>{Tp(e.wasm.numThreads,Ur(e.logLevel))},vl=async(e,t)=>{if(t==="webgpu"||t==="webnn"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let r=await navigator.gpu.requestAdapter();if(!r)throw new Error(\'Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.\');if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");let o=(yl(),lr(gl)).init;await o(ze(),e,r)}},Gr=new Map,Ep=e=>{let t=ze(),r=t.stackSave();try{let o=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,o,o+4)!==0&&Re("Can\'t get session input/output count."),[t.HEAP32[o/4],t.HEAP32[o/4+1]]}finally{t.stackRestore(r)}},No=e=>{let t=ze(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},$l=async(e,t)=>{let r,o,i=ze();Array.isArray(e)?[r,o]=e:e.buffer===i.HEAPU8.buffer?[r,o]=[e.byteOffset,e.byteLength]:[r,o]=No(e);let u=0,a=0,c=0,m=[],g=[],d=[];try{if([a,m]=Bi(t),t?.externalData&&i.mountExternalData){let A=[];for(let x of t.externalData){let E=typeof x=="string"?x:x.path;A.push(Mi(typeof x=="string"?x:x.data).then(T=>{i.mountExternalData(E,T)}))}await Promise.all(A)}u=await i._OrtCreateSession(r,o,a),u===0&&Re("Can\'t create a session.");let[b,v]=Ep(u),S=[],w=[],C=[];for(let A=0;A<b;A++){let x=i._OrtGetInputName(u,A);x===0&&Re("Can\'t get an input name."),g.push(x),S.push(i.UTF8ToString(x))}for(let A=0;A<v;A++){let x=i._OrtGetOutputName(u,A);x===0&&Re("Can\'t get an output name."),d.push(x);let E=i.UTF8ToString(x);w.push(E);{let T=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[E]??"cpu";if(T!=="cpu"&&T!=="cpu-pinned"&&T!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${T}.`);C.push(T)}}let O=null;return C.some(A=>A==="gpu-buffer")&&(c=i._OrtCreateBinding(u),c===0&&Re("Can\'t create IO binding."),O={handle:c,outputPreferredLocations:C,outputPreferredLocationsEncoded:C.map(A=>po(A))}),Gr.set(u,[u,g,d,O]),[u,S,w]}catch(b){throw g.forEach(v=>i._OrtFree(v)),d.forEach(v=>i._OrtFree(v)),c!==0&&i._OrtReleaseBinding(c),u!==0&&i._OrtReleaseSession(u),b}finally{i._free(r),a!==0&&i._OrtReleaseSessionOptions(a),m.forEach(b=>i._free(b)),i.unmountExternalData?.()}},Sl=e=>{let t=ze(),r=Gr.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[o,i,u,a]=r;a&&t._OrtReleaseBinding(a.handle),t.jsepUnregisterBuffers?.(e),i.forEach(c=>t._OrtFree(c)),u.forEach(c=>t._OrtFree(c)),t._OrtReleaseSession(o),Gr.delete(e)},bl=(e,t,r,o,i)=>{if(!e){t.push(0);return}let u=ze(),a=e[0],c=e[1],m=e[3],g,d;if(a==="string"&&m==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(m==="gpu-buffer"){let S=e[2].gpuBuffer,w=zr(co(a));d=c.reduce((C,O)=>C*O,1)*w,g=u.jsepRegisterBuffer(o,i,S,d)}else{let S=e[2];if(Array.isArray(S)){d=4*S.length,g=u._malloc(d),r.push(g);let w=g/4;for(let C=0;C<S.length;C++){if(typeof S[C]!="string")throw new TypeError(`tensor data at index ${C} is not a string`);u.HEAPU32[w++]=Ve(S[C],r)}}else d=S.byteLength,g=u._malloc(d),r.push(g),u.HEAPU8.set(new Uint8Array(S.buffer,S.byteOffset,d),g)}let b=u.stackSave(),v=u.stackAlloc(4*c.length);try{let S=v/4;c.forEach(C=>u.HEAP32[S++]=C);let w=u._OrtCreateTensor(co(a),g,d,v,c.length,po(m));w===0&&Re(`Can\'t create tensor for input/output. session=${o}, index=${i}.`),t.push(w)}finally{u.stackRestore(b)}},xl=async(e,t,r,o,i,u)=>{let a=ze(),c=Gr.get(e);if(!c)throw new Error(`cannot run inference. invalid session id: ${e}`);let[m,g,d,b]=c,v=t.length,S=o.length,w=0,C=[],O=[],A=[],x=[],E=a.stackSave(),T=a.stackAlloc(v*4),N=a.stackAlloc(v*4),B=a.stackAlloc(S*4),V=a.stackAlloc(S*4);try{[w,C]=Ri(u);for(let re=0;re<v;re++)bl(r[re],O,x,e,t[re]);for(let re=0;re<S;re++)bl(i[re],A,x,e,v+o[re]);let H=T/4,J=N/4,D=B/4,j=V/4;for(let re=0;re<v;re++)a.HEAPU32[H++]=O[re],a.HEAPU32[J++]=g[t[re]];for(let re=0;re<S;re++)a.HEAPU32[D++]=A[re],a.HEAPU32[j++]=d[o[re]];if(b){let{handle:re,outputPreferredLocations:$e,outputPreferredLocationsEncoded:Ge}=b;if(g.length!==v)throw new Error(`input count from feeds (${v}) is expected to be always equal to model\'s input count (${g.length}).`);for(let ge=0;ge<v;ge++){let Te=t[ge];await a._OrtBindInput(re,g[Te],O[ge])!==0&&Re(`Can\'t bind input[${ge}] for session=${e}.`)}for(let ge=0;ge<S;ge++){let Te=o[ge];i[ge]?.[3]?a._OrtBindOutput(re,d[Te],A[ge],0)!==0&&Re(`Can\'t bind pre-allocated output[${ge}] for session=${e}.`):a._OrtBindOutput(re,d[Te],0,Ge[Te])!==0&&Re(`Can\'t bind output[${ge}] to ${$e[ge]} for session=${e}.`)}}let se;b?se=await a._OrtRunWithBinding(m,b.handle,S,B,w):se=await a._OrtRun(m,N,T,v,V,S,B,w),se!==0&&Re("failed to call OrtRun().");let be=[];for(let re=0;re<S;re++){let $e=a.HEAPU32[B/4+re];if($e===A[re]){be.push(i[re]);continue}let Ge=a.stackSave(),ge=a.stackAlloc(4*4),Te=!1,pe,ve=0;try{a._OrtGetTensorData($e,ge,ge+4,ge+8,ge+12)!==0&&Re(`Can\'t access output tensor data on index ${re}.`);let Me=ge/4,Ke=a.HEAPU32[Me++];ve=a.HEAPU32[Me++];let F=a.HEAPU32[Me++],oe=a.HEAPU32[Me++],he=[];for(let ke=0;ke<oe;ke++)he.push(a.HEAPU32[F/4+ke]);a._OrtFree(F);let Je=he.reduce((ke,Le)=>ke*Le,1);pe=ut(Ke);let ot=b?.outputPreferredLocations[o[re]];if(pe==="string"){if(ot==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let ke=[],Le=ve/4;for(let Tt=0;Tt<Je;Tt++){let Et=a.HEAPU32[Le++],Wt=Tt===Je-1?void 0:a.HEAPU32[Le]-Et;ke.push(a.UTF8ToString(Et,Wt))}be.push([pe,he,ke,"cpu"])}else if(ot==="gpu-buffer"&&Je>0){let ke=a.jsepGetBuffer(ve),Le=zr(Ke);if(Le===void 0||!Di(pe))throw new Error(`Unsupported data type: ${pe}`);Te=!0,be.push([pe,he,{gpuBuffer:ke,download:a.jsepCreateDownloader(ke,Je*Le,pe),dispose:()=>{a._OrtReleaseTensor($e)}},"gpu-buffer"])}else{let ke=bn(pe),Le=new ke(Je);new Uint8Array(Le.buffer,Le.byteOffset,Le.byteLength).set(a.HEAPU8.subarray(ve,ve+Le.byteLength)),be.push([pe,he,Le,"cpu"])}}finally{a.stackRestore(Ge),pe==="string"&&ve&&a._free(ve),Te||a._OrtReleaseTensor($e)}}return b&&a._OrtClearBoundOutputs(b.handle),be}finally{a.stackRestore(E),O.forEach(H=>a._OrtReleaseTensor(H)),A.forEach(H=>a._OrtReleaseTensor(H)),x.forEach(H=>a._free(H)),w!==0&&a._OrtReleaseRunOptions(w),C.forEach(H=>a._free(H))}},_l=e=>{let t=ze(),r=Gr.get(e);if(!r)throw new Error("invalid session id");let o=r[0],i=t._OrtEndProfiling(o);i===0&&Re("Can\'t get an profile file name."),t._OrtFree(i)},Cl=e=>{let t=[];for(let r of e){let o=r[2];!Array.isArray(o)&&"buffer"in o&&t.push(o.buffer)}return t};self.onmessage=e=>{let{type:t,in:r}=e.data;try{switch(t){case"init-wasm":ki(r.wasm).then(()=>{wl(r).then(()=>{postMessage({type:t})},o=>{postMessage({type:t,err:o})})},o=>{postMessage({type:t,err:o})});break;case"init-ep":{let{epName:o,env:i}=r;vl(i,o).then(()=>{postMessage({type:t})},u=>{postMessage({type:t,err:u})});break}case"copy-from":{let{buffer:o}=r,i=No(o);postMessage({type:t,out:i});break}case"create":{let{model:o,options:i}=r;$l(o,i).then(u=>{postMessage({type:t,out:u})},u=>{postMessage({type:t,err:u})});break}case"release":Sl(r),postMessage({type:t});break;case"run":{let{sessionId:o,inputIndices:i,inputs:u,outputIndices:a,options:c}=r;xl(o,i,u,a,new Array(a.length).fill(null),c).then(m=>{m.some(g=>g[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:m},Cl(m))},m=>{postMessage({type:t,err:m})});break}case"end-profiling":_l(r),postMessage({type:t});break;default:}}catch(o){postMessage({type:t,err:o})}};})();\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n'});var kn,cr,ei,Za,Ja,il,al,io,ao,t$,Xa,d0,c0,f0,p0,h0,m0,g0,sl=R(()=>{"use strict";Ct();u0();ro();kn=()=>!!xe.wasm.proxy&&typeof document<"u",ei=!1,Za=!1,Ja=!1,al=new Map,io=(r,e)=>{let n=al.get(r);n?n.push(e):al.set(r,[e])},ao=()=>{if(ei||!Za||Ja||!cr)throw new Error("worker not ready")},t$=r=>{switch(r.data.type){case"init-wasm":ei=!1,r.data.err?(Ja=!0,il[1](r.data.err)):(Za=!0,il[0]());break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let e=al.get(r.data.type);r.data.err?e.shift()[1](r.data.err):e.shift()[0](r.data.out);break}default:}},Xa=typeof document<"u"?document?.currentScript?.src:void 0,d0=async()=>{if(!Za){if(ei)throw new Error("multiple calls to 'initWasm()' detected.");if(Ja)throw new Error("previous call to 'initWasm()' failed.");if(ei=!0,kn())return xe.wasm.wasmPaths===void 0&&Xa&&Xa.indexOf("blob:")!==0&&(xe.wasm.wasmPaths=Xa.substr(0,+Xa.lastIndexOf("/")+1)),new Promise((r,e)=>{cr?.terminate();let n=URL.createObjectURL(new Blob([l0()],{type:"text/javascript"}));cr=new Worker(n,{name:"ort-wasm-proxy-worker"}),cr.onerror=o=>e(o),cr.onmessage=t$,URL.revokeObjectURL(n),il=[r,e];let t={type:"init-wasm",in:xe};cr.postMessage(t)});try{await Cm(xe.wasm),await t0(xe),Za=!0}catch(r){throw Ja=!0,r}finally{ei=!1}}},c0=async r=>{if(kn())return ao(),new Promise((e,n)=>{io("init-ep",[e,n]);let t={type:"init-ep",in:{epName:r,env:xe}};cr.postMessage(t)});await r0(xe,r)},f0=async r=>kn()?(ao(),new Promise((e,n)=>{io("copy-from",[e,n]);let t={type:"copy-from",in:{buffer:r}};cr.postMessage(t,[r.buffer])})):ol(r),p0=async(r,e)=>{if(kn()){if(e?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return ao(),new Promise((n,t)=>{io("create",[n,t]);let o={type:"create",in:{model:r,options:e}},i=[];r instanceof Uint8Array&&i.push(r.buffer),cr.postMessage(o,i)})}else return n0(r,e)},h0=async r=>{if(kn())return ao(),new Promise((e,n)=>{io("release",[e,n]);let t={type:"release",in:r};cr.postMessage(t)});o0(r)},m0=async(r,e,n,t,o,i)=>{if(kn()){if(n.some(s=>s[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(o.some(s=>s))throw new Error("pre-allocated output tensor is not supported for proxy.");return ao(),new Promise((s,a)=>{io("run",[s,a]);let u=n,l={type:"run",in:{sessionId:r,inputIndices:e,inputs:u,outputIndices:t,options:i}};cr.postMessage(l,s0(u))})}else return i0(r,e,n,t,o,i)},g0=async r=>{if(kn())return ao(),new Promise((e,n)=>{io("end-profiling",[e,n]);let t={type:"end-profiling",in:r};cr.postMessage(t)});a0(r)}});var b0,r$,Qa,y0=R(()=>{"use strict";Ct();sl();ut();ku();b0=(r,e)=>{switch(r.location){case"cpu":return[r.type,r.dims,r.data,"cpu"];case"gpu-buffer":return[r.type,r.dims,{gpuBuffer:r.gpuBuffer},"gpu-buffer"];default:throw new Error(`invalid data location: ${r.location} for ${e()}`)}},r$=r=>{switch(r[3]){case"cpu":return new Tt(r[0],r[2],r[1]);case"gpu-buffer":{let e=r[0];if(!Oa(e))throw new Error(`not supported data type: ${e} for deserializing GPU tensor`);let{gpuBuffer:n,download:t,dispose:o}=r[2];return Tt.fromGpuBuffer(n,{dataType:e,dims:r[1],download:t,dispose:o})}default:throw new Error(`invalid data location: ${r[3]}`)}},Qa=class{async fetchModelAndCopyToWasmMemory(e){return f0(await Ko(e))}async loadModel(e,n){Qt();let t;typeof e=="string"?typeof process<"u"&&process.versions&&process.versions.node?t=await Ko(e):t=await this.fetchModelAndCopyToWasmMemory(e):t=e,[this.sessionId,this.inputNames,this.outputNames]=await p0(t,n),er()}async dispose(){return h0(this.sessionId)}async run(e,n,t){Qt();let o=[],i=[];Object.entries(e).forEach(m=>{let b=m[0],y=m[1],x=this.inputNames.indexOf(b);if(x===-1)throw new Error(`invalid input '${b}'`);o.push(y),i.push(x)});let s=[],a=[];Object.entries(n).forEach(m=>{let b=m[0],y=m[1],x=this.outputNames.indexOf(b);if(x===-1)throw new Error(`invalid output '${b}'`);s.push(y),a.push(x)});let u=o.map((m,b)=>b0(m,()=>`input "${this.inputNames[i[b]]}"`)),l=s.map((m,b)=>m?b0(m,()=>`output "${this.outputNames[a[b]]}"`):null),d=await m0(this.sessionId,i,u,a,l,t),h={};for(let m=0;m<d.length;m++)h[this.outputNames[a[m]]]=s[m]??r$(d[m]);return er(),h}startProfiling(){}endProfiling(){g0(this.sessionId)}}});var n$,es,v0=R(()=>{"use strict";Ct();sl();y0();n$=()=>{if((typeof xe.wasm.initTimeout!="number"||xe.wasm.initTimeout<0)&&(xe.wasm.initTimeout=0),typeof xe.wasm.simd!="boolean"&&(xe.wasm.simd=!0),typeof xe.wasm.proxy!="boolean"&&(xe.wasm.proxy=!1),typeof xe.wasm.trace!="boolean"&&(xe.wasm.trace=!1),typeof xe.wasm.numThreads!="number"||!Number.isInteger(xe.wasm.numThreads)||xe.wasm.numThreads<=0){let r=typeof navigator>"u"?(void 0)().length:navigator.hardwareConcurrency;xe.wasm.numThreads=Math.min(4,Math.ceil((r||1)/2))}},es=class{async init(e){n$(),await d0(),await c0(e)}async createInferenceSessionHandler(e,n){let t=new Qa;return await t.loadModel(e,n),Promise.resolve(t)}}});var w0={};gn(w0,{wasmBackend:()=>o$});var o$,x0=R(()=>{"use strict";v0();o$=new es});Ct();Ct();Ct();var dd="1.17.0";var FL=gs;{let r=(mm(),Xr(hm)).onnxjsBackend;Zr("webgl",r,-10)}{let r=(x0(),Xr(w0)).wasmBackend;Zr("webgpu",r,5),Zr("webnn",r,5),Zr("cpu",r,10),Zr("wasm",r,10)}Object.defineProperty(xe.versions,"web",{value:dd,enumerable:!0});export{D0 as InferenceSession,Di as TRACE,Qt as TRACE_FUNC_BEGIN,er as TRACE_FUNC_END,Tt as Tensor,R0 as TrainingSession,FL as default,xe as env,Zr as registerBackend};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/*! Bundled license information:

long/index.js:
  (**
   * @license
   * Copyright 2009 The Closure Library Authors
   * Copyright 2020 Daniel Wirtz / The long.js Authors.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
//# sourceMappingURL=ort.all.min.js.map
