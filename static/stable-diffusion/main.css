 :root {
  --bg: #000000;
  --transition: 0.25s;
  --spark: 1.8s;
  --sb-track-color: rgba(123, 59, 252, 0.1);
  --sb-track-color-01: rgba(123, 59, 252, 0.01);
  --sb-track-color-5: rgba(123, 59, 252, 0.5);
  --sb-track-color-2: rgba(123, 59, 252, 0.6);
  --sb-thumb-color: rgba(123, 59, 252, 1);
  --sb-size: 5px;
}

* {
  box-sizing: border-box;
}

body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: var(--bg);
    color: #fff;
}

body {
    scrollbar-width: auto;
    scrollbar-color: var(--sb-track-color), transparent;
}

.log-output::-webkit-scrollbar {
    width: 5px !important;
    height: 5px !important;
}

.log-output::-webkit-scrollbar-track {
    background: var(--sb-track-color-01);
}

.log-output::-webkit-scrollbar-thumb {
    background-color: rgba(255, 255, 255, 0.5);
    border-radius: 10px;
    border: 5px solid transparent;
}

.log-output:hover::-webkit-scrollbar-thumb {
    background-color: var(--sb-thumb-color);
}

h1 {
    padding: 0 0 0 0;
    color: #fff
}

.container {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: 1fr;
    grid-column-gap: 0px;
    grid-row-gap: 0px;
    align-items: stretch;
}

.left {
    flex-direction: column;
    padding: 20px;
    background-color: var(--bg);
    overflow: hidden;
    color: #eceff1;
    border-right: 1px solid #eceff133;
}

.left:hover {
  background: rgba(45, 45, 45, 0.8);
}


.right {
    align-self: center;
    justify-self: center;
    color: #eceff1;
}

.input-group {
    margin-bottom: 10px;
}

.input-group label {
    display: block;
    font-weight: bold;
    margin-bottom: 5px;
}

.input-group input {
    width: 100%;
    padding: 5px;
    border: 1px solid #eceff133;
    color: #aaa;
    background-color: rgba(41, 41, 41, 0.2);
    border-radius: 5px;
}

.input-group input:focus {
    color: #fff;
    border: 1px solid #eceff155;
    outline: none;
    background-color: rgba(0, 0, 0, 0.2);
}

.button-group {
    display: flex;
    justify-content: space-between;
    margin-bottom: 10px;
}
 

button:disabled {
    --active: 0;
    cursor: not-allowed;
}

.progress-bar {
    width: 100%;
    height: 6px;
    background-color: var(--sb-track-color);
    overflow: hidden;
    border-radius: 6px;
}

.progress-bar-inner {
    height: 100%;
    background-color: var(--sb-thumb-color);
    width: 0;
    transition: width 0.3s ease-in-out;
}

.progress-bar-label {
    margin: 10px;
    font-size: 12px;
    text-align: center;
}

.log-output {
    height: 55vh;
    padding: 10px 10px;
    background-color: var(--bg);
    border: 1px solid rgba(236, 239, 241, 0.2);
    overflow-y: scroll;
    background-color: transparent;
    font-size: 13.333px;
    border-radius: 5px;
}

.log-output:hover {
    border: 1px solid rgba(236, 239, 241, 0.4);
    background-color: rgba(0, 0, 0, 0.2);
}

.canvas {
    max-width: 100%;
    max-height: 100%;
}

.loading-image {
    width: 100px;
    height: 100px;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: var(--bg);
    border: 1px solid #ccc;
}

.loading-text {
    font-size: 14px;
    color: #888;
    text-align: center;
}

.g2 {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: 1fr;
    grid-column-gap: 0px;
    grid-row-gap: 0px;
    align-items: center;
}

.p1 {
    padding: 0 1.5em;
}

.tokeninfo, #error {
    justify-self: right;
}

.tokeninfo {
    font-size: 12px;
}

#error {
    align-self: center;
}

.error {
    background-color: var(--sb-thumb-color);
    color: #fff;
    border-radius: 50px;
    padding: 6px 12px;
}

.v1 {
    height: 10vh;
    border-bottom: 1px solid #eceff133;
}

.v9 {
    height: 90vh;
}

button {
	--cut: 0.1em;
	--active: 0;
	--bg:
		radial-gradient(
			40% 50% at center 100%,
			hsl(270 calc(var(--active) * 97%) 72% / var(--active)),
			transparent
		),
		radial-gradient(
			80% 100% at center 120%,
			hsl(260 calc(var(--active) * 97%) 70% / var(--active)),
			transparent
		),
		hsl(260 calc(var(--active) * 97%) calc((var(--active) * 44%) + 12%));
	background: var(--bg);
	font-size: 1rem;
	font-weight: 500;
	border: 0;
    border-radius: 50px;
	cursor: pointer;
	padding: 0.4em 1.3em;
	display: flex;
	align-items: center;
	gap: 0.25em;
	white-space: nowrap;
	position: relative;
	box-shadow:
    0 0 calc(var(--active) * 0.6em) calc(var(--active) * 0.3em) rgba(123, 59, 252, 0.75),
		0 0.05em 0 0 hsl(260 calc(var(--active) * 97%) calc((var(--active) * 50%) + 30%)) inset,
		0 -0.05em 0 0 hsl(260 calc(var(--active) * 97%) calc(var(--active) * 60%)) inset;
	transition: box-shadow var(--transition), scale var(--transition), background var(--transition);
	scale: calc(1 + (var(--active) * 0.05));
}

button:active {
  scale: 1;
}

svg {
	overflow: visible !important;
}

.sparkle path {
	color: hsl(0 0% calc((var(--active, 0) * 70%) + var(--base)));
	transform-box: fill-box;
	transform-origin: center;
	fill: currentColor;
	stroke: currentColor;
	animation-delay: calc((var(--transition) * 1.5) + (var(--delay) * 1s));
	animation-duration: 0.6s;
	transition: color var(--transition);
}

button:is(:hover, :focus-visible) path {
	animation-name: bounce;
}

@keyframes bounce {
	35%, 65% {
		scale: var(--scale);
	}
}
.sparkle path:nth-of-type(1) {
	--scale: 0.5;
	--delay: 0.1;
	--base: 40%;
}

.sparkle path:nth-of-type(2) {
	--scale: 1;
	--delay: 0.2;
	--base: 20%;
}

.sparkle path:nth-of-type(3) {
	--scale: 1;
	--delay: 0.35;
	--base: 30%;
}

button:before {
	content: "";
	position: absolute;
	inset: -0.25em;
	z-index: -1;
	opacity: var(--active, 0);
	transition: opacity var(--transition);
}

.spark {
	position: absolute;
	inset: 0;
    border-radius: 50px;
	rotate: 0deg;
	overflow: hidden;
	mask: linear-gradient(white, transparent 50%);
	animation: flip calc(var(--spark) * 2) infinite steps(2, end);
}

@keyframes flip {
	to {
		rotate: 360deg;
	}
}

.spark:before {
	content: "";
	position: absolute;
	width: 200%;
	aspect-ratio: 1;
	top: 0%;
	left: 50%;
	z-index: -1;
	translate: -50% -15%;
	rotate: 0;
	transform: rotate(-90deg);
	opacity: calc((var(--active)) + 0.4);
	background: conic-gradient(
		from 0deg,
		transparent 0 340deg,
		white 360deg
	);
	transition: opacity var(--transition);
	animation: rotate var(--spark) linear infinite both;
}

.spark:after {
	content: "";
	position: absolute;
	inset: var(--cut);
    border-radius: 50px;
}

.backdrop {
	position: absolute;
	inset: var(--cut);
	background: var(--bg);
    border-radius: 50px;
	transition: background var(--transition);
}

@keyframes rotate {
	to {
		transform: rotate(90deg);
	}
}

@supports(selector(:has(:is(+ *)))) {
	body:has(button:is(:hover, :focus-visible)) {
		--active: 1;
		--play-state: running;
	}
	.bodydrop {
		display: none;
	}
}

button:is(:hover, :focus-visible) ~ :is(.bodydrop, .particle-pen) {
	--active: 1;
	--play-state: runnin;
}

.bodydrop {
	background: hsl(
		260
		calc(var(--active) * 97%)
		6%
	);
	position: fixed;
	inset: 0;
	z-index: -1
}



button:is(:hover, :focus-visible) {
	--active: 1;
	--play-state: running;
}


.sparkle-button {
	position: relative;
}

.particle-pen {
	position: absolute;
	width: 200%;
	aspect-ratio: 1;
	top: 50%;
	left: 50%;
	translate: -50% -50%;
	-webkit-mask: radial-gradient(white, transparent 65%);
	z-index: -1;
	opacity: var(--active, 0);
	transition: opacity var(--transition);
}

.particle {
	fill: white;
	width: calc(var(--size, 0.25) * 1rem);
	aspect-ratio: 1;
	position: absolute;
	top: calc(var(--y) * 1%);
	left: calc(var(--x) * 1%);
	opacity: var(--alpha, 1);
	animation: float-out calc(var(--duration, 1) * 1s) calc(var(--delay) * -1s) infinite linear;
	transform-origin: var(--origin-x, 1000%) var(--origin-y, 1000%);
	z-index: -1;
	animation-play-state: var(--play-state, paused);
}

.particle path {
	fill: hsl(0 0% 90%);
	stroke: none;
}

.particle:nth-of-type(even) {
	animation-direction: reverse;
}

@keyframes float-out {
	to {
		rotate: 360deg;
	}
}

.text {
	translate: 2% -6%;
	letter-spacing: 0.01ch;
	background: linear-gradient(90deg, hsl(0 0% calc((var(--active) * 100%) + 65%)), hsl(0 0% calc((var(--active) * 100%) + 26%)));
	-webkit-background-clip: text;
	color: transparent;
	transition: background var(--transition);
}

button svg {
	inline-size: 1.25em;
	translate: -25% -5%;
}